export interface IExchangeQuotePart {
    exchangeQuotePartId?: number;
    exchangeQuoteId?: number;
    itemMasterId: number;
    stockLineId?: number;
    fxRate: number;
    qty: number;
    unitSalePrice: number;
    unitCost: number;
    markUpPercentage: number;
    salesBeforeDiscount: number;
    discount: number;
    discountAmount: number;
    netSales: number;
    masterCompanyId: number;
    createdBy: string;
    createdOn: string;
    updatedBy: string;
    updatedOn: string;
    isDeleted: boolean;
    methodType: string;
    method: string;
    salesPriceExtended: number;
    markupExtended: number;
    salesDiscountExtended: number;
    netSalePriceExtended: number;
    unitCostExtended: number;
    marginAmount: number;
    marginAmountExtended: number;
    marginPercentage: number;
    conditionId: number;
    stockLineNumber: string;
    partNumber: string;
    partDescription: string;
    isOEM: boolean;
    isPMA: boolean;
    isDER: boolean;
    serialNumber: string;
    currencyDescription: string;
    conditionDescription: string;
    idNumber: string;
    salesOrderQuoteId?: number;
    isValid: boolean;
    qtyAvailable: number;
    serialType: string;
    priority: string;
    salesQuoteNumber: string;
    uom: string;
    qtyReserved?: number;
    qtyShipped?: number;
    qtyInvoiced?: number;
    invoiceNumber: string;
    invoiceDate: string;
    qtyPreviouslyShipped?: number;
    lastShippedDate: string;
    shipReference: string;
    qtyBackOrder?: number;
    taxCode: string;
    taxType: string;
    taxAmount: number;
    taxPercentage: number;
    freight: number;
    shipping: number;
    handling: number;
    misc: number;
    totalSales: number;
    rONumber: string;
    wONumber: string;
    pONumber: string;
    itar: string;
    eccn: string;
    coreDueDate: string;
    coreReturnDate: string;
    exchangeMethod: string;
    salesOrderQuotePartId?: number;
    SiteName: string;
    WarehouseName: string;
    LocationName: string;
    ShelfName: string;
    BinName: string;
    customerReference: string;
    currencyId: number;
    pmaStatus: string;
    quoteVesrion: string;
    quoteDate?: Date;
    markupPerUnit: number;
    controlNumber: string;
    grossSalePrice: number;
    grossSalePricePerUnit: number;
    notes: string;
    altOrEqType: string;
    qtyRequested: number;
    itemNo:number;

    ExchangeCurrencyId:number;
    LoanCurrencyId:number;
    ExchangeListPrice:number;
    EntryDate:Date;
    ExchangeOverhaulPrice:number;
    ExchangeCorePrice:number;
    EstOfFeeBilling:number;
    BillingStartDate:number;
    ExchangeOutrightPrice:number;
    DaysForCoreReturn:number;
    BillingIntervalDays:number
    CurrencyId:number;
    Currency:string;
    DepositeAmount:number;
    CoreDueDate:Date;
}