function _createForOfIteratorHelper(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var i=0,n=function(){};return{s:n,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:n}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,a=!0,s=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return a=e.done,e},e:function(e){s=!0,o=e},f:function(){try{a||null==r.return||r.return()}finally{if(s)throw o}}}}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,i=new Array(t);r<t;r++)i[r]=e[r];return i}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[27,32],{"0kbX":function(e,t,r){"use strict";r.r(t),t.default='\r\n<div>\r\n\r\n    <div class="page-content">\r\n\r\n        <div class="right_col" role="main">\r\n            <div class="x_content">\r\n                <div class="card">\r\n                    \x3c!-- <div class="card-header">\r\n                        <nav aria-label="breadcrumb">\r\n                            <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n                                <li class="breadcrumb-item active" aria-current="page">Work Order Settngs</li>\r\n                                <li class="breadcrumb-item" aria-current="page">Work Order Settngs List</li>\r\n                            </ol>\r\n                    </nav>\r\n                    </div> --\x3e\r\n                    \x3c!-- <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h4 class="po-head" style="padding: 0px 10px;">List of Work Order settings </h4>\r\n                            <a (click)="AddPage()" matTooltipPosition="above"\r\n                             matTooltip="Create New Workflow" class="plusicon-cstm ">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                                <div class="row">\r\n                                  <div class="col">\r\n                                    <h4 class="new-card-heading">List of Work Order Settings</h4>\r\n                                  </div>\r\n                                  <div>\r\n                                    <button\r\n                                       type="button"\r\n                                       class="btn-sm new-btn-primary"\r\n                                       (click)="AddPage()">\r\n                                       Create New Settings\r\n                                    </button>\r\n                                 </div>\r\n                            \r\n                                </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                        \r\n                       \r\n                                <p-table #dt \r\n                                [value]="workflowList" \r\n                                class="rpo-table-cstm rro-table-cstm ptable-f10"\r\n                                [rows]="10"  [first]="0"\r\n                                [paginator]="true" \r\n                                [pageLinks]="3" \r\n                                [rowsPerPageOptions]="[10,20,50,100]" \r\n                                [columns]="selectedGridColumns" \r\n                                [metaKeySelection]="true" \r\n                                selectionMode="multiple" \r\n                                [metaKeySelection]="true"\r\n                                [scrollable]="true" \r\n                                scrollHeight="450px" \r\n                                \r\n                                [(selection)]="selectedGridColumn" \r\n                                [resizableColumns]="true" \r\n                                [reorderableColumns]="true">\r\n                                    <ng-template pTemplate="caption">\r\n                                        \x3c!-- <div style="text-align: right; min-height: 30px;"> --\x3e\r\n                                            <div class="row">\r\n                                                <div class="col">\r\n                                            <p-multiSelect [options]="gridColumns" [(ngModel)]="selectedGridColumns" optionLabel="header"\r\n                                                           selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n                                          \r\n                                                        </div>\r\n                                                        <div class="col">\r\n                                                        <div style="width: auto !important; float: right;"\r\n                                                         class="inner-addon right-addon w50 inline-block g-filter-search-cstm">        \r\n                                        \r\n                                                <i class="fa fa-search"></i>\r\n                                                <input type="text" pInputText size="50" class="form-control" (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter" style="height: 28px !important;">\r\n                                            </div>\r\n                                            </div>\r\n                                            </div>\r\n                                            \x3c!--<button type="button" class="btn btn-primary" pButton icon="fa-download" iconPos="left" label="Export Data" matTooltip="Download Data" matTooltipPosition="above" (click)="dt.exportCSV()" style="padding: 5px 12px !important;"></button>\r\n                    <button type="button" class="btn btn-primary" pButton icon="fa-download" iconPos="left" label="Export Selected Data" matTooltip="Download Selected Data" matTooltipPosition="above" (click)="dt.exportCSV({selectionOnly:true})" style="padding: 5px 12px !important;"></button>--\x3e\r\n\r\n                                        \x3c!-- </div> --\x3e\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="colgroup" let-columns>\r\n                                        <colgroup>\r\n                                            <col *ngFor="let col of columns" style="width:130px">\r\n                                        </colgroup>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th style="width:auto" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                                {{col.header}}\r\n                                                <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                            </th>\r\n                                            <th style="width:200px;position:sticky">Actions</th>\r\n                                            \x3c!--<th></th>--\x3e\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                                <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field, col.filterMatchMode)">\r\n                                            </th>\r\n                                            <th style="width:200px;position:sticky"></th>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                                        <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openEdit(rowData)">\r\n                                            <td style="width:auto" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                                {{rowData[col.field]}}\r\n                                            </td>\r\n\r\n                                            <td class="action-icons-cstm" style="width:200px">\r\n                                                <div>\r\n                                                    <span data-toggle="modal"><a class="btn nobg"\r\n                                                        (click)="edit(rowData)" matTooltip="Edit"\r\n                                                         matTooltipPosition="above"><i\r\n                                                          class="fa fa-pencil"></i></a>\r\n                                                    </span>\r\n\r\n                                                    \x3c!-- <button class="btn-edit"\r\n                                                            mat-icon-button\r\n                                                            (click)="edit(rowData)"\r\n                                                            matTooltip="Edit"\r\n                                                            data-dismiss="modal">\r\n                                                        <mat-icon>edit</mat-icon>\r\n                                                    </button> --\x3e\r\n\r\n                                                    <span data-toggle="modal" data-target="#history"><a class="btn nobg"\r\n                                                        (click)="getAuditHistoryById(rowData)" matTooltip="History" matTooltipPosition="above"><i\r\n                                                          class="fa fa-history"></i></a></span>\r\n                                                    \x3c!-- <button class="btn-history" mat-icon-button\r\n                                                         matTooltip="History" data-toggle="tooltip"\r\n                                                          matTooltipPosition="above" data-target="#history" \r\n                                                          data-toggle="modal"\r\n                                                           (click)="getAuditHistoryById(rowData)">\r\n                                                        <mat-icon color="green">history</mat-icon>\r\n                                                    </button> --\x3e\r\n                                                </div>\r\n                                                \x3c!--<span data-toggle="modal" data-target="#history">\r\n                            <a data-toggle="tooltip" matTooltipPosition="above" matTooltip="History" (click)="getAuditHistoryById(rowData)" tooltipPosition="bottom" title="" class="btn btn-success nobg" data-original-title="History">\r\n                                <i class="fa fa-history"></i>\r\n                            </a>\r\n                        </span>--\x3e\r\n                                            </td>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                </p-table>\r\n                          \r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    \r\n\r\n    \r\n\r\n    \r\n\r\n    <div class="modal fade bd-example-modal-xl" tabindex="-1" id="history" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-xl">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n                    <h4 class="modal-title">History of Work order settings</h4>\r\n                </div>\r\n                <div class="modal-body" *ngIf="auditHistory">\r\n                    \r\n                    <table class="table table-bordered table-fixed wfl-table-popup-cstm" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>WorkOrderType</th>\r\n                                <th>Prefix</th>\r\n                                <th>Sufix</th>\r\n                                \x3c!-- <th>Default Scope</th> --\x3e\r\n                                <th>Default Priority</th>\r\n                                <th>Start code</th>\r\n                                \x3c!-- <th>RecivingListDefaultRB</th> --\x3e\r\n                                <th>Default Condition</th>\r\n                                \x3c!-- <th>Default Site</th> --\x3e\r\n                                \x3c!-- <th>Default Wearhouse</th> --\x3e\r\n                                \x3c!-- <th>Default Location</th> --\x3e\r\n                                \x3c!-- <th>Default Shelf</th> --\x3e\r\n\r\n                                <th>Default Stage Code</th>\r\n                                <th>Default Status</th>\r\n                                \x3c!-- <th>WOListDefaultRB</th> --\x3e\r\n                                <th>Teardown Types</th>\r\n                                <th>Last Updated By</th>\r\n                                <th>Last Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody class="audithistory-cstm">\r\n                            \x3c!--*ngIf="auditHistory.length> 0"--\x3e\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'workOrderType\', audit.workOrderType)  ? \'black\' : \'red\'  }">{{audit.workOrderType}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'prefix\', audit.prefix)  ? \'black\' : \'red\'  }">{{audit.prefix}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'sufix\', audit.sufix)  ? \'black\' : \'red\'  }">{{audit.sufix}}</td>\r\n                                \x3c!-- <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'defaultScope\', audit.defaultScope)  ? \'black\' : \'red\'  }">{{audit.defaultScope}}</td> --\x3e\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'defaultPriority\', audit.defaultPriority)  ? \'black\' : \'red\'  }">{{audit.defaultPriority}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'startCode\', audit.startCode)  ? \'black\' : \'red\'  }">{{audit.startCode}}</td>\r\n                                \x3c!-- <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'recivingListDefaultRB\', audit.recivingListDefaultRB)  ? \'black\' : \'red\'  }">{{audit.recivingListDefaultRB}}</td> --\x3e\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'defaultConditon\', audit.defaultConditon)  ? \'black\' : \'red\'  }">{{audit.defaultConditon}}</td>\r\n                                \x3c!-- <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'defaultSite\', audit.defaultSite)  ? \'black\' : \'red\'  }">{{audit.defaultSite}}</td> --\x3e\r\n                                \x3c!-- <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'defaultWarehouse\', audit.defaultWarehouse)  ? \'black\' : \'red\'  }">{{audit.defaultWarehouse}}</td> --\x3e\r\n                                \x3c!-- <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'defaultLocation\', audit.defaultLocation)  ? \'black\' : \'red\'  }">{{audit.defaultLocation}}</td> --\x3e\r\n                                \x3c!-- <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'defaultShelf\', audit.defaultShelf)  ? \'black\' : \'red\'  }">{{audit.defaultShelf}}</td> --\x3e\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'defaultStageCode\', audit.defaultStageCode)  ? \'black\' : \'red\'  }">{{audit.defaultStageCode}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'defaultStatus\', audit.defaultStatus)  ? \'black\' : \'red\'  }">{{audit.defaultStatus}}</td>\r\n                                \x3c!-- <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'woListDefaultRB\', audit.woListDefaultRB)  ? \'black\' : \'red\'  }">{{audit.woListDefaultRB}}</td> --\x3e\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'tearDownTypes\', audit.tearDownTypes)  ? \'black\' : \'red\'  }">{{audit.tearDownTypes}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'updatedBy\', audit.updatedBy)  ? \'black\' : \'red\'  }">{{audit.updatedBy}}</td>\r\n\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-info" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n'},"2spE":function(e,t,r){"use strict";r.r(t),t.default="label {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.inner-addon .ui-autocomplete-input {\n  width: 100% !important;\n}\n\n.partsList-table-tr th {\n  min-width: 80px;\n}\n\n.addpn-btn {\n  padding: 5px 10px !important;\n  font-size: 13px;\n}\n\na.fa.fa-plus-circle {\n  color: green !important;\n}\n\n.partsList-modal .form-group {\n  margin-bottom: 6px !important;\n}\n\n.rpo-table-cstm th {\n  padding: 8px 5px !important;\n}\n\n.child-add-icon {\n  cursor: pointer;\n  margin: 2px -12px;\n}\n\n.child-add-icon a:before, .child-add-icon i:before {\n  font-size: 16px;\n}\n\ntable th {\n  padding: 4px;\n}\n\ntable td {\n  padding: 4px;\n}\n\n.card-timelife {\n  margin-bottom: 10px;\n  margin-top: 10px;\n}\n\n.card-timelife .card-body {\n  padding: 4px 10px 0px !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n\n  .col-md-6 .col-md-6 {\n    max-width: 47%;\n    margin-right: 15px;\n  }\n}"},"4AF8":function(e,t,r){"use strict";r.r(t),t.default="label {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.inner-addon .ui-autocomplete-input {\n  width: 100% !important;\n}\n\n.head_lis {\n  font-size: 16px;\n  margin: 0px 0 12px;\n  font-weight: 500;\n  color: #007bff;\n}\n\n.partsList-table-tr th {\n  min-width: 80px;\n}\n\n.addpn-btn {\n  padding: 5px 10px !important;\n  font-size: 13px;\n}\n\na.fa.fa-plus-circle {\n  color: green !important;\n}\n\n.partsList-modal .form-group {\n  margin-bottom: 6px !important;\n}\n\n.rpo-table-cstm th {\n  padding: 8px 5px !important;\n}\n\n.child-add-icon {\n  cursor: pointer;\n  margin: 2px -12px;\n}\n\n.child-add-icon a:before, .child-add-icon i:before {\n  font-size: 16px;\n}\n\ntable th {\n  padding: 4px;\n}\n\ntable td {\n  padding: 4px;\n}\n\n.card-timelife {\n  margin-bottom: 10px;\n  margin-top: 10px;\n}\n\n.card-timelife .card-body {\n  padding: 4px 10px 0px !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n\n  .col-md-6 .col-md-6 {\n    max-width: 47%;\n    margin-right: 15px;\n  }\n}"},"4cpj":function(e,t,r){"use strict";r.r(t);var i=r("mrSG"),n=r("8Y7J"),o=r("u9T3"),a=r("s7LF"),s=r("TSSN"),l=r("1+r1"),d=r("UPO+"),c=r("iInd"),u=function e(){_classCallCheck(this,e)};u=i.b([Object(n.Component)({selector:"app-work-order-settings",template:i.c(r("UpA+")).default,styles:[i.c(r("Gg+f")).default]})],u);var p=r("sYxu"),h=r("3LUQ"),m=r("lGQG"),g=r("0zL+"),b=r("TeDh"),f=r("NRZ7"),v=r("+yGV"),y=r("OlR4"),w=r("XNiG"),k=r("1G5W"),x=r("SVse"),S=r("435O"),C=r("JPLv"),O=r("wKas"),D=r("UUzU"),F=function(){function e(t,r,i,n,o,a,s,l,d,c,u,p,h,m){_classCallCheck(this,e),this.workOrderService=t,this.commonService=r,this.customerService=i,this.binService=n,this.siteService=o,this.conditionService=a,this.datePipe=s,this._actRoute=l,this.receivingCustomerWorkOrderService=d,this.authService=c,this.router=u,this.alertService=p,this.stocklineService=h,this.configurations=m,this.receivingForm={},this.isEditMode=!1,this.onDestroy$=new w.a,this.breadcrumbs=[{label:"Admin"},{label:"Work Order Settings"},{label:"Create Work Order Settings"}],this.workOrderViewList=[{label:"MPN View",value:1,woListViewRBId:1},{label:"WO View",value:2,woListViewRBId:2}],this.workOrderStatusRbList=[{label:"Open",value:3,woListStatusRBId:3},{label:"Closed",value:4,woListStatusRBId:4},{label:"Canceled",value:5,woListStatusRBId:5},{label:"All",value:6,woListStatusRBId:6}],this.allCustomersList=[],this.allVendorsList=[],this.allCompanyList=[],this.customersList=[],this.vendorsList=[],this.companyList=[],this.allEmployeeList=[],this.employeeNames=[],this.allCustomersInfo=[],this.customerNamesInfo=[],this.customerCodesInfo=[],this.allPartnumbersList=[],this.partNumbersInfo=[],this.allWareHouses=[],this.allLocations=[],this.allShelfs=[],this.allBins=[],this.allSites=[],this.businessUnitList=[],this.divisionList=[],this.departmentList=[],this.allConditionInfo=[],this.customerContactList=[],this.customerContactInfo=[],this.customerPhoneInfo=[],this.allTagTypes=[],this.readonly=!0,this.currentDate=new Date,this.disableMagmtStruct=!0,this.sourceTimeLife={},this.disableCondition=!0,this.disableSite=!0,this.formData=new FormData,this.customerWorkDocumentsList=[],this.selectedTearDownTypes=[],this.moduleName="WO Settings",this.dropdownSettings={},this.receivingForm.receivingNumber="Creating",this.receivingForm.workOrderTypeId=0,this.receivingForm.prefix,this.receivingForm.sufix,this.receivingForm.startCode,this.receivingForm.recivingListDefaultRB=0,this.receivingForm.woListDefaultRB=0,this.receivingForm.defaultConditionId=0,this.receivingForm.defaultSiteId=0,this.receivingForm.defaultWearhouseId=0,this.receivingForm.defaultLocationId=0,this.receivingForm.defaultShelfId=0,this.receivingForm.defaultStageCodeId=0,this.receivingForm.defaultScopeId=0,this.receivingForm.defaultStatusId=0,this.receivingForm.defaultPriorityId=0,this.receivingForm.masterCompanyId=0,this.receivingForm.createdBy=0,this.receivingForm.updatedBy=0,this.receivingForm.receivedDate=new Date}return _createClass(e,[{key:"ngOnInit",value:function(){this.dropdownSettings={singleSelection:!1,idField:"value",textField:"label",selectAllText:"Select All",unSelectAllText:"UnSelect All",itemsShowLimit:1,allowSearchFilter:!1},this.loadReceivingListRB(),this.loadWOListRB(),this.loadSiteData(),this.loadConditionData(),this.getAllWorkOrderTypes(),this.getAllWorkOrderStatus(),this.getAllWorkScpoes(),this.getAllWorkOrderStages(),this.getAllPriority(),this.getworblist(),this.getAllTearDownTypes(),this.receivingCustomerWorkId=this._actRoute.snapshot.params.id}},{key:"getworblist",value:function(){this.workOrderService.getworblist().subscribe((function(e){}))}},{key:"loadSiteData",value:function(){var e=this;this.siteService.getSiteList().subscribe((function(t){e.allSites=t[0]}))}},{key:"loadConditionData",value:function(){var e=this;this.conditionService.getConditionList().subscribe((function(t){e.allConditionInfo=t[0],e.isEditMode||e.allConditionInfo.map((function(t){"AR"==t.description&&(e.receivingForm.defaultConditionId=t.conditionId)}))}))}},{key:"getAllTearDownTypes",value:function(){var e=this;this.commonService.smartDropDownList("TeardownType","TeardownTypeId","Name").subscribe((function(t){e.tearDownTypes=t,e.receivingCustomerWorkId&&(e.isEditMode=!0,e.getReceivingCustomerDataonEdit(e.receivingCustomerWorkId))}),(function(t){e.errorHandling(t)}))}},{key:"getReceivingCustomerDataonEdit",value:function(e){var t=this;this.readonly=!1,this.receivingCustomerWorkOrderService.getworkflowbyid(1,e).subscribe((function(e){t.receivingForm=Object.assign({},e[0]);var r=e[0].tearDownTypes.split(",");t.tearDownTypes.forEach((function(e){r.forEach((function(r){r==e.value&&(t.selectedTearDownTypes=[].concat(_toConsumableArray(t.selectedTearDownTypes),[e]))}))})),t.receivingForm.defaultSiteId&&t.siteValueChange(t.receivingForm.defaultSiteId),t.receivingForm.defaultWearhouseId&&t.wareHouseValueChange(t.receivingForm.defaultWearhouseId),t.receivingForm.defaultLocationId&&t.locationValueChange(t.receivingForm.defaultLocationId),t.receivingForm.defaultShelfId&&t.shelfValueChange(t.receivingForm.defaultShelfId)}),(function(e){t.errorHandling(e)}))}},{key:"getSiteDetailsOnEdit",value:function(e){this.siteValueChange(e.siteId),this.wareHouseValueChange(e.warehouseId),this.locationValueChange(e.locationId),this.shelfValueChange(e.binId),this.receivingForm.warehouseId=e.warehouseId,this.receivingForm.locationId=e.locationId,this.receivingForm.shelfId=e.shelfId,this.receivingForm.binId=e.binId}},{key:"siteValueChange",value:function(e){var t=this;this.allWareHouses=[],this.allLocations=[],this.allShelfs=[],this.allBins=[],this.receivingForm.warehouseId=0,this.receivingForm.locationId=0,this.receivingForm.shelfId=0,this.receivingForm.binId=0,this.binService.getWareHouseDate(e).subscribe((function(e){t.allWareHouses=e})),this.onChangeSiteName()}},{key:"onChangeSiteName",value:function(){0!=this.receivingForm.siteId?this.disableSite=!1:this.disableSite=!0}},{key:"wareHouseValueChange",value:function(e){var t=this;this.allLocations=[],this.allShelfs=[],this.allBins=[],this.receivingForm.locationId=0,this.receivingForm.shelfId=0,this.receivingForm.binId=0,this.binService.getLocationDate(e).subscribe((function(e){t.allLocations=e}))}},{key:"locationValueChange",value:function(e){var t=this;this.allShelfs=[],this.allBins=[],this.receivingForm.shelfId=0,this.receivingForm.binId=0,this.binService.getShelfDate(e).subscribe((function(e){t.allShelfs=e}),(function(e){t.errorHandling(e)}))}},{key:"shelfValueChange",value:function(e){var t=this;this.allBins=[],this.receivingForm.binId=0,this.binService.getBinDataById(e).subscribe((function(e){t.allBins=e}),(function(e){t.errorHandling(e)}))}},{key:"resetSerialNoTimeLife",value:function(){this.receivingForm.isSkipSerialNo=!1,this.receivingForm.serialNumber="",this.receivingForm.isSkipTimeLife=!1,this.receivingForm.timeLifeDate=null,this.receivingForm.timeLifeOrigin="",this.sourceTimeLife={}}},{key:"onSelectCondition",value:function(){0!=this.receivingForm.conditionId?this.disableCondition=!1:this.disableCondition=!0}},{key:"getTearDownTypes",value:function(){var e="";return this.selectedTearDownTypes.forEach((function(t){""==e?e=t.value:e+=","+t.value})),e}},{key:"onSaveCustomerReceiving",value:function(){var e=this,t=Object.assign({},this.receivingForm,{tearDownTypes:this.getTearDownTypes(),createdBy:this.userName,updatedBy:this.userName,masterCompanyId:1});this.isEditMode?this.receivingCustomerWorkOrderService.updateAction(t).subscribe((function(t){e.alertService.showMessage("Success","Updated Work order setting Successfully",h.d.success),e.router.navigateByUrl("/workordersettingsmodule/workordersettings/app-work-order-settings-list")}),(function(t){e.errorHandling(t)})):this.receivingCustomerWorkOrderService.newAction(t).subscribe((function(t){e.alertService.showMessage("Success","Saved Work order setting Successfully",h.d.success),e.router.navigateByUrl("/workordersettingsmodule/workordersettings/app-work-order-settings-list")}),(function(t){e.errorHandling(t)}))}},{key:"getAllWorkScpoes",value:function(){var e=this;this.workOrderService.getAllWorkScopes().pipe(Object(k.a)(this.onDestroy$)).subscribe((function(t){e.workScopesList=t.map((function(e){return{label:e.description,value:e.workScopeId}}))}),(function(t){e.errorHandling(t)}))}},{key:"loadReceivingListRB",value:function(){var e=this;this.commonService.smartDropDownList("ReceivingListRB","ReceivingListRBId","Name").subscribe((function(t){e.ReceivingListRBList=t}),(function(t){e.errorHandling(t)}))}},{key:"loadWOListRB",value:function(){var e=this;this.commonService.smartDropDownList("WOListRB","WOListRBId","Name").subscribe((function(t){e.WOListRBList=t.map((function(e){return{label:e.label,value:e.value}}),(function(t){e.errorHandling(t)}))}))}},{key:"getAllWorkOrderStages",value:function(){var e=this;this.workOrderService.getWorkOrderStageAndStatus().pipe(Object(k.a)(this.onDestroy$)).subscribe((function(t){e.workOrderOriginalStageList=t,e.workOrderStagesList=t,e.isEditMode||e.workOrderStagesList.map((function(t){"WO Opened"==t.workOrderStage&&(e.receivingForm.defaultStageCodeId=t.workOrderStageId)}))}),(function(t){e.errorHandling(t)}))}},{key:"getAllPriority",value:function(){var e=this;this.commonService.smartDropDownList("Priority","PriorityId","Description").pipe(Object(k.a)(this.onDestroy$)).subscribe((function(t){e.priorityList=t,e.isEditMode||e.priorityList.map((function(t){"Routine"==t.label&&(e.receivingForm.defaultPriorityId=t.value)}))}),(function(t){e.errorHandling(t)}))}},{key:"getAllWorkOrderTypes",value:function(){var e=this;this.workOrderService.getAllWorkOrderTypes().pipe(Object(k.a)(this.onDestroy$)).subscribe((function(t){e.workOrderTypes=t}),(function(t){e.errorHandling(t)}))}},{key:"getAllWorkOrderStatus",value:function(){var e=this;this.commonService.smartDropDownList("WorkOrderStatus","ID","Description").pipe(Object(k.a)(this.onDestroy$)).subscribe((function(t){e.workOrderStatusList=t.sort((function(e,t){return e.value-t.value}))}),(function(t){e.errorHandling(t)}))}},{key:"errorHandling",value:function(e){var t=this;e.error.errors?e.error.errors.forEach((function(e){t.alertService.showMessage(t.moduleName,e.message,h.d.error)})):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",h.d.error)}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();F.ctorParameters=function(){return[{type:O.a},{type:y.a},{type:g.a},{type:f.a},{type:v.a},{type:b.a},{type:x.DatePipe},{type:c.ActivatedRoute},{type:D.a},{type:m.a},{type:c.Router},{type:h.b},{type:S.a},{type:C.a}]},F=i.b([Object(n.Component)({selector:"app-create-work-order-settings",template:i.c(r("vpU6")).default,animations:[p.a],providers:[x.DatePipe],styles:[i.c(r("4AF8")).default]})],F);var I=r("Ph3x"),L=r("8rEH"),T=r("G0yt"),_=r("Skqz"),W=function(){function e(t,r,i,n,o,a,s,l,d,c,u,p){_classCallCheck(this,e),this.workOrderService=t,this.router=r,this.route=i,this.siteService=n,this.conditionService=o,this.receivingCustomerWorkOrderService=a,this.authService=s,this.modalService=l,this.alertService=d,this.customerService=c,this.itemMasterService=u,this.vendorservice=p,this.title="Work order settings",this.toggle_wf_header=!1,this.displayAccord1=!1,this.toggle_detailhistory=!1,this.allWorkFlows=[],this.workFlowGridSource=new L.a,this.workOrderService=null}return _createClass(e,[{key:"ngOnInit",value:function(){this.getAllWorkflows()}},{key:"getAllWorkflows",value:function(){var e=this;this.alertService.startLoadingMessage(),this.receivingCustomerWorkOrderService.getAllWorkFlows().subscribe((function(t){return e.onWorkflowLoadSuccessful(t[0])}),(function(e){})),this.gridColumns=[{field:"workOrderType",header:"WO Type"},{field:"prefix",header:"Prefix"},{field:"sufix",header:"Suffix"},{field:"startCode",header:"Start code"},{field:"woListDefault",header:"WO List View"},{field:"woListStatusDefault",header:"WO List Status"},{field:"defaultConditon",header:"Default Condition"},{field:"defaultStageCode",header:"Default Stage Code"},{field:"defaultScope",header:"Default Scope"},{field:"defaultPriority",header:"Priority"}],this.selectedGridColumns=this.gridColumns}},{key:"applyFilter",value:function(e){this.workFlowGridSource.filter=e}},{key:"refresh",value:function(){this.applyFilter(this.workFlowGridSource.filter)}},{key:"onWorkflowLoadSuccessful",value:function(e){this.alertService.stopLoadingMessage(),this.workFlowGridSource.data=e,console.log(e),this.workflowList=e}},{key:"confirmDelete",value:function(e,t){this.currentWorkflow=t,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"edit",value:function(e){var t=e.workOrderSettingId;this.route.navigateByUrl("workordersettingsmodule/workordersettings/app-create-work-order-settings/edit/"+t)}},{key:"getAuditHistoryById",value:function(e){var t=this;this.receivingCustomerWorkOrderService.getAudit(e.workOrderSettingId).subscribe((function(e){console.log(e),t.auditHistory=e}))}},{key:"getColorCodeForHistory",value:function(e,t,r){var i=this.auditHistory,n=i.length;if(e>=0&&e<=n)return e+1===n||i[e+1][t]===r}},{key:"AddPage",value:function(){this.route.navigateByUrl("/workordersettingsmodule/workordersettings/app-create-work-order-settings")}},{key:"openEdit",value:function(e){this.route.navigateByUrl("/workordersettingsmodule/workordersettings/app-create-work-order-settings")}},{key:"dismissModel",value:function(){null!=this.modal&&this.modal.close()}},{key:"onOpenAll",value:function(){console.log(this.addedTasks);var e,t=_createForOfIteratorHelper(this.addedTasks);try{for(t.s();!(e=t.n()).done;){e.value.selected=!0}}catch(r){t.e(r)}finally{t.f()}}},{key:"onCloseAll",value:function(){var e,t=_createForOfIteratorHelper(this.addedTasks);try{for(t.s();!(e=t.n()).done;){e.value.selected=!1}}catch(r){t.e(r)}finally{t.f()}}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();W.ctorParameters=function(){return[{type:O.a},{type:c.ActivatedRoute},{type:c.Router},{type:v.a},{type:b.a},{type:D.a},{type:m.a},{type:T.c},{type:h.b},{type:g.a},{type:I.a},{type:_.a}]},i.b([Object(n.Input)()],W.prototype,"isWorkOrder",void 0),i.b([Object(n.Input)()],W.prototype,"workFlowId",void 0),i.b([Object(n.Input)()],W.prototype,"workFlowType",void 0),W=i.b([Object(n.Component)({selector:"app-work-order-settings-list",template:i.c(r("0kbX")).default,styles:[i.c(r("YqZN")).default]})],W);var R=function(){function e(t,r,i,n){_classCallCheck(this,e),this.router=t,this.workOrderService=r,this.alertService=i,this.receivingCustomerWorkOrderService=n,this.receivingForm={workOrderQuoteSettingId:0,workOrderTypeId:0,prefix:"",sufix:"",startCode:"",validDays:0,masterCompanyId:1,createdBy:"admin",updatedBy:"admin",createdDate:new Date,updatedDate:new Date,isActive:!0,isDeleted:!1},this.isEditMode=!1,this.onDestroy$=new w.a,this.breadcrumbs=[{label:"Admin"},{label:"WO Quote Settings"},{label:"Create WO Quote Settings"}],this.moduleName="WO Quote Settings"}return _createClass(e,[{key:"ngOnInit",value:function(){this.getAllWorkOrderTypes(),this.receivingCustomerWorkOrderService.isEditWOQuoteSettingsList&&(this.isEditMode=!0,this.receivingForm=this.receivingCustomerWorkOrderService.woQuoteSettingsData)}},{key:"getAllWorkOrderTypes",value:function(){var e=this;this.workOrderService.getAllWorkOrderTypes().pipe(Object(k.a)(this.onDestroy$)).subscribe((function(t){e.workOrderTypes=t,console.log(e.workOrderTypes)}),(function(t){e.errorHandling(t)}))}},{key:"saveOrUpdateWOQuoteSetting",value:function(){var e=this;this.workOrderService.saveOrUpdateWOQuoteSetting(this.receivingForm).subscribe((function(t){e.alertService.showMessage(e.moduleName,"Setting ".concat(e.isEditMode?"updated":"created"," successfully"),h.d.success),e.router.navigateByUrl("/workordersettingsmodule/workordersettings/app-wo-quote-settings-list")}),(function(t){e.errorHandling(t)}))}},{key:"errorHandling",value:function(e){var t=this;e.error.errors?e.error.errors.forEach((function(e){t.alertService.showMessage(t.moduleName,e.message,h.d.error)})):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",h.d.error)}}]),e}();R.ctorParameters=function(){return[{type:c.Router},{type:O.a},{type:h.b},{type:D.a}]},R=i.b([Object(n.Component)({selector:"app-create-wo-quote-settings",template:i.c(r("yemP")).default,animations:[p.a],providers:[x.DatePipe],styles:[i.c(r("2spE")).default]})],R);var M=function(){function e(t,r,i,n,o,a,s,l,d,c,u,p){_classCallCheck(this,e),this.workOrderService=t,this.router=r,this.route=i,this.siteService=n,this.conditionService=o,this.receivingCustomerWorkOrderService=a,this.authService=s,this.modalService=l,this.alertService=d,this.customerService=c,this.itemMasterService=u,this.vendorservice=p,this.title="WO Quote settings",this.workflowList=[],this.auditHistory=[],this.onDestroy$=new w.a,this.selectedGridColumns=[{field:"workOrderType",header:"WO Type"},{field:"prefix",header:"Prefix"},{field:"sufix",header:"Sufix"},{field:"startCode",header:"Start code"},{field:"validDays",header:"Valid Days"}],this.gridColumns=[{field:"workOrderType",header:"WO Type"},{field:"prefix",header:"Prefix"},{field:"sufix",header:"Sufix"},{field:"startCode",header:"Start code"},{field:"validDays",header:"Valid Days"}],this.pageSize=10,this.pageIndex=0,this.first=0,this.totalRecords=0,this.totalPages=0}return _createClass(e,[{key:"ngOnInit",value:function(){this.receivingCustomerWorkOrderService.isEditWOQuoteSettingsList=!1,this.receivingCustomerWorkOrderService.woQuoteSettingsData={},this.selectedGridColumns=this.gridColumns,this.getAllWOQuoteSettings()}},{key:"ngOnChange",value:function(){this.receivingCustomerWorkOrderService.isEditWOQuoteSettingsList=!1,this.receivingCustomerWorkOrderService.woQuoteSettingsData={}}},{key:"columnsChanges",value:function(){}},{key:"globalSearch",value:function(e){var t=this;this.pageIndex=0,this.filteredText=e,this.customerService.getGlobalSearch(e,this.pageIndex,this.pageSize).subscribe((function(e){t.data=e,e.length>0&&(t.totalRecords=e[0].totalRecords,t.totalPages=Math.ceil(t.totalRecords/t.pageSize))}))}},{key:"getAuditHistoryById",value:function(e){var t=this;this.workOrderService.getWOQuoteSettingHistory(e.workOrderQuoteSettingId).subscribe((function(e){t.auditHistory=e}))}},{key:"edit",value:function(e){this.receivingCustomerWorkOrderService.isEditWOQuoteSettingsList=!0,this.receivingCustomerWorkOrderService.woQuoteSettingsData=e,this.route.navigateByUrl("workordersettingsmodule/workordersettings/app-create-wo-quote-settings")}},{key:"getColorCodeForHistory",value:function(e,t,r){var i=this.auditHistory,n=i.length;if(e>=0&&e<=n)return e+1===n||i[e+1][t]===r}},{key:"getAllWOQuoteSettings",value:function(){var e=this;this.workOrderService.getWOQuoteSettingList().pipe(Object(k.a)(this.onDestroy$)).subscribe((function(t){e.workflowList=t,e.totalRecords=t.length,e.totalPages=Math.ceil(e.totalRecords/e.pageSize)}))}},{key:"dismissModel",value:function(){null!=this.modal&&this.modal.close()}},{key:"AddPage",value:function(){this.route.navigateByUrl("/workordersettingsmodule/workordersettings/app-create-wo-quote-settings")}},{key:"openEdit",value:function(e){this.route.navigateByUrl("/workordersettingsmodule/workordersettings/app-create-wo-quote-settings")}}]),e}();M.ctorParameters=function(){return[{type:O.a},{type:c.ActivatedRoute},{type:c.Router},{type:v.a},{type:b.a},{type:D.a},{type:m.a},{type:T.c},{type:h.b},{type:g.a},{type:I.a},{type:_.a}]},M=i.b([Object(n.Component)({selector:"app-wo-quote-settings-list",template:i.c(r("rs4A")).default,encapsulation:n.ViewEncapsulation.None,styles:[i.c(r("QvxI")).default]})],M);var A=r("MKys"),B=[{path:"workordersettings",component:u,children:[{path:"app-work-order-settings-list",component:W,data:{title:"Work Order Settings List"}},{path:"app-create-work-order-settings",component:F,data:{title:"Create Work Order Settings"}},{path:"app-create-work-order-settings/edit/:id",component:F,data:{title:"Edit Work Order Settings"}},{path:"app-create-wo-quote-settings",component:R,data:{title:"Create WO Quote Settings"}},{path:"app-wo-quote-settings-list",component:M,data:{title:"WO Quote Settings List"}}]}],H=function e(){_classCallCheck(this,e)};H=i.b([Object(n.NgModule)({imports:[c.RouterModule.forChild(B)],exports:[c.RouterModule],providers:[m.a,A.a]})],H);var j=r("8YFm"),P=r("MCl+"),E=r("CYTX"),V=r("bv+N"),N=r("Jfay"),U=r("I0ai"),Q=r("3/N/"),G=r("sa3O"),z=r("ByPc"),q=r("NGzr"),$=r("FfGd"),J=r("ldMm"),K=r("wB/n"),Y=r("HC/r"),X=r("AkAD"),Z=r("7LN8"),ee=r("dLo5"),te=r("P7KQ"),re=r("JSGv"),ie=r("IheW"),ne=r("1bHX");r.d(t,"WorkOrderSettingsModule",(function(){return oe}));var oe=function e(){_classCallCheck(this,e)};oe=i.b([Object(n.NgModule)({imports:[te.CardModule,re.PanelMenuModule,ie.HttpClientModule,Z.SharedModule,X.BreadcrumbModule,ee.DropdownModule,o.a,a.FormsModule,a.ReactiveFormsModule,l.a,s.b,x.CommonModule,j.TableModule,P.ButtonModule,E.SelectButtonModule,V.InputTextModule,N.MultiSelectModule,H,U.InputSwitchModule,Q.CheckboxModule,G.AutoCompleteModule,ne.CalendarModule,z.GMapModule,$.RadioButtonModule,q.FileUploadModule,J.TreeTableModule,K.TreeModule,d.a],declarations:[u,F,W,R,M],providers:[D.a,Y.a],entryComponents:[]})],oe)},"Gg+f":function(e,t,r){"use strict";r.r(t),t.default=""},QvxI:function(e,t,r){"use strict";r.r(t),t.default=".ui-table-caption {\n  height: 50px;\n}"},"UPO+":function(e,t,r){"use strict";r.d(t,"a",(function(){return m}));var i=r("mrSG"),n=r("8Y7J"),o=r("s7LF"),a=r("SVse"),s=function e(t){_classCallCheck(this,e),"string"!=typeof t&&"number"!=typeof t||(this.id=this.text=t,this.isDisabled=!1),"object"==typeof t&&(this.id=t.id,this.text=t.text,this.isDisabled=t.isDisabled)},l=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"transform",value:function(e,t){var r=this;return e&&t?e.filter((function(e){return r.applyFilter(e,t)})):e}},{key:"applyFilter",value:function(e,t){return"string"==typeof e.text&&"string"==typeof t.text?!(t.text&&e.text&&-1===e.text.toLowerCase().indexOf(t.text.toLowerCase())):!(t.text&&e.text&&-1===e.text.toString().toLowerCase().indexOf(t.text.toString().toLowerCase()))}}]),e}();l=Object(i.b)([Object(n.Pipe)({name:"multiSelectFilter",pure:!1})],l);var d={provide:o.NG_VALUE_ACCESSOR,useExisting:Object(n.forwardRef)((function(){return u})),multi:!0},c=function(){},u=function(){function e(t){_classCallCheck(this,e),this.listFilterPipe=t,this._data=[],this.selectedItems=[],this.isDropdownOpen=!0,this._placeholder="Select",this._sourceDataType=null,this._sourceDataFields=[],this.filter=new s(this.data),this.defaultSettings={singleSelection:!1,idField:"id",textField:"text",disabledField:"isDisabled",enableCheckAll:!0,selectAllText:"Select All",unSelectAllText:"UnSelect All",allowSearchFilter:!1,limitSelection:-1,clearSearchFilter:!0,maxHeight:197,itemsShowLimit:999999999999,searchPlaceholderText:"Search",noDataAvailablePlaceholderText:"No data available",closeDropDownOnSelection:!1,showSelectedItemsAtTop:!1,defaultOpen:!1,allowRemoteDataSearch:!1},this.disabled=!1,this.onFilterChange=new n.EventEmitter,this.onDropDownClose=new n.EventEmitter,this.onSelect=new n.EventEmitter,this.onDeSelect=new n.EventEmitter,this.onSelectAll=new n.EventEmitter,this.onDeSelectAll=new n.EventEmitter,this.onTouchedCallback=c,this.onChangeCallback=c}return _createClass(e,[{key:"onFilterTextChange",value:function(e){this.onFilterChange.emit(e)}},{key:"onItemClick",value:function(e,t){if(this.disabled||t.isDisabled)return!1;var r=this.isSelected(t),i=-1===this._settings.limitSelection||this._settings.limitSelection>0&&this.selectedItems.length<this._settings.limitSelection;r?this.removeSelected(t):i&&this.addSelected(t),this._settings.singleSelection&&this._settings.closeDropDownOnSelection&&this.closeDropdown()}},{key:"writeValue",value:function(e){var t=this;if(null!=e&&e.length>0)if(this._settings.singleSelection)try{if(e.length>=1){var r=e[0];this.selectedItems=[new s("string"==typeof r||"number"==typeof r?r:{id:r[this._settings.idField],text:r[this._settings.textField],isDisabled:r[this._settings.disabledField]})]}}catch(n){}else{var i=e.map((function(e){return new s("string"==typeof e||"number"==typeof e?e:{id:e[t._settings.idField],text:e[t._settings.textField],isDisabled:e[t._settings.disabledField]})}));this._settings.limitSelection>0?this.selectedItems=i.splice(0,this._settings.limitSelection):this.selectedItems=i}else this.selectedItems=[];this.onChangeCallback(e)}},{key:"registerOnChange",value:function(e){this.onChangeCallback=e}},{key:"registerOnTouched",value:function(e){this.onTouchedCallback=e}},{key:"onTouched",value:function(){this.closeDropdown(),this.onTouchedCallback()}},{key:"trackByFn",value:function(e,t){return t.id}},{key:"isSelected",value:function(e){var t=!1;return this.selectedItems.forEach((function(r){e.id===r.id&&(t=!0)})),t}},{key:"isLimitSelectionReached",value:function(){return this._settings.limitSelection===this.selectedItems.length}},{key:"isAllItemsSelected",value:function(){var e=this.listFilterPipe.transform(this._data,this.filter),t=e.filter((function(e){return e.isDisabled})).length;return!((!this.data||0===this.data.length)&&this._settings.allowRemoteDataSearch)&&e.length===this.selectedItems.length+t}},{key:"showButton",value:function(){return!(this._settings.singleSelection||this._settings.limitSelection>0)}},{key:"itemShowRemaining",value:function(){return this.selectedItems.length-this._settings.itemsShowLimit}},{key:"addSelected",value:function(e){this._settings.singleSelection?(this.selectedItems=[],this.selectedItems.push(e)):this.selectedItems.push(e),this.onChangeCallback(this.emittedValue(this.selectedItems)),this.onSelect.emit(this.emittedValue(e))}},{key:"removeSelected",value:function(e){var t=this;this.selectedItems.forEach((function(r){e.id===r.id&&t.selectedItems.splice(t.selectedItems.indexOf(r),1)})),this.onChangeCallback(this.emittedValue(this.selectedItems)),this.onDeSelect.emit(this.emittedValue(e))}},{key:"emittedValue",value:function(e){var t=this,r=[];if(Array.isArray(e))e.map((function(e){r.push(t.objectify(e))}));else if(e)return this.objectify(e);return r}},{key:"objectify",value:function(e){if("object"===this._sourceDataType){var t={};return t[this._settings.idField]=e.id,t[this._settings.textField]=e.text,this._sourceDataFields.includes(this._settings.disabledField)&&(t[this._settings.disabledField]=e.isDisabled),t}return"number"===this._sourceDataType?Number(e.id):e.text}},{key:"toggleDropdown",value:function(e){e.preventDefault(),this.disabled&&this._settings.singleSelection||(this._settings.defaultOpen=!this._settings.defaultOpen,this._settings.defaultOpen||this.onDropDownClose.emit())}},{key:"closeDropdown",value:function(){this._settings.defaultOpen=!1,this._settings.clearSearchFilter&&(this.filter.text=""),this.onDropDownClose.emit()}},{key:"toggleSelectAll",value:function(){if(this.disabled)return!1;this.isAllItemsSelected()?(this.selectedItems=[],this.onDeSelectAll.emit(this.emittedValue(this.selectedItems))):(this.selectedItems=this.listFilterPipe.transform(this._data,this.filter).filter((function(e){return!e.isDisabled})).slice(),this.onSelectAll.emit(this.emittedValue(this.selectedItems))),this.onChangeCallback(this.emittedValue(this.selectedItems))}},{key:"getFields",value:function(e){var t=[];if("object"!=typeof e)return t;for(var r in e)t.push(r);return t}},{key:"placeholder",set:function(e){this._placeholder=e||"Select"}},{key:"settings",set:function(e){this._settings=e?Object.assign(this.defaultSettings,e):Object.assign(this.defaultSettings)}},{key:"data",set:function(e){var t=this;if(e){var r=e[0];this._sourceDataType=typeof r,this._sourceDataFields=this.getFields(r),this._data=e.map((function(e){return new s("string"==typeof e||"number"==typeof e?e:{id:e[t._settings.idField],text:e[t._settings.textField],isDisabled:e[t._settings.disabledField]})}))}else this._data=[]}}]),e}();Object(i.b)([Object(n.Input)(),Object(i.d)("design:type",String),Object(i.d)("design:paramtypes",[String])],u.prototype,"placeholder",null),Object(i.b)([Object(n.Input)(),Object(i.d)("design:type",Object)],u.prototype,"disabled",void 0),Object(i.b)([Object(n.Input)(),Object(i.d)("design:type",Object),Object(i.d)("design:paramtypes",[Object])],u.prototype,"settings",null),Object(i.b)([Object(n.Input)(),Object(i.d)("design:type",Array),Object(i.d)("design:paramtypes",[Array])],u.prototype,"data",null),Object(i.b)([Object(n.Output)("onFilterChange"),Object(i.d)("design:type",n.EventEmitter)],u.prototype,"onFilterChange",void 0),Object(i.b)([Object(n.Output)("onDropDownClose"),Object(i.d)("design:type",n.EventEmitter)],u.prototype,"onDropDownClose",void 0),Object(i.b)([Object(n.Output)("onSelect"),Object(i.d)("design:type",n.EventEmitter)],u.prototype,"onSelect",void 0),Object(i.b)([Object(n.Output)("onDeSelect"),Object(i.d)("design:type",n.EventEmitter)],u.prototype,"onDeSelect",void 0),Object(i.b)([Object(n.Output)("onSelectAll"),Object(i.d)("design:type",n.EventEmitter)],u.prototype,"onSelectAll",void 0),Object(i.b)([Object(n.Output)("onDeSelectAll"),Object(i.d)("design:type",n.EventEmitter)],u.prototype,"onDeSelectAll",void 0),Object(i.b)([Object(n.HostListener)("blur"),Object(i.d)("design:type",Function),Object(i.d)("design:paramtypes",[]),Object(i.d)("design:returntype",void 0)],u.prototype,"onTouched",null),u=Object(i.b)([Object(n.Component)({selector:"ng-multiselect-dropdown",template:'<div tabindex="0" (blur)="onTouched()" class="multiselect-dropdown" (clickOutside)="closeDropdown()">\n  <div [class.disabled]="disabled">\n    <span tabindex="-1" class="dropdown-btn" (click)="toggleDropdown($event)">\n      <span *ngIf="selectedItems.length == 0">{{_placeholder}}</span>\n      <span class="selected-item" *ngFor="let item of selectedItems;trackBy: trackByFn;let k = index" [hidden]="k > _settings.itemsShowLimit-1">\n        {{item.text}}\n        <a style="padding-top:2px;padding-left:2px;color:white" (click)="onItemClick($event,item)">x</a>\n      </span>\n      <span [ngClass]="{ \'dropdown-multiselect--active\': _settings.defaultOpen }" style="float:right !important;padding-right:4px">\n        <span style="padding-right: 6px;" *ngIf="itemShowRemaining()>0">+{{itemShowRemaining()}}</span>\n        <span class="dropdown-multiselect__caret"></span>\n      </span>\n    </span>\n  </div>\n  <div class="dropdown-list" [hidden]="!_settings.defaultOpen">\n    <ul class="item1">\n      <li (click)="toggleSelectAll()" *ngIf="(_data.length > 0 || _settings.allowRemoteDataSearch) && !_settings.singleSelection && _settings.enableCheckAll && _settings.limitSelection===-1" class="multiselect-item-checkbox" style="border-bottom: 1px solid #ccc;padding:10px">\n        <input type="checkbox" aria-label="multiselect-select-all" [checked]="isAllItemsSelected()" [disabled]="disabled || isLimitSelectionReached()" />\n        <div>{{!isAllItemsSelected() ? _settings.selectAllText : _settings.unSelectAllText}}</div>\n      </li>\n      <li class="filter-textbox" *ngIf="(_data.length>0 || _settings.allowRemoteDataSearch) && _settings.allowSearchFilter">\n        <input type="text" aria-label="multiselect-search" [readOnly]="disabled" [placeholder]="_settings.searchPlaceholderText" [(ngModel)]="filter.text" (ngModelChange)="onFilterTextChange($event)">\n      </li>\n    </ul>\n    <ul class="item2" [style.maxHeight]="_settings.maxHeight+\'px\'">\n      <li *ngFor="let item of _data | multiSelectFilter:filter; let i = index;" (click)="onItemClick($event,item)" class="multiselect-item-checkbox">\n        <input type="checkbox" [attr.aria-label]="item.text" [checked]="isSelected(item)" [disabled]="disabled || (isLimitSelectionReached() && !isSelected(item)) || item.isDisabled" />\n        <div>{{item.text}}</div>\n      </li>\n      <li class=\'no-data\' *ngIf="_data.length == 0 && !_settings.allowRemoteDataSearch">\n        <h5>{{_settings.noDataAvailablePlaceholderText}}</h5>\n      </li>\n    </ul>\n  </div>\n</div>\n',providers:[d],changeDetection:n.ChangeDetectionStrategy.OnPush,styles:['.multiselect-dropdown{position:relative;width:100%;font-size:inherit;font-family:inherit}.multiselect-dropdown .dropdown-btn{display:inline-block;border:1px solid #adadad;width:100%;padding:6px 12px;margin-bottom:0;font-weight:400;line-height:1.52857143;text-align:left;vertical-align:middle;cursor:pointer;background-image:none;border-radius:4px}.multiselect-dropdown .dropdown-btn .selected-item{border:1px solid #337ab7;margin-right:4px;background:#337ab7;padding:0 5px;color:#fff;border-radius:2px;float:left}.multiselect-dropdown .dropdown-btn .selected-item a{text-decoration:none}.multiselect-dropdown .dropdown-btn .selected-item:hover{box-shadow:1px 1px #959595}.multiselect-dropdown .dropdown-btn .dropdown-multiselect__caret{line-height:16px;display:block;position:absolute;box-sizing:border-box;width:40px;height:38px;right:1px;top:0;padding:4px 8px;margin:0;text-decoration:none;text-align:center;cursor:pointer;transition:transform .2s}.multiselect-dropdown .dropdown-btn .dropdown-multiselect__caret:before{position:relative;right:0;top:65%;color:#999;margin-top:4px;border-style:solid;border-width:8px 8px 0;border-color:#999 transparent;content:""}.multiselect-dropdown .dropdown-btn .dropdown-multiselect--active .dropdown-multiselect__caret{transform:rotateZ(180deg)}.multiselect-dropdown .disabled>span{background-color:#eceeef}.dropdown-list{position:absolute;padding-top:6px;width:100%;z-index:9999;border:1px solid #ccc;border-radius:3px;background:#fff;margin-top:10px;box-shadow:0 1px 5px #959595}.dropdown-list ul{padding:0;list-style:none;overflow:auto;margin:0}.dropdown-list li{padding:6px 10px;cursor:pointer;text-align:left}.dropdown-list .filter-textbox{border-bottom:1px solid #ccc;position:relative;padding:10px}.dropdown-list .filter-textbox input{border:0;width:100%;padding:0 0 0 26px}.dropdown-list .filter-textbox input:focus{outline:0}.multiselect-item-checkbox:hover{background-color:#e4e3e3}.multiselect-item-checkbox input[type=checkbox]{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.multiselect-item-checkbox input[type=checkbox]:focus+div:before,.multiselect-item-checkbox input[type=checkbox]:hover+div:before{border-color:#337ab7;background-color:#f2f2f2}.multiselect-item-checkbox input[type=checkbox]:active+div:before{transition-duration:0s}.multiselect-item-checkbox input[type=checkbox]+div{position:relative;padding-left:2em;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;margin:0;color:#000}.multiselect-item-checkbox input[type=checkbox]+div:before{box-sizing:content-box;content:"";color:#337ab7;position:absolute;top:50%;left:0;width:14px;height:14px;margin-top:-9px;border:2px solid #337ab7;text-align:center;transition:.4s}.multiselect-item-checkbox input[type=checkbox]+div:after{box-sizing:content-box;content:"";position:absolute;transform:scale(0);transform-origin:50%;transition:transform .2s ease-out;background-color:transparent;top:50%;left:4px;width:8px;height:3px;margin-top:-4px;border-style:solid;border-color:#fff;border-width:0 0 3px 3px;-o-border-image:none;border-image:none;transform:rotate(-45deg) scale(0)}.multiselect-item-checkbox input[type=checkbox]:disabled+div:before{border-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:disabled:focus+div:before .multiselect-item-checkbox input[type=checkbox]:disabled:hover+div:before{background-color:inherit}.multiselect-item-checkbox input[type=checkbox]:disabled:checked+div:before{background-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:checked+div:after{content:"";transition:transform .2s ease-out;transform:rotate(-45deg) scale(1)}.multiselect-item-checkbox input[type=checkbox]:checked+div:before{-webkit-animation:.2s ease-in borderscale;animation:.2s ease-in borderscale;background:#337ab7}@-webkit-keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}@keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}']}),Object(i.d)("design:paramtypes",[l])],u);var p,h=function(){function e(t){_classCallCheck(this,e),this._elementRef=t,this.clickOutside=new n.EventEmitter}return _createClass(e,[{key:"onClick",value:function(e,t){t&&(this._elementRef.nativeElement.contains(t)||this.clickOutside.emit(e))}}]),e}();Object(i.b)([Object(n.Output)(),Object(i.d)("design:type",Object)],h.prototype,"clickOutside",void 0),Object(i.b)([Object(n.HostListener)("document:click",["$event","$event.target"]),Object(i.d)("design:type",Function),Object(i.d)("design:paramtypes",[MouseEvent,HTMLElement]),Object(i.d)("design:returntype",void 0)],h.prototype,"onClick",null),h=Object(i.b)([Object(n.Directive)({selector:"[clickOutside]"}),Object(i.d)("design:paramtypes",[n.ElementRef])],h);var m=p=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"forRoot",value:function(){return{ngModule:p}}}]),e}();m=p=Object(i.b)([Object(n.NgModule)({imports:[a.CommonModule,o.FormsModule],declarations:[u,h,l],providers:[l],exports:[u]})],m)},"UpA+":function(e,t,r){"use strict";r.r(t),t.default="<router-outlet></router-outlet>"},YqZN:function(e,t,r){"use strict";r.r(t),t.default=""},rs4A:function(e,t,r){"use strict";r.r(t),t.default='\r\n<div>\r\n\r\n    <div class="page-content">\r\n\r\n        <div class="right_col" role="main">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-header">\r\n                        <nav aria-label="breadcrumb">\r\n                            <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n                                <li class="breadcrumb-item active" aria-current="page">Work order quote settngs</li>\r\n                                <li class="breadcrumb-item" aria-current="page">Work order quote settngs List</li>\r\n                            </ol>\r\n                        </nav>\r\n                    </div> --\x3e\r\n                    \x3c!-- <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h4 class="po-head" style="padding: 0px 10px;">List of Work Order Quote settings </h4>\r\n                            <a (click)="AddPage()" matTooltipPosition="above"\r\n                             matTooltip="Create New Setting"\r\n                              class="plusicon-cstm ">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div>\r\n                        <div class="card-body" style="padding-top: 0;">\r\n                            <div class="right_col" role="main"> --\x3e\r\n\r\n\r\n                                <div class="card new-card">\r\n                                    <div class="card-header bg-primary new-card-header">\r\n                                        <div class="row">\r\n                                          <div class="col">\r\n                                            <h4 class="new-card-heading">List of Work Order Quote settings</h4>\r\n                                          </div>\r\n                                          <div>\r\n                                            <button\r\n                                               type="button"\r\n                                               class="btn-sm new-btn-primary"\r\n                                               (click)="AddPage()">\r\n                                               Create New Setting\r\n                                            </button>\r\n                                         </div>\r\n                                    \r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="card-body new-card-body">\r\n\r\n                                <p-table #dt \r\n                                [value]="workflowList" \r\n                                class="rpo-table-cstm rro-table-cstm" \r\n                                [rows]="10" \r\n                                [paginator]="true" \r\n                                [pageLinks]="3" \r\n                                [rowsPerPageOptions]="[10,20,50,100]" \r\n                                [columns]="selectedGridColumns" \r\n                                [metaKeySelection]="true" \r\n                                selectionMode="multiple" \r\n                                [metaKeySelection]="true"\r\n                                [scrollable]="true" \r\n                                scrollHeight="450px"  \r\n                                [(selection)]="selectedGridColumn" \r\n                                [resizableColumns]="true" \r\n                                [reorderableColumns]="true">\r\n                                    <ng-template pTemplate="caption">\r\n                                        \x3c!-- <div style="text-align: right"> --\x3e\r\n                                            <div class="row">\r\n                                                <div class="col">\r\n                                          \r\n                                            <p-multiSelect [maxSelectedLabels]="2"\r\n                                            [options]="gridColumns"\r\n                                            optionLabel="header"\r\n                                            [(ngModel)]="selectedGridColumns"\r\n                                            [style]="{ minWidth: \'220px\' }"\r\n                                            style="float:left"\r\n                                            (onChange)="columnsChanges()">\r\n                                        </p-multiSelect>\r\n                                    </div>\r\n                                    <div class="col">\r\n                                    <div style="width: auto !important; float: right;"\r\n                                     class="inner-addon right-addon w50 inline-block g-filter-search-cstm">        \r\n                                    <i class="fa fa-search"></i>\r\n                                                <input type="text"\r\n                                                    pInputText\r\n                                                    size="50"\r\n                                                    class="form-control"\r\n                                                    (input)="globalSearch($event.target.value)"\r\n                                                    placeholder="Filter"\r\n                                                    style="height: 28px !important;" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                   \r\n                                    <div class="col">\r\n                                      <div class="col">\r\n                                            <button type="button" class="btn btn-primary new-table-button"\r\n                                             pButton icon="fa-download" \r\n                                                iconPos="left" style="left:-10px;padding: 5px 12px !important;"\r\n                                                label="Export Data" matTooltip="Download Data"\r\n                                                 matTooltipPosition="above"\r\n                                                (click)="dt.exportCSV()"></button>\r\n                                            <button type="button" class="btn btn-primary new-table-button"\r\n                                             pButton icon="fa-download" iconPos="left"\r\n                                                label="Export Selected Data"\r\n                                                 style="padding: 5px 12px !important;"\r\n                                                  matTooltip="Download Selected Data"\r\n                                                   matTooltipPosition="above"\r\n                                                (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                            \x3c!--<button type="button" class="btn btn-primary" pButton icon="fa-download" iconPos="left" label="Export Data" matTooltip="Download Data" matTooltipPosition="above" (click)="dt.exportCSV()" style="padding: 5px 12px !important;"></button>\r\n                    <button type="button" class="btn btn-primary" pButton icon="fa-download" iconPos="left" label="Export Selected Data" matTooltip="Download Selected Data" matTooltipPosition="above" (click)="dt.exportCSV({selectionOnly:true})" style="padding: 5px 12px !important;"></button>--\x3e\r\n\r\n                                       \r\n                                        </div>\r\n                                    </div>\r\n                               \r\n                               \r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="colgroup" let-columns>\r\n                                        <colgroup>\r\n                                            <col *ngFor="let col of columns" style="width:130px">\r\n                                        </colgroup>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th style="width:auto" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                                {{col.header}}\r\n                                                <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                            </th>\r\n                                            <th style="width:200px;position:sticky">Actions</th>\r\n                                            \x3c!--<th></th>--\x3e\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                                <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field, col.filterMatchMode)">\r\n                                            </th>\r\n                                            <th style="width:200px;position:sticky"></th>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                                        <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openEdit(rowData)">\r\n                                            <td style="width:auto" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                                {{rowData[col.field]}}\r\n                                            </td>\r\n\r\n                                            <td class="action-icons-cstm" style="width:200px">\r\n                                                <div>\r\n                                                    <button class="btn-edit"\r\n                                                            mat-icon-button\r\n                                                            (click)="edit(rowData)"\r\n                                                            matTooltip="Edit"\r\n                                                            data-dismiss="modal">\r\n                                                        <mat-icon>edit</mat-icon>\r\n                                                    </button>\r\n                                                    <button class="btn-history" mat-icon-button matTooltip="History" data-toggle="tooltip" matTooltipPosition="above" data-target="#history" data-toggle="modal" (click)="getAuditHistoryById(rowData)">\r\n                                                        <mat-icon color="green">history</mat-icon>\r\n                                                    </button>\r\n                                                </div>\r\n                                                \x3c!--<span data-toggle="modal" data-target="#history">\r\n                            <a data-toggle="tooltip" matTooltipPosition="above" matTooltip="History" (click)="getAuditHistoryById(rowData)" tooltipPosition="bottom" title="" class="btn btn-success nobg" data-original-title="History">\r\n                                <i class="fa fa-history"></i>\r\n                            </a>\r\n                        </span>--\x3e\r\n                                            </td>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="summary" id="footer">\r\n                                        <label id="footer" class="footer">Total:</label>\r\n                                        <input style="width: 5%;"\r\n                                               [(ngModel)]="totalRecords"\r\n                                               [disabled]="true"\r\n                                               pInputText\r\n                                               type="text" />\r\n                                        &nbsp;&nbsp;\r\n                                        <label id="footer" class="footer1">Pages Count:</label>\r\n                                        <input style="width: 5%;"\r\n                                               [(ngModel)]="totalPages"\r\n                                               [disabled]="true"\r\n                                               pInputText\r\n                                               type="text" />\r\n                                    </ng-template>\r\n                                </p-table>\r\n                            </div>\r\n                         </div>\r\n                        \x3c!-- </div> --\x3e\r\n               \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    \r\n\r\n    \r\n\r\n    \r\n\r\n    <div class="modal fade bd-example-modal-xl" tabindex="-1" id="history" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-xl">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n                    <h4 class="modal-title">History of Work order quote settings</h4>\r\n                </div>\r\n                <div class="modal-body" *ngIf="auditHistory">\r\n                    \r\n                    <table class="table table-bordered table-fixed wfl-table-popup-cstm" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Work Order Type</th>\r\n                                <th>Prefix</th>\r\n                                <th>Sufix</th>\r\n                                <th>Start code</th>\r\n                                <th>Valid Days</th>\r\n                                <th>Last Updated By</th>\r\n                                <th>Last Updated Date</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody class="audithistory-cstm">\r\n                            \x3c!--*ngIf="auditHistory.length> 0"--\x3e\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'workOrderType\', audit.workOrderType)  ? \'black\' : \'red\'  }">{{audit.workOrderType}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'prefix\', audit.prefix)  ? \'black\' : \'red\'  }">{{audit.prefix}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'sufix\', audit.sufix)  ? \'black\' : \'red\'  }">{{audit.sufix}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'startCode\', audit.startCode)  ? \'black\' : \'red\'  }">{{audit.startCode}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'validDays\', audit.validDays)  ? \'black\' : \'red\'  }">{{audit.validDays}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'updatedBy\', audit.updatedBy)  ? \'black\' : \'red\'  }">{{audit.updatedBy}}</td>\r\n\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-info" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n'},vpU6:function(e,t,r){"use strict";r.r(t),t.default='<div class="card">\r\n    <div class="card new-card">\r\n        <div class="card-header bg-primary">\r\n          <div class="row">\r\n            <div class="col">\r\n              <h4 class="new-card-heading">{{isEditMode ? \'Edit\' : \'Create\'}} Work Order Settings</h4>\r\n            </div>\r\n            <div>\r\n               \r\n              <button\r\n                type="button"\r\n                class="btn-sm new-btn-primary"\r\n                [routerLink]="[\r\n                \'/workordersettingsmodule/workordersettings/app-work-order-settings-list\'\r\n                ]"\r\n              >\r\n                Work Order Settings List\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n            <div class="card-body">\r\n        <form #customerWorkForm="ngForm">\r\n            <h4 class="head_lis">Work Order Listing</h4>\r\n            <div class="form-row">\r\n              \r\n                <div class="col-md-12">\r\n                   \r\n                    \x3c!-- <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>RecevingListRB</label>\r\n                            <select [(ngModel)]="receivingForm.recivingListDefaultRB" name="recivingListDefaultRB">\r\n                                <option value="0">-- Select --</option>\r\n                                <option *ngFor="let ReceivingListRB of ReceivingListRBList"\r\n                                    [ngValue]="ReceivingListRB.value">{{ReceivingListRB.label}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div> --\x3e\r\n                    <div class="col-md-3 work_order_teardown">\r\n                        <div class="form-group">\r\n                            <label>WO List View <span class="text-danger">*</span></label>\r\n                            \x3c!-- <select [(ngModel)]="receivingForm.woListViewRBId " name="WOListViewRBId ">\r\n                                <option value="0">-- Select --</option>\r\n                                <option *ngFor="let WOListRB of workOrderViewList" [ngValue]="WOListRB">\r\n                                    {{WOListRB.label}}</option>\r\n                            </select> --\x3e\r\n                            <p-dropdown  name="company1"\r\n                            #wocompanyId="ngModel"  required\r\n                            [options]="workOrderViewList" placeholder="Select WO List View"\r\n                            class="p-dropdown-custom-md-2"\r\n                            [(ngModel)]="receivingForm.woListViewRBId">\r\n                           </p-dropdown>\r\n\r\n\r\n                        </div>\r\n                    </div> \r\n                    <div class="col-md-3 work_order_teardown">\r\n                        <div class="form-group">\r\n                            <label>WO List Status <span class="text-danger">*</span></label>\r\n                            \x3c!-- <select [(ngModel)]="receivingForm.woListStatusRBId" name="WOListStatusRBId.value">\r\n                                <option value="0">-- Select --</option>\r\n                                <option *ngFor="let WOListRB1 of workOrderStatusRbList" [ngValue]="WOListRB1.value">\r\n                                    {{WOListRB1.label}}</option>\r\n                            </select> --\x3e\r\n                            <p-dropdown  name="company12"\r\n                            #wocompanyId1="ngModel"  required\r\n                            [options]="workOrderStatusRbList" placeholder="Select WO List Status"\r\n                            class="p-dropdown-custom-md-2"\r\n                            [(ngModel)]="receivingForm.woListStatusRBId">\r\n                           </p-dropdown>\r\n                        </div>\r\n                    </div>\r\n                   \r\n                </div>\r\n            </div>\r\n\r\n\r\n            \x3c!-- <div class="form-row pull-right m-t-10">\r\n                <button type="submit" class="btn btn-primary" (click)="onSaveCustomerReceiving()"\r\n             >{{isEditMode ? \'Update\' : \'Save\'}}</button>\r\n            </div> --\x3e\r\n        </form>\r\n    </div>\r\n<hr>\r\n<div class="card-body">\r\n    <h4 class="head_lis">Work Order </h4>\r\n        <form #customerWorkForm="ngForm">\r\n            <div class="form-row">\r\n                <div class="col-md-12">\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label class="form-label"> WO Type</label>\r\n                            <select [(ngModel)]="receivingForm.workOrderTypeId" name="workOrderTypesId" [disabled]="!readonly">\r\n                                <option value="0">-- Select --</option>\r\n                                <option *ngFor="let workOrder of workOrderTypes" [ngValue]="workOrder.id">\r\n                                    {{workOrder.description}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Prefix</label>\r\n                            <input type="text" name="prefix" class="form-control ui-autocomplete-input" [(ngModel)]="receivingForm.prefix">\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Sufix <span class="text-danger">*</span></label>\r\n                            <input type="text" required name="sufix" class="form-control ui-autocomplete-input" [(ngModel)]="receivingForm.sufix">\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label> StartCode</label>\r\n                            <input type="text" name="startCode" class="form-control ui-autocomplete-input" [(ngModel)]="receivingForm.startCode">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-12">\r\n                   \r\n                    \x3c!-- <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>RecevingListRB</label>\r\n                            <select [(ngModel)]="receivingForm.recivingListDefaultRB" name="recivingListDefaultRB">\r\n                                <option value="0">-- Select --</option>\r\n                                <option *ngFor="let ReceivingListRB of ReceivingListRBList"\r\n                                    [ngValue]="ReceivingListRB.value">{{ReceivingListRB.label}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div> --\x3e\r\n            \r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Default Condition <span class="text-danger">*</span></label>\r\n                            <select class="form-control" name="conditionId" [(ngModel)]="receivingForm.defaultConditionId" (change)="onSelectCondition()" required>\r\n                                <option value="0">-- Select --</option>\r\n                                <option *ngFor="let condition of allConditionInfo" [ngValue]="condition.conditionId">{{condition.description}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Default Stage Code</label>\r\n                            <select [(ngModel)]="receivingForm.defaultStageCodeId" name="workOrderStageId">\r\n                                <option value="0">-- Select --</option>\r\n                                <option *ngFor="let workOrderStages of workOrderStagesList"\r\n                                    [ngValue]="workOrderStages.workOrderStageId">{{workOrderStages.workOrderStage}}\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Default Priority</label>\r\n                            <select [(ngModel)]="receivingForm.defaultPriorityId" name="PriorityId">\r\n                                <option value="0">-- Select --</option>\r\n                                <option *ngFor="let priority of priorityList" [ngValue]="priority.value">\r\n                                    {{priority.label}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Teardown Types</label>\r\n                            <ng-multiselect-dropdown\r\n                                class="form-control multiple-custom-select" [placeholder]="\'Select\'"\r\n                                [data]="tearDownTypes" [(ngModel)]="selectedTearDownTypes"\r\n                                [settings]="dropdownSettings" name="tearDownTypes">\r\n                            </ng-multiselect-dropdown>\r\n                                \x3c!-- <p-multiSelect [options]="tearDownTypes" \r\n                                [(ngModel)]="selectedTearDownTypes"\r\n                                [ngModelOptions]="{standalone: true}"\r\n                                 optionLabel="label" \r\n                                selectedItemsLabel="{0} columns selected"\r\n                                [style]="{ width: \'210px\' }"\r\n                                 defaultLabel="Choose Teardowns" style="float:left"></p-multiSelect> --\x3e\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n\r\n            <div class="form-row pull-right m-t-10">\r\n                <button type="submit" class="btn btn-primary" (click)="onSaveCustomerReceiving()"\r\n                    [disabled]="!customerWorkForm.valid" >{{isEditMode ? \'Update\' : \'Save\'}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n</div>'},yemP:function(e,t,r){"use strict";r.r(t),t.default='<p-breadcrumb [model]="breadcrumbs"></p-breadcrumb>\r\n<div class="card">\r\n    <div class="card-header">\r\n        <nav aria-label="breadcrumb">\r\n            <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n                <li class="breadcrumb-item active" aria-current="page">{{isEditMode ? \'Edit\' : \'Create\'}} WO Quote settings\r\n                </li>\r\n            </ol>\r\n        </nav>\r\n    </div>\r\n    <div class="card-body">\r\n        <form #woQuoteSettingsForm="ngForm">\r\n            <div class="form-row">\r\n                <div class="col-md-12">\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label class="form-label"> WO Type</label>\r\n                            <select [(ngModel)]="receivingForm.workOrderTypeId" name="workOrderTypesId" [disabled]="isEditMode" required>\r\n                                <option value="0">-- Select --</option>\r\n                                <option *ngFor="let workOrder of workOrderTypes" [ngValue]="workOrder.id">\r\n                                    {{workOrder.description}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Prefix</label>\r\n                            <input type="text" name="prefix" class="form-control ui-autocomplete-input" [(ngModel)]="receivingForm.prefix" required>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Sufix</label>\r\n                            <input type="text" name="sufix" class="form-control ui-autocomplete-input" [(ngModel)]="receivingForm.sufix">\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label> Start Code</label>\r\n                            <input type="text" name="startCode" class="form-control ui-autocomplete-input" [(ngModel)]="receivingForm.startCode" required>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-12">\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label> Valid Days</label>\r\n                            <input type="number" name="validDays" class="form-control ui-autocomplete-input" [(ngModel)]="receivingForm.validDays" required>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div class="form-row pull-right m-t-10">\r\n                <button type="submit" class="btn btn-primary" (click)="saveOrUpdateWOQuoteSetting()"\r\n                    [disabled]="!woQuoteSettingsForm.valid">{{isEditMode ? \'Update\' : \'Save\'}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n</div>'}}]);