function _createForOfIteratorHelper(e,t){var r;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(r=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){r&&(e=r);var n=0,s=function(){};return{s:s,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,i=!0,o=!1;return{s:function(){r=e[Symbol.iterator]()},n:function(){var e=r.next();return i=e.done,e},e:function(e){o=!0,a=e},f:function(){try{i||null==r.return||r.return()}finally{if(o)throw a}}}}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{"+AYT":function(e,t,r){"use strict";r.r(t);var n=r("mrSG"),s=r("8Y7J"),a=r("SVse"),i=r("u9T3"),o=r("s7LF"),l=r("TSSN"),d=r("1+r1"),c=r("8YFm"),u=r("MCl+"),p=r("CYTX"),m=r("bv+N"),h=r("Jfay"),g=r("sa3O"),b=r("ByPc"),v=r("NGzr"),f=r("FfGd"),y=r("1zQ3"),S=r("a4ce"),I=r("AkAD"),C=r("I0ai"),w=r("1bHX"),x=r("dLo5"),O=r("agHx"),k=r("r5xa"),D=r("A2ek"),T=r("3/N/"),M=r("hAxM"),P=r("wKQm"),Q=r("DgWh"),N=r("iInd"),A=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"ngOnInit",value:function(){}}]),e}();A=n.b([Object(s.Component)({selector:"quickapp-pro-sales",template:n.c(r("Esq9")).default})],A);var L=r("EVdn"),F=r("Q3MU"),V=function e(){_classCallCheck(this,e)},E=r("3LUQ"),R=r("G0yt"),q=function e(){_classCallCheck(this,e)},U=r("+vPQ"),B=r("6c3z"),j=r("pjuo"),H=r("0zL+"),_=r("OlR4"),z=r("lGQG"),W=r("Hocb"),G=r("wd/R"),$=r("kNA5"),Y=function(){function e(t,r,n,s,a,i,o,l,d,c){_classCallCheck(this,e),this.salesQuoteService=t,this.alertService=r,this.modalService=n,this.router=s,this.customerService=a,this.employeeService=i,this.commonservice=o,this.currencyService=l,this.authService=d,this.datePipe=c,this.sales=[],this.totalRecords=0,this.totalPages=0,this.pageSize=10,this.pageIndex=0,this.first=0,this.showPaginator=!1,this.isSpinnerVisible=!0,this.currentDeletedstatus=!1,this.selectedParts=[],this.allEmployeeinfo=[],this.customerWarningData=[],this.statusList=[],this.settingsList=[],this.currentStatus="0",this.viewType="pnview",this.selectedOnly=!1,this.isSettingsReceived=!1,this.clearStatusText=!1,this.restorerecord={}}return _createClass(e,[{key:"ngOnInit",value:function(){this.isSpinnerVisible=!0,this.breadcrumbs=[{label:"Sales Order Quote"},{label:"Quote List"}],this.salesQuote=new q,this.salesOrderQuote=new U.a,this.searchParameters=new V,this.initColumns(),this.getStatusList()}},{key:"closeDeleteModal",value:function(){L("#downloadConfirmation").modal("hide")}},{key:"initColumns",value:function(){this.headers=[{field:"salesOrderQuoteNumber",header:"Quote Num",width:"120px"},{field:"versionNumber",header:"Quote Ver Num",width:"130px"},{field:"quoteDate",header:"Quote Date",width:"130px"},{field:"status",header:"Status",width:"100px"},{field:"salesOrderNumber",header:"SO Num",width:"120px"},{field:"partNumberType",header:"PN",width:"130px"},{field:"partDescriptionType",header:"PN Description",width:"180px"},{field:"customerName",header:"Customer Name",width:"160px"},{field:"customerType",header:"Customer Type",width:"140px"},{field:"customerReference",header:"Cust Ref",width:"130px"},{field:"quoteAmount",header:"Quote Amount",width:"130px",style:"text-align:right"},{field:"soAmount",header:"SO Amount",width:"130px",style:"text-align:right"},{field:"priorityType",header:"Priority",width:"100px"},{field:"salesPerson",header:"Salesperson",width:"150px"},{field:"createdDate",header:"Created Date",width:"130px"},{field:"createdBy",header:"CreatedBy",width:"130px"},{field:"updatedDate",header:"Updated Date",width:"130px"},{field:"updatedBy",header:"UpdatedBy",width:"130px"}],this.selectedColumns=this.headers}},{key:"getDeleteListByStatus",value:function(e){this.currentDeletedstatus=e,this.pageIndex=this.searchParameters.rows>10?this.searchParameters.first/this.searchParameters.rows:0,this.pageSize=this.searchParameters.rows,this.searchParameters.first=this.pageIndex,this.currentDeletedstatus,this.searchParameters.filters=Object.assign({},this.searchParameters.filters,{isDeleted:this.currentDeletedstatus}),this.isSpinnerVisible=!0,this.onSearch()}},{key:"loadData",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";e.filters.statusId=this.currentStatus,this.searchParameters.first=parseInt(e.first)/e.rows,this.searchParameters.rows=e.rows,this.searchParameters.sortOrder=e.sortOrder,this.searchParameters.sortField=e.sortField,this.lazyLoadEventData=e,this.searchParameters.filters=Object(W.j)(e.filters),this.clearStatusText&&(this.searchParameters.filters.status="",this.clearStatusText=!1),this.searchParameters.filters=Object.assign({},this.searchParameters.filters,{isDeleted:this.currentDeletedstatus,viewType:this.viewType}),this.searchParameters.globalFilter=t,this.isSettingsReceived&&this.onSearch()}},{key:"globalSearch",value:function(e){this.searchParameters.globalFilter=e;var t=this.lazyLoadEventData;this.loadData(t,e)}},{key:"onSearch",value:function(){var e=this;this.isSpinnerVisible=!0,this.salesQuoteService.search(this.searchParameters).subscribe((function(t){t[0].results&&(e.sales=t[0].results.map((function(t){return Object.assign({},t,{quoteDate:t.quoteDate?e.datePipe.transform(t.quoteDate,"MM/dd/yyyy"):"",createdDate:t.createdDate?e.datePipe.transform(t.createdDate,"MM/dd/yyyy hh:mm a"):"",updatedDate:t.updatedDate?e.datePipe.transform(t.updatedDate,"MM/dd/yyyy hh:mm a"):""})})),e.totalRecords=t[0].totalRecordsCount,e.totalPages=Math.ceil(e.totalRecords/e.searchParameters.rows),e.showPaginator=e.totalRecords>0),e.isSpinnerVisible=!1}),(function(t){e.isSpinnerVisible=!1}))}},{key:"closeModal",value:function(){L("#downloadConfirmation").modal("hide")}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"openDelete",value:function(e,t){this.selected=t.salesOrderQuoteId,this.selectedQuoteToDelete=t.salesOrderQuoteNumber,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"deleteQuote",value:function(){var e=this;this.isSpinnerVisible=!0,this.salesQuoteService.delete(this.selected).subscribe((function(t){e.isSpinnerVisible=!1,e.modal.close(),e.alertService.showMessage("Success","Quote removed successfully.",E.d.success),e.onSearch()}),(function(t){e.isSpinnerVisible=!1}))}},{key:"openQuoteToEdit",value:function(e){this.isSpinnerVisible=!0,this.salesOrderQuoteId=e;var t=e.customerId;this.router.navigateByUrl("salesmodule/salespages/sales-quote-edit/".concat(t,"/").concat(this.salesOrderQuoteId))}},{key:"viewSelectedRow",value:function(e,t){var r=this;this.isSpinnerVisible=!0,this.salesQuoteService.getview(t.salesOrderQuoteId).subscribe((function(t){r.salesQuoteView=t[0],r.modal=r.modalService.open(e,{windowClass:"myCustomModalClass",backdrop:"static",keyboard:!1}),r.isSpinnerVisible=!1}),(function(e){r.isSpinnerVisible=!1}))}},{key:"getStatusList",value:function(){var e=this;Object($.a)(this.commonservice.smartDropDownList("MasterSalesOrderQuoteStatus","Id","Name"),this.salesQuoteService.getAllSalesOrderQuoteSettings()).subscribe((function(t){e.statusList=t[0],e.settingsList=t[1],e.settingsList.length>0&&(1==e.settingsList[0].soqListViewId?e.viewType="pnview":e.viewType="soqview",e.currentStatus=e.settingsList[0].soqListStatusId.toString()),e.searchParameters.filters=Object.assign({},e.searchParameters.filters,{isDeleted:e.currentDeletedstatus,viewType:e.viewType}),e.isSettingsReceived=!0,e.changeOfStatus(e.currentStatus,e.viewType)}),(function(t){e.isSettingsReceived=!0,e.isSpinnerVisible=!1}))}},{key:"changeOfStatus",value:function(e,t){this.lazyLoadEventData,this.currentStatus=""===e.toString()?this.currentStatus:e.toString(),this.viewType=""===t?this.viewType:t,this.loadData(this.lazyLoadEventData)}},{key:"clearText",value:function(e){this.clearStatusText=!0,"0"!=e&&null!=this.filterText&&(this.filterText.nativeElement.value="")}},{key:"mouseOverData",value:function(e,t){return"partNumberType"===e?t.partNumber:"partDescriptionType"===e?t.partDescription:"priorityType"===e?t.priority:"quoteDate"===e&&t[e]?G(t.quoteDate).format("MM-DD-YYYY"):"createdDate"===e&&t[e]?G(t.createdDate).format("MM-DD-YYYY"):"updatedDate"===e&&t[e]?G(t.updatedDate).format("MM-DD-YYYY"):t[e]}},{key:"onPaging",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";e.filters.statusId=this.currentStatus,this.searchParameters.first=parseInt(e.first)/e.rows,this.searchParameters.rows=e.rows,this.searchParameters.sortOrder=e.sortOrder,this.searchParameters.sortField=e.sortField,this.lazyLoadEventData=e,this.searchParameters.filters=Object(W.j)(e.filters),this.searchParameters.filters=Object.assign({},this.searchParameters.filters,{isDeleted:this.currentDeletedstatus,viewType:this.viewType}),this.searchParameters.globalFilter=t}},{key:"convertDate",value:function(e,t){return t[e]}},{key:"getColorCodeForMultiple",value:function(e){return"Multiple"===e.partNumberType?"green":"black"}},{key:"exportCSV",value:function(e){var t,r=this;this.isSpinnerVisible=!0,this.currentDeletedstatus,t={filters:{statusId:"0",viewType:"pnview",isDeleted:this.currentDeletedstatus},first:0,rows:e.totalRecords,sortOrder:1,globalFilter:""},Object.keys(e.filters).forEach((function(r){t.filters[r]=e.filters[r].value})),this.salesQuoteService.search(t).subscribe((function(t){var n=t[0].results.map((function(e){return Object.assign({},e,{quoteDate:e.quoteDate?r.datePipe.transform(e.quoteDate,"MMM-dd-yyyy"):"",createdDate:e.createdDate?r.datePipe.transform(e.createdDate,"MMM-dd-yyyy hh:mm a"):"",updatedDate:e.updatedDate?r.datePipe.transform(e.updatedDate,"MMM-dd-yyyy hh:mm a"):""})}));e._value=n,e.exportCSV(),e.value=r.sales,r.isSpinnerVisible=!1}),(function(e){r.isSpinnerVisible=!1}))}},{key:"closeHistoryModal",value:function(){L("#soqHistory").modal("hide")}},{key:"getAuditHistoryById",value:function(e){var t=this;this.isSpinnerVisible=!0,this.salesQuoteService.getSOQHistory(e.salesOrderQuoteId).subscribe((function(e){t.auditHistory=e,t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1}))}},{key:"getColorCodeForHistory",value:function(e,t,r){var n=this.auditHistory,s=n.length;if(e>=0&&e<=s)return e+1===s||n[e+1][t]===r}},{key:"restoreRecord",value:function(){var e=this;this.commonservice.updatedeletedrecords("SalesOrderQuote","SalesOrderQuoteId",this.restorerecord.salesOrderQuoteId).subscribe((function(t){e.getDeleteListByStatus(!0),e.modal.close(),e.alertService.showMessage("Success","Successfully Updated Status",E.d.success)}),(function(t){e.isSpinnerVisible=!1}))}},{key:"restore",value:function(e,t){this.restorerecord=t,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"userId",get:function(){return this.authService.currentUser?this.authService.currentUser.id:0}}]),e}();Y.ctorParameters=function(){return[{type:F.a},{type:E.b},{type:R.c},{type:N.Router},{type:H.a},{type:j.a},{type:_.a},{type:B.a},{type:z.a},{type:a.DatePipe}]},n.b([Object(s.ViewChild)("dt",{static:!1})],Y.prototype,"isEnablePOList",void 0),n.b([Object(s.ViewChild)("filterStatusInput",{static:!1})],Y.prototype,"filterText",void 0),Y=n.b([Object(s.Component)({selector:"app-sales-quote-list",template:n.c(r("yhfA")).default,styles:[n.c(r("Rx+c")).default]})],Y);var K=function e(){_classCallCheck(this,e)},J=r("iJR4"),Z=r("XNiG"),X=function(){function e(t,r,n,s,a){_classCallCheck(this,e),this.commonservice=t,this.alertService=r,this.salesQuoteService=n,this.authService=s,this.commonService=a,this.isEditMode=!1,this.enableHeaderSaveBtn=!1,this.bulist=[],this.divisionlist=[],this.isSpinnerVisible=!1,this.maincompanylist=[],this.arrayEmplsit=[],this.allEmployeeList=[],this.onDestroy$=new Z.a}return _createClass(e,[{key:"ngOnInit",value:function(){}},{key:"load",value:function(e){this.managementStructureId=e,this.getManagementStructureDetails(e,this.employeeId)}},{key:"enableHeaderSave",value:function(){this.enableHeaderSaveBtn=!0}},{key:"checkValidOnChange",value:function(e,t){null!=e&&0!=e&&"companyId"==t&&(this.managementValidCheck=!1)}},{key:"getManagementStructureDetails",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;r=0==r?this.employeeId:r,n=this.isEditMode?n=e:0,this.commonService.getManagmentStrctureData(e,r,n).subscribe((function(e){if(e){var r=e;r[0]&&"Level1"==r[0].level?(t.maincompanylist=r[0].lstManagmentStrcture,t.salesQuote.companyId=r[0].managementStructureId,t.salesQuote.managementStructureId=r[0].managementStructureId,t.salesQuote.buId=0,t.salesQuote.divisionId=0,t.salesQuote.departmentId=0,t.bulist=[],t.divisionlist=[],t.departmentList=[]):(t.salesQuote.companyId=0,t.salesQuote.buId=0,t.salesQuote.divisionId=0,t.salesQuote.departmentId=0,t.maincompanylist=[],t.bulist=[],t.divisionlist=[],t.departmentList=[]),r[1]&&"Level2"==r[1].level?(t.bulist=r[1].lstManagmentStrcture,t.salesQuote.buId=r[1].managementStructureId,t.salesQuote.managementStructureId=r[1].managementStructureId,t.salesQuote.divisionId=0,t.salesQuote.departmentId=0,t.divisionlist=[],t.departmentList=[]):(r[1]&&"NEXT"==r[1].level&&(t.bulist=r[1].lstManagmentStrcture),t.salesQuote.buId=0,t.salesQuote.divisionId=0,t.salesQuote.departmentId=0,t.divisionlist=[],t.departmentList=[]),r[2]&&"Level3"==r[2].level?(t.divisionlist=r[2].lstManagmentStrcture,t.salesQuote.divisionId=r[2].managementStructureId,t.salesQuote.managementStructureId=r[2].managementStructureId,t.salesQuote.departmentId=0,t.departmentList=[]):(r[2]&&"NEXT"==r[2].level&&(t.divisionlist=r[2].lstManagmentStrcture),t.salesQuote.divisionId=0,t.salesQuote.departmentId=0,t.departmentList=[]),r[3]&&"Level4"==r[3].level?(t.departmentList=r[3].lstManagmentStrcture,t.salesQuote.departmentId=r[3].managementStructureId,t.salesQuote.managementStructureId=r[3].managementStructureId):(t.salesQuote.departmentId=0,r[3]&&"NEXT"==r[3].level&&(t.departmentList=r[3].lstManagmentStrcture)),t.employeedata("",t.salesQuote.managementStructureId)}}),(function(e){t.isSpinnerVisible=!1;var r=e;t.errorMessageHandler(r)}))}},{key:"employeedata",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;0==this.arrayEmplsit.length&&this.arrayEmplsit.push(0),this.arrayEmplsit.push(null==this.employeeId?0:this.employeeId),this.commonService.autoCompleteDropdownsEmployeeByMS(t,!0,20,this.arrayEmplsit.join(),r).subscribe((function(t){e.allEmployeeList=t,e.requisitionerList=t,e.currentUserEmployeeName=Object(W.g)("label","value",e.employeeId,t),e.isEditMode||e.getRequisitionerOnLoad(e.employeeId)}),(function(t){var r=t;e.errorMessageHandler(r)}))}},{key:"getRequisitionerOnLoad",value:function(e){this.salesQuote.requisitionerId=Object(W.d)("value",e,this.allEmployeeList)}},{key:"errorMessageHandler",value:function(e){var t=e,r="";if(t.message){if(t.error&&t.error.errors.length>0)for(var n=0;n<t.error.errors.length;n++)r=r+t.error.errors[n].message+"<br/>";this.alertService.showMessage(t.error.message,r,E.d.error)}else this.alertService.showMessage("Error",e.error,E.d.error)}},{key:"getManagementStructureForChildEdit",value:function(e){var t=this.isEditMode?e.managementStructureId:0;this.commonService.getManagmentStrctureData(e.managementStructureId,this.employeeId,t).subscribe((function(t){if(t){var r=t;r[0]&&"Level1"==r[0].level?(e.maincompanylist=r[0].lstManagmentStrcture,e.childCompanyId=r[0].managementStructureId,e.managementStructureId=r[0].managementStructureId,e.childBulist=[],e.childDivisionlist=[],e.childDepartmentlist=[],e.childbuId=0,e.childDivisionId=0,e.childDeptId=0):(e.maincompanylist=[],e.childBulist=[],e.childDivisionlist=[],e.childDepartmentlist=[],e.childCompanyId=0,e.childbuId=0,e.childDivisionId=0,e.childDeptId=0),r[1]&&"Level2"==r[1].level?(e.childBulist=r[1].lstManagmentStrcture,e.managementStructureId=r[1].managementStructureId,e.childbuId=r[1].managementStructureId,e.childDivisionlist=[],e.childDepartmentlist=[],e.childDivisionId=0,e.childDeptId=0):(r[1]&&"NEXT"==r[1].level&&(e.childBulist=r[1].lstManagmentStrcture),e.childDivisionlist=[],e.childDepartmentlist=[],e.childbuId=0,e.childDivisionId=0,e.childDeptId=0),r[2]&&"Level3"==r[2].level?(e.childDivisionlist=r[2].lstManagmentStrcture,e.childDivisionId=r[2].managementStructureId,e.managementStructureId=r[2].managementStructureId,e.childDeptId=0,e.childDepartmentlist=[]):(r[2]&&"NEXT"==r[2].level&&(e.childDivisionlist=r[2].lstManagmentStrcture),e.childDepartmentlist=[],e.childDivisionId=0,e.childDeptId=0),r[3]&&"Level4"==r[3].level?(e.childDepartmentlist=r[3].lstManagmentStrcture,e.childDeptId=r[3].managementStructureId,e.managementStructureId=r[3].managementStructureId):(r[3]&&"NEXT"==r[3].level&&(e.childDepartmentlist=r[3].lstManagmentStrcture),e.childDeptId=0)}}))}},{key:"getBUList",value:function(e){var t=this;this.salesQuote.buId=0,this.salesQuote.divisionId=0,this.salesQuote.departmentId=0,this.bulist=[],this.divisionlist=[],this.departmentList=[],0!=e&&null!=e&&null!=e?(this.salesQuote.managementStructureId=e,this.salesQuote.companyId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe((function(e){t.bulist=e}))):(this.salesQuote.managementStructureId=0,this.salesQuote.companyId=0)}},{key:"getParentBUList",value:function(e){if(e.parentBulist=[],e.parentDivisionlist=[],e.parentDepartmentlist=[],e.parentbuId=0,e.parentDivisionId=0,e.parentDeptId=0,e.childList)for(var t=0;t<e.childList.length;t++)e.childList[t].childCompanyId=e.parentCompanyId,e.childList[t].childBulist=[],e.childList[t].childDivisionlist=[],e.childList[t].childDepartmentlist=[],e.childList[t].childbuId=0,e.childList[t].childDivisionId=0,e.childList[t].childDeptId=0;if(0!=e.parentCompanyId&&null!=e.parentCompanyId&&null!=e.parentCompanyId)e.managementStructureId=e.parentCompanyId,this.commonService.getManagementStructurelevelWithEmployee(e.parentCompanyId,this.employeeId).subscribe((function(t){if(e.parentBulist=t,e.childList)for(var r=0;r<e.childList.length;r++)e.childList[r].childBulist=e.parentBulist,e.childList[r].childCompanyId=e.parentCompanyId,e.childList[r].managementStructureId=e.parentCompanyId}));else if(e.managementStructureId=0,e.childList)for(var r=0;r<e.childList.length;r++)e.childList[r].managementStructureId=0}},{key:"getChildBUList",value:function(e){e.childBulist=[],e.childDivisionlist=[],e.childDepartmentlist=[],e.childbuId=0,e.childDivisionId=0,e.childDeptId=0,0!=e.childCompanyId&&null!=e.childCompanyId&&null!=e.childCompanyId?(e.managementStructureId=e.childCompanyId,this.commonService.getManagementStructurelevelWithEmployee(e.childCompanyId,this.employeeId).subscribe((function(t){e.childBulist=t}))):e.managementStructureId=0}},{key:"getDivisionlist",value:function(e){var t=this;this.divisionlist=[],this.departmentList=[],this.salesQuote.divisionId=0,this.salesQuote.departmentId=0,0!=e&&null!=e&&null!=e?(this.salesQuote.managementStructureId=e,this.salesQuote.buId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe((function(e){t.divisionlist=e}))):this.salesQuote.managementStructureId=this.salesQuote.companyId}},{key:"getParentDivisionlist",value:function(e){if(e.parentDivisionlist=[],e.parentDepartmentlist=[],e.parentDivisionId=0,e.parentDeptId=0,e.childList)for(var t=0;t<e.childList.length;t++)e.childList[t].childbuId=e.parentbuId,e.childList[t].childDivisionlist=[],e.childList[t].childDepartmentlist=[],e.childList[t].childDivisionId=0,e.childList[t].childDeptId=0;if(0!=e.parentbuId&&null!=e.parentbuId&&null!=e.parentbuId)e.managementStructureId=e.parentbuId,this.commonService.getManagementStructurelevelWithEmployee(e.parentbuId,this.employeeId).subscribe((function(t){if(e.parentDivisionlist=t,e.childList)for(var r=0;r<e.childList.length;r++)e.childList[r].childDivisionlist=e.parentDivisionlist,e.childList[r].childbuId=e.parentbuId,e.childList[r].managementStructureId=e.parentbuId}));else if(e.managementStructureId=e.parentCompanyId,e.childList)for(var r=0;r<e.childList.length;r++)e.childList[r].managementStructureId=e.parentCompanyId}},{key:"getChildDivisionlist",value:function(e){e.childDivisionId=0,e.childDeptId=0,e.childDivisionlist=[],e.childDepartmentlist=[],0!=e.childbuId&&null!=e.childbuId&&null!=e.childbuId?(e.managementStructureId=e.childbuId,this.commonService.getManagementStructurelevelWithEmployee(e.childbuId,this.employeeId).subscribe((function(t){e.childDivisionlist=t}))):e.managementStructureId=e.childCompanyId}},{key:"getDepartmentlist",value:function(e){var t=this;this.salesQuote.departmentId=0,this.departmentList=[],0!=e&&null!=e&&null!=e?(this.salesQuote.divisionId=e,this.salesQuote.managementStructureId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe((function(e){t.departmentList=e}))):(this.salesQuote.managementStructureId=this.salesQuote.buId,this.salesQuote.divisionId=0)}},{key:"getParentDeptlist",value:function(e){if(e.parentDeptId=0,e.parentDepartmentlist=[],e.childList)for(var t=0;t<e.childList.length;t++)e.childList[t].childDivisionId=e.parentDivisionId,e.childList[t].childDepartmentlist=[],e.childList[t].childDeptId=0;if(0!=e.parentDivisionId&&null!=e.parentDivisionId&&null!=e.parentDivisionId)e.managementStructureId=e.parentDivisionId,this.commonService.getManagementStructurelevelWithEmployee(e.parentDivisionId,this.employeeId).subscribe((function(t){if(e.parentDepartmentlist=t,e.childList)for(var r=0;r<e.childList.length;r++)e.childList[r].childDepartmentlist=e.parentDepartmentlist,e.childList[r].childDivisionId=e.parentDivisionId,e.childList[r].managementStructureId=e.parentDivisionId}));else if(e.managementStructureId=e.parentbuId,e.childList)for(var r=0;r<e.childList.length;r++)e.childList[r].managementStructureId=e.parentbuId}},{key:"getChildDeptlist",value:function(e){e.childDepartmentlist=[],e.childDeptId=0,0!=e.childDivisionId&&null!=e.childDivisionId&&null!=e.childDivisionId?(e.managementStructureId=e.childDivisionId,this.commonService.getManagementStructurelevelWithEmployee(e.childDivisionId,this.employeeId).subscribe((function(t){e.childDepartmentlist=t}))):e.managementStructureId=e.childbuId}},{key:"getDepartmentId",value:function(e){0!=e&&null!=e&&null!=e?(this.salesQuote.managementStructureId=e,this.salesQuote.departmentId=e):(this.salesQuote.managementStructureId=this.salesQuote.divisionId,this.salesQuote.departmentId=0)}},{key:"getParentDeptId",value:function(e){if(0!=e.parentDeptId&&null!=e.parentDeptId&&null!=e.parentDeptId){if(e.managementStructureId=e.parentDeptId,e.childList)for(var t=0;t<e.childList.length;t++)e.childList[t].childDeptId=e.parentDeptId,this.getChildDeptId(e.childList[t])}else if(e.managementStructureId=e.parentDivisionId,e.childList)for(var r=0;r<e.childList.length;r++)e.childList[r].managementStructureId=e.parentDivisionId,e.childList[r].childDeptId=e.parentDeptId}},{key:"getChildDeptId",value:function(e){0!=e.childDeptId&&null!=e.childDeptId&&null!=e.childDeptId?e.managementStructureId=e.childDeptId:e.managementStructureId=e.childDivisionId}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"employeeId",get:function(){return this.authService.currentUser?this.authService.currentUser.employeeId:0}}]),e}();X.ctorParameters=function(){return[{type:_.a},{type:E.b},{type:F.a},{type:z.a},{type:_.a}]},n.b([Object(s.Input)()],X.prototype,"salesQuote",void 0),n.b([Object(s.Input)()],X.prototype,"managementStructureId",void 0),X=n.b([Object(s.Component)({selector:"app-management-structure",template:n.c(r("wF9L")).default,styles:[n.c(r("1yJ2")).default]})],X);var ee=r("+yGV"),te=r("6W4t"),re=r("c0NH"),ne=r("Skqz"),se=r("ZtWP"),ae=r("qT9Z"),ie=function(){function e(t,r,n,s,a,i,o,l,d,c){_classCallCheck(this,e),this.salesQuoteService=t,this.siteService=r,this.customerService=n,this.companyService=s,this.commonService=a,this.vendorService=i,this.alertService=o,this.modalService=l,this.authService=d,this.salesOrderService=c,this.siteList=[],this.billToSiteList=[],this.addressSiteName={},this.tempshipToAddress={},this.tempbillToAddress={},this.tempshipVia={},this.billToAddress={},this.shipToAddress={},this.addressFormForShipping=new te.a,this.addressFormForBilling=new te.a,this.addShipViaFormForShipping=new re.a,this.isEditModeShipping=!1,this.isEditModeBilling=!1,this.isEditModeShipVia=!1,this.isEditMode=!1,this.countriesList=[],this.allCountriesList=[],this.shipViaList=[],this.billToContactData=[],this.shipToContactData=[],this.firstNamesShipTo=[],this.firstNamesBillTo=[],this.userList=[],this.billToUserList=[],this.allShipViaInfo=[],this.isSpinnerVisible=!1}return _createClass(e,[{key:"ngOnInit",value:function(){}},{key:"refresh",value:function(e){var t=this;this.isSpinnerVisible=!0,Object($.a)(this.commonService.smartDropDownList("ShippingVia","ShippingViaId","Name"),this.commonService.smartDropDownList("LegalEntity","LegalEntityId","Name"),this.commonService.smartDropDownList("Customer","CustomerId","Name"),this.commonService.smartDropDownList("Countries","countries_id","nice_name")).subscribe((function(r){t.isSpinnerVisible=!1,t.allShipViaInfo=t.checkResponse(r[0]),t.legalEntity=t.checkResponse(r[1]),t.allCustomer=t.checkResponse(r[2]),t.allCountriesList=t.checkResponse(r[3]),t.load(e,t.allCustomer)}),(function(e){t.isSpinnerVisible=!1}))}},{key:"checkResponse",value:function(e){return e&&e.length>0?e:[]}},{key:"load",value:function(e,t){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:this.salesOrderQuote=e,e&&(this.salesOrderQuote.shipToUserTypeId?(this.isEditMode=!0,this.onChangeShipToUserType()):(this.salesOrderQuote.shipToUserTypeId=1,this.salesOrderQuote.shipToUserId=this.customerId,this.onChangeShipToUserType(),0==this.isEditMode&&this.onShipToUserSelected(this.customerId,this.salesOrderQuote,this.salesOrderQuote.shipToAddressId),this.userList=this.allCustomer),this.salesOrderQuote.billToUserTypeId?(this.onChangeBillToUserType(),this.isEditMode=!0):(this.salesOrderQuote.billToUserTypeId=1,this.salesOrderQuote.billToUserId=this.customerId,this.onChangeBillToUserType(),0==this.isEditMode&&this.onBillToUserSelected(this.customerId,this.salesOrderQuote,this.salesOrderQuote.billToAddressId),this.userList=this.allCustomer));case 1:case"end":return t.stop()}}),t,this)})))}},{key:"getDefaultShipping",value:function(){if(this.siteList&&this.siteList.length>0)for(var e=0;e<this.siteList.length;e++)this.siteList[e].isPrimary&&(this.salesOrderQuote.shipToSiteName=this.siteList[e].siteName,this.onShipSiteSelect(this.salesOrderQuote.shipToSiteName))}},{key:"saveShippingAddressToPO",value:function(){}},{key:"saveBillingAddressToPO",value:function(){}},{key:"saveShipToShipViaDetailsToPO",value:function(){}},{key:"getDefaultBilling",value:function(){if(this.billToSiteList&&this.billToSiteList.length>0)for(var e=0;e<this.billToSiteList.length;e++)this.billToSiteList[e].isPrimary&&(this.salesOrderQuote.billToSiteName=this.billToSiteList[e].siteName,this.onBillSiteSelect(this.salesOrderQuote.billToSiteName))}},{key:"filterUserNames",value:function(e){this.userNames=this.userList;var t=_toConsumableArray(this.userList.filter((function(t){return t.label.toLowerCase().includes(e.query.toLowerCase())})));this.userNames=t}},{key:"filterBillToUserNames",value:function(e){this.billToUserNames=this.billToUserList;var t=_toConsumableArray(this.billToUserList.filter((function(t){return t.label.toLowerCase().includes(e.query.toLowerCase())})));this.billToUserNames=t}},{key:"filterCountries",value:function(e){if(this.countriesList=this.allCountriesList,void 0!==e.query&&null!==e.query){var t=_toConsumableArray(this.allCountriesList.filter((function(t){return t.label.toLowerCase().includes(e.query.toLowerCase())})));this.countriesList=t}}},{key:"filterCustomerContactsForShipTo",value:function(e){if(this.firstNamesShipTo=this.shipToContactData,void 0!==e.query&&null!==e.query){var t=_toConsumableArray(this.shipToContactData.filter((function(t){return t.firstName.toLowerCase().includes(e.query.toLowerCase())})));this.firstNamesShipTo=t}}},{key:"filterCustomerContactsForBillTo",value:function(e){if(this.firstNamesBillTo=this.billToContactData,void 0!==e.query&&null!==e.query){var t=_toConsumableArray(this.billToContactData.filter((function(t){return t.firstName.toLowerCase().includes(e.query.toLowerCase())})));this.firstNamesBillTo=t}}},{key:"onShipSiteSelect",value:function(e){if(this.siteList)for(var t=0;t<this.siteList.length;t++)if(e==this.siteList[t].siteName){var r=+this.salesOrderQuote.shipToUserTypeId;switch(r){case 1:this.salesOrderQuote.shipToAddressId=this.siteList[t].customerShippingAddressId;break;case 2:this.salesOrderQuote.shipToAddressId=this.siteList[t].vendorShippingAddressId;break;case 3:this.salesOrderQuote.shipToAddressId=this.siteList[t].legalEntityShippingAddressId,this.onShipToGetCompanyAddress(this.salesOrderQuote.shipToAddressId)}3!==r&&(this.salesOrderQuote.shipToAddress1=this.siteList[t].address1,this.salesOrderQuote.shipToAddress2=this.siteList[t].address2,this.salesOrderQuote.shipToAddress3=this.siteList[t].address3,this.salesOrderQuote.shipToCity=this.siteList[t].city,this.salesOrderQuote.shipToState=this.siteList[t].stateOrProvince,this.salesOrderQuote.shipToPostalCode=this.siteList[t].postalCode,this.salesOrderQuote.shipToCountry=this.siteList[t].countryName,this.salesOrderQuote.shipToCountryId=this.siteList[t].countryId)}}},{key:"onShipViaSelect",value:function(e){if(this.shipViaList)for(var t=0;t<this.shipViaList.length;t++)e==this.shipViaList[t].name&&(this.salesOrderQuote.shipViaShippingAccountInfo=this.shipViaList[t].shippingAccountInfo,this.salesOrderQuote.shippingId=this.shipViaList[t].shippingId,this.salesOrderQuote.shipViaId=this.shipViaList[t].shippingViaId,this.salesOrderQuote.shippingURL=this.shipViaList[t].shippingURL,this.salesOrderQuote.shipViaShippingURL=this.shipViaList[t].shippingURL)}},{key:"onBillSiteSelect",value:function(e){if(this.billToSiteList)for(var t=0;t<this.billToSiteList.length;t++)if(e==this.billToSiteList[t].siteName){var r=+this.salesOrderQuote.billToUserTypeId;switch(r){case 1:this.salesOrderQuote.billToAddressId=this.billToSiteList[t].customerBillingAddressId;break;case 2:this.salesOrderQuote.billToAddressId=this.billToSiteList[t].vendorBillingAddressId,this.onBillToGetVendorAddress(this.salesOrderQuote.billToAddressId);break;case 3:this.salesOrderQuote.billToAddressId=this.billToSiteList[t].legalEntityBillingAddressId,this.onBillToGetCompanyAddress(this.salesOrderQuote.billToAddressId)}1==r&&(this.salesOrderQuote.billToAddress1=this.billToSiteList[t].address1,this.salesOrderQuote.billToAddress2=this.billToSiteList[t].address2,this.salesOrderQuote.billToAddress3=this.billToSiteList[t].address3,this.salesOrderQuote.billToCity=this.billToSiteList[t].city,this.salesOrderQuote.billToState=this.billToSiteList[t].stateOrProvince,this.salesOrderQuote.billToPostalCode=this.billToSiteList[t].postalCode,this.salesOrderQuote.billToCountry=this.billToSiteList[t].countryName,this.salesOrderQuote.shipToCountryId=this.siteList[t].countryId)}}},{key:"onShipToGetCompanyAddress",value:function(e){var t=this;this.companyService.getShippingAddress(this.salesOrderQuote.shipToAddressId).subscribe((function(e){e?(t.salesOrderQuote.shipToAddress1=e.line1,t.salesOrderQuote.shipToAddress2=e.line2,t.salesOrderQuote.shipToAddress3=e.line3,t.salesOrderQuote.shipToCity=e.city,t.salesOrderQuote.shipToState=e.stateOrProvince,t.salesOrderQuote.shipToPostalCode=e.postalCode,t.salesOrderQuote.shipToCountry=e.country):(t.salesOrderQuote.shipToAddress1="",t.salesOrderQuote.shipToAddress2="",t.salesOrderQuote.shipToAddress3="",t.salesOrderQuote.shipToCity="",t.salesOrderQuote.shipToState="",t.salesOrderQuote.shipToPostalCode="",t.salesOrderQuote.shipToCountry="")}))}},{key:"onBillToGetCompanyAddress",value:function(e){var t=this;this.companyService.getBillingAddress(e).subscribe((function(e){var r=e;r?(t.salesOrderQuote.billToAddress1=r.line1,t.salesOrderQuote.billToAddress2=r.line2,t.salesOrderQuote.billToCity=r.city,t.salesOrderQuote.billToState=r.stateOrProvince,t.salesOrderQuote.billToPostalCode=r.postalCode,t.salesOrderQuote.billToCountry=r.country):(t.salesOrderQuote.billToAddress1="",t.salesOrderQuote.billToAddress2="",t.salesOrderQuote.billToCity="",t.salesOrderQuote.billToState="",t.salesOrderQuote.billToPostalCode="",t.salesOrderQuote.billToCountry="")}))}},{key:"parsedText",value:function(e){if(e)return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}},{key:"onBillToGetVendorAddress",value:function(e){var t=this;this.vendorService.getVendorAddressById(e).subscribe((function(e){var r=e;r?(t.salesOrderQuote.billToAddress1=r.line1,t.salesOrderQuote.billToAddress2=r.line2,t.salesOrderQuote.billToCity=r.city,t.salesOrderQuote.billToState=r.stateOrProvince,t.salesOrderQuote.billToPostalCode=r.postalCode,t.salesOrderQuote.billToCountry=r.country):(t.salesOrderQuote.billToAddress1="",t.salesOrderQuote.billToAddress2="",t.salesOrderQuote.billToCity="",t.salesOrderQuote.billToState="",t.salesOrderQuote.billToPostalCode="",t.salesOrderQuote.billToCountry="")}))}},{key:"onAddDescription",value:function(e){this.tempMemo="","shipViaMemo"==e&&(this.tempMemoLabel="Ship Via Memo",this.tempMemo=this.salesOrderQuote.shipViaMemo),"billToMemo"==e&&(this.tempMemoLabel="Bill To Memo",this.tempMemo=this.salesOrderQuote.billToMemo)}},{key:"onSaveDescription",value:function(){"Ship Via Memo"==this.tempMemoLabel&&(this.salesOrderQuote.shipViaMemo=this.tempMemo),"Bill To Memo"==this.tempMemoLabel&&(this.salesOrderQuote.billToMemo=this.tempMemo)}},{key:"resetAddressShippingForm",value:function(){this.addressFormForShipping=new te.a,this.isEditModeShipping=!1}},{key:"resetAddressBillingForm",value:function(){this.addressFormForBilling=new te.a,this.isEditModeBilling=!1}},{key:"onClickShipSiteName",value:function(e,t){switch(this.resetAddressShippingForm(),+this.salesOrderQuote.shipToUserTypeId){case 1:"AddSiteName"===e&&(this.addressSiteNameHeader="Add Ship To Customer Details"),"EditSiteName"===e&&(this.addressSiteNameHeader="Edit Ship To Customer Details",this.isEditModeShipping=!0,this.tempshipToAddress=Object(W.d)("customerShippingAddressId",t.shipToAddressId,this.siteList));break;case 2:"AddSiteName"===e&&(this.addressSiteNameHeader="Add Ship To Vendor Details"),"EditSiteName"===e&&(this.addressSiteNameHeader="Edit Ship To Vendor Details",this.isEditModeShipping=!0,this.tempshipToAddress=Object(W.d)("vendorShippingAddressId",t.shipToAddressId,this.siteList));break;case 3:"AddSiteName"===e&&(this.addressSiteNameHeader="Add Ship To Company Details"),"EditSiteName"===e&&(this.addressSiteNameHeader="Edit Ship To Company Details",this.isEditModeShipping=!0,this.tempshipToAddress=Object(W.d)("legalEntityShippingAddressId",t.shipToAddressId,this.siteList))}"EditSiteName"===e&&("number"==typeof this.tempshipToAddress.countryId?this.addressFormForShipping=Object.assign({},this.tempshipToAddress,{countryId:Object(W.e)("value",this.tempshipToAddress.countryId,this.allCountriesList)}):this.addressFormForShipping=Object.assign({},this.tempshipToAddress,{countryId:Object(W.e)("label",this.tempshipToAddress.countryId,this.allCountriesList)}))}},{key:"onClickBillSiteName",value:function(e,t){switch(this.resetAddressBillingForm(),+this.salesOrderQuote.billToUserTypeId){case 1:"AddSiteName"===e&&(this.addressSiteNameHeader="Add Bill To Customer Details"),"EditSiteName"===e&&(this.addressSiteNameHeader="Edit Bill To Customer Details",this.isEditModeShipping=!0,this.tempbillToAddress=Object(W.d)("customerBillingAddressId",t.billToAddressId,this.billToSiteList));break;case 2:"AddSiteName"===e&&(this.addressSiteNameHeader="Add Bill To Vendor Details"),"EditSiteName"===e&&(this.addressSiteNameHeader="Edit Bill To Vendor Details",this.isEditModeShipping=!0,this.tempbillToAddress=Object(W.d)("vendorBillingAddressId",t.billToAddressId,this.billToSiteList));break;case 3:"AddSiteName"===e&&(this.addressSiteNameHeader="Add Bill To Company Details"),"EditSiteName"===e&&(this.addressSiteNameHeader="Edit Bill To Company Details",this.isEditModeShipping=!0,this.tempbillToAddress=Object(W.d)("legalEntityBillingAddressId",t.billToAddressId,this.billToSiteList))}"EditSiteName"===e&&("number"==typeof this.tempbillToAddress.country?this.addressFormForBilling=Object.assign({},this.tempbillToAddress,{countryId:Object(W.e)("value",this.tempbillToAddress.countryId,this.allCountriesList)}):this.addressFormForBilling=Object.assign({},this.tempbillToAddress,{countryId:Object(W.e)("label",this.tempbillToAddress.countryId,this.allCountriesList)}))}},{key:"onChangeShipToUserType",value:function(){switch(this.clearInputShipAddressDetails(),+this.salesOrderQuote.shipToUserTypeId){case 1:this.userList=this.allCustomer,0==this.isEditMode&&(this.salesOrderQuote.shipToUserId=this.customerId),null==this.salesOrderQuote.shipToUserId&&(this.salesOrderQuote.shipToUserId=this.customerId),this.onShipToUserSelected(this.salesOrderQuote.shipToUserId,this.salesOrderQuote,this.salesOrderQuote.shipToAddressId);break;case 2:this.userList=this.vendorList;break;case 3:this.userList=this.legalEntity}if(this.salesOrderQuote.shipToUserId){var e=this.salesOrderQuote.shipToUserId,t=this.salesOrderQuote.shipToUserId;t.value&&(t=t.value),this.salesOrderQuote.shipToUserId=Object(W.d)("value",t,this.userList),this.onShipToUserSelected(e,this.salesOrderQuote,this.salesOrderQuote.shipToAddressId)}}},{key:"saveShippingAddress",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function e(){var t,r,n,s,a=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=Object.assign({},this.addressFormForShipping,{createdBy:this.userName,updatedBy:this.userName,masterCompanyId:1,isActive:!0}),1!=this.salesOrderQuote.shipToUserTypeId){e.next=10;break}if(r=Object.assign({},t,{isPrimary:!0,customerId:Object(W.h)("value",this.salesOrderQuote.shipToUserId),countryId:Object(W.h)("value",t.countryId)}),!this.isEditModeShipping){e.next=8;break}return e.next=6,this.customerService.newShippingAdd(r).subscribe((function(e){a.onShipToUserSelected(r.customerId,a.salesOrderQuote,e.customerShippingId),a.alertService.showMessage("Success","Updated Shipping Information Successfully",E.d.success)}));case 6:e.next=10;break;case 8:return e.next=10,this.customerService.newShippingAdd(r).subscribe((function(e){a.onShipToUserSelected(r.customerId,a.salesOrderQuote,e.customerShippingId),a.alertService.showMessage("Success","Saved Shipping Information Successfully",E.d.success)}));case 10:if(2!=this.salesOrderQuote.shipToUserTypeId){e.next=19;break}if(n=Object.assign({},t,{vendorId:Object(W.h)("value",this.salesOrderQuote.shipToUserId),countryId:Object(W.h)("value",t.countryId)}),!this.isEditModeShipping){e.next=17;break}return e.next=15,this.vendorService.newShippingAdd(n).subscribe((function(e){a.onShipToUserSelected(n.vendorId,a.salesOrderQuote,e.vendorShippingAddressId),a.alertService.showMessage("Success","Updated Shipping Information Successfully",E.d.success)}));case 15:e.next=19;break;case 17:return e.next=19,this.vendorService.newShippingAdd(n).subscribe((function(e){a.onShipToUserSelected(n.vendorId,a.salesOrderQuote,e.vendorShippingAddressId),a.alertService.showMessage("Success","Saved Shipping Information Successfully ",E.d.success)}));case 19:if(3!=this.salesOrderQuote.shipToUserTypeId){e.next=28;break}if(s=Object.assign({},t,{legalentityId:Object(W.h)("value",this.salesOrderQuote.shipToUserId),countryId:Object(W.h)("value",t.countryId)}),!this.isEditModeShipping){e.next=26;break}return e.next=24,this.companyService.addNewShippingAddress(s).subscribe((function(e){a.onShipToUserSelected(s.legalentityId,a.salesOrderQuote,e.legalEntityShippingAddressId),a.alertService.showMessage("Success","Updated Shipping Information Successfully",E.d.success)}));case 24:e.next=28;break;case 26:return e.next=28,this.companyService.addNewShippingAddress(s).subscribe((function(e){a.onShipToUserSelected(s.legalentityId,a.salesOrderQuote,e.legalEntityShippingAddressId),a.alertService.showMessage("Success","Saved Shipping Information Successfully ",E.d.success)}));case 28:case"end":return e.stop()}}),e,this)})))}},{key:"onShipToUserSelected",value:function(e,t,r){switch(this.shipToSelectedvalue=e,this.getShipViaDetailsForShipTo(),+this.salesOrderQuote.shipToUserTypeId){case 1:this.onShipToCustomerSelected(e,t,r);break;case 2:this.onShipToVendorSelected(e,t,r);break;case 3:this.onShipToCompanySelected(e,t,r)}this.salesOrderQuote.salesOrderQuoteId||this.getDefaultShipping()}},{key:"onShipToCustomerSelected",value:function(e,t,r){var n=this,s=e;s.value&&(s=s.value),this.customerService.getCustomerShipAddressGet(s).subscribe((function(s){if(n.siteList=s[0],n.isEditMode)e==n.customerId?t.shipToAddressId=r:n.getDefaultShipping(),0==t.shipToAddressId&&n.siteList.push({customerShippingAddressId:0,address1:t.shipToAddress1,address2:t.shipToAddress2,city:t.shipToCity,stateOrProvince:t.shipToStateOrProvince,postalCode:t.shipToPostalCode,country:t.shipToCountry,siteName:t.shipToSiteName});else if(n.siteList.length>0)for(var a=0;a<n.siteList.length;a++)1==n.siteList[a].isPrimary&&(t.shipToAddressId=n.siteList[a].customerShippingAddressId);n.onShipToGetAddress(t,t.shipToAddressId)})),this.customerService.getContacts(s).subscribe((function(e){n.shipToContactData=e[0];for(var t=0;t<n.shipToContactData.length;t++)1!=n.shipToContactData[t].isDefaultContact&&"true"!=n.shipToContactData[t].isDefaultContact||(n.salesOrderQuote.shipToContactId=n.shipToContactData[t])}))}},{key:"onShipToVendorSelected",value:function(e,t,r){var n=this;this.vendorService.getVendorShipAddressGet(e).subscribe((function(e){n.siteList=e[0],r&&(t.shipToAddressId=r),n.isEditMode&&0==t.shipToAddressId&&n.siteList.push({vendorShippingAddressId:0,address1:t.shipToAddress1,address2:t.shipToAddress2,city:t.shipToCity,stateOrProvince:t.shipToStateOrProvince,postalCode:t.shipToPostalCode,country:t.shipToCountry,siteName:t.shipToSiteName}),n.onShipToGetAddress(t,t.shipToAddressId)})),this.vendorService.getContacts(e).subscribe((function(e){if(n.shipToContactData=e[0],n.isEditMode&&t.shipToContactId){var r=t.shipToContactId;n.salesOrderQuote.shipToContactId=Object(W.d)("contactId",r,n.shipToContactData)}}))}},{key:"onShipToCompanySelected",value:function(e,t,r){var n=this;this.companyService.getShippingCompanySiteNames(this.shipToSelectedvalue).subscribe((function(e){n.siteList=e;for(var s=0;s<n.siteList.length;s++)if(n.siteList[s].isPrimary&&n.salesOrderQuote.shipToSiteName!==n.siteList[s].siteName){n.salesOrderQuote.shipToSiteName=n.siteList[s].siteName,r=n.siteList[s].legalEntityShippingAddressId;break}r&&(t.shipToAddressId=r),n.onShipToGetAddress(t,t.shipToAddressId)})),this.companyService.getCompanyContacts(this.shipToSelectedvalue).subscribe((function(e){n.shipToContactData=e;for(var r=0;r<n.shipToContactData.length;r++)if(n.shipToContactData[r].isDefaultContact&&n.salesOrderQuote.shipToContactId!==n.shipToContactData[r].contactId){n.salesOrderQuote.shipToContactId=n.shipToContactData[r].contactId;break}if(n.isEditMode&&t.shipToContactId){var s=t.shipToContactId;n.salesOrderQuote.shipToContactId=Object(W.d)("contactId",s,n.shipToContactData)}}))}},{key:"onShipToGetAddress",value:function(e,t){this.shipToAddress={},1==e.shipToUserTypeId||1==e.shipToUserType?t?this.shipToAddress=Object(W.d)("customerShippingAddressId",t,this.siteList):this.getDefaultShipping():2==e.shipToUserTypeId||2==e.shipToUserType?this.shipToAddress=Object(W.d)("vendorShippingAddressId",t,this.siteList):3!=e.shipToUserTypeId&&3!=e.shipToUserType||(this.shipToAddress=Object(W.d)("legalEntityShippingAddressId",t,this.siteList),this.onShipToGetCompanyAddress(this.salesOrderQuote.shipToAddressId)),t&&3!==e.shipToUserTypeId&&(this.salesOrderQuote.shipToSiteName=this.shipToAddress.siteName,this.salesOrderQuote.shipToAddress1=this.shipToAddress.address1,this.salesOrderQuote.shipToAddress2=this.shipToAddress.address2,this.salesOrderQuote.shipToAddress3=this.shipToAddress.address3,this.salesOrderQuote.shipToCity=this.shipToAddress.city,this.salesOrderQuote.shipToState=this.shipToAddress.stateOrProvince,this.salesOrderQuote.shipToPostalCode=this.shipToAddress.postalCode,this.salesOrderQuote.shipToCountry=this.shipToAddress.countryName,this.salesOrderQuote.shipToCountryId=this.shipToAddress.countryId)}},{key:"clearInputShipTo",value:function(){this.salesOrderQuote.shipToUserId=null,this.salesOrderQuote.shipToContactId=null,this.salesOrderQuote.shippingId="null",this.salesOrderQuote.shipViaShippingAccountInfo=null,this.salesOrderQuote.shippingId=null,this.salesOrderQuote.shippingURL="",this.salesOrderQuote.shipViaMemo="",this.shipToAddress={},this.shipViaList=[],this.siteList=[]}},{key:"clearInputOnClickUserIdShipTo",value:function(){this.salesOrderQuote.shipViaShippingAccountInfo=null,this.salesOrderQuote.shippingId=null,this.salesOrderQuote.shippingURL="",this.shipToAddress={},this.shipViaList=[],this.siteList=[],this.salesOrderQuote.shipToAddress1="",this.salesOrderQuote.shipToAddress2="",this.salesOrderQuote.shipToAddress3="",this.salesOrderQuote.shipToCity="",this.salesOrderQuote.shipToState="",this.salesOrderQuote.shipToPostalCode="",this.salesOrderQuote.shipToCountry="",this.salesOrderQuote.shipViaMemo=""}},{key:"clearInputShipAddressDetails",value:function(){this.salesOrderQuote.shipToAddress1="",this.salesOrderQuote.shipToAddress2="",this.salesOrderQuote.shipToAddress3="",this.salesOrderQuote.shipToCity="",this.salesOrderQuote.shipToState="",this.salesOrderQuote.shipToPostalCode="",this.salesOrderQuote.shipToCountry=""}},{key:"getShipViaDetailsForShipTo",value:function(e){var t=this,r=this.salesOrderQuote.shipToUserTypeId;r.value&&(r=r.value);var n=this.shipToSelectedvalue;n.value&&(n=n.value),this.commonService.getShipViaDetailsByModule(r,n).subscribe((function(r){if(t.shipViaList=r,t.shipViaList.length>0)for(var n=0;n<t.shipViaList.length;n++)1==t.shipViaList[n].isPrimary&&(t.salesOrderQuote.shipViaName=t.shipViaList[n].name,t.salesOrderQuote.shipViaShippingAccountInfo=t.shipViaList[n].shippingAccountInfo,t.salesOrderQuote.shippingId=t.shipViaList[n].shippingViaId);e&&t.getShipViaDetails(e)}))}},{key:"getShipViaDetails",value:function(e){var t=this;this.salesOrderQuote.shipViaShippingAccountInfo=null,this.salesOrderQuote.shippingId=null,this.salesOrderQuote.shippingURL="",this.salesOrderQuote.shipViaShippingURL="";var r=this.salesOrderQuote.shipToUserTypeId?this.salesOrderQuote.shipToUserTypeId:0;this.commonService.getShipViaDetailsById(e,r).subscribe((function(e){var r=e;t.salesOrderQuote.shipViaShippingAccountInfo=r.shippingAccountInfo,t.salesOrderQuote.shippingURL=r.shippingURL,t.salesOrderQuote.shipViaShippingURL=r.shippingURL,t.salesOrderQuote.shippingId=r.shippingId,t.salesOrderQuote.shipViaName=r.shipVia}))}},{key:"onChangeBillToUserType",value:function(){switch(this.clearInputOnClickUserIdBillTo(),+this.salesOrderQuote.billToUserTypeId){case 1:this.billToUserList=this.allCustomer,0==this.isEditMode&&(this.salesOrderQuote.billToUserId=this.customerId);var e=this.salesOrderQuote.billToUserId;e.value&&(e=e.value),this.onBillToUserSelected(e,this.salesOrderQuote,this.salesOrderQuote.billToAddressId);break;case 2:this.billToUserList=this.vendorList;break;case 3:this.billToUserList=this.legalEntity}if(this.salesOrderQuote.billToUserId){var t=this.salesOrderQuote.billToUserId,r=this.salesOrderQuote.billToUserId;r.value&&(r=r.value),this.salesOrderQuote.billToUserId=Object(W.d)("value",r,this.billToUserList),this.onBillToUserSelected(t,this.salesOrderQuote,this.salesOrderQuote.billToAddressId)}}},{key:"saveBillingAddress",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function e(){var t,r,n,s,a=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=Object.assign({},this.addressFormForBilling,{createdBy:this.userName,updatedBy:this.userName,masterCompanyId:1,isActive:!0,isPrimary:!0}),1!=this.salesOrderQuote.billToUserTypeId){e.next=10;break}if(r=Object.assign({},t,{customerId:Object(W.h)("value",this.salesOrderQuote.billToUserId),countryId:Object(W.h)("value",t.countryId)}),!this.isEditModeBilling){e.next=8;break}return e.next=6,this.customerService.newBillingAdd(r).subscribe((function(e){a.onBillToCustomerSelected(r.customerId,a.salesOrderQuote,e.customerBillingAddressId),a.alertService.showMessage("Success","Updated Billing Information Successfully",E.d.success)}));case 6:e.next=10;break;case 8:return e.next=10,this.customerService.newBillingAdd(r).subscribe((function(e){a.onBillToCustomerSelected(r.customerId,a.salesOrderQuote,e.customerBillingAddressId),a.alertService.showMessage("Success","Saved  Billing Information Sucessfully ",E.d.success)}));case 10:if(2!=this.salesOrderQuote.billToUserTypeId){e.next=19;break}if(n=Object.assign({},t,{vendorId:Object(W.h)("vendorId",this.salesOrderQuote.billToUserId),countryId:Object(W.h)("label",t.countryId)}),!this.isEditModeBilling){e.next=17;break}return e.next=15,this.vendorService.addNewBillingAddress(n).subscribe((function(e){a.onBillToVendorSelected(n.vendorId,a.salesOrderQuote,e.vendorBillingAddressId),a.alertService.showMessage("Success","Updated Billing Information Successfully",E.d.success)}));case 15:e.next=19;break;case 17:return e.next=19,this.vendorService.addNewBillingAddress(n).subscribe((function(e){a.onBillToVendorSelected(n.vendorId,a.salesOrderQuote,e.vendorBillingAddressId),a.alertService.showMessage("Success","Saved  Billing Information Sucessfully ",E.d.success)}));case 19:if(3!=this.salesOrderQuote.billToUserTypeId){e.next=28;break}if(s=Object.assign({},t,{legalentityId:Object(W.h)("value",this.salesOrderQuote.billToUserId),countryId:Object(W.h)("label",t.countryId)}),!this.isEditModeBilling){e.next=26;break}return e.next=24,this.companyService.addNewBillingAddress(s).subscribe((function(e){a.onBillToCompanySelected(null,a.salesOrderQuote,e.legalEntityBillingAddressId),a.alertService.showMessage("Success","Updated Billing Information Successfully",E.d.success)}));case 24:e.next=28;break;case 26:return e.next=28,this.companyService.addNewBillingAddress(s).subscribe((function(e){a.onBillToCompanySelected(null,a.salesOrderQuote,e.legalEntityBillingAddressId),a.alertService.showMessage("Success","Saved  Billing Information Sucessfully ",E.d.success)}));case 28:case"end":return e.stop()}}),e,this)})))}},{key:"onBillToUserSelected",value:function(e,t,r){switch(this.clearInputOnClickUserIdBillTo(),this.billToSelectedvalue=e,+this.salesOrderQuote.billToUserTypeId){case 1:this.onBillToCustomerSelected(e,t,r);break;case 2:this.onBillToVendorSelected(e,t,r);break;case 3:this.onBillToCompanySelected(e,t,r)}this.salesOrderQuote.salesOrderQuoteId||this.getDefaultBilling()}},{key:"onBillToCustomerSelected",value:function(e,t,r){var n=this;e.value&&(e=e.value),this.customerService.getCustomerBillViaDetails(e).subscribe((function(s){if(n.billToSiteList=s[0],n.isEditMode)e==n.customerId?t.billToAddressId=r:n.getDefaultBilling(),0==t.billToAddressId&&n.billToSiteList.push({customerBillingAddressId:0,address1:t.billToAddress1,address2:t.billToAddress2,city:t.billToCity,stateOrProvince:t.billToStateOrProvince,postalCode:t.billToPostalCode,country:t.billToCountry,siteName:t.billToSiteName});else if(n.billToSiteList.length>0)for(var a=0;a<n.billToSiteList.length;a++)1==n.billToSiteList[a].isPrimary&&(t.billToAddressId=n.billToSiteList[a].customerBillingAddressId);n.onBillToGetAddress(t,t.billToAddressId)}));var s=e;s.value&&(s=s.value),this.customerService.getContacts(s).subscribe((function(e){n.billToContactData=e[0];for(var t=0;t<n.billToContactData.length;t++)1!=n.billToContactData[t].isDefaultContact&&"true"!=n.billToContactData[t].isDefaultContact||(n.salesOrderQuote.billToContactId=n.billToContactData[t])}))}},{key:"onBillToVendorSelected",value:function(e,t,r){var n=this;this.vendorService.getVendorSiteNames(e).subscribe((function(e){n.billToSiteList=e,r&&(t.billToAddressId=r),n.isEditMode&&0==t.billToAddressId&&n.billToSiteList.push({vendorBillingAddressId:0,siteName:t.billToSiteName}),n.onBillToGetAddress(t,t.billToAddressId)})),this.vendorService.getContacts(e).subscribe((function(e){if(n.billToContactData=e[0],n.isEditMode&&t.billToContactId){var r=t.billToContactId;n.salesOrderQuote.billToContactId=Object(W.d)("contactId",r,n.billToContactData)}}))}},{key:"onBillToCompanySelected",value:function(e,t,r){var n=this;this.companyService.getBillingCompanySiteNames(this.billToSelectedvalue).subscribe((function(e){n.billToSiteList=e;for(var s=0;s<n.billToSiteList.length;s++)if(n.billToSiteList[s].isPrimary&&n.salesOrderQuote.billToSiteName!==n.billToSiteList[s].siteName){n.salesOrderQuote.billToSiteName=n.billToSiteList[s].siteName,r=n.billToSiteList[s].legalEntityBillingAddressId;break}r&&(t.billToAddressId=r),n.onBillToGetAddress(t,t.billToAddressId)})),this.companyService.getCompanyContacts(this.billToSelectedvalue).subscribe((function(e){n.billToContactData=e;for(var r=0;r<n.billToContactData.length;r++)if(n.billToContactData[r].isDefaultContact&&n.salesOrderQuote.billToContactId!==n.billToContactData[r].contactId){n.salesOrderQuote.billToContactId=n.billToContactData[r].contactId;break}if(n.isEditMode&&t.billToContactId){var s=t.billToContactId;n.salesOrderQuote.billToContactId=Object(W.d)("contactId",s,n.billToContactData)}}))}},{key:"onBillToGetAddress",value:function(e,t){this.billToAddress={},1==e.billToUserTypeId||1==e.billToUserType?t?this.billToAddress=Object(W.d)("customerBillingAddressId",t,this.billToSiteList):this.getDefaultBilling():2==e.billToUserTypeId||2==e.billToUserType?(this.billToAddress=Object(W.d)("vendorBillingAddressId",t,this.billToSiteList),this.onBillToGetVendorAddress(t)):3!=e.billToUserTypeId&&3!=e.billToUserType||(this.billToAddress=Object(W.d)("legalEntityBillingAddressId",t,this.billToSiteList),this.onBillToGetCompanyAddress(t)),1!=e.billToUserTypeId&&1!=e.billToUserType||(this.salesOrderQuote.billToSiteName=this.billToAddress.siteName,this.salesOrderQuote.billToAddress1=this.billToAddress.address1,this.salesOrderQuote.billToAddress2=this.billToAddress.address2,this.salesOrderQuote.billToAddress3=this.billToAddress.address3,this.salesOrderQuote.billToCity=this.billToAddress.city,this.salesOrderQuote.billToState=this.billToAddress.stateOrProvince,this.salesOrderQuote.billToPostalCode=this.billToAddress.postalCode,this.salesOrderQuote.billToCountry=this.billToAddress.countryName,this.salesOrderQuote.billToCountryId=this.billToAddress.countryId)}},{key:"clearInputBillTo",value:function(){this.salesOrderQuote.billToUserId=null,this.salesOrderQuote.billToContactId=null,this.billToAddress={},this.salesOrderQuote.billToMemo="",this.billToSiteList=[]}},{key:"clearInputBillAddressDetails",value:function(){this.salesOrderQuote.shipToAddress1="",this.salesOrderQuote.shipToAddress2="",this.salesOrderQuote.shipToAddress3="",this.salesOrderQuote.shipToCity="",this.salesOrderQuote.shipToState="",this.salesOrderQuote.shipToPostalCode="",this.salesOrderQuote.shipToCountry="",this.salesOrderQuote.shipViaMemo=""}},{key:"clearInputOnClickUserIdBillTo",value:function(){this.billToAddress={},this.billToSiteList=[],this.salesOrderQuote.billToAddress1="",this.salesOrderQuote.billToAddress2="",this.salesOrderQuote.billToAddress3="",this.salesOrderQuote.billToCity="",this.salesOrderQuote.billToState="",this.salesOrderQuote.billToPostalCode="",this.salesOrderQuote.billToCountry="",this.salesOrderQuote.billToMemo=""}},{key:"resetAddressShipViaForm",value:function(){this.addShipViaFormForShipping=new re.a,this.isEditModeShipVia=!1}},{key:"onEditShipVia",value:function(e){e.shipViaId&&(this.tempshipVia=Object(W.d)("shippingViaId",e.shipViaId,this.shipViaList),this.addShipViaFormForShipping=Object.assign({},this.tempshipVia,{shipVia:this.tempshipVia.name}),this.isEditModeShipVia=!0);var t=this.shipToShipVia;this.shipToShipViaModal=this.modalService.open(t,{size:"sm"}),this.shipToShipViaModal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"clsoeShipViaModal",value:function(){this.shipToShipViaModal.close()}},{key:"saveShipViaForShipTo",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function e(){var t,r,n,s,a=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(this.salesOrderQuote.shipViaShippingAccountInfo="",this.salesOrderQuote.shippingId="",this.salesOrderQuote.shippingURL="",t=Object.assign({},this.addShipViaFormForShipping,{name:Object(W.g)("label","value",this.addShipViaFormForShipping.shipViaId,this.allShipViaInfo),shipVia:name,createdBy:this.userName,updatedBy:this.userName,masterCompanyId:1,isActive:!0,UserType:this.salesOrderQuote.shipToUserTypeId}),1!=this.salesOrderQuote.shipToUserTypeId){e.next=11;break}if(r=Object.assign({},t,{ReferenceId:Object(W.h)("value",this.salesOrderQuote.shipToUserId),AddressId:this.salesOrderQuote.shipToAddressId?this.salesOrderQuote.shipToAddressId:0}),!this.isEditModeShipVia){e.next=9;break}return e.next=7,this.commonService.createShipVia(r).subscribe((function(e){a.getShipViaDetailsForShipTo(e.shippingViaId),a.alertService.showMessage("Success","Updated Ship Via Information Sucessfully",E.d.success),a.clsoeShipViaModal()}));case 7:e.next=11;break;case 9:return e.next=11,this.commonService.createShipVia(r).subscribe((function(e){a.getShipViaDetailsForShipTo(e.shippingViaId),a.alertService.showMessage("Success","Saved Ship Via Information Sucessfully ",E.d.success),a.clsoeShipViaModal()}));case 11:if(2!=this.salesOrderQuote.shipToUserTypeId){e.next=20;break}if(n=Object.assign({},t,{ReferenceId:Object(W.h)("vendorId",this.salesOrderQuote.shipToUserId),AddressId:this.salesOrderQuote.shipToAddressId?this.salesOrderQuote.shipToAddressId:0}),!this.isEditModeShipVia){e.next=18;break}return e.next=16,this.commonService.createShipVia(n).subscribe((function(e){a.getShipViaDetailsForShipTo(e.shippingViaId),a.alertService.showMessage("Success","Updated Ship Via Information Sucessfully",E.d.success),a.clsoeShipViaModal()}));case 16:e.next=20;break;case 18:return e.next=20,this.commonService.createShipVia(n).subscribe((function(e){a.getShipViaDetailsForShipTo(e.shippingViaId),a.alertService.showMessage("Success","Saved  Ship Via Information Sucessfully ",E.d.success),a.clsoeShipViaModal()}));case 20:if(3!=this.salesOrderQuote.shipToUserTypeId){e.next=29;break}if(s=Object.assign({},t,{ReferenceId:Object(W.h)("value",this.salesOrderQuote.shipToUserId),AddressId:this.salesOrderQuote.shipToAddressId?this.salesOrderQuote.shipToAddressId:0}),!this.isEditModeShipVia){e.next=27;break}return e.next=25,this.commonService.createShipVia(s).subscribe((function(e){a.getShipViaDetailsForShipTo(e.shippingViaId),a.alertService.showMessage("Success","Updated Ship Via Information Sucessfully",E.d.success),a.clsoeShipViaModal()}));case 25:e.next=29;break;case 27:return e.next=29,this.commonService.createShipVia(s).subscribe((function(e){a.getShipViaDetailsForShipTo(e.shippingViaId),a.alertService.showMessage("Success","Saved  Ship Via Information Sucessfully ",E.d.success),a.clsoeShipViaModal()}));case 29:case"end":return e.stop()}}),e,this)})))}},{key:"openConfirmationModal",value:function(){this.modal=this.modalService.open(this.updatePNDetailsModal,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"closeConfirmationModal",value:function(){this.modal&&this.modal.close()}},{key:"approve",value:function(){var e=this;null==this.salesQuoteView?(this.salesOrderView.parts=[],this.salesOrderView.salesOrder.billToContactName=Object(W.a)("firstName",this.salesOrderQuote.billToContactId),this.salesOrderView.salesOrder.billToContactId=Object(W.a)("contactId",this.salesOrderQuote.billToContactId),this.salesOrderView.salesOrder.shipToContactName=Object(W.a)("firstName",this.salesOrderQuote.shipToContactId),this.salesOrderView.salesOrder.shipToContactId=Object(W.a)("contactId",this.salesOrderQuote.shipToContactId),this.salesOrderView.salesOrder.shipToUserId=Object(W.a)("value",this.salesOrderQuote.shipToUserId),this.salesOrderView.salesOrder.billToUserId=Object(W.a)("value",this.salesOrderQuote.billToUserId),this.salesOrderView.salesOrder.shipToUserTypeId=this.salesOrderQuote.shipToUserTypeId,this.salesOrderView.salesOrder.shipToAddressId=this.salesOrderQuote.shipToAddressId,this.salesOrderView.salesOrder.shipViaId=this.salesOrderQuote.shipViaId,this.salesOrderView.salesOrder.shipToSiteName=this.salesOrderQuote.shipToSiteName,this.salesOrderView.salesOrder.shipToAddress1=this.salesOrderQuote.shipToAddress1,this.salesOrderView.salesOrder.shipToAddress2=this.salesOrderQuote.shipToAddress2,this.salesOrderView.salesOrder.shipToCity=this.salesOrderQuote.shipToCity,this.salesOrderView.salesOrder.shipToState=this.salesOrderQuote.shipToState,this.salesOrderView.salesOrder.shipToPostalCode=this.salesOrderQuote.shipToPostalCode,this.salesOrderView.salesOrder.shipToCountry=this.salesOrderQuote.shipToCountry,this.salesOrderView.salesOrder.shipToCountryId=this.salesOrderQuote.shipToCountryId,this.salesOrderView.salesOrder.shipViaName=this.salesOrderQuote.shipViaName,this.salesOrderView.salesOrder.shipViaShippingAccountInfo=this.salesOrderQuote.shipViaShippingAccountInfo,this.salesOrderView.salesOrder.shippingId=this.salesOrderQuote.shippingId,this.salesOrderView.salesOrder.shippingURL=this.salesOrderQuote.shippingURL,this.salesOrderView.salesOrder.shipViaMemo=this.salesOrderQuote.shipViaMemo,this.salesOrderView.salesOrder.shipViaShippingURL=this.salesOrderQuote.shipViaShippingURL,this.salesOrderView.salesOrder.billToUserTypeId=this.salesOrderQuote.billToUserTypeId,this.salesOrderView.salesOrder.billToAddressId=this.salesOrderQuote.billToAddressId,this.salesOrderView.salesOrder.billToSiteName=this.salesOrderQuote.billToSiteName,this.salesOrderView.salesOrder.billToAddress1=this.salesOrderQuote.billToAddress1,this.salesOrderView.salesOrder.billToAddress2=this.salesOrderQuote.billToAddress2,this.salesOrderView.salesOrder.billToCity=this.salesOrderQuote.billToCity,this.salesOrderView.salesOrder.billToState=this.salesOrderQuote.billToState,this.salesOrderView.salesOrder.billToPostalCode=this.salesOrderQuote.billToPostalCode,this.salesOrderView.salesOrder.billToCountry=this.salesOrderQuote.billToCountry,this.salesOrderView.salesOrder.billToCountryId=this.salesOrderQuote.billToCountryId,this.salesOrderView.salesOrder.billToMemo=this.salesOrderQuote.billToMemo,this.salesOrderQuote.salesOrderQuoteId=null,this.salesOrderView.salesOrder.updatedBy=this.userName,this.salesOrderView.salesOrder.updatedOn=(new Date).toDateString(),this.salesOrderService.update(this.salesOrderView).subscribe((function(t){e.alertService.stopLoadingMessage(),e.alertService.showMessage("Success","Address updated successfully.",E.d.success)})),this.closeConfirmationModal()):(this.salesQuoteView.parts=[],this.salesQuoteView.salesOrderQuote.billToContactName=Object(W.a)("firstName",this.salesOrderQuote.billToContactId),this.salesQuoteView.salesOrderQuote.billToContactId=Object(W.a)("contactId",this.salesOrderQuote.billToContactId),this.salesQuoteView.salesOrderQuote.shipToContactName=Object(W.a)("firstName",this.salesOrderQuote.shipToContactId),this.salesQuoteView.salesOrderQuote.shipToContactId=Object(W.a)("contactId",this.salesOrderQuote.shipToContactId),this.salesQuoteView.salesOrderQuote.shipToUserId=Object(W.a)("value",this.salesOrderQuote.shipToUserId),this.salesQuoteView.salesOrderQuote.billToUserId=Object(W.a)("value",this.salesOrderQuote.billToUserId),this.salesQuoteView.salesOrderQuote.shipToUserTypeId=this.salesOrderQuote.shipToUserTypeId,this.salesQuoteView.salesOrderQuote.shipToAddressId=this.salesOrderQuote.shipToAddressId,this.salesQuoteView.salesOrderQuote.shipViaId=this.salesOrderQuote.shipViaId,this.salesQuoteView.salesOrderQuote.shipToSiteName=this.salesOrderQuote.shipToSiteName,this.salesQuoteView.salesOrderQuote.shipToAddress1=this.salesOrderQuote.shipToAddress1,this.salesQuoteView.salesOrderQuote.shipToAddress2=this.salesOrderQuote.shipToAddress2,this.salesQuoteView.salesOrderQuote.shipToCity=this.salesOrderQuote.shipToCity,this.salesQuoteView.salesOrderQuote.shipToState=this.salesOrderQuote.shipToState,this.salesQuoteView.salesOrderQuote.shipToPostalCode=this.salesOrderQuote.shipToPostalCode,this.salesQuoteView.salesOrderQuote.shipToCountry=this.salesOrderQuote.shipToCountry,this.salesQuoteView.salesOrderQuote.shipViaName=this.salesOrderQuote.shipViaName,this.salesQuoteView.salesOrderQuote.shipViaShippingAccountInfo=this.salesOrderQuote.shipViaShippingAccountInfo,this.salesQuoteView.salesOrderQuote.shippingId=this.salesOrderQuote.shippingId,this.salesQuoteView.salesOrderQuote.shippingURL=this.salesOrderQuote.shippingURL,this.salesQuoteView.salesOrderQuote.shipViaMemo=this.salesOrderQuote.shipViaMemo,this.salesQuoteView.salesOrderQuote.shipViaShippingURL=this.salesOrderQuote.shipViaShippingURL,this.salesQuoteView.salesOrderQuote.billToUserTypeId=this.salesOrderQuote.billToUserTypeId,this.salesQuoteView.salesOrderQuote.billToAddressId=this.salesOrderQuote.billToAddressId,this.salesQuoteView.salesOrderQuote.billToSiteName=this.salesOrderQuote.billToSiteName,this.salesQuoteView.salesOrderQuote.billToAddress1=this.salesOrderQuote.billToAddress1,this.salesQuoteView.salesOrderQuote.billToAddress2=this.salesOrderQuote.billToAddress2,this.salesQuoteView.salesOrderQuote.billToCity=this.salesOrderQuote.billToCity,this.salesQuoteView.salesOrderQuote.billToState=this.salesOrderQuote.billToState,this.salesQuoteView.salesOrderQuote.billToPostalCode=this.salesOrderQuote.billToPostalCode,this.salesQuoteView.salesOrderQuote.billToCountry=this.salesOrderQuote.billToCountry,this.salesQuoteView.salesOrderQuote.billToMemo=this.salesOrderQuote.billToMemo,this.salesQuoteView.salesOrderQuote.shipToCountryId=this.salesOrderQuote.shipToCountryId,this.salesQuoteView.salesOrderQuote.billToCountryId=this.salesOrderQuote.billToCountryId,this.salesOrderQuote.salesOrderQuoteId=null,this.salesQuoteView.salesOrderQuote.updatedBy=this.userName,this.salesQuoteView.salesOrderQuote.updatedOn=(new Date).toDateString(),this.salesQuoteService.update(this.salesQuoteView).subscribe((function(t){e.alertService.stopLoadingMessage(),e.alertService.showMessage("Success","Address updated successfully.",E.d.success)})),this.closeConfirmationModal())}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();ie.ctorParameters=function(){return[{type:F.a},{type:ee.a},{type:H.a},{type:se.a},{type:_.a},{type:ne.a},{type:E.b},{type:R.c},{type:z.a},{type:ae.a}]},n.b([Object(s.Input)()],ie.prototype,"customerId",void 0),n.b([Object(s.Input)()],ie.prototype,"salesQuote",void 0),n.b([Object(s.Input)()],ie.prototype,"salesOrderQuote",void 0),n.b([Object(s.ViewChild)("shipToShipVia",{static:!1})],ie.prototype,"shipToShipVia",void 0),n.b([Object(s.Input)()],ie.prototype,"salesQuoteView",void 0),n.b([Object(s.Input)()],ie.prototype,"salesOrderView",void 0),n.b([Object(s.ViewChild)("updatePNDetailsModal",{static:!1})],ie.prototype,"updatePNDetailsModal",void 0),ie=n.b([Object(s.Component)({selector:"app-sales-address",template:n.c(r("NyM1")).default,styles:[n.c(r("uGI4")).default]})],ie);var oe=r("IBlc"),le=function e(){_classCallCheck(this,e)},de=r("biEC"),ce=function e(){_classCallCheck(this,e)},ue=function(){function e(t,r){_classCallCheck(this,e),this.salesQuoteService=t,this.commonService=r,this.approvers=[],this.isSpinnerVisible=!1,this.internalApproversList=[],this.apporoverNamesList=[],this.poApprovaltaskId=6}return _createClass(e,[{key:"refresh",value:function(e){this.getApproversListById(e.salesOrderQuoteId)}},{key:"getApproversListById",value:function(e){var t=this;this.isSpinnerVisible=!0,0==this.poApprovaltaskId?this.commonService.smartDropDownList("ApprovalTask","ApprovalTaskId","Name").subscribe((function(r){r&&(r.forEach((function(e){"Sales Quote Approval"==e.label.toUpperCase()&&(t.poApprovaltaskId=e.value)})),t.getApproversByTask(e))}),(function(e){t.isSpinnerVisible=!1})):this.getApproversByTask(e)}},{key:"getApproversByTask",value:function(e){var t=this;this.isSpinnerVisible=!0,this.salesQuoteService.approverslistbyTaskId(this.poApprovaltaskId,e).subscribe((function(e){t.internalApproversList=e,t.internalApproversList.map((function(e){t.apporoverEmailList=e.approverEmails,t.apporoverNamesList.push(e.approverName)})),t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1}))}}]),e}();ue.ctorParameters=function(){return[{type:F.a},{type:_.a}]},ue=n.b([Object(s.Component)({selector:"app-sales-approve",template:n.c(r("w6bw")).default,styles:[n.c(r("K2XT")).default]})],ue);var pe,me,he,ge,be=r("00MY");!function(e){e[e.SentForInternalApproval=1]="SentForInternalApproval",e[e.SubmitInternalApproval=2]="SubmitInternalApproval",e[e.SentForCustomerApproval=3]="SentForCustomerApproval",e[e.SubmitCustomerApproval=4]="SubmitCustomerApproval",e[e.Approved=5]="Approved"}(pe||(pe={})),function(e){e[e.Pending=1]="Pending",e[e.Approved=2]="Approved",e[e.Rejected=3]="Rejected",e[e.WaitingForApproval=4]="WaitingForApproval"}(me||(me={})),function(e){e.Pending="Pending",e.Approved="Approved",e.Rejected="Rejected",e.WaitingForApproval="WaitingForApproval"}(he||(he={})),function(e){e[e.WOApproval=1]="WOApproval",e[e.WOQuoteApproval=2]="WOQuoteApproval",e[e.POApproval=3]="POApproval",e[e.ROApproval=4]="ROApproval",e[e.SOApproval=5]="SOApproval",e[e.SalesQuoteApproval=6]="SalesQuoteApproval"}(ge||(ge={}));var ve=function(){function e(t,r,n,a,i,o,l,d){_classCallCheck(this,e),this.alertService=t,this.modalService=r,this.employeeService=n,this.salesQuoteService=a,this.authService=i,this.route=o,this.customerService=l,this.commonService=d,this.customerContactList=[],this.quoteApprovedCheck=new s.EventEmitter,this.isViewMode=!1,this.onPartsApprovedEvent=new s.EventEmitter,this.quotesList=[],this.isSpinnerVisible=!1,this.quotesListPageSize=10,this.defaultApprovalId=oe.a.DEFAULT_SALES_QUOTE_APPROVAL_ID,this.columns=[{field:"actionStatus",header:"Action",width:"150px"},{field:"internalSentDate",header:"Internal Sent Date",width:"100px"},{field:"internalStatusId",header:"Internal Status",width:"150px"},{field:"internalMemo",header:"Internal Memo  ",width:"150px"},{field:"internalApprovedDate",header:"Internal Approved Date ",width:"100px"},{field:"internalApprovedBy",header:"Internal Approved By",width:"100px"},{field:"customerSentDate",header:"Customer Sent Date",width:"100px"},{field:"customerStatusId",header:"Customer Status",width:"150px"},{field:"customerMemo",header:"Customer Memo",width:"150px"},{field:"customerApprovedDate",header:"Customer Approved Date",width:"100px"},{field:"customerApprovedBy",header:"Customer Approved By",width:"100px"},{field:"partNumber",header:"PN",width:"100px"},{field:"partDescription",header:"PN Desc",width:"110px"},{field:"qtyQuoted",header:"Qty",width:"90px"},{field:"markupExtended",header:"Mark Up Amt.",width:"90px"},{field:"discountAmount",header:"Disc Amt.",width:"90px"},{field:"netSales",header:"Net Sales",width:"90px"},{field:"unitCostExtended",header:"Ext Cost",width:"90px"},{field:"marginAmountExtended",header:"Margin Amt.",width:"90px"},{field:"marginPercentage",header:"Margin %",width:"60px"}],this.selectedColumns=this.columns,this.approveAllQuotes=!1,this.statusList=[],this.quotesListTemp=[],this.selectedParts=[],this.customerWarningData=[],this.statusListForApproval=[],this.disableSubmitButtonForCustomerApproval=!1}return _createClass(e,[{key:"ngOnInit",value:function(){0==this.isViewMode?(this.customerId=+this.route.snapshot.paramMap.get("customerId"),this.salesQuoteId=+this.route.snapshot.paramMap.get("id")):(this.customerId=+this.customerIdFromQuoteList,this.salesQuoteId=+this.salesQuoteIdFromQuoteList),this.selectedColumns=this.columns,this.setDefaultContact()}},{key:"refresh",value:function(e,t){var r=this,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];this.isSpinnerVisible=!0,this.isView=n,this.salesQuoteId=t,s&&s.length>0&&(this.customerContactList=s,this.setDefaultContact()),Object($.a)(this.commonService.smartDropDownList("ApprovalStatus","ApprovalStatusId","Name"),this.salesQuoteService.approverslistbyTaskId(ge.SalesQuoteApproval,this.salesQuoteId),this.salesQuoteService.getCustomerQuotesList(this.salesQuoteId)).subscribe((function(e){r.isSpinnerVisible=!1,r.approvers=e[1],r.setApprovers(e[0]),r.setApproverProcessdata(e[2])}),(function(e){return r.saveFailedHelper(e)}))}},{key:"onApprovalSelected",value:function(e,t){e.approvalActionId==pe.SubmitCustomerApproval&&(this.defaultContactId?this.quotesList[t].customerApprovedById=this.defaultContactId:this.quotesList[t].customerApprovedById="")}},{key:"setDefaultContact",value:function(){if(this.customerContactList&&this.customerContactList.length>0)for(var e=0;e<this.customerContactList.length;e++)this.customerContactList[e].isDefaultContact&&(this.defaultContactId=this.customerContactList[e].contactId)}},{key:"setApprovers",value:function(e){this.statusList=e.map((function(e){return Object.assign({},e,{statusId:e.value,name:e.label})})),this.setStatusListForApproval(this.statusList)}},{key:"getApproverStatusList",value:function(){var e=this;this.commonService.smartDropDownList("ApprovalStatus","ApprovalStatusId","Name").subscribe((function(t){e.statusList=t.map((function(e){return Object.assign({},e,{statusId:e.value,name:e.label})})),e.setStatusListForApproval(e.statusList)}))}},{key:"getPartToDisableOrNot",value:function(e){var t=this;return"Approved"!=e.actionStatus&&(e.approvalActionId==pe.SentForInternalApproval||(e.approvalActionId==pe.SubmitInternalApproval?!!(this.approvers&&this.approvers.length>0)&&!!this.approvers.find((function(e){return e.approverId==t.employeeId&&0==e.isExceeded})):e.approvalActionId==pe.SentForCustomerApproval||e.approvalActionId==pe.SubmitCustomerApproval))}},{key:"setStatusListForApproval",value:function(e){var t=[];if(e&&e.length>0)for(var r=0;r<e.length;r++)(e[r].name===he.Approved||e[r].name===he.Rejected)&&t.push(e[r]);this.statusListForApproval=t}},{key:"getCustomerQuotesList",value:function(){var e=this;this.isSpinnerVisible=!0,this.salesQuoteService.getCustomerQuotesList(this.salesQuoteId).subscribe((function(t){e.isSpinnerVisible=!1,e.setApproverProcessdata(t)}),(function(t){e.saveFailedHelper(t)}))}},{key:"setApproverProcessdata",value:function(e){this.quotesList=e[0];for(var t=0;t<this.quotesList.length;t++)this.quotesList[t].soqSettingApprovalRule=!1,this.quotesList[t].createdBy=oe.a.UPDATED_BY,this.quotesList[t].updatedBy=oe.a.UPDATED_BY,this.quotesList[t].isSelected=this.quotesList[t].statusId==(me.WaitingForApproval||me.WaitingForApproval.toString()),this.quotesList[t].tempStatusId=this.quotesList[t].statusId,this.quotesList[t].openDate=new Date(this.quotesList[t].openDate),this.quotesList[t].createdOn=new Date(this.quotesList[t].createdOn),this.quotesList[t].approvedDate=new Date(this.quotesList[t].approvedDate),this.quotesList[t].quoteExpireDate=new Date(this.quotesList[t].quoteExpireDate),this.quotesList[t].approvalDate=new Date(this.quotesList[t].approvalDate),this.quotesList[t].statusChangeDate=new Date(this.quotesList[t].statusChangeDate),this.quotesList[t].approvedContactId=this.quotesList[t].statusId==(me.WaitingForApproval||me.WaitingForApproval.toString())?this.quotesList[t].approvedContactId:null,this.quotesList[t].internalSentDate?(this.quotesList[t].internalSentDate=new Date(this.quotesList[t].internalSentDate),this.quotesList[t].internalApprovedDate||(this.quotesList[t].internalApprovedDate=new Date)):this.quotesList[t].internalSentDate||(this.quotesList[t].internalSentDate=new Date),this.quotesList[t].customerSentDate?(this.quotesList[t].customerSentDate=new Date(this.quotesList[t].customerSentDate),this.quotesList[t].customerApprovedDate||(this.quotesList[t].customerApprovedDate=new Date)):this.quotesList[t].approvalActionId==pe.SentForCustomerApproval&&(this.quotesList[t].customerSentDate=new Date),this.quotesList[t].internalApprovedDate&&(this.quotesList[t].internalApprovedDate=new Date(this.quotesList[t].internalApprovedDate),this.quotesList[t].customerSentDate||(this.quotesList[t].customerSentDate=new Date)),this.quotesList[t].customerApprovedDate&&(this.quotesList[t].customerApprovedDate=new Date(this.quotesList[t].customerApprovedDate))}},{key:"getInternalSentMaxDate",value:function(e){var t=new Date(e);return new Date>t?t:new Date}},{key:"getInternalSentMinDate",value:function(e){return new Date(e)}},{key:"getInternalApprovedMaxDate",value:function(){return new Date}},{key:"getCustomerSentMinDate",value:function(e){if(e)return new Date(e)}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"selectAllApproval",value:function(e,t){var r=this;this.quotesList.forEach((function(e,n){r.getPartToDisableOrNot(e)&&(e.isSelected=!t,r.onApprovalSelected(e,n))}))}},{key:"getAllPartsToDisableOrNot",value:function(){return this.quotesList&&this.quotesList.length>0&&this.quotesList.forEach((function(e){if("Approved"!=e.actionStatus)return!1})),!0}},{key:"viewSelectedRow",value:function(e,t){t.salesQuoteId;var r=t.customerId;this.salesQuote=new q,this.salesOrderQuote=new U.a,this.selectedParts=[],this.getCustomerWarningsData(r),this.modal=this.modalService.open(e,{size:"lg"})}},{key:"getCustomerWarningsData",value:function(e){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var r=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.customerService.getCustomerWarningsById(e).subscribe((function(e){r.customerWarningData=e}));case 2:case"end":return t.stop()}}),t,this)})))}},{key:"saveFailedHelper",value:function(e){this.isSpinnerVisible=!1;var t="";e.message&&(t=e.message),this.alertService.resetStickyMessage(),this.alertService.showStickyMessage("SO Quote",t,E.d.error,e)}},{key:"onChangeOfQuoteCheckbox",value:function(e,t){t.statusId=e?oe.a.DEFAULT_SALES_QUOTE_APPROVAL_ID:t.tempStatusId}},{key:"viewSelectedStockLine",value:function(e,t){e.stockLineId&&(this.partModal=this.modalService.open(be.a,{size:"lg",backdrop:"static",keyboard:!1}),this.partModal.componentInstance.stockLineId=e.stockLineId)}},{key:"dismissViewModel",value:function(){this.partModal.close()}},{key:"openConfirmationModal",value:function(){this.hasPartsSelected()&&(this.modal=this.modalService.open(this.customerApprovalConfirmationModal,{size:"sm"}),this.modal.result.then((function(){}),(function(){})))}},{key:"closeConfirmationModal",value:function(){this.modal&&this.modal.close()}},{key:"hasPartsSelected",value:function(){var e=this;return(this.quotesList.filter((function(t){return!e.isApproved(t.tempStatusId)}))||[]).length>0}},{key:"isApproved",value:function(e){return e==oe.a.DEFAULT_SALES_QUOTE_APPROVAL_ID}},{key:"canDisplayInDropDown",value:function(e){return e.displayInDropdown&&(e.id===me.Pending||e.id===me.WaitingForApproval)}},{key:"saveApprovalProcess",value:function(){var e=!1;console.log(this.approvers),this.approvers&&this.approvers.length>0&&this.approvers.forEach((function(t){t.isSelected&&t.approvalActionId==pe.SentForCustomerApproval&&(e=!0)})),e?L("#quoteVersion").modal("show"):this.saveApprovalData()}},{key:"saveApprovalData",value:function(){var e=this,t=[],r=(this.employeeId,this.currentUserMasterCompanyId),n=0,s=!1,a="";this.quotesList.forEach((function(i){if(i.isSelected){var o=e.validateApprovalData(i);if(o.length>0)return s=!0,void(a+=o);i.approvalActionId==pe.SubmitCustomerApproval&&(n=1);var l={SalesOrderQuoteId:i.salesOrderQuoteId,SalesOrderQuotePartId:i.salesOrderQuotePartId,CustomerId:i.customerId,ApprovedContactId:i.approvedContactId,InternalSentDate:i.internalSentDate,InternalApprovedDate:i.internalApprovedDate,CustomerSentDate:i.customerSentDate,CustomerApprovedDate:i.customerApprovedDate,CustomerApprovedById:i.customerApprovedById,InternalStatusId:i.internalStatusId,CustomerStatusId:i.customerStatusId,InternalMemo:i.internalMemo,CustomerMemo:i.customerMemo,UpdatedBy:e.userName,salesOrderQuoteApprovalId:i.salesOrderQuoteApprovalId,ApprovalActionId:i.approvalActionId,IsInternalApprove:i.isInternalApprove,createdBy:e.userName,createdDate:(new Date).toDateString(),updatedDate:(new Date).toDateString(),isActive:!0,isDeleted:!1};l.masterCompanyId=r,i.approvalActionId==pe.SentForInternalApproval?(l.InternalEmails=e.getApproversEmails(),l.approvers=e.getApproversNames()):(l.InternalEmails="",l.approvers=""),i.approvalActionId==pe.SubmitInternalApproval?l.InternalApprovedById=e.employeeId:l.InternalApprovedById=i.internalApprovedById,t.push(l)}})),s?this.alertService.showMessage(this.moduleName,a,E.d.error):(this.isSpinnerVisible=!0,this.salesQuoteService.sentForInternalApproval(t).subscribe((function(t){L("#quoteVersion").modal("hide"),e.alertService.showMessage("Success","Saved Approver Process Successfully",E.d.success),e.isSpinnerVisible=!1,n>0&&e.onPartsApprovedEvent.emit(!0),e.getCustomerQuotesList()}),(function(t){e.alertService.showMessage(e.moduleName,"Data updating failed",E.d.error),e.isSpinnerVisible=!1,L("#quoteVersion").modal("hide")})))}},{key:"validateApprovalData",value:function(e){var t="";return e.approvalActionId==pe.SentForInternalApproval?e.internalSentDate||(t+="internal sent date is required <br/>"):e.approvalActionId==pe.SubmitInternalApproval?(e.internalStatusId!=me.Approved&&e.internalStatusId!=me.Rejected&&(t+="internal status is required<br/>"),e.internalApprovedDate||(t+="internal approved date is required<br/>")):e.approvalActionId==pe.SentForCustomerApproval?e.customerSentDate||(t+="Customer sent date is required<br/>"):e.approvalActionId==pe.SubmitCustomerApproval&&(e.customerStatusId!=me.Approved&&e.customerStatusId!=me.Rejected&&(t+="Customer status is required<br/>"),e.customerApprovedDate||(t+="Customer approved date is required<br/>")),t}},{key:"getApproversNames",value:function(){var e="";return this.approvers&&this.approvers.length>0&&this.approvers.forEach((function(t){""!=e&&(e+=","),e+=t.approverName})),e}},{key:"getApproversEmails",value:function(){return this.approvers&&this.approvers.length>0?this.approvers[0].approverEmails:""}},{key:"getApprovalActionInternalStatus",value:function(e){return!(!e.isSelected||e.approvalActionId!=pe.SubmitInternalApproval)}},{key:"getApprovalActionCustomerStatus",value:function(e){return!(!e.isSelected||e.approvalActionId!=pe.SubmitCustomerApproval)}},{key:"onAddTextAreaInfo",value:function(e,t){this.memoIndex=t,this.memoType=e,this.textAreaInfo=this.quotesList[t][e]}},{key:"onSaveTextAreaInfo",value:function(e){e&&(this.textAreaInfo=e,this.quotesList[this.memoIndex][this.memoType]=this.textAreaInfo),L("#memo-popup").modal("hide")}},{key:"onCloseTextAreaInfo",value:function(){L("#memo-popup").modal("hide")}},{key:"getInternalSentDateEnableStatus",value:function(e){return console.log("getInternalSentDateEnableStatus approver:",e),!e.isSelected||e.approvalActionId!=pe.SentForInternalApproval}},{key:"getinternalStatusIdEnableStatus",value:function(e){return!e.isSelected||e.approvalActionId!=pe.SubmitInternalApproval}},{key:"getcustomerSentDateEnableStatus",value:function(e){return!e.isSelected||e.approvalActionId!=pe.SentForCustomerApproval}},{key:"getcustomerStatusIdEnableStatus",value:function(e){return!e.isSelected||e.approvalActionId!=pe.SubmitCustomerApproval}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"employeeId",get:function(){return this.authService.currentUser?this.authService.currentUser.employeeId:0}},{key:"currentUserMasterCompanyId",get:function(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:null}}]),e}();ve.ctorParameters=function(){return[{type:E.b},{type:R.c},{type:j.a},{type:F.a},{type:z.a},{type:N.ActivatedRoute},{type:H.a},{type:_.a}]},n.b([Object(s.Input)()],ve.prototype,"salesQuoteView",void 0),n.b([Object(s.Input)()],ve.prototype,"customerContactList",void 0),n.b([Object(s.Output)()],ve.prototype,"quoteApprovedCheck",void 0),n.b([Object(s.Input)()],ve.prototype,"isViewMode",void 0),n.b([Object(s.Input)()],ve.prototype,"salesQuoteReference",void 0),n.b([Object(s.Input)()],ve.prototype,"customerIdFromQuoteList",void 0),n.b([Object(s.Input)()],ve.prototype,"salesQuoteIdFromQuoteList",void 0),n.b([Object(s.Input)()],ve.prototype,"marginSummary",void 0),n.b([Object(s.Output)("on-quote-parts-approved-event")],ve.prototype,"onPartsApprovedEvent",void 0),n.b([Object(s.Input)()],ve.prototype,"approvers",void 0),n.b([Object(s.ViewChild)("customerApprovalConfirmationModal",{static:!1})],ve.prototype,"customerApprovalConfirmationModal",void 0),ve=n.b([Object(s.Component)({selector:"app-sales-customer-approvals",template:n.c(r("BefB")).default,styles:[n.c(r("R2fv")).default]})],ve);var fe=r("OmvT"),ye=function e(){_classCallCheck(this,e),this.shipViaId=null,this.length=null,this.width=null,this.height=null,this.weight=null,this.memo="",this.amount=null,this.uomId=null,this.dimensionUOMId=null,this.currencyId=null,this.salesOrderQuoteFreightId=0,this.salesOrderQuoteId=null,this.salesOrderQuotePartId=null,this.markupPercentageId=null,this.markupFixedPrice=null,this.headerMarkupId=null,this.billingAmount=null,this.billingMethodId=null,this.billingRate=null,this.isActive=!0,this.isDeleted=!1,this.createdBy="",this.updatedBy="",this.createdDate=new Date,this.updatedDate=new Date,this.headerMarkupPercentageId=null},Se=function(){function e(t,r,n,a,i,o){_classCallCheck(this,e),this.salesOrderQuoteService=t,this.authService=r,this.alertService=n,this.commonService=a,this.modalService=i,this.cdRef=o,this.salesOrderFreightList=[],this.saveFreightListForSO=new s.EventEmitter,this.updateFreightListForSO=new s.EventEmitter,this.refreshData=new s.EventEmitter,this.view=!1,this.isQuote=!1,this.isView=!1,this.buildMethodDetails={},this.overAllMarkup="",this.costPlusType=0,this.isUpdate=!1,this.cols=[{field:"shipVia",header:"Ship Via"},{field:"weight",header:"Weight"},{field:"uom",header:"UOM"}],this.isEdit=!1,this.unitOfMeasureList=[],this.currencyList=[],this.isSpinnerVisible=!1,this.restorerecord={},this.deletedStatusInfo=!1,this.arrayEmplsit=[],this.setEditArray=[],this.freightAudiHistory=[],this.isEnableUpdateButton=!0,this.isSaveChargesDesabled=!0,this.storedData=[]}return _createClass(e,[{key:"ngOnInit",value:function(){if(this.freightForm){var e=new ye;e.amount=this.formateCurrency(e.amount),e.salesOrderQuoteId=this.salesOrderQuoteId,this.freightForm=[].concat(_toConsumableArray(this.freightForm),[new ye])}this.salesOrderFreightList&&this.salesOrderFreightList.length>0&&this.salesOrderFreightList[0].headerMarkupId&&(this.costPlusType=this.salesOrderFreightList[0].markupFixedPrice,this.overAllMarkup=Number(this.salesOrderFreightList[0].headerMarkupId),this.overAllMarkup=this.overAllMarkup?this.overAllMarkup:""),this.isView=!!this.isView&&this.isView}},{key:"ngOnChanges",value:function(){if(this.salesOrderFreightList&&this.salesOrderFreightList.length>0&&this.salesOrderFreightList[0].headerMarkupId&&(this.costPlusType=this.salesOrderFreightList[0].headerMarkupId,this.overAllMarkup=Number(this.salesOrderFreightList[0].headerMarkupPercentageId),this.overAllMarkup=this.overAllMarkup?this.overAllMarkup:""),this.salesOrderFreightList)for(var e in this.salesOrderFreightList=[],this.salesOrderFreightLists)this.salesOrderFreightList.push(this.salesOrderFreightLists[e])}},{key:"dismissModelAlett",value:function(){this.deleteModal.close()}},{key:"dismissModelAlettRestore",value:function(){this.modal.close()}},{key:"refresh",value:function(e){var t=this;this.isSpinnerVisible=!0,this.arrayEmplsit.push(0),Object($.a)(this.salesOrderQuoteService.getSalesQuoteFreights(this.salesOrderQuoteId,this.deletedStatusInfo),this.commonService.getShipViaDetailsByModuleActiveInactive(Object(fe.a)("Customer"),this.customerId,this.arrayEmplsit.join())).subscribe((function(e){t.isSpinnerVisible=!1,t.setFreightsData(e[0]),t.setShipViaList(e[1])}),(function(e){t.isSpinnerVisible=!1})),this.getunitOfMeasureList(""),this.CurrencyData("")}},{key:"onFilterUom",value:function(e){this.getunitOfMeasureList(e)}},{key:"getunitOfMeasureList",value:function(e){var t=this;this.setEditArray=[],1==this.isEdit?this.setEditArray.push(this.freightForm[0].dimensionUOMId?this.freightForm[0].dimensionUOMId:0,this.freightForm[0].uomId?this.freightForm[0].uomId:0):this.setEditArray.push(0);var r=e||"";this.commonService.autoSuggestionSmartDropDownList("UnitOfMeasure","UnitOfMeasureId","shortName",r,!0,20,this.setEditArray.join()).subscribe((function(e){t.unitOfMeasureList=e}),(function(e){t.isSpinnerVisible=!1}))}},{key:"onFilterCurrency",value:function(e){this.CurrencyData(e)}},{key:"CurrencyData",value:function(e){var t=this;this.setEditArray=[],1==this.isEdit?this.setEditArray.push(this.freightForm[0].currencyId?this.freightForm[0].currencyId:0):this.setEditArray.push(0);var r=e||"";this.commonService.autoSuggestionSmartDropDownList("Currency","CurrencyId","Code",r,!0,20,this.setEditArray.join()).subscribe((function(e){t.currencyList=e}),(function(e){t.isSpinnerVisible=!1}))}},{key:"setShipViaList",value:function(e){e&&e.length>0?this.shipViaList=e.map((function(e){return{label:e.name,value:e.shippingViaId}})):this.shipViaList=[]}},{key:"createNew",value:function(){this.isEdit=!1;var e=this.getNewFreightObject();this.freightForm=[e]}},{key:"getNewFreightObject",value:function(){var e=new ye;return e.amount=this.formateCurrency(e.amount),e.salesOrderQuoteId=this.salesOrderQuoteId,e.billingMethodId=this.costPlusType,e.createdBy=this.userName,e.createdDate=new Date,e.updatedBy=this.userName,e.updatedDate=new Date,e.headerMarkupPercentageId=this.overAllMarkup,e.headerMarkupId=this.costPlusType,e.billingAmount=this.formateCurrency(Number(e.amount.toString().replace(/\,/g,""))),e}},{key:"addNewRow",value:function(){var e=this.getNewFreightObject();e.billingAmount=this.formateCurrency(Number(e.amount.toString().replace(/\,/g,""))),this.freightForm=[].concat(_toConsumableArray(this.freightForm),[e])}},{key:"edit",value:function(e,t){this.isEnableUpdateButton=!0,this.mainEditingIndex=t,this.isEdit=!0,e.amount=this.formateCurrency(e.amount),this.freightForm=[e]}},{key:"onAddTextAreaInfo",value:function(e,t){this.memoIndex=t,this.textAreaInfo=e.memo}},{key:"onSaveTextAreaInfo",value:function(e){this.isEnableUpdateButton=!1,e&&(this.textAreaInfo=e,this.freightForm[this.memoIndex].memo=this.textAreaInfo),L("#textarea-popupFreight").modal("hide")}},{key:"onCloseTextAreaInfo",value:function(){L("#textarea-popupFreight").modal("hide")}},{key:"createFreightsQuote",value:function(){for(var e=this,t=this.salesOrderFreightList,r=[],n=0;n<t.length;n++)r=[].concat(_toConsumableArray(r),_toConsumableArray(t[n]));r=r.map((function(t){return Object.assign({},t,{headerMarkupId:Number(e.costPlusType),headerMarkupPercentageId:e.overAllMarkup,markupFixedPrice:e.freightFlatBillingAmount})})),this.formateCurrency(this.freightFlatBillingAmount),this.costPlusType,this.isSpinnerVisible=!0,this.salesOrderQuoteService.createFreight(r).subscribe((function(t){e.isSpinnerVisible=!1,e.alertService.showMessage("","SO Quote Freight saved successfully",E.d.success),e.refreshFreightsOnSaveOrDelete(),e.saveFreightListForSO.emit(e.freightFlatBillingAmount)}),(function(t){e.isSpinnerVisible=!1})),this.isSaveChargesDesabled=!0,this.storedData=[]}},{key:"markupChanged",value:function(e,t){var r=this;try{this.markupList.forEach((function(n){"row"==t&&n.value==e.markupPercentageId?e.billingAmount=r.formateCurrency(Number(e.amount.toString().replace(/\,/g,""))+Number(e.amount.toString().replace(/\,/g,""))/100*Number(n.label)):"all"==t&&n.value==r.overAllMarkup&&r.salesOrderFreightList.forEach((function(e){e.billingMethodId&&1==Number(e.billingMethodId)&&(e.markupPercentageId=Number(r.overAllMarkup),e.headerMarkupId=Number(r.costPlusType),e.billingAmount=r.formateCurrency(Number(e.amount.toString().replace(/\,/g,""))+Number(e.amount.toString().replace(/\,/g,""))/100*Number(n.label)))}))}))}catch(n){}}},{key:"tmchange",value:function(){var e,t=_createForOfIteratorHelper(this.salesOrderFreightList);try{for(t.s();!(e=t.n()).done;){var r=e.value;r.billingMethodId=this.costPlusType,r.headerMarkupId=this.costPlusType,r.headerMarkupPercentageId=this.overAllMarkup,r.markupPercentageId="",r.billingAmount=this.formateCurrency(Number(r.amount.toString().replace(/\,/g,""))),3==this.costPlusType&&(r.billingAmount="0.00",this.freightFlatBillingAmount="0.00"),this.overAllMarkup="",r.headerMarkupPercentageId=this.overAllMarkup}}catch(n){t.e(n)}finally{t.f()}}},{key:"getTotalAmount",value:function(){var e=this,t=0;return this.salesOrderFreightList&&this.salesOrderFreightList.forEach((function(r){t+=Number(e.getTotalTaskAmount(r))})),this.formateCurrency(t)}},{key:"getTotalTaskAmount",value:function(e){var t=0;return e.amount&&!e.isDeleted&&(t+=Number(e.amount.toString().replace(/\,/g,""))),t.toFixed(2)}},{key:"getTotalBillingAmount",value:function(){var e=this,t=0;return this.salesOrderFreightList&&this.salesOrderFreightList.forEach((function(r){t+=Number(e.getTotalTaskBillingAmount(r))})),this.freightFlatBillingAmount=t.toFixed(2),this.formateCurrency(t)}},{key:"getTotalTaskBillingAmount",value:function(e){var t=0;return e.billingAmount&&!e.isDeleted&&(t+=Number(e.billingAmount.toString().replace(/\,/g,""))),t.toFixed(2)}},{key:"formateCurrency",value:function(e){return e?Object(W.b)(e,2):"0.00"}},{key:"openDelete",value:function(e,t,r){this.selectedRowForDelete=t,this.selectedRowIndexForDelete=r,this.deleteModal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"dismissModel",value:function(){this.deleteModal.close()}},{key:"openInterShipViaHistory",value:function(e,t){var r=this;t&&t.salesOrderQuoteFreightId&&this.salesOrderQuoteService.getSOQFreightsHistory(t.salesOrderQuoteFreightId).subscribe((function(t){return r.onAuditInterShipViaHistoryLoadSuccessful(t,e)}),(function(e){r.isSpinnerVisible=!1}))}},{key:"onAuditInterShipViaHistoryLoadSuccessful",value:function(e,t){this.alertService.stopLoadingMessage(),this.freightAudiHistory=e,this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1,windowClass:"assetMange"})}},{key:"dismissModelHistory",value:function(){this.modal.close()}},{key:"getColorCodeForHistory",value:function(e,t,r){var n=this.freightAudiHistory,s=n.length;if(e>=0&&e<=s)return e+1===s||n[e+1][t]===r}},{key:"enableUpdate",value:function(){this.isEnableUpdateButton=!1}},{key:"validated",value:function(){this.isSaveChargesDesabled=!1}},{key:"deleteRow",value:function(e,t){this.freightForm.splice(e,1)}},{key:"formatStringToNumberGlobal",value:function(e){var t=Number(e.toString().replace(/\,/g,""));return Object(W.c)(t)}},{key:"restore",value:function(e,t,r){this.restorerecord=t,this.deletedrowIndex=r,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"restoreRecord",value:function(){var e=this;this.restorerecord&&this.restorerecord.salesOrderQuoteFreightId>0?this.commonService.updatedeletedrecords("SalesOrderQuoteFreight","SalesOrderQuoteFreightId",this.restorerecord.salesOrderQuoteFreightId).subscribe((function(t){e.refreshFreightsOnSaveOrDelete(),e.modal.close(),e.alertService.showMessage("Success","Successfully Updated Status",E.d.success)}),(function(e){})):(this.restorerecord.isDeleted=!1,this.salesOrderFreightList.splice(this.deletedrowIndex,1),this.storedData.forEach((function(t){JSON.stringify(t)===JSON.stringify(e.restorerecord)&&(t.isDeleted=!1)})),this.alertService.showMessage("Success","Successfully Updated Status",E.d.success),this.modal.close())}},{key:"delete",value:function(){var e=this;if(this.isSpinnerVisible=!0,this.deleteModal.close(),this.selectedRowForDelete.salesOrderQuoteFreightId){var t=this.selectedRowForDelete.salesOrderQuoteFreightId;this.salesOrderQuoteService.deletesalesOrderFreightList(t,this.userName).subscribe((function(t){e.isSpinnerVisible=!1,e.alertService.showMessage("","Deleted Sales Order Quote Freight Successfully",E.d.success),e.refreshFreightsOnSaveOrDelete(!0)}),(function(t){e.isSpinnerVisible=!1}))}else this.selectedRowForDelete.isDeleted=!0,this.isSpinnerVisible=!1,this.storedData&&0!=this.storedData.length?this.storedData.forEach((function(t){JSON.stringify(t)===JSON.stringify(e.selectedRowForDelete)&&(t.isDeleted=!0,e.salesOrderFreightList.splice(e.selectedRowIndexForDelete,1))})):this.salesOrderFreightList.splice(this.selectedRowIndexForDelete,1),this.storedData=_toConsumableArray(this.storedData),this.alertService.showMessage("","Deleted Sales Order Quote Freight Successfully",E.d.success);L("#addNewFreight").modal("hide"),this.isEdit=!1,this.isSaveChargesDesabled=!1}},{key:"getDeleteListByStatus",value:function(e){this.deletedStatusInfo=e||!1,this.refreshFreightsOnSaveOrDelete()}},{key:"refreshFreightsOnSaveOrDelete",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.isSpinnerVisible=!0,this.salesOrderFreightList=[],this.salesOrderQuoteService.getSalesQuoteFreights(this.salesOrderQuoteId,this.deletedStatusInfo).subscribe((function(r){e.isSpinnerVisible=!1,e.storedData&&0!=e.storedData.length?(1==e.deletedStatusInfo?(e.deletedStatusInfo=!0,e.storedData.forEach((function(e){1==e.isDeleted&&0==e.salesOrderQuoteFreightId&&r.push(e)}))):(e.deletedStatusInfo=!1,e.storedData.forEach((function(e){0==e.isDeleted&&0==e.salesOrderQuoteFreightId&&r.push(e)}))),e.setFreightsData(r)):e.setFreightsData(r),t&&(e.getTotalBillingAmount(),e.updateFreightListForSO.emit(e.freightFlatBillingAmount))}),(function(t){e.isSpinnerVisible=!1}))}},{key:"setFreightsData",value:function(e){e&&e.length>0?(this.salesOrderFreightList=e,this.costPlusType=e[0].headerMarkupId,this.overAllMarkup=e[0].headerMarkupPercentageId,3==Number(this.costPlusType)&&(this.freightFlatBillingAmount=e[0].markupFixedPrice),this.isUpdate=!0):(this.salesOrderFreightList=[],this.isUpdate=!1),this.freightForm=[],this.salesOrderFreightLists=[]}},{key:"saveFreightList",value:function(){var e=this;if(this.freightForm=this.freightForm.map((function(t){return Object.assign({},t,{uom:t.uomId?Object(W.g)("label","value",t.uomId,e.unitOfMeasureList):"",dimensionUOM:t.dimensionUOMId?Object(W.g)("label","value",t.dimensionUOMId,e.unitOfMeasureList):"",currency:t.currencyId?Object(W.g)("label","value",t.currencyId,e.currencyList):"",billingAmount:e.formateCurrency(t.amount)})})),this.isEdit)1==this.costPlusType&&this.markupChanged(this.freightForm[0],"row"),this.salesOrderFreightList[this.mainEditingIndex]=this.freightForm[0],L("#addNewFreight").modal("hide"),this.isEdit=!1;else{var t=[];for(var r in this.salesOrderFreightList.forEach((function(e){t=[].concat(_toConsumableArray(t),_toConsumableArray(e))})),t=[].concat(_toConsumableArray(t),_toConsumableArray(this.freightForm)),this.salesOrderFreightLists=t,this.salesOrderFreightList=[],this.salesOrderFreightLists)this.salesOrderFreightList.push(this.salesOrderFreightLists[r]);1==this.costPlusType&&this.markupChanged({},"all"),L("#addNewFreight").modal("hide")}this.isEnableUpdateButton=!0,this.isSaveChargesDesabled=!1,this.storedData=_toConsumableArray(this.salesOrderFreightList)}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();Se.ctorParameters=function(){return[{type:F.a},{type:z.a},{type:E.b},{type:_.a},{type:R.c},{type:s.ChangeDetectorRef}]},n.b([Object(s.Input)()],Se.prototype,"salesOrderFreightList",void 0),n.b([Object(s.Input)()],Se.prototype,"freightForm",void 0),n.b([Object(s.Input)()],Se.prototype,"customerId",void 0),n.b([Object(s.Input)()],Se.prototype,"salesOrderQuoteId",void 0),n.b([Object(s.Output)()],Se.prototype,"saveFreightListForSO",void 0),n.b([Object(s.Output)()],Se.prototype,"updateFreightListForSO",void 0),n.b([Object(s.Output)()],Se.prototype,"refreshData",void 0),n.b([Object(s.Input)()],Se.prototype,"view",void 0),n.b([Object(s.Input)()],Se.prototype,"isQuote",void 0),n.b([Object(s.Input)()],Se.prototype,"markupList",void 0),n.b([Object(s.Input)()],Se.prototype,"isView",void 0),n.b([Object(s.Input)()],Se.prototype,"buildMethodDetails",void 0),Se=n.b([Object(s.Component)({selector:"app-sales-order-quote-freight",template:n.c(r("Icu2")).default,encapsulation:s.ViewEncapsulation.None,styles:[n.c(r("WQW6")).default]})],Se);var Ie=function e(){_classCallCheck(this,e),this.salesOrderQuoteChargesId=0,this.isDeleted=!1,this.isActive=!0},Ce=r("BhKy"),we=function(){function e(t,r,n,a,i,o,l,d){_classCallCheck(this,e),this.salesOrderQuoteService=t,this.authService=r,this.alertService=n,this.commonService=a,this.actionService=i,this.cdRef=o,this.modalService=l,this.vendorService=d,this.salesOrderChargesList=[],this.saveChargesListForSO=new s.EventEmitter,this.updateChargesListForSO=new s.EventEmitter,this.refreshData=new s.EventEmitter,this.view=!1,this.isQuote=!1,this.isView=!1,this.costPlusType=0,this.cols=[{field:"shipVia",header:"Ship Via"},{field:"weight",header:"Weight"},{field:"uom",header:"UOM"}],this.isEdit=!1,this.unitOfMeasureList=[],this.isSpinnerVisible=!1,this.chargesTypes=[],this.vendorCollection=[],this.allVendors=[],this.isUpdate=!1,this.setEditArray=[],this.deletedStatusInfo=!1,this.restorerecord={},this.chargesAudiHistory=[],this.isEnableUpdateButton=!0,this.isSaveChargesDesabled=!0,this.arrayVendlsit=[],this.storedData=[]}return _createClass(e,[{key:"ngOnInit",value:function(){if(this.chargeForm){var e=new Ie;e.unitCost=this.formateCurrency(e.unitCost),e.salesOrderQuoteId=this.salesOrderQuoteId,this.chargeForm=[].concat(_toConsumableArray(this.chargeForm),[new Ie])}this.salesOrderChargesList&&this.salesOrderChargesList.length>0&&this.salesOrderChargesList[0].headerMarkupId&&(this.costPlusType=this.salesOrderChargesList[0].markupFixedPrice,this.overAllMarkup=Number(this.salesOrderChargesList[0].headerMarkupId)),this.isView=!!this.isView&&this.isView}},{key:"ngOnChanges",value:function(){if(this.salesOrderChargesList&&this.salesOrderChargesList.length>0&&this.salesOrderChargesList[0].headerMarkupId&&(this.costPlusType=this.salesOrderChargesList[0].headerMarkupId,this.overAllMarkup=Number(this.salesOrderChargesList[0].headerMarkupPercentageId)),this.salesOrderChargesList)for(var e in this.salesOrderChargesList=[],this.salesOrderChargesLists)this.salesOrderChargesList.push(this.salesOrderChargesLists[e])}},{key:"refresh",value:function(e){var t=this;this.isSpinnerVisible=!0,Object($.a)(this.salesOrderQuoteService.getSalesQuoteCharges(this.salesOrderQuoteId,this.deletedStatusInfo),this.actionService.getCharges()).subscribe((function(e){t.isSpinnerVisible=!1,t.setChargesData(e[0]),t.setVendors()}),(function(e){t.isSpinnerVisible=!1})),this.getChargesDatya(""),this.vendorList("")}},{key:"getChargesDatya",value:function(e){var t=this;this.setEditArray=[],1==this.isEdit?this.setEditArray.push(this.chargeForm[0].chargesTypeId?this.chargeForm[0].chargesTypeId:0):this.setEditArray.push(0);var r=e||"";this.commonService.autoSuggestionSmartDropDownList("Charge","ChargeId","ChargeType",r,!0,20,this.setEditArray.join()).subscribe((function(e){t.chargesTypes=e.map((function(e){return{chargeType:e.label,chargeId:e.value}}))}),(function(e){t.isSpinnerVisible=!1}))}},{key:"getDeleteListByStatus",value:function(e){this.deletedStatusInfo=e||!1,this.refreshOnDataSaveOrEditORDelete()}},{key:"setChargesData",value:function(e){e&&e.length>0?(this.salesOrderChargesList=e,this.setVendors(),this.costPlusType=e[0].headerMarkupId,this.overAllMarkup=e[0].headerMarkupPercentageId,3==Number(this.costPlusType)&&(this.chargesFlatBillingAmount=e[0].markupFixedPrice),this.isUpdate=!0):(this.salesOrderChargesList=[],this.isUpdate=!1),this.chargeForm=[],this.salesOrderChargesLists=[]}},{key:"createNew",value:function(){this.isEdit=!1;var e=this.getNewChargeObject();this.chargeForm=[e]}},{key:"getNewChargeObject",value:function(){var e=new Ie;return e.unitCost=this.formateCurrency(e.unitCost),e.extendedCost=this.formateCurrency(e.extendedCost),e.salesOrderQuoteId=this.salesOrderQuoteId,e.billingMethodId=this.costPlusType,e.createdBy=this.userName,e.createdDate=new Date,e.updatedBy=this.userName,e.updatedDate=new Date,e.headerMarkupPercentageId=this.overAllMarkup,e.headerMarkupId=this.costPlusType,e.unitCost=this.formateCurrency(Number(e.unitCost.toString().replace(/\,/g,""))),e.billingRate=this.formateCurrency(Number(e.unitCost.toString().replace(/\,/g,""))),e.extendedCost=this.formateCurrency(Number(e.extendedCost.toString().replace(/\,/g,""))),e.billingAmount=this.formateCurrency(Number(e.extendedCost.toString().replace(/\,/g,""))),e}},{key:"addNewRow",value:function(){var e=this.getNewChargeObject();this.chargeForm=[].concat(_toConsumableArray(this.chargeForm),[e])}},{key:"edit",value:function(e,t){this.isEnableUpdateButton=!0,this.mainEditingIndex=t,this.isEdit=!0,e.unitCost=this.formateCurrency(e.unitCost),e.extendedCost=this.formateCurrency(e.extendedCost),this.chargeForm=[e],this.vendorList("")}},{key:"onAddTextAreaInfo",value:function(e,t){this.memoIndex=t,this.textAreaInfo=e.memo}},{key:"onSaveTextAreaInfo",value:function(e){e&&(this.textAreaInfo=e,this.chargeForm[this.memoIndex].memo=this.textAreaInfo),L("#textarea-popupFreight").modal("hide")}},{key:"onCloseTextAreaInfo",value:function(){L("#textarea-popupFreight").modal("hide")}},{key:"saveFreightList",value:function(){var e=this;if(this.chargeForm=this.chargeForm.map((function(t){return Object.assign({},t,{billingAmount:e.formateCurrency(t.extendedCost),billingRate:e.formateCurrency(t.unitCost)})})),this.isEdit)1==this.costPlusType&&this.markupChanged(this.chargeForm[0],"row"),this.salesOrderChargesList[this.mainEditingIndex]=this.chargeForm[0],L("#addNewCharges").modal("hide"),this.isEdit=!1;else{var t=[];for(var r in this.salesOrderChargesList.forEach((function(e){t=[].concat(_toConsumableArray(t),_toConsumableArray(e))})),t=[].concat(_toConsumableArray(t),_toConsumableArray(this.chargeForm)),this.salesOrderChargesLists=t,this.salesOrderChargesList=[],this.salesOrderChargesLists)this.salesOrderChargesList.push(this.salesOrderChargesLists[r]);1==this.costPlusType&&this.markupChanged({},"all"),L("#addNewCharges").modal("hide")}this.isEnableUpdateButton=!0,this.isSaveChargesDesabled=!1,this.storedData=_toConsumableArray(this.salesOrderChargesList)}},{key:"createChargesQuote",value:function(){for(var e=this,t=this.salesOrderChargesList,r=[],n=0;n<t.length;n++)r=[].concat(_toConsumableArray(r),_toConsumableArray(t[n]));r=r.map((function(t){return Object.assign({},t,{headerMarkupId:Number(e.costPlusType),headerMarkupPercentageId:e.overAllMarkup,markupFixedPrice:e.chargesFlatBillingAmount,vendorId:Object(W.a)("vendorId",t.vendor)})})),this.formateCurrency(this.chargesFlatBillingAmount),this.costPlusType,this.isSpinnerVisible=!0,this.salesOrderQuoteService.createSOQCharge(r).subscribe((function(t){e.isSpinnerVisible=!1,e.alertService.showMessage("","Created Sales Order Charge Successfully",E.d.success),e.refreshOnDataSaveOrEditORDelete(),e.saveChargesListForSO.emit(e.chargesFlatBillingAmount)}),(function(t){e.isSpinnerVisible=!1})),this.isSaveChargesDesabled=!0,this.storedData=[]}},{key:"onDataLoadError",value:function(e){this.isSpinnerVisible=!1;var t="";e.message&&(t=e.message),this.alertService.resetStickyMessage(),this.alertService.showStickyMessage("SO Quote",t,E.d.error,e)}},{key:"markupChanged",value:function(e,t){var r=this;try{this.markupList.forEach((function(n){"row"==t&&n.value==e.markupPercentageId?(e.billingAmount=r.formateCurrency(Number(e.extendedCost.toString().replace(/\,/g,""))+Number(e.extendedCost.toString().replace(/\,/g,""))/100*Number(n.label)),e.billingRate=r.formateCurrency(Number(e.unitCost.toString().replace(/\,/g,""))+Number(e.unitCost.toString().replace(/\,/g,""))/100*Number(n.label))):"all"==t&&n.value==r.overAllMarkup&&r.salesOrderChargesList.forEach((function(e){e.billingMethodId&&1==Number(e.billingMethodId)&&(e.markupPercentageId=Number(r.overAllMarkup),e.headerMarkupId=Number(r.costPlusType),e.billingAmount=r.formateCurrency(Number(e.extendedCost.toString().replace(/\,/g,""))+Number(e.extendedCost.toString().replace(/\,/g,""))/100*Number(n.label)),e.billingRate=r.formateCurrency(Number(e.unitCost.toString().replace(/\,/g,""))+Number(e.unitCost.toString().replace(/\,/g,""))/100*Number(n.label)))}))}))}catch(n){}}},{key:"tmchange",value:function(){var e,t=_createForOfIteratorHelper(this.salesOrderChargesList);try{for(t.s();!(e=t.n()).done;){var r=e.value;r.billingMethodId=this.costPlusType,r.headerMarkupId=this.costPlusType,r.headerMarkupPercentageId=this.overAllMarkup,r.markupPercentageId="",r.billingRate="0.00",r.billingAmount=this.formateCurrency(Number(r.extendedCost.toString().replace(/\,/g,""))),3==this.costPlusType&&(r.billingAmount="0.00",this.chargesFlatBillingAmount="0.00"),this.overAllMarkup="",r.headerMarkupPercentageId=this.overAllMarkup}}catch(n){t.e(n)}finally{t.f()}}},{key:"getTotalAmount",value:function(){var e=this,t=0;return this.salesOrderChargesList&&this.salesOrderChargesList.forEach((function(r){t+=Number(e.getTotalTaskAmount(r))})),this.formateCurrency(t)}},{key:"getTotalTaskAmount",value:function(e){var t=0;return e.extendedCost&&!e.isDeleted&&(t+=Number(e.extendedCost.toString().replace(/\,/g,""))),t.toFixed(2)}},{key:"getTotalBillingAmount",value:function(){var e=this,t=0;return this.salesOrderChargesList&&this.salesOrderChargesList.forEach((function(r){t+=Number(e.getTotalTaskBillingAmount(r))})),this.chargesFlatBillingAmount=t.toFixed(2),this.formateCurrency(t)}},{key:"getTotalTaskBillingAmount",value:function(e){var t=0;return e.billingAmount&&!e.isDeleted&&(t+=Number(e.billingAmount.toString().replace(/\,/g,""))),t.toFixed(2)}},{key:"formateCurrency",value:function(e){return e?Object(W.b)(e,2):"0.00"}},{key:"calculateExtendedCostSummation",value:function(){return this.salesOrderChargesList.filter((function(e){return 1!=e.isDelete})).reduce((function(e,t){return e+parseFloat(null==t.extendedCost||""===t.extendedCost?0:t.extendedCost.toString().replace(/\,/g,""))}),0)}},{key:"calculateExtendedCost",value:function(e){e.unitCost=e.unitCost?Object(W.b)(e.unitCost,2):"";var t=parseFloat(e.quantity.toString().replace(/\,/g,""))*parseFloat(e.unitCost.toString().replace(/\,/g,""));e.extendedCost=t>0?Object(W.b)(t,2):"0.00",this.calculateExtendedCostSummation()}},{key:"dismissModelAlett",value:function(){this.modal.close()}},{key:"openDelete",value:function(e,t,r){this.selectedRowForDelete=t,this.selectedRowIndexForDelete=r,this.deleteModal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"dismissModel",value:function(){this.deleteModal.close()}},{key:"onDataLoadFailed",value:function(e){var t=e,r="";if(t.message){if(t.error&&t.error.errors.length>0)for(var n=0;n<t.error.errors.length;n++)r=r+t.error.errors[n].message+"<br/>";this.alertService.showMessage(t.error.message,r,E.d.error)}else this.alertService.showMessage("Error",e.error,E.d.error)}},{key:"openInterShipViaHistory",value:function(e,t){var r=this;t&&t.salesOrderQuoteChargesId&&this.salesOrderQuoteService.getSOQChargesHistory(t.salesOrderQuoteChargesId).subscribe((function(t){return r.onAuditInterShipViaHistoryLoadSuccessful(t,e)}),(function(e){r.isSpinnerVisible=!1}))}},{key:"onAuditInterShipViaHistoryLoadSuccessful",value:function(e,t){this.alertService.stopLoadingMessage(),this.chargesAudiHistory=e,this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1,windowClass:"assetMange"})}},{key:"dismissModelHistory",value:function(){this.modal.close()}},{key:"getColorCodeForHistory",value:function(e,t,r){var n=this.chargesAudiHistory,s=n.length;if(e>=0&&e<=s)return e+1===s||n[e+1][t]===r}},{key:"enableUpdate",value:function(){this.isEnableUpdateButton=!1}},{key:"validated",value:function(){this.isSaveChargesDesabled=!1}},{key:"deleteRow",value:function(e,t){this.chargeForm.splice(e,1)}},{key:"vendorList",value:function(e){var t=this;this.arrayVendlsit=[],1==this.isEdit&&this.salesOrderChargesList.forEach((function(e){t.arrayVendlsit.push(e.vendorId)})),this.arrayVendlsit.push(0),this.vendorService.getVendorNameCodeListwithFilter(e,20,this.arrayVendlsit.join()).subscribe((function(e){t.allVendors=e.map((function(e){return{vendorId:e.vendorId,vendorName:e.vendorName}})),t.vendorCollection=t.allVendors}),(function(e){t.isSpinnerVisible=!1}))}},{key:"filterVendor",value:function(e){e&&null!=e.query?this.vendorList(e.query):this.vendorList("")}},{key:"setVendors",value:function(){var e,t=_createForOfIteratorHelper(this.salesOrderChargesList);try{for(t.s();!(e=t.n()).done;){var r=e.value,n=this.allVendors.filter((function(e){return e.vendorId==r.vendorId}))[0];null!=n&&(r.vendor={vendorId:n.vendorId,vendorName:n.vendorName})}}catch(s){t.e(s)}finally{t.f()}}},{key:"formatStringToNumberGlobal",value:function(e){var t=Number(e.toString().replace(/\,/g,""));return Object(W.c)(t)}},{key:"delete",value:function(){var e=this;if(this.deleteModal.close(),this.isSpinnerVisible=!0,this.selectedRowForDelete.salesOrderQuoteChargesId){var t=this.selectedRowForDelete.salesOrderQuoteChargesId;this.salesOrderQuoteService.deletesalesOrderChargesList(t,this.userName).subscribe((function(t){e.alertService.showMessage("","Deleted Sales Order Charge Successfully",E.d.success),e.isSpinnerVisible=!1,e.refreshOnDataSaveOrEditORDelete(!0)}),(function(t){e.isSpinnerVisible=!1}))}else this.selectedRowForDelete.isDeleted=!0,this.isSpinnerVisible=!1,this.storedData&&0!=this.storedData.length?this.storedData.forEach((function(t){JSON.stringify(t)===JSON.stringify(e.selectedRowForDelete)&&(t.isDeleted=!0,e.salesOrderChargesList.splice(e.selectedRowIndexForDelete,1))})):this.salesOrderChargesList.splice(this.selectedRowIndexForDelete,1),this.storedData=_toConsumableArray(this.storedData),this.alertService.showMessage("","Deleted Sales Order Quote Freight Successfully",E.d.success);L("#addNewCharges").modal("hide"),this.isEdit=!1,this.isSaveChargesDesabled=!1}},{key:"restoreRecord",value:function(){var e=this;this.restorerecord&&this.restorerecord.salesOrderQuoteChargesId>0?this.commonService.updatedeletedrecords("SalesOrderQuoteCharges","SalesOrderQuoteChargesId",this.restorerecord.salesOrderQuoteChargesId).subscribe((function(t){e.refreshOnDataSaveOrEditORDelete(),e.modal.close(),e.alertService.showMessage("Success","Successfully Updated Status",E.d.success)}),(function(t){e.isSpinnerVisible=!1})):(this.restorerecord.isDeleted=!1,this.salesOrderChargesList.splice(this.deletedrowIndex,1),this.storedData.forEach((function(t){JSON.stringify(t)===JSON.stringify(e.restorerecord)&&(t.isDeleted=!1)})),this.alertService.showMessage("Success","Successfully Updated Status",E.d.success),this.modal.close())}},{key:"restore",value:function(e,t,r){this.restorerecord=t,this.deletedrowIndex=r,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"refreshOnDataSaveOrEditORDelete",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.isSpinnerVisible=!0,this.salesOrderChargesList=[],this.salesOrderQuoteService.getSalesQuoteCharges(this.salesOrderQuoteId,this.deletedStatusInfo).subscribe((function(r){e.isSpinnerVisible=!1,e.storedData&&0!=e.storedData.length?(1==e.deletedStatusInfo?(e.deletedStatusInfo=!0,e.storedData.forEach((function(e){1==e.isDeleted&&0==e.salesOrderQuoteChargesId&&r.push(e)}))):(e.deletedStatusInfo=!1,e.storedData.forEach((function(e){0==e.isDeleted&&0==e.salesOrderQuoteChargesId&&r.push(e)}))),e.setChargesData(r)):e.setChargesData(r),t&&(e.getTotalBillingAmount(),e.updateChargesListForSO.emit(e.chargesFlatBillingAmount))}),(function(t){e.isSpinnerVisible=!1}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();we.ctorParameters=function(){return[{type:F.a},{type:z.a},{type:E.b},{type:_.a},{type:Ce.a},{type:s.ChangeDetectorRef},{type:R.c},{type:ne.a}]},n.b([Object(s.Input)()],we.prototype,"salesOrderChargesList",void 0),n.b([Object(s.Input)()],we.prototype,"chargeForm",void 0),n.b([Object(s.Input)()],we.prototype,"customerId",void 0),n.b([Object(s.Input)()],we.prototype,"salesOrderQuoteId",void 0),n.b([Object(s.Output)()],we.prototype,"saveChargesListForSO",void 0),n.b([Object(s.Output)()],we.prototype,"updateChargesListForSO",void 0),n.b([Object(s.Output)()],we.prototype,"refreshData",void 0),n.b([Object(s.Input)()],we.prototype,"view",void 0),n.b([Object(s.Input)()],we.prototype,"isQuote",void 0),n.b([Object(s.Input)()],we.prototype,"markupList",void 0),n.b([Object(s.Input)()],we.prototype,"isView",void 0),we=n.b([Object(s.Component)({selector:"app-sales-order-quote-charges",template:n.c(r("NSO6")).default,encapsulation:s.ViewEncapsulation.None,styles:[n.c(r("4YS2")).default]})],we);var xe=function e(){_classCallCheck(this,e),this.sales=0,this.misc=0,this.netSales=0,this.productCost=0,this.marginAmount=0,this.marginPercentage=0,this.freightAmount=0},Oe=r("nFgK"),ke=function e(){_classCallCheck(this,e),this.quantityRequested=0,this.fixRate=0,this.freight=0,this.misc=0,this.netSalesPriceExtended=0,this.salesDiscountExtended=0,this.grossSalePrice=0,this.taxAmount=0,this.unitCostExtended=0,this.marginAmountExtended=0,this.marginPercentageExtended=0,this.totalSales=0,this.quantityToBeQuoted=0,this.quantityAlreadyQuoted=0,this.childParts=[],this.hidePart=!1},De=function(){function e(t,r,n,a,i){_classCallCheck(this,e),this.modalService=t,this.salesQuoteService=r,this.alertService=n,this.authService=a,this.commonService=i,this.selectedSummaryRowIndex=null,this.selectedParts=[],this.summaryParts=[],this.auditHistory=[],this.inputValidCheckHeader=!1,this.summaryColumns=[],this.totalFreights=0,this.totalCharges=0,this.myEvent=new s.EventEmitter,this.isEdit=!1,this.close=new s.EventEmitter,this.onPartsSavedEvent=new s.EventEmitter,this.isSuccess=!1,this.isSpinnerVisible=!1,this.isStockLineViewMode=!1,this.canSaveParts=!1,this.priorities=[],this.saveButton=!1,this.enableUpdateButton=!1,this.show=!1,this.part=new Oe.a}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;this.salesQuoteService.getSearchPartObject().subscribe((function(t){e.query=t})),this.salesQuoteService.getSelectedParts().subscribe((function(t){e.selectedParts=t||[],e.filterParts(),e.getDefaultCurrency()})),this.columns=[],this.initColumns()}},{key:"onPaging",value:function(e){}},{key:"refresh",value:function(){var e=this;if(this.salesQuoteService.getSelectedParts().subscribe((function(t){e.selectedParts=t||[],e.filterParts()})),this.canSaveParts=!0,this.salesQuote.priorities){var t=this.salesQuote.priorities.filter((function(e){return 1==e.isActive}));t&&t.length>0&&(this.priorities=t)}this.summaryParts&&this.summaryParts.length>0&&this.summaryParts.forEach((function(t){t.childParts&&t.childParts.length>0&&t.childParts.forEach((function(t){if(t.salesOrderQuotePartId&&!e.priorities.find((function(e){return e.priorityId==t.priorityId}))){var r=e.salesQuote.priorities.find((function(e){return e.priorityId==t.priorityId}));r&&e.priorities.push(r)}}))}))}},{key:"getDefaultCurrency",value:function(){var e=this;this.legalEntity=19,this.commonService.getDefaultCurrency(this.legalEntity).subscribe((function(t){e.defaultCurrencyId=t.currencyId,e.defaultCurrencyDiscription=t.currencyName}),(function(t){e.isSpinnerVisible=!1;var r=t;e.onDataLoadFailed(r)}))}},{key:"formatNumber",value:function(e,t){return Object(W.b)(e,t)}},{key:"initColumns",value:function(){this.columns=[{field:"partNumber",header:"PN",width:"130px"},{field:"description",header:"PN Description",width:"250px"},{field:"stockLineNumber",header:"Stk Line Num",width:"100px"},{field:"serialNumber",header:"Ser Num",width:"70px"},{field:"conditionDescription",header:"Cond",width:"70px"},{field:"priorityName",header:"Priority",width:"100px"},{field:"openDate",header:"Quote Date",width:"100px"},{field:"qtyAvailable",header:"Qty Req",width:"90px"},{field:"quantityToBeQuoted",header:"Qty to Quote",width:"70px"},{field:"quantityAlreadyQuoted",header:"Qty Prev Quoted",width:"70px"},{field:"customerRequestDate",header:"Cust Request Date",width:"155px"},{field:"promisedDate",header:"Cust Promised Date",width:"155px"},{field:"estimatedShipDate",header:"Est.Ship Date",width:"155px"},{field:"statusName",header:"Status",width:"70px"},{field:"unitCostPerUnit",header:"Unit Cost",width:"90px"},{field:"markUpPercentage",header:"MarkUp %",width:"70px"},{field:"markupPerUnit",header:"MarkUp Amt/Unit",width:"110px"},{field:"grossSalePricePerUnit",header:"Gross Price/Unit",width:"110px"},{field:"salesDiscount",header:"Disc. %",width:"60px"},{field:"salesDiscountPerUnit",header:"Disc. Amt/Unit",width:"110px"},{field:"markupExtended",header:"MarkUp Amt",width:"100px"},{field:"grossSalePrice",header:"Gross Sales Amt",width:"110px"},{field:"salesDiscountExtended",header:"Disc. Amt",width:"90px"},{field:"netSalesPriceExtended",header:"Net Sales Amt",width:"100px"},{field:"taxType",header:"Tax Type",width:"90px"},{field:"taxAmount",header:"Tax Amt",width:"90px"},{field:"totalSales",header:"Total",width:"90px"},{field:"unitCostExtended",header:"Extended Cost",width:"100px"},{field:"marginAmountExtended",header:"Product Margin",width:"100px"},{field:"marginPercentageExtended",header:"Product Margin (%)",width:"120px"},{field:"pmaStatus",header:"Stk Type",width:"100px"},{field:"altOrEqType",header:"Alt/Equiv",width:"100px"},{field:"controlNumber",header:"Cntrl Num",width:"80px"},{field:"idNumber",header:"Cntrl ID Num",width:"90px"},{field:"notes",header:"Notes",width:"120px"}],this.summaryColumns=[{field:"hidePart",header:"",width:"30px",textalign:"center"},{field:"partNumber",header:"PN"},{field:"partDescription",header:"PN Description",width:"67px"},{field:"pmaStatus",header:"Stk Type"},{field:"conditionDescription",header:"Cond"},{field:"quantityRequested",header:"Qty Req"},{field:"quantityToBeQuoted",header:"Qty To Quote"},{field:"quantityAlreadyQuoted",header:"Qty Prev Quoted"},{field:"currencyDescription",header:"Curr"},{field:"fixRate",header:"FX Rate"},{field:"uom",header:"UOM"},{field:"customerRef",header:"Cust Ref"},{field:"grossSalePrice",header:"Gross Sale Amt"},{field:"salesDiscountExtended",header:"Disc Amt"},{field:"netSalesPriceExtended",header:"Net Sale Amt"},{field:"misc",header:"Misc"},{field:"freight",header:"Freight"},{field:"taxAmount",header:"Tax Amt"},{field:"totalSales",header:"Total"},{field:"unitCostExtended",header:"Extended Cost"},{field:"marginAmountExtended",header:"Prod Margin"},{field:"marginPercentageExtended",header:"Prod Margin%"}]}},{key:"onClose",value:function(e){this.show=!1,this.addPartModal.close()}},{key:"onCloseMargin",value:function(e){this.show=!1,this.salesMarginModal.close(),this.isEdit||(this.selectedPart.selected=!1,this.openPartNumber(!1))}},{key:"onClosePartDelete",value:function(){this.deletePartModal.close()}},{key:"addPartNumber",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this.salesQuoteService.resetSearchPart(),this.inputValidCheckHeader=!1,e?(this.selectedSummaryRow=e,this.selectedSummaryRowIndex=t):(this.selectedSummaryRow=null,this.selectedSummaryRowIndex=null),this.openPartNumber(!1)}},{key:"viewPartNumber",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this.salesQuoteService.resetSearchPart(),e?(this.selectedSummaryRow=e,this.selectedSummaryRowIndex=t):(this.selectedSummaryRow=null,this.selectedSummaryRowIndex=null),this.openPartNumber(!0)}},{key:"openPartNumber",value:function(e){this.isStockLineViewMode=e;var t=this.addPart;this.addPartModal=this.modalService.open(t,{windowClass:"myCustomModalClass",backdrop:"static",keyboard:!1}),this.addPartModal.result.then((function(){}),(function(){}))}},{key:"openSalesMargin",value:function(e){var t=this;this.isEdit=!1;var r=this.salesMargin;this.selectedPart=e.part;var n=e.checked;this.selectedPart&&(n?(this.salesQuoteService.getSearchPartObject().subscribe((function(e){t.query=e,t.part=new Oe.a,t.part.partNumber=t.selectedPart.partNumber,t.part.stockLineNumber=t.selectedPart.stockLineNumber,t.part.salesPricePerUnit=+t.selectedPart.unitSalePrice,t.part.unitCostPerUnit=+t.selectedPart.unitCost,t.part.itemClassification=t.selectedPart.itemClassification,t.part.freight=t.salesQuoteService.getTotalFreights(),t.part.misc=t.salesQuoteService.getTotalCharges(),t.part.createdBy=t.userName,t.part.priorityId=t.defaultSettingPriority,t.selectedPart.itemMasterSale&&(t.part.fixRate=t.selectedPart.itemMasterSale.fxRate),t.part.taxType=t.customer.taxType,t.part.taxPercentage=t.customer.taxPercentage,1==t.selectedPart.mappingType?t.part.altOrEqType="Alt":2==t.selectedPart.mappingType?t.part.altOrEqType="Equi":t.part.altOrEqType="",t.part.description=t.selectedPart.description,t.part.itemMasterId=t.selectedPart.itemMasterId,t.part.partId=t.selectedPart.partId,t.part.stockLineId=t.selectedPart.stockLineId,t.part.idNumber=t.selectedPart.idNumber,t.part.customerRef=t.salesQuote.customerReferenceName,t.part.serialNumber=t.selectedPart.serialNumber,t.part.qtyAvailable=t.selectedPart.qtyAvailable,t.part.masterCompanyId=t.masterCompanyId,t.part.conditionId=t.selectedPart.conditionId,t.part.conditionDescription=t.selectedPart.conditionDescription,t.part.uom=t.selectedPart.uomDescription,t.part.pmaStatus=t.selectedPart.oempmader,t.part.pmaStatus||(t.part.pmaStatus=t.selectedPart.stockType),t.part.currencyId=t.selectedPart.currencyId,t.part.currencyDescription=t.defaultCurrencyDiscription,t.part.currencyId=t.defaultCurrencyId,t.part.controlNumber=t.selectedPart.controlNumber,t.part.salesDiscount=0,t.part.markupPerUnit=0,t.part.markUpPercentage=0,t.part.salesDiscount=0,t.part.grossSalePricePerUnit=0,t.part.grossSalePrice=0,t.part.quantityRequested=t.query.partSearchParamters.quantityRequested,t.part.quantityToBeQuoted=t.query.partSearchParamters.quantityToQuote,t.selectedPart.qtyRemainedToQuote?t.selectedPart.qtyRemainedToQuote>=t.part.quantityToBeQuoted?t.part.quantityFromThis=t.part.quantityToBeQuoted:t.part.quantityFromThis=t.selectedPart.qtyRemainedToQuote:t.part.quantityFromThis=t.part.quantityToBeQuoted,t.part.quantityAvailableForThis=t.query.partSearchParamters.qtyAvailable,t.part.quantityAlreadyQuoted=t.query.partSearchParamters.quantityAlreadyQuoted})),this.addPartModal.close(),this.salesMarginModal=this.modalService.open(r,{size:"lg",backdrop:"static",keyboard:!1}),this.salesMarginModal.result.then((function(){}),(function(){t.selectedPart.selected=!1}))):this.removePartNamber(this.selectedPart))}},{key:"openSalesMarginSave",value:function(e){var t=this;this.salesQuoteService.getSearchPartObject().subscribe((function(r){t.query=r,t.query.partSearchParamters.quantityAlreadyQuoted=Number(t.query.partSearchParamters.quantityAlreadyQuoted)+Number(e.quantityFromThis),t.query.partSearchParamters.quantityToQuote=Number(t.query.partSearchParamters.quantityRequested)-Number(t.query.partSearchParamters.quantityAlreadyQuoted)})),this.part.quantityToBeQuoted=Number(e.quantityFromThis),this.part.quantityAlreadyQuoted=Number(e.quantityFromThis),this.salesQuoteService.updateSearchPartObject(this.query);var r=Object.assign({},this.part);if(!this.isEdit){this.selectedSummaryRow&&(this.selectedSummaryRow.quantityToBeQuoted=this.query.partSearchParamters.quantityToQuote,this.selectedSummaryRow.quantityAlreadyQuoted=this.query.partSearchParamters.quantityAlreadyQuoted,this.selectedSummaryRow.quantityRequested=this.query.partSearchParamters.quantityRequested,this.selectedSummaryRow.childParts.forEach((function(e,r){t.summaryParts[t.selectedSummaryRowIndex].childParts[r].quantityRequested=t.selectedSummaryRow.quantityRequested})),this.combineParts(this.summaryParts)),this.openPartNumber(!1);var n=this.selectedParts;n.push(r),this.salesQuoteService.selectedParts=n}this.filterParts(),this.salesMarginModal.close(),this.canSaveParts=!1}},{key:"openPartToEdit",value:function(e){var t=this;this.isEdit=!0;var r=this.salesMargin;this.part=e,this.part&&(this.salesQuoteService.getSearchPartObject().subscribe((function(r){t.query=r,t.part=e,t.query.partSearchParamters.quantityRequested=t.part.quantityRequested,t.query.partSearchParamters.quantityToQuote=t.part.quantityToBeQuoted,t.query.partSearchParamters.quantityAlreadyQuoted=t.part.quantityAlreadyQuoted})),this.salesMarginModal=this.modalService.open(r,{size:"lg",backdrop:"static",keyboard:!1}),this.salesMarginModal.result.then((function(){}),(function(){})))}},{key:"openPartDelete",value:function(e,t){this.part=t,this.deletePartModal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.deletePartModal.result.then((function(){}),(function(){}))}},{key:"deletePart",value:function(){var e=this;this.part.salesOrderQuotePartId?this.salesQuoteService.deletePart(this.part.salesOrderQuotePartId).subscribe((function(t){e.removePartNamber(e.part),e.deletePartModal.close(),e.alertService.showMessage("Success","Part removed successfully.",E.d.success)}),(function(t){e.isSpinnerVisible=!1;var r=t;e.onDataLoadFailed(r)})):(this.removePartNamber(this.part),this.deletePartModal.close(),this.alertService.showMessage("Success","Part removed successfully.",E.d.success))}},{key:"checkForDuplicates",value:function(e){for(var t=e.partNumber,r=e.stockLineNumber,n=e.conditionId,s=e.pmaStatus,a=0;a<this.selectedParts.length;a++){var i=this.selectedParts[a].partNumber,o=this.selectedParts[a].stockLineNumber,l=this.selectedParts[a].conditionId,d=this.selectedParts[a].pmaStatus;return i==t&&o==r&&l==n&&d==s}}},{key:"removePartNamber",value:function(e){for(var t=e.partNumber,r=e.stockLineNumber,n=e.conditionId,s=e.pmaStatus,a=0;a<this.selectedParts.length;a++){var i=this.selectedParts[a].partNumber,o=this.selectedParts[a].stockLineNumber,l=this.selectedParts[a].conditionId,d=this.selectedParts[a].pmaStatus;i==t&&o==r&&l==n&&d==s&&(this.selectedParts.splice(a,1),this.onPartsSavedEvent.emit(this.selectedParts))}this.filterParts(),this.checkUpdateOrsaveButton()}},{key:"isEditDisabled",value:function(e,t){return!t.createdBy||t.createdBy!=this.userName||(e.isApproved||t.isApproved)&&"S"!=t.methodType}},{key:"isDeleteDisabled",value:function(e,t){return!t.createdBy||t.createdBy!=this.userName||e.isApproved||t.isApproved}},{key:"openConfirmationModal",value:function(){this.modal=this.modalService.open(this.updatePNDetailsModal,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){}),(function(){}))}},{key:"closeConfirmationModal",value:function(){this.modal&&this.modal.close()}},{key:"onCustomerDateChange",value:function(e,t){var r=this.summaryParts[t].childParts[e].customerRequestDate;this.summaryParts[t].childParts[e].promisedDate=r,this.summaryParts[t].childParts[e].estimatedShipDate=r,this.combineParts(this.summaryParts),this.canSaveParts=!1}},{key:"onEditPartDetails",value:function(){this.combineParts(this.summaryParts),this.canSaveParts=!1}},{key:"checkUpdateOrsaveButton",value:function(){var e=this,t=!1;this.summaryParts&&this.summaryParts.length>0&&this.summaryParts.forEach((function(r){r.childParts&&r.childParts.length>0&&r.childParts.forEach((function(r){r.salesOrderQuotePartId&&!t&&(t=!0,e.saveButton=!0)}))}))}},{key:"approve",value:function(){var e=this;this.enableUpdateButton=!0,this.salesQuoteView.parts=[];for(var t=!1,r=!1,n="",s=0;s<this.selectedParts.length;s++){var a=this.selectedParts[s],i=!1;if(a.customerRequestDate||(this.isSpinnerVisible=!1,t=!0,i||(n=n+"<br />PN - "+a.partNumber,i=!0),n+="<br />Please enter Customer Request Date."),a.estimatedShipDate||(this.isSpinnerVisible=!1,t=!0,i||(n=n+"<br />PN - "+a.partNumber,i=!0),n+="<br />Please enter Estimated Ship Date."),a.promisedDate||(this.isSpinnerVisible=!1,t=!0,i||(n=n+"<br />PN - "+a.partNumber,i=!0),n+="<br />Please enter Promised Date."),a.priorityId||(this.isSpinnerVisible=!1,t=!0,i||(n=n+"<br />PN - "+a.partNumber,i=!0),n+="<br />Please enter priority ID."),a.customerRequestDate&&a.promisedDate&&a.estimatedShipDate&&((a.customerRequestDate<this.salesQuote.openDate||a.estimatedShipDate<this.salesQuote.openDate||a.promisedDate<this.salesQuote.openDate)&&(r=!0),a.promisedDate<a.customerRequestDate&&(this.isSpinnerVisible=!1,t=!0,i||(n=n+"<br />PN - "+a.partNumber,i=!0),n+="<br />Request date cannot be greater than Promised Date."),a.estimatedShipDate<a.customerRequestDate&&(this.isSpinnerVisible=!1,t=!0,i||(n=n+"<br />PN - "+a.partNumber,i=!0),n+="<br />Request date cannot be greater than Est.Ship Date.")),!t&&!r){var o=this.salesQuoteService.marshalSOQPartToSave(a,this.userName);this.salesQuoteView.parts.push(o)}}t?(this.alertService.resetStickyMessage(),this.alertService.showStickyMessage("Sales Order Quote",n,E.d.error)):r?(this.alertService.resetStickyMessage(),this.alertService.showStickyMessage("Sales Order Quote","Please select valid Dates for Sales Order Quote PartsList!",E.d.error)):(this.isSpinnerVisible=!0,this.salesQuoteService.update(this.salesQuoteView).subscribe((function(t){e.canSaveParts=!0,e.alertService.stopLoadingMessage(),e.isSpinnerVisible=!1,e.inputValidCheckHeader=!0,e.alertService.showMessage("Success","PN  updated successfully.",E.d.success),e.onPartsSavedEvent.emit(e.selectedParts)}),(function(t){e.isSpinnerVisible=!1}))),this.closeConfirmationModal()}},{key:"onSave",value:function(e){}},{key:"onClosePart",value:function(e){}},{key:"onDataLoadFailed",value:function(e){var t=e,r="";if(t.message){if(t.error&&t.error.errors.length>0)for(var n=0;n<t.error.errors.length;n++)r=r+t.error.errors[n].message+"<br/>";this.alertService.showMessage(t.error.message,r,E.d.error)}else this.alertService.showMessage("Error",e.error,E.d.error)}},{key:"onAddTextAreaInfo",value:function(e,t,r){this.notesIndex=t,this.notesSummaryRowIndex=r,this.textAreaInfo=e.notes}},{key:"onSaveTextAreaInfo",value:function(e){e&&(this.textAreaInfo=e,this.summaryParts[this.notesSummaryRowIndex].childParts[this.notesIndex].notes=this.textAreaInfo,this.combineParts(this.summaryParts)),this.canSaveParts=!1,L("#textarea-popupNotes").modal("hide")}},{key:"onCloseTextAreaInfo",value:function(){L("#textarea-popupNotes").modal("hide")}},{key:"filterParts",value:function(){var e=this;this.summaryParts=[];var t=this.getUniqueParts(this.selectedParts,"partNumber","conditionId","pmaStatus");t.length>0&&(t.forEach((function(r,n){var s=e.selectedParts.filter((function(e){return e.partNumber==r.partNumber&&e.conditionId==r.conditionId&&e.pmaStatus==r.pmaStatus}));s&&s.length>0&&(t[n]=e.calculateSummarizedRow(s,r),t[n].childParts=s)})),this.summaryParts=t),this.totalRecords=this.summaryParts.length,this.pageLinks=Math.ceil(this.totalRecords/10),this.checkUpdateOrsaveButton()}},{key:"calculateSummarizedRow",value:function(e,t){var r=this;return t=new ke,e.forEach((function(e){t.quantityToBeQuoted=r.getSum(t.quantityToBeQuoted,e.quantityFromThis),t.quantityAlreadyQuoted=t.quantityToBeQuoted,t.grossSalePrice=r.getSum(t.grossSalePrice,e.grossSalePrice),t.salesDiscountExtended=r.getSum(t.salesDiscountExtended,e.salesDiscountExtended),t.netSalesPriceExtended=r.getSum(t.netSalesPriceExtended,e.netSalesPriceExtended),t.taxAmount=r.getSum(t.taxAmount,e.taxAmount),t.totalSales=r.getSum(t.totalSales,e.totalSales),t.marginAmountExtended=r.getSum(t.marginAmountExtended,e.marginAmountExtended),t.marginPercentageExtended=r.getSum(t.marginPercentageExtended,e.marginPercentageExtended),Number(t.quantityRequested)!=Number(e.quantityRequested)?t.quantityRequested=Number(t.quantityRequested)+Number(e.quantityRequested):t.quantityRequested=Number(e.quantityRequested)})),t.partId=e[0].itemMasterId,t.quantityToBeQuoted=Number(t.quantityRequested)-Number(t.quantityAlreadyQuoted),t.conditionDescription=e[0].conditionDescription,t.conditionId=e[0].conditionId,t.partNumber=e[0].partNumber,t.partDescription=e[0].description,t.currencyDescription=e[0].currencyDescription,t.currencyId=e[0].currencyId,t.misc=e[0].misc,t.fixRate=e[0].fixRate,t.freight=e[0].freight,t.uom=e[0].uom,t.customerRef=e[0].customerRef,t.pmaStatus=e[0].pmaStatus,t.conditionId=e[0].conditionId,t.marginPercentageExtended=t.marginPercentageExtended/e.length,t}},{key:"getSum",value:function(e,t){return Number(e)+Number(t)}},{key:"getUniqueParts",value:function(e,t,r,n){var s=JSON.parse(JSON.stringify(e));return s.reduceRight((function(e,a,i){return e.some((function(e){return a[t]===e[t]&&a[r]===e[r]&&a[n]===e[n]}))?s.splice(i,1):e.push(a),e}),[]),s}},{key:"combineParts",value:function(e){var t=this;this.selectedParts=[],e.forEach((function(e){e.childParts&&e.childParts.length>0&&(t.selectedParts.length>0?t.selectedParts=[].concat(_toConsumableArray(t.selectedParts),_toConsumableArray(e.childParts)):t.selectedParts=_toConsumableArray(e.childParts))}))}},{key:"closeHistoryModal",value:function(){L("#soqPartHistory").modal("hide")}},{key:"getAuditHistoryById",value:function(e){var t=this;this.isSpinnerVisible=!0,this.salesQuoteService.getSOQPartHistory(e.salesOrderQuotePartId).subscribe((function(e){t.auditHistory=e,t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1;var r=e;t.onDataLoadFailed(r)}))}},{key:"getColorCodeForHistory",value:function(e,t,r){var n=this.auditHistory,s=n.length;if(e>=0&&e<=s)return e+1===s||n[e+1][t]===r}},{key:"masterCompanyId",get:function(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:1}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();De.ctorParameters=function(){return[{type:R.c},{type:F.a},{type:E.b},{type:z.a},{type:_.a}]},n.b([Object(s.ViewChild)("addPart",{static:!1})],De.prototype,"addPart",void 0),n.b([Object(s.ViewChild)("salesMargin",{static:!1})],De.prototype,"salesMargin",void 0),n.b([Object(s.Input)()],De.prototype,"customer",void 0),n.b([Object(s.Input)()],De.prototype,"totalFreights",void 0),n.b([Object(s.Input)()],De.prototype,"totalCharges",void 0),n.b([Object(s.Input)()],De.prototype,"salesQuote",void 0),n.b([Object(s.Input)()],De.prototype,"isViewMode",void 0),n.b([Object(s.Input)()],De.prototype,"salesQuoteView",void 0),n.b([Object(s.Input)()],De.prototype,"defaultSettingPriority",void 0),n.b([Object(s.ViewChild)("updatePNDetailsModal",{static:!1})],De.prototype,"updatePNDetailsModal",void 0),n.b([Object(s.Output)()],De.prototype,"myEvent",void 0),n.b([Object(s.Output)()],De.prototype,"close",void 0),n.b([Object(s.Output)("on-parts-save")],De.prototype,"onPartsSavedEvent",void 0),De=n.b([Object(s.Component)({selector:"app-sales-part-number",template:n.c(r("tYCb")).default,styles:[n.c(r("ck4h")).default]})],De);var Te=r("d8Wx"),Me=r("s6ns"),Pe=r("JPLv"),Qe=r("kFbg"),Ne=function(){function e(t,r,n,a,i,o,l,d,c,u,p,m,h){_classCallCheck(this,e),this.salesQuoteService=t,this.router=r,this.route=n,this.authService=a,this.modalService=i,this.activeModal=o,this._fb=l,this.alertService=d,this.dialog=c,this.masterComapnyService=u,this.configurations=p,this.commonService=m,this.customerService=h,this.tab=new s.EventEmitter,this.documentInformation=Object.assign({},new Qe.a),this.salesQuoteDocumentsData=[],this.salesQuoteDocumentsColumns=[{field:"docName",header:"Name"},{field:"docDescription",header:"Description"},{field:"docMemo",header:"Memo"},{field:"fileName",header:"File Name"},{field:"fileSize",header:"File Size"},{field:"fileCreatedBy",header:"Created By"},{field:"fileCreatedDate",header:"Created Date"},{field:"fileUpdatedBy",header:"Updated By"},{field:"fileUpdatedDate",header:"Updated Date"}],this.selectedColumns=this.salesQuoteDocumentsColumns,this.headersforAttachment=[{field:"fileName",header:"File Name"}],this.sourceViewforDocumentListColumns=[{field:"fileName",header:"File Name"}],this.formData=new FormData,this.isEditButton=!1,this.sourceViewforDocumentList=[],this.activeIndex=11,this.isDeleteMode=!1,this.isEditMode=!1,this.isEditModeHeader=!1,this.auditHisory=[],this.isViewMode=!1,this.totalRecords=0,this.pageIndex=0,this.pageSize=10,this.totalPages=0,this.viewMode=!1,this.documentsDestructuredData=[],this.disableSave=!0,this.isSpinnerVisible=!1,this.salesQuoteService.listCollection&&1==this.isEditMode&&(console.log("vendor local",this.salesQuoteService.listCollection),this.local=this.salesQuoteService.listCollection)}return _createClass(e,[{key:"ngOnInit",value:function(){}},{key:"refresh",value:function(){this.getList(this.salesOrderQuoteId)}},{key:"resetCreateForm",value:function(){this.documentInformation=new Qe.a,this.sourceViewforDocument=void 0,this.sourceViewforDocumentList=[],this.clearFileUpload(),this.isEditButton=!1}},{key:"clearFileUpload",value:function(){this.fileUpload.clear()}},{key:"parsedText",value:function(e){if(e)return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}},{key:"closeMyModel",value:function(e){L(e).modal("hide"),this.disableSave=!0}},{key:"onClickMemo",value:function(){this.memoPopupContent=this.documentInformation.docMemo,this.enableSave()}},{key:"onClickPopupSave",value:function(){this.documentInformation.docMemo=this.memoPopupContent,this.memoPopupContent="",L("#memo-popup-Doc").modal("hide")}},{key:"closeMemoModel",value:function(){L("#memo-popup-Doc").modal("hide")}},{key:"dateFilterForTable",value:function(e,t){if(""!==e&&G(e).format("MMMM DD YYYY")){var r=_toConsumableArray(this.documentsDestructuredData.filter((function(r){return console.log(G(r.createdDate).format("MMMM DD YYYY"),G(e).format("MMMM DD YYYY")),G(r.createdDate).format("MMMM DD YYYY")===G(e).format("MMMM DD YYYY")&&"createdDate"===t||G(r.updatedDate).format("MMMM DD YYYY")===G(e).format("MMMM DD YYYY")&&"updatedDate"===t?r:void 0})));this.documentsDestructuredData=r}else this.documentsDestructuredData=this.documentsDestructuredDataListOriginal}},{key:"fileUploadForDocuments",value:function(e){if(console.log(e),0===e.files.length)return this.disableSave=!0;this.disableSave=!1;var t,r=_createForOfIteratorHelper(e.files);try{for(r.s();!(t=r.n()).done;){var n=t.value;this.formData.has(n.name)?this.alertService.showMessage("Duplicate File","Duplicate file not allowed ! ",E.d.warn):this.formData.append(n.name,n)}}catch(s){r.e(s)}finally{r.f()}this.disableSave=!1}},{key:"removeFile",value:function(e){console.log("event deletre",e),this.formData.delete(e.file.name)}},{key:"getList",value:function(e){var t=this;this.loaderForDocuments=!0,this.documentsDestructuredData=[],this.isSpinnerVisible=!0,this.salesQuoteService.getDocumentList(e).subscribe((function(e){var r=[];t.isSpinnerVisible=!1,e.map((function(e){for(var n=0;n<e.attachmentDetails.length;n++){var s=e.attachmentDetails;r.push(Object.assign({},e,{fileName:s[n].fileName,link:s[n].link,fileCreatedDate:s[n].createdDate,fileCreatedBy:s[n].createdBy,fileUpdatedBy:s[n].updatedBy,fileUpdatedDate:s[n].updatedDate,fileSize:s[n].fileSize,attachmentDetailId:s[n].attachmentDetailId}))}t.documentsDestructuredData=r,t.documentsDestructuredDataListOriginal=r})),t.loaderForDocuments=!1}),(function(e){t.documentsDestructuredData=[],t.loaderForDocuments=!1,t.isSpinnerVisible=!1,t.alertService.showMessage("SO Quote",e,E.d.error)}))}},{key:"onDataLoadFailed",value:function(e){this.isSpinnerVisible=!1,this.alertService.showMessage("SO Quote",e,E.d.error)}},{key:"saveDocumentInformation",value:function(){var e=this,t=Object.assign({},this.documentInformation,{salesQuoteId:this.salesOrderQuoteId,masterCompanyId:1,createdBy:this.userName,updatedBy:this.userName});for(var r in t)this.formData.append(r,t[r]);this.salesQuoteService.documentUploadAction(this.formData).subscribe((function(t){console.log("hello text"),e.documentInformation.docDescription="",e.documentInformation.docMemo="",e.documentInformation.docName="",e.sourceViewforDocumentList=[],e.formData=new FormData,e.clearFileUpload(),e.getList(t.salesOrderQuoteId),e.isEditButton?e.alertService.showMessage("Success","Updated Documents Successfully ",E.d.success):e.alertService.showMessage("Success","Saved Documents Successfully ",E.d.success)})),this.modal.close(),this.disableSave=!0,L("#addDocumentDetails").modal("hide")}},{key:"updateVendorDocument",value:function(){}},{key:"openHistory",value:function(e,t){var r=this;this.alertService.startLoadingMessage(),this.isSaving=!0,this.salesQuoteService.getSalesQuoteDocumentAuditHistory(t.salesOrderQuoteDocumentDetailId).subscribe((function(t){return r.onAuditHistoryLoadSuccessful(t,e)}),(function(e){return r.saveFailedHelper(e)}))}},{key:"backClick",value:function(){this.activeIndex=10,this.salesQuoteService.changeofTab(this.activeIndex)}},{key:"CreateNewClick",value:function(){this.route.navigateByUrl("salesmodule/salespages/sales-quote-list")}},{key:"onAuditHistoryLoadSuccessful",value:function(e,t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.documentauditHisory=e,this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"saveFailedHelper",value:function(e){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",E.d.error,e),this.alertService.showStickyMessage(e,null,E.d.error)}},{key:"getColorCodeForHistory",value:function(e,t,r){var n=this.documentauditHisory,s=n.length;if(e>=0&&e<=s)return e+1===s||n[e+1][t]===r}},{key:"editVendorDocument",value:function(e,t){var r=this;this.isEditButton=!0,this.documentInformation=Object.assign({},e),this.salesQuoteService.toGetUploadDocumentsList(e.attachmentId,e.salesOrderQuoteId,46).subscribe((function(t){r.sourceViewforDocumentList=t,r.sourceViewforDocument=e}))}},{key:"openView",value:function(e){var t=this;this.salesQuoteService.toGetUploadDocumentsList(e.attachmentId,e.salesOrderQuoteId,46).subscribe((function(r){t.sourceViewforDocumentList=r,t.sourceViewforDocument=e}))}},{key:"openViewOnDblClick",value:function(e){var t=this;this.salesQuoteService.toGetUploadDocumentsList(e.attachmentId,e.salesOrderQuoteId,46).subscribe((function(r){t.sourceViewforDocumentList=r,t.sourceViewforDocument=e})),L("#docView").modal("show")}},{key:"openDelete",value:function(e,t){this.isEditMode=!1,this.isDeleteMode=!0,delete t.updatedBy,this.localCollection=t,console.log("attachmentId",t),this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"deleteItemAndCloseModel",value:function(){var e=this;this.isSaving=!0;var t=this.localCollection.attachmentDetails[0].attachmentDetailId;this.customerService.deleteDocumentByCustomerAttachementId(t,this.userName).subscribe((function(t){e.getList(e.salesOrderQuoteId),e.alertService.showMessage("Success","Action was deleted successfully ",E.d.success)})),this.modal.close()}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"downloadFileUpload",value:function(e){var t="".concat(this.configurations.baseUrl,"/api/FileUpload/downloadattachedfile?filePath=").concat(e.link);window.location.assign(t)}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"pageIndexChange",value:function(e){this.pageSize=e.rows}},{key:"enableSave",value:function(){console.log("isenamebsd",this.sourceViewforDocumentList.length),this.sourceViewforDocumentList&&this.sourceViewforDocumentList.length>0||1==this.isEditButton?this.disableSave=!1:this.disableSave=!0}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();Ne.ctorParameters=function(){return[{type:F.a},{type:N.ActivatedRoute},{type:N.Router},{type:z.a},{type:R.c},{type:R.b},{type:o.FormBuilder},{type:E.b},{type:Me.b},{type:Te.a},{type:Pe.a},{type:_.a},{type:H.a}]},n.b([Object(s.Output)()],Ne.prototype,"tab",void 0),n.b([Object(s.ViewChild)("fileUpload",{static:!1})],Ne.prototype,"fileUpload",void 0),n.b([Object(s.Input)()],Ne.prototype,"isEditMode",void 0),n.b([Object(s.Input)()],Ne.prototype,"salesOrderQuoteId",void 0),n.b([Object(s.Input)()],Ne.prototype,"viewMode",void 0),Ne=n.b([Object(s.Component)({selector:"app-salesQuote-documents",template:n.c(r("FeMR")).default,styles:[n.c(r("ywEN")).default]})],Ne);var Ae=function(){function e(t,r,n,s,a,i,o,l,d){_classCallCheck(this,e),this.salesQuoteService=t,this.alertService=r,this.modalService=n,this.router=s,this.customerService=a,this.employeeService=i,this.commonservice=o,this.currencyService=l,this.authService=d,this.sales=[],this.tempSales=[],this.totalRecords=0,this.totalPages=0,this.pageSize=10,this.pageIndex=0,this.first=0,this.showPaginator=!1,this.isSpinnerVisible=!0,this.pnViewSelected=!1,this.selectedParts=[],this.allEmployeeinfo=[],this.customerWarningData=[],this.statusList=[],this.currentStatus="0",this.viewType="detailedview"}return _createClass(e,[{key:"ngOnInit",value:function(){this.isSpinnerVisible=!0,this.salesQuote=new q,this.salesOrderQuote=new U.a,this.searchParameters=new V,this.initColumns(),this.searchParameters.filters=Object.assign({},this.searchParameters.filters,{viewType:this.viewType}),this.isSpinnerVisible=!1}},{key:"initColumns",value:function(){this.headers=[{field:"salesOrderQuoteNumber",header:"SO Quote Num",width:"120px"},{field:"versionNumber",header:"Quote Ver Num",width:"130px"},{field:"quoteDate",header:"Quote Date",width:"130px"},{field:"partNumber",header:"PN",width:"130px"},{field:"partDescription",header:"PN Description",width:"180px"},{field:"stockLineNumber",header:"Stk Line Num",width:"150px"},{field:"serialNumber",header:"Ser Num",width:"120px"},{field:"conditionDescription",header:"Cond",width:"100px"},{field:"uomName",header:"UOM",width:"100px"},{field:"qtyQuoted",header:"Qty Quoted",width:"100px"},{field:"status",header:"Status",width:"100px"},{field:"currency",header:"Curr",width:"100px"},{field:"markupPerUnit",header:"MarkUp Amt",width:"120px"},{field:"grossSalePricePerUnit",header:"Gross Price/Unit",width:"140px"},{field:"discountAmount",header:"Disc. Amt",width:"120px"},{field:"markupExtended",header:"MarkUp Amt",width:"120px"},{field:"grossSalePrice",header:"Gross Sales Amt",width:"120px"},{field:"salesDiscountExtended",header:"Disc. Amt",width:"120px"},{field:"netSales",header:"Net Sales Amt",width:"130px"},{field:"misc",header:"Misc Amt",width:"120px"},{field:"totalSales",header:"Product Revenue",width:"130px"},{field:"unitCost",header:"Unit Cost",width:"130px"},{field:"unitCostExtended",header:"Extended Cost",width:"130px"},{field:"marginAmountExtended",header:"Margin Amt",width:"120px",style:"text-align:right"},{field:"marginPercentage",header:"Margin %",width:"100px",style:"text-align:right"},{field:"freight",header:"Freight",width:"120px",style:"text - align: right"},{field:"taxAmount",header:"Tax Amt",width:"120px"},{field:"totalRevenue",header:"Total Revenue",width:"130px"},{field:"notes",header:"Notes",width:"120px"}],this.selectedColumns=this.headers}},{key:"initSummaryColumns",value:function(){this.headers=[{field:"salesOrderQuoteNumber",header:"SO Quote Num",width:"120px"},{field:"versionNumber",header:"Quote Ver Num",width:"130px"},{field:"partNumber",header:"PN",width:"130px"},{field:"partDescription",header:"PN Description",width:"180px"},{field:"uomName",header:"UOM",width:"100px"},{field:"qtyQuoted",header:"Qty Quoted",width:"100px"},{field:"currency",header:"Curr",width:"100px"},{field:"markupExtended",header:"MarkUp Amt",width:"120px"},{field:"grossSalePrice",header:"Gross Sales Amt",width:"120px"},{field:"salesDiscountExtended",header:"Disc. Amt",width:"120px"},{field:"netSales",header:"Net Sales Amt",width:"130px"},{field:"misc",header:"Misc Amt",width:"120px"},{field:"totalSales",header:"Product Revenue",width:"130px"},{field:"unitCostExtended",header:"Prod Cost",width:"130px"},{field:"marginAmountExtended",header:"Prod Margin Amt",width:"120px",style:"text-align:right"},{field:"marginPercentage",header:" Prod Margin %",width:"100px",style:"text-align:right"},{field:"freight",header:"Freight",width:"120px",style:"text - align: right"},{field:"taxAmount",header:"Tax Amt",width:"120px"},{field:"totalRevenue",header:"Total Revenue",width:"130px"}],this.selectedColumns=this.headers}},{key:"changeOfStatus",value:function(e,t){"detailedview"==t?(this.initColumns(),this.sales=JSON.parse(JSON.stringify(this.tempSales)),this.pnViewSelected=!1):(this.initSummaryColumns(),this.tempSales=JSON.parse(JSON.stringify(this.sales)),this.pnViewSelected=!0,this.filterParts(this.sales))}},{key:"refresh",value:function(e){this.salesOrderQuoteId=e,this.onSearch()}},{key:"loadData",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";e.filters.statusId=this.currentStatus,this.searchParameters.first=parseInt(e.first)/e.rows,this.searchParameters.rows=e.rows,this.searchParameters.sortOrder=e.sortOrder,this.searchParameters.sortField=e.sortField,this.lazyLoadEventData=e,this.searchParameters.filters=Object(W.j)(e.filters),this.searchParameters.filters=Object.assign({},this.searchParameters.filters,{viewType:this.viewType}),this.searchParameters.globalFilter=t}},{key:"globalSearch",value:function(e){this.searchParameters.globalFilter=e,this.lazyLoadEventData}},{key:"onSearch",value:function(){var e=this;this.isSpinnerVisible=!0,this.salesQuoteService.getAllSalesOrderQuoteAnalysis(this.salesOrderQuoteId).subscribe((function(t){e.isSpinnerVisible=!1,e.sales=t,e.sales.length>0&&e.sales.forEach((function(t,r){e.sales[r].totalRevenue=e.calculateProductRevenue(t,r),e.sales[r].totalSales=e.calculateTotalRevenue(t,r)})),e.totalRecords=t.length,e.totalPages=Math.ceil(e.totalRecords/e.searchParameters.rows),e.showPaginator=e.totalRecords>0}),(function(t){e.isSpinnerVisible=!1}))}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"dismissViewModel",value:function(){this.modal.close()}},{key:"dismissPartViewModel",value:function(){this.partModal.close()}},{key:"mouseOverData",value:function(e,t){return"partNumberType"===e?t.partNumber:"partDescriptionType"===e?t.partDescription:"priorityType"===e?t.priority:"quoteDate"===e&&t[e]?G(t.quoteDate).format("MM-DD-YYYY"):"createdDate"===e&&t[e]?G(t.createdDate).format("MM-DD-YYYY"):"updatedDate"===e&&t[e]?G(t.updatedDate).format("MM-DD-YYYY"):t[e]}},{key:"convertDate",value:function(e,t){return"quoteDate"!==e&&"updatedDate"!==e&&"createdDate"!==e||!t[e]?t[e]:G(t[e]).format("MM/DD/YYYY")}},{key:"getColorCodeForMultiple",value:function(e){return"Multiple"===e.partNumberType?"green":"black"}},{key:"calculateTotalRevenue",value:function(e,t){return this.sales[t].netSales+this.sales[t].misc}},{key:"calculateProductRevenue",value:function(e,t){return this.sales[t].netSales+this.sales[t].misc+this.sales[t].freight+this.sales[t].taxAmount}},{key:"getPercentage",value:function(e){if(this.sales&&this.sales.length>0)return(this.getTotalAmount(e)/this.sales.length).toFixed(2)}},{key:"getTotalAmount",value:function(e){var t=this,r=0;return this.sales&&this.sales.length>0&&this.sales.forEach((function(n){r+=Number(t.sumAmount(n,e))})),r.toFixed(2),this.formateCurrency(r)}},{key:"sumAmount",value:function(e,t){var r=0;return e[t]&&(r+=Number(e[t].toString().replace(/\,/g,""))),r.toFixed(2)}},{key:"formateCurrency",value:function(e){return e?Object(W.b)(e,2):"0.00"}},{key:"filterParts",value:function(e){var t=this;this.sales=[];var r=this.getUniqueParts(e,"partNumber");r.length>0&&(r.forEach((function(n,s){var a=e.filter((function(e){return e.partNumber==n.partNumber}));a&&a.length>0&&(r[s]=t.calculateSummarizedRow(a,n),r[s].childParts=a)})),this.sales=r),this.totalRecords=this.sales.length,this.totalPages=Math.ceil(this.totalRecords/this.searchParameters.rows),this.showPaginator=this.totalRecords>0}},{key:"calculateSummarizedRow",value:function(e,t){var r=this;return t=e[0],e.length>1&&(e.splice(0,1),e.forEach((function(e){t.qtyQuoted=r.getSum(t.qtyQuoted,e.qtyQuoted),t.markupExtended=r.getSum(t.markupExtended,e.markupExtended),t.grossSalePrice=r.getSum(t.grossSalePrice,e.grossSalePrice),t.salesDiscountExtended=r.getSum(t.salesDiscountExtended,e.salesDiscountExtended),t.netSales=r.getSum(t.netSales,e.netSales),t.misc=r.getSum(t.misc,e.misc),t.totalSales=r.getSum(t.totalSales,e.totalSales),t.unitCostExtended=r.getSum(t.unitCostExtended,e.unitCostExtended),t.marginAmountExtended=r.getSum(t.marginAmountExtended,e.marginAmountExtended),t.marginPercentage=r.getSum(t.marginPercentage,e.marginPercentage),t.freight=r.getSum(t.freight,e.freight),t.taxAmount=r.getSum(t.taxAmount,e.taxAmount),t.totalRevenue=r.getSum(t.totalRevenue,e.totalRevenue)})),t.marginPercentage=t.marginPercentage/e.length+1),t}},{key:"getSum",value:function(e,t){return Number(e)+Number(t)}},{key:"getUniqueParts",value:function(e,t){var r=JSON.parse(JSON.stringify(e));return r.reduceRight((function(e,n,s){return e.some((function(e){return n[t]===e[t]}))?r.splice(s,1):e.push(n),e}),[]),r}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"userId",get:function(){return this.authService.currentUser?this.authService.currentUser.id:0}}]),e}();Ae.ctorParameters=function(){return[{type:F.a},{type:E.b},{type:R.c},{type:N.Router},{type:H.a},{type:j.a},{type:_.a},{type:B.a},{type:z.a}]},Ae=n.b([Object(s.Component)({selector:"app-sales-quote-analysis",template:n.c(r("HuCJ")).default,styles:[n.c(r("oS5I")).default]})],Ae);var Le=function(){function e(t,r,n,s,a,i,o,l,d,c,u,p){_classCallCheck(this,e),this.customerService=t,this.alertService=r,this.route=n,this.salesQuoteService=s,this.formBuilder=a,this.commonservice=i,this.commonService=o,this.currencyService=l,this.employeeService=d,this.authService=c,this.router=u,this.modalService=p,this.selectedCommunicationTab="",this.isEmailTabEnabled=!1,this.totalRecords=0,this.totalPages=0,this.showPaginator=!1,this.enableUpdateButton=!0,this.salesOrderQuoteObj={},this.allEmployeeinfo=[],this.allCustomer=[],this.customerWarningData=[],this.accountTypes=[],this.selectedParts=[],this.customer={customerName:"",customerCode:"",promisedDate:""},this.display=!1,this.errorMessages=[],this.isEdit=!1,this.csrOriginalList=[],this.agentsOriginalList=[],this.salesPersonOriginalList=[],this.salesPersonAndAgentOriginalList=[],this.marginSummary=new xe,this.headerInfo={},this.toggle_po_header=!0,this.leadSources=[],this.bulist=[],this.divisionlist=[],this.onDestroy$=new Z.a,this.isCopyMode=!1,this.deletePartsWhileCopieng=!1,this.deleteApproversWhileCopieng=!1,this.submitType=!0,this.customerWarning={},this.conversionStarted=!1,this.isEmailQuoteTabEnabled=!1,this.isCreateModeHeader=!1,this.isHeaderSubmit=!1,this.customerInfoFromSalesQuote={},this.isSpinnerVisible=!1,this.addressType="SOQ",this.freight=[],this.charge=[],this.salesOrderFreightList=[],this.markupList=[],this.buildMethodDetails=[],this.totalFreights=0,this.arrayEmplsit=[],this.maincompanylist=[],this.allEmployeeList=[],this.totalCharges=0,this.selectAllForConversion=!0,this.validDaysSettingsList=[],this.moduleName="SalesQuote",this.setEditArray=[],this.quote={quoteTypeId:null,quoteDate:Date},this.salesQuote=new q,this.copyConsiderations=new le,this.verifySalesOrderQuoteObj=new de.c,this.salesOrderConversionCriteriaObj=new ce,this.globalCustomerWarningId=oe.a.GLOBAL_CUSTOMER_WARNING_ID_FOR_SALES_ORDER,this.conversionStarted=!1}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;this.isSpinnerVisible=!0,this.initCommunication(),this.customerId=+this.route.snapshot.paramMap.get("customerId"),this.id=+this.route.snapshot.paramMap.get("id"),this.SalesOrderQuoteId=this.id,this.salesQuote.priorityId=oe.a.DEFAULT_PRIORITY_ID,this.isCreateModeHeader=!1,this.salesQuoteService.resetSalesOrderQuote(),this.salesQuoteService.getSalesOrderQuteInstance().subscribe((function(t){e.salesOrderQuote=t,e.salesOrderQuote.statusChangeDate=new Date})),this.salesQuoteService.getSelectedParts().subscribe((function(t){e.selectedParts=t})),this.managementStructureId=this.currentUserManagementStructureId,this.isEdit||this.load(this.managementStructureId),setTimeout((function(){e.getSOQInstance(!0)}),2200),this.id&&this.getMarginSummary(),this.route.queryParams.subscribe((function(t){t.copyref&&(e.isCopyMode=!0,e.quoteCopyRefId=t.copyref,0!=t.considerparts&&"false"!=t.considerparts||(e.deletePartsWhileCopieng=!0),0!=t.considerapprovers&&"false"!=t.considerapprovers||(e.deleteApproversWhileCopieng=!0),e.getSalesQuoteInstance(t.copyref))})),this.isSpinnerVisible=!1}},{key:"onActionSelectAllforconvversion",value:function(){this.selectAllForConversion?(this.salesOrderConversionCriteriaObj.transferCharges=!0,this.salesOrderConversionCriteriaObj.transferFreight=!0,this.salesOrderConversionCriteriaObj.transferMemos=!0,this.salesOrderConversionCriteriaObj.transferNotes=!0,this.salesOrderConversionCriteriaObj.transferStockline=!0,this.salesOrderConversionCriteriaObj.reserveStockline=!0):(this.salesOrderConversionCriteriaObj.transferCharges=!1,this.salesOrderConversionCriteriaObj.transferFreight=!1,this.salesOrderConversionCriteriaObj.transferMemos=!1,this.salesOrderConversionCriteriaObj.transferNotes=!1,this.salesOrderConversionCriteriaObj.transferStockline=!1,this.salesOrderConversionCriteriaObj.reserveStockline=!1)}},{key:"initCommunication",value:function(){var e=this;this.communicationItems=[{label:"Memo",command:function(){e.Memo()}},{label:"Email",command:function(){e.Email()}},{label:"Phone",command:function(){e.Phone()}},{label:"Text",command:function(){e.Text()}}]}},{key:"Memo",value:function(){this.isEmailTabEnabled=!0,this.selectedCommunicationTab="memo"}},{key:"Email",value:function(){this.isEmailTabEnabled=!0,this.selectedCommunicationTab="email"}},{key:"Phone",value:function(){this.isEmailTabEnabled=!0,this.selectedCommunicationTab="phone"}},{key:"Text",value:function(){this.isEmailTabEnabled=!0,this.selectedCommunicationTab="text"}},{key:"expandHeader",value:function(){this.toggle_po_header=!this.toggle_po_header}},{key:"getInitialDataForSOQ",value:function(){var e=this;this.isSpinnerVisible=!0;var t=this.salesQuote.probabilityId?this.salesQuote.probabilityId:0,r=this.salesQuote.creditLimitTermsId?this.salesQuote.creditLimitTermsId:0,n=this.salesQuote.leadSourceId?this.salesQuote.leadSourceId:0;Object($.a)(this.customerService.getCustomerCommonDataWithContactsById(this.customerId,this.salesQuote.customerContactId),this.commonservice.getCSRAndSalesPersonOrAgentList(this.currentUserManagementStructureId,this.customerId,this.salesQuote.customerServiceRepId,this.salesQuote.salesPersonId),this.commonservice.smartDropDownList("CustomerWarningType","CustomerWarningTypeId","Name"),this.commonService.autoSuggestionSmartDropDownList("[Percent]","PercentId","PercentValue","",!0,200,[t].join()),this.commonService.autoSuggestionSmartDropDownList("CreditTerms","CreditTermsId","Name","",!0,200,[r].join()),this.commonService.autoSuggestionSmartDropDownList("LeadSource","LeadSourceId","LeadSources","",!0,100,[n].join()),this.salesQuoteService.getAllSalesOrderQuoteSettings()).subscribe((function(t){e.isSpinnerVisible=!1,e.setAllCustomerContact(t[0]),e.customerDetails=t[0],e.setCSRAndSalesPersonOrAgentList(t[1]),e.setTypesOfWarnings(t[2]),e.setPercents(t[3]),e.setCreditTerms(t[4]),e.setLeadSources(t[5]),e.setValidDays(t[6]),e.getCustomerDetails(),e.id||e.getDefaultContact(),e.setCSR(),e.setSalesPerson()}),(function(t){e.isSpinnerVisible=!1}))}},{key:"filterUniqueIds",value:function(e){var t=[];return e&&e.length>0&&e.forEach((function(e){t&&t.length>0&&t.find((function(t){return t.employeeId==e.employeeId}))||t.push(e)})),t}},{key:"getMarginSummary",value:function(){var e=this;this.salesQuoteService.getSOQMarginSummary(this.id).subscribe((function(t){e.setSOQMarginSummary(t)}),(function(e){}))}},{key:"setValidDays",value:function(e){e&&e.length>0&&(this.validDaysSettingsList=e)}},{key:"setSOQMarginSummary",value:function(e){e?(this.marginSummary=e,this.totalCharges=this.marginSummary.misc,this.totalFreights=this.marginSummary.freightAmount,this.salesQuoteService.setTotalCharges(this.marginSummary.misc),this.salesQuoteService.setTotalFreights(this.marginSummary.freightAmount)):this.marginSummary=new xe}},{key:"getSOQInstance",value:function(e){this.id?(this.getSalesQuoteInstance(this.id,!1,e),this.isEdit=!0):(this.getNewSalesQuoteInstance(this.customerId,e),this.isEdit=!1)}},{key:"setCreditTerms",value:function(e){this.creditTerms=e}},{key:"setPercents",value:function(e){this.percents=e,this.markupList=e}},{key:"setLeadSources",value:function(e){this.leadSources=e}},{key:"setTypesOfWarnings",value:function(e){var t=this;e&&e.length>0&&e.filter((function(e){e.label==oe.a.GLOBAL_CUSTOMER_WARNING_TYOE_FOR_SALES_QUOTE&&t.getCustomerWarningsData(e.value)}))}},{key:"getCustomerWarningsData",value:function(e){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var r=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.customerService.getCustomerWarningsByCustomerIdandCustomerWarningsListID(this.customerId,e).subscribe((function(e){r.customerWarning=e,r.customerWarning&&r.customerWarning.customerWarningId&&(r.salesQuote.warningId=r.customerWarning.customerWarningId,r.salesQuote.customerWarningId=r.customerWarning.customerWarningId)}),(function(e){r.isSpinnerVisible=!1}));case 2:case"end":return t.stop()}}),t,this)})))}},{key:"setCSRAndSalesPersonOrAgentList",value:function(e){this.csrOriginalList=this.filterUniqueIds(e.csrEmpList),this.salesPersonAndAgentOriginalList=this.filterUniqueIds(e.salesEmpList)}},{key:"getCustomerDetails",value:function(){this.customerDetails&&(this.salesQuote.customerName=this.customerDetails.name,this.salesQuote.customerEmail=this.customerDetails.email,this.salesQuote.customerCode=this.customerDetails.customerCode,this.customerInfoFromSalesQuote={customerName:this.customerDetails.name,customerCode:this.customerDetails.customerCode,customerId:this.customerDetails.customerId},this.isEdit||(this.salesQuote.salesPersonId=this.customerDetails.primarySalesPersonId,this.salesQuote.customerServiceRepId=this.customerDetails.csrId),this.id?this.setValidDaysBasedOnSettings(!0):(this.salesQuote.creditLimit=this.customerDetails.creditLimit,this.salesQuote.creditLimitTermsId=this.customerDetails.creditTermsId,this.salesQuote.contractReferenceName=this.customerDetails.contractReference,this.salesQuote.restrictPMA=this.customerDetails.restrictPMA,this.salesQuote.restrictDER=this.customerDetails.restrictDER,this.salesQuote.accountTypeId=this.customerDetails.customerTypeId,this.setValidDaysBasedOnSettings(!1),this.onChangeValidForDays()))}},{key:"enableHeaderSave",value:function(){this.enableUpdateButton=!1}},{key:"filterfirstName",value:function(e){void 0!==e.query&&null!==e.query&&this.employeedata(e.query,this.salesQuote.managementStructureId),this.enableUpdateButton=!1}},{key:"filtercsrFirstName",value:function(e){this.csrFirstCollection=this.csrOriginalList;var t=_toConsumableArray(this.csrOriginalList.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.csrFirstCollection=t,this.enableUpdateButton=!1}},{key:"filterAgentFirstName",value:function(e){this.agentFirstCollection=this.agentsOriginalList;var t=_toConsumableArray(this.agentsOriginalList.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.agentFirstCollection=t}},{key:"filterSalesFirstName",value:function(e){this.salesFirstCollection=this.salesPersonAndAgentOriginalList;var t=_toConsumableArray(this.salesPersonAndAgentOriginalList.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.salesFirstCollection=t,this.enableUpdateButton=!1}},{key:"setCSR",value:function(){this.isEdit&&this.salesOrderQuoteObj.customerSeviceRepId&&0!=this.salesOrderQuoteObj.customerSeviceRepId?this.salesQuote.customerServiceRepName=Object(W.d)("employeeId",this.salesOrderQuoteObj.customerSeviceRepId,this.csrOriginalList):this.customerDetails&&this.customerDetails.csrId&&(this.salesQuote.customerServiceRepName=Object(W.d)("employeeId",this.customerDetails.csrId,this.csrOriginalList))}},{key:"setSalesPerson",value:function(){this.isEdit&&this.salesOrderQuoteObj.salesPersonId&&0!=this.salesOrderQuoteObj.salesPersonId?this.salesQuote.salesPersonName=Object(W.d)("employeeId",this.salesOrderQuoteObj.salesPersonId,this.salesPersonAndAgentOriginalList):this.customerDetails&&this.customerDetails.primarySalesPersonId&&(this.salesQuote.salesPersonName=Object(W.d)("employeeId",this.customerDetails.primarySalesPersonId,this.salesPersonAndAgentOriginalList))}},{key:"filterNames",value:function(e){if(this.customerNames=[],this.allCustomer&&this.allCustomer&&this.allCustomer.length>0)for(var t=0;t<this.allCustomer.length;t++){var r=this.allCustomer[t].name;0==r.toLowerCase().indexOf(e.query.toLowerCase())&&this.customerNames.push(r)}}},{key:"getDefaultContact",value:function(){var e=!1;if(this.customerContactList&&this.customerContactList&&this.customerContactList.length>0)for(var t=0;t<this.customerContactList.length;t++)this.customerContactList[t].isDefaultContact?(e=!0,this.salesQuote.customerContactId=this.customerContactList[t].customerContactId):e||(this.salesQuote.customerContactId=0)}},{key:"setAllCustomerContact",value:function(e){var t=this;if(this.customerContactList=e.contactList,this.customerContactList&&this.customerContactList.length>0)for(var r=0;r<this.customerContactList.length;r++)this.customerContactList[r].contactName=this.customerContactList[r].firstName+" "+this.customerContactList[r].lastName,this.customerContactList[r].email=this.customerContactList[r].email;if(void 0!==e){var n=e.customerTypeId?e.customerTypeId:0;this.commonService.autoSuggestionSmartDropDownList("CustomerType","CustomerTypeId","Description","",!0,100,[n].join()).subscribe((function(e){t.accountTypes=e}))}}},{key:"getManagementStructureDetails",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;r=0==r?this.employeeId:r,n=this.isEdit?n=e:0,this.isSpinnerVisible=!0,this.commonService.getManagmentStrctureData(e,r,n).subscribe((function(e){if(t.isSpinnerVisible=!1,e){var r=e;r[0]&&"Level1"==r[0].level?(t.maincompanylist=r[0].lstManagmentStrcture,t.salesQuote.companyId=r[0].managementStructureId,t.salesQuote.managementStructureId=r[0].managementStructureId,t.salesQuote.buId=0,t.salesQuote.divisionId=0,t.salesQuote.departmentId=0,t.bulist=[],t.divisionlist=[],t.departmentList=[]):(t.salesQuote.companyId=0,t.salesQuote.buId=0,t.salesQuote.divisionId=0,t.salesQuote.departmentId=0,t.maincompanylist=[],t.bulist=[],t.divisionlist=[],t.departmentList=[]),r[1]&&"Level2"==r[1].level?(t.bulist=r[1].lstManagmentStrcture,t.salesQuote.buId=r[1].managementStructureId,t.salesQuote.managementStructureId=r[1].managementStructureId,t.salesQuote.divisionId=0,t.salesQuote.departmentId=0,t.divisionlist=[],t.departmentList=[]):(r[1]&&"NEXT"==r[1].level&&(t.bulist=r[1].lstManagmentStrcture),t.salesQuote.buId=0,t.salesQuote.divisionId=0,t.salesQuote.departmentId=0,t.divisionlist=[],t.departmentList=[]),r[2]&&"Level3"==r[2].level?(t.divisionlist=r[2].lstManagmentStrcture,t.salesQuote.divisionId=r[2].managementStructureId,t.salesQuote.managementStructureId=r[2].managementStructureId,t.salesQuote.departmentId=0,t.departmentList=[]):(r[2]&&"NEXT"==r[2].level&&(t.divisionlist=r[2].lstManagmentStrcture),t.salesQuote.divisionId=0,t.salesQuote.departmentId=0,t.departmentList=[]),r[3]&&"Level4"==r[3].level?(t.departmentList=r[3].lstManagmentStrcture,t.salesQuote.departmentId=r[3].managementStructureId,t.salesQuote.managementStructureId=r[3].managementStructureId):(t.salesQuote.departmentId=0,r[3]&&"NEXT"==r[3].level&&(t.departmentList=r[3].lstManagmentStrcture)),t.employeedata("",t.salesQuote.managementStructureId)}}),(function(e){t.isSpinnerVisible=!1;var r=e;t.errorMessageHandler(r)}))}},{key:"employeedata",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this.arrayEmplsit&&0==this.arrayEmplsit.length&&this.arrayEmplsit.push(0);var n=this.salesQuote.employeeId;if(this.arrayEmplsit.push(null==this.employeeId?0:this.employeeId),this.salesQuote.employeeId){var s=this.salesQuote.employeeId;s.employeeId&&(n=s.employeeId,this.arrayEmplsit.push(s.employeeId))}else n=this.employeeId;this.isSpinnerVisible=!0,this.commonService.autoCompleteDropdownsEmployeeByMS(t,!0,20,this.arrayEmplsit.join(),r).subscribe((function(t){e.isSpinnerVisible=!1,e.allEmployeeList=t,e.firstCollection=t,e.currentUserEmployeeName=Object(W.g)("label","value",e.employeeId,t),e.isEdit||e.getEmployeerOnLoad(n)}),(function(t){e.isSpinnerVisible=!1;var r=t;e.errorMessageHandler(r)}))}},{key:"getEmployeerOnLoad",value:function(e){this.salesQuote.employeeId=Object(W.d)("value",e,this.allEmployeeList)}},{key:"errorMessageHandler",value:function(e){var t=e,r="";if(t.message){if(t.error&&t.error.errors.length>0)for(var n=0;n<t.error.errors.length;n++)r=r+t.error.errors[n].message+"<br/>";this.alertService.showMessage(t.error.message,r,E.d.error)}else this.alertService.showMessage("Error",e.error,E.d.error)}},{key:"checkValidOnChange",value:function(e,t){null!=e&&0!=e&&"companyId"==t&&(this.managementValidCheck=!1)}},{key:"load",value:function(e){this.managementStructureId=e,this.id?this.getManagementStructureDetails(this.managementStructureId,this.employeeId,this.salesQuote.managementStructureId):this.getManagementStructureDetails(this.managementStructureId,this.employeeId)}},{key:"getBUList",value:function(e){var t=this;this.salesQuote.buId=0,this.salesQuote.divisionId=0,this.salesQuote.departmentId=0,this.bulist=[],this.divisionlist=[],this.departmentList=[],0!=e&&null!=e&&null!=e?(this.salesQuote.managementStructureId=e,this.salesQuote.companyId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe((function(e){t.bulist=e,t.employeedata("",t.salesQuote.managementStructureId)}))):(this.salesQuote.managementStructureId=0,this.salesQuote.companyId=0)}},{key:"getDivisionlist",value:function(e){var t=this;this.divisionlist=[],this.departmentList=[],this.salesQuote.divisionId=0,this.salesQuote.departmentId=0,0!=e&&null!=e&&null!=e?(this.salesQuote.managementStructureId=e,this.salesQuote.buId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe((function(e){t.divisionlist=e}))):this.salesQuote.managementStructureId=this.salesQuote.companyId,this.employeedata("",this.salesQuote.managementStructureId)}},{key:"getDepartmentlist",value:function(e){var t=this;this.salesQuote.departmentId=0,this.departmentList=[],0!=e&&null!=e&&null!=e?(this.salesQuote.divisionId=e,this.salesQuote.managementStructureId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe((function(e){t.departmentList=e}))):(this.salesQuote.managementStructureId=this.salesQuote.buId,this.salesQuote.divisionId=0),this.employeedata("",this.salesQuote.managementStructureId)}},{key:"getDepartmentId",value:function(e){0!=e&&null!=e&&null!=e?(this.salesQuote.managementStructureId=e,this.salesQuote.departmentId=e):(this.salesQuote.managementStructureId=this.salesQuote.divisionId,this.salesQuote.departmentId=0),this.employeedata("",this.salesQuote.managementStructureId)}},{key:"onDataLoadFailedCustom",value:function(e){this.isSpinnerVisible=!1}},{key:"parsedText",value:function(e){if(e)return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}},{key:"onWarningSelect",value:function(e){if(this.customerWarningData)for(var t=0;t<this.customerWarningData.length;t++)e==this.customerWarningData[t].customerWarningId&&(this.salesQuote.warningName=this.customerWarningData[t].warningMessage)}},{key:"getSalesQuoteInstance",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.isSpinnerVisible=!0,this.isCopyMode&&(this.selectedParts=[]),this.salesQuoteService.getSalesQuote(e).subscribe((function(e){e&&(t.salesQuoteView=e&&e.length?e[0]:null,t.salesOrderQuoteObj=t.salesQuoteView.salesOrderQuote,t.verifySalesQuoteConversion(t.salesQuoteView.verificationResult)),1==t.deletePartsWhileCopieng&&(t.salesQuoteView.parts=[]);var s=t.salesQuoteView.parts;t.selectedParts=[];for(var a=0;a<s.length;a++){var i=s[a],o=t.salesQuoteService.marshalSOQPartToView(i),l=t.selectedParts;l.push(o),t.salesQuoteService.selectedParts=l}t.arrayEmplsit.push(t.salesOrderQuoteObj.employeeId),r&&n||t.load(t.salesOrderQuoteObj.managementStructureId),t.marginSummary=t.salesQuoteService.getSalesQuoteHeaderMarginDetails(t.salesQuoteService.selectedParts,t.marginSummary),t.salesQuote.managementStructureId=t.salesOrderQuoteObj.managementStructureId,t.managementStructureId=t.salesOrderQuoteObj.managementStructureId,t.salesQuote.salesQuoteTypes=t.salesQuoteView.salesQuoteTypes,t.salesQuote.status=t.salesQuoteView.status,t.salesQuote.priorities=t.salesQuoteView.priorities,t.salesPartNumberComponent&&t.salesPartNumberComponent.refresh(),t.salesQuote.salesOrderQuoteId=t.salesOrderQuoteObj.salesOrderQuoteId,t.salesQuote.quoteTypeId=t.salesOrderQuoteObj.quoteTypeId,t.salesQuote.statusId=t.salesOrderQuoteObj.statusId,t.salesQuote.statusChangeDate=new Date(t.salesOrderQuoteObj.statusChangeDate),t.salesQuote.openDate=new Date(t.salesOrderQuoteObj.openDate),t.salesQuote.validForDays=t.salesOrderQuoteObj.validForDays,t.salesQuote.quoteExpiryDate=new Date(t.salesOrderQuoteObj.quoteExpireDate),t.salesQuote.salesOrderQuoteNumber=t.salesOrderQuoteObj.salesOrderQuoteNumber,t.salesQuote.versionNumber=t.salesOrderQuoteObj.versionNumber,t.salesQuote.accountTypeId=t.salesOrderQuoteObj.accountTypeId,t.salesQuote.customerId=t.salesOrderQuoteObj.customerId,t.salesQuote.customerContactId=t.salesOrderQuoteObj.customerContactId,t.salesQuote.customerReferenceName=t.salesOrderQuoteObj.customerReference,t.salesQuote.contractReferenceName=t.salesOrderQuoteObj.contractReference,t.salesQuote.quoteApprovedById=t.salesOrderQuoteObj.quoteApprovedById,t.salesQuote.quoteApprovedById=t.salesOrderQuoteObj.quoteApprovedById,t.salesQuote.employeeId=Object(W.d)("value",t.salesOrderQuoteObj.employeeId,t.allEmployeeList),t.salesOrderQuote.managementStructureId=t.salesOrderQuoteObj.managementStructureId,t.salesOrderQuote.shipToUserTypeId=t.salesOrderQuoteObj.shipToUserTypeId,t.salesOrderQuote.shipToUserId=t.salesOrderQuoteObj.shipToUserId,t.salesOrderQuote.shipToAddressId=t.salesOrderQuoteObj.shipToAddressId,t.salesOrderQuote.shipViaId=t.salesOrderQuoteObj.shipViaId,t.salesOrderQuote.billToContactId=t.salesOrderQuoteObj.billToContactId,t.salesOrderQuote.shipToContactId=t.salesOrderQuoteObj.shipToContactId,t.salesOrderQuote.shipToSiteName=t.salesOrderQuoteObj.shipToSiteName,t.salesOrderQuote.shipToAddress1=t.salesOrderQuoteObj.shipToAddress1,t.salesOrderQuote.shipToAddress2=t.salesOrderQuoteObj.shipToAddress2,t.salesOrderQuote.shipToCity=t.salesOrderQuoteObj.shipToCity,t.salesOrderQuote.shipToState=t.salesOrderQuoteObj.shipToState,t.salesOrderQuote.shipToPostalCode=t.salesOrderQuoteObj.shipToPostalCode,t.salesOrderQuote.shipToCountry=t.salesOrderQuoteObj.shipToCountry,t.salesOrderQuote.shipViaName=t.salesOrderQuoteObj.shipViaName,t.salesOrderQuote.shipViaShippingAccountInfo=t.salesOrderQuoteObj.shipViaShippingAccountInfo,t.salesOrderQuote.shippingId=t.salesOrderQuoteObj.shippingId,t.salesOrderQuote.shippingURL=t.salesOrderQuoteObj.shippingURL,t.salesOrderQuote.shipViaMemo=t.salesOrderQuoteObj.shipViaMemo,t.salesOrderQuote.shipViaShippingURL=t.salesOrderQuoteObj.shipViaShippingURL,t.salesOrderQuote.billToUserTypeId=t.salesOrderQuoteObj.billToUserTypeId,t.salesOrderQuote.billToUserId=t.salesOrderQuoteObj.billToUserId,t.salesOrderQuote.billToAddressId=t.salesOrderQuoteObj.billToAddressId,t.salesOrderQuote.billToSiteName=t.salesOrderQuoteObj.billToSiteName,t.salesOrderQuote.billToAddress1=t.salesOrderQuoteObj.billToAddress1,t.salesOrderQuote.billToAddress2=t.salesOrderQuoteObj.billToAddress2,t.salesOrderQuote.billToCity=t.salesOrderQuoteObj.billToCity,t.salesOrderQuote.billToState=t.salesOrderQuoteObj.billToState,t.salesOrderQuote.billToPostalCode=t.salesOrderQuoteObj.billToPostalCode,t.salesOrderQuote.billToCountry=t.salesOrderQuoteObj.billToCountry,t.salesOrderQuote.billToMemo=t.salesOrderQuoteObj.billToMemo,t.salesOrderQuote.salesOrderQuoteId=t.salesOrderQuoteObj.salesOrderQuoteId,t.salesQuote.probabilityId=t.salesOrderQuoteObj.probabilityId,t.salesQuote.leadSourceId=t.salesOrderQuoteObj.leadSourceId,t.salesQuote.creditLimit=t.salesOrderQuoteObj.creditLimit,t.salesQuote.creditLimitTermsId=t.salesOrderQuoteObj.creditTermId,t.salesQuote.restrictPMA=t.salesOrderQuoteObj.restrictPMA,t.salesQuote.restrictDER=t.salesOrderQuoteObj.restrictDER,t.salesQuote.companyId=t.salesOrderQuoteObj.masterCompanyId,t.salesQuote.buId=t.salesOrderQuoteObj.buId,t.salesQuote.divisionId=t.salesOrderQuoteObj.divisionId,t.salesQuote.departmentId=t.salesOrderQuoteObj.departmentId,t.salesOrderQuoteObj.approvedDate&&(t.salesQuote.approvedDate=new Date(t.salesOrderQuoteObj.approvedDate)),t.salesQuote.currencyId=t.salesOrderQuoteObj.currencyId,t.salesQuote.warningId=t.salesOrderQuoteObj.customerWarningId,t.salesQuote.memo=t.salesOrderQuoteObj.memo,t.salesQuote.notes=t.salesOrderQuoteObj.notes,t.salesQuote.statusName=t.salesQuoteView.salesOrderQuote.status,t.salesQuote.isApproved=t.salesQuoteView.salesOrderQuote.isApproved,t.salesQuote.customerServiceRepId=t.salesOrderQuoteObj.customerSeviceRepId,t.salesQuote.salesPersonId=t.salesOrderQuoteObj.salesPersonId,t.isSpinnerVisible=!1,n&&t.getInitialDataForSOQ()}),(function(e){t.isSpinnerVisible=!1}))}},{key:"setValidDaysBasedOnSettings",value:function(e){if(this.validDaysSettingsList&&this.validDaysSettingsList.length>0){var t=this.validDaysSettingsList[0];t?(e||(this.salesQuote.validForDays=t.validDays,this.salesQuote.quoteTypeId=t.quoteTypeId,this.salesQuote.statusId=t.defaultStatusId,this.salesQuote.statusName=t.defaultStatusName),this.defaultSettingPriority=t.defaultPriorityId):(this.salesQuote.validForDays=10,this.salesQuote.salesQuoteTypes&&this.salesQuote.salesQuoteTypes.length>0&&(this.salesQuote.quoteTypeId=this.salesQuote.salesQuoteTypes[0].id))}else this.salesQuote.validForDays=10,this.salesQuote.salesQuoteTypes&&this.salesQuote.salesQuoteTypes.length>0&&(this.salesQuote.quoteTypeId=this.salesQuote.salesQuoteTypes[0].id)}},{key:"getNewSalesQuoteInstance",value:function(e){var t=this;arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.isSpinnerVisible=!0,this.salesQuoteService.getNewSalesQuoteInstance(e).subscribe((function(e){t.salesQuote=e&&e.length?e[0]:null,t.salesQuote.openDate=new Date,t.salesQuote.quoteExpiryDate=new Date,t.salesQuote.statusChangeDate=new Date,t.salesQuote.managementStructureId=t.currentUserManagementStructureId,t.salesQuote.companyId=t.masterCompanyId,t.salesQuote.leadSourceId=null,t.salesQuote.probabilityId=null,t.salesQuote.salesOrderQuoteNumber="Creating",t.load(t.managementStructureId),t.getInitialDataForSOQ(),t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1}))}},{key:"onChangeValidForDays",value:function(){var e=new Date(this.salesQuote.openDate),t=+this.salesQuote.validForDays,r=new Date(this.salesQuote.openDate);r.setDate(e.getDate()+t),this.salesQuote.quoteExpiryDate=r,this.enableUpdateButton=!1}},{key:"onChangeQuoteExpiryDate",value:function(){var e=new Date(this.salesQuote.openDate),t=new Date(this.salesQuote.quoteExpiryDate).getTime()-e.getTime(),r=Math.floor(t/864e5);this.salesQuote.validForDays=r}},{key:"onChangeOpenDate",value:function(){var e=new Date(this.salesQuote.openDate),t=+this.salesQuote.validForDays,r=new Date(this.salesQuote.openDate);r.setDate(e.getDate()+t),this.salesQuote.quoteExpiryDate=r,this.enableUpdateButton=!1}},{key:"onChangeInput",value:function(){this.enableUpdateButton=!1}},{key:"viewSelectedRow",value:function(){this.modal=this.modalService.open(J.a,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.componentInstance.customerId=this.customerId}},{key:"onAddDescription",value:function(e){this.tempMemo="","notes"==e&&(this.tempMemoLabel="Notes",this.tempMemo=this.salesQuote.notes),"memo"==e&&(this.tempMemoLabel="Memo",this.tempMemo=this.salesQuote.memo)}},{key:"onSaveDescription",value:function(){"Notes"==this.tempMemoLabel&&(this.salesQuote.notes=this.tempMemo),"Memo"==this.tempMemoLabel&&(this.salesQuote.memo=this.tempMemo),this.enableUpdateButton=!1}},{key:"closeErrorMessage",value:function(){this.errorModal.close()}},{key:"onSubmit",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.errorMessages=[];var n=!1;if(this.salesQuote.quoteTypeId<=0&&(this.errorMessages.push("Please select Quote Type"),n=!0),this.salesQuote.openDate||(this.errorMessages.push("Please select Open Date"),n=!0),this.salesQuote.validForDays<1&&(this.errorMessages.push("Please enter Valid For (Days)"),n=!0),this.salesQuote.quoteExpiryDate||(this.errorMessages.push("Please select Quote Expiry Date"),n=!0),this.salesQuote.accountTypeId<=0&&(this.errorMessages.push("Please select Account Type"),n=!0),this.salesQuote.customerContactId<=0&&(this.errorMessages.push("Please select Customer Contact"),n=!0),this.salesQuote.customerReferenceName||(this.errorMessages.push("Please enter Customer Reference Name"),n=!0),this.salesQuote.employeeId||(this.errorMessages.push("Please select employee"),n=!0),this.salesQuote.companyId<=0&&(this.errorMessages.push("Please select Management Structure"),n=!0),0==e&&(this.salesOrderQuote.shipToSiteName||(this.errorMessages.push("Please select Ship To SiteName"),n=!0),this.salesOrderQuote.shipToContactId||(this.errorMessages.push("Please select Ship To Contact"),n=!0),this.salesOrderQuote.billToSiteName||(this.errorMessages.push("Please select Bill To SiteName"),n=!0),this.salesOrderQuote.billToContactId||(this.errorMessages.push("Please select Bill To Contact"),n=!0)),n){var s=this.errorMessagePop;this.errorModal=this.modalService.open(s,{size:"sm",backdrop:"static",keyboard:!1}),this.display=!0}else{this.display=!1,this.isSpinnerVisible=!0,this.salesOrderQuote.quoteTypeId=this.salesQuote.quoteTypeId,this.salesOrderQuote.openDate=this.salesQuote.openDate.toDateString(),this.salesOrderQuote.validForDays=this.salesQuote.validForDays,this.salesOrderQuote.quoteExpireDate=this.salesQuote.quoteExpiryDate.toDateString(),this.salesOrderQuote.accountTypeId=this.salesQuote.accountTypeId,this.salesOrderQuote.customerId=this.salesQuote.customerId,this.salesOrderQuote.customerContactId=this.salesQuote.customerContactId,this.salesOrderQuote.customerReference=this.salesQuote.customerReferenceName,this.salesOrderQuote.contractReference=this.salesQuote.contractReferenceName,this.salesOrderQuote.managementStructureId=this.salesQuote.managementStructureId,this.salesOrderQuote.salesOrderQuoteNumber=this.salesQuote.salesOrderQuoteNumber,this.salesOrderQuote.versionNumber=this.salesQuote.versionNumber,this.salesOrderQuote.masterCompanyId=this.masterCompanyId,this.salesOrderQuote.buId=this.salesQuote.buId,this.salesOrderQuote.departmentId=this.salesQuote.departmentId,this.salesOrderQuote.divisionId=this.salesQuote.divisionId,this.salesOrderQuote.salesPersonId=Object(W.a)("employeeId",this.salesQuote.salesPersonName),this.salesOrderQuote.agentId=Object(W.a)("employeeId",this.salesQuote.agentId),this.salesOrderQuote.agentName=Object(W.a)("name",this.salesQuote.agentId),this.salesOrderQuote.customerSeviceRepId=Object(W.a)("employeeId",this.salesQuote.customerServiceRepName),this.salesOrderQuote.probabilityId=this.salesQuote.probabilityId,this.salesOrderQuote.employeeId=Object(W.a)("value",this.salesQuote.employeeId),this.salesOrderQuote.billToContactName=Object(W.a)("firstName",this.salesOrderQuote.billToContactId),this.salesOrderQuote.billToContactId=Object(W.a)("contactId",this.salesOrderQuote.billToContactId),this.salesOrderQuote.shipToContactName=Object(W.a)("firstName",this.salesOrderQuote.shipToContactId),this.salesOrderQuote.shipToContactId=Object(W.a)("contactId",this.salesOrderQuote.shipToContactId),this.salesOrderQuote.shipToUserId=Object(W.a)("value",this.salesOrderQuote.shipToUserId),this.salesOrderQuote.billToUserId=Object(W.a)("value",this.salesOrderQuote.billToUserId),this.salesOrderQuote.leadSourceId=this.salesQuote.leadSourceId,this.salesQuote.approvedDate&&this.id&&(this.salesOrderQuote.statusId=this.salesQuote.statusId,this.salesOrderQuote.statusChangeDate=this.salesQuote.statusChangeDate),this.salesOrderQuote.creditLimit=this.salesQuote.creditLimit,this.salesOrderQuote.creditTermId=this.salesQuote.creditLimitTermsId,this.salesOrderQuote.restrictPMA=this.salesQuote.restrictPMA,this.salesOrderQuote.restrictDER=this.salesQuote.restrictDER,this.salesOrderQuote.quoteApprovedById=this.salesQuote.quoteApprovedById,this.salesQuote.approvedDate&&(this.salesOrderQuote.approvedDate=this.salesQuote.approvedDate.toDateString()),this.salesOrderQuote.currencyId=this.salesQuote.currencyId,this.customerWarning&&this.customerWarning.customerWarningId?this.salesOrderQuote.customerWarningId=this.customerWarning.customerWarningId:this.salesOrderQuote.customerWarningId=this.salesQuote.warningId,this.salesOrderQuote.memo=this.salesQuote.memo,this.salesOrderQuote.notes=this.salesQuote.notes,this.salesOrderQuote.createdBy=this.userName,this.salesOrderQuote.updatedBy=this.userName,this.salesOrderQuote.createdOn=(new Date).toDateString(),this.salesOrderQuote.updatedOn=(new Date).toDateString(),this.salesQuoteView=new K,this.salesQuoteView.createNewVersion=r,this.salesQuoteView.salesOrderQuote=this.salesOrderQuote;for(var a=[],i=!1,o=!1,l="",d=0;d<this.selectedParts.length;d++){var c=!1,u=this.selectedParts[d];if(u.customerRequestDate||(this.isSpinnerVisible=!1,i=!0,c||(l=l+"<br />PN - "+u.partNumber,c=!0),l+="<br />Please enter Customer Request Date."),u.estimatedShipDate||(this.isSpinnerVisible=!1,i=!0,c||(l=l+"<br />PN - "+u.partNumber,c=!0),l+="<br />Please enter Estimated Ship Date."),u.promisedDate||(this.isSpinnerVisible=!1,i=!0,c||(l=l+"<br />PN - "+u.partNumber,c=!0),l+="<br />Please enter Promised Date."),u.priorityId||(this.isSpinnerVisible=!1,i=!0,c||(l=l+"<br />PN - "+u.partNumber,c=!0),l+="<br />Please enter priority ID."),u.customerRequestDate&&u.promisedDate&&u.estimatedShipDate&&((u.customerRequestDate<this.salesQuote.openDate||u.estimatedShipDate<this.salesQuote.openDate||u.promisedDate<this.salesQuote.openDate)&&(o=!0),u.promisedDate<u.customerRequestDate&&(this.isSpinnerVisible=!1,i=!0,c||(l=l+"<br />PN - "+u.partNumber,c=!0),l+="<br />Request date cannot be greater than Promised Date."),u.estimatedShipDate<u.customerRequestDate&&(this.isSpinnerVisible=!1,i=!0,c||(l=l+"<br />PN - "+u.partNumber,c=!0),l+="<br />Request date cannot be greater than Est.Ship Date.")),!i&&!o){var p=this.salesQuoteService.marshalSOQPartToSave(u,this.userName);a.push(p)}}this.salesQuoteView.parts=a,this.id?i?(this.isSpinnerVisible=!1,this.alertService.resetStickyMessage(),this.alertService.showStickyMessage("Sales Order Quote",l,E.d.error)):o?(this.isSpinnerVisible=!1,this.alertService.resetStickyMessage(),this.alertService.showStickyMessage("Sales Order Quote","Please select valid Dates for Sales Order Quote PartsList!",E.d.error)):(this.marginSummary.salesOrderQuoteId=this.id,this.marginSummary.misc=this.totalCharges,this.salesQuoteService.createSOQMarginSummary(this.marginSummary).subscribe((function(e){t.marginSummary.soQuoteMarginSummaryId=e}),(function(e){t.isSpinnerVisible=!1})),this.salesQuoteService.update(this.salesQuoteView).subscribe((function(e){t.SalesOrderQuoteId=e[0].salesOrderQuoteId,t.isCreateModeHeader=!0,t.isSpinnerVisible=!1,t.alertService.showMessage("Success","Quote updated successfully.",E.d.success),t.getSalesQuoteInstance(t.id,!0),r&&t.router.navigateByUrl("salesmodule/salespages/sales-quote-list"),t.toggle_po_header=!1,t.isEdit&&(t.isCreateModeHeader=!1),t.enableUpdateButton=!0}),(function(e){t.isSpinnerVisible=!1}))):(1==this.isCopyMode&&(this.salesQuoteView.originalSalesOrderQuoteId=parseInt(this.quoteCopyRefId),this.salesQuoteView.salesOrderQuote.salesOrderQuoteId=null,this.salesQuoteView.salesOrderQuote.salesOrderQuoteNumber=void 0,this.salesQuoteView.parts&&this.salesQuoteView.parts.length>0&&this.salesQuoteView.parts.filter((function(e){return e.salesOrderQuotePartId=null}))),this.salesQuoteService.create(this.salesQuoteView).subscribe((function(e){t.SalesOrderQuoteId=e[0].salesOrderQuoteId,t.salesQuoteView.salesOrderQuote.salesOrderQuoteId=t.SalesOrderQuoteId,t.isCreateModeHeader=!0,t.isHeaderSubmit=!0,t.isSpinnerVisible=!1,t.alertService.showMessage("Success","Quote created successfully.",E.d.success),t.toggle_po_header=!1,t.id=t.SalesOrderQuoteId,t.SalesOrderQuoteId&&t.router.navigateByUrl("salesmodule/salespages/sales-quote-edit/".concat(t.customerId,"/").concat(t.SalesOrderQuoteId)),t.isCreateModeHeader||t.router.navigateByUrl("salesmodule/salespages/sales-quote-list")}),(function(e){t.isSpinnerVisible=!1})))}}},{key:"saveSalesQuoteHeader",value:function(){var e=this;if("null"==this.headerInfo.companyId){var t=!1;if(this.salesQuote.quoteTypeId<=0&&(this.errorMessages.push("Please select Quote Type"),t=!0),this.salesQuote.openDate||(this.errorMessages.push("Please select Open Date"),t=!0),this.salesQuote.validForDays<1&&(this.errorMessages.push("Please enter Valid For (Days)"),t=!0),this.salesQuote.quoteExpiryDate||(this.errorMessages.push("Please select Quote Expiry Date"),t=!0),this.salesQuote.accountTypeId<=0&&(this.errorMessages.push("Please select Account Type"),t=!0),this.salesQuote.customerContactId<0&&(this.errorMessages.push("Please select Customer Contact"),t=!0),this.salesQuote.customerReferenceName||(this.errorMessages.push("Please enter Customer Reference Name"),t=!0),this.salesQuote.employeeId||(this.errorMessages.push("Please select employee"),t=!0),this.salesQuote.managementStructureId<=0&&(this.errorMessages.push("Please select Management Structure"),t=!0),t){var r=this.errorMessagePop;this.errorModal=this.modalService.open(r,{size:"sm",backdrop:"static",keyboard:!1}),this.display=!0}else this.display=!1,this.isSpinnerVisible=!0}else{var n={quoteTypeId:this.salesQuote.quoteTypeId,openDate:this.salesQuote.openDate.toDateString(),validForDays:this.salesQuote.validForDays,quoteExpireDate:this.salesQuote.quoteExpiryDate.toDateString(),accountTypeId:this.salesQuote.accountTypeId,customerId:this.salesQuote.customerId,customerContactId:this.salesQuote.customerContactId,customerReference:this.salesQuote.customerReferenceName,contractReference:this.salesQuote.contractReferenceName,managementStructureId:this.salesQuote.managementStructureId,salesOrderQuoteNumber:this.salesQuote.salesOrderQuoteNumber,versionNumber:this.salesQuote.versionNumber,salesPersonId:Object(W.a)("employeeId",this.salesQuote.salesPersonName),agentId:Object(W.a)("employeeId",this.salesQuote.agentId),agentName:Object(W.a)("name",this.salesQuote.agentId),customerSeviceRepId:Object(W.a)("employeeId",this.salesQuote.customerServiceRepName),probabilityId:this.salesQuote.probabilityId,employeeId:Object(W.a)("employeeId",this.salesQuote.employeeId),leadSourceId:this.salesQuote.leadSourceId,creditLimit:this.salesQuote.creditLimit,creditTermId:this.salesQuote.creditLimitTermsId,restrictPMA:this.salesQuote.restrictPMA,restrictDER:this.salesQuote.restrictDER,currencyId:this.salesQuote.currencyId,customerWarningId:this.salesQuote.warningId[0],memo:this.salesQuote.memo,notes:this.salesQuote.notes,createdBy:this.userName,updatedBy:this.userName,createdOn:(new Date).toDateString(),updatedOn:(new Date).toDateString()};if(this.isCreateModeHeader){var s=Object.assign({},n,{SalesOrderQuoteId:parseInt(this.qoId)});this.salesQuoteService.saveSalesQuoteHeader(Object.assign({},s)).subscribe((function(t){e.SalesOrderQuoteId=t.salesOrderQuoteId,e.headerInfo.salesOrderQuoteNumber=t.salesOrderQuoteNumber}),(function(t){e.isSpinnerVisible=!1}))}else this.salesQuoteService.saveSalesQuoteHeader(Object.assign({},n)).subscribe((function(t){e.SalesOrderQuoteId=t.salesOrderQuoteId,e.qoId=t.salesOrderQuoteId,e.headerInfo.salesOrderQuoteNumber=t.salesOrderQuoteNumber,e.qoId&&(e.isCreateModeHeader=!0)}),(function(t){e.isSpinnerVisible=!1}));this.toggle_po_header=!0}}},{key:"initiateSalesOrderCoversion",value:function(){this.selectAllForConversion=!0,this.salesOrderConversionCriteriaObj.transferCharges=!0,this.salesOrderConversionCriteriaObj.transferFreight=!0,this.salesOrderConversionCriteriaObj.transferMemos=!0,this.salesOrderConversionCriteriaObj.transferNotes=!0,this.salesOrderConversionCriteriaObj.transferStockline=!0,this.salesOrderConversionCriteriaObj.reserveStockline=!0,this.salesOrderConversionCriteriaObj.customerReference="";var e=this.salesQuoteConvertPopup;this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"inititateEmailQuote",value:function(){this.selectedCommunicationTab="Quotemail",this.isEmailTabEnabled=!0}},{key:"sendQuoteToCustomer",value:function(){var e=this;this.salesQuoteService.sendQuoteToCustomer(this.id).subscribe((function(t){e.alertService.showMessage("Success","Quote sent to customer successfully.",E.d.success),e.closeModal()}),(function(t){e.isSpinnerVisible=!1}))}},{key:"convertSalesOrderQuote",value:function(){var e=this;this.conversionStarted=!0,this.isSpinnerVisible=!0,this.salesOrderConversionCriteriaObj.salesOrderQuoteId=this.id,this.salesQuoteService.convertfromquote(this.salesOrderConversionCriteriaObj).subscribe((function(t){e.alertService.showMessage("Success","Quote coverted to Order successfully.",E.d.success),e.isSpinnerVisible=!1,e.salesOrderView=t[0],e.closeModal(),e.router.navigateByUrl("salesmodule/salespages/sales-order-edit/".concat(e.salesOrderView.salesOrder.customerId,"/").concat(e.salesOrderView.salesOrder.salesOrderId))}),(function(t){e.isSpinnerVisible=!1})),this.isSpinnerVisible=!1}},{key:"initiateQuoteCopying",value:function(){var e=this.copyQuotePopup;this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"copySalesOrderQuote",value:function(){var e,t=this;e=1==this.copyConsiderations.isPartsAllowForCopy,this.salesQuoteService.initiateQuoteCopying(this.id).subscribe((function(r){t.closeModal(),t.router.navigate(["/salesmodule/salespages/sales-quote-create/"+r[0].salesOrderQuote.customerId],{queryParams:{copyRef:r[0].originalSalesOrderQuoteId,considerParts:e,considerApprovers:!1}})}),(function(e){t.isSpinnerVisible=!1}))}},{key:"verifySalesQuoteConversion",value:function(e){var t=e;this.verifySalesOrderQuoteObj=t,this.salesOrderConversionCriteriaObj=this.verifySalesOrderQuoteObj.salesOrderConversionCritera,this.salesOrderConversionCriteriaObj.customerReference=""}},{key:"initiateClosingSalesOrderQuote",value:function(){var e=this.closeQuotePopup;this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"initiateCreatingNewQuote",value:function(){var e=this.newQuoteCreatePopup;this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"initiatePrintProcess",value:function(){var e=this.salesQuotePrintPopup;this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1})}},{key:"print",value:function(){var e,t;e=document.getElementById("quote_print_content").innerHTML,(t=window.open("","_blank","top=0,left=0,height=100%,width=auto")).document.open(),t.document.write('\n      <html>\n        <head>\n          <title>Print tab</title>\n          <style>\n          .t0 td {\n             \n            border: 1px solid #999; \n            -webkit-print-color-adjust: exact; \n            \n                }\n                .t1 .td1, .t1 .td3 {\n                    padding-right: 30px;\n                }\n                .t1 .td2{\n                    padding-right: 100px;\n                }\n                .t4 th, .t3 th{\n                    background: #4298ff;  \n                    -webkit-print-color-adjust: exact; \n                    color: #FFF;\n                    \n                    padding: 5px;\n                }\n                .t4 th{\n                 border: 1px solid #999;\n \n                }\n                .t2 th{\n                    background: #c7c6c6;  \n                    color: #000;\n                    padding: 5px;\n                    border: 1px solid #999;\n                    -webkit-print-color-adjust: exact; \n                }\n                .t2{\n                    border: 1px solid #999;   \n                    -webkit-print-color-adjust: exact; \n                    margin-top: 20px;\n                }\n               .t4 td{\n                    border: 1px solid #999;\n                    padding: 5px; \n                    -webkit-print-color-adjust: exact; \n            \n                }\n                .t2 td {\n                    border-bottom: 1px solid #999;\n                    -webkit-print-color-adjust: exact; \n                    border-left: 1px solid #999;\n                    padding: 5px;\n                }\n                \n                .t2 .th2, .t2 .td2{\n                    width: 265px;\n                }\n                .t3 .td2{\n                    border: 1px solid #999; \n                    min-width: 100px;\n                    -webkit-print-color-adjust: exact; \n            \n                }\n                .t2 td{\n                    height: 25px;\n                }\n               .t2 td.blank {\n                border: 0;\n                }\n                .t3{\n                 width: 100%;\n                 margin-bottom: 20px;\n               }\n               .t3 th{\n                 font-size: 12px !important;\n               }\n               .logo{\n                 background: url("../../../../assets/images/PAS-logo.png");\n                 width: 100px;\n                 height: 100px;\n               }\n               table{\n                 font-size: 12px !important;\n               }\n          </style>\n        </head>\n    <body onload="window.print();window.close()">'.concat(e,"</body>\n      </html>")),t.document.close()}},{key:"closeSalesOrderQuote",value:function(){var e=this;this.salesQuoteService.closeSalesOrderQuote(this.id,this.userName).subscribe((function(t){e.isSpinnerVisible=!1,e.alertService.showMessage("Success","Quote closed successfully.",E.d.success),e.closeModal(),e.router.navigateByUrl("salesmodule/salespages/sales-quote-list")}),(function(t){e.isSpinnerVisible=!1}))}},{key:"newQuoteEvent",value:function(){this.closeModal(),this.router.navigateByUrl("/salesmodule/salespages/sales-quote-create/"+this.customerId)}},{key:"closeModal",value:function(){this.modal.close()}},{key:"openConfirmationModal",value:function(e){this.submitType=e,this.modal=this.modalService.open(this.updateConfirmationModal,{size:"sm"})}},{key:"closeConfirmationModal",value:function(){this.modal&&this.modal.close()}},{key:"createNewSalesOrderQuoteVersion",value:function(){this.closeConfirmationModal(),this.onSubmit(this.submitType,!0)}},{key:"updateSalesOrderQuote",value:function(){this.closeConfirmationModal(),this.onSubmit(this.submitType,!1)}},{key:"onPartsApprovedEvent",value:function(e){e&&(this.selectedParts=[],this.getSalesQuoteInstance(this.id,!0))}},{key:"onPartsSaveEvent",value:function(e){e&&(this.marginSummary=this.salesQuoteService.getSalesQuoteHeaderMarginDetails(e,this.marginSummary),this.updateMarginSummary(),this.getSalesQuoteInstance(this.id,!0))}},{key:"updateMarginSummary",value:function(){var e=this;this.isSpinnerVisible=!0,this.marginSummary.salesOrderQuoteId=this.id,this.salesQuoteService.createSOQMarginSummary(this.marginSummary).subscribe((function(t){e.marginSummary.soQuoteMarginSummaryId=t,e.isSpinnerVisible=!1}),(function(t){e.isSpinnerVisible=!1}))}},{key:"onTabChange",value:function(e){0==e.index&&this.salesPartNumberComponent.refresh(),1==e.index&&this.salesApproveComponent.refresh(this.marginSummary),2==e.index&&this.salesCustomerApprovalsComponent.refresh(this.marginSummary,this.salesQuote.salesOrderQuoteId),4==e.index&&("Open"==this.salesQuote.statusName||"Partially Approved"==this.salesQuote.statusName?this.salesOrderQuoteFreightComponent.refresh(!1):this.salesOrderQuoteFreightComponent.refresh(!0)),5==e.index&&("Open"==this.salesQuote.statusName||"Partially Approved"==this.salesQuote.statusName?this.salesOrderQuoteChargesComponent.refresh(!1):this.salesOrderQuoteChargesComponent.refresh(!0)),6==e.index&&this.salesQuoteDocumentsComponent.refresh(),7==e.index&&this.salesQuoteAnalysisComponent.refresh(this.id)}},{key:"setFreightsOrCharges",value:function(){var e=this;this.salesQuoteService.selectedParts&&this.salesQuoteService.selectedParts.length>0&&this.salesQuoteService.selectedParts.forEach((function(t,r){e.salesQuoteService.selectedParts[r].freight=e.totalFreights,e.salesQuoteService.selectedParts[r].misc=e.totalCharges})),this.marginSummary=this.salesQuoteService.getSalesQuoteHeaderMarginDetails(this.salesQuoteService.selectedParts,this.marginSummary)}},{key:"saveSalesOrderFreightsList",value:function(e){this.totalFreights=e,this.marginSummary.freightAmount=this.totalFreights,this.salesQuoteService.setTotalFreights(e),this.setFreightsOrCharges(),this.updateMarginSummary()}},{key:"updateSalesOrderFreightsList",value:function(e){this.totalFreights=e,this.marginSummary.freightAmount=this.totalFreights,this.salesQuoteService.setTotalFreights(e),this.setFreightsOrCharges(),this.updateMarginSummary()}},{key:"getFreightList",value:function(){}},{key:"saveSalesOrderChargesList",value:function(e){this.totalCharges=e,this.marginSummary.misc=this.totalCharges,this.salesQuoteService.setTotalCharges(e),this.setFreightsOrCharges(),this.updateMarginSummary()}},{key:"updateSalesOrderChargesList",value:function(e){this.totalCharges=e,this.salesQuoteService.setTotalCharges(e),this.marginSummary.misc=this.totalCharges,this.setFreightsOrCharges(),this.updateMarginSummary()}},{key:"getChargesList",value:function(){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"currentUserManagementStructureId",get:function(){return this.authService.currentUser?this.authService.currentUser.managementStructureId:null}},{key:"userId",get:function(){return this.authService.currentUser?this.authService.currentUser.id:0}},{key:"employeeId",get:function(){return this.authService.currentUser?this.authService.currentUser.employeeId:0}},{key:"masterCompanyId",get:function(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:1}}]),e}();Le.ctorParameters=function(){return[{type:H.a},{type:E.b},{type:N.ActivatedRoute},{type:F.a},{type:o.FormBuilder},{type:_.a},{type:_.a},{type:B.a},{type:j.a},{type:z.a},{type:N.Router},{type:R.c}]},n.b([Object(s.ViewChild)("errorMessagePop",{static:!1})],Le.prototype,"errorMessagePop",void 0),n.b([Object(s.ViewChild)("closeQuotePopup",{static:!1})],Le.prototype,"closeQuotePopup",void 0),n.b([Object(s.ViewChild)("newQuoteCreatePopup",{static:!1})],Le.prototype,"newQuoteCreatePopup",void 0),n.b([Object(s.ViewChild)("copyQuotePopup",{static:!1})],Le.prototype,"copyQuotePopup",void 0),n.b([Object(s.ViewChild)("newSalesQuoteForm",{static:!1})],Le.prototype,"newSalesQuoteForm",void 0),n.b([Object(s.ViewChild)("salesQuoteConvertPopup",{static:!1})],Le.prototype,"salesQuoteConvertPopup",void 0),n.b([Object(s.ViewChild)("emailQuotePopup",{static:!1})],Le.prototype,"emailQuotePopup",void 0),n.b([Object(s.ViewChild)("salesQuotePrintPopup",{static:!1})],Le.prototype,"salesQuotePrintPopup",void 0),n.b([Object(s.ViewChild)(ue,{static:!1})],Le.prototype,"salesApproveComponent",void 0),n.b([Object(s.ViewChild)(ve,{static:!1})],Le.prototype,"salesCustomerApprovalsComponent",void 0),n.b([Object(s.ViewChild)(Se,{static:!1})],Le.prototype,"salesOrderQuoteFreightComponent",void 0),n.b([Object(s.ViewChild)(we,{static:!1})],Le.prototype,"salesOrderQuoteChargesComponent",void 0),n.b([Object(s.ViewChild)(De,{static:!1})],Le.prototype,"salesPartNumberComponent",void 0),n.b([Object(s.ViewChild)(Ne,{static:!1})],Le.prototype,"salesQuoteDocumentsComponent",void 0),n.b([Object(s.ViewChild)(Ae,{static:!1})],Le.prototype,"salesQuoteAnalysisComponent",void 0),n.b([Object(s.ViewChild)(X,{static:!1})],Le.prototype,"managementStructureComponent",void 0),n.b([Object(s.ViewChild)(ie,{static:!1})],Le.prototype,"salesAddressComponent",void 0),n.b([Object(s.ViewChild)("updateConfirmationModal",{static:!1})],Le.prototype,"updateConfirmationModal",void 0),Le=n.b([Object(s.Component)({selector:"app-sales-quote-create",template:n.c(r("q5Ih")).default,styles:[n.c(r("/z99")).default]})],Le);var Fe=function(){function e(){_classCallCheck(this,e),this.init()}return _createClass(e,[{key:"init",value:function(){this.first=0,this.rows=10,this.limit=5,this.pageCount=10,this.page=10}},{key:"reset",value:function(){this.init()}}]),e}(),Ve=function(){function e(t,r,n,s,a,i){_classCallCheck(this,e),this.customerService=t,this.alertService=r,this.modalService=n,this.router=s,this.commonservice=a,this.datePipe=i,this.totalRecords=0,this.totalPages=0,this.isSpinnerVisible=!1,this.showPaginator=!1,this.pageSize=10,this.pageIndex=0,this.first=0,this.selectedOnly=!1,this.headers=[{field:"name",header:"Name"},{field:"customerCode",header:"Code"},{field:"accountType",header:"Account Type"},{field:"customerType",header:"Type"},{field:"customerClassification",header:"Classification"},{field:"email",header:"Email"},{field:"city",header:"City"},{field:"stateOrProvince",header:"State"},{field:"contact",header:"Contact"},{field:"salesPersonPrimary",header:"Sales Person"}],this.selectedColumns=this.headers,this.customerWarning={}}return _createClass(e,[{key:"ngOnInit",value:function(){this.query=new Fe,this.breadcrumbs=[{label:"Sales Order Quote"},{label:"Create Quote"}]}},{key:"getList",value:function(e){var t=this;this.isSpinnerVisible=!0;var r=Object.assign({},e,{filters:Object(W.j)(e.filters)});this.customerService.getCustomerAll(r).subscribe((function(e){t.isSpinnerVisible=!1,t.data=e.results,t.data.length>0&&(t.totalRecords=e.totalRecordsCount,t.totalPages=Math.ceil(t.totalRecords/t.pageSize))}),(function(e){t.isSpinnerVisible=!1}))}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){""!=this.filteredText&&null!=this.filteredText&&null!=this.filteredText?this.globalSearch(this.filteredText):this.table.reset()}},{key:"globalSearch1",value:function(e){var t=this;this.pageIndex=0,this.filteredText=e,this.isSpinnerVisible=!0,this.customerService.getGlobalSearch(e,this.pageIndex,this.pageSize).subscribe((function(e){t.data=e,t.isSpinnerVisible=!1,e.length>0&&(t.totalRecords=e.totalRecordsCount,t.totalPages=Math.ceil(t.totalRecords/t.pageSize))}),(function(e){t.isSpinnerVisible=!1}))}},{key:"globalSearch",value:function(e){this.pageIndex=this.lazyLoadEventData.rows>10?parseInt(this.lazyLoadEventData.first)/this.lazyLoadEventData.rows:0,this.pageSize=this.lazyLoadEventData.rows,this.lazyLoadEventData.first=this.pageIndex,this.lazyLoadEventData.globalFilter=e,this.filteredText=e,this.lazyLoadEventData.filters=Object.assign({},this.lazyLoadEventData.filters),this.getList(this.lazyLoadEventData)}},{key:"loadData",value:function(e){this.lazyLoadEventData=e;var t=parseInt(e.first)/e.rows;this.pageIndex=t,this.pageSize=e.rows,e.first=t,this.getList(e)}},{key:"filterData",value:function(e){}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"viewSelectedRow",value:function(e){this.modal=this.modalService.open(J.a,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.componentInstance.customerId=e.customerId}},{key:"onSearch",value:function(e){this.query.reset(),this.searchCustomer()}},{key:"onPaging",value:function(e){this.totalRecords>0&&(this.query.first=e.first,this.query.rows=e.rows,this.searchCustomer())}},{key:"createQuote",value:function(e){this.getTypesOfWarnings(e.customerId)}},{key:"getTypesOfWarnings",value:function(e){var t=this;this.isSpinnerVisible=!0,this.commonservice.smartDropDownList("CustomerWarningType","CustomerWarningTypeId","Name").subscribe((function(r){t.isSpinnerVisible=!1,r.length>0&&r.filter((function(r){r.label==oe.a.GLOBAL_CUSTOMER_WARNING_TYOE_FOR_SALES_QUOTE&&t.getCustomerRestrictionsData(r.value,e)}))}),(function(e){t.isSpinnerVisible=!1}))}},{key:"getCustomerRestrictionsData",value:function(e,t){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function r(){var n=this;return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return this.isSpinnerVisible=!0,r.next=3,this.customerService.getCustomerRestrictionsByCustomerIdandCustomerWarningsListID(t,e).subscribe((function(r){n.customerWarning=r,n.isSpinnerVisible=!1,n.customerWarning.customerId=t,0==r.customerWarningId?n.getCustomerWarningsData(e,t):n.modal=n.modalService.open(n.restrictionPopup,{size:"lg",backdrop:"static",keyboard:!1})}),(function(e){n.isSpinnerVisible=!1}));case 3:case"end":return r.stop()}}),r,this)})))}},{key:"getCustomerWarningsData",value:function(e,t){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function r(){var n=this;return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return this.isSpinnerVisible=!0,r.next=3,this.customerService.getCustomerWarningsByCustomerIdandCustomerWarningsListID(t,e).subscribe((function(e){n.customerWarning=e,n.isSpinnerVisible=!1,n.customerWarning.customerId=t,0==e.customerWarningId?n.moveToCreate(t):n.modal=n.modalService.open(n.warningPopup,{size:"lg",backdrop:"static",keyboard:!1})}),(function(e){n.isSpinnerVisible=!1}));case 3:case"end":return r.stop()}}),r,this)})))}},{key:"moveToCreate",value:function(e){this.closeModal(),this.router.navigateByUrl("salesmodule/salespages/sales-quote-create/"+e)}},{key:"searchCustomer",value:function(){var e=this;this.isSpinnerVisible=!0,this.customerService.getServerPages(this.query).subscribe((function(t){e.isSpinnerVisible=!1,e.customers=t[0].customerList,e.totalRecords=t[0].totalRecordsCount,e.totalPages=Math.ceil(e.totalRecords/e.query.rows),e.showPaginator=e.totalRecords>0}),(function(t){e.isSpinnerVisible=!1}))}},{key:"closeModal",value:function(){this.modal&&this.modal.close()}},{key:"onDataLoadFailed",value:function(e){this.isSpinnerVisible=!1;var t="";e.message&&(t=e.message),this.alertService.resetStickyMessage(),this.alertService.showStickyMessage("Sales Order Quote",t,E.d.error,e)}},{key:"mouseOverData",value:function(e,t){if("customerClassificationType"===e)return t.customerClassification}},{key:"getColorCodeForMultiple",value:function(e){return"Multiple"===e.customerClassificationType?"green":"black"}},{key:"closePopupModal",value:function(){L("#downloadConfirmation").modal("hide")}},{key:"closeDeleteModal",value:function(){L("#downloadConfirmation").modal("hide")}},{key:"exportCSV",value:function(e){var t=this;this.isSpinnerVisible=!0;var r={first:0,rows:e.totalRecords,sortOrder:1,filters:{status:!0,isDeleted:!1},globalFilter:""};Object.keys(e.filters).forEach((function(t){r.filters[t]=e.filters[t].value})),this.customerService.getCustomerAll(r).subscribe((function(r){e._value=r.results.map((function(e){return Object.assign({},e,{createdDate:e.createdDate?t.datePipe.transform(e.createdDate,"MMM-dd-yyyy hh:mm a"):"",updatedDate:e.updatedDate?t.datePipe.transform(e.updatedDate,"MMM-dd-yyyy hh:mm a"):""})})),e.exportCSV(),e.value=t.data,t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1}))}}]),e}();Ve.ctorParameters=function(){return[{type:H.a},{type:E.b},{type:R.c},{type:N.Router},{type:_.a},{type:a.DatePipe}]},n.b([Object(s.ViewChild)("warningPopup",{static:!1})],Ve.prototype,"warningPopup",void 0),n.b([Object(s.ViewChild)("restrictionPopup",{static:!1})],Ve.prototype,"restrictionPopup",void 0),Ve=n.b([Object(s.Component)({selector:"app-sales-quote-create",template:n.c(r("jHA9")).default,providers:[a.DatePipe],styles:[n.c(r("hUmh")).default]})],Ve);var Ee=function(){function e(t,r,n,s,a,i,o,l,d,c,u){_classCallCheck(this,e),this.salesQuoteService=t,this.salesOrderService=r,this.alertService=n,this.modalService=s,this.router=a,this.customerService=i,this.employeeService=o,this.commonservice=l,this.currencyService=d,this.authService=c,this.datePipe=u,this.sales=[],this.totalRecords=0,this.totalPages=0,this.pageSize=10,this.pageIndex=0,this.first=0,this.showPaginator=!1,this.isSpinnerVisible=!0,this.selectedOnly=!1,this.selectedParts=[],this.allEmployeeinfo=[],this.customerWarningData=[],this.statusList=[],this.settingsList=[],this.currentStatus="0",this.viewType="pnview",this.currentDeletedstatus=!1,this.isSettingsReceived=!1,this.clearStatusText=!1,this.restorerecord={},this.auditHistoryHeader=[{field:"salesOrderQuoteNumber",header:"Quote Num",isRequired:0},{field:"status",header:"Status",isRequired:1},{field:"salesOrderNumber",header:"SO Num",isRequired:1},{field:"customerName",header:"Customer Name",isRequired:1},{field:"customerType",header:"Customer Type",isRequired:1},{field:"customerReference",header:"Cust Ref",isRequired:1},{field:"priority",header:"Priority",isRequired:0},{field:"salesPerson",header:"Salesperson",isRequired:1},{field:"createdDate",header:"Created Date",isRequired:1},{field:"createdBy",header:"Created By",isRequired:1},{field:"updatedDate",header:"Updated Date",isRequired:1},{field:"updatedBy",header:"Updated By",isRequired:1},{field:"isDeleted",header:"Is Deleted",isRequired:0}]}return _createClass(e,[{key:"ngOnInit",value:function(){this.isSpinnerVisible=!0,this.salesQuote=new q,this.salesOrderQuote=new U.a,this.searchParameters=new V,this.getStatusList(),this.initColumns(),this.initPartColumns(),this.searchParameters.filters=Object.assign({},this.searchParameters.filters,{viewType:this.viewType}),this.breadcrumbs=[{label:"Sales Order"},{label:"Order List"}]}},{key:"closeDeleteModal",value:function(){L("#downloadConfirmation").modal("hide")}},{key:"getDeleteListByStatus",value:function(e){this.currentDeletedstatus=e,this.pageIndex=this.searchParameters.rows>10?this.searchParameters.first/this.searchParameters.rows:0,this.pageSize=this.searchParameters.rows,this.searchParameters.first=this.pageIndex,1==e?(this.searchParameters.filters=Object.assign({},this.searchParameters.filters,{isDeleted:this.currentDeletedstatus}),this.isSpinnerVisible=!0,this.loadData(this.searchParameters)):(this.currentDeletedstatus=!1,this.searchParameters.filters=Object.assign({},this.searchParameters.filters,{isDeleted:this.currentDeletedstatus}),this.isSpinnerVisible=!0,this.loadData(this.searchParameters))}},{key:"initColumns",value:function(){this.headers=[{field:"salesOrderNumber",header:"SO Num",width:"120px"},{field:"customerName",header:"Customer Name",width:"180px"},{field:"customerReference",header:"Customer Ref",width:"130px"},{field:"salesOrderQuoteNumber",header:"Quote Num",width:"130px"},{field:"versionNumber",header:"Quote Ver Num",width:"130px"},{field:"quoteDate",header:"Quote Date",width:"130px"},{field:"partNumberType",header:"PN",width:"130px"},{field:"partDescriptionType",header:"PN Description",width:"180px"},{field:"status",header:"Status",width:"100px"},{field:"priorityType",header:"Priority",width:"100px"},{field:"openDate",header:"Open Date",width:"130px"},{field:"requestedDateType",header:"Request Date",width:"130px"},{field:"estimatedShipDateType",header:"Est. Ship Date",width:"130px"},{field:"salesPerson",header:"Sales Person",width:"180px"},{field:"createdDate",header:"Created Date",width:"130px"},{field:"createdBy",header:"CreatedBy",width:"130px"},{field:"updatedDate",header:"Updated Date",width:"130px"},{field:"updatedBy",header:"UpdatedBy",width:"130px"}],this.selectedColumns=this.headers}},{key:"initPartColumns",value:function(){this.partColumns=[{field:"partNumber",header:"PartNumber",width:"200px"},{field:"description",header:"Description",width:"200px"},{field:"stockLineNumber",header:"Stock Line Number",width:"200px"},{field:"method",header:"Method",width:"200px"},{field:"serialNumber",header:"Serial Number",width:"200px"},{field:"stockLineId",header:"Stock Line Num",width:"200px"},{field:"idNumber",header:"ID Num",width:"200px"},{field:"pmaStatus",header:"OEM/PMA/DE",width:"200px"},{field:"conditionType",header:"Cond Type",width:"200px"},{field:"currency",header:"Currency",width:"200px"},{field:"fixRate",header:"fx Rate",width:"200px"},{field:"quantityFromThis",header:"Qty Quoted",width:"200px"},{field:"salesPricePerUnit",header:"Unit Sale Price",width:"200px"},{field:"markUpPercentage",header:"Mark Up %",width:"200px"},{field:"markupExtended",header:"Mark Up Amount",width:"200px"},{field:"salesDiscount",header:"Discount %",width:"200px"},{field:"salesDiscountPerUnit",header:"Disc Amount",width:"200px"},{field:"netSalesPriceExtended",header:"Net Sales",width:"200px"},{field:"unitCostPerUnit",header:"Unit Cost",width:"200px"},{field:"unitCostExtended",header:"Extended Cost",width:"200px"},{field:"marginAmountExtended",header:"Margin ($)",width:"200px"},{field:"marginPercentageExtended",header:"Margin (%)",width:"200px"}]}},{key:"loadData",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=!!this.currentDeletedstatus;e.filters.isDeleted=r,e.filters.statusId=this.currentStatus,this.searchParameters.first=parseInt(e.first)/e.rows,this.searchParameters.rows=e.rows,this.searchParameters.sortOrder=e.sortOrder,this.searchParameters.sortField=e.sortField,this.lazyLoadEventData=e,this.searchParameters.filters=Object(W.j)(e.filters),this.clearStatusText&&(this.searchParameters.filters.status="",this.clearStatusText=!1),this.searchParameters.filters=Object.assign({},this.searchParameters.filters,{viewType:this.viewType}),this.searchParameters.globalFilter=t,this.isSettingsReceived&&this.onSearch()}},{key:"globalSearch",value:function(e){this.searchParameters.globalFilter=e;var t=this.lazyLoadEventData;this.loadData(t,e)}},{key:"getStatusList",value:function(){var e=this;Object($.a)(this.commonservice.smartDropDownList("MasterSalesOrderQuoteStatus","Id","Name"),this.salesOrderService.getAllSalesOrderSettings()).subscribe((function(t){e.statusList=t[0],e.settingsList=t[1],e.settingsList.length>0&&(1==e.settingsList[0].soListViewId?e.viewType="pnview":e.viewType="soview",e.currentStatus=e.settingsList[0].soListStatusId.toString()),e.isSettingsReceived=!0,e.changeOfStatus(e.currentStatus,e.viewType)}),(function(t){e.isSettingsReceived=!0,e.isSpinnerVisible=!1}))}},{key:"changeOfStatus",value:function(e,t){this.lazyLoadEventData,this.currentStatus=""===e.toString()?this.currentStatus:e.toString(),this.viewType=""===t?this.viewType:t,this.loadData(this.lazyLoadEventData)}},{key:"onSearch",value:function(){var e=this;this.isSpinnerVisible=!0;var t=new V;t.first=this.searchParameters.first,t.page=this.searchParameters.page,t.rows=this.searchParameters.rows,t.limit=this.searchParameters.limit,t.sortOrder=this.searchParameters.sortOrder,t.sortField=this.searchParameters.sortField,t.salesQuoteNumber=this.searchParameters.salesQuoteNumber,t.columnFilters=this.searchParameters.columnFilters,t.filters=this.searchParameters.filters,t.globalFilter=this.searchParameters.globalFilter,t.customerName=this.searchParameters.customerName,t.status=this.searchParameters.status,t.startDate=this.searchParameters.startDate,t.endDate=this.searchParameters.endDate,this.salesOrderService.search(t).subscribe((function(t){t[0].results&&(e.sales=t[0].results.map((function(t){return Object.assign({},t,{quoteDate:t.quoteDate?e.datePipe.transform(t.quoteDate,"MM/dd/yyyy"):"",createdDate:t.createdDate?e.datePipe.transform(t.createdDate,"MM/dd/yyyy hh:mm a"):"",updatedDate:t.updatedDate?e.datePipe.transform(t.updatedDate,"MM/dd/yyyy hh:mm a"):""})})),e.totalRecords=t[0].totalRecordsCount,e.totalPages=Math.ceil(e.totalRecords/e.searchParameters.rows),e.showPaginator=e.totalRecords>0),e.isSpinnerVisible=!1}),(function(t){e.isSpinnerVisible=!1}))}},{key:"onPaging",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";e.filters.statusId=this.currentStatus,this.searchParameters.first=parseInt(e.first)/e.rows,this.searchParameters.rows=e.rows,this.searchParameters.sortOrder=e.sortOrder,this.searchParameters.sortField=e.sortField,this.lazyLoadEventData=e,this.searchParameters.filters=Object(W.j)(e.filters),this.searchParameters.filters=Object.assign({},this.searchParameters.filters,{viewType:this.viewType}),this.searchParameters.globalFilter=t}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"dismissViewModel",value:function(){this.modal.close()}},{key:"dismissPartViewModel",value:function(){this.partModal.close()}},{key:"openDelete",value:function(e,t){this.selected=t.salesOrderId,this.selectedSalesOrderToDelete=t.salesOrderNumber,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){}),(function(){}))}},{key:"deleteQuote",value:function(){var e=this;this.isSpinnerVisible=!0,this.salesOrderService.delete(this.selected).subscribe((function(t){e.isSpinnerVisible=!1,e.modal.close(),e.alertService.showMessage("Success","Order removed successfully.",E.d.success),e.onSearch()}),(function(t){e.isSpinnerVisible=!1}))}},{key:"openOrderToEdit",value:function(e){this.isSpinnerVisible=!0;var t=e.salesOrderId,r=e.customerId;this.router.navigateByUrl("salesmodule/salespages/sales-order-edit/".concat(r,"/").concat(t))}},{key:"viewSelectedRow",value:function(e,t){var r=this;this.isSpinnerVisible=!0,this.salesOrderService.getview(t.salesOrderId).subscribe((function(t){r.salesOrderView=t[0],r.modal=r.modalService.open(e,{windowClass:"myCustomModalClass",backdrop:"static",keyboard:!1}),r.modal.result.then((function(){}),(function(){})),r.isSpinnerVisible=!1}),(function(e){r.isSpinnerVisible=!1}))}},{key:"mouseOverData",value:function(e,t){return"partNumberType"===e?t.partNumber:"partDescriptionType"===e?t.partDescription:"priorityType"===e?t.priority:"quoteDate"===e&&t[e]?G(t.quoteDate).format("MM-DD-YYYY"):"openDate"===e&&t[e]?G(t.openDate).format("MM-DD-YYYY"):"createdDate"===e&&t[e]?G(t.createdDate).format("MM-DD-YYYY"):"updatedDate"===e&&t[e]?G(t.updatedDate).format("MM-DD-YYYY"):"requestedDateType"===e&&t[e]?this.convertmultipleDates(t.requestedDate):"estimatedShipDateType"===e&&t[e]?this.convertmultipleDates(t.estimatedShipDate):t[e]}},{key:"convertmultipleDates",value:function(e){for(var t=[],r=e.split(","),n=0;n<r.length;n++)r[n]&&t.push(G(r[n]).format("MM-DD-YYYY"));return t}},{key:"convertDate",value:function(e,t){return"requestedDateType"===e&&t[e]?"Multiple"!==t.requestedDateType?G(t.requestedDate).format("MM-DD-YYYY"):t.requestedDateType:"estimatedShipDateType"===e&&t[e]?"Multiple"!==t.estimatedShipDateType?G(t.estimatedShipDate).format("MM-DD-YYYY"):t.estimatedShipDateType:t[e]}},{key:"getColorCodeForMultiple",value:function(e){return"Multiple"===e.partNumberType?"green":"black"}},{key:"exportCSV",value:function(e){var t,r=this;this.isSpinnerVisible=!0,this.currentDeletedstatus,t={filters:{statusId:"0",viewType:"pnview",isDeleted:this.currentDeletedstatus},first:0,rows:e.totalRecords,sortOrder:1,globalFilter:""},Object.keys(e.filters).forEach((function(r){t.filters[r]=e.filters[r].value})),this.salesQuoteService.search(t).subscribe((function(t){var n=t[0].results.map((function(e){return Object.assign({},e,{openDate:e.openDate?r.datePipe.transform(e.openDate,"MMM-dd-yyyy hh:mm a"):"",quoteDate:e.quoteDate?r.datePipe.transform(e.quoteDate,"MMM-dd-yyyy hh:mm a"):"",createdDate:e.createdDate?r.datePipe.transform(e.createdDate,"MMM-dd-yyyy hh:mm a"):"",updatedDate:e.updatedDate?r.datePipe.transform(e.updatedDate,"MMM-dd-yyyy hh:mm a"):""})}));e._value=n,e.exportCSV(),e.value=r.sales,r.isSpinnerVisible=!1}),(function(e){r.isSpinnerVisible=!1}))}},{key:"restoreRecord",value:function(){var e=this;this.commonservice.updatedeletedrecords("SalesOrder","SalesOrderId",this.restorerecord.salesOrderId).subscribe((function(t){e.getDeleteListByStatus(!0),e.modal.close(),e.alertService.showMessage("Success","Successfully Updated Status",E.d.success)}),(function(t){e.isSpinnerVisible=!1}))}},{key:"restore",value:function(e,t){this.restorerecord=t,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"getAuditHistoryById",value:function(e){var t=this;this.isSpinnerVisible=!0,this.salesOrderService.getSOHistory(e.salesOrderId).subscribe((function(e){t.auditHistory=e.map((function(e){return Object.assign({},e,{createdDate:e.createdDate?t.datePipe.transform(e.createdDate,"MM/dd/yyyy h:mm a"):"",updatedDate:e.updatedDate?t.datePipe.transform(e.updatedDate,"MM/dd/yyyy h:mm a"):""})})),t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1}))}},{key:"getColorCodeForHistory",value:function(e,t,r){var n=this.auditHistory,s=n.length;if(e>=0&&e<=s)return e+1===s||n[e+1][t]===r}},{key:"closeHistoryModal",value:function(){L("#soHistory").modal("hide")}},{key:"clearText",value:function(e){this.clearStatusText=!0,"0"!=e&&null!=this.filterText&&(this.filterText.nativeElement.value="")}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"userId",get:function(){return this.authService.currentUser?this.authService.currentUser.id:0}}]),e}();Ee.ctorParameters=function(){return[{type:F.a},{type:ae.a},{type:E.b},{type:R.c},{type:N.Router},{type:H.a},{type:j.a},{type:_.a},{type:B.a},{type:z.a},{type:a.DatePipe}]},n.b([Object(s.ViewChild)("dt",{static:!1})],Ee.prototype,"searchParameters",void 0),n.b([Object(s.ViewChild)("filterStatusInput",{static:!1})],Ee.prototype,"filterText",void 0),Ee=n.b([Object(s.Component)({selector:"app-sales-order-list",template:n.c(r("pCCp")).default,styles:[n.c(r("aoDo")).default]})],Ee);var Re,qe,Ue=function e(){_classCallCheck(this,e)},Be=function e(){_classCallCheck(this,e),this.salesOrder=new Ue,this.parts=[],this.priorities=[],this.salesQuoteTypes=[],this.customerTypes=[],this.creditTerms=[],this.leadSources=[],this.status=[]};!function(e){e[e.None=0]="None",e[e.ViewQuote=1]="ViewQuote",e[e.MakePayment=2]="MakePayment",e[e.NewSalesOrder=3]="NewSalesOrder",e[e.PrintSalesOrder=4]="PrintSalesOrder",e[e.PrintPickTicket=5]="PrintPickTicket",e[e.PrintLabels=6]="PrintLabels",e[e.EmailSalesOrder=7]="EmailSalesOrder",e[e.MakeDuplicate=8]="MakeDuplicate",e[e.SalesRegister=9]="SalesRegister",e[e.Activity=10]="Activity",e[e.AuthorizeReturn=11]="AuthorizeReturn",e[e.Refund=12]="Refund",e[e.CancelSalesOrder=13]="CancelSalesOrder",e[e.CloseSalesOrder=14]="CloseSalesOrder",e[e.PartialPayment=15]="PartialPayment",e[e.CashSales=16]="CashSales",e[e.Deposit=17]="Deposit",e[e.Email=18]="Email",e[e.Memo=19]="Memo",e[e.Phone=20]="Phone",e[e.Text=21]="Text"}(Re||(Re={})),function(e){e[e.None=0]="None",e[e.Yes=1]="Yes",e[e.No=2]="No"}(qe||(qe={}));var je=function e(t,r){_classCallCheck(this,e),this.actionType=t,this.confirmType=r},He=function(){function e(){_classCallCheck(this,e),this.onConfirm=new s.EventEmitter,this.salesOrderConfirmationType=qe}return _createClass(e,[{key:"ngOnInit",value:function(){}},{key:"onClick",value:function(e){var t=new je(this.salesOrderActionType,e);this.onConfirm.emit(t),this.modalRef&&this.modalRef.close()}}]),e}();n.b([Object(s.Input)("header-title")],He.prototype,"header",void 0),n.b([Object(s.Input)("body-text")],He.prototype,"body",void 0),n.b([Object(s.Input)("sales-order-action-type")],He.prototype,"salesOrderActionType",void 0),n.b([Object(s.Input)("modal-ref")],He.prototype,"modalRef",void 0),n.b([Object(s.Output)("onConfirm")],He.prototype,"onConfirm",void 0),He=n.b([Object(s.Component)({selector:"app-sales-order-confirmation-modal",template:n.c(r("d9PF")).default})],He);var _e=function e(){_classCallCheck(this,e),this.sales=0,this.misc=0,this.netSales=0,this.productCost=0,this.marginAmount=0,this.marginPercentage=0,this.freightAmount=0},ze=r("Nb+s"),We=function(){function e(t){_classCallCheck(this,e),this.workOrderService=t}return _createClass(e,[{key:"refresh",value:function(e){var t=this;this.workOrderService.getInternalApproversList(5,e.netSales).subscribe((function(e){t.approvers=e}))}}]),e}();We.ctorParameters=function(){return[{type:ze.a}]},We=n.b([Object(s.Component)({selector:"app-sales-order-approve",template:n.c(r("5fjB")).default,styles:[n.c(r("lY1k")).default]})],We);var Ge,$e=function e(){_classCallCheck(this,e)},Ye=function e(){_classCallCheck(this,e)};!function(e){e[e.SentForInternalApproval=1]="SentForInternalApproval",e[e.SubmitInternalApproval=2]="SubmitInternalApproval",e[e.SentForCustomerApproval=3]="SentForCustomerApproval",e[e.SubmitCustomerApproval=4]="SubmitCustomerApproval",e[e.Approved=5]="Approved"}(Ge||(Ge={}));var Ke=function(){function e(t,r,n,a,i,o,l,d,c){_classCallCheck(this,e),this.alertService=t,this.modalService=r,this.employeeService=n,this.salesOrderService=a,this.authService=i,this.route=o,this.customerService=l,this.workOrderService=d,this.commonService=c,this.status=[],this.customerContacts=[],this.onPartApprovedEvent=new s.EventEmitter,this.isViewMode=!1,this.customerContactList=[],this.defaultApprovalStatusId=oe.a.DEFAULT_SALES_ORDER_APPROVAL_STATUS_ID,this.approveAll=!1,this.salesOrderCustomerApprovalListView=[],this.pageSize=10,this.QuoteApprovalList=[],this.loading=!0,this.statusList=[],this.columns=[{field:"actionStatus",header:"Action",width:"100px"},{field:"internalSentDate",header:"Internal Sent Date",width:"100px"},{field:"internalStatusId",header:"Internal Status",width:"100px"},{field:"internalMemo",header:"Internal Memo  ",width:"100px"},{field:"internalApprovedDate",header:"Internal Approved Date ",width:"100px"},{field:"internalApprovedBy",header:"Internal Approved By",width:"100px"},{field:"customerSentDate",header:"Customer Sent Date",width:"100px"},{field:"customerStatusId",header:"Customer Status",width:"100px"},{field:"customerMemo",header:"Customer Memo",width:"100px"},{field:"customerApprovedDate",header:"Customer Approved Date",width:"100px"},{field:"customerApprovedBy",header:"Customer Approved By",width:"100px"},{field:"partNumber",header:"PN",width:"100px"},{field:"partDescription",header:"PN Desc",width:"110px"},{field:"qty",header:"Qty",width:"90px"},{field:"markupExtended",header:"Mark Up Amt.",width:"90px"},{field:"discountAmount",header:"Disc Amt.",width:"90px"},{field:"netSales",header:"Net Sales",width:"90px"},{field:"unitCostExtended",header:"Ext Cost",width:"90px"},{field:"marginAmountExtended",header:"Margin Amt.",width:"90px"},{field:"marginPercentage",header:"Margin %",width:"60px"}],this.selectedColumns=this.columns,this.isSpinnerVisible=!1,this.statusListForApproval=[]}return _createClass(e,[{key:"ngOnInit",value:function(){console.log("customer-id",this.customerId),console.log("sales-order-id",this.salesOrderId),this.selectedColumns=this.columns,this.moduleName="Sales Order",this.customerId=+this.route.snapshot.paramMap.get("customerId"),this.salesQuoteId=+this.route.snapshot.paramMap.get("id"),this.setAllCustomerContact(this.customerContactList),this.setDefaultContact()}},{key:"setDefaultContact",value:function(){if(this.customerContactList&&this.customerContactList.length>0)for(var e=0;e<this.customerContactList.length;e++)this.customerContactList[e].isDefaultContact&&(this.defaultContactId=this.customerContactList[e].contactId)}},{key:"refresh",value:function(e,t,r){var n=this,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];this.isSpinnerVisible=!0,this.salesOrderId=t,this.salesQuoteId=r,this.isView=s,a&&a.length>0&&(this.customerContactList=a,this.setAllCustomerContact(this.customerContactList),this.setDefaultContact()),Object($.a)(this.commonService.smartDropDownList("ApprovalStatus","ApprovalStatusId","Name"),this.workOrderService.getInternalApproversList(5,e.netSales),this.salesOrderService.getCustomerApprovalList(this.salesOrderId)).subscribe((function(e){n.isSpinnerVisible=!1,n.setAproverStatusList(e[0]),e[1]&&e[1].length>0?n.approvers=e[1]:n.approvers=[],e[2]&&e[2].length>0&&n.loadApprovalListView(e[2][0])}),(function(e){return n.dataLoadError(e)}))}},{key:"ngOnChanges",value:function(e){}},{key:"setAproverStatusList",value:function(e){e&&e.length>0&&(this.statusList=e.map((function(e){return Object.assign({},e,{statusId:e.value,name:e.label})}))),this.setStatusListForApproval(this.statusList)}},{key:"getApproverStatusList",value:function(){var e=this;this.commonService.smartDropDownList("ApprovalStatus","ApprovalStatusId","Name").subscribe((function(t){e.statusList=t.map((function(e){return Object.assign({},e,{statusId:e.value,name:e.label})})),e.setStatusListForApproval(e.statusList)}))}},{key:"setStatusListForApproval",value:function(e){var t=[];if(e&&e.length>0)for(var r=0;r<e.length;r++)("Approved"===e[r].name||"Rejected"===e[r].name)&&t.push(e[r]);this.statusListForApproval=t}},{key:"getPartToDisableOrNot",value:function(e){var t=this;return"Approved"!=e.actionStatus&&(e.approvalActionId==Ge.SentForInternalApproval||(e.approvalActionId==Ge.SubmitInternalApproval?!!(this.approvers&&this.approvers.length>0)&&!!this.approvers.find((function(e){return e.approverId==t.employeeId&&0==e.isExceeded})):e.approvalActionId==Ge.SentForCustomerApproval||e.approvalActionId==Ge.SubmitCustomerApproval))}},{key:"getAllPartsToDisableOrNot",value:function(){return this.salesOrderCustomerApprovalListView&&this.salesOrderCustomerApprovalListView.length>0&&this.salesOrderCustomerApprovalListView.forEach((function(e){if("Approved"!=e.actionStatus)return!1})),!0}},{key:"getCustomerApprovalList",value:function(){var e=this;this.isSpinnerVisible=!0,this.salesOrderService.getCustomerApprovalList(this.salesOrderId).subscribe((function(t){e.isSpinnerVisible=!1,t&&t.length>0&&e.loadApprovalListView(t[0])}),(function(t){return e.dataLoadError(t)}))}},{key:"selectAllApproval",value:function(e,t){var r=this;this.salesOrderCustomerApprovalListView.forEach((function(e,n){r.getPartToDisableOrNot(e)||(e.selected=!t,r.onApprovalSelected(e,n))}))}},{key:"setAllCustomerContact",value:function(e){if(e&&e.length>0){this.customerContactList=e;for(var t=0;t<this.customerContactList.length;t++)this.customerContactList[t].contactName=this.customerContactList[t].firstName+" "+this.customerContactList[t].lastName}else this.customerContactList=[]}},{key:"onApprovalSelected",value:function(e,t){4==e.approvalActionId&&(this.defaultContactId?this.salesOrderCustomerApprovalListView[t].customerApprovedById=this.defaultContactId:this.salesOrderCustomerApprovalListView[t].customerApprovedById="")}},{key:"dataLoadError",value:function(e){this.isSpinnerVisible=!1;var t="";e.message&&(t=e.message),this.alertService.resetStickyMessage(),this.alertService.showStickyMessage("Sales Order",t,E.d.error,e)}},{key:"loadApprovalListView",value:function(e){var t=[];e.forEach((function(e){var r=new $e;Object.keys(e).forEach((function(t){r[t]=e[t]})),r.originalStatusId=e.statusId,r.selected=r.originalStatusId==oe.a.DEFAULT_SALES_ORDER_APPROVAL_STATUS_ID,r.openDate=new Date(e.openDate),r.approvalDate=new Date(e.approvalDate),r.approvedDate=new Date(e.approvedDate),r.statusChangeDate=new Date(e.statusChangeDate),e.internalSentDate?(r.internalSentDate=new Date(e.internalSentDate),e.internalApprovedDate||(r.internalApprovedDate=new Date)):e.internalSentDate||(r.internalSentDate=new Date),e.customerSentDate&&(r.customerSentDate=new Date(e.customerSentDate),e.customerApprovedDate||(r.customerApprovedDate=new Date)),e.internalApprovedDate&&(r.internalApprovedDate=new Date(e.internalApprovedDate),e.customerSentDate||(r.customerSentDate=new Date)),e.customerApprovedDate&&(r.customerApprovedDate=new Date(e.customerApprovedDate)),t.push(r)})),t.length>0&&(this.salesOrderCustomerApprovalListView=t.slice(0),console.log("salesOrderCustomerApprovalListView",this.salesOrderCustomerApprovalListView))}},{key:"getInternalSentMaxDate",value:function(e){var t=new Date(e);return new Date>t?t:new Date}},{key:"getInternalSentMinDate",value:function(e){return new Date(e)}},{key:"getInternalApprovedMaxDate",value:function(){return new Date}},{key:"getCustomerSentMinDate",value:function(e){if(e)return new Date(e)}},{key:"isApproved",value:function(e){return e==oe.a.DEFAULT_SALES_QUOTE_APPROVAL_ID}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"onPartCheckChange",value:function(e){e.statusId=e.selected?oe.a.DEFAULT_SALES_ORDER_APPROVAL_STATUS_ID:e.originalStatusId}},{key:"resetDataState",value:function(e){e.approvedContactId=null,e.approvalDate=null,e.approvedContactId=null,e.memo="",e.approver="",e.approvedName="",e.title=""}},{key:"isValidCustomerApprovalStatus",value:function(e){return e.displayInDropdown&&(1===e.id||4===e.id)}},{key:"dismissViewModel",value:function(){this.partModal.close()}},{key:"hasPartsSelected",value:function(){var e=this;return(this.salesOrderCustomerApprovalListView.filter((function(t){return!e.isApproved(t.originalStatusId)}))||[]).length>0}},{key:"openConfirmationModal",value:function(){this.hasPartsSelected()&&(this.modal=this.modalService.open(this.customerApprovalConfirmationModal,{size:"sm"}),this.modal.result.then((function(){}),(function(){})))}},{key:"closeConfirmationModal",value:function(){this.modal&&this.modal.close()}},{key:"viewSelectedStockLine",value:function(e,t){e.stockLineId&&(this.partModal=this.modalService.open(be.a,{size:"lg",backdrop:"static",keyboard:!1}),this.partModal.componentInstance.stockLineId=e.stockLineId,this.partModal.result.then((function(){}),(function(){})))}},{key:"saveApprovalProcess",value:function(){var e=!1;console.log(this.approvers),this.approvers&&this.approvers.length>0&&this.approvers.forEach((function(t){t.selected&&3==t.approvalActionId&&(e=!0)})),e?L("#quoteVersion").modal("show"):this.saveApprovalData()}},{key:"saveApprovalData",value:function(){var e=this,t=[],r=JSON.parse(localStorage.getItem("employee")),n=JSON.parse(localStorage.getItem("current_user"));n||(n=JSON.parse(sessionStorage.getItem("current_user"))),n||(n={masterCompanyId:1}),this.salesOrderCustomerApprovalListView.forEach((function(s){if(s.selected){var a={SalesOrderId:s.salesOrderId,SalesOrderQuotePartId:s.salesOrderQuotePartId,SalesOrderPartId:s.salesOrderPartId,CustomerId:s.customerId,ApprovedContactId:s.approvedContactId,InternalSentDate:s.internalSentDate,InternalApprovedDate:s.internalApprovedDate,CustomerSentDate:s.customerSentDate,CustomerApprovedDate:s.customerApprovedDate,CustomerApprovedById:s.customerApprovedById,InternalStatusId:s.internalStatusId,CustomerStatusId:s.customerStatusId,InternalMemo:s.internalMemo,CustomerMemo:s.customerMemo,UpdatedBy:"admin",salesOrderApprovalId:s.salesOrderApprovalId,ApprovalActionId:s.approvalActionId,IsInternalApprove:s.isInternalApprove,createdBy:"admin",updatedBy:"admin",createdDate:(new Date).toDateString(),updatedDate:(new Date).toDateString(),isActive:!0,isDeleted:!1};a.masterCompanyId=n.masterCompanyId,1==s.approvalActionId?(a.InternalEmails=e.getApproversEmails(),a.approvers=e.getApproversNames()):(a.InternalEmails="",a.approvers=""),2==s.approvalActionId?a.InternalApprovedById=r.employeeId:a.InternalApprovedById=s.internalApprovedById,t.push(a)}})),this.isSpinnerVisible=!0,this.salesOrderService.sentForInternalApproval(t).subscribe((function(t){L("#quoteVersion").modal("hide"),e.alertService.showMessage("Success","Saved Approver Process Successfully",E.d.success),e.isSpinnerVisible=!1,e.getCustomerApprovalList()}),(function(t){e.alertService.showMessage(e.moduleName,"Data updating failed",E.d.error),e.isSpinnerVisible=!1,L("#quoteVersion").modal("hide")}))}},{key:"getApproversNames",value:function(){var e="";return this.approvers&&this.approvers.length>0&&this.approvers.forEach((function(t){""!=e&&(e+=","),e+=t.approverName})),e}},{key:"getApproversEmails",value:function(){return this.approvers&&this.approvers.length>0?this.approvers[0].approverEmails:""}},{key:"approve",value:function(){var e=this,t=this.salesOrderCustomerApprovalListView.filter((function(e){return 4!=e.originalStatusId&&e.selected}))||[];if(t.length>0){var r=[];t.forEach((function(e){var t=new Ye;Object.keys(e).forEach((function(r){t[r]=e[r]})),t.statusChangeDate=null,r.push(t)})),this.isSpinnerVisible=!0,this.salesOrderService.approveParts(r).subscribe((function(t){e.isSpinnerVisible=!1,e.closeConfirmationModal(),e.alertService.showMessage("Success","Part(s) approved successfully.",E.d.success),e.getCustomerApprovalList(),e.onPartApprovedEvent.emit()}),(function(t){e.getCustomerApprovalList(),e.dataLoadError(t)}))}}},{key:"getApprovalActionInternalStatus",value:function(e){return!(!e.selected||2!=e.approvalActionId)}},{key:"getApprovalActionCustomerStatus",value:function(e){return!(!e.selected||4!=e.approvalActionId)}},{key:"onAddTextAreaInfo",value:function(e,t){this.memoIndex=t,this.memoType=e,console.log("memolist",e,t),this.textAreaInfo=this.salesOrderCustomerApprovalListView[t][e]}},{key:"onSaveTextAreaInfo",value:function(e){e&&(this.textAreaInfo=e,this.salesOrderCustomerApprovalListView[this.memoIndex][this.memoType]=this.textAreaInfo),L("#memo-popup").modal("hide")}},{key:"onCloseTextAreaInfo",value:function(){L("#memo-popup").modal("hide")}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"employeeId",get:function(){return this.authService.currentUser?this.authService.currentUser.employeeId:""}}]),e}();Ke.ctorParameters=function(){return[{type:E.b},{type:R.c},{type:j.a},{type:ae.a},{type:z.a},{type:N.ActivatedRoute},{type:H.a},{type:ze.a},{type:_.a}]},n.b([Object(s.Input)("sales-order")],Ke.prototype,"salesOrder",void 0),n.b([Object(s.Input)("customer-id")],Ke.prototype,"customerId",void 0),n.b([Object(s.Input)("sales-order-id")],Ke.prototype,"salesOrderId",void 0),n.b([Object(s.Input)()],Ke.prototype,"status",void 0),n.b([Object(s.Input)("customer-contacts")],Ke.prototype,"customerContacts",void 0),n.b([Object(s.Output)("on-part-approved-event")],Ke.prototype,"onPartApprovedEvent",void 0),n.b([Object(s.Input)("is-view-mode")],Ke.prototype,"isViewMode",void 0),n.b([Object(s.Input)()],Ke.prototype,"customerContactList",void 0),n.b([Object(s.Input)()],Ke.prototype,"approvers",void 0),n.b([Object(s.ViewChild)("customerApprovalConfirmationModal",{static:!1})],Ke.prototype,"customerApprovalConfirmationModal",void 0),Ke=n.b([Object(s.Component)({selector:"app-sales-order-customer-approval",template:n.c(r("bHlc")).default,styles:[n.c(r("kwl7")).default]})],Ke);var Je=function e(){_classCallCheck(this,e),this.shipViaId=null,this.length=null,this.width=null,this.height=null,this.weight=null,this.memo="",this.amount=null,this.uomId=null,this.dimensionUOMId=null,this.currencyId=null,this.salesOrderFreightId=0,this.salesOrderQuoteId=null,this.salesOrderPartId=null,this.markupPercentageId=null,this.markupFixedPrice=null,this.headerMarkupId=null,this.billingAmount=null,this.billingMethodId=null,this.billingRate=null,this.isActive=!0,this.isDeleted=!1,this.createdBy="",this.updatedBy="",this.createdDate=new Date,this.updatedDate=new Date,this.headerMarkupPercentageId=null},Ze=function(){function e(t,r,n,a,i,o){_classCallCheck(this,e),this.salesOrdeService=t,this.authService=r,this.alertService=n,this.commonService=a,this.cdRef=i,this.modalService=o,this.salesOrderFreightList=[],this.saveFreightListForSO=new s.EventEmitter,this.updateFreightListForSO=new s.EventEmitter,this.refreshData=new s.EventEmitter,this.view=!1,this.isQuote=!1,this.markupList=[],this.isView=!1,this.shipViaList=[],this.costPlusType=0,this.cols=[{field:"shipVia",header:"Ship Via"},{field:"weight",header:"Weight"},{field:"uom",header:"UOM"}],this.isEdit=!1,this.unitOfMeasureList=[],this.currencyList=[],this.isSpinnerVisible=!1,this.storedData=[],this.deletedStatusInfo=!1,this.restorerecord={},this.freightAudiHistory=[],this.isEnableUpdateButton=!0,this.isSaveChargesDesabled=!0}return _createClass(e,[{key:"ngOnInit",value:function(){if(this.freightForm){var e=new Je;e.amount=this.formateCurrency(e.amount),e.salesOrderQuoteId=this.salesOrderQuoteId,e.salesOrderId=this.salesOrderId,this.freightForm=[].concat(_toConsumableArray(this.freightForm),[new Je])}console.log(this.salesOrderFreightList),this.salesOrderFreightList&&this.salesOrderFreightList.length>0&&this.salesOrderFreightList[0].headerMarkupId&&(this.costPlusType=this.salesOrderFreightList[0].markupFixedPrice,this.overAllMarkup=Number(this.salesOrderFreightList[0].headerMarkupId)),this.isView=!!this.isView&&this.isView}},{key:"ngOnChanges",value:function(){if(this.salesOrderFreightList&&this.salesOrderFreightList.length>0&&this.salesOrderFreightList[0].headerMarkupId&&(this.costPlusType=this.salesOrderFreightList[0].headerMarkupId,this.overAllMarkup=Number(this.salesOrderFreightList[0].headerMarkupPercentageId)),this.salesOrderFreightList)for(var e in this.salesOrderFreightList=[],this.salesOrderFreightLists)this.salesOrderFreightList.push(this.salesOrderFreightLists[e])}},{key:"refresh",value:function(e){var t=this;this.isSpinnerVisible=!0,Object($.a)(this.salesOrdeService.getSalesOrderFreights(this.salesOrderId,0),this.commonService.getShipViaDetailsByModule(Object(fe.a)("Customer"),this.customerId),this.commonService.smartDropDownList("UnitOfMeasure","UnitOfMeasureId","ShortName"),this.commonService.smartDropDownList("Currency","CurrencyId","Code"),this.commonService.smartDropDownList("[Percent]","PercentId","PercentValue")).subscribe((function(e){t.isSpinnerVisible=!1,t.setFreightsData(e[0]),t.setShipViaList(e[1]),t.unitOfMeasureList=e[2],t.currencyList=e[3],t.markupList=e[4]}),(function(e){return t.onDataLoadError(e)}))}},{key:"refreshFreightsOnSaveOrDelete",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.isSpinnerVisible=!0,this.salesOrderFreightList=[],this.salesOrdeService.getSalesOrderFreights(this.salesOrderId,this.deletedStatusInfo).subscribe((function(r){e.isSpinnerVisible=!1,e.storedData&&0!=e.storedData.length?(1==e.deletedStatusInfo?(e.deletedStatusInfo=!0,e.storedData.forEach((function(e){1==e.isDeleted&&0==e.salesOrderFreightId&&r.push(e)}))):(e.deletedStatusInfo=!1,e.storedData.forEach((function(e){0==e.isDeleted&&0==e.salesOrderFreightId&&r.push(e)}))),e.setFreightsData(r)):e.setFreightsData(r),t&&(e.getTotalBillingAmount(),e.updateFreightListForSO.emit(e.freightFlatBillingAmount))}),(function(t){e.isSpinnerVisible=!1}))}},{key:"setFreightsData",value:function(e){e&&e.length>0?(this.salesOrderFreightList=e,this.costPlusType=e[0].headerMarkupId,this.overAllMarkup=e[0].headerMarkupPercentageId,3==Number(this.costPlusType)&&(this.freightFlatBillingAmount=e[0].markupFixedPrice)):this.salesOrderFreightList=[],this.freightForm=[],this.salesOrderFreightLists=[]}},{key:"setShipViaList",value:function(e){e&&e.length>0?this.shipViaList=e.map((function(e){return{label:e.name,value:e.shippingViaId}})):this.shipViaList=[]}},{key:"createNew",value:function(){this.isEdit=!1;var e=this.getNewFreightObject();this.freightForm=[e],console.log(this.freightForm)}},{key:"getNewFreightObject",value:function(){var e=new Je;return e.amount=this.formateCurrency(e.amount),e.salesOrderQuoteId=this.salesOrderQuoteId,e.salesOrderId=this.salesOrderId,e.billingMethodId=this.costPlusType,e.createdBy=this.userName,e.createdDate=new Date,e.updatedBy=this.userName,e.updatedDate=new Date,e.headerMarkupPercentageId=this.overAllMarkup,e.headerMarkupId=this.costPlusType,e.billingAmount=this.formateCurrency(Number(e.amount.toString().replace(/\,/g,""))),e}},{key:"addNewRow",value:function(){var e=this.getNewFreightObject();e.billingAmount=this.formateCurrency(Number(e.amount.toString().replace(/\,/g,""))),this.freightForm=[].concat(_toConsumableArray(this.freightForm),[e])}},{key:"parsedText",value:function(e){if(e)return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}},{key:"edit",value:function(e,t){this.mainEditingIndex=t,this.isEdit=!0,e.amount=this.formateCurrency(e.amount),this.freightForm=[e]}},{key:"onAddTextAreaInfo",value:function(e,t){this.memoIndex=t,console.log("memolist",e,t),this.textAreaInfo=e.memo}},{key:"onSaveTextAreaInfo",value:function(e){e&&(this.textAreaInfo=e,console.log("hello cjkf",this.freightForm),this.freightForm[this.memoIndex].memo=this.textAreaInfo,console.log("index",this.freightForm)),L("#textarea-popupFreight").modal("hide")}},{key:"onCloseTextAreaInfo",value:function(){L("#textarea-popupFreight").modal("hide")}},{key:"saveFreightList",value:function(){var e=this;if(this.freightForm=this.freightForm.map((function(t){return Object.assign({},t,{uom:t.uomId?Object(W.g)("label","value",t.uomId,e.unitOfMeasureList):"",dimensionUOM:t.dimensionUOMId?Object(W.g)("label","value",t.dimensionUOMId,e.unitOfMeasureList):"",currency:t.currencyId?Object(W.g)("label","value",t.currencyId,e.currencyList):"",billingAmount:e.formateCurrency(t.amount)})})),this.isEdit)1==this.costPlusType&&this.markupChanged(this.freightForm[0],"row"),this.salesOrderFreightList[this.mainEditingIndex]=this.freightForm[0],L("#addNewFreight").modal("hide"),this.isEdit=!1;else{var t=[];for(var r in this.salesOrderFreightList.forEach((function(e){t=[].concat(_toConsumableArray(t),_toConsumableArray(e))})),t=[].concat(_toConsumableArray(t),_toConsumableArray(this.freightForm)),this.salesOrderFreightLists=t,this.salesOrderFreightList=[],this.salesOrderFreightLists)this.salesOrderFreightList.push(this.salesOrderFreightLists[r]);1==this.costPlusType&&this.markupChanged({},"all"),L("#addNewFreight").modal("hide")}this.isEnableUpdateButton=!0,this.isSaveChargesDesabled=!1}},{key:"createFreightsQuote",value:function(){for(var e=this,t=this.salesOrderFreightList,r=[],n=0;n<t.length;n++)r=[].concat(_toConsumableArray(r),_toConsumableArray(t[n]));r=r.map((function(t){return Object.assign({},t,{headerMarkupId:Number(e.costPlusType),headerMarkupPercentageId:e.overAllMarkup,markupFixedPrice:e.freightFlatBillingAmount})})),this.formateCurrency(this.freightFlatBillingAmount),this.costPlusType,this.isSpinnerVisible=!0,this.salesOrdeService.createFreight(r).subscribe((function(t){e.isSpinnerVisible=!1,e.alertService.showMessage("","Sales Order Freights saved successfully",E.d.success),e.refreshFreightsOnSaveOrDelete(),e.saveFreightListForSO.emit(e.freightFlatBillingAmount)}),(function(t){e.isSpinnerVisible=!1,e.onDataLoadError(t)})),this.isSaveChargesDesabled=!0,this.storedData=[]}},{key:"onDataLoadError",value:function(e){this.isSpinnerVisible=!1;var t="";e.message&&(t=e.message),this.alertService.resetStickyMessage(),this.alertService.showStickyMessage("Sales Order",t,E.d.error,e)}},{key:"markupChanged",value:function(e,t){var r=this;try{this.markupList.forEach((function(n){"row"==t&&n.value==e.markupPercentageId?e.billingAmount=r.formateCurrency(Number(e.amount.toString().replace(/\,/g,""))+Number(e.amount.toString().replace(/\,/g,""))/100*Number(n.label)):"all"==t&&n.value==r.overAllMarkup&&r.salesOrderFreightList.forEach((function(e){e.billingMethodId&&1==Number(e.billingMethodId)&&(e.markupPercentageId=Number(r.overAllMarkup),e.headerMarkupId=Number(r.costPlusType),e.billingAmount=r.formateCurrency(Number(e.amount.toString().replace(/\,/g,""))+Number(e.amount.toString().replace(/\,/g,""))/100*Number(n.label)))}))}))}catch(n){console.log(n)}}},{key:"tmchange",value:function(){var e,t=_createForOfIteratorHelper(this.salesOrderFreightList);try{for(t.s();!(e=t.n()).done;){var r=e.value;r.billingMethodId=this.costPlusType,r.headerMarkupPercentageId=this.overAllMarkup,r.headerMarkupId=this.costPlusType,r.markupPercentageId="",r.billingAmount=this.formateCurrency(Number(r.amount.toString().replace(/\,/g,""))),3==this.costPlusType&&(r.billingAmount="0.00",this.freightFlatBillingAmount="0.00"),this.overAllMarkup="",r.headerMarkupPercentageId=this.overAllMarkup}}catch(n){t.e(n)}finally{t.f()}}},{key:"getTotalAmount",value:function(){var e=this,t=0;return this.salesOrderFreightList&&this.salesOrderFreightList.forEach((function(r){t+=Number(e.getTotalTaskAmount(r))})),this.formateCurrency(t)}},{key:"getTotalTaskAmount",value:function(e){var t=0;return e.amount&&!e.isDeleted&&(t+=Number(e.amount.toString().replace(/\,/g,""))),t.toFixed(2)}},{key:"getTotalBillingAmount",value:function(){var e=this,t=0;return this.salesOrderFreightList&&this.salesOrderFreightList.forEach((function(r){t+=Number(e.getTotalTaskBillingAmount(r))})),this.freightFlatBillingAmount=t.toFixed(2),this.formateCurrency(t)}},{key:"getTotalTaskBillingAmount",value:function(e){var t=0;return e.billingAmount&&!e.isDeleted&&(t+=Number(e.billingAmount.toString().replace(/\,/g,""))),t.toFixed(2)}},{key:"formateCurrency",value:function(e){return e?Object(W.b)(e,2):"0.00"}},{key:"openInterShipViaHistory",value:function(e,t){var r=this;console.log("rowData",t),t&&t.salesOrderFreightId&&this.salesOrdeService.getSOFreightsHistory(t.salesOrderFreightId).subscribe((function(t){return r.onAuditInterShipViaHistoryLoadSuccessful(t,e)}),(function(e){r.isSpinnerVisible=!1}))}},{key:"onAuditInterShipViaHistoryLoadSuccessful",value:function(e,t){this.alertService.stopLoadingMessage(),this.freightAudiHistory=e,this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1,windowClass:"assetMange"})}},{key:"dismissModelHistory",value:function(){this.modal.close()}},{key:"getColorCodeForHistory",value:function(e,t,r){var n=this.freightAudiHistory,s=n.length;if(e>=0&&e<=s)return e+1===s||n[e+1][t]===r}},{key:"onDataLoadFailed",value:function(e){var t=e,r="";if(t.message){if(t.error&&t.error.errors.length>0)for(var n=0;n<t.error.errors.length;n++)r=r+t.error.errors[n].message+"<br/>";this.alertService.showMessage(t.error.message,r,E.d.error)}else this.alertService.showMessage("Error",e.error,E.d.error)}},{key:"openDelete",value:function(e,t,r){this.selectedRowForDelete=t,this.selectedRowIndexForDelete=r,this.deleteModal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"dismissModel",value:function(){this.deleteModal.close()}},{key:"dismissModelAlett",value:function(){this.deleteModal.close()}},{key:"delete",value:function(){var e=this;if(this.isSpinnerVisible=!0,this.deleteModal.close(),this.selectedRowForDelete.salesOrderFreightId){var t=this.selectedRowForDelete.salesOrderFreightId;this.salesOrdeService.deletesalesOrderFreightList(t,this.userName).subscribe((function(t){e.isSpinnerVisible=!1,e.alertService.showMessage("","Deleted Sales Order Freight Successfully",E.d.success),e.refreshFreightsOnSaveOrDelete(!0)}),(function(t){e.isSpinnerVisible=!1}))}else this.selectedRowForDelete.isDeleted=!0,this.isSpinnerVisible=!1,this.storedData&&0!=this.storedData.length?this.storedData.forEach((function(t){JSON.stringify(t)===JSON.stringify(e.selectedRowForDelete)&&(t.isDeleted=!0,e.salesOrderFreightList.splice(e.selectedRowIndexForDelete,1))})):this.salesOrderFreightList.splice(this.selectedRowIndexForDelete,1),this.storedData=_toConsumableArray(this.storedData),this.alertService.showMessage("","Deleted Sales Order Freight Successfully",E.d.success);L("#addNewFreight").modal("hide"),this.isEdit=!1,this.isSaveChargesDesabled=!1}},{key:"getDeleteListByStatus",value:function(e){this.deletedStatusInfo=e||!1,this.refreshFreightsOnSaveOrDelete()}},{key:"restore",value:function(e,t,r){this.restorerecord=t,this.deletedrowIndex=r,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"restoreRecord",value:function(){var e=this;this.restorerecord&&this.restorerecord.salesOrderFreightId>0?this.commonService.updatedeletedrecords("SalesOrderFreight","salesOrderFreightId",this.restorerecord.salesOrderFreightId).subscribe((function(t){e.refreshFreightsOnSaveOrDelete(),e.modal.close(),e.alertService.showMessage("Success","Successfully Updated Status",E.d.success)}),(function(e){})):(this.restorerecord.isDeleted=!1,this.salesOrderFreightList.splice(this.deletedrowIndex,1),this.storedData.forEach((function(t){JSON.stringify(t)===JSON.stringify(e.restorerecord)&&(t.isDeleted=!1)})),this.alertService.showMessage("Success","Successfully Updated Status",E.d.success),this.modal.close())}},{key:"enableUpdate",value:function(){this.isEnableUpdateButton=!1}},{key:"validated",value:function(){this.isSaveChargesDesabled=!1}},{key:"deleteRow",value:function(e,t){this.freightForm.splice(e,1)}},{key:"dismissModelAlettRestore",value:function(){}},{key:"formatStringToNumberGlobal",value:function(e){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();Ze.ctorParameters=function(){return[{type:ae.a},{type:z.a},{type:E.b},{type:_.a},{type:s.ChangeDetectorRef},{type:R.c}]},n.b([Object(s.Input)()],Ze.prototype,"salesOrderFreightList",void 0),n.b([Object(s.Input)()],Ze.prototype,"freightForm",void 0),n.b([Object(s.Input)()],Ze.prototype,"customerId",void 0),n.b([Object(s.Input)()],Ze.prototype,"salesOrderQuoteId",void 0),n.b([Object(s.Input)()],Ze.prototype,"salesOrderId",void 0),n.b([Object(s.Output)()],Ze.prototype,"saveFreightListForSO",void 0),n.b([Object(s.Output)()],Ze.prototype,"updateFreightListForSO",void 0),n.b([Object(s.Output)()],Ze.prototype,"refreshData",void 0),n.b([Object(s.Input)()],Ze.prototype,"view",void 0),n.b([Object(s.Input)()],Ze.prototype,"isQuote",void 0),n.b([Object(s.Input)()],Ze.prototype,"isView",void 0),Ze=n.b([Object(s.Component)({selector:"app-sales-order-freight",template:n.c(r("ZOZ9")).default,encapsulation:s.ViewEncapsulation.None,styles:[n.c(r("onBv")).default]})],Ze);var Xe=function e(){_classCallCheck(this,e)},et=function(){function e(t,r,n,a,i,o,l,d){_classCallCheck(this,e),this.salesOrderService=t,this.authService=r,this.alertService=n,this.commonService=a,this.actionService=i,this.cdRef=o,this.vendorService=l,this.modalService=d,this.salesOrderChargesList=[],this.saveChargesListForSO=new s.EventEmitter,this.updateChargesListForSO=new s.EventEmitter,this.refreshData=new s.EventEmitter,this.view=!1,this.isQuote=!1,this.isView=!1,this.markupList=[],this.costPlusType=0,this.cols=[{field:"shipVia",header:"Ship Via"},{field:"weight",header:"Weight"},{field:"uom",header:"UOM"}],this.isEdit=!1,this.unitOfMeasureList=[],this.isSpinnerVisible=!1,this.chargesTypes=[],this.vendorCollection=[],this.allVendors=[],this.chargesAudiHistory=[],this.storedData=[],this.deletedStatusInfo=!1,this.restorerecord={},this.isEnableUpdateButton=!0,this.isSaveChargesDesabled=!0}return _createClass(e,[{key:"ngOnInit",value:function(){if(this.chargeForm){var e=new Xe;e.unitCost=this.formateCurrency(e.unitCost),e.extendedCost=this.formateCurrency(e.extendedCost),e.salesOrderQuoteId=this.salesOrderQuoteId,e.salesOrderId=this.salesOrderId,this.chargeForm=[].concat(_toConsumableArray(this.chargeForm),[new Xe])}console.log(this.salesOrderChargesList),this.salesOrderChargesList&&this.salesOrderChargesList.length>0&&this.salesOrderChargesList[0].headerMarkupId&&(this.costPlusType=this.salesOrderChargesList[0].markupFixedPrice,this.overAllMarkup=Number(this.salesOrderChargesList[0].headerMarkupId)),this.isView=!!this.isView&&this.isView}},{key:"ngOnChanges",value:function(){if(this.salesOrderChargesList&&this.salesOrderChargesList.length>0&&this.salesOrderChargesList[0].headerMarkupId&&(this.costPlusType=this.salesOrderChargesList[0].headerMarkupId,this.overAllMarkup=Number(this.salesOrderChargesList[0].headerMarkupPercentageId)),this.salesOrderChargesList)for(var e in this.salesOrderChargesList=[],this.salesOrderChargesLists)this.salesOrderChargesList.push(this.salesOrderChargesLists[e])}},{key:"refresh",value:function(e){var t=this;this.isSpinnerVisible=!0,Object($.a)(this.salesOrderService.getSalesQuoteCharges(this.salesOrderId,this.deletedStatusInfo),this.actionService.getCharges(),this.vendorService.getVendorsForDropdown(),this.commonService.smartDropDownList("[Percent]","PercentId","PercentValue")).subscribe((function(e){t.isSpinnerVisible=!1,t.setChargesData(e[0]),t.chargesTypes=e[1],t.allVendors=e[2],t.markupList=e[3],t.setVendors()}),(function(e){return t.onDataLoadError(e)}))}},{key:"refreshOnDataSaveOrEditORDelete",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.isSpinnerVisible=!0,this.salesOrderChargesList=[],this.salesOrderService.getSalesQuoteCharges(this.salesOrderId,this.deletedStatusInfo).subscribe((function(r){e.isSpinnerVisible=!1,console.log("set",e.storedData),e.storedData&&0!=e.storedData.length?(1==e.deletedStatusInfo?(e.deletedStatusInfo=!0,e.storedData.forEach((function(e){1==e.isDeleted&&0==e.salesOrderQuoteChargesId&&r.push(e)}))):(e.deletedStatusInfo=!1,e.storedData.forEach((function(e){0==e.isDeleted&&0==e.salesOrderQuoteChargesId&&r.push(e)}))),e.setChargesData(r)):e.setChargesData(r),console.log("set2",e.storedData),t&&(e.getTotalBillingAmount(),e.updateChargesListForSO.emit(e.chargesFlatBillingAmount))}),(function(t){e.isSpinnerVisible=!1}))}},{key:"setChargesData",value:function(e){e&&e.length>0?(this.salesOrderChargesList=e,this.setVendors(),this.costPlusType=e[0].headerMarkupId,this.overAllMarkup=e[0].headerMarkupPercentageId,3==Number(this.costPlusType)&&(this.chargesFlatBillingAmount=e[0].markupFixedPrice)):this.salesOrderChargesList=[],this.chargeForm=[],this.salesOrderChargesLists=[]}},{key:"createNew",value:function(){this.isEdit=!1;var e=this.getNewChargeObject();this.chargeForm=[e],console.log(this.chargeForm)}},{key:"getNewChargeObject",value:function(){var e=new Xe;return e.unitCost=this.formateCurrency(e.unitCost),e.extendedCost=this.formateCurrency(e.extendedCost),e.salesOrderQuoteId=this.salesOrderQuoteId,e.salesOrderId=this.salesOrderId,e.billingMethodId=this.costPlusType,e.createdBy=this.userName,e.createdDate=new Date,e.updatedBy=this.userName,e.updatedDate=new Date,e.headerMarkupPercentageId=this.overAllMarkup,e.headerMarkupId=this.costPlusType,e.unitCost=this.formateCurrency(Number(e.unitCost.toString().replace(/\,/g,""))),e.billingRate=this.formateCurrency(Number(e.unitCost.toString().replace(/\,/g,""))),e.extendedCost=this.formateCurrency(Number(e.extendedCost.toString().replace(/\,/g,""))),e.billingAmount=this.formateCurrency(Number(e.extendedCost.toString().replace(/\,/g,""))),e}},{key:"addNewRow",value:function(){var e=this.getNewChargeObject();this.chargeForm=[].concat(_toConsumableArray(this.chargeForm),[e])}},{key:"edit",value:function(e,t){this.isEnableUpdateButton=!0,this.mainEditingIndex=t,this.isEdit=!0,e.unitCost=this.formateCurrency(e.unitCost),e.extendedCost=this.formateCurrency(e.extendedCost),this.chargeForm=[e]}},{key:"onAddTextAreaInfo",value:function(e,t){this.memoIndex=t,console.log("memolist",e,t),this.textAreaInfo=e.memo}},{key:"onSaveTextAreaInfo",value:function(e){e&&(this.textAreaInfo=e,console.log("hello cjkf",this.chargeForm),this.chargeForm[this.memoIndex].memo=this.textAreaInfo,console.log("index",this.chargeForm)),L("#textarea-popupFreight").modal("hide")}},{key:"onCloseTextAreaInfo",value:function(){L("#textarea-popupFreight").modal("hide")}},{key:"saveChargesList",value:function(){var e=this;if(this.chargeForm=this.chargeForm.map((function(t){return Object.assign({},t,{billingAmount:e.formateCurrency(t.extendedCost),billingRate:e.formateCurrency(t.unitCost)})})),this.isEdit)1==this.costPlusType&&this.markupChanged(this.chargeForm[0],"row"),this.salesOrderChargesList[this.mainEditingIndex]=this.chargeForm[0],L("#addNewCharges").modal("hide"),this.isEdit=!1;else{var t=[];for(var r in this.salesOrderChargesList.forEach((function(e){t=[].concat(_toConsumableArray(t),_toConsumableArray(e))})),t=[].concat(_toConsumableArray(t),_toConsumableArray(this.chargeForm)),this.salesOrderChargesLists=t,this.salesOrderChargesList=[],this.salesOrderChargesLists)this.salesOrderChargesList.push(this.salesOrderChargesLists[r]);1==this.costPlusType&&this.markupChanged({},"all"),L("#addNewCharges").modal("hide")}this.isEnableUpdateButton=!0,this.isSaveChargesDesabled=!1,this.storedData=_toConsumableArray(this.salesOrderChargesList)}},{key:"createChargesQuote",value:function(){for(var e=this,t=this.salesOrderChargesList,r=[],n=0;n<t.length;n++)r=[].concat(_toConsumableArray(r),_toConsumableArray(t[n]));r=r.map((function(t){return Object.assign({},t,{headerMarkupId:Number(e.costPlusType),headerMarkupPercentageId:e.overAllMarkup,markupFixedPrice:e.chargesFlatBillingAmount,vendorId:Object(W.a)("vendorId",t.vendor)})})),this.formateCurrency(this.chargesFlatBillingAmount),this.costPlusType,this.isSpinnerVisible=!0,this.salesOrderService.createSOQCharge(r).subscribe((function(t){e.isSpinnerVisible=!1,e.alertService.showMessage("","Created Sales Order Charge Successfully",E.d.success),e.refreshOnDataSaveOrEditORDelete(),e.saveChargesListForSO.emit(e.chargesFlatBillingAmount)}),(function(t){return e.onDataLoadError(t)})),this.isSaveChargesDesabled=!0,this.storedData=[]}},{key:"delete",value:function(){var e=this;if(this.deleteModal.close(),this.isSpinnerVisible=!0,this.selectedRowForDelete.salesOrderChargesId){var t=this.selectedRowForDelete.salesOrderChargesId;this.salesOrderService.deletesalesOrderChargesList(t,this.userName).subscribe((function(t){e.alertService.showMessage("","Deleted Sales Order Charge Successfully",E.d.success),e.isSpinnerVisible=!1,e.refreshOnDataSaveOrEditORDelete(!0)}),(function(t){e.isSpinnerVisible=!1}))}else this.selectedRowForDelete.isDeleted=!0,this.isSpinnerVisible=!1,this.storedData&&0!=this.storedData.length?this.storedData.forEach((function(t){JSON.stringify(t)===JSON.stringify(e.selectedRowForDelete)&&(t.isDeleted=!0,e.salesOrderChargesList.splice(e.selectedRowIndexForDelete,1))})):this.salesOrderChargesList.splice(this.selectedRowIndexForDelete,1),this.storedData=_toConsumableArray(this.storedData),this.alertService.showMessage("","Deleted Sales Order Quote Freight Successfully",E.d.success);L("#addNewCharges").modal("hide"),this.isEdit=!1,this.isSaveChargesDesabled=!1}},{key:"onDataLoadError",value:function(e){this.isSpinnerVisible=!1;var t="";e.message&&(t=e.message),this.alertService.resetStickyMessage(),this.alertService.showStickyMessage("Sales Order",t,E.d.error,e)}},{key:"markupChanged",value:function(e,t){var r=this;try{this.markupList.forEach((function(n){"row"==t&&n.value==e.markupPercentageId?(e.billingAmount=r.formateCurrency(Number(e.extendedCost.toString().replace(/\,/g,""))+Number(e.extendedCost.toString().replace(/\,/g,""))/100*Number(n.label)),e.billingRate=r.formateCurrency(Number(e.unitCost.toString().replace(/\,/g,""))+Number(e.unitCost.toString().replace(/\,/g,""))/100*Number(n.label))):"all"==t&&n.value==r.overAllMarkup&&r.salesOrderChargesList.forEach((function(e){e.billingMethodId&&1==Number(e.billingMethodId)&&(e.markupPercentageId=Number(r.overAllMarkup),e.headerMarkupId=Number(r.costPlusType),e.billingAmount=r.formateCurrency(Number(e.extendedCost.toString().replace(/\,/g,""))+Number(e.extendedCost.toString().replace(/\,/g,""))/100*Number(n.label)),e.billingRate=r.formateCurrency(Number(e.unitCost.toString().replace(/\,/g,""))+Number(e.unitCost.toString().replace(/\,/g,""))/100*Number(n.label)))}))}))}catch(n){console.log(n)}}},{key:"tmchange",value:function(){var e,t=_createForOfIteratorHelper(this.salesOrderChargesList);try{for(t.s();!(e=t.n()).done;){var r=e.value;r.billingMethodId=this.costPlusType,r.headerMarkupPercentageId=this.overAllMarkup,r.markupPercentageId="",r.billingRate="0.00",r.billingAmount=this.formateCurrency(Number(r.extendedCost.toString().replace(/\,/g,""))),3==this.costPlusType&&(r.billingAmount="0.00",this.chargesFlatBillingAmount="0.00"),this.overAllMarkup="",r.headerMarkupPercentageId=this.overAllMarkup}}catch(n){t.e(n)}finally{t.f()}}},{key:"getTotalAmount",value:function(){var e=this,t=0;return this.salesOrderChargesList&&this.salesOrderChargesList.forEach((function(r){t+=Number(e.getTotalTaskAmount(r))})),this.formateCurrency(t)}},{key:"getTotalTaskAmount",value:function(e){var t=0;return e.extendedCost&&!e.isDeleted&&(t+=Number(e.extendedCost.toString().replace(/\,/g,""))),t.toFixed(2)}},{key:"getTotalBillingAmount",value:function(){var e=this,t=0;return this.salesOrderChargesList&&this.salesOrderChargesList.forEach((function(r){t+=Number(e.getTotalTaskBillingAmount(r))})),this.chargesFlatBillingAmount=t.toFixed(2),this.formateCurrency(t)}},{key:"getTotalTaskBillingAmount",value:function(e){var t=0;return e.billingAmount&&!e.isDeleted&&(t+=Number(e.billingAmount.toString().replace(/\,/g,""))),t.toFixed(2)}},{key:"formateCurrency",value:function(e){return e?Object(W.b)(e,2):"0.00"}},{key:"calculateExtendedCostSummation",value:function(){return this.salesOrderChargesList.filter((function(e){return 1!=e.isDelete})).reduce((function(e,t){return e+parseFloat(null==t.extendedCost||""===t.extendedCost?0:t.extendedCost.toString().replace(/\,/g,""))}),0)}},{key:"calculateExtendedCost",value:function(e){e.unitCost=e.unitCost?Object(W.b)(e.unitCost,2):"";var t=parseFloat(e.quantity.toString().replace(/\,/g,""))*parseFloat(e.unitCost.toString().replace(/\,/g,""));e.extendedCost=t>0?Object(W.b)(t,2):"0.00",this.calculateExtendedCostSummation()}},{key:"filterVendor",value:function(e){this.vendorCollection=this.allVendors;var t=_toConsumableArray(this.allVendors.filter((function(t){return t.vendorName.toLowerCase().includes(e.query.toLowerCase())})));this.vendorCollection=t}},{key:"setVendors",value:function(){var e,t=_createForOfIteratorHelper(this.salesOrderChargesList);try{for(t.s();!(e=t.n()).done;){var r=e.value,n=this.allVendors.filter((function(e){return e.vendorId==r.vendorId}))[0];null!=n&&(console.log("Test"),r.vendor={vendorId:n.vendorId,vendorName:n.vendorName})}}catch(s){t.e(s)}finally{t.f()}}},{key:"onDataLoadFailed",value:function(e){var t=e,r="";if(t.message){if(t.error&&t.error.errors.length>0)for(var n=0;n<t.error.errors.length;n++)r=r+t.error.errors[n].message+"<br/>";this.alertService.showMessage(t.error.message,r,E.d.error)}else this.alertService.showMessage("Error",e.error,E.d.error)}},{key:"openInterShipViaHistory",value:function(e,t){var r=this;t&&t.salesOrderChargesId&&this.salesOrderService.getSOChargesHistory(t.salesOrderChargesId).subscribe((function(t){return r.onAuditInterShipViaHistoryLoadSuccessful(t,e)}),(function(e){r.isSpinnerVisible=!1}))}},{key:"onAuditInterShipViaHistoryLoadSuccessful",value:function(e,t){this.alertService.stopLoadingMessage(),this.chargesAudiHistory=e,this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1,windowClass:"assetMange"})}},{key:"dismissModelHistory",value:function(){this.modal.close()}},{key:"getColorCodeForHistory",value:function(e,t,r){var n=this.chargesAudiHistory,s=n.length;if(e>=0&&e<=s)return e+1===s||n[e+1][t]===r}},{key:"openDelete",value:function(e,t,r){this.selectedRowForDelete=t,this.selectedRowIndexForDelete=r,this.deleteModal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"dismissModel",value:function(){this.deleteModal.close()}},{key:"getDeleteListByStatus",value:function(e){this.deletedStatusInfo=e||!1,this.refreshOnDataSaveOrEditORDelete()}},{key:"restore",value:function(e,t,r){this.restorerecord=t,this.deletedrowIndex=r,console.log("restore",this.restorerecord),this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"dismissModelAlett",value:function(){this.modal.close()}},{key:"restoreRecord",value:function(){var e=this;this.restorerecord&&this.restorerecord.salesOrderChargesId>0?this.commonService.updatedeletedrecords("SalesOrderCharges","SalesOrderChargesId",this.restorerecord.salesOrderChargesId).subscribe((function(t){e.refreshOnDataSaveOrEditORDelete(),e.modal.close(),e.alertService.showMessage("Success","Successfully Updated Status",E.d.success)}),(function(e){})):(this.restorerecord.isDeleted=!1,this.salesOrderChargesList.splice(this.deletedrowIndex,1),this.storedData.forEach((function(t){JSON.stringify(t)===JSON.stringify(e.restorerecord)&&(t.isDeleted=!1)})),this.alertService.showMessage("Success","Successfully Updated Status",E.d.success),this.modal.close(),console.log("set2",this.storedData))}},{key:"deleteRow",value:function(e,t){this.chargeForm.splice(e,1)}},{key:"enableUpdate",value:function(){this.isEnableUpdateButton=!1}},{key:"validated",value:function(){this.isSaveChargesDesabled=!1}},{key:"formatStringToNumberGlobal",value:function(e){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();et.ctorParameters=function(){return[{type:ae.a},{type:z.a},{type:E.b},{type:_.a},{type:Ce.a},{type:s.ChangeDetectorRef},{type:ne.a},{type:R.c}]},n.b([Object(s.Input)()],et.prototype,"salesOrderChargesList",void 0),n.b([Object(s.Input)()],et.prototype,"chargeForm",void 0),n.b([Object(s.Input)()],et.prototype,"customerId",void 0),n.b([Object(s.Input)()],et.prototype,"salesOrderQuoteId",void 0),n.b([Object(s.Input)()],et.prototype,"salesOrderId",void 0),n.b([Object(s.Output)()],et.prototype,"saveChargesListForSO",void 0),n.b([Object(s.Output)()],et.prototype,"updateChargesListForSO",void 0),n.b([Object(s.Output)()],et.prototype,"refreshData",void 0),n.b([Object(s.Input)()],et.prototype,"view",void 0),n.b([Object(s.Input)()],et.prototype,"isQuote",void 0),n.b([Object(s.Input)()],et.prototype,"isView",void 0),et=n.b([Object(s.Component)({selector:"app-sales-order-charges",template:n.c(r("Nhi2")).default,encapsulation:s.ViewEncapsulation.None,styles:[n.c(r("0fsz")).default]})],et);var tt=r("VyKh"),rt=function(){function e(t,r,n,a,i,o,l,d){_classCallCheck(this,e),this.modalService=t,this.salesQuoteService=r,this.alertService=n,this.salesOrderService=a,this.router=i,this.salesOrderReferenceStorage=o,this.authService=l,this.commonService=d,this.selectedParts=[],this.summaryParts=[],this.chooseParts=[],this.summaryColumns=[],this.isStockLineViewMode=!1,this.selectedSummaryRowIndex=null,this.totalFreights=0,this.totalCharges=0,this.employeesList=[],this.close=new s.EventEmitter,this.select=new s.EventEmitter,this.reserve=new s.EventEmitter,this.onPartsSavedEvent=new s.EventEmitter,this.isEdit=!1,this.myEvent=new s.EventEmitter,this.isPNView=!0,this.isSpinnerVisible=!1,this.saveButton=!1,this.canSaveParts=!1,this.show=!1,this.part=new Oe.a}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;this.getDefaultCurrency(),this.salesQuoteService.getSearchPartObject().subscribe((function(t){e.query=t})),this.salesQuoteService.getSelectedParts().subscribe((function(t){e.selectedParts=t||[]})),this.filterParts(),null!=this.salesOrderView&&null!=this.salesOrderView||(this.isPNView=!1),this.columns=[],this.initColumns()}},{key:"refresh",value:function(){var e=this;this.salesQuoteService.getSelectedParts().subscribe((function(t){e.selectedParts=t||[]})),this.filterParts(),this.canSaveParts=!0}},{key:"getDefaultCurrency",value:function(){var e=this;this.legalEntity=19,this.commonService.getDefaultCurrency(this.legalEntity).subscribe((function(t){e.defaultCurrencyId=t.currencyId,e.defaultCurrencyDiscription=t.currencyName}))}},{key:"initColumns",value:function(){this.columns=[{header:"PN",width:"130px"},{header:"PN Description",width:"250px"},{header:"Stk Line Num",width:"100px"},{header:"Ser Num",width:"70px"},{header:"Cond",width:"70px"},{header:"Stk Type",width:"100px"},{header:"Alt/Equiv",width:"100px"},{header:"Customer Ref",width:"150px"},{header:"Qty On Back Orde",width:"100px"},{header:"Cust Request Date",width:"130px"},{header:"Cust Promised Date",width:"130px"},{header:"Est.Ship Date",width:"130px"},{header:"Priority",width:"100px"},{header:"Status",width:"80px"},{header:"Quote Num",width:"100px"},{header:"Quote Ver",width:"100px"},{header:"Quote Date",width:"100px"},{header:"Qty Ord",width:"90px"},{header:"Qty Reserved",width:"90px"},{header:"Qty to Ship",width:"90px"},{header:"Qty Invoiced",width:"90px"},{header:"Invoice Num",width:"90px"},{header:"Invoice Date",width:"110px"},{header:"Qty Previously Shipped",width:"110px"},{header:"Last Ship Date",width:"110px"},{header:"Shipping Ref",width:"110px"},{header:"Qty Avail",width:"110px"},{header:"Qty On Hand",width:"110px"},{header:"Unit Cost",width:"90px"},{header:"MarkUp %",width:"70px"},{header:"MarkUp Amt/Unit",width:"110px"},{header:"Gross Price/Unit",width:"110px"},{header:"Disc. %",width:"60px"},{header:"Disc. Amt/Unit",width:"110px"},{header:"MarkUp Amt",width:"100px"},{header:"Gross Sales Amt",width:"110px"},{header:"Disc. Amt",width:"90px"},{header:"Net Sales Amt",width:"100px"},{header:"Tax Type",width:"90px"},{header:"Tax Amt",width:"90px"},{header:"Total",width:"90px"},{header:"Extended Cost",width:"100px"},{header:"Product Margin",width:"100px"},{header:"Product Margin (%)",width:"120px"},{header:"Cntrl Num",width:"80px"},{header:"Cntrl ID Num",width:"90px"},{header:"Notes",width:"120px"}],this.isViewMode||this.columns.push({header:"Notes",width:"120px"}),this.summaryColumns=[{field:"hidePart",header:"",width:"30px",textalign:"center"},{field:"partNumber",header:"PN"},{field:"partDescription",header:"PN Description"},{field:"pmaStatus",header:"Stk Type"},{field:"conditionDescription",header:"Cond"},{field:"quantityRequested",header:"Qty Req"},{field:"quantityToBeQuoted",header:"Qty To Quote"},{field:"quantityAlreadyQuoted",header:"Qty Prev Quoted"},{field:"currencyDescription",header:"Curr"},{field:"fixRate",header:"FX Rate"},{field:"uom",header:"UOM"},{field:"customerRef",header:"Cust Ref"},{field:"grossSalePrice",header:"Gross Sale Amt"},{field:"salesDiscountExtended",header:"Disc Amt"},{field:"netSalesPriceExtended",header:"Net Sale Amt"},{field:"misc",header:"Misc"},{field:"freight",header:"Freight"},{field:"taxAmount",header:"Tax Amt"},{field:"totalSales",header:"Total"},{field:"unitCostExtended",header:"Extended Cost"},{field:"marginAmountExtended",header:"Prod Margin"},{field:"marginPercentageExtended",header:"Prod Margin%"}]}},{key:"onEditPartDetails",value:function(){this.combineParts(this.summaryParts),this.canSaveParts=!1}},{key:"onClose",value:function(e){this.show=!1,this.addPartModal&&this.addPartModal.close(),this.partActionModal&&this.partActionModal.close()}},{key:"onCloseReserve",value:function(e){this.show=!1,this.salesReserveModal.close()}},{key:"onCloseMargin",value:function(e){this.show=!1,this.salesMarginModal.close(),this.isEdit||(this.selectedPart.selected=!1,this.openPartNumber(!1))}},{key:"onClosePartDelete",value:function(){this.deletePartModal.close()}},{key:"addPartNumber",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this.salesQuoteService.resetSearchPart(),e?(this.selectedSummaryRow=e,this.selectedSummaryRowIndex=t):(this.selectedSummaryRow=null,this.selectedSummaryRowIndex=null),this.openPartNumber(!1)}},{key:"viewPartNumber",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this.salesQuoteService.resetSearchPart(),e?(this.selectedSummaryRow=e,this.selectedSummaryRowIndex=t):(this.selectedSummaryRow=null,this.selectedSummaryRowIndex=null),this.openPartNumber(!0)}},{key:"openPartNumber",value:function(e){this.isStockLineViewMode=e;var t=this.addPart;this.addPartModal=this.modalService.open(t,{windowClass:"myCustomModalClass",backdrop:"static",keyboard:!1})}},{key:"partsAction",value:function(e){this.selectedPartActionType=e;var t=this.popupContentforPartAction;this.partActionModal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1})}},{key:"onPartRowSelect",value:function(e){this.selectedPartDataForAction=e.data}},{key:"onShowModalReserve",value:function(e){this.isEdit=!1,this.salesMargin,this.selectedPart=e.part;var t=e.checked;this.selectedPart&&(t?(this.part=e.part,this.salesReserveModal=this.modalService.open(this.salesReserve,{size:"lg",backdrop:"static",keyboard:!1})):this.removePartNamber(this.selectedPart))}},{key:"openSalesMargin",value:function(e){var t=this;this.isEdit=!1;var r=this.salesMargin;this.selectedPart=e.part;var n=e.checked;this.selectedPart&&(n?(this.salesQuoteService.getSearchPartObject().subscribe((function(e){t.query=e,t.part=new Oe.a,t.part.partNumber=t.selectedPart.partNumber,t.part.stockLineNumber=t.selectedPart.stockLineNumber,t.part.salesPricePerUnit=+t.selectedPart.unitSalePrice,t.part.unitCostPerUnit=+t.selectedPart.unitCost,t.part.itemClassification=t.selectedPart.itemClassification,t.part.description=t.selectedPart.description,t.part.itemMasterId=t.selectedPart.itemMasterId,t.part.partId=t.selectedPart.partId,t.part.stockLineId=t.selectedPart.stockLineId,t.part.idNumber=t.selectedPart.idNumber,t.part.statusId=t.salesQuote.statusId,t.part.freight=t.salesOrderService.getTotalFreights(),t.part.misc=t.salesOrderService.getTotalCharges(),t.part.priorityId=t.defaultSettingPriority,t.part.createdBy=t.userName,t.selectedPart.itemMasterSale&&(t.part.fixRate=t.selectedPart.itemMasterSale.fxRate),t.part.taxType=t.customer.taxType,t.part.taxPercentage=t.customer.taxPercentage,1==t.selectedPart.mappingType?t.part.altOrEqType="Alt":2==t.selectedPart.mappingType?t.part.altOrEqType="Equi":t.part.altOrEqType="",t.part.masterCompanyId=t.masterCompanyId,t.part.conditionId=t.selectedPart.conditionId,t.part.conditionDescription=t.selectedPart.conditionDescription,t.part.currencyId=t.defaultCurrencyId,t.part.currencyDescription=t.defaultCurrencyDiscription,t.part.salesQuoteNumber=t.salesQuote.salesOrderQuoteNumber,t.part.quoteVesrion=t.salesQuote.versionNumber,t.part.uom=t.selectedPart.uomDescription,t.part.pmaStatus=t.selectedPart.oempmader,t.part.pmaStatus||(t.part.pmaStatus=t.selectedPart.stockType),t.part.controlNumber=t.selectedPart.controlNumber,t.salesQuote.salesOrderQuoteNumber&&(t.part.quoteDate=t.salesQuote.openDate),t.part.salesDiscount=0,t.part.markupPerUnit=0,t.part.markUpPercentage=0,t.part.salesDiscount=0,t.part.grossSalePrice=0,t.part.grossSalePricePerUnit=0,t.part.quantityRequested=t.query.partSearchParamters.quantityRequested,t.part.quantityToBeQuoted=t.query.partSearchParamters.quantityToQuote,t.selectedPart.qtyRemainedToQuote?t.selectedPart.qtyRemainedToQuote>=t.part.quantityToBeQuoted?t.part.quantityFromThis=t.part.quantityToBeQuoted:t.part.quantityFromThis=t.selectedPart.qtyRemainedToQuote:t.part.quantityFromThis=t.part.quantityToBeQuoted,t.part.qtyAvailable=t.selectedPart.qtyAvailable,t.part.qtyOnHand=t.selectedPart.qtyOnHand,t.part.quantityAvailableForThis=t.query.partSearchParamters.qtyAvailable,t.part.quantityAlreadyQuoted=t.query.partSearchParamters.quantityAlreadyQuoted})),this.addPartModal.close(),this.salesMarginModal=this.modalService.open(r,{size:"lg",backdrop:"static",keyboard:!1}),this.salesMarginModal.result.then((function(){}),(function(){t.selectedPart.selected=!1}))):this.removePartNamber(this.selectedPart))}},{key:"openSalesMarginSave",value:function(e){var t=this;console.log(e),this.salesQuoteService.getSearchPartObject().subscribe((function(r){t.query=r,t.query.partSearchParamters.quantityAlreadyQuoted=Number(t.query.partSearchParamters.quantityAlreadyQuoted)+Number(e.quantityFromThis),t.query.partSearchParamters.quantityToQuote=Number(t.query.partSearchParamters.quantityRequested)-Number(t.query.partSearchParamters.quantityAlreadyQuoted)})),this.part.quantityToBeQuoted=Number(e.quantityFromThis),this.part.quantityAlreadyQuoted=Number(e.quantityFromThis),this.salesQuoteService.updateSearchPartObject(this.query);var r=Object.assign({},this.part);this.isEdit||(this.selectedSummaryRow&&(this.selectedSummaryRow.quantityToBeQuoted=this.query.partSearchParamters.quantityToQuote,this.selectedSummaryRow.quantityAlreadyQuoted=this.query.partSearchParamters.quantityAlreadyQuoted,this.selectedSummaryRow.quantityRequested=this.query.partSearchParamters.quantityRequested,this.selectedSummaryRow.childParts.forEach((function(e,r){t.summaryParts[t.selectedSummaryRowIndex].childParts[r].quantityRequested=t.selectedSummaryRow.quantityRequested})),this.combineParts(this.summaryParts)),this.openPartNumber(!1),this.selectedParts.push(r)),this.salesMarginModal.close(),this.filterParts(),this.canSaveParts=!1,console.log(this.query),console.log(this.selectedParts)}},{key:"openPartToEdit",value:function(e){var t=this;this.isEdit=!0;var r=this.salesMargin;this.part=e,this.part&&(this.salesQuoteService.getSearchPartObject().subscribe((function(r){t.query=r,t.part=e,t.query.partSearchParamters.quantityRequested=t.part.quantityRequested,t.query.partSearchParamters.quantityToQuote=t.part.quantityToBeQuoted,t.query.partSearchParamters.quantityAlreadyQuoted=t.part.quantityAlreadyQuoted})),this.salesMarginModal=this.modalService.open(r,{size:"lg",backdrop:"static",keyboard:!1}))}},{key:"openPartDelete",value:function(e,t){this.part=t,this.deletePartModal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"deletePart",value:function(){var e=this;this.part.salesOrderPartId?this.salesOrderService.deletePart(this.part.salesOrderPartId).subscribe((function(t){e.removePartNamber(e.part),e.deletePartModal.close(),e.alertService.showMessage("Success","Part removed successfully.",E.d.success)})):(this.removePartNamber(this.part),this.deletePartModal.close(),this.alertService.showMessage("Success","Part removed successfully.",E.d.success))}},{key:"checkForDuplicates",value:function(e){for(var t=e.partNumber,r=e.stockLineNumber,n=e.conditionId,s=e.pmaStatus,a=0;a<this.selectedParts.length;a++){var i=this.selectedParts[a].partNumber,o=this.selectedParts[a].stockLineNumber,l=this.selectedParts[a].conditionId,d=this.selectedParts[a].pmaStatus;return i==t&&o==r&&l==n&&d==s}}},{key:"removePartNamber",value:function(e){for(var t=e.partNumber,r=e.stockLineNumber,n=e.conditionId,s=e.pmaStatus,a=0;a<this.selectedParts.length;a++){var i=this.selectedParts[a].partNumber,o=this.selectedParts[a].stockLineNumber,l=this.selectedParts[a].conditionId,d=this.selectedParts[a].pmaStatus;i==t&&o==r&&l==n&&d==s&&(this.selectedParts.splice(a,1),this.onPartsSavedEvent.emit(this.selectedParts))}this.filterParts(),this.checkUpdateOrsaveButton(),console.log(this.selectedParts)}},{key:"initiateCreateWOROPO",value:function(e,t){var r=this;this.salesOrderService.getcommonsalesorderdetails(this.salesOrderId,e.salesOrderPartId).subscribe((function(e){e.length>0&&(r.salesOrderService.setReferenceObject(e[0]),r.salesOrderReferenceData=e[0],r.salesOrderReferenceStorage.salesOrderReferenceData=r.salesOrderReferenceData,"WO"==t&&r.router.navigateByUrl("workordersmodule/workorderspages/app-work-order-add"),"RO"==t&&r.router.navigateByUrl("vendorsmodule/vendorpages/app-create-ro"),"PO"==t&&r.router.navigateByUrl("vendorsmodule/vendorpages/app-create-po"))}))}},{key:"ngOnDestroy",value:function(){this.salesOrderService.salesOrderReference=this.salesOrderReferenceData}},{key:"isEditDisabled",value:function(e,t){return!t.createdBy||t.createdBy!=this.userName||(e.isApproved||t.isApproved)&&"S"!=t.methodType}},{key:"isDeleteDisabled",value:function(e,t){return!t.createdBy||t.createdBy!=this.userName||e.isApproved||t.isApproved}},{key:"openConfirmationModal",value:function(){this.modal=this.modalService.open(this.updatePNDetailsModal,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"closeConfirmationModal",value:function(){this.modal&&this.modal.close()}},{key:"onPaging",value:function(e){}},{key:"approve",value:function(){var e=this;this.salesOrderView.parts=[],this.salesOrderView.salesOrder.salesOrderQuoteId=this.salesQuote.salesOrderQuoteId;for(var t=!1,r=!1,n=0;n<this.selectedParts.length;n++){var s=this.selectedParts[n],a="";if(s.customerRequestDate||(this.isSpinnerVisible=!1,t=!0,a+="<br />Please enter Customer Request Date."),s.estimatedShipDate||(this.isSpinnerVisible=!1,t=!0,a+="<br />Please enter Estimated Ship Date."),s.promisedDate||(this.isSpinnerVisible=!1,t=!0,a+="<br />Please enter Promised Date."),s.priorityId||(this.isSpinnerVisible=!1,t=!0,a+="<br />Please enter priority ID."),s.customerRequestDate&&s.promisedDate&&s.estimatedShipDate&&(s.customerRequestDate<this.salesQuote.openDate||s.estimatedShipDate<this.salesQuote.openDate||s.promisedDate<this.salesQuote.openDate)&&(r=!0),!t&&!r){var i=this.salesOrderService.marshalSOPartToSave(s,this.userName);this.salesOrderView.parts.push(i)}}t?(this.alertService.resetStickyMessage(),this.alertService.showStickyMessage("Sales Order",a,E.d.error)):r?(this.alertService.resetStickyMessage(),this.alertService.showStickyMessage("Sales Order","Please select valid Dates for Sales Order PartsList!",E.d.error)):(this.isSpinnerVisible=!0,this.salesOrderService.update(this.salesOrderView).subscribe((function(t){e.canSaveParts=!0,e.alertService.stopLoadingMessage(),e.isSpinnerVisible=!1,e.alertService.showMessage("Success","PN  updated successfully.",E.d.success),e.onPartsSavedEvent.emit(e.selectedParts)}),(function(t){e.isSpinnerVisible=!1}))),this.closeConfirmationModal()}},{key:"onDataLoadFailed",value:function(e){this.isSpinnerVisible=!1;var t="";e.message&&(t=e.message),this.alertService.resetStickyMessage(),this.alertService.showStickyMessage("Sales Order",t,E.d.error,e)}},{key:"onAddTextAreaInfo",value:function(e,t,r){this.notesIndex=t,this.notesSummaryIndex=r,console.log("memolist",e,r),this.textAreaInfo=e.notes}},{key:"onSaveTextAreaInfo",value:function(e){e&&(this.textAreaInfo=e,this.summaryParts[this.notesSummaryIndex].childParts[this.notesIndex].notes=this.textAreaInfo,this.combineParts(this.summaryParts)),this.canSaveParts=!1,L("#textarea-popupNotes").modal("hide")}},{key:"onCloseTextAreaInfo",value:function(){L("#textarea-popupNotes").modal("hide")}},{key:"filterParts",value:function(){var e=this;this.summaryParts=[];var t=this.getUniqueParts(this.selectedParts,"partNumber","conditionId","pmaStatus");t.length>0&&(t.forEach((function(r,n){var s=e.selectedParts.filter((function(e){return e.partNumber==r.partNumber&&e.conditionId==r.conditionId&&e.pmaStatus==r.pmaStatus}));s&&s.length>0&&(t[n]=e.calculateSummarizedRow(s,r),t[n].childParts=s)})),this.summaryParts=t),this.totalRecords=this.summaryParts.length,this.pageLinks=Math.ceil(this.totalRecords/10),this.checkUpdateOrsaveButton()}},{key:"calculateSummarizedRow",value:function(e,t){var r=this;return t=new ke,e.forEach((function(e){t.quantityToBeQuoted=r.getSum(t.quantityToBeQuoted,e.quantityFromThis),t.quantityAlreadyQuoted=t.quantityToBeQuoted,t.grossSalePrice=r.getSum(t.grossSalePrice,e.grossSalePrice),t.salesDiscountExtended=r.getSum(t.salesDiscountExtended,e.salesDiscountExtended),t.netSalesPriceExtended=r.getSum(t.netSalesPriceExtended,e.netSalesPriceExtended),t.taxAmount=r.getSum(t.taxAmount,e.taxAmount),t.totalSales=r.getSum(t.totalSales,e.totalSales),t.marginAmountExtended=r.getSum(t.marginAmountExtended,e.marginAmountExtended),t.marginPercentageExtended=r.getSum(t.marginPercentageExtended,e.marginPercentageExtended),Number(t.quantityRequested)!=Number(e.quantityRequested)?t.quantityRequested=Number(t.quantityRequested)+Number(e.quantityRequested):t.quantityRequested=Number(e.quantityRequested)})),t.partId=e[0].itemMasterId,t.quantityToBeQuoted=Number(t.quantityRequested)-Number(t.quantityAlreadyQuoted),t.conditionDescription=e[0].conditionDescription,t.conditionId=e[0].conditionId,t.partNumber=e[0].partNumber,t.partDescription=e[0].description,t.currencyDescription=e[0].currencyDescription,t.currencyId=e[0].currencyId,t.misc=e[0].misc,t.fixRate=e[0].fixRate,t.freight=e[0].freight,t.uom=e[0].uom,t.customerRef=e[0].customerRef,t.pmaStatus=e[0].pmaStatus,t.marginPercentageExtended=t.marginPercentageExtended/e.length,t}},{key:"getSum",value:function(e,t){return Number(e)+Number(t)}},{key:"getUniqueParts",value:function(e,t,r,n){var s=JSON.parse(JSON.stringify(e));return s.reduceRight((function(e,a,i){return e.some((function(e){return a[t]===e[t]&&a[r]===e[r]&&a[n]===e[n]}))?s.splice(i,1):e.push(a),e}),[]),s}},{key:"combineParts",value:function(e){var t=this;this.selectedParts=[],e.forEach((function(e){e.childParts&&e.childParts.length>0&&(t.selectedParts.length>0?t.selectedParts=[].concat(_toConsumableArray(t.selectedParts),_toConsumableArray(e.childParts)):t.selectedParts=_toConsumableArray(e.childParts))}))}},{key:"checkUpdateOrsaveButton",value:function(){var e=this,t=!1;this.summaryParts&&this.summaryParts.length>0&&this.summaryParts.forEach((function(r){r.childParts&&r.childParts.length>0&&r.childParts.forEach((function(r){r.salesOrderPartId&&!t&&(t=!0,e.saveButton=!0)}))}))}},{key:"masterCompanyId",get:function(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:1}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();rt.ctorParameters=function(){return[{type:R.c},{type:F.a},{type:E.b},{type:ae.a},{type:N.Router},{type:tt.a},{type:z.a},{type:_.a}]},n.b([Object(s.ViewChild)("addPart",{static:!1})],rt.prototype,"addPart",void 0),n.b([Object(s.Input)()],rt.prototype,"salesOrderId",void 0),n.b([Object(s.Input)()],rt.prototype,"defaultSettingPriority",void 0),n.b([Object(s.ViewChild)("popupContentforPartAction",{static:!1})],rt.prototype,"popupContentforPartAction",void 0),n.b([Object(s.ViewChild)("salesMargin",{static:!1})],rt.prototype,"salesMargin",void 0),n.b([Object(s.ViewChild)("salesReserve",{static:!1})],rt.prototype,"salesReserve",void 0),n.b([Object(s.Input)()],rt.prototype,"customer",void 0),n.b([Object(s.Input)()],rt.prototype,"totalFreights",void 0),n.b([Object(s.Input)()],rt.prototype,"totalCharges",void 0),n.b([Object(s.Input)()],rt.prototype,"salesQuote",void 0),n.b([Object(s.Input)()],rt.prototype,"employeesList",void 0),n.b([Object(s.Input)()],rt.prototype,"isViewMode",void 0),n.b([Object(s.Output)()],rt.prototype,"close",void 0),n.b([Object(s.Output)()],rt.prototype,"select",void 0),n.b([Object(s.Output)()],rt.prototype,"reserve",void 0),n.b([Object(s.Output)("on-parts-save")],rt.prototype,"onPartsSavedEvent",void 0),n.b([Object(s.Input)()],rt.prototype,"salesOrderView",void 0),n.b([Object(s.ViewChild)("updatePNDetailsModal",{static:!1})],rt.prototype,"updatePNDetailsModal",void 0),n.b([Object(s.Output)()],rt.prototype,"myEvent",void 0),rt=n.b([Object(s.Component)({selector:"app-sales-order-part-number",template:n.c(r("0qOe")).default,styles:[n.c(r("Eq2J")).default]})],rt);var nt=r("sYxu"),st=function e(){_classCallCheck(this,e),this.isProForma=!1},at=r("MNvC"),it=function(){function e(t,r,n,s,a){_classCallCheck(this,e),this.salesOrderService=t,this.commonService=r,this.alertService=n,this.customerService=s,this.authService=a,this.isViewMode=!1,this.parts=[],this.invoiceTypeList=[],this.currencyList=[],this.headers=[],this.shipViaList=[],this.selectedPartNumber=0,this.isSpinnerVisible=!1,this.partsForBilling=[],this.totalRecords=0,this.totalPages=0,this.pageSize=10,this.pageIndex=0,this.first=0,this.showPaginator=!1,this.soldCustomerAddress=new at.a,this.shipCustomerAddress=new at.a,this.billCustomerAddress=new at.a,this.loadingSpinner=!1,this.soldCustomerSiteList=[],this.shipCustomerSiteList=[],this.billCustomerSiteList=[],this.moduleName=""}return _createClass(e,[{key:"ngOnInit",value:function(){this.initColumns()}},{key:"initColumns",value:function(){this.headers=[{field:"invoiceDate",header:"Invoice Date",width:"100px"},{field:"partNumber",header:"PN",width:"130px"},{field:"partDescription",header:"PN Description",width:"150px"},{field:"stockLineNumber",header:"Stk Line Num",width:"120px"},{field:"serialNumber",header:"Ser Num",width:"100px"},{field:"conditionDescription",header:"Cond",width:"100px"},{field:"currencyDescription",header:"Curr",width:"100px"},{field:"totalSales",header:"Billing Amount",width:"120px"}],this.selectedColumns=this.headers}},{key:"refresh",value:function(e){var t=this;this.initColumns(),this.partsForBilling=[],this.parts=e,this.parts&&this.parts.length>0&&this.parts.forEach((function(e){e.salesOrderPartId&&t.partsForBilling.push(e)})),this.totalRecords=this.partsForBilling.length,this.showPaginator=this.totalRecords>0}},{key:"onSelectPartNumber",value:function(e){0!=e.salesOrderPartId&&this.getBillingAndInvoicingForSelectedPart(e.salesOrderPartId)}},{key:"filterCustomerName",value:function(e){var t=this,r=e.query.toLowerCase();this.isSpinnerVisible=!0,this.commonService.getCustomerNameandCode(r,1).subscribe((function(e){t.customerNamesList=e,t.isSpinnerVisible=!1}),(function(e){t.errorHandling(e)}))}},{key:"getBillingAndInvoicingForSelectedPart",value:function(e){var t=this;this.isSpinnerVisible=!0,this.selectedPartNumber=e,this.salesOrderService.getSalesOrderBilling(this.salesOrderId,e).subscribe((function(e){t.isSpinnerVisible=!1,t.billingorInvoiceForm=e||new st,t.getCurrencyList(),t.getInvoiceList(),t.getShipViaByCustomerId()}),(function(e){t.isSpinnerVisible=!1}))}},{key:"getInvoiceList",value:function(){var e=this;this.isSpinnerVisible=!0,this.commonService.smartDropDownList("InvoiceType","InvoiceTypeId","Description").subscribe((function(t){e.invoiceTypeList=t,e.isSpinnerVisible=!1}),(function(t){e.errorHandling(t)}))}},{key:"getCurrencyList",value:function(){var e=this;this.isSpinnerVisible=!0,this.commonService.smartDropDownList("Currency","CurrencyId","code","","").subscribe((function(t){e.currencyList=t,e.isSpinnerVisible=!1}),(function(t){e.errorHandling(t)}))}},{key:"errorHandling",value:function(e){var t=this;this.isSpinnerVisible=!1,e.error.errors?e.error.errors.forEach((function(e){t.alertService.showMessage(t.moduleName,e.message,E.d.error)})):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",E.d.error)}},{key:"getShipViaByCustomerId",value:function(){var e=this;this.isSpinnerVisible=!0,this.commonService.smartDropDownList("ShippingVia","ShippingViaId","Name").subscribe((function(t){e.isSpinnerVisible=!1,e.shipViaList=t}),(function(t){e.errorHandling(t)}))}},{key:"getSiteNamesBySoldCustomerId",value:function(e){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var r,n=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=e.customerId,this.isSpinnerVisible=!0,t.next=4,this.customerService.getCustomerShipAddressGet(r).subscribe((function(e){n.isSpinnerVisible=!1,n.soldCustomerShippingOriginalData=e[0],n.soldCustomerSiteList=e[0].map((function(e){return{label:e.siteName,value:e.customerShippingAddressId}})),n.soldCustomerShippingOriginalData.forEach((function(e){e.isPrimary&&(n.billingorInvoiceForm.soldToSiteId=e.customerShippingAddressId,n.changeOfSoldSiteName(e.customerShippingAddressId))}))}),(function(e){n.errorHandling(e)}));case 4:case"end":return t.stop()}}),t,this)})))}},{key:"changeOfSoldSiteName",value:function(e){var t=Object(W.d)("customerShippingAddressId",e,this.soldCustomerShippingOriginalData);t?(this.soldCustomerAddress.line1=t.address1,this.soldCustomerAddress.line2=t.address2,this.soldCustomerAddress.country=t.countryName,this.soldCustomerAddress.postalCode=t.postalCode,this.soldCustomerAddress.stateOrProvince=t.stateOrProvince,this.soldCustomerAddress.city=t.city):this.soldCustomerAddress=new at.a}},{key:"changeOfShipVia",value:function(e){Object(W.d)("shippingViaId",e,this.shipViaData)}},{key:"clearAddress",value:function(e,t){""===t&&"SoldTo"===e?this.soldCustomerAddress=new at.a:(""===t&&"shipTo"===e||""===t&&"BillTo"===e)&&(this.shipCustomerAddress=new at.a)}},{key:"getSiteNamesByShipCustomerId",value:function(e){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var r,n=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=e.customerId,t.next=3,this.customerService.getCustomerShipAddressGet(r).subscribe((function(e){n.shipCustomerShippingOriginalData=e[0],n.shipCustomerSiteList=e[0].map((function(e){return{label:e.siteName,value:e.customerShippingAddressId}})),n.shipCustomerShippingOriginalData.forEach((function(e){e.isPrimary&&(n.billingorInvoiceForm.shipToSiteId=e.customerShippingAddressId,n.changeOfShipSiteName(e.customerShippingAddressId))}))}),(function(e){n.errorHandling(e)}));case 3:case"end":return t.stop()}}),t,this)})))}},{key:"getSiteNamesByBillCustomerId",value:function(e){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var r,n=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=e.customerId,t.next=3,this.customerService.getCustomerShipAddressGet(r).subscribe((function(e){n.billCustomerShippingOriginalData=e[0],n.billCustomerSiteList=e[0].map((function(e){return{label:e.siteName,value:e.customerShippingAddressId}})),n.billCustomerShippingOriginalData.forEach((function(e){e.isPrimary&&(n.billingorInvoiceForm.billToSiteId=e.customerShippingAddressId,n.changeOfBillSiteName(e.customerShippingAddressId))}))}),(function(e){n.errorHandling(e)}));case 3:case"end":return t.stop()}}),t,this)})))}},{key:"changeOfShipSiteName",value:function(e){var t=Object(W.d)("customerShippingAddressId",e,this.shipCustomerShippingOriginalData);t?(this.shipCustomerAddress.line1=t.address1,this.shipCustomerAddress.line2=t.address2,this.shipCustomerAddress.country=t.countryName,this.shipCustomerAddress.postalCode=t.postalCode,this.shipCustomerAddress.stateOrProvince=t.stateOrProvince,this.shipCustomerAddress.city=t.city):this.shipCustomerAddress=new at.a}},{key:"changeOfBillSiteName",value:function(e){var t=Object(W.d)("customerShippingAddressId",e,this.billCustomerShippingOriginalData);t?(this.billCustomerAddress.line1=t.address1,this.billCustomerAddress.line2=t.address2,this.billCustomerAddress.country=t.countryName,this.billCustomerAddress.postalCode=t.postalCode,this.billCustomerAddress.stateOrProvince=t.stateOrProvince,this.billCustomerAddress.city=t.city):this.billCustomerAddress=new at.a}},{key:"saveSalesOrderBilling",value:function(){var e=this,t=JSON.parse(JSON.stringify(this.billingorInvoiceForm));this.billingorInvoiceForm.soldToCustomerId=t.soldToCustomerId.customerId,this.billingorInvoiceForm.shipToCustomerId=t.shipToCustomerId.customerId,this.billingorInvoiceForm.billToCustomerId=t.billToCustomerId.customerId,this.billingorInvoiceForm.billToSiteId=t.billToCustomerId.billToSiteId,this.billingorInvoiceForm.shipToSiteId=t.shipToCustomerId.billToSiteId,this.billingorInvoiceForm.soldToSiteId=t.soldToCustomerId.billToSiteId,this.billingorInvoiceForm.createdDate=new Date,this.billingorInvoiceForm.updatedDate=new Date,this.billingorInvoiceForm.createdBy=this.userName,this.billingorInvoiceForm.updatedBy=this.userName,this.billingorInvoiceForm.salesOrderId=this.salesOrderId,this.billingorInvoiceForm.salesOrderPartId=this.selectedPartNumber,this.billingorInvoiceForm.invoiceNo="test",this.salesOrderService.createBilling(this.billingorInvoiceForm).subscribe((function(e){}),(function(t){e.errorHandling(t)}))}},{key:"convertDate",value:function(e,t){return t[e]}},{key:"loadData",value:function(e){}},{key:"updateWorkOrderBilling",value:function(){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();it.ctorParameters=function(){return[{type:ae.a},{type:_.a},{type:E.b},{type:H.a},{type:z.a}]},n.b([Object(s.Input)()],it.prototype,"parts",void 0),n.b([Object(s.Input)()],it.prototype,"salesOrderId",void 0),n.b([Object(s.Input)()],it.prototype,"salesOrder",void 0),it=n.b([Object(s.Component)({selector:"app-sales-order-billing",template:n.c(r("kAn8")).default,animations:[nt.a],styles:[n.c(r("4FnP")).default]})],it);var ot=function(){function e(t,r,n,s,a,i,o,l,d){_classCallCheck(this,e),this.salesOrderService=t,this.alertService=r,this.modalService=n,this.router=s,this.customerService=a,this.employeeService=i,this.commonservice=o,this.currencyService=l,this.authService=d,this.sales=[],this.tempSales=[],this.pnViewSelected=!1,this.totalRecords=0,this.totalPages=0,this.pageSize=10,this.pageIndex=0,this.first=0,this.showPaginator=!1,this.isSpinnerVisible=!0,this.selectedParts=[],this.allEmployeeinfo=[],this.customerWarningData=[],this.statusList=[],this.currentStatus="0",this.viewType="detailedview"}return _createClass(e,[{key:"ngOnInit",value:function(){this.isSpinnerVisible=!0,this.salesQuote=new q,this.salesOrderQuote=new U.a,this.searchParameters=new V,this.initColumns(),this.searchParameters.filters=Object.assign({},this.searchParameters.filters,{viewType:this.viewType}),this.isSpinnerVisible=!1}},{key:"initColumns",value:function(){this.headers=[{field:"salesOrderNumber",header:"SO Num",width:"120px"},{field:"versionNumber",header:"Ver Num",width:"130px"},{field:"partNumber",header:"PN",width:"130px"},{field:"partDescription",header:"PN Description",width:"180px"},{field:"stockLineNumber",header:"Stk Line Num",width:"150px"},{field:"salesOrderQuoteNumber",header:"SO Quote Num",width:"120px"},{field:"quoteDate",header:"Quote Date",width:"130px"},{field:"serialNumber",header:"Ser Num",width:"120px"},{field:"conditionDescription",header:"Cond",width:"100px"},{field:"uomName",header:"UOM",width:"100px"},{field:"qty",header:"Qty Quoted",width:"100px"},{field:"status",header:"Status",width:"100px"},{field:"currency",header:"Curr",width:"100px"},{field:"markupPerUnit",header:"MarkUp Amt",width:"120px"},{field:"grossSalePricePerUnit",header:"Gross Price/Unit",width:"140px"},{field:"discountAmount",header:"Disc. Amt",width:"120px"},{field:"markupExtended",header:"MarkUp Amt",width:"120px"},{field:"grossSalePrice",header:"Gross Sales Amt",width:"120px"},{field:"salesDiscountExtended",header:"Disc. Amt",width:"120px"},{field:"netSales",header:"Net Sales Amt",width:"130px"},{field:"misc",header:"Misc Amt",width:"120px"},{field:"totalSales",header:"Product Revenue",width:"130px"},{field:"unitCost",header:"Unit Cost",width:"130px"},{field:"unitCostExtended",header:"Extended Cost",width:"130px"},{field:"marginAmountExtended",header:"Margin Amt",width:"120px",style:"text-align:right"},{field:"marginPercentage",header:"Margin %",width:"100px",style:"text-align:right"},{field:"freight",header:"Freight",width:"120px",style:"text - align: right"},{field:"taxAmount",header:"Tax Amt",width:"120px"},{field:"totalRevenue",header:"Total Revenue",width:"130px"},{field:"notes",header:"Notes",width:"120px"}],this.selectedColumns=this.headers}},{key:"refresh",value:function(e){this.salesOrderId=e,this.onSearch()}},{key:"loadData",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";e.filters.statusId=this.currentStatus,this.searchParameters.first=parseInt(e.first)/e.rows,this.searchParameters.rows=e.rows,this.searchParameters.sortOrder=e.sortOrder,this.searchParameters.sortField=e.sortField,this.lazyLoadEventData=e,this.searchParameters.filters=Object(W.j)(e.filters),this.searchParameters.filters=Object.assign({},this.searchParameters.filters,{viewType:this.viewType}),this.searchParameters.globalFilter=t}},{key:"globalSearch",value:function(e){this.searchParameters.globalFilter=e,this.lazyLoadEventData}},{key:"onSearch",value:function(){var e=this;this.isSpinnerVisible=!0,this.salesOrderService.getAllSalesOrderAnalysis(this.salesOrderId).subscribe((function(t){e.isSpinnerVisible=!1,e.sales=t,e.sales.length>0&&e.sales.forEach((function(t,r){e.sales[r].totalRevenue=e.calculateProductRevenue(t,r),e.sales[r].totalSales=e.calculateTotalRevenue(t,r)})),e.totalRecords=t.length,e.totalPages=Math.ceil(e.totalRecords/e.searchParameters.rows),e.showPaginator=e.totalRecords>0}),(function(t){e.isSpinnerVisible=!1}))}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"dismissViewModel",value:function(){this.modal.close()}},{key:"dismissPartViewModel",value:function(){this.partModal.close()}},{key:"mouseOverData",value:function(e,t){return"partNumberType"===e?t.partNumber:"partDescriptionType"===e?t.partDescription:"priorityType"===e?t.priority:"quoteDate"===e&&t[e]?G(t.quoteDate).format("MM-DD-YYYY"):"createdDate"===e&&t[e]?G(t.createdDate).format("MM-DD-YYYY"):"updatedDate"===e&&t[e]?G(t.updatedDate).format("MM-DD-YYYY"):t[e]}},{key:"convertDate",value:function(e,t){return"quoteDate"!==e&&"updatedDate"!==e&&"createdDate"!==e||!t[e]?t[e]:G(t[e]).format("MM/DD/YYYY")}},{key:"getColorCodeForMultiple",value:function(e){return"Multiple"===e.partNumberType?"green":"black"}},{key:"calculateTotalRevenue",value:function(e,t){return this.sales[t].netSales+this.sales[t].misc}},{key:"calculateProductRevenue",value:function(e,t){return this.sales[t].netSales+this.sales[t].misc+this.sales[t].freight+this.sales[t].taxAmount}},{key:"getPercentage",value:function(e){if(this.sales&&this.sales.length>0)return(this.getTotalAmount(e)/this.sales.length).toFixed(2)}},{key:"getTotalAmount",value:function(e){var t=this,r=0;return this.sales&&this.sales.length>0&&this.sales.forEach((function(n){r+=Number(t.sumAmount(n,e))})),r.toFixed(2),this.formateCurrency(r)}},{key:"sumAmount",value:function(e,t){var r=0;return e[t]&&(r+=Number(e[t].toString().replace(/\,/g,""))),r.toFixed(2)}},{key:"formateCurrency",value:function(e){return e?Object(W.b)(e,2):"0.00"}},{key:"initSummaryColumns",value:function(){this.headers=[{field:"salesOrderNumber",header:"SO Num",width:"120px"},{field:"versionNumber",header:"Ver Num",width:"130px"},{field:"partNumber",header:"PN",width:"130px"},{field:"partDescription",header:"PN Description",width:"180px"},{field:"uomName",header:"UOM",width:"100px"},{field:"qtyQuoted",header:"Qty Quoted",width:"100px"},{field:"currency",header:"Curr",width:"100px"},{field:"markupExtended",header:"MarkUp Amt",width:"120px"},{field:"grossSalePrice",header:"Gross Sales Amt",width:"120px"},{field:"salesDiscountExtended",header:"Disc. Amt",width:"120px"},{field:"netSales",header:"Net Sales Amt",width:"130px"},{field:"misc",header:"Misc Amt",width:"120px"},{field:"totalSales",header:"Product Revenue",width:"130px"},{field:"unitCostExtended",header:"Prod Cost",width:"130px"},{field:"marginAmountExtended",header:"Prod Margin Amt",width:"120px",style:"text-align:right"},{field:"marginPercentage",header:" Prod Margin %",width:"100px",style:"text-align:right"},{field:"freight",header:"Freight",width:"120px",style:"text - align: right"},{field:"taxAmount",header:"Tax Amt",width:"120px"},{field:"totalRevenue",header:"Total Revenue",width:"130px"}],this.selectedColumns=this.headers}},{key:"changeOfStatus",value:function(e,t){"detailedview"==t?(this.initColumns(),this.sales=JSON.parse(JSON.stringify(this.tempSales)),this.pnViewSelected=!1):(this.initSummaryColumns(),this.tempSales=JSON.parse(JSON.stringify(this.sales)),this.pnViewSelected=!0,this.filterParts(this.sales))}},{key:"filterParts",value:function(e){var t=this;this.sales=[];var r=this.getUniqueParts(e,"partNumber");r.length>0&&(r.forEach((function(n,s){var a=e.filter((function(e){return e.partNumber==n.partNumber}));a&&a.length>0&&(r[s]=t.calculateSummarizedRow(a,n),r[s].childParts=a)})),this.sales=r),this.totalRecords=this.sales.length,this.totalPages=Math.ceil(this.totalRecords/this.searchParameters.rows),this.showPaginator=this.totalRecords>0}},{key:"calculateSummarizedRow",value:function(e,t){var r=this;return t=e[0],e.length>1&&(e.splice(0,1),e.forEach((function(e){t.qty=r.getSum(t.qty,e.qty),t.markupExtended=r.getSum(t.markupExtended,e.markupExtended),t.grossSalePrice=r.getSum(t.grossSalePrice,e.grossSalePrice),t.salesDiscountExtended=r.getSum(t.salesDiscountExtended,e.salesDiscountExtended),t.netSales=r.getSum(t.netSales,e.netSales),t.misc=r.getSum(t.misc,e.misc),t.totalSales=r.getSum(t.totalSales,e.totalSales),t.unitCostExtended=r.getSum(t.unitCostExtended,e.unitCostExtended),t.marginAmountExtended=r.getSum(t.marginAmountExtended,e.marginAmountExtended),t.marginPercentage=r.getSum(t.marginPercentage,e.marginPercentage),t.freight=r.getSum(t.freight,e.freight),t.taxAmount=r.getSum(t.taxAmount,e.taxAmount),t.totalRevenue=r.getSum(t.totalRevenue,e.totalRevenue)})),t.marginPercentage=t.marginPercentage/e.length+1),t}},{key:"getSum",value:function(e,t){return Number(e)+Number(t)}},{key:"getUniqueParts",value:function(e,t){var r=JSON.parse(JSON.stringify(e));return r.reduceRight((function(e,n,s){return e.some((function(e){return n[t]===e[t]}))?r.splice(s,1):e.push(n),e}),[]),r}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"userId",get:function(){return console.log(this.authService.currentUser),this.authService.currentUser?this.authService.currentUser.id:0}}]),e}();ot.ctorParameters=function(){return[{type:ae.a},{type:E.b},{type:R.c},{type:N.Router},{type:H.a},{type:j.a},{type:_.a},{type:B.a},{type:z.a}]},ot=n.b([Object(s.Component)({selector:"app-sales-order-analysis",template:n.c(r("8F3F")).default,styles:[n.c(r("s7lY")).default]})],ot);var lt=function e(){_classCallCheck(this,e),this.trackingNum=0,this.houseAirwayBill=0},dt=r("wKas"),ct=function(){function e(t,r,n,s,a,i){_classCallCheck(this,e),this.salesOrderService=t,this.alertService=r,this.commonService=n,this.workorderService=s,this.customerService=a,this.authService=i,this.parts=[],this.headers=[],this.selectedPartNumber=0,this.isSpinnerVisible=!1,this.partsForBilling=[],this.totalRecords=0,this.totalPages=0,this.pageSize=10,this.pageIndex=0,this.first=0,this.showPaginator=!1,this.shippingForm=new lt,this.customerId=0,this.salesOrderPartNumberId=0,this.isView=!1,this.partSelected=!1,this.quoteForm={},this.orignSiteNames=[],this.updateBtnExp=!1,this.soldCustomerAddress=new at.a,this.shipCustomerAddress=new at.a,this.shippingHeader={salesOrderShippingId:0,soShippingStatusId:1,openDate:new Date,shipDate:new Date,isActive:!0,isDeleted:!1,salesOrderCustomsInfo:{masterCompanyId:1,createdBy:"admin",updatedBy:"admin",isActive:!0,isDeleted:!1}},this.shipViaList=[],this.countryList=[],this.shipCustomerSiteList=[],this.siteList=[],this.allWeightUnitOfMeasureInfo=[],this.allSizeUnitOfMeasureInfo=[],this.moduleName=""}return _createClass(e,[{key:"initColumns",value:function(){this.headers=[{field:"shipDate",header:"Ship Date",width:"100px"},{field:"partNumber",header:"PN",width:"100px"},{field:"partDescription",header:"PN Description",width:"100px"},{field:"stockLineNumber",header:"Stk Line Num",width:"110px"},{field:"serialNumber",header:"Ser Num",width:"90px"},{field:"controlNumber",header:"Cntrl Num",width:"90px"},{field:"idNumber",header:"Cntrl ID",width:"90px"},{field:"promisedDate",header:"Promised Date ",width:"100px"},{field:"estimatedShipDate",header:"Est Shipped Date",width:"100px"},{field:"shippingRef",header:"Shipping  Ref",width:"100px"},{field:"pickTicketRef",header:"Pick Ticket Ref",width:"150px"},{field:"pickTicketRef",header:"Pick Ticket Ref",width:"150px"}],this.selectedColumns=this.headers}},{key:"btnChange",value:function(){var e=this.shippingForm.shipWeight?this.shippingForm.shipWeightUnit?1:0:1,t=this.shippingForm.shipSizeLength||this.shippingForm.shipSizeWidth||this.shippingForm.shipSizeHeight?this.shippingForm.shipSizeUnitOfMeasureId?1:0:1;this.shippingForm.exportECCN&&e&&t?this.updateBtnExp=!1:this.updateBtnExp=!0}},{key:"refresh",value:function(e){var t=this;this.initColumns(),this.partsForBilling=[],this.parts=e,this.parts&&this.parts.length>0&&this.parts.forEach((function(e){e.salesOrderPartId&&t.partsForBilling.push(e)})),this.totalRecords=this.partsForBilling.length,this.showPaginator=this.totalRecords>0,this.getShipVia(),this.getCountriesList(),this.getSiteName(),this.getShippingData(),this.getCustomerNameList(),this.getOriginSiteNames(),this.customerDetails&&(this.shippingHeader.soldToName=this.customerDetails.name,this.shippingHeader.shipToName=this.customerDetails.name,this.shippingHeader.shipToCustomerId||(this.shippingHeader.shipToCustomerId=this.customerDetails,this.getSiteNamesByShipCustomerId(this.customerDetails.name)),this.shippingHeader.customerId=this.customerDetails.customerId)}},{key:"errorHandling",value:function(e){var t=this;this.isSpinnerVisible=!1,e.error.errors?e.error.errors.forEach((function(e){t.alertService.showMessage(t.moduleName,e.message,E.d.error)})):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",E.d.error)}},{key:"onSelectPartNumber",value:function(e){0!=e.salesOrderPartId&&(e.selected?this.partSelected=!0:this.partSelected=!1,this.getShippingForSelectedPart(e.salesOrderPartId))}},{key:"getShippingForSelectedPart",value:function(e){var t=this;this.isSpinnerVisible=!0,this.salesOrderService.getSalesOrderShipping(this.salesOrderId,e).subscribe((function(e){t.isSpinnerVisible=!1,t.shippingForm=e||new lt}),(function(e){t.isSpinnerVisible=!1}))}},{key:"loadData",value:function(e){}},{key:"convertDate",value:function(e,t){return"shipDate"!==e&&"promisedDate"!==e&&"estimatedShipDate"!==e||!t[e]?t[e]:G(t[e]).format("MM-DD-YYYY")}},{key:"getOriginSiteNames",value:function(){var e=this;this.orignSiteNames=[],this.commonService.getSitesbymanagementstructrue(this.managementStructureId).subscribe((function(t){t&&t.length>0&&(e.orignSiteNames=t,console.log("this.orignnames",e.orignSiteNames[0]))}),(function(t){e.errorHandling(t)}))}},{key:"calculateExpiryDate",value:function(){}},{key:"getCustomerNameList",value:function(){var e=this;this.commonService.getCustomerNameandCode("",1).subscribe((function(t){e.customerNamesList=t,console.log("res,res",t)}),(function(t){e.errorHandling(t)}))}},{key:"getShipVia",value:function(){var e=this;this.commonService.smartDropDownList("ShippingVia","ShippingViaId","Name").subscribe((function(t){e.shipViaList=t}),(function(t){e.errorHandling(t)}))}},{key:"getSiteName",value:function(){var e=this;this.workorderService.getSiteByCustomerId(this.customerDetails.customerId).subscribe((function(t){e.siteList=t,e.shippingHeader.soldToSiteId||e.siteList.forEach((function(t){t.isPrimary&&(e.shippingHeader.soldToSiteId=t.customerShippingAddressId,e.setSoldToAddress())}))}),(function(t){e.errorHandling(t)}))}},{key:"getCountriesList",value:function(){var e=this;this.commonService.smartDropDownList("Countries","countries_id","nice_name").subscribe((function(t){e.countryList=t}),(function(t){e.errorHandling(t)}))}},{key:"setShipToAddress",value:function(){var e=this;this.shipCustomerSiteList.forEach((function(t){t.customerShippingAddressId==e.shippingHeader.shipToSiteId&&(e.shippingHeader.shipToAddress1=t.address1,e.shippingHeader.shipToAddress2=t.address2,e.shippingHeader.shipToCity=t.city,e.shippingHeader.shipToState=t.stateOrProvince,e.shippingHeader.shipToZip=t.postalCode,e.shippingHeader.shipToCountryId=t.countryId,e.shippingHeader.shipToSiteName=t.siteName,e.shippingHeader.shipToCountryName=t.countryName,e.shippingHeader.shipToCountryId=t.countryId)}))}},{key:"setOriginToAddress",value:function(e){var t=this;console.log("orignsiteId",e),console.log("sitenames",this.orignSiteNames),this.orignSiteNames.forEach((function(r){r.originSiteId==e&&(t.shippingHeader.originName=r.originName,t.shippingHeader.originAddress1=r.originAddress1,t.shippingHeader.originAddress2=r.originAddress2,t.shippingHeader.originCity=r.originCity,t.shippingHeader.originState=r.originState,t.shippingHeader.originZip=r.originZip,t.shippingHeader.originCountryName=r.originCountryName,t.shippingHeader.originCountryId=r.originCountryId,console.log("shipping heder",t.shippingHeader))}))}},{key:"clearShipToAddress",value:function(){this.shipCustomerSiteList=[],this.shippingHeader.shipToAddress1="",this.shippingHeader.shipToAddress2="",this.shippingHeader.shipToCity="",this.shippingHeader.shipToState="",this.shippingHeader.shipToZip="",this.shippingHeader.shipToCountryId="",this.shippingHeader.shipToSiteName="",this.shippingHeader.shipToCountryName="",this.shippingHeader.shipToCountryId=""}},{key:"setSoldToAddress",value:function(){var e=this;this.siteList.forEach((function(t){t.customerShippingAddressId==e.shippingHeader.soldToSiteId&&(e.shippingHeader.soldToAddress1=t.address1,e.shippingHeader.soldToAddress2=t.address2,e.shippingHeader.soldToCity=t.city,e.shippingHeader.soldToState=t.stateOrProvince,e.shippingHeader.soldToZip=t.postalCode,e.shippingHeader.soldToCountryId=t.countryId,e.shippingHeader.soldToSiteName=t.siteName,e.shippingHeader.soldToCountryName=t.countryName)}))}},{key:"assignDetails",value:function(e){1==e&&(this.shippingHeader.shipToCustomerId=this.customerDetails,this.getSiteNamesByShipCustomerId(this.customerDetails),this.shippingHeader.shipToSiteId=this.shippingHeader.soldToSiteId,this.shippingHeader.shipToAddress1=this.shippingHeader.soldToAddress1,this.shippingHeader.shipToAddress2=this.shippingHeader.soldToAddress2,this.shippingHeader.shipToCity=this.shippingHeader.soldToCity,this.shippingHeader.shipToState=this.shippingHeader.soldToState,this.shippingHeader.shipToZip=this.shippingHeader.soldToZip,this.shippingHeader.shipToCountryId=this.shippingHeader.countryId,this.shippingHeader.shipToSiteName=this.shippingHeader.soldToSiteName,this.shippingHeader.shipToCountryName=this.shippingHeader.soldToCountryName,this.shippingHeader.shipToCountryId=this.shippingHeader.soldToCountryId)}},{key:"filterCustomerName",value:function(e){var t=this,r=e.query.toLowerCase();this.commonService.getCustomerNameandCode(r,1).subscribe((function(e){t.customerNamesList=e}),(function(e){t.errorHandling(e)}))}},{key:"getSiteNamesByShipCustomerId",value:function(e){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var r,n=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return console.log("object",e),this.clearShipToAddress(),r=e.customerId,t.next=4,this.customerService.getCustomerShipAddressGet(r).subscribe((function(e){n.shipCustomerShippingOriginalData=e[0],n.shipCustomerSiteList=e[0],n.shipCustomerShippingOriginalData.forEach((function(e){e.isPrimary&&(n.shippingHeader.shipToSiteId=e.customerShippingAddressId,n.setShipToAddress())}))}),(function(e){n.errorHandling(e)}));case 4:case"end":return t.stop()}}),t,this)})))}},{key:"clearAddress",value:function(e,t){""===t&&"SoldTo"===e?this.soldCustomerAddress=new at.a:""===t&&"ShipTo"===e&&(this.shipCustomerAddress=new at.a)}},{key:"getShippingData",value:function(){var e=this;this.isSpinnerVisible=!0,this.salesOrderService.getSalesOrderShipping(this.salesOrderId,this.salesOrderPartNumberId).subscribe((function(t){e.isSpinnerVisible=!1,t&&(t.response||(e.getEditSiteData(t.shipToCustomerId),console.log("this.shipCustomerSiteList",e.shipCustomerSiteList),e.shippingHeader=t,e.shippingHeader.openDate=new Date(e.shippingHeader.openDate),e.shippingHeader.shipDate=new Date(e.shippingHeader.shipDate),e.shippingHeader.shipToCustomerId={customerId:t.shipToCustomerId,customerName:t.shipToCustomer}))}),(function(t){e.isSpinnerVisible=!1,e.errorHandling(t)}))}},{key:"getEditSiteData",value:function(e){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var r=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.customerService.getCustomerShipAddressGet(e).subscribe((function(e){r.shipCustomerSiteList=e[0]}),(function(e){r.errorHandling(e)}));case 2:case"end":return t.stop()}}),t,this)})))}},{key:"save",value:function(){var e=this;this.shippingHeader.salesOrderId=this.salesOrderId,this.shippingHeader.salesOrderPartId=this.salesOrderPartNumberId,this.shippingHeader.masterCompanyId=this.salesOrder.masterCompanyId,this.shippingHeader.salesOrderCustomsInfo.masterCompanyId=this.salesOrder.masterCompanyId,this.shippingHeader.createdBy=this.userName,this.shippingHeader.updatedBy=this.userName,this.shippingHeader.createdDate=(new Date).toDateString(),this.shippingHeader.updatedDate=(new Date).toDateString(),this.shippingHeader.salesOrderCustomsInfo.createdDate=(new Date).toDateString(),this.shippingHeader.salesOrderCustomsInfo.updatedDate=(new Date).toDateString(),this.shippingHeader.trackingNum=23,this.shippingHeader.houseAirwayBill=349,this.shippingHeader.shipToCustomerId=Object(W.a)("customerId",this.shippingHeader.shipToCustomerId),this.isSpinnerVisible=!0,this.salesOrderService.createShipping(this.shippingHeader).subscribe((function(t){e.isSpinnerVisible=!1,e.getEditSiteData(t.shipToCustomerId),e.shippingHeader=t,e.shippingHeader.openDate=new Date(e.shippingHeader.openDate),e.shippingHeader.shipDate=new Date(e.shippingHeader.shipDate),e.shippingHeader.shipToCustomerId={customerId:t.shipToCustomerId,customerName:t.shipToCustomer},e.customerNamesList.forEach((function(r){r.customerId==t.shipToCustomerId&&(e.shippingHeader.shipToCustomerId=r)})),e.alertService.showMessage("Sales Order","Sales Order Shipping created Succesfully",E.d.success),e.getShippingData()}),(function(t){e.isSpinnerVisible=!1,e.errorHandling(t)}))}},{key:"handleError",value:function(e){var t=this;e.error.errors?e.error.errors.forEach((function(e){t.alertService.showMessage(t.moduleName,e.message,E.d.error)})):this.alertService.showMessage(this.moduleName,"Saving data Failed due to some input error",E.d.error)}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();ct.ctorParameters=function(){return[{type:ae.a},{type:E.b},{type:_.a},{type:dt.a},{type:H.a},{type:z.a}]},n.b([Object(s.Input)()],ct.prototype,"parts",void 0),n.b([Object(s.Input)()],ct.prototype,"salesOrderId",void 0),n.b([Object(s.Input)()],ct.prototype,"salesOrder",void 0),n.b([Object(s.Input)()],ct.prototype,"customerId",void 0),n.b([Object(s.Input)()],ct.prototype,"salesOrderPartNumberId",void 0),n.b([Object(s.Input)()],ct.prototype,"isView",void 0),n.b([Object(s.Input)()],ct.prototype,"managementStructureId",void 0),n.b([Object(s.Input)()],ct.prototype,"customerDetails",void 0),ct=n.b([Object(s.Component)({selector:"app-sales-order-shipping",template:n.c(r("oUHZ")).default,animations:[nt.a],styles:[n.c(r("5BKa")).default]})],ct);var ut=function(){function e(t,r,n,s,a,i,o,l,d,c,u){_classCallCheck(this,e),this.customerService=t,this.alertService=r,this.route=n,this.salesQuoteService=s,this.salesOrderService=a,this.commonservice=i,this.currencyService=o,this.employeeService=l,this.authService=d,this.router=c,this.modalService=u,this.totalRecords=0,this.totalPages=0,this.showPaginator=!1,this.salesQuote={},this.soSettingsList=[],this.enableUpdateButton=!0,this.allEmployeeinfo=[],this.customerContactList=[],this.customerWarningData=[],this.selectedParts=[],this.isSpinnerVisible=!0,this.customer={customerName:"",customerCode:"",promisedDate:""},this.display=!1,this.errorMessages=[],this.isEdit=!1,this.isEditModeHeader=!1,this.agentsOriginalList=[],this.salesPersonOriginalList=[],this.salesPersonAndAgentOriginalList=[],this.toggle_po_header=!0,this.isEmailTabEnabled=!1,this.isMemoTabEnabled=!1,this.isPhoneTabEnabled=!1,this.isTextTabEnabled=!1,this.selectedCommunicationTab="",this.customerInfoFromSalesQuote={},this.marginSummary=new _e,this.employeesList=[],this.customerWarning={},this.status=[],this.freight=[],this.charge=[],this.salesQuoteId=0,this.isCreateModeHeader=!1,this.isHeaderSubmit=!1,this.submitType=!0,this.totalFreights=0,this.totalCharges=0,this.enableHeaderSaveBtn=!1,this.bulist=[],this.divisionlist=[],this.maincompanylist=[],this.arrayEmplsit=[],this.allEmployeeList=[],this.controlSettings={showViewQuote:!1},this.moduleName="SalesOrder",this.soStatusList=[],this.soTypeList=[],this.addressType="SO",this.quote={quoteTypeId:null,quoteDate:Date},this.salesOrderCopyParameters=null,this.copyMode=!1,this.copy=null}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;this.loadSOStatus(),this.loadSOType(),this.controlSettings.showViewQuote=!1,this.customerId=+this.route.snapshot.paramMap.get("customerId"),this.id=+this.route.snapshot.paramMap.get("id"),this.SalesOrderId=this.id,this.route.queryParams.subscribe((function(t){e.copyMode=t.cp&&t.cia,e.copyMode&&(e.salesOrderCopyParameters={copyParts:"true"===t.cp,copyInternalApprovals:"true"===t.cia,customerId:e.customerId,salesOrderId:e.id})})),this.salesQuoteService.resetSalesOrderQuote(),this.salesQuoteService.getSalesOrderQuteInstance().subscribe((function(t){e.salesOrderQuote=t})),this.salesQuoteService.getSelectedParts().subscribe((function(t){e.selectedParts=t,e.marginSummary=e.salesQuoteService.getSalesQuoteHeaderMarginDetails(e.selectedParts,e.marginSummary)})),this.managementStructureId=this.currentUserManagementStructureId,this.isEdit||this.load(this.managementStructureId),setTimeout((function(){e.getSoInstance(!0)}),2200),this.salesQuoteService.salesOrderViewSubj$.subscribe((function(t){e.salesOrderView=t})),this.isSpinnerVisible=!1}},{key:"onChangeInput",value:function(){this.enableUpdateButton=!1}},{key:"getInitialDataForSO",value:function(){var e=this,t=this.salesQuote.creditLimitTermsId?this.salesQuote.creditLimitTermsId:0,r=this.salesQuote.accountTypeId?this.salesQuote.accountTypeId:0;this.isSpinnerVisible=!0,Object($.a)(this.customerService.getCustomerCommonDataWithContactsById(this.customerId,this.salesQuote.customerContactId),this.commonservice.getCSRAndSalesPersonOrAgentList(this.currentUserManagementStructureId,this.customerId,this.salesQuote.customerServiceRepId,this.salesQuote.salesPersonId),this.commonservice.smartDropDownList("CustomerWarningType","CustomerWarningTypeId","Name"),this.commonservice.autoSuggestionSmartDropDownList("CustomerType","CustomerTypeId","Description","",!0,100,[r].join()),this.commonservice.autoSuggestionSmartDropDownList("CreditTerms","CreditTermsId","Name","",!0,200,[t].join()),this.salesOrderService.getAllSalesOrderSettings()).subscribe((function(t){e.isSpinnerVisible=!1,e.setAllCustomerContact(t[0]),e.setJobTitles(t[1]);var r=t[5];r&&r.length>0&&(e.soSettingsList=r),e.customerDetails=t[0],e.getCustomerDetails(),e.setTypesOfWarnings(t[2]),e.setAccountTypes(t[3]),e.setCreditTerms(t[4]),e.getDefaultContact()}),(function(t){e.isSpinnerVisible=!1}))}},{key:"getSOMarginSummary",value:function(){var e=this;this.salesOrderService.getSOMarginSummary(this.id).subscribe((function(t){if(t){var r=t;e.marginSummary=r,e.totalCharges=e.marginSummary.misc,e.totalFreights=e.marginSummary.freightAmount,e.salesOrderService.setTotalFreights(e.marginSummary.freightAmount),e.salesOrderService.setTotalCharges(e.marginSummary.misc)}else e.marginSummary=new _e}))}},{key:"getSoInstance",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];this.copyMode?this.copySalesOrderInstance(this.salesOrderCopyParameters.salesOrderId):this.id?(this.getSalesOrderInstance(this.id,e),this.getSOMarginSummary(),this.isEdit=!0):this.salesOrderView?(this.salesQuote=this.salesOrderView.salesOrder,this.commonSalesOrderInstanceForConvertAndEdit(this.salesOrderView),this.getSOMarginSummary()):(this.getNewSalesOrderInstance(this.customerId,e),this.marginSummary=new _e,this.isEdit=!1)}},{key:"parsedText",value:function(e){if(e)return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}},{key:"setTypesOfWarnings",value:function(e){var t=this;e.length>0&&e.filter((function(e){e.label==oe.a.GLOBAL_CUSTOMER_WARNING_TYOE_FOR_SALES_ORDER&&t.getCustomerWarningsData(e.value)}))}},{key:"getCustomerWarningsData",value:function(e){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var r=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.customerService.getCustomerWarningsByCustomerIdandCustomerWarningsListID(this.customerId,e).subscribe((function(e){r.customerWarning=e,r.customerWarning&&r.customerWarning.customerWarningId&&(r.salesQuote.warningId=r.customerWarning.customerWarningId,r.salesQuote.customerWarningId=r.customerWarning.customerWarningId)}),(function(e){r.isSpinnerVisible=!1}));case 2:case"end":return t.stop()}}),t,this)})))}},{key:"setCreditTerms",value:function(e){this.creditTerms=e}},{key:"setAccountTypes",value:function(e){this.accountTypes=e}},{key:"filterfirstName",value:function(e){void 0!==e.query&&null!==e.query&&this.employeedata(e.query,this.salesQuote.managementStructureId),this.enableUpdateButton=!1}},{key:"filtercsrFirstName",value:function(e){this.csrFirstCollection=this.csrOriginalList;var t=_toConsumableArray(this.csrOriginalList.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.csrFirstCollection=t,this.enableUpdateButton=!1}},{key:"filterSalesFirstName",value:function(e){this.salesFirstCollection=this.salesPersonAndAgentOriginalList;var t=_toConsumableArray(this.salesPersonAndAgentOriginalList.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.salesFirstCollection=t,this.enableUpdateButton=!1}},{key:"setJobTitles",value:function(e){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:this.csrOriginalList=e.csrEmpList,this.salesPersonAndAgentOriginalList=e.salesEmpList;case 1:case"end":return t.stop()}}),t,this)})))}},{key:"setCSR",value:function(){this.isEdit&&this.salesOrderObj.customerSeviceRepId&&0!=this.salesOrderObj.customerSeviceRepId?this.salesQuote.customerServiceRepName=Object(W.d)("employeeId",this.salesOrderObj.customerSeviceRepId,this.csrOriginalList):this.customerDetails&&this.customerDetails.csrId&&(this.salesQuote.customerServiceRepName=Object(W.d)("employeeId",this.customerDetails.csrId,this.csrOriginalList))}},{key:"setSalesPerson",value:function(){this.isEdit&&this.salesOrderObj.salesPersonId&&0!=this.salesOrderObj.salesPersonId?this.salesQuote.salesPersonName=Object(W.d)("employeeId",this.salesOrderObj.salesPersonId,this.salesPersonAndAgentOriginalList):this.customerDetails&&this.customerDetails.primarySalesPersonId&&(this.salesQuote.salesPersonName=Object(W.d)("employeeId",this.customerDetails.primarySalesPersonId,this.salesPersonAndAgentOriginalList))}},{key:"filterNames",value:function(e){if(this.customerNames=[],this.allCustomer&&this.allCustomer.length>0)for(var t=0;t<this.allCustomer.length;t++){var r=this.allCustomer[t].name;0==r.toLowerCase().indexOf(e.query.toLowerCase())&&this.customerNames.push(r)}}},{key:"getCustomerDetails",value:function(){this.salesQuote.customerId=this.customerId,this.salesQuote.customerName=this.customerDetails.name,this.salesQuote.customerEmail=this.customerDetails.email,this.salesQuote.customerCode=this.customerDetails.customerCode,this.salesQuote.creditLimit=this.customerDetails.creditLimit,this.salesQuote.creditLimitTermsId=this.customerDetails.creditTermsId,this.customerInfoFromSalesQuote={customerName:this.customerDetails.name,customerCode:this.customerDetails.customerCode,customerId:this.customerDetails.customerId},this.id?this.setValidDaysBasedOnSettings(!0):(this.salesQuote.contractReferenceName=this.customerDetails.contractReference,this.salesQuote.restrictPMA=this.customerDetails.restrictPMA,this.salesQuote.restrictDER=this.customerDetails.restrictDER,this.salesQuote.accountTypeId=this.customerDetails.customerTypeId,this.setValidDaysBasedOnSettings(!1)),this.setSalesPerson(),this.setCSR()}},{key:"getDefaultContact",value:function(){if(this.customerContactList&&this.customerContactList.length>0)for(var e=0;e<this.customerContactList.length;e++)this.customerContactList[e].isDefaultContact&&(this.salesQuote.customerContactId=this.customerContactList[e].contactId)}},{key:"setAllCustomerContact",value:function(e){this.customerContactList=e.contactList}},{key:"commonSalesOrderInstanceForConvertAndEdit",value:function(e){this.salesOrderView=e,this.salesOrderObj=this.salesOrderView.salesOrder;for(var t=this.salesOrderView.parts,r=0;r<t.length;r++){var n=t[r],s=new Oe.a;s.itemMasterId=n.itemMasterId,s.stockLineId=n.stockLineId,s.fixRate=n.fxRate,s.quantityFromThis=n.qty,s.conditionId=n.conditionId,s.conditionDescription=n.conditionDescription,s.currencyId=n.currencyId,s.currencyDescription=n.currencyDescription,s.partNumber=n.partNumber,s.description=n.partDescription,s.stockLineNumber=n.stockLineNumber,n.isOEM&&(s.pmaStatus="OEM"),n.isPMA&&(s.pmaStatus="PMA"),n.isDER&&(s.pmaStatus="DER"),s.salesPricePerUnit=n.unitSalePrice,s.salesPriceExtended=n.salesBeforeDiscount,s.salesDiscount=n.discount,s.salesDiscountPerUnit=n.discountAmount,s.netSalesPriceExtended=n.netSales,s.masterCompanyId=n.masterCompanyId,s.quantityFromThis=n.qty,s.markUpPercentage=n.markUpPercentage,s.salesOrderPartId=n.salesOrderPartId,s.salesOrderId=n.salesOrderId,s.markupExtended=n.markupExtended,s.method=n.method,s.methodType=n.methodType,s.serialNumber=n.serialNumber,s.marginAmountExtended=n.marginAmountExtended,s.marginPercentagePerUnit=n.marginPercentage,s.markupExtended=n.markupExtended,s.unitCostPerUnit=n.unitCost,s.unitCostExtended=n.unitCostExtended,s.salesOrderQuoteId=n.salesOrderQuoteId,s.salesOrderQuotePartId=n.salesOrderQuotePartId,this.selectedParts.push(s)}this.salesQuote.managementStructureId=this.salesOrderObj.managementStructureId,this.managementStructureId=this.salesOrderObj.managementStructureId,this.salesQuote.priorities=this.salesOrderView.priorities,this.salesQuote.leadSources=this.salesOrderView.leadSources,this.status=this.salesOrderView.status&&this.salesOrderView.status.length>0?this.salesOrderView.status.slice(0):[],this.salesQuote.salesOrderQuoteId=this.salesOrderObj.salesOrderQuoteId,this.salesQuote.quoteTypeId=this.salesOrderObj.typeId,this.salesQuote.statusId=this.salesOrderObj.statusId,this.salesQuote.statusChangeDate=null,this.salesQuote.openDate=new Date(this.salesOrderObj.openDate),this.salesQuote.numberOfItems=this.salesOrderObj.numberOfItems,this.salesQuote.salesOrderNumber=this.salesOrderObj.salesOrderNumber,this.salesQuote.accountTypeId=this.salesOrderObj.accountTypeId,this.salesQuote.customerId=this.salesOrderObj.customerId,this.salesQuote.customerContactId=this.salesOrderObj.customerContactId,this.salesQuote.customerReferenceName=this.salesOrderObj.customerReference,this.salesQuote.quoteApprovedById=this.salesOrderObj.approvedById,this.salesQuote.totalSalesAmount=this.salesOrderObj.totalSalesAmount,this.salesQuote.customerHold=this.salesOrderObj.customerHold,this.salesQuote.depositAmount=this.salesOrderObj.depositAmount,this.salesQuote.balanceDue=this.salesOrderObj.balanceDue,this.salesQuote.employeeName=Object(W.d)("value",this.salesOrderObj.employeeId,this.allEmployeeList),this.salesOrderQuote.managementStructureId=this.salesOrderObj.managementStructureId,this.salesOrderQuote.shipToUserTypeId=this.salesOrderObj.shipToUserTypeId,this.salesOrderQuote.shipToUserId=this.salesOrderObj.shipToUserId,this.salesOrderQuote.shipToAddressId=this.salesOrderObj.shipToAddressId,this.salesOrderQuote.shipViaId=this.salesOrderObj.shipViaId,this.salesOrderQuote.billToContactId=this.salesOrderObj.billToContactId,this.salesOrderQuote.shipToContactId=this.salesOrderObj.shipToContactId,this.salesOrderQuote.shipToSiteName=this.salesOrderObj.shipToSiteName,this.salesOrderQuote.shipToAddress1=this.salesOrderObj.shipToAddress1,this.salesOrderQuote.shipToAddress2=this.salesOrderObj.shipToAddress2,this.salesOrderQuote.shipToCity=this.salesOrderObj.shipToCity,this.salesOrderQuote.shipToState=this.salesOrderObj.shipToState,this.salesOrderQuote.shipToPostalCode=this.salesOrderObj.shipToPostalCode,this.salesOrderQuote.shipToCountry=this.salesOrderObj.shipToCountry,this.salesOrderQuote.shipViaName=this.salesOrderObj.shipViaName,this.salesOrderQuote.shipViaShippingAccountInfo=this.salesOrderObj.shipViaShippingAccountInfo,this.salesOrderQuote.shippingId=this.salesOrderObj.shippingId,this.salesOrderQuote.shippingURL=this.salesOrderObj.shippingURL,this.salesOrderQuote.shipViaMemo=this.salesOrderObj.shipViaMemo,this.salesOrderQuote.shipViaShippingURL=this.salesOrderObj.shipViaShippingURL,this.salesOrderQuote.billToUserTypeId=this.salesOrderObj.billToUserTypeId,this.salesOrderQuote.billToUserId=this.salesOrderObj.billToUserId,this.salesOrderQuote.billToAddressId=this.salesOrderObj.billToAddressId,this.salesOrderQuote.billToSiteName=this.salesOrderObj.billToSiteName,this.salesOrderQuote.billToAddress1=this.salesOrderObj.billToAddress1,this.salesOrderQuote.billToAddress2=this.salesOrderObj.billToAddress2,this.salesOrderQuote.billToCity=this.salesOrderObj.billToCity,this.salesOrderQuote.billToState=this.salesOrderObj.billToState,this.salesOrderQuote.billToPostalCode=this.salesOrderObj.billToPostalCode,this.salesOrderQuote.billToCountry=this.salesOrderObj.billToCountry,this.salesOrderQuote.billToMemo=this.salesOrderObj.billToMemo,this.salesOrderQuote.salesOrderQuoteId=this.salesOrderObj.salesOrderQuoteId,this.salesQuote.creditLimit=this.salesOrderObj.creditLimit,this.salesQuote.creditLimitTermsId=this.salesOrderObj.creditTermId,this.salesQuote.restrictPMA=this.salesOrderObj.restrictPMA,this.salesQuote.restrictDER=this.salesOrderObj.restrictDER,this.salesOrderObj.approvedDate&&(this.salesQuote.approvedDate=new Date(this.salesOrderObj.approvedDate)),this.salesQuote.currencyId=this.salesOrderObj.currencyId,this.salesQuote.warningId=this.salesOrderObj.customerWarningId,this.salesQuote.memo=this.salesOrderObj.memo,this.salesQuote.notes=this.salesOrderObj.notes}},{key:"getSalesOrderInstance",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.isSpinnerVisible=!0,this.salesOrderService.getSalesOrder(e).subscribe((function(e){t.isSpinnerVisible=!1,e&&(t.salesOrderView=e&&e.length?e[0]:null,t.bindData(t.salesOrderView,r))}),(function(e){t.isSpinnerVisible=!1}))}},{key:"copySalesOrderInstance",value:function(e){var t=this;this.isSpinnerVisible=!0,this.salesOrderService.copy(e).subscribe((function(e){t.getSOMarginSummary(),t.load(t.managementStructureId),t.salesOrderView=e&&e.length?e[0]:null,t.salesOrderCopyParameters&&(t.salesOrderCopyParameters.copyParts||(t.salesOrderView.parts=[])),t.bindData(t.salesOrderView),t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1}))}},{key:"bindData",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.salesOrderObj=e.salesOrder,this.salesOrderObj&&this.salesOrderObj.salesOrderQuoteId&&this.salesOrderObj.salesOrderQuoteId&&(this.controlSettings.showViewQuote=!0);for(var r=this.salesOrderView.parts,n=0;n<r.length;n++){var s=r[n],a=this.salesOrderService.marshalSOPartToView(s,this.salesOrderObj);this.selectedParts.push(a)}this.marginSummary=this.salesQuoteService.getSalesQuoteHeaderMarginDetails(this.selectedParts,this.marginSummary),this.salesOrderPartNumberComponent.refresh(),this.salesQuote.managementStructureId=this.salesOrderObj.managementStructureId,this.managementStructureId=this.salesOrderObj.managementStructureId,this.salesQuote.priorities=this.salesOrderView.priorities,this.salesQuote.leadSources=this.salesOrderView.leadSources,this.salesQuote.salesQuoteTypes=this.salesOrderObj.typeId&&this.salesOrderObj.typeId>0?Object(W.g)("label","value",this.salesOrderObj.typeId,this.soTypeList):"",this.salesQuote.status=this.salesOrderObj.statusId&&this.salesOrderObj.statusId>0?Object(W.g)("label","value",this.salesOrderObj.statusId,this.soStatusList):"",this.salesQuote.statusId=this.salesOrderObj.statusId,this.salesQuote.masterCompanyId=this.masterCompanyId,this.status=this.salesQuote.status&&this.salesQuote.status.length>0?this.salesQuote.status.slice(0):[],this.salesQuote.salesOrderQuoteId=this.salesOrderObj.salesOrderQuoteId,this.salesQuote.quoteTypeId=this.salesOrderObj.typeId,this.salesQuote.statusChangeDate=new Date(this.salesOrderObj.statusChangeDate),this.salesQuote.openDate=new Date(this.salesOrderObj.openDate),this.salesQuote.contractReferenceName=this.salesOrderObj.contractReference,this.salesQuote.versionNumber=this.salesOrderObj.salesOrderQuoteVersionNumber,this.salesQuote.numberOfItems=this.salesOrderObj.numberOfItems,this.salesQuote.salesOrderNumber=this.salesOrderObj.salesOrderNumber,this.salesQuote.accountTypeId=this.salesOrderObj.accountTypeId,this.salesQuote.customerId=this.salesOrderObj.customerId,this.salesQuote.customerContactId=this.salesOrderObj.customerContactId,this.salesQuote.customerReferenceName=this.salesOrderObj.customerReference,this.salesQuote.quoteApprovedById=this.salesOrderObj.approvedById,this.salesQuote.totalSalesAmount=this.salesOrderObj.totalSalesAmount,this.salesQuote.customerHold=this.salesOrderObj.customerHold,this.salesQuote.depositAmount=this.salesOrderObj.depositAmount,this.salesQuote.balanceDue=this.salesOrderObj.balanceDue,this.salesQuote.salesOrderQuoteNumber=this.salesOrderObj.salesOrderQuoteNumber,this.salesQuote.employeeId=Object(W.d)("value",this.salesOrderObj.employeeId,this.allEmployeeList),this.setSalesPerson(),this.setCSR(),this.salesQuote.employeeName=Object(W.d)("value",this.salesOrderObj.employeeId,this.allEmployeeList),this.salesOrderQuote.managementStructureId=this.salesOrderObj.managementStructureId,this.salesOrderQuote.shipToUserTypeId=this.salesOrderObj.shipToUserTypeId,this.salesOrderQuote.shipToUserId=this.salesOrderObj.shipToUserId,this.salesOrderQuote.shipToAddressId=this.salesOrderObj.shipToAddressId,this.salesOrderQuote.shipViaId=this.salesOrderObj.shipViaId,this.salesOrderQuote.billToContactId=this.salesOrderObj.billToContactId,this.salesOrderQuote.shipToContactId=this.salesOrderObj.shipToContactId,this.salesOrderQuote.shipToSiteName=this.salesOrderObj.shipToSiteName,this.salesOrderQuote.shipToAddress1=this.salesOrderObj.shipToAddress1,this.salesOrderQuote.shipToAddress2=this.salesOrderObj.shipToAddress2,this.salesOrderQuote.shipToCity=this.salesOrderObj.shipToCity,this.salesOrderQuote.shipToState=this.salesOrderObj.shipToState,this.salesOrderQuote.shipToPostalCode=this.salesOrderObj.shipToPostalCode,this.salesOrderQuote.shipToCountry=this.salesOrderObj.shipToCountry,this.salesOrderQuote.shipViaName=this.salesOrderObj.shipViaName,this.salesOrderQuote.shipViaShippingAccountInfo=this.salesOrderObj.shipViaShippingAccountInfo,this.salesOrderQuote.shippingId=this.salesOrderObj.shippingId,this.salesOrderQuote.shippingURL=this.salesOrderObj.shippingURL,this.salesOrderQuote.shipViaMemo=this.salesOrderObj.shipViaMemo,this.salesOrderQuote.shipViaShippingURL=this.salesOrderObj.shipViaShippingURL,this.salesOrderQuote.billToUserTypeId=this.salesOrderObj.billToUserTypeId,this.salesOrderQuote.billToUserId=this.salesOrderObj.billToUserId,this.salesOrderQuote.billToAddressId=this.salesOrderObj.billToAddressId,this.salesOrderQuote.billToSiteName=this.salesOrderObj.billToSiteName,this.salesOrderQuote.billToAddress1=this.salesOrderObj.billToAddress1,this.salesOrderQuote.billToAddress2=this.salesOrderObj.billToAddress2,this.salesOrderQuote.billToCity=this.salesOrderObj.billToCity,this.salesOrderQuote.billToState=this.salesOrderObj.billToState,this.salesOrderQuote.billToPostalCode=this.salesOrderObj.billToPostalCode,this.salesOrderQuote.billToCountry=this.salesOrderObj.billToCountry,this.salesOrderQuote.billToMemo=this.salesOrderObj.billToMemo,this.salesOrderQuote.salesOrderQuoteId=this.salesOrderObj.salesOrderQuoteId,this.salesQuote.creditLimit=this.salesOrderObj.creditLimit,this.salesQuote.creditLimitTermsId=this.salesOrderObj.creditTermId,this.salesQuote.restrictPMA=this.salesOrderObj.restrictPMA,this.salesQuote.restrictDER=this.salesOrderObj.restrictDER,this.salesOrderObj.approvedDate&&(this.salesQuote.approvedDate=new Date(this.salesOrderObj.approvedDate)),this.salesQuote.currencyId=this.salesOrderObj.currencyId,this.salesQuote.warningId=this.salesOrderObj.customerWarningId,this.salesQuote.memo=this.salesOrderObj.memo,this.salesQuote.notes=this.salesOrderObj.notes,this.salesQuote.salesOrderQuoteNumber=this.salesOrderObj.salesOrderQuoteNumber,this.salesQuote.isApproved=this.salesOrderObj.isApproved,this.salesQuote.companyId=this.salesOrderObj.masterCompanyId,this.salesQuote.buId=this.salesOrderObj.buId,this.salesQuote.divisionId=this.salesOrderObj.divisionId,this.salesQuote.departmentId=this.salesOrderObj.departmentId,this.salesQuote.customerServiceRepId=this.salesOrderObj.customerSeviceRepId,this.salesQuote.salesPersonId=this.salesOrderObj.salesPersonId,this.load(this.managementStructureId),t&&this.getInitialDataForSO()}},{key:"getNewSalesOrderInstance",value:function(e){var t=this;arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.isSpinnerVisible=!0,this.salesOrderService.getNewSalesOrderInstance(e).subscribe((function(e){t.salesQuote=e&&e.length?e[0]:null,t.load(t.managementStructureId),t.salesQuote&&(t.status=t.salesQuote.status&&t.salesQuote.status.length>0?t.salesQuote.status.slice(0):[]),t.salesQuote.shippedDate=null,t.salesQuote.openDate=new Date,t.salesQuote.statusId=1,t.salesQuote.validForDays=10,t.salesQuote.quoteExpiryDate=new Date,t.onChangeValidForDays(),t.salesQuote.employeeName=Object(W.d)("value",t.employeeId,t.allEmployeeList),t.salesQuote.salesOrderNumber="Generating",t.getInitialDataForSO(),t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1}))}},{key:"onChangeValidForDays",value:function(){var e=new Date(this.salesQuote.openDate),t=+this.salesQuote.validForDays,r=new Date(this.salesQuote.openDate);r.setDate(e.getDate()+t),this.salesQuote.quoteExpiryDate=r}},{key:"onChangeOpenDate",value:function(){var e=new Date(this.salesQuote.openDate),t=+this.salesQuote.validForDays,r=new Date(this.salesQuote.openDate);r.setDate(e.getDate()+t),this.salesQuote.quoteExpiryDate=r,this.enableUpdateButton=!1}},{key:"viewSelectedRow",value:function(){this.modal=this.modalService.open(J.a,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.componentInstance.customerId=this.customerId}},{key:"setValidDaysBasedOnSettings",value:function(e){if(this.soSettingsList.length>0){var t=this.soSettingsList[0];t?(e||(this.salesQuote.quoteTypeId=t.typeId,this.salesQuote.statusId=t.defaultStatusId,this.salesQuote.statusName=t.defaultStatusName),this.defaultSettingPriority=t.defaultPriorityId):this.soTypeList.length>0&&(this.salesQuote.quoteTypeId=this.soTypeList[0].value)}else this.soTypeList.length>0&&(this.salesQuote.quoteTypeId=this.soTypeList[0].value)}},{key:"onAddDescription",value:function(e){this.tempMemo="","notes"==e&&(this.tempMemoLabel="Notes",this.tempMemo=this.salesQuote.notes),"memo"==e&&(this.tempMemoLabel="Memo",this.tempMemo=this.salesQuote.memo)}},{key:"onSaveDescription",value:function(){"Notes"==this.tempMemoLabel&&(this.salesQuote.notes=this.tempMemo),"Memo"==this.tempMemoLabel&&(this.salesQuote.memo=this.tempMemo),this.enableUpdateButton=!1}},{key:"closeErrorMessage",value:function(){this.errorModal.close()}},{key:"onSubmit",value:function(e){var t=this;arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.errorMessages=[];var r=!1;if(this.salesQuote.quoteTypeId<=0&&(this.errorMessages.push("Please select Type"),r=!0),this.salesQuote.openDate||(this.errorMessages.push("Please select Open Date"),r=!0),this.salesQuote.creditLimit||(this.errorMessages.push("Please select Credit Limit"),r=!0),this.salesQuote.creditLimitTermsId||(this.errorMessages.push("Please select Credit Terms"),r=!0),this.salesQuote.accountTypeId<=0&&(this.errorMessages.push("Please select Account Type"),r=!0),this.salesQuote.customerContactId<0&&(this.errorMessages.push("Please select Customer Contact"),r=!0),this.salesQuote.employeeId||(this.errorMessages.push("Please select employee"),r=!0),this.isCreateModeHeader&&(this.salesOrderQuote.shipToSiteName||(this.errorMessages.push("Please select Ship To SiteName"),r=!0),this.salesOrderQuote.shipToContactId||(this.errorMessages.push("Please select Ship To Contact"),r=!0),this.salesOrderQuote.billToSiteName||(this.errorMessages.push("Please select Bill To SiteName"),r=!0),this.salesOrderQuote.billToContactId||(this.errorMessages.push("Please select Bill To Contact"),r=!0)),r){var n=this.errorMessagePop;this.errorModal=this.modalService.open(n,{size:"sm",backdrop:"static",keyboard:!1}),this.display=!0}else{this.display=!1,this.isSpinnerVisible=!0,this.salesOrder=new Ue,this.salesOrder.salesOrderId=this.id,this.salesOrder.typeId=this.salesQuote.quoteTypeId,this.salesOrder.openDate=this.salesQuote.openDate.toDateString(),this.salesOrder.numberOfItems=this.salesQuote.numberOfItems,this.salesOrder.masterCompanyId=this.masterCompanyId,this.salesOrder.accountTypeId=this.salesQuote.accountTypeId,this.salesOrder.customerId=this.salesQuote.customerId,this.salesOrder.customerName=this.salesQuote.customerName,this.salesOrder.customerCode=this.salesQuote.customerCode,this.salesOrder.customerContactId=this.salesQuote.customerContactId,this.salesOrder.customerReference=this.salesQuote.customerReferenceName,this.salesOrder.customerReference="SO",this.salesOrder.currencyId=this.salesQuote.currencyId,this.salesOrder.totalSalesAmount=this.salesQuote.totalSalesAmount,this.salesOrder.customerHold=this.salesQuote.customerHold,this.salesOrder.depositAmount=this.salesQuote.depositAmount,this.salesOrder.balanceDue=this.salesQuote.balanceDue,this.salesOrder.approvedById=this.salesQuote.quoteApprovedById,this.salesQuote.approvedDate&&(this.salesOrder.approvedDate=this.salesQuote.approvedDate.toDateString()),this.salesOrder.priorityId=this.salesQuote.priorityId,this.salesOrder.managementStructureId=this.salesQuote.managementStructureId,this.salesOrder.creditLimit=this.salesQuote.creditLimit,this.salesOrder.creditTermId=this.salesQuote.creditLimitTermsId,this.salesOrder.restrictPMA=this.salesQuote.restrictPMA,this.salesOrder.restrictDER=this.salesQuote.restrictDER,this.customerWarning&&this.customerWarning.customerWarningId?this.salesOrder.customerWarningId=this.customerWarning.customerWarningId:this.salesOrder.customerWarningId=this.salesQuote.warningId,this.salesOrder.contractReference=this.salesQuote.contractReferenceName,this.salesOrder.salesPersonId=Object(W.a)("employeeId",this.salesQuote.salesPersonName),this.salesOrder.agentId=Object(W.a)("employeeId",this.salesQuote.agentId),this.salesOrder.agentName=Object(W.a)("name",this.salesQuote.agentId),this.salesOrder.customerSeviceRepId=Object(W.a)("employeeId",this.salesQuote.customerServiceRepName),this.salesOrder.employeeId=Object(W.a)("value",this.salesQuote.employeeId),this.salesOrder.billToContactName=Object(W.a)("firstName",this.salesOrderQuote.billToContactId),this.salesOrder.billToContactId=Object(W.a)("contactId",this.salesOrderQuote.billToContactId),this.salesOrder.shipToContactName=Object(W.a)("firstName",this.salesOrderQuote.shipToContactId),this.salesOrder.shipToContactId=Object(W.a)("contactId",this.salesOrderQuote.shipToContactId),this.salesOrder.shipToUserId=Object(W.a)("value",this.salesOrderQuote.shipToUserId),this.salesOrder.billToUserId=Object(W.a)("value",this.salesOrderQuote.billToUserId),this.id&&(this.salesOrder.statusId=this.salesQuote.statusId,this.salesOrder.statusChangeDate=null),this.salesOrder.shipToUserTypeId=this.salesOrderQuote.shipToUserTypeId,this.salesOrder.shipToAddressId=this.salesOrderQuote.shipToAddressId,this.salesOrder.shipViaId=this.salesOrderQuote.shipViaId,this.salesOrder.shipToSiteName=this.salesOrderQuote.shipToSiteName,this.salesOrder.shipToAddress1=this.salesOrderQuote.shipToAddress1,this.salesOrder.shipToAddress2=this.salesOrderQuote.shipToAddress2,this.salesOrder.shipToCity=this.salesOrderQuote.shipToCity,this.salesOrder.shipToState=this.salesOrderQuote.shipToState,this.salesOrder.shipToPostalCode=this.salesOrderQuote.shipToPostalCode,this.salesOrder.shipToCountry=this.salesOrderQuote.shipToCountry,this.salesOrder.shipViaName=this.salesOrderQuote.shipViaName,this.salesOrder.shipViaShippingAccountInfo=this.salesOrderQuote.shipViaShippingAccountInfo,this.salesOrder.shippingId=this.salesOrderQuote.shippingId,this.salesOrder.shippingURL=this.salesOrderQuote.shippingURL,this.salesOrder.shipViaMemo=this.salesOrderQuote.shipViaMemo,this.salesOrder.shipViaShippingURL=this.salesOrderQuote.shipViaShippingURL,this.salesOrder.billToUserTypeId=this.salesOrderQuote.billToUserTypeId,this.salesOrder.billToAddressId=this.salesOrderQuote.billToAddressId,this.salesOrder.billToSiteName=this.salesOrderQuote.billToSiteName,this.salesOrder.billToAddress1=this.salesOrderQuote.billToAddress1,this.salesOrder.billToAddress2=this.salesOrderQuote.billToAddress2,this.salesOrder.billToCity=this.salesOrderQuote.billToCity,this.salesOrder.billToState=this.salesOrderQuote.billToState,this.salesOrder.billToPostalCode=this.salesOrderQuote.billToPostalCode,this.salesOrder.billToCountry=this.salesOrderQuote.billToCountry,this.salesOrder.billToMemo=this.salesOrderQuote.billToMemo,this.salesOrderQuote.salesOrderQuoteId=null,this.salesOrder.memo=this.salesQuote.memo,this.salesOrder.notes=this.salesQuote.notes,this.salesOrder.createdBy=this.userName,this.salesOrder.updatedBy=this.userName,this.salesOrder.createdOn=(new Date).toDateString(),this.salesOrder.updatedOn=(new Date).toDateString(),this.salesOrderView=new Be,this.salesQuote.salesOrderQuoteId&&(this.salesOrder.salesOrderQuoteId=this.salesQuote.salesOrderQuoteId),this.salesOrderView.salesOrder=this.salesOrder;for(var s=[],a=!1,i=!1,o=0;o<this.selectedParts.length;o++){var l=this.selectedParts[o],d="";if(l.customerRequestDate||(this.isSpinnerVisible=!1,a=!0,d+="<br />Please enter Customer Request Date."),l.estimatedShipDate||(this.isSpinnerVisible=!1,a=!0,d+="<br />Please enter Estimated Ship Date."),l.promisedDate||(this.isSpinnerVisible=!1,a=!0,d+="<br />Please enter Promised Date."),l.priorityId||(this.isSpinnerVisible=!1,a=!0,d+="<br />Please enter priority ID."),l.customerRequestDate&&l.promisedDate&&l.estimatedShipDate&&(l.customerRequestDate<this.salesQuote.openDate||l.estimatedShipDate<this.salesQuote.openDate||l.promisedDate<this.salesQuote.openDate)&&(i=!0),!i&&!a){var c=this.salesOrderService.marshalSOPartToSave(l,this.userName);s.push(c)}}this.salesOrderView.parts=s,this.marginSummary=this.salesQuoteService.getSalesQuoteHeaderMarginDetails(this.salesOrderView.parts,this.marginSummary),this.id?a?(this.isSpinnerVisible=!1,this.alertService.resetStickyMessage(),this.alertService.showStickyMessage("Sales Order",d,E.d.error)):i?(this.isSpinnerVisible=!1,this.alertService.resetStickyMessage(),this.alertService.showStickyMessage("Sales Order","Please select valid Dates for Sales Order PartsList!",E.d.error)):(this.marginSummary.salesOrderId=this.id,this.salesOrderService.createSOMarginSummary(this.marginSummary).subscribe((function(e){t.marginSummary.soMarginSummaryId=e})),this.salesOrderService.update(this.salesOrderView).subscribe((function(e){t.isSpinnerVisible=!1,t.alertService.showMessage("Success","Sales Order updated successfully.",E.d.success),t.router.navigateByUrl("salesmodule/salespages/sales-order-list")}),(function(e){t.isSpinnerVisible=!1}))):this.salesOrderService.create(this.salesOrderView).subscribe((function(e){t.salesCreateHeaderOrderId=e[0].salesOrderId,t.salesOrderView.salesOrder.salesOrderId=t.salesCreateHeaderOrderId,t.isCreateModeHeader=!0,t.isHeaderSubmit=!0,t.isSpinnerVisible=!1,t.alertService.showMessage("Success","Sales Order created successfully.",E.d.success),t.toggle_po_header=!1,t.id=t.salesCreateHeaderOrderId,t.salesCreateHeaderOrderId&&t.router.navigateByUrl("salesmodule/salespages/sales-order-edit/".concat(t.customerId,"/").concat(t.salesCreateHeaderOrderId)),t.isCreateModeHeader||t.router.navigateByUrl("salesmodule/salespages/sales-quote-list")}),(function(e){t.isSpinnerVisible=!1}))}}},{key:"onPartsApprovedEvent",value:function(){this.selectedParts=[],this.getSalesOrderInstance(this.id)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"viewSoQuote",value:function(e,t){var r=this;this.isSpinnerVisible=!0,this.salesQuoteService.getview(t).subscribe((function(t){r.salesQuoteView=t[0],r.modal=r.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),r.isSpinnerVisible=!1}),(function(e){r.isSpinnerVisible=!1}))}},{key:"onSalesOrderActionClick",value:function(e){var t=this;switch(this.isEmailTabEnabled=!0,e.actionType){case Re.NewSalesOrder:this.router.navigateByUrl("salesmodule/salespages/sales-order-create/"+this.salesOrderView.salesOrder.customerId);break;case Re.ViewQuote:this.salesOrderQuote.salesOrderQuoteId&&this.viewSoQuote(this.viewQuoteModal,this.salesOrderQuote.salesOrderQuoteId);break;case Re.CloseSalesOrder:e.confirmType===qe.Yes&&this.salesOrderService.close(this.salesOrderView.salesOrder.salesOrderId).subscribe((function(e){t.router.navigateByUrl("salesmodule/salespages/sales-order-list")}),(function(e){t.isSpinnerVisible=!1}));break;case Re.CancelSalesOrder:e.confirmType===qe.Yes&&this.salesOrderService.cancel(this.salesOrderView.salesOrder.salesOrderId).subscribe((function(e){t.router.navigateByUrl("salesmodule/salespages/sales-order-list")}),(function(e){t.isSpinnerVisible=!1}));break;case Re.MakeDuplicate:break;case Re.Memo:this.selectedCommunicationTab="memo";break;case Re.Email:this.selectedCommunicationTab="email";break;case Re.Phone:this.selectedCommunicationTab="phone";break;case Re.Text:this.selectedCommunicationTab="text";break;case Re.EmailSalesOrder:case Re.PrintSalesOrder:this.selectedCommunicationTab="Quotemail"}}},{key:"openConfirmationModal",value:function(e){this.submitType=e,this.modal=this.modalService.open(this.updateConfirmationModal,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"closeConfirmationModal",value:function(){this.modal&&this.modal.close()}},{key:"createNewSalesOrderQuoteVersion",value:function(){this.closeConfirmationModal(),this.onSubmit(this.submitType,!0)}},{key:"updateSalesOrderQuote",value:function(){this.closeConfirmationModal(),this.onSubmit(this.submitType,!1)}},{key:"onTabChange",value:function(e){0==e.index&&this.salesOrderPartNumberComponent.refresh(),1==e.index&&this.salesOrderApproveComponent.refresh(this.marginSummary),2==e.index&&this.salesOrderCustomerApprovalComponent.refresh(this.marginSummary,this.salesOrderView.salesOrder.salesOrderId,this.salesOrderView.salesOrder.salesOrderQuoteId),3==e.index&&this.salesAddressComponent.refresh(this.salesOrderQuote),4==e.index&&this.salesOrderFreightComponent.refresh(!1),5==e.index&&this.salesOrderChargesComponent.refresh(!1),6==e.index&&this.salesOrderShippingComponent.refresh(this.selectedParts),7==e.index&&this.salesOrderBillingComponent.refresh(this.selectedParts),9==e.index&&this.salesOrderAnalysisComponent.refresh(this.id)}},{key:"updateMarginSummary",value:function(){var e=this;this.isSpinnerVisible=!0,this.marginSummary.salesOrderId=this.id,this.salesOrderService.createSOMarginSummary(this.marginSummary).subscribe((function(t){e.marginSummary.soMarginSummaryId=t,e.isSpinnerVisible=!1}),(function(t){e.isSpinnerVisible=!1}))}},{key:"onPartsSaveEvent",value:function(e){e&&(this.marginSummary=this.salesQuoteService.getSalesQuoteHeaderMarginDetails(e,this.marginSummary),this.updateMarginSummary())}},{key:"setFreightsOrCharges",value:function(){var e=this;this.salesQuoteService.selectedParts&&this.salesQuoteService.selectedParts.length>0&&this.salesQuoteService.selectedParts.forEach((function(t,r){e.salesQuoteService.selectedParts[r].freight=e.totalFreights,e.salesQuoteService.selectedParts[r].misc=e.totalCharges})),this.marginSummary=this.salesQuoteService.getSalesQuoteHeaderMarginDetails(this.salesQuoteService.selectedParts,this.marginSummary)}},{key:"saveSalesOrderFreightsList",value:function(e){this.totalFreights=e,this.marginSummary.freightAmount=this.totalFreights,this.salesOrderService.setTotalFreights(e),this.setFreightsOrCharges(),this.updateMarginSummary()}},{key:"updateSalesOrderFreightsList",value:function(e){this.totalFreights=e,this.marginSummary.freightAmount=this.totalFreights,this.salesOrderService.setTotalFreights(e),this.setFreightsOrCharges(),this.updateMarginSummary()}},{key:"saveSalesOrderChargesList",value:function(e){this.totalCharges=e,this.salesOrderService.setTotalCharges(e),this.marginSummary.misc=this.totalCharges,this.setFreightsOrCharges(),this.updateMarginSummary()}},{key:"updateSalesOrderChargesList",value:function(e){this.totalCharges=e,this.salesOrderService.setTotalCharges(e),this.marginSummary.misc=this.totalCharges,this.setFreightsOrCharges(),this.updateMarginSummary()}},{key:"load",value:function(e){this.managementStructureId=e,this.id?this.getManagementStructureDetails(this.managementStructureId,this.employeeId,this.salesQuote.managementStructureId):this.getManagementStructureDetails(this.managementStructureId,this.employeeId)}},{key:"enableHeaderSave",value:function(){this.enableHeaderSaveBtn=!0}},{key:"checkValidOnChange",value:function(e,t){null!=e&&0!=e&&"companyId"==t&&(this.managementValidCheck=!1)}},{key:"getManagementStructureDetails",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;r=0==r?this.employeeId:r,n=this.isEditModeHeader?n=e:0,this.isSpinnerVisible=!0,this.commonservice.getManagmentStrctureData(e,r,n).subscribe((function(e){if(t.isSpinnerVisible=!1,e){var r=e;r[0]&&"Level1"==r[0].level?(t.maincompanylist=r[0].lstManagmentStrcture,t.salesQuote.companyId=r[0].managementStructureId,t.salesQuote.managementStructureId=r[0].managementStructureId,t.salesQuote.buId=0,t.salesQuote.divisionId=0,t.salesQuote.departmentId=0,t.bulist=[],t.divisionlist=[],t.departmentList=[]):(t.salesQuote.companyId=0,t.salesQuote.buId=0,t.salesQuote.divisionId=0,t.salesQuote.departmentId=0,t.maincompanylist=[],t.bulist=[],t.divisionlist=[],t.departmentList=[]),r[1]&&"Level2"==r[1].level?(t.bulist=r[1].lstManagmentStrcture,t.salesQuote.buId=r[1].managementStructureId,t.salesQuote.managementStructureId=r[1].managementStructureId,t.salesQuote.divisionId=0,t.salesQuote.departmentId=0,t.divisionlist=[],t.departmentList=[]):(r[1]&&"NEXT"==r[1].level&&(t.bulist=r[1].lstManagmentStrcture),t.salesQuote.buId=0,t.salesQuote.divisionId=0,t.salesQuote.departmentId=0,t.divisionlist=[],t.departmentList=[]),r[2]&&"Level3"==r[2].level?(t.divisionlist=r[2].lstManagmentStrcture,t.salesQuote.divisionId=r[2].managementStructureId,t.salesQuote.managementStructureId=r[2].managementStructureId,t.salesQuote.departmentId=0,t.departmentList=[]):(r[2]&&"NEXT"==r[2].level&&(t.divisionlist=r[2].lstManagmentStrcture),t.salesQuote.divisionId=0,t.salesQuote.departmentId=0,t.departmentList=[]),r[3]&&"Level4"==r[3].level?(t.departmentList=r[3].lstManagmentStrcture,t.salesQuote.departmentId=r[3].managementStructureId,t.salesQuote.managementStructureId=r[3].managementStructureId):(t.salesQuote.departmentId=0,r[3]&&"NEXT"==r[3].level&&(t.departmentList=r[3].lstManagmentStrcture)),t.employeedata("",t.salesQuote.managementStructureId)}}),(function(e){t.isSpinnerVisible=!1}))}},{key:"employeedata",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;0==this.arrayEmplsit.length&&this.arrayEmplsit.push(0),this.arrayEmplsit.push(null==this.employeeId?0:this.employeeId);var n=this.salesQuote.employeeId;if(this.salesQuote.employeeId){var s=this.salesQuote.employeeId;s.employeeId&&(n=s.employeeId,this.arrayEmplsit.push(s.employeeId))}else n=this.employeeId;this.isSpinnerVisible=!0,this.commonservice.autoCompleteDropdownsEmployeeByMS(t,!0,20,this.arrayEmplsit.join(),r).subscribe((function(t){e.isSpinnerVisible=!1,e.allEmployeeList=t,e.firstCollection=t,e.currentUserEmployeeName=Object(W.g)("label","value",n,t),e.isEdit||e.getEmployeerOnLoad(n)}),(function(t){e.isSpinnerVisible=!1}))}},{key:"getEmployeerOnLoad",value:function(e){this.salesQuote.employeeId=Object(W.d)("value",e,this.allEmployeeList)}},{key:"getBUList",value:function(e){var t=this;this.salesQuote.buId=0,this.salesQuote.divisionId=0,this.salesQuote.departmentId=0,this.bulist=[],this.divisionlist=[],this.departmentList=[],0!=e&&null!=e&&null!=e?(this.salesQuote.managementStructureId=e,this.salesQuote.companyId=e,this.commonservice.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe((function(e){t.bulist=e,t.employeedata("",t.salesQuote.managementStructureId)}),(function(e){t.isSpinnerVisible=!1}))):(this.salesQuote.managementStructureId=0,this.salesQuote.companyId=0)}},{key:"getDivisionlist",value:function(e){var t=this;this.divisionlist=[],this.departmentList=[],this.salesQuote.divisionId=0,this.salesQuote.departmentId=0,0!=e&&null!=e&&null!=e?(this.salesQuote.managementStructureId=e,this.salesQuote.buId=e,this.commonservice.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe((function(e){t.divisionlist=e}),(function(e){t.isSpinnerVisible=!1}))):this.salesQuote.managementStructureId=this.salesQuote.companyId}},{key:"getDepartmentlist",value:function(e){var t=this;this.salesQuote.departmentId=0,this.departmentList=[],0!=e&&null!=e&&null!=e?(this.salesQuote.divisionId=e,this.salesQuote.managementStructureId=e,this.commonservice.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe((function(e){t.departmentList=e}),(function(e){t.isSpinnerVisible=!1}))):(this.salesQuote.managementStructureId=this.salesQuote.buId,this.salesQuote.divisionId=0)}},{key:"getDepartmentId",value:function(e){0!=e&&null!=e&&null!=e?(this.salesQuote.managementStructureId=e,this.salesQuote.departmentId=e):(this.salesQuote.managementStructureId=this.salesQuote.divisionId,this.salesQuote.departmentId=0)}},{key:"loadSOStatus",value:function(){var e=this;this.commonservice.smartDropDownList("MasterSalesOrderQuoteStatus","Id","Name").subscribe((function(t){t&&(e.soStatusList=t,e.soStatusList=e.soStatusList.sort((function(e,t){return e.value>t.value?1:t.value>e.value?-1:0})))}),(function(t){e.isSpinnerVisible=!1}))}},{key:"loadSOType",value:function(){var e=this;this.commonservice.smartDropDownList("MasterSalesOrderQuoteTypes","Id","Name").subscribe((function(t){t&&(e.soTypeList=t,e.soTypeList=e.soTypeList.sort((function(e,t){return e.value>t.value?1:t.value>e.value?-1:0})))}),(function(t){e.isSpinnerVisible=!1}))}},{key:"getChargesList",value:function(){}},{key:"getFreightList",value:function(){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"masterCompanyId",get:function(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:1}},{key:"userId",get:function(){return this.authService.currentUser?this.authService.currentUser.id:0}},{key:"employeeId",get:function(){return this.authService.currentUser?this.authService.currentUser.employeeId:0}},{key:"currentUserManagementStructureId",get:function(){return this.authService.currentUser?this.authService.currentUser.managementStructureId:null}}]),e}();ut.ctorParameters=function(){return[{type:H.a},{type:E.b},{type:N.ActivatedRoute},{type:F.a},{type:ae.a},{type:_.a},{type:B.a},{type:j.a},{type:z.a},{type:N.Router},{type:R.c}]},n.b([Object(s.ViewChild)("newSalesOrderForm",{static:!1})],ut.prototype,"newSalesOrderForm",void 0),n.b([Object(s.ViewChild)("errorMessagePop",{static:!1})],ut.prototype,"errorMessagePop",void 0),n.b([Object(s.ViewChild)("newSalesQuoteForm",{static:!1})],ut.prototype,"newSalesQuoteForm",void 0),n.b([Object(s.ViewChild)(Ze,{static:!1})],ut.prototype,"salesOrderFreightComponent",void 0),n.b([Object(s.ViewChild)(et,{static:!1})],ut.prototype,"salesOrderChargesComponent",void 0),n.b([Object(s.ViewChild)(rt,{static:!1})],ut.prototype,"salesOrderPartNumberComponent",void 0),n.b([Object(s.ViewChild)(X,{static:!1})],ut.prototype,"managementStructureComponent",void 0),n.b([Object(s.ViewChild)(ie,{static:!1})],ut.prototype,"salesAddressComponent",void 0),n.b([Object(s.ViewChild)(He,{static:!1})],ut.prototype,"salesOrderConfirmationModalComponent",void 0),n.b([Object(s.ViewChild)(it,{static:!1})],ut.prototype,"salesOrderBillingComponent",void 0),n.b([Object(s.ViewChild)(ct,{static:!1})],ut.prototype,"salesOrderShippingComponent",void 0),n.b([Object(s.ViewChild)(ot,{static:!1})],ut.prototype,"salesOrderAnalysisComponent",void 0),n.b([Object(s.Input)()],ut.prototype,"salesQuoteId",void 0),n.b([Object(s.ViewChild)(We,{static:!1})],ut.prototype,"salesOrderApproveComponent",void 0),n.b([Object(s.ViewChild)(Ke,{static:!1})],ut.prototype,"salesOrderCustomerApprovalComponent",void 0),n.b([Object(s.ViewChild)("updateConfirmationModal",{static:!1})],ut.prototype,"updateConfirmationModal",void 0),n.b([Object(s.ViewChild)("viewQuote",{static:!1})],ut.prototype,"viewQuoteModal",void 0),ut=n.b([Object(s.Component)({selector:"app-sales-order-create",template:n.c(r("N9pX")).default,styles:[n.c(r("9vx5")).default]})],ut);var pt=function(){function e(){_classCallCheck(this,e),this.init()}return _createClass(e,[{key:"init",value:function(){this.first=0,this.rows=10,this.limit=5,this.pageCount=10,this.page=10}},{key:"reset",value:function(){this.init()}}]),e}(),mt=function(){function e(t,r,n,s,a,i){_classCallCheck(this,e),this.customerService=t,this.alertService=r,this.modalService=n,this.router=s,this.commonservice=a,this.datePipe=i,this.totalRecords=0,this.totalPages=0,this.showPaginator=!1,this.pageSize=10,this.pageIndex=0,this.first=0,this.isSpinnerVisible=!1,this.headers=[{field:"name",header:"Name"},{field:"customerCode",header:"Code"},{field:"accountType",header:"Account Type"},{field:"customerType",header:"Type"},{field:"customerClassificationType",header:"Classification"},{field:"email",header:"Email"},{field:"city",header:"City"},{field:"stateOrProvince",header:"State"},{field:"contact",header:"Contact"},{field:"salesPersonPrimary",header:"Sales Person"}],this.selectedColumns=this.headers,this.customerWarning={},this.selectedOnly=!1}return _createClass(e,[{key:"ngOnInit",value:function(){this.query=new pt,this.breadcrumbs=[{label:"Sales Order"},{label:"Create Sales Order"}]}},{key:"getList",value:function(e){var t=this;this.isSpinnerVisible=!0;var r=Object.assign({},e,{filters:Object(W.j)(e.filters)});this.customerService.getCustomerAll(r).subscribe((function(e){t.isSpinnerVisible=!1,t.data=e.results,t.totalRecords=e.totalRecordsCount,t.totalPages=Math.ceil(t.totalRecords/t.pageSize)}),(function(e){t.isSpinnerVisible=!1}))}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){""!=this.filteredText&&null!=this.filteredText&&null!=this.filteredText?this.globalSearch(this.filteredText):this.table.reset()}},{key:"globalSearch",value:function(e){this.pageIndex=this.lazyLoadEventData.rows>10?parseInt(this.lazyLoadEventData.first)/this.lazyLoadEventData.rows:0,this.pageSize=this.lazyLoadEventData.rows,this.lazyLoadEventData.first=this.pageIndex,this.lazyLoadEventData.globalFilter=e,this.filteredText=e,this.lazyLoadEventData.filters=Object.assign({},this.lazyLoadEventData.filters),this.getList(this.lazyLoadEventData)}},{key:"loadData",value:function(e){this.lazyLoadEventData=e;var t=parseInt(e.first)/e.rows;this.pageIndex=t,this.pageSize=e.rows,e.first=t,this.getList(e)}},{key:"filterData",value:function(e){}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"viewSelectedRow",value:function(e){this.modal=this.modalService.open(J.a,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.componentInstance.customerId=e.customerId,this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"onSearch",value:function(e){this.query.reset(),this.searchCustomer()}},{key:"onPaging",value:function(e){this.totalRecords>0&&(this.query.first=e.first,this.query.rows=e.rows,this.searchCustomer())}},{key:"createOrder",value:function(e){this.getTypesOfWarnings(e.customerId)}},{key:"getTypesOfWarnings",value:function(e){var t=this;this.isSpinnerVisible=!0,this.commonservice.smartDropDownList("CustomerWarningType","CustomerWarningTypeId","Name").subscribe((function(r){r.length>0&&(t.isSpinnerVisible=!1,r.filter((function(r){r.label==oe.a.GLOBAL_CUSTOMER_WARNING_TYOE_FOR_SALES_ORDER&&t.getCustomerRestrictionsData(r.value,e)})))}),(function(e){t.isSpinnerVisible=!1}))}},{key:"getCustomerRestrictionsData",value:function(e,t){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function r(){var n=this;return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return this.isSpinnerVisible=!0,r.next=3,this.customerService.getCustomerRestrictionsByCustomerIdandCustomerWarningsListID(t,e).subscribe((function(r){n.isSpinnerVisible=!1,n.customerWarning=r,n.customerWarning.customerId=t,0==r.customerWarningId?n.getCustomerWarningsData(e,t):(n.modal=n.modalService.open(n.restrictionPopup,{size:"lg",backdrop:"static",keyboard:!1}),n.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")})))}),(function(e){n.isSpinnerVisible=!1}));case 3:case"end":return r.stop()}}),r,this)})))}},{key:"getCustomerWarningsData",value:function(e,t){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function r(){var n=this;return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return this.isSpinnerVisible=!0,r.next=3,this.customerService.getCustomerWarningsByCustomerIdandCustomerWarningsListID(t,e).subscribe((function(e){n.isSpinnerVisible=!1,n.customerWarning=e,n.customerWarning.customerId=t,0==e.customerWarningId?n.moveToCreate(t):(n.modal=n.modalService.open(n.warningPopup,{size:"lg",backdrop:"static",keyboard:!1}),n.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")})))}),(function(e){n.isSpinnerVisible=!1}));case 3:case"end":return r.stop()}}),r,this)})))}},{key:"onDataLoadFailed",value:function(e){this.isSpinnerVisible=!1;var t="";e.message&&(t=e.message),this.alertService.resetStickyMessage(),this.alertService.showStickyMessage("Sales Order Quote",t,E.d.error,e)}},{key:"moveToCreate",value:function(e){this.closeModal(),this.router.navigateByUrl("salesmodule/salespages/sales-order-create/"+e)}},{key:"closeModal",value:function(){this.modal&&this.modal.close()}},{key:"searchCustomer",value:function(){var e=this;this.alertService.startLoadingMessage(),this.customerService.getServerPages(this.query).subscribe((function(t){e.customers=t[0].customerList,e.totalRecords=t[0].totalRecordsCount,e.totalPages=Math.ceil(e.totalRecords/e.query.rows),e.showPaginator=e.totalRecords>0,e.alertService.stopLoadingMessage()}))}},{key:"mouseOverData",value:function(e,t){if("customerClassificationType"===e)return t.customerClassification}},{key:"getColorCodeForMultiple",value:function(e){return"Multiple"===e.customerClassificationType?"green":"black"}},{key:"closePopupModal",value:function(){L("#downloadConfirmation").modal("hide")}},{key:"exportCSV",value:function(e){var t=this;this.isSpinnerVisible=!0;var r={first:0,rows:e.totalRecords,sortOrder:1,filters:{status:!0,isDeleted:!1},globalFilter:""};Object.keys(e.filters).forEach((function(t){r.filters[t]=e.filters[t].value})),this.customerService.getCustomerAll(r).subscribe((function(r){e._value=r.results.map((function(e){return Object.assign({},e,{createdDate:e.createdDate?t.datePipe.transform(e.createdDate,"MMM-dd-yyyy hh:mm a"):"",updatedDate:e.updatedDate?t.datePipe.transform(e.updatedDate,"MMM-dd-yyyy hh:mm a"):""})})),e.exportCSV(),e.value=t.data,t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1}))}}]),e}();mt.ctorParameters=function(){return[{type:H.a},{type:E.b},{type:R.c},{type:N.Router},{type:_.a},{type:a.DatePipe}]},n.b([Object(s.ViewChild)("warningPopup",{static:!1})],mt.prototype,"warningPopup",void 0),n.b([Object(s.ViewChild)("restrictionPopup",{static:!1})],mt.prototype,"restrictionPopup",void 0),mt=n.b([Object(s.Component)({selector:"app-sales-order-create",template:n.c(r("7Tzj")).default,providers:[a.DatePipe],styles:[n.c(r("etp1")).default]})],mt);var ht=function(){function e(t,r,n,s,a,i,o,l,d,c){_classCallCheck(this,e),this.salesQuoteService=t,this.salesOrderService=r,this.alertService=n,this.modalService=s,this.router=a,this.customerService=i,this.employeeService=o,this.commonservice=l,this.currencyService=d,this.authService=c,this.sales=[],this.totalRecords=0,this.totalPages=0,this.pageSize=10,this.pageIndex=0,this.first=0,this.showPaginator=!1,this.isSpinnerVisible=!1,this.selectedParts=[],this.allEmployeeinfo=[],this.customerWarningData=[],this.statusList=[],this.currentStatus="0",this.breadcrumbs=[{label:"Sales Order"},{label:" Confirmation List"}]}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;this.initColumns(),this.isSpinnerVisible=!0,this.salesOrderService.getsoconfirmationlist().subscribe((function(t){e.isSpinnerVisible=!1,e.sales=t[0]}),(function(t){e.isSpinnerVisible=!1}))}},{key:"onDataLoadFailed",value:function(e){this.isSpinnerVisible=!1,this.alertService.showMessage("Sales Order",e,E.d.error)}},{key:"initColumns",value:function(){this.headers=[{field:"soConformationNumber",header:"SO Conf Num",width:"130",type:"text"},{field:"customerName",header:"SO Num",width:"110px",type:"text"},{field:"openDate",header:"SO Date",width:"110px",type:"date"},{field:"partNumber",header:"PN",width:"110px",type:"text"},{field:"partDescription",header:"PN Description",width:"120px",type:"text"},{field:"serialNumber",header:"Serial Num",width:"110px",type:"text"},{field:"uom",header:"UOM",width:"80px",type:"text"},{field:"qty",header:"Qty Ordered",width:"110px",type:"text"},{field:"qtyReserved",header:"Qty Confirmed",width:"110px",type:"text"},{field:"confirmedBy",header:"Confirmed By",width:"110px",type:"text"},{field:"estimatedShipDate",header:"Est Ship Date",width:"110px",type:"date"},{field:"salesOrderNumber",header:"SO Num",width:"110px",type:"text"},{field:"customerName",header:"Customer",width:"110px",type:"text"},{field:"customerMemo",header:"Memo",width:"130px",type:"text"}],this.selectedColumns=this.headers}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"loadData",value:function(e){e.filters.statusId=this.currentStatus,this.searchParameters.first=parseInt(e.first)/e.rows,this.searchParameters.rows=e.rows,this.searchParameters.sortOrder=e.sortOrder,this.lazyLoadEventData=e,this.searchParameters.filters=Object(W.j)(e.filters),this.searchParameters.globalFilter="",this.onSearch()}},{key:"onSearch",value:function(){var e=this;this.isSpinnerVisible=!0,this.salesOrderService.search(this.searchParameters).subscribe((function(t){e.sales=t[0].results,e.totalRecords=t[0].totalRecordsCount,e.totalPages=Math.ceil(e.totalRecords/e.searchParameters.rows),e.showPaginator=e.totalRecords>0,e.isSpinnerVisible=!1}),(function(t){e.isSpinnerVisible=!1}))}},{key:"globalSearch",value:function(e){var t=this;this.searchParameters.globalFilter=e,this.salesOrderService.globalSearch(this.searchParameters).subscribe((function(e){t.sales=e[0].results,t.totalRecords=e[0].totalRecordsCount,t.totalPages=Math.ceil(t.totalRecords/t.searchParameters.rows),t.showPaginator=t.totalRecords>0,t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1}))}},{key:"viewSelectedRow",value:function(e,t){var r=this;this.isSpinnerVisible=!0,this.salesOrderService.getview(t.salesOrderId).subscribe((function(t){console.log(t,"view res+++"),r.salesOrderView=t[0],r.modal=r.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),r.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")})),r.isSpinnerVisible=!1}),(function(e){r.isSpinnerVisible=!1}))}},{key:"deleteQuote",value:function(){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"userId",get:function(){return console.log(this.authService.currentUser),this.authService.currentUser?this.authService.currentUser.id:0}}]),e}();ht.ctorParameters=function(){return[{type:F.a},{type:ae.a},{type:E.b},{type:R.c},{type:N.Router},{type:H.a},{type:j.a},{type:_.a},{type:B.a},{type:z.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],ht.prototype,"searchParameters",void 0),ht=n.b([Object(s.Component)({selector:"sales-order-confirmation-list",template:n.c(r("hUYh")).default,styles:[n.c(r("8kP8")).default]})],ht);var gt=function(){function e(){_classCallCheck(this,e),this.moduleType="SOQ"}return _createClass(e,[{key:"ngOnInit",value:function(){}}]),e}();gt=n.b([Object(s.Component)({selector:"app-soq-approval-rule",template:n.c(r("6/vK")).default,styles:[n.c(r("c50w")).default]})],gt);var bt=function(){function e(){_classCallCheck(this,e),this.moduleType="SO"}return _createClass(e,[{key:"ngOnInit",value:function(){}}]),e}(),vt=[{path:"salespages",component:A,children:[{path:"sales-quote",component:Ve},{path:"sales-quote-create/:customerId",component:Le},{path:"sales-quote-edit/:customerId/:id",component:Le},{path:"sales-quote-edit/:id",component:null},{path:"sales-quote-list",component:Y,data:{title:"Sales Quote List"}},{path:"sales-order",component:mt},{path:"sales-order-create/:customerId",component:ut},{path:"sales-order-edit/:customerId/:id",component:ut},{path:"sales-order-copy/:customerId/:id",component:ut},{path:"sales-order-edit/:id",component:null},{path:"sales-order-list",component:Ee,data:{title:"Sales Order List"}},{path:"sales-order-confirmation-list",component:ht,data:{title:"SO Confirmation List"}},{path:"app-soq-approval-rule",component:gt,data:{title:"Sales Order Quote Approval Rule"}},{path:"app-so-approval-rule",component:bt=n.b([Object(s.Component)({selector:"app-so-approval-rule",template:n.c(r("Vqvs")).default,styles:[n.c(r("5pas")).default]})],bt),data:{title:"Sales Order Approval Rule"}}]}],ft=function e(){_classCallCheck(this,e)};ft=n.b([Object(s.NgModule)({imports:[N.RouterModule.forChild(vt)],exports:[N.RouterModule],providers:[]})],ft);var yt=r("ix9C"),St=r("BY74"),It=r("Ph3x"),Ct=r("Xtwf"),wt=r("TeDh"),xt=function(){function e(t,r,n){_classCallCheck(this,e),this.itemMasterService=t,this.salesQuoteService=r,this.conditionService=n,this.isStockLineViewMode=!1,this.close=new s.EventEmitter,this.select=new s.EventEmitter,this.selectedParts=[],this.allConditionInfo=[],this.searchType=Ct.a.ItemMaster,this.showModalMargin=!1}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;this.getConditions(),this.salesQuoteService.getSearchPartResult().subscribe((function(t){e.parts=t})),this.salesQuoteService.getSearchPartObject().subscribe((function(t){e.query=t,e.searchType=e.getSearchType(e.query.partSearchParamters.itemSearchType)}))}},{key:"getConditions",value:function(){var e=this;this.conditionService.getConditionList().subscribe((function(t){var r=t[0].filter((function(e){return 1==e.isActive}));if(r&&r.length>0&&(e.allConditionInfo=r,e.selectedSummaryRow)&&!e.allConditionInfo.find((function(t){return t.conditionId==e.query.partSearchParamters.conditionId}))){var n=t[0].find((function(t){return t.conditionId==e.query.partSearchParamters.conditionId}));n&&e.allConditionInfo.push(n)}}))}},{key:"getSearchType",value:function(e){var t=Ct.a.None;switch(e){case"1":t=Ct.a.ItemMaster;break;case"2":t=Ct.a.StockLine}return t}},{key:"show",value:function(e){this.display=e}},{key:"onClose",value:function(){this.close.emit(!0)}},{key:"onAddPartNumberSubmit",value:function(e){this.display=!1}},{key:"onPartSearch",value:function(e){var t=this;this.parts=e.data,this.parts.length>0&&this.parts.forEach((function(e,r){t.parts[r].qtyToOrder=t.query.partSearchParamters.quantityRequested})),this.salesQuoteService.updateSearchPartResult(this.parts),this.salesQuoteService.getSearchPartObject().subscribe((function(e){t.query=e,t.searchType=t.getSearchType(t.query.partSearchParamters.itemSearchType)}))}},{key:"updateQuantiy",value:function(){for(var e=0,t=0,r=0;r<this.parts.length;r++)t+=this.parts[r].qtyAvailable,e+=this.parts[r].qtyOnHand;this.query.partSearchParamters.qtyAvailable=t,this.query.partSearchParamters.qtyOnHand=e,this.salesQuoteService.updateSearchPartObject(this.query)}},{key:"onSearchTypeChange",value:function(e){}},{key:"onShowModalMargin",value:function(e){this.select.emit(e)}},{key:"onSelect",value:function(e){this.select.emit(e)}},{key:"showMarginDetails",value:function(){var e=document.querySelector("#btnMarginDetails");e&&e.click()}}]),e}();xt.ctorParameters=function(){return[{type:It.a},{type:F.a},{type:wt.a}]},n.b([Object(s.Input)()],xt.prototype,"selectedSummaryRow",void 0),n.b([Object(s.Input)()],xt.prototype,"isStockLineViewMode",void 0),n.b([Object(s.Input)()],xt.prototype,"display",void 0),n.b([Object(s.Input)()],xt.prototype,"customer",void 0),n.b([Object(s.Input)()],xt.prototype,"salesQuote",void 0),n.b([Object(s.Output)()],xt.prototype,"close",void 0),n.b([Object(s.Output)()],xt.prototype,"select",void 0),n.b([Object(s.Input)()],xt.prototype,"selectedParts",void 0),xt=n.b([Object(s.Component)({selector:"app-add-sales-part-number",template:n.c(r("P/OL")).default,styles:[n.c(r("RFtn")).default]})],xt);var Ot=function e(){_classCallCheck(this,e),this.customer={customerName:"",customerCode:"",promisedDate:""}};n.b([Object(s.Input)()],Ot.prototype,"customer",void 0),n.b([Object(s.Input)()],Ot.prototype,"salesQuote",void 0),Ot=n.b([Object(s.Component)({selector:"app-customer-detail",template:n.c(r("ErrZ")).default,styles:[n.c(r("qszz")).default]})],Ot);var kt=r("tQ1x"),Dt=r("435O"),Tt=r("XZq/"),Mt=function(){function e(t,r,n,a,i,o,l){_classCallCheck(this,e),this.modalService=t,this.itemMasterService=r,this.stockLineService=n,this.salesQuoteService=a,this.router=i,this.alertService=o,this.conditionService=l,this.parts=[],this.isStockLineViewMode=!1,this.selectedParts=[],this.onPartSearch=new s.EventEmitter,this.onSearchTypeChange=new s.EventEmitter,this.partDetailsList=[],this.displayPartError=!1,this.enableMultiSearch=!1,this.errorMessages=[],this.multiPartNumbers="",this.multiSearchResult=[],this.isSpinnerVisible=!1,this.partEditDisable=!1,this.partDetails=[],this.query=new kt.a,this.partDetail={id:null,partNumber:"",partDescription:""},this.resetActionButtons()}return _createClass(e,[{key:"openSalesMarginWithSummaryRow",value:function(e){if(e){this.partDetail.partNumber=e.partNumber,this.partDetail.partDescription=e.partDescription,this.query.partSearchParamters.partNumber=e.partNumber,this.query.partSearchParamters.partId=e.partId,this.query.partSearchParamters.partDescription=e.partDescription,this.query.partSearchParamters.quantityAlreadyQuoted=e.quantityAlreadyQuoted,this.query.partSearchParamters.quantityRequested=e.quantityRequested,this.query.partSearchParamters.conditionId=e.conditionId;var t={exist:!1,partDescription:"",partId:"",partNumber:"",restricted:!1,stockType:""};t.partDescription=e.partDescription,t.partId=e.partId,t.partNumber=e.partNumber,t.stockType=e.pmaStatus,this.partDetails.push(t),this.query.partSearchParamters.partNumberObj=t,this.calculate()}}},{key:"ngOnInit",value:function(){var e=this;this.loadData(),this.salesQuoteService.getSearchPartObject().subscribe((function(t){e.query=t,e.calculate()})),this.selectedSummaryRow?(this.onPartNumberSelect(this.selectedSummaryRow),this.openSalesMarginWithSummaryRow(this.selectedSummaryRow),(Number(this.query.partSearchParamters.quantityToQuote)>0||this.isStockLineViewMode)&&this.search("",!0),this.partEditDisable=!0):this.partEditDisable=!1}},{key:"initColumns",value:function(){this.columns=[{field:null,header:"",width:"50px"},{field:"partNumber",header:"PN",width:"200px"},{field:"partNumber",header:"PN Description",width:"200px"},{field:"conditionType",header:"Condition Type",width:"200px"},{field:"alternatePartNumber",header:"Alternate PN",width:"200px"},{field:"qtyAvailable",header:"Qty Available",width:"200px"},{field:"qtyOnHand",header:"Qty On Hand",width:"200px"},{field:"qtyRequested",header:"Qty Requested",width:"200px"},{field:"",header:"Actions",width:"100px"}]}},{key:"formatStringToNumberGlobal",value:function(e){var t=Number(e.toString().replace(/\,/g,""));return Object(W.c)(t)}},{key:"loadData",value:function(){}},{key:"resetActionButtons",value:function(){this.searchDisabled=!0,this.historicalDisabled=!0}},{key:"search",value:function(e){var t=this,r=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=JSON.parse(JSON.stringify(this.query));if(n.partSearchParamters.restrictDER=!n.partSearchParamters.restrictDER,n.partSearchParamters.restrictPMA=!n.partSearchParamters.restrictPMA,r||e.preventDefault(),this.query.partSearchParamters.includeMultiplePartNumber)this.getMultipartsQuery();else switch(this.query.partSearchParamters.itemSearchType){case Ct.a.StockLine:this.isSpinnerVisible=!0,this.stockLineService.searchstocklinefromsoqpop(n).subscribe((function(e){t.isSpinnerVisible=!1;var r=e.data||[],n=0,s=0;if(r.length>0)for(var a=0;a<r.length;a++)n+=r[a].qtyOnHand,s+=r[a].qtyAvailable;t.query.partSearchParamters.qtyOnHand=n,t.query.partSearchParamters.qtyAvailable=s,t.onPartSearch.emit(e)}),(function(e){t.isSpinnerVisible=!1}));break;default:this.isSpinnerVisible=!0,this.itemMasterService.searchitemmasterfromsoqpop(n).subscribe((function(e){t.isSpinnerVisible=!1,e&&e.data&&e.data[0]&&(t.query.partSearchParamters.qtyOnHand=e.data[0].qtyOnHand,t.query.partSearchParamters.qtyAvailable=e.data[0].qtyAvailable),t.onPartSearch.emit(e)}),(function(e){t.isSpinnerVisible=!1}))}}},{key:"calculate",value:function(){this.query.partSearchParamters.conditionId>0&&this.query.partSearchParamters.partNumber&&Object(W.c)(this.query.partSearchParamters.quantityRequested)>0?this.searchDisabled=!1:this.searchDisabled=!0;var e=+Object(W.c)(this.query.partSearchParamters.quantityRequested);e&&(this.query.partSearchParamters.quantityToQuote=e-Object(W.c)(this.query.partSearchParamters.quantityAlreadyQuoted)),this.query.partSearchParamters.quantityToQuote<0?(this.searchDisabled=!0,this.alertService.showStickyMessage("","Qty To Quote can not be negative",E.d.error)):this.alertService.resetStickyMessage(),this.salesQuoteService.updateSearchPartObject(this.query)}},{key:"ptnumberlistdata",value:function(){var e=this;this.itemMasterService.getPrtnumberslistList().subscribe((function(t){return e.onptnmbersSuccessful(t[0])}))}},{key:"onptnmbersSuccessful",value:function(e){this.partDetails=e}},{key:"onPartNumberSelect",value:function(e){this.resetActionButtons(),this.query.partSearchParamters.partNumber=e.partNumber,this.query.partSearchParamters.partId=e.partId,this.query.partSearchParamters.partDescription=e.partDescription,this.query.partSearchParamters.customerId=this.salesQuote.customerId,this.query.partSearchParamters.conditionId=0,this.query.partSearchParamters.quantityAlreadyQuoted=0,this.query.partSearchParamters.quantityRequested=0,this.query.partSearchParamters.quantityRequired=0,this.query.partSearchParamters.quantityToQuote=0,this.query.partSearchParamters.qtyOnHand=0,this.query.partSearchParamters.qtyAvailable=0,this.query.partSearchParamters.includeMultiplePartNumber=!1,this.enableMultiSearch=!1,this.query.partSearchParamters.conditionId>0&&this.query.partSearchParamters.quantityRequested>0&&(this.searchDisabled=!1),this.calculate()}},{key:"onConditionSelect",value:function(){this.query.partSearchParamters.conditionId>0&&this.query.partSearchParamters.partNumber&&this.query.partSearchParamters.quantityRequested>0&&(this.searchDisabled=!1)}},{key:"searchPartByPartNumber",value:function(e){var t=this;this.isSpinnerVisible=!1,this.searchDisabled=!0,this.partDetails=_toConsumableArray(this.partDetailsList);var r={partNumber:e.query,restrictPMA:this.query.partSearchParamters.restrictPMA,restrictDER:this.query.partSearchParamters.restrictDER,customerId:this.salesQuote.customerId,custRestrictDER:this.salesQuote.restrictDER,custRestrictPMA:this.salesQuote.restrictPMA,includeAlternatePartNumber:this.query.partSearchParamters.includeAlternatePartNumber,includeEquivalentPartNumber:this.query.partSearchParamters.includeEquivalentPartNumber,idlist:"0"};this.itemMasterService.searchPartNumberAdvanced(r).subscribe((function(e){t.isSpinnerVisible=!1,e&&e.length>0?(t.partDetailsList=e,t.partDetails=_toConsumableArray(t.partDetailsList)):(t.partDetailsList=[],t.partDetails=[])}),(function(e){t.partDetailsList=[],t.partDetails=[],t.isSpinnerVisible=!1}))}},{key:"onDataLoadFailed",value:function(e){this.isSpinnerVisible=!1;var t=e,r="";if(t.message){if(t.error&&t.error.errors.length>0)for(var n=0;n<t.error.errors.length;n++)r=r+t.error.errors[n].message+"<br/>";this.alertService.showMessage(t.error.message,r,E.d.error)}else this.alertService.showMessage("Error",e.error,E.d.error)}},{key:"onChangeSearchType",value:function(e){this.partDetails=[];var t=Ct.a.None;switch(e.target.value){case"1":t=Ct.a.ItemMaster;break;case"2":t=Ct.a.StockLine}this.onSearchTypeChange.emit(t)}},{key:"openMultiPartSearch",value:function(){this.multiPartModal=this.modalService.open(this.searchMultiPart,{size:"lg"}),this.multiPartModal.result.then((function(){}),(function(){}))}},{key:"getMultipartsQuery",value:function(){for(var e=this,t=[],r=0;r<this.multiSearchResult.length;r++)if(this.multiSearchResult[r].exist){var n=new Tt.a;(n=Object.assign({},this.query.partSearchParamters)).partNumber=this.multiSearchResult[r].partNumber,n.partId=this.multiSearchResult[r].partId,n.partDescription=this.multiSearchResult[r].partDescription,n.conditionId=this.multiSearchResult[r].conditionType,t.push(n)}if(t.length>0)switch(this.query.multiPartSearchParamters=t,this.query.partSearchParamters.itemSearchType){case Ct.a.StockLine:this.stockLineService.multiSearch(this.query).subscribe((function(t){e.onPartSearch.emit(t)}),(function(t){e.isSpinnerVisible=!1}));break;default:this.itemMasterService.multiSearch(this.query).subscribe((function(t){e.onPartSearch.emit(t)}),(function(t){e.isSpinnerVisible=!1}))}}},{key:"searchMultiPartNumbers",value:function(){var e=this,t={parts:this.multiPartNumbers.split(","),restrictPMA:this.salesQuote.restrictPMA,restrictDER:this.salesQuote.restrictDER,customerId:this.salesQuote.customerId};this.itemMasterService.searchMultiPartNumbers(t).subscribe((function(t){e.multiSearchResult=t,e.multiSearchResult.length>0&&(e.searchDisabled=!1)}),(function(t){e.isSpinnerVisible=!1}))}},{key:"includeMultiplePN",value:function(e){e.srcElement.checked?(this.enableMultiSearch=!0,this.multiSearchResult.length>0&&(this.searchDisabled=!1)):(this.enableMultiSearch=!1,this.query.partSearchParamters.conditionId>0&&this.query.partSearchParamters.partNumber&&this.query.partSearchParamters.quantityRequested>0?this.searchDisabled=!1:this.searchDisabled=!0)}},{key:"onCloseMultiPartNumbers",value:function(){this.multiPartModal.close()}},{key:"navigateToAddItemMaster",value:function(){this.router.navigateByUrl("/itemmastersmodule/itemmasterpages/app-item-master-stock")}},{key:"onChange",value:function(e,t,r){}}]),e}();Mt.ctorParameters=function(){return[{type:R.c},{type:It.a},{type:Dt.a},{type:F.a},{type:N.Router},{type:E.b},{type:wt.a}]},n.b([Object(s.Input)()],Mt.prototype,"customer",void 0),n.b([Object(s.Input)()],Mt.prototype,"salesQuote",void 0),n.b([Object(s.Input)()],Mt.prototype,"allConditionInfo",void 0),n.b([Object(s.Input)()],Mt.prototype,"parts",void 0),n.b([Object(s.Input)()],Mt.prototype,"isStockLineViewMode",void 0),n.b([Object(s.Input)()],Mt.prototype,"selectedParts",void 0),n.b([Object(s.Input)()],Mt.prototype,"selectedSummaryRow",void 0),n.b([Object(s.Output)()],Mt.prototype,"onPartSearch",void 0),n.b([Object(s.Output)()],Mt.prototype,"onSearchTypeChange",void 0),n.b([Object(s.ViewChild)("searchMultiPart",{static:!1})],Mt.prototype,"searchMultiPart",void 0),Mt=n.b([Object(s.Component)({selector:"app-part-number-filter",template:n.c(r("Ik6b")).default,changeDetection:s.ChangeDetectionStrategy.OnPush,styles:[n.c(r("nL5/")).default]})],Mt);var Pt=function e(){_classCallCheck(this,e)},Qt=function e(){_classCallCheck(this,e),this.first=0,this.rows=10,this.sortField="",this.sortOrder=1,this.results=[],this.globalFilter=""},Nt=r("6Ljv"),At=function(){function e(t,r,n,a){_classCallCheck(this,e),this.salesQuoteService=t,this.service=r,this.modalService=n,this.alertService=a,this.roleUpMaterialList=[],this.isStockLineViewMode=!1,this.onPartSelect=new s.EventEmitter,this.select=new s.EventEmitter,this.isSpinnerVisible=!1,this.itemMasterRowData={},this.isViewOpened=!1,this.selectedParts=[],this.auditHistory=[],this.adjAuditHistoryList=[],this.adjAuditHistoryData=[],this.hideme=[],this.rowIndex=-1,this.customPaginate=new Qt,this.parts=[],this.roleUpMaterialList=[],this.columns=[],this.stockLinecolumns=[],this.initColumns(),this.part=null,this.customPaginate.filters=new Pt}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;this.salesQuoteService.getSearchPartResult().subscribe((function(t){e.parts=t,e.query=t,e.totalRecords=e.parts.length,e.pageLinks=Math.ceil(e.totalRecords/10)}))}},{key:"hideStockline",value:function(e){this.hideme[e]=!this.hideme[e],this.rowIndex=-1}},{key:"ngOnChanges",value:function(e){var t=this;this.salesQuoteService.getSelectedParts().subscribe((function(e){e&&e.length>0&&(t.selectedParts=e)})),this.parts.length>0&&-1!=this.rowIndex&&(this.rowIndex<this.parts.length?this.viewSelectedRow(this.parts[this.rowIndex],this.rowIndex):this.viewSelectedRow(this.parts[0],0))}},{key:"initColumns",value:function(){this.columns=[{field:"select",header:"",width:"30px",textalign:"center"},{field:"partNumber",header:"PN",width:"40px",textalign:"left"},{field:"description",header:"PN Description",width:"100px",textalign:"left"},{field:"itemGroup",header:"Item Group",width:"100px",textalign:"left"},{field:"manufacturer",header:"Manufacturer",width:"90px",textalign:"left"},{field:"itemClassificationCode",header:"Classification",width:"90px",textalign:"left"},{field:"conditionDescription",header:"Cond",width:"90px",textalign:"left"},{field:"oempmader",header:"OEM/PMA/DER",width:"90px",textalign:"left"},{field:"alternateFor",header:"Alternate / Equivalency PN",width:"90px",textalign:"left"},{field:"qtyToOrder",header:"Qty Req",width:"110px",textalign:"right"},{field:"qtyAvailable",header:"Qty Avail",width:"90px",textalign:"right"},{field:"qtyOnHand",header:"Qty On Hand",width:"90px",textalign:"right"}],this.stockLinecolumns=[{field:"selected",header:"",width:"30px",textalign:"left"},{field:"stockLineNumber",header:"Stk Line Num",width:"80px",textalign:"left"},{field:"serialNumber",header:"Ser Num",width:"80px",textalign:"left"},{field:"controlNumber",header:"Cntrl Num",width:"80px",textalign:"left"},{field:"idNumber",header:"Cntrl ID Num",width:"80px",textalign:"left"},{field:"partNumber",header:"PN",width:"80px",textalign:"left"},{field:"description",header:"PN Description",width:"100px",textalign:"left"},{field:"stockType",header:"Stk Type",width:"100px",textalign:"left"},{field:"Manufacturer",header:"Manufacturer",width:"100px",textalign:"left"},{field:"uomDescription",header:"UOM",width:"80px",textalign:"left"},{field:"qtyAvailable",header:"Qty Avail",width:"100px",textalign:"right"},{field:"qtyOnHand",header:"Qty On Hand",width:"100px",textalign:"right"},{field:"unitCost",header:"Unit Cost",width:"80px",textalign:"left"},{field:"tracableToName",header:"Traceable to",width:"80px",textalign:"left"},{field:"ownerName",header:"Owner",width:"100px",textalign:"left"},{field:"obtainFromName",header:"Obtain From",width:"100px",textalign:"left"},{field:"tagDate",header:"Tag Date",width:"80px",textalign:"left"},{field:"tagType",header:"Tag Type",width:"80px",textalign:"left"},{field:"certifiedBy",header:"Cert By",width:"80px",textalign:"left"},{field:"certifiedDate",header:"Cert Date",width:"80px",textalign:"left"},{field:"memo",header:"Memo",width:"80px",textalign:"left"}]}},{key:"onPaging",value:function(e){}},{key:"onChange",value:function(e,t){var r=e.srcElement.checked;this.onPartSelect.emit({checked:r,part:t})}},{key:"onChangeStock",value:function(e,t,r){var n=e.srcElement.checked;this.select.emit({checked:n,part:t,salesMargin:r})}},{key:"dismissItemMasterModel",value:function(){this.isViewOpened=!1,this.modal.close()}},{key:"getCheckBoxDisplay",value:function(e,t,r){var n=this;if(this.selectedParts.length>0){var s=[];s=r?this.selectedParts.filter((function(t){return t.partNumber==n.query.partSearchParamters.partNumber&&t.stockLineNumber==e.stockLineNumber})):this.selectedParts.filter((function(t){return t.partNumber==e.partNumber}));var a=0;return s&&s.length>0&&s.forEach((function(e){a+=e.quantityFromThis})),a<e.qtyAvailable?(e.qtyAvailable-a!=e.qtyAvailable&&(r?this.roleUpMaterialList[t].qtyRemainedToQuote=e.qtyAvailable-a:this.parts[t].qtyRemainedToQuote=e.qtyAvailable-a),this.roleUpMaterialList[t].qtyRemainedToQuote!=this.roleUpMaterialList[t].qtyAvailable):!0}return this.selectedParts=[],!1}},{key:"getStocklineAccess",value:function(){}},{key:"viewSelectedRow",value:function(e,t){var r=this;this.parts.length>0&&this.parts.forEach((function(e,n){t!=n&&(r.hideme[n]=!1)})),this.stockLineViewedRow=t,e.isShowPlus=!1,this.roleUpMaterialList=[],this.customPaginate.filters.itemMasterId=e.partId,this.customPaginate.filters.conditionId=e.conditionId,this.customPaginate.filters.partNumber=e.partNumber,this.isSpinnerVisible=!0,this.salesQuoteService.getSearchPartResult().subscribe((function(e){r.parts=e,r.totalRecords=r.parts.length,r.pageLinks=Math.ceil(r.totalRecords/10),r.isSpinnerVisible=!1}),(function(e){r.isSpinnerVisible=!1;var t=e;r.onDataLoadFailed(t)})),this.salesQuoteService.getSearchPartObject().subscribe((function(e){r.query=e})),this.query.partSearchParamters.partId=e.partId,this.service.searchstocklinefromsoqpop(this.query).subscribe((function(e){r.isSpinnerVisible=!1;var n=e.data;n&&n.length>0?(r.roleUpMaterialList=n,r.roleUpMaterialList.forEach((function(e,t){r.roleUpMaterialList[t].qtyRemainedToQuote=r.roleUpMaterialList[t].qtyAvailable}))):r.roleUpMaterialList=[],r.salesQuoteService.getSelectedParts().subscribe((function(e){e&&e.length>0&&(r.selectedParts=e)})),r.hideme[t]=!r.hideme[t],r.rowIndex=t}),(function(e){r.isSpinnerVisible=!1;var t=e;r.onDataLoadFailed(t)}))}},{key:"viewStockSelectedRow",value:function(e){this.modal=this.modalService.open(be.a,{windowClass:"myCustomModalClass",backdrop:"static",keyboard:!1}),this.modal.componentInstance.stockLineId=e.stockLineId,this.modal.result.then((function(){}),(function(){}))}},{key:"viewStockLineHistory",value:function(e){this.modal=this.modalService.open(Nt.a,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.componentInstance.stockLineId=e.stockLineId,this.modal.result.then((function(){}),(function(){}))}},{key:"openStocklineAudit",value:function(e){var t=this;this.isSpinnerVisible=!0,this.service.getStocklineAudit(e.stockLineId).subscribe((function(e){t.auditHistory=e.map((function(e){return Object.assign({},e,{quantityOnHand:e.quantityOnHand||0==e.quantityOnHand?Object(W.b)(e.quantityOnHand,0):"",quantityReserved:e.quantityReserved||0==e.quantityReserved?Object(W.b)(e.quantityReserved,0):"",quantityIssued:e.quantityIssued||0==e.quantityIssued?Object(W.b)(e.quantityIssued,0):"",quantityAvailable:e.quantityAvailable||0==e.quantityAvailable?Object(W.b)(e.quantityAvailable,0):"",purchaseOrderUnitCost:e.purchaseOrderUnitCost?Object(W.b)(e.purchaseOrderUnitCost,2):"",repairOrderUnitCost:e.repairOrderUnitCost?Object(W.b)(e.repairOrderUnitCost,2):"",unitSalesPrice:e.unitSalesPrice?Object(W.b)(e.unitSalesPrice,2):"",coreUnitCost:e.coreUnitCost?Object(W.b)(e.coreUnitCost,2):"",lotCost:e.lotCost?Object(W.b)(e.lotCost,2):""})})),t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1;var r=e;t.onDataLoadFailed(r)}))}},{key:"getColorCodeForHistory",value:function(e,t,r){var n=this.auditHistory,s=n.length;if(e>=0&&e<=s)return e+1===s||n[e+1][t]===r}},{key:"onDataLoadFailed",value:function(e){this.isSpinnerVisible=!1;var t=e,r="";if(t.message){if(t.error&&t.error.errors.length>0)for(var n=0;n<t.error.errors.length;n++)r=r+t.error.errors[n].message+"<br/>";this.alertService.showMessage(t.error.message,r,E.d.error)}else this.alertService.showMessage("Error",e.error,E.d.error)}}]),e}();At.ctorParameters=function(){return[{type:F.a},{type:Dt.a},{type:R.c},{type:E.b}]},n.b([Object(s.Input)()],At.prototype,"customer",void 0),n.b([Object(s.Input)()],At.prototype,"parts",void 0),n.b([Object(s.Input)()],At.prototype,"isStockLineViewMode",void 0),n.b([Object(s.Input)()],At.prototype,"query",void 0),n.b([Object(s.Output)()],At.prototype,"onPartSelect",void 0),n.b([Object(s.Output)()],At.prototype,"select",void 0),n.b([Object(s.Input)()],At.prototype,"id",void 0),n.b([Object(s.Input)()],At.prototype,"conditionId",void 0),n.b([Object(s.Input)("part-number")],At.prototype,"partNumber",void 0),n.b([Object(s.Input)()],At.prototype,"stockLineInformation",void 0),At=n.b([Object(s.Component)({selector:"app-part-details",template:n.c(r("kNxy")).default,styles:[n.c(r("Jyd3")).default]})],At);var Lt=function e(){_classCallCheck(this,e)};Lt=n.b([Object(s.Component)({selector:"app-sales-part-numbers",template:n.c(r("5792")).default,styles:[n.c(r("j14T")).default]})],Lt);var Ft=function(){function e(t,r){_classCallCheck(this,e),this.salesQuoteService=t,this.modalService=r,this.select=new s.EventEmitter,this.parts=[],this.columns=[],this.initColumns()}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;this.salesQuoteService.getSearchPartResult().subscribe((function(t){e.parts=t,e.totalRecords=e.parts.length,e.pageLinks=Math.ceil(e.totalRecords/10)}))}},{key:"ngOnChanges",value:function(e){}},{key:"initColumns",value:function(){this.columns=[{field:"selected",header:"",width:"30px",textalign:"left"},{field:"method",header:"Method",width:"100px",textalign:"left"},{field:"partNumber",header:"PN",width:"60px",textalign:"left"},{field:"alternateFor",header:"Alternate / Equivalency For",width:"160px",textalign:"left"},{field:"description",header:"PN Description",width:"100px",textalign:"left"},{field:"conditionType",header:"Cond Type",width:"80px",textalign:"left"},{field:"uom",header:"UOM",width:"60px",textalign:"left"},{field:"qtyAvailable",header:"Qty Available",width:"100px",textalign:"right"},{field:"qtyOnHand",header:"Qty On Hand",width:"100px",textalign:"right"},{field:"qtyToOrder",header:"Qty To Order",width:"100px",textalign:"right"},{field:"qtyOnOrder",header:"Qty On Order",width:"100px",textalign:"right"},{field:"itemClassification",header:"Item Classification",width:"120px",textalign:"left"},{field:"itemGroup",header:"Item Group",width:"80px",textalign:"left"},{field:"controlName",header:"Control Name",width:"100px",textalign:"left"},{field:"idNumber",header:"Id Num",width:"70px",textalign:"left"},{field:"serialNumber",header:"Serial Num",width:"80px",textalign:"left"}]}},{key:"onPaging",value:function(e){}},{key:"onChange",value:function(e,t,r){var n=e.srcElement.checked;this.select.emit({checked:n,part:t,salesMargin:r})}},{key:"viewSelectedRow",value:function(e){console.log(e),this.modal=this.modalService.open(be.a,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.componentInstance.stockLineId=e.stockLineId,this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"viewStockLineHistory",value:function(e){console.log(e),this.modal=this.modalService.open(Nt.a,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.componentInstance.stockLineId=e.stockLineId,this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}}]),e}();Ft.ctorParameters=function(){return[{type:F.a},{type:R.c}]},n.b([Object(s.Input)()],Ft.prototype,"customer",void 0),n.b([Object(s.Input)()],Ft.prototype,"parts",void 0),n.b([Object(s.Output)()],Ft.prototype,"select",void 0),Ft=n.b([Object(s.Component)({selector:"app-stockline-part-details",template:n.c(r("fsuF")).default,styles:[n.c(r("84uX")).default]})],Ft);var Vt=function(){function e(t,r){_classCallCheck(this,e),this.salesQuoteService=t,this.commonservice=r,this.close=new s.EventEmitter,this.save=new s.EventEmitter,this.percentage=[],this.invalidQuantityenteredForQuantityFromThis=!1}return _createClass(e,[{key:"ngOnInit",value:function(){this.getPercents(),this.calculate()}},{key:"formatStringToNumberGlobal",value:function(e){return Object(W.c)(e)}},{key:"getPercents",value:function(){var e=this;this.commonservice.smartDropDownList("[Percent]","PercentId","PercentValue").subscribe((function(t){e.percentage=t}))}},{key:"onClose",value:function(e){e.preventDefault(),this.close.emit(!0)}},{key:"onSave",value:function(e){e.preventDefault(),this.save.emit(this.part)}},{key:"showPartNumberModal",value:function(){var e=document.querySelector("#addPartNumber");e&&e.click()}},{key:"calculate",value:function(){this.part&&this.calculatePart()}},{key:"calculatePart",value:function(){try{this.part.salesPriceExtended=Number(this.part.salesPricePerUnit)*Number(this.part.quantityFromThis),this.part.markupPerUnit=+(Number(this.part.salesPricePerUnit)*(Number(this.part.markUpPercentage)/100)).toFixed(2),this.part.markupExtended=+(Number(this.part.markupPerUnit)*Number(this.part.quantityFromThis)).toFixed(2),this.part.salesDiscountPerUnit=+(Number(this.part.salesDiscount)/100*(Number(this.part.salesPricePerUnit)+Number(this.part.markupPerUnit))).toFixed(2),this.part.salesDiscountExtended=+(Number(this.part.salesDiscountPerUnit)*Number(this.part.quantityFromThis)).toFixed(2),this.part.netSalesPricePerUnit=+(Number(this.part.salesPricePerUnit)+Number(this.part.markupPerUnit)-Number(this.part.salesDiscountPerUnit)).toFixed(2),this.part.netSalesPriceExtended=+(Number(this.part.salesPriceExtended)+Number(this.part.markupExtended)-Number(this.part.salesDiscountExtended)).toFixed(2),this.part.taxAmount=+(Number(this.part.netSalesPriceExtended)/100*Number(this.part.taxPercentage)).toFixed(2),this.part.marginAmountPerUnit=+(Number(this.part.netSalesPricePerUnit)-Number(this.part.unitCostPerUnit)).toFixed(2),this.part.marginAmountExtended=+(Number(this.part.marginAmountPerUnit)*Number(this.part.quantityFromThis)).toFixed(2),this.part.unitCostExtended=+(Number(this.part.unitCostPerUnit)*Number(this.part.quantityFromThis)).toFixed(2),Number(this.part.netSalesPricePerUnit)>0?this.part.marginPercentagePerUnit=+(Number(this.part.marginAmountPerUnit)/Number(this.part.netSalesPricePerUnit)*100).toFixed(2):this.part.marginPercentagePerUnit=0,Number(this.part.netSalesPriceExtended)>0?this.part.marginPercentageExtended=+(Number(this.part.marginAmountExtended)/Number(this.part.netSalesPriceExtended)*100).toFixed(2):this.part.marginPercentageExtended=0,this.part.grossSalePrice=Number(this.part.salesPriceExtended)+Number(this.part.markupExtended),this.part.grossSalePricePerUnit=Number(this.part.salesPricePerUnit)+Number(this.part.markupPerUnit),this.part.totalSales=+(Number(this.part.netSalesPriceExtended)+Number(this.part.taxAmount)).toFixed(2)}catch(e){}}},{key:"onChangeQuantityFromThis",value:function(e){0!=Number(this.part.quantityFromThis)?this.part.qtyRemainedToQuote?this.invalidQuantityenteredForQuantityFromThis=this.part.quantityFromThis>this.part.quantityToBeQuoted&&Number(this.part.quantityFromThis)>Number(this.part.qtyRemainedToQuote):this.invalidQuantityenteredForQuantityFromThis=this.part.quantityFromThis>this.part.quantityToBeQuoted:this.invalidQuantityenteredForQuantityFromThis=!0}}]),e}();Vt.ctorParameters=function(){return[{type:F.a},{type:_.a}]},n.b([Object(s.Output)()],Vt.prototype,"close",void 0),n.b([Object(s.Output)()],Vt.prototype,"save",void 0),n.b([Object(s.Input)()],Vt.prototype,"part",void 0),n.b([Object(s.Input)()],Vt.prototype,"display",void 0),n.b([Object(s.Input)()],Vt.prototype,"isEdit",void 0),Vt=n.b([Object(s.Component)({selector:"app-sales-margin",template:n.c(r("jV7o")).default,styles:[n.c(r("Wl3k")).default]})],Vt);var Et=r("dmMT"),Rt=function e(){_classCallCheck(this,e)};Rt=n.b([Object(s.Component)({selector:"app-sales-order-address",template:n.c(r("poJz")).default,styles:[n.c(r("kv34")).default]})],Rt);var qt=function e(){_classCallCheck(this,e)};qt=n.b([Object(s.Component)({selector:"app-sales-order-part-numbers",template:n.c(r("Zj2O")).default,styles:[n.c(r("fJFJ")).default]})],qt);var Ut=function(){function e(t,r,n,s,a,i,o,l){_classCallCheck(this,e),this.salesQuoteService=t,this.alertService=r,this.modalService=n,this.customerService=s,this.employeeService=a,this.commonservice=i,this.currencyService=o,this.authService=l,this.totalRecords=0,this.totalPages=0,this.pageSize=10,this.pageIndex=0,this.first=0,this.showPaginator=!1,this.managementStructure={},this.moduleName="SalesQuote",this.marginSummary=new xe,this.salesOrderQuote={},this.selectedParts=[],this.customerWarningData=[],this.customerContactList=[],this.freight=[],this.charge=[],this.salesOrderFreightList=[],this.markupList=[],this.buildMethodDetails=[],this.isSpinnerVisible=!1}return _createClass(e,[{key:"ngOnInit",value:function(){this.salesQuote=this.salesQuoteView.salesOrderQuote,this.salesQuoteService.selectedParts=this.marshallParts(this.salesQuoteView.parts),this.customerId=this.salesQuoteView.salesOrderQuote.customerId,this.getRequiredData()}},{key:"getRequiredData",value:function(){var e=this;this.isSpinnerVisible=!0,this.managementStructureId=this.salesQuote.managementStructureId,Object($.a)(this.customerService.getContacts(this.salesQuoteView.salesOrderQuote.customerId),this.commonservice.getManagementStructureNameandCodes(this.managementStructureId),this.commonservice.smartDropDownList("[Percent]","PercentId","PercentValue"),this.salesQuoteService.getSOQMarginSummary(this.salesQuoteView.salesOrderQuote.salesOrderQuoteId)).subscribe((function(t){e.isSpinnerVisible=!1,e.setAllCustomerContact(t[0]),e.setManagementStructureCodes(t[1]),e.markupList=t[2],t[3]&&(e.marginSummary=t[3])}),(function(t){e.isSpinnerVisible=!1}))}},{key:"marshallParts",value:function(e){var t=this,r=[];if(e&&e.length>0)return e.forEach((function(n,s){var a=e[s],i=t.salesQuoteService.marshalSOQPartToView(a);r.push(i)})),r}},{key:"viewSelectedStockLine",value:function(e){this.partModal=this.modalService.open(be.a,{size:"lg",backdrop:"static",keyboard:!1}),this.partModal.componentInstance.stockLineId=e.stockLineId,this.partModal.result.then((function(){}),(function(){}))}},{key:"setAllCustomerContact",value:function(e){if(e[0]&&e[0].length>0){this.customerContactList=e[0];for(var t=0;t<this.customerContactList.length;t++)this.customerContactList[t].contactName=this.customerContactList[t].firstName+" "+this.customerContactList[t].lastName}else this.customerContactList=[]}},{key:"onTabChange",value:function(e){1==e.index&&this.salesApproveComponent.refresh(this.marginSummary),2==e.index&&this.salesCustomerApprovalsComponent.refresh(this.marginSummary,this.salesQuoteView.salesOrderQuote.salesOrderQuoteId,!0,this.customerContactList),4==e.index&&this.salesOrderQuoteFreightComponent.refresh(!0),5==e.index&&this.salesOrderQuoteChargesComponent.refresh(!0),6==e.index&&this.salesQuoteDocumentsComponent.refresh(),7==e.index&&this.salesQuoteAnalysisComponent.refresh(this.salesQuoteView.salesOrderQuote.salesOrderQuoteId)}},{key:"verifySalesQuoteConversion",value:function(e){}},{key:"onPartsApprovedEvent",value:function(e){}},{key:"setManagementStructureCodes",value:function(e){e.Level1?this.managementStructure.level1=e.Level1:this.managementStructure.level1="-",e.Level2?this.managementStructure.level2=e.Level2:this.managementStructure.level2="-",e.Level3?this.managementStructure.level3=e.Level3:this.managementStructure.level3="-",e.Level4?this.managementStructure.level4=e.Level4:this.managementStructure.level4="-"}},{key:"saveSalesOrderFreightsList",value:function(e){}},{key:"updateSalesOrderFreightsList",value:function(e){}},{key:"getFreightList",value:function(e){}},{key:"saveSalesOrderChargesList",value:function(e){}},{key:"updateSalesOrderChargesList",value:function(e){}},{key:"getChargesList",value:function(){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"userId",get:function(){return this.authService.currentUser?this.authService.currentUser.id:0}},{key:"currentUserManagementStructureId",get:function(){return this.authService.currentUser?this.authService.currentUser.managementStructureId:null}}]),e}();Ut.ctorParameters=function(){return[{type:F.a},{type:E.b},{type:R.c},{type:H.a},{type:j.a},{type:_.a},{type:B.a},{type:z.a}]},n.b([Object(s.ViewChild)(ue,{static:!1})],Ut.prototype,"salesApproveComponent",void 0),n.b([Object(s.ViewChild)(ve,{static:!1})],Ut.prototype,"salesCustomerApprovalsComponent",void 0),n.b([Object(s.ViewChild)(Se,{static:!1})],Ut.prototype,"salesOrderQuoteFreightComponent",void 0),n.b([Object(s.ViewChild)(we,{static:!1})],Ut.prototype,"salesOrderQuoteChargesComponent",void 0),n.b([Object(s.ViewChild)(Ne,{static:!1})],Ut.prototype,"salesQuoteDocumentsComponent",void 0),n.b([Object(s.ViewChild)(Ae,{static:!1})],Ut.prototype,"salesQuoteAnalysisComponent",void 0),n.b([Object(s.Input)()],Ut.prototype,"salesQuoteId",void 0),n.b([Object(s.Input)()],Ut.prototype,"customerId",void 0),n.b([Object(s.Input)()],Ut.prototype,"salesQuoteView",void 0),Ut=n.b([Object(s.Component)({selector:"app-sales-quote-view",template:n.c(r("P4hD")).default,styles:[n.c(r("sjNA")).default]})],Ut);var Bt=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"transform",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return(void 0===e||Number.isNaN(e))&&(e=0),t<=0?e.toString():e.toFixed(Math.max(0,~~t))}}]),e}();Bt=n.b([Object(s.Pipe)({name:"toDecimal"})],Bt);var jt=function(){function e(t,r,n,a,i){_classCallCheck(this,e),this.itemMasterService=t,this.salesOrderService=r,this.commonService=n,this.authService=a,this.alertService=i,this.close=new s.EventEmitter,this.select=new s.EventEmitter,this.onPartReserve=new s.EventEmitter,this.selectedParts=[],this.employeesList=[],this.parts=[],this.selectAllParts=!1,this.disableSubmitButtonForAction=!0,console.log("add..."),this.searchType=Ct.a.ItemMaster}return _createClass(e,[{key:"ngOnInit",value:function(){this.getParts(),this.salesOrder=this.salesQuote,this.initColumns()}},{key:"initColumns",value:function(){this.columns=[{field:"partNumber",header:"PN",width:"100px"},{field:"partDescription",header:"PN Description   ",width:"200px"},{field:"condition",header:"Condition Type    ",width:"100px"},{field:"oemDer",header:"OEM / PMA / DER",width:"100px"},{field:"quantity",header:"Qty Required ",width:"100px"},{field:"quantityReserved",header:"Qty Reserved",width:"100px"},{field:"quantityOnHand",header:"Qty On Hand",width:"100px"},{field:"quantityAvailable",header:"Qty Available   ",width:"100px"},{field:"quantityOnOrder",header:"Qty On Order",width:"100px"}]}},{key:"getParts",value:function(){switch(this.selectedPartActionType){case"Reserve":this.getReserverdParts();break;case"Issue":this.getIssuedParts();break;case"Reserve & Issue":this.getReservedAndIssuedParts();break;case"Unreserve":this.getUnreservedParts();break;case"UnIssue":this.getUnissuedParts()}}},{key:"onChange",value:function(e,t){var r=e.srcElement.checked;this.onPartReserve.emit({checked:r,part:t})}},{key:"getIssuedParts",value:function(){var e=this;this.salesOrderService.getIssuedParts(this.salesOrderId).subscribe((function(t){e.parts=t[0];for(var r=0;r<e.parts.length;r++)e.parts[r].reservedDate=null==e.parts[r].reservedDate?new Date:new Date(e.parts[r].reservedDate),e.parts[r].issuedDate=null==e.parts[r].issuedDate?new Date:new Date(e.parts[r].reservedDate),e.parts[r].isSelected=!1,0==e.parts[r].qtyToIssued&&(e.parts[r].qtyToIssued=null);for(var n=0;n<e.columns.length;n++)"qtyToReserveAndIssue"==e.columns[n].field&&e.columns.splice(n,1),"qtyToUnReserve"==e.columns[n].field&&e.columns.splice(n,1),"Qty To UnIssue"==e.columns[n].header&&e.columns.splice(n,1)}))}},{key:"getReserverdParts",value:function(){var e=this;this.salesOrderService.getReservedParts(this.salesOrderId).subscribe((function(t){e.parts=t[0];for(var r=0;r<e.parts.length;r++)e.parts[r].reservedDate=null==e.parts[r].reservedDate?new Date:new Date(e.parts[r].reservedDate),e.parts[r].issuedDate=null==e.parts[r].issuedDate?new Date:new Date(e.parts[r].reservedDate),e.parts[r].isSelected=!1,0==e.parts[r].qtyToReserve&&(e.parts[r].qtyToReserve=null);for(var n=0;n<e.columns.length;n++)"qtyToReserveAndIssue"==e.columns[n].field&&e.columns.splice(n,1),"qtyToUnReserve"==e.columns[n].field&&e.columns.splice(n,1),"Qty To UnIssue"==e.columns[n].header&&e.columns.splice(n,1)}))}},{key:"getReservedAndIssuedParts",value:function(){var e=this;this.salesOrderService.getReservedAndIssuedParts(this.salesOrderId).subscribe((function(t){e.parts=t[0];for(var r=0;r<e.parts.length;r++)e.parts[r].reservedDate=null==e.parts[r].reservedDate?new Date:new Date(e.parts[r].reservedDate),e.parts[r].issuedDate=null==e.parts[r].issuedDate?new Date:new Date(e.parts[r].reservedDate),e.parts[r].isSelected=!1,e.parts[r].qtyToReserveAndIssue&&0==e.parts[r].qtyToReserveAndIssue&&(e.parts[r].qtyToReserveAndIssue=null);for(var n=0;n<e.columns.length;n++)"qtyToUnReserve"==e.columns[n].field&&e.columns.splice(n,1),"Qty To UnIssue"==e.columns[n].header&&e.columns.splice(n,1)}))}},{key:"getUnreservedParts",value:function(){var e=this;this.salesOrderService.getUnreservedParts(this.salesOrderId).subscribe((function(t){e.parts=t[0];for(var r=0;r<e.parts.length;r++)e.parts[r].reservedDate=null==e.parts[r].reservedDate?new Date:new Date(e.parts[r].reservedDate),e.parts[r].issuedDate=null==e.parts[r].issuedDate?new Date:new Date(e.parts[r].reservedDate),e.parts[r].isSelected=!1,e.parts[r].qtyToUnReserve&&0==e.parts[r].qtyToUnReserve&&(e.parts[r].qtyToUnReserve=null);for(var n=0;n<e.columns.length;n++)"qtyToReserveAndIssue"==e.columns[n].field&&e.columns.splice(n,1),"Qty To UnIssue"==e.columns[n].header&&e.columns.splice(n,1)}))}},{key:"getUnissuedParts",value:function(){var e=this;this.salesOrderService.getReservedParts(this.salesOrderId).subscribe((function(t){e.parts=t[0];for(var r=0;r<e.parts.length;r++)e.parts[r].reservedDate=null==e.parts[r].reservedDate?new Date:new Date(e.parts[r].reservedDate),e.parts[r].issuedDate=null==e.parts[r].issuedDate?new Date:new Date(e.parts[r].reservedDate),e.parts[r].isSelected=!1,e.parts[r].qtyToUnIssued&&0==e.parts[r].qtyToUnIssued&&(e.parts[r].qtyToUnIssued=null);for(var n=0;n<e.columns.length;n++)"qtyToReserveAndIssue"==e.columns[n].field&&e.columns.splice(n,1),"qtyToUnReserve"==e.columns[n].field&&e.columns.splice(n,1)}))}},{key:"onChangeOfSelectAllQuotes",value:function(e){for(var t=0;t<this.parts.length;t++)1==e?(this.parts[t].isSelected=!0,this.disableSubmitButtonForAction=!1):(this.parts[t].isSelected=!1,this.disableSubmitButtonForAction=!0)}},{key:"onChangeOfPartSelection",value:function(e){for(var t=0,r=0;r<this.parts.length;r++)1==e?t+=1:0!=t&&(t-=1);this.disableSubmitButtonForAction=0==t}},{key:"show",value:function(e){this.display=e}},{key:"onClose",value:function(){this.close.emit(!0)}},{key:"filterReservedBy",value:function(e){var t=_toConsumableArray(this.employeesList.filter((function(t){if(t.name.toLowerCase().includes(e.query.toLowerCase()))return t.name})));this.employeesList=t}},{key:"savereserveissuesparts",value:function(e){var t=this,r=[];e.filter((function(e){e.createdBy=t.userName,e.updatedBy=t.userName,e.reservedById=e.reservedById.employeeId,e.issuedById=e.issuedById.employeeId,1==e.isSelected&&r.push(e)})),this.salesOrderService.savereserveissuesparts(e).subscribe((function(e){t.alertService.stopLoadingMessage(),t.alertService.showMessage("Success","Part updated.",E.d.success),t.onClose()}),(function(e){return t.saveFailedHelper(e)}))}},{key:"saveFailedHelper",value:function(e){this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage(e,null,E.d.error)}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();jt.ctorParameters=function(){return[{type:It.a},{type:ae.a},{type:_.a},{type:z.a},{type:E.b}]},n.b([Object(s.Input)()],jt.prototype,"display",void 0),n.b([Object(s.Input)()],jt.prototype,"customer",void 0),n.b([Object(s.Input)()],jt.prototype,"selectedPartDataForAction",void 0),n.b([Object(s.Input)()],jt.prototype,"selectedPartActionType",void 0),n.b([Object(s.Input)()],jt.prototype,"salesQuote",void 0),n.b([Object(s.Input)()],jt.prototype,"salesOrderId",void 0),n.b([Object(s.Output)()],jt.prototype,"close",void 0),n.b([Object(s.Output)()],jt.prototype,"select",void 0),n.b([Object(s.Output)()],jt.prototype,"onPartReserve",void 0),n.b([Object(s.Input)()],jt.prototype,"selectedParts",void 0),n.b([Object(s.Input)()],jt.prototype,"employeesList",void 0),jt=n.b([Object(s.Component)({selector:"app-sales-order-part-actions",template:n.c(r("O/au")).default,styles:[n.c(r("Seli")).default]})],jt);var Ht=function(){function e(t,r,n,a,i,o,l,d,c,u,p,m,h){_classCallCheck(this,e),this.salesOrderService=t,this.router=r,this.route=n,this.authService=a,this.modalService=i,this.activeModal=o,this._fb=l,this.alertService=d,this.dialog=c,this.masterComapnyService=u,this.configurations=p,this.commonService=m,this.customerService=h,this.tab=new s.EventEmitter,this.documentInformation=Object.assign({},new Qe.a),this.salesQuoteDocumentsData=[],this.salesQuoteDocumentsColumns=[{field:"docName",header:"Name"},{field:"docDescription",header:"Description"},{field:"docMemo",header:"Memo"},{field:"fileName",header:"File Name"},{field:"fileSize",header:"File Size"},{field:"fileCreatedBy",header:"Created By"},{field:"fileCreatedDate",header:"Created Date"},{field:"fileUpdatedBy",header:"Updated By"},{field:"fileUpdatedDate",header:"Updated Date"}],this.selectedColumns=this.salesQuoteDocumentsColumns,this.headersforAttachment=[{field:"fileName",header:"File Name"}],this.sourceViewforDocumentListColumns=[{field:"fileName",header:"File Name"}],this.formData=new FormData,this.isEditButton=!1,this.sourceViewforDocumentList=[],this.activeIndex=11,this.isDeleteMode=!1,this.isEditMode=!1,this.isEditModeHeader=!1,this.auditHisory=[],this.isViewMode=!1,this.totalRecords=0,this.pageIndex=0,this.pageSize=10,this.totalPages=0,this.salesOrderId=0,this.viewMode=!1,this.documentsDestructuredData=[],this.disableSave=!0,this.isSpinnerVisible=!1}return _createClass(e,[{key:"ngOnInit",value:function(){}},{key:"refresh",value:function(){this.getList(this.salesOrderId)}},{key:"resetCreateForm",value:function(){this.documentInformation=new Qe.a,this.sourceViewforDocument=void 0,this.sourceViewforDocumentList=[],this.clearFileUpload(),this.isEditButton=!1}},{key:"clearFileUpload",value:function(){this.fileUpload.clear()}},{key:"dateFilterForTable",value:function(e,t){if(""!==e&&G(e).format("MMMM DD YYYY")){var r=_toConsumableArray(this.documentsDestructuredData.filter((function(r){return console.log(G(r.createdDate).format("MMMM DD YYYY"),G(e).format("MMMM DD YYYY")),G(r.createdDate).format("MMMM DD YYYY")===G(e).format("MMMM DD YYYY")&&"createdDate"===t||G(r.updatedDate).format("MMMM DD YYYY")===G(e).format("MMMM DD YYYY")&&"updatedDate"===t?r:void 0})));this.documentsDestructuredData=r}else this.documentsDestructuredData=this.documentsDestructuredDataListOriginal}},{key:"fileUploadForDocuments",value:function(e){if(console.log(e),0===e.files.length)return this.disableSave=!0;this.disableSave=!1;var t,r=_createForOfIteratorHelper(e.files);try{for(r.s();!(t=r.n()).done;){var n=t.value;this.formData.has(n.name)?this.alertService.showMessage("Duplicate File","Duplicate file not allowed ! ",E.d.warn):this.formData.append(n.name,n)}}catch(s){r.e(s)}finally{r.f()}this.disableSave=!1}},{key:"removeFile",value:function(e){console.log("event deletre",e),this.formData.delete(e.file.name)}},{key:"getList",value:function(e){var t=this;this.isSpinnerVisible=!0,this.loaderForDocuments=!0,this.documentsDestructuredData=[],this.salesOrderService.getDocumentList(e).subscribe((function(e){var r=[];t.isSpinnerVisible=!1,e.map((function(e){for(var n=0;n<e.attachmentDetails.length;n++){var s=e.attachmentDetails;r.push(Object.assign({},e,{fileName:s[n].fileName,link:s[n].link,fileCreatedDate:s[n].createdDate,fileCreatedBy:s[n].createdBy,fileUpdatedBy:s[n].updatedBy,fileUpdatedDate:s[n].updatedDate,fileSize:s[n].fileSize,attachmentDetailId:s[n].attachmentDetailId}))}t.documentsDestructuredData=r,t.documentsDestructuredDataListOriginal=r})),t.loaderForDocuments=!1}),(function(e){t.documentsDestructuredData=[],t.loaderForDocuments=!1,t.isSpinnerVisible=!1,t.alertService.showMessage("SalesOrder",e,E.d.error)}))}},{key:"saveDocumentInformation",value:function(){var e=this;this.isEditMode&&(this.salesOrderId=this.salesOrderId);var t=Object.assign({},this.documentInformation,{salesOrderId:this.salesOrderId,masterCompanyId:1,createdBy:this.userName,updatedBy:this.userName});for(var r in t)this.formData.append(r,t[r]);this.salesOrderService.documentUploadAction(this.formData).subscribe((function(t){console.log("hello text"),e.documentInformation.docDescription="",e.documentInformation.docMemo="",e.documentInformation.docName="",e.sourceViewforDocumentList=[],e.formData=new FormData,e.clearFileUpload(),e.getList(t.salesOrderId),e.isEditButton?e.alertService.showMessage("Success","Updated Documents Successfully ",E.d.success):e.alertService.showMessage("Success","Saved Documents Successfully ",E.d.success)})),this.modal.close(),this.disableSave=!0,L("#addDocumentDetails").modal("hide")}},{key:"updateVendorDocument",value:function(){}},{key:"openHistory",value:function(e,t){var r=this;this.alertService.startLoadingMessage(),this.isSaving=!0,this.salesOrderService.getSalesQuoteDocumentAuditHistory(t.salesOrderDocumentDetailId).subscribe((function(t){return r.onAuditHistoryLoadSuccessful(t,e)}),(function(e){return r.saveFailedHelper(e)}))}},{key:"backClick",value:function(){this.activeIndex=10,this.salesOrderService.changeofTab(this.activeIndex)}},{key:"CreateNewClick",value:function(){this.route.navigateByUrl("/salesmodule/salespages/sales-order-list")}},{key:"onAuditHistoryLoadSuccessful",value:function(e,t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.documentauditHisory=e,this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"saveFailedHelper",value:function(e){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",E.d.error,e),this.alertService.showStickyMessage(e,null,E.d.error)}},{key:"getColorCodeForHistory",value:function(e,t,r){var n=this.documentauditHisory,s=n.length;if(e>=0&&e<=s)return e+1===s||n[e+1][t]===r}},{key:"editVendorDocument",value:function(e,t){var r=this;this.isEditButton=!0,this.documentInformation=Object.assign({},e),this.salesOrderService.toGetUploadDocumentsList(e.attachmentId,e.salesOrderId,46).subscribe((function(t){r.sourceViewforDocumentList=t,r.sourceViewforDocument=e}))}},{key:"openView",value:function(e){var t=this;this.salesOrderService.toGetUploadDocumentsList(e.attachmentId,e.salesOrderId,46).subscribe((function(r){t.sourceViewforDocumentList=r,t.sourceViewforDocument=e}))}},{key:"openViewOnDblClick",value:function(e){var t=this;this.salesOrderService.toGetUploadDocumentsList(e.attachmentId,e.salesOrderId,46).subscribe((function(r){t.sourceViewforDocumentList=r,t.sourceViewforDocument=e})),L("#docView").modal("show")}},{key:"openDelete",value:function(e,t){this.isEditMode=!1,this.isDeleteMode=!0,delete t.updatedBy,this.localCollection=t,console.log("attachmentId",t),this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"deleteItemAndCloseModel",value:function(){var e=this;this.isSaving=!0;var t=this.localCollection.attachmentDetails[0].attachmentDetailId;this.customerService.deleteDocumentByCustomerAttachementId(t,this.userName).subscribe((function(t){e.getList(e.salesOrderId),e.alertService.showMessage("Success","Action was deleted successfully ",E.d.success)})),this.modal.close()}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"downloadFileUpload",value:function(e){var t="".concat(this.configurations.baseUrl,"/api/FileUpload/downloadattachedfile?filePath=").concat(e.link);window.location.assign(t)}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"pageIndexChange",value:function(e){this.pageSize=e.rows}},{key:"enableSave",value:function(){console.log("isenamebsd",this.sourceViewforDocumentList.length),this.sourceViewforDocumentList&&this.sourceViewforDocumentList.length>0||1==this.isEditButton?this.disableSave=!1:this.disableSave=!0}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();Ht.ctorParameters=function(){return[{type:ae.a},{type:N.ActivatedRoute},{type:N.Router},{type:z.a},{type:R.c},{type:R.b},{type:o.FormBuilder},{type:E.b},{type:Me.b},{type:Te.a},{type:Pe.a},{type:_.a},{type:H.a}]},n.b([Object(s.Output)()],Ht.prototype,"tab",void 0),n.b([Object(s.ViewChild)("fileUpload",{static:!1})],Ht.prototype,"fileUpload",void 0),n.b([Object(s.Input)()],Ht.prototype,"isEditMode",void 0),n.b([Object(s.Input)()],Ht.prototype,"salesOrderId",void 0),n.b([Object(s.Input)()],Ht.prototype,"viewMode",void 0),Ht=n.b([Object(s.Component)({selector:"app-sales-order-document",template:n.c(r("9wWG")).default,styles:[n.c(r("PkGK")).default]})],Ht);var _t=function(){function e(t,r,n,s,a,i,o,l,d,c){_classCallCheck(this,e),this.salesQuoteService=t,this.salesOrderService=r,this.alertService=n,this.modalService=s,this.router=a,this.customerService=i,this.employeeService=o,this.commonservice=l,this.currencyService=d,this.authService=c,this.totalRecords=0,this.totalPages=0,this.pageSize=10,this.pageIndex=0,this.first=0,this.showPaginator=!1,this.salesOrderQuote={},this.selectedParts=[],this.allEmployeeinfo=[],this.customerWarningData=[],this.isSpinnerVisible=!1,this.marginSummary=new _e,this.managementStructure={},this.freight=[],this.charge=[],this.moduleName="SalesOrder"}return _createClass(e,[{key:"ngOnInit",value:function(){this.salesOrder=this.salesOrderView.salesOrder,this.customerId=this.salesOrder.customerId,this.salesQuoteService.selectedParts=this.marshallParts(this.salesOrderView.parts),this.salesQuote=this.salesOrderView.salesOrder,this.getRequiredData()}},{key:"getRequiredData",value:function(){var e=this;this.isSpinnerVisible=!0,this.managementStructureId=this.salesQuote.managementStructureId,Object($.a)(this.employeeService.getEmployeeCommonData(this.managementStructureId),this.customerService.getContacts(this.customerId),this.commonservice.getManagementStructureNameandCodes(this.managementStructureId),this.salesOrderService.getSOMarginSummary(this.salesOrderView.salesOrder.salesOrderId)).subscribe((function(t){e.isSpinnerVisible=!1,e.onempDataLoadSuccessful(t[0][0]),e.setAllCustomerContact(t[1]),e.setManagementStructureCodes(t[2]),t[3]?e.marginSummary=t[3]:e.marginSummary=new _e}),(function(t){e.isSpinnerVisible=!1}))}},{key:"viewSelectedStockLine",value:function(e){this.partModal=this.modalService.open(be.a,{size:"lg",backdrop:"static",keyboard:!1}),this.partModal.componentInstance.stockLineId=e.stockLineId,this.partModal.result.then((function(){}),(function(){}))}},{key:"marshallParts",value:function(e){var t=this,r=[];if(e&&e.length>0)return e.forEach((function(n,s){var a=e[s],i=t.salesOrderService.marshalSOPartToView(a,t.salesOrder);r.push(i)})),r}},{key:"onempDataLoadSuccessful",value:function(e){this.allEmployeeinfo=e}},{key:"setAllCustomerContact",value:function(e){e[0]&&e[0].length>0?this.customerContactList=e[0]:this.customerContactList=[]}},{key:"onTabChange",value:function(e){1==e.index&&this.salesOrderApproveComponent.refresh(this.marginSummary),2==e.index&&this.salesOrderCustomerApprovalComponent.refresh(this.marginSummary,this.salesOrderView.salesOrder.salesOrderId,this.salesOrderView.salesOrder.salesOrderQuoteId,!0,this.customerContactList),4==e.index&&this.salesOrderFreightComponent.refresh(!0),5==e.index&&this.salesOrderChargesComponent.refresh(!0),6==e.index&&this.salesOrderDocumentComponent.refresh(),9==e.index&&this.salesOrderAnalysisComponent.refresh(this.salesOrderView.salesOrder.salesOrderId)}},{key:"verifySalesQuoteConversion",value:function(e){}},{key:"onPartsApprovedEvent",value:function(e){}},{key:"setManagementStructureCodes",value:function(e){e.Level1?this.managementStructure.level1=e.Level1:this.managementStructure.level1="-",e.Level2?this.managementStructure.level2=e.Level2:this.managementStructure.level2="-",e.Level3?this.managementStructure.level3=e.Level3:this.managementStructure.level3="-",e.Level4?this.managementStructure.level4=e.Level4:this.managementStructure.level4="-"}},{key:"saveSalesOrderFreightsList",value:function(e){}},{key:"updateSalesOrderFreightsList",value:function(e){}},{key:"getFreightList",value:function(){}},{key:"saveSalesOrderChargesList",value:function(e){}},{key:"updateSalesOrderChargesList",value:function(e){}},{key:"getChargesList",value:function(){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"userId",get:function(){return this.authService.currentUser?this.authService.currentUser.id:0}},{key:"currentUserManagementStructureId",get:function(){return this.authService.currentUser?this.authService.currentUser.managementStructureId:null}}]),e}();_t.ctorParameters=function(){return[{type:F.a},{type:ae.a},{type:E.b},{type:R.c},{type:N.Router},{type:H.a},{type:j.a},{type:_.a},{type:B.a},{type:z.a}]},n.b([Object(s.ViewChild)(We,{static:!1})],_t.prototype,"salesOrderApproveComponent",void 0),n.b([Object(s.ViewChild)(Ke,{static:!1})],_t.prototype,"salesOrderCustomerApprovalComponent",void 0),n.b([Object(s.ViewChild)(et,{static:!1})],_t.prototype,"salesOrderChargesComponent",void 0),n.b([Object(s.ViewChild)(Ze,{static:!1})],_t.prototype,"salesOrderFreightComponent",void 0),n.b([Object(s.ViewChild)(Ht,{static:!1})],_t.prototype,"salesOrderDocumentComponent",void 0),n.b([Object(s.ViewChild)(ot,{static:!1})],_t.prototype,"salesOrderAnalysisComponent",void 0),n.b([Object(s.Input)()],_t.prototype,"salesOrderId",void 0),n.b([Object(s.Input)()],_t.prototype,"customerId",void 0),n.b([Object(s.Input)()],_t.prototype,"salesOrderView",void 0),_t=n.b([Object(s.Component)({selector:"app-sales-order-view",template:n.c(r("6Brs")).default,styles:[n.c(r("mf9h")).default]})],_t);var zt=r("x0yz"),Wt=r("2ONF"),Gt=function e(){_classCallCheck(this,e),this.copyParts=!0,this.copyInternalApprovals=!0},$t=function(){function e(t,r){_classCallCheck(this,e),this.modalService=t,this.router=r,this.onConfirm=new s.EventEmitter,this.salesOrderCopyParameters=new Gt}return _createClass(e,[{key:"ngOnInit",value:function(){}},{key:"close",value:function(){this.modalReference&&this.modalReference.close()}},{key:"copy",value:function(){var e={queryParams:{cp:this.salesOrderCopyParameters.copyParts,cia:this.salesOrderCopyParameters.copyInternalApprovals}};this.onConfirm.emit(e)}}]),e}();$t.ctorParameters=function(){return[{type:R.c},{type:N.Router}]},n.b([Object(s.Input)("modal-reference")],$t.prototype,"modalReference",void 0),n.b([Object(s.Input)("on-confirm")],$t.prototype,"onConfirm",void 0),$t=n.b([Object(s.Component)({selector:"app-sales-order-copy",template:n.c(r("fSHZ")).default,styles:[n.c(r("reQ4")).default]})],$t);var Yt=function(){function e(t,r,n){_classCallCheck(this,e),this.modalService=t,this.salesOrderService=r,this.router=n,this.onConfirm=new s.EventEmitter,this.salesOrder=[],this.todayDate=new Date,this.parts=[],this.management={},this.salesOrderCopyParameters=new Gt}return _createClass(e,[{key:"ngOnInit",value:function(){this.getSalesPickTicketView()}},{key:"getSalesPickTicketView",value:function(){var e=this;this.salesOrderService.getPickTicket(this.salesOrderCopyParameters.salesOrderId).subscribe((function(t){e.salesOrderoView=t[0],e.salesOrder=t[0].soPickTicketViewModel,e.parts=t[0].soPickTicketPartViewModel,e.management=t[0].managementStructureHeaderData,console.log(e.parts),console.log(e.salesOrder)}))}},{key:"close",value:function(){this.modalReference&&this.modalReference.close()}},{key:"copy",value:function(){var e={queryParams:{cp:this.salesOrderCopyParameters.copyParts,cia:this.salesOrderCopyParameters.copyInternalApprovals}};this.onConfirm.emit(e)}}]),e}();Yt.ctorParameters=function(){return[{type:R.c},{type:ae.a},{type:N.Router}]},n.b([Object(s.Input)("modal-reference")],Yt.prototype,"modalReference",void 0),n.b([Object(s.Input)("on-confirm")],Yt.prototype,"onConfirm",void 0),n.b([Object(s.Input)()],Yt.prototype,"salesOrderoView",void 0),Yt=n.b([Object(s.Component)({selector:"app-sales-order-pickTicket",template:n.c(r("Fy9i")).default,styles:[n.c(r("SPTF")).default]})],Yt);var Kt=function(){function e(t,r){_classCallCheck(this,e),this.modalService=t,this.salesQuoteService=r,this.onActionClick=new s.EventEmitter,this.salesOrderActionType=Re,this.actionType=Re.None,this.confirmationType=qe.None,this.confirmationModal={header:"Confirm",body:{close:"Do you want to close the sales order?",cancel:"Do you want to cancel the sales order?",duplicate:"Do you want to create duplicate sales order? "}}}return _createClass(e,[{key:"ngOnInit",value:function(){this.initPrintActions(),this.initActions(),this.initCommunication(),this.initPayment(),this.salesQuote=new q}},{key:"onClick",value:function(e){e==Re.CancelSalesOrder?this.openConfirmationModal(e,this.confirmationModal.header,this.confirmationModal.body.cancel):e==Re.CloseSalesOrder?this.openConfirmationModal(e,this.confirmationModal.header,this.confirmationModal.body.close):this.onActionClick.emit(new je(e,qe.None))}},{key:"openConfirmationModal",value:function(e,t,r){this.modal=this.modalService.open(He,{size:"sm"});var n=this.modal.componentInstance;n.header=t,n.body=r,n.onConfirm.subscribe(this.onActionClick),n.salesOrderActionType=e,n.modalRef=this.modal,this.modal.result.then((function(){}),(function(){}))}},{key:"onConfirm",value:function(e){this.onActionClick.emit(e)}},{key:"initPrintActions",value:function(){var e=this;this.printItems=[{label:"Print SO",command:function(){e.onActionClick.emit(new je(Re.PrintSalesOrder,qe.None))}},{label:"Print Pick Ticket",command:function(){e.PrintTicket()}},{label:"Print Labels",command:function(){e.onActionClick.emit(new je(Re.PrintLabels,qe.None))}}]}},{key:"initCommunication",value:function(){var e=this;this.communicationItems=[{label:"Memo",command:function(){e.onActionClick.emit(new je(Re.Memo,qe.None))}},{label:"Email",command:function(){e.onActionClick.emit(new je(Re.Email,qe.None))}},{label:"Phone",command:function(){e.onActionClick.emit(new je(Re.Phone,qe.None))}},{label:"Text",command:function(){e.onActionClick.emit(new je(Re.Text,qe.None))}}]}},{key:"initPayment",value:function(){var e=this;this.paymentItems=[{label:"Make Payment",command:function(){e.onActionClick.emit(new je(Re.MakePayment,qe.None))}},{label:"Partial Payment",command:function(){e.onActionClick.emit(new je(Re.PartialPayment,qe.None))}},{label:"Cash Sales",command:function(){e.onActionClick.emit(new je(Re.CashSales,qe.None))}},{label:"Deposit",command:function(){e.onActionClick.emit(new je(Re.Deposit,qe.None))}}]}},{key:"initActions",value:function(){var e=this;this.actionItems=[{label:"Email SO",command:function(){e.onActionClick.emit(new je(Re.EmailSalesOrder,qe.None))}},{label:"Make Duplicate",command:function(){e.copySalesOrder()}},{label:"Sales Register",command:function(){e.onActionClick.emit(new je(Re.SalesRegister,qe.None))}},{label:"Activity",command:function(){e.onActionClick.emit(new je(Re.Activity,qe.None))}},{label:"Authorize Return",command:function(){e.onActionClick.emit(new je(Re.AuthorizeReturn,qe.None))}},{label:"Refund",command:function(){e.onActionClick.emit(new je(Re.Refund,qe.None))}}]}},{key:"copySalesOrder",value:function(){var e=this;this.modal=this.modalService.open($t,{size:"sm"});var t=this.modal.componentInstance;t.modalReference=this.modal,t.onConfirm.subscribe((function(t){e.navigate(t)})),t.salesOrderCopyParameters.customerId=this.customerId,t.salesOrderCopyParameters.salesOrderId=this.salesOrderId,this.modal.result.then((function(){}),(function(){}))}},{key:"PrintTicket",value:function(){var e=this;this.modal=this.modalService.open(Yt,{size:"lg"});var t=this.modal.componentInstance;t.modalReference=this.modal,t.onConfirm.subscribe((function(t){e.navigate(t)})),t.salesOrderCopyParameters.salesOrderId=this.salesOrderId,this.modal.result.then((function(){}),(function(){}))}},{key:"Memo",value:function(){var e=this;this.modal=this.modalService.open(Yt,{size:"lg"});var t=this.modal.componentInstance;t.modalReference=this.modal,t.onConfirm.subscribe((function(t){e.navigate(t)})),t.salesOrderCopyParameters.salesOrderId=this.salesOrderId,this.modal.result.then((function(){}),(function(){}))}},{key:"Email",value:function(){var e=this;this.modal=this.modalService.open(Yt,{size:"lg"});var t=this.modal.componentInstance;t.modalReference=this.modal,t.onConfirm.subscribe((function(t){e.navigate(t)})),t.salesOrderCopyParameters.salesOrderId=this.salesOrderId,this.modal.result.then((function(){}),(function(){}))}},{key:"Phone",value:function(){var e=this;this.modal=this.modalService.open(Yt,{size:"lg"});var t=this.modal.componentInstance;t.modalReference=this.modal,t.onConfirm.subscribe((function(t){e.navigate(t)})),t.salesOrderCopyParameters.salesOrderId=this.salesOrderId,this.modal.result.then((function(){}),(function(){}))}},{key:"Text",value:function(){var e=this;this.modal=this.modalService.open(Yt,{size:"lg"});var t=this.modal.componentInstance;t.modalReference=this.modal,t.onConfirm.subscribe((function(t){e.navigate(t)})),t.salesOrderCopyParameters.salesOrderId=this.salesOrderId,this.modal.result.then((function(){}),(function(){}))}},{key:"navigate",value:function(e){this.modal&&this.modal.close();var t="/salesmodule/salespages/sales-order-copy/".concat(this.customerId,"/").concat(this.salesOrderId);this.router.navigate([t],e)}},{key:"viewSelectedRow",value:function(e){this.modal=this.modalService.open(e,{size:"lg"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"dismissModel",value:function(){this.modal.close()}}]),e}();Kt.ctorParameters=function(){return[{type:R.c},{type:F.a}]},n.b([Object(s.Input)("customer-id")],Kt.prototype,"customerId",void 0),n.b([Object(s.Input)("sales-order-id")],Kt.prototype,"salesOrderId",void 0),n.b([Object(s.Input)("is-edit-mode")],Kt.prototype,"isEditmode",void 0),n.b([Object(s.Input)("control-settings")],Kt.prototype,"controlSettings",void 0),n.b([Object(s.Input)("router")],Kt.prototype,"router",void 0),n.b([Object(s.Output)("on-click")],Kt.prototype,"onActionClick",void 0),n.b([Object(s.ViewChild)("salesOrderConfirmationModal",{static:!1})],Kt.prototype,"salesOrderConfirmationModal",void 0),n.b([Object(s.ViewChild)("printPickTicketModal",{static:!1})],Kt.prototype,"printPickTicketModal",void 0),Kt=n.b([Object(s.Component)({selector:"app-sales-order-actions",template:n.c(r("etMe")).default,styles:[n.c(r("MBsq")).default]})],Kt);var Jt=function(){function e(t,r){_classCallCheck(this,e),this.customerService=t,this.salesQuoteService=r,this.salesQuote={},this.customerAddress={},this.todayDate=new Date,this.parts=[],this.subtotal=0,this.totalAmount=0}return _createClass(e,[{key:"ngOnInit",value:function(){console.log(this.salesQuoteView),this.getSalesQuoteView(),this.getCustomerById(this.salesQuoteView.salesOrderQuote.customerId)}},{key:"getCustomerById",value:function(e){var t=this;this.customerService.getCustomerdataById(e).subscribe((function(e){t.customerAddress=e[0]}))}},{key:"getSalesQuoteView",value:function(){var e=this;this.salesQuoteService.getview(this.salesQuoteView.salesOrderQuote.salesOrderQuoteId).subscribe((function(t){if(e.salesQuoteView=t[0],e.salesQuote=e.salesQuoteView.salesOrderQuote,e.parts=e.salesQuoteView.parts,e.parts.length>0)for(var r=0;r<e.parts.length;r++)e.subtotal=e.subtotal+e.parts[r].totalSales,e.totalAmount=e.subtotal;console.log(e.salesQuoteView,"this.salesQuoteview")}))}}]),e}();Jt.ctorParameters=function(){return[{type:H.a},{type:F.a}]},n.b([Object(s.Input)()],Jt.prototype,"salesQuoteView",void 0),Jt=n.b([Object(s.Component)({selector:"app-sales-quote-print-template",template:n.c(r("talG")).default,styles:[n.c(r("1UPW")).default]})],Jt);var Zt=r("PnId"),Xt=function(){function e(t,r){_classCallCheck(this,e),this.modalService=t,this.service=r,this.loading=!0,this.table={value:[],first:0,rows:0,columns:[],selectedColumns:[],selectedColumn:null,showPaginator:!0,totalRecords:0,pageSize:0,totalPages:0},this.customPaginate=new Qt,this.headers=[{field:"partNumber",header:"PN"},{field:"partDescription",header:"PN Description"},{field:"itemCategory",header:"Item Category",width:"200px",type:"text"},{field:"itemGroup",header:"Item Group"},{field:"stocklineNumber",header:"SL Num"},{field:"serialNumber",header:"Serial Num"},{field:"controlId",header:"Control Id"},{field:"controlNumber",header:"Control Num"},{field:"condition",header:"Cond"},{field:"quantityOnHand",header:"Qty On Hand"},{field:"quantityAvailable",header:"Qty Avail"},{field:"glAccountName",header:"GL Acct"},{field:"unitSalesPrice",header:"Unit Sale Price"},{field:"saleUnitCost",header:"Sale Unit Cost"}],this.selectedColumns=this.headers,this.showPaginator=!0,this.customPaginate.filters=new Pt}return _createClass(e,[{key:"ngOnInit",value:function(){this.loading=!0}},{key:"loadData",value:function(e){var t=this;this.loading=!0,this.customPaginate=Object.assign({},e,{filters:Object(W.j)(e.filters),globalFilter:""}),this.customPaginate.filters.itemMasterId=this.id,this.customPaginate.filters.conditionId=this.conditionId,this.service.getStockLineSalesListingEndpoint(this.customPaginate).subscribe((function(e){var r=new Qt;(r=null!=e?Object.assign({},e):r)&&r.results&&r.results.length>0?(t.customPaginate.results=r.results,t.customPaginate.totalRecordsCount=r.totalRecordsCount,t.customPaginate.resultSetSize=r.resultSetSize,t.customPaginate.totalPages=Math.ceil(r.totalRecordsCount/r.rows),t.loading=!1):(t.customPaginate.totalPages=0,t.loading=!1)}))}},{key:"close",value:function(){this.modal&&this.modal.close()}},{key:"viewStockLine",value:function(e){this.modalRef=this.modalService.open(be.a,{size:"lg",backdrop:"static",keyboard:!1}),this.modalRef.componentInstance.stockLineId=e.stockLineId,this.modalRef.result.then((function(){}),(function(){}))}},{key:"viewStockLineHistory",value:function(e){this.modalRef=this.modalService.open(Nt.a,{size:"lg",backdrop:"static",keyboard:!1}),this.modalRef.componentInstance.stockLineId=e.stockLineId,this.modalRef.componentInstance.stockLineNumber=e.stocklineNumber,this.modalRef.result.then((function(){}),(function(){}))}}]),e}();Xt.ctorParameters=function(){return[{type:R.c},{type:Dt.a}]},n.b([Object(s.Input)()],Xt.prototype,"id",void 0),n.b([Object(s.Input)()],Xt.prototype,"conditionId",void 0),n.b([Object(s.Input)("part-number")],Xt.prototype,"partNumber",void 0),n.b([Object(s.Input)("modal-ref")],Xt.prototype,"modal",void 0),Xt=n.b([Object(s.Component)({selector:"app-sales-stockline-part-details-view",template:n.c(r("Jzvy")).default,styles:[n.c(r("U55D")).default]})],Xt);var er=function(){function e(t,r,n,a,i){_classCallCheck(this,e),this.itemMasterService=t,this.salesOrderService=r,this.commonService=n,this.authService=a,this.alertService=i,this.close=new s.EventEmitter,this.select=new s.EventEmitter,this.onPartReserve=new s.EventEmitter,this.selectedParts=[],this.employeesList=[],this.parts=[],this.selectAllParts=!1,this.disableSubmitButtonForAction=!0,console.log("add..."),this.searchType=Ct.a.ItemMaster}return _createClass(e,[{key:"ngOnInit",value:function(){this.getParts(),this.salesOrder=this.salesQuote,this.initColumns(),console.log(this.selectedPartDataForAction)}},{key:"initColumns",value:function(){"Unreserve"!=this.selectedPartActionType?this.columns=[{field:"partNumber",header:"PN",width:"100px"},{field:"partDescription",header:"PN Description   ",width:"200px"},{field:"stockLineNumber",header:"Stk Line Num   ",width:"100px"},{field:"controlNumber",header:"Cntr Num   ",width:"80px"},{field:"condition",header:"Condition Type    ",width:"100px"},{field:"oemDer",header:"OEM / PMA / DER",width:"100px"},{field:"quantity",header:"Qty Required ",width:"100px"},{field:"quantityReserved",header:"Qty Reserved",width:"100px"},{field:"qtyToReserve",header:"Qty To Reserve",width:"100px"},{field:"qtyToUnReserve",header:"Qty To UnReserve",width:"100px"},{field:"quantityOnHand",header:"Qty On Hand",width:"100px"},{field:"quantityAvailable",header:"Qty Available   ",width:"100px"},{field:"quantityOnOrder",header:"Qty On Order",width:"100px"},{field:"reservedDate",header:"Reserved Date",width:"150px"},{field:"reservedById",header:"Reserved By",width:"150px"}]:this.columns=[{field:"partNumber",header:"PN",width:"100px"},{field:"partDescription",header:"PN Description   ",width:"200px"},{field:"stockLineNumber",header:"Stk Line Num   ",width:"100px"},{field:"controlNumber",header:"Cntr Num   ",width:"800px"},{field:"condition",header:"Condition Type    ",width:"100px"},{field:"oemDer",header:"OEM / PMA / DER",width:"100px"},{field:"quantity",header:"Qty Required ",width:"100px"},{field:"quantityReserved",header:"Qty Reserved",width:"100px"},{field:"qtyToReserve",header:"Qty To Reserve",width:"100px"},{field:"qtyToUnReserve",header:"Qty To UnReserve",width:"100px"},{field:"quantityOnHand",header:"Qty On Hand",width:"100px"},{field:"quantityAvailable",header:"Qty Available   ",width:"100px"},{field:"quantityOnOrder",header:"Qty On Order",width:"100px"},{field:"reservedDate",header:"UnReserved Date",width:"150px"},{field:"reservedById",header:"UnReserved By",width:"150px"}]}},{key:"getParts",value:function(){switch(this.selectedPartActionType){case"Reserve":this.getReserverdParts();break;case"Unreserve":this.getUnreservedParts()}}},{key:"onChange",value:function(e,t){var r=e.srcElement.checked;this.onPartReserve.emit({checked:r,part:t})}},{key:"getReserverdParts",value:function(){var e=this;this.startTimer(),this.salesOrderService.getReservestockpartlists(this.part.salesOrderId,this.part.itemMasterId).subscribe((function(t){e.parts=t[0];for(var r=0;r<e.parts.length;r++)console.log(e.parts[r].oemDer),null==e.parts[r].oemDer&&(e.parts[r].oemDer=e.parts[r].stockType),e.parts[r].reservedDate=null==e.parts[r].reservedDate?new Date:new Date(e.parts[r].reservedDate),e.parts[r].issuedDate=null==e.parts[r].issuedDate?new Date:new Date(e.parts[r].reservedDate),e.parts[r].isSelected=!1,0==e.parts[r].qtyToReserve&&(e.parts[r].qtyToReserve=null)}))}},{key:"getUnreservedParts",value:function(){var e=this;this.salesOrderService.getunreservedstockpartslist(this.part.salesOrderId,this.part.itemMasterId).subscribe((function(t){e.parts=t[0];for(var r=0;r<e.parts.length;r++)console.log(e.parts[r].oemDer),null==e.parts[r].oemDer&&(e.parts[r].oemDer=e.parts[r].stockType),e.parts[r].reservedDate=null==e.parts[r].reservedDate?new Date:new Date(e.parts[r].reservedDate),e.parts[r].isSelected=!1,e.parts[r].qtyToUnReserve&&0==e.parts[r].qtyToUnReserve&&(e.parts[r].qtyToUnReserve=null)}))}},{key:"onChangeOfSelectAllQuotes",value:function(e){for(var t=0;t<this.parts.length;t++)1==e?(this.parts[t].isSelected=!0,this.disableSubmitButtonForAction=!1):(this.parts[t].isSelected=!1,this.disableSubmitButtonForAction=!0)}},{key:"onChangeOfPartSelection",value:function(e){var t=this;this.salesOrderService.getholdstocklinereservedparts(this.part.salesOrderId,this.part.salesOrderPartId,this.part.stockLineId,this.part.quantityRequested).subscribe((function(e){t.parts=e[0]}));for(var r=0,n=0;n<this.parts.length;n++)1==e?r+=1:0!=r&&(r-=1);this.disableSubmitButtonForAction=0==r}},{key:"show",value:function(e){this.display=e}},{key:"onClose",value:function(){event.preventDefault(),this.close.emit(!0),clearInterval(this.interval),this.minutes="00",this.seconds="00",this.releaseStock()}},{key:"releaseStock",value:function(){this.salesOrderService.releasestocklinereservedparts(this.part.salesOrderId).subscribe((function(e){}))}},{key:"filterReservedBy",value:function(e){var t=_toConsumableArray(this.employeesList.filter((function(t){if(t.name.toLowerCase().includes(e.query.toLowerCase()))return t.name})));this.employeesList=t}},{key:"savereserveissuesparts",value:function(e){var t=this,r=[];e.filter((function(e){e.createdBy=t.userName,e.updatedBy=t.userName,null!=e.reservedById&&(e.reservedById=e.reservedById.employeeId),1==e.isSelected&&r.push(e)})),e=[],e=r,this.salesOrderService.savereserveissuesparts(e).subscribe((function(e){t.alertService.stopLoadingMessage(),t.alertService.showMessage("Success","Part updated.",E.d.success)}),(function(e){return t.saveFailedHelper(e)}))}},{key:"saveFailedHelper",value:function(e){this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage(e,null,E.d.error)}},{key:"setTimer",value:function(){this.seconds;var e="1:01";this.interval=setInterval((function(){var t=e.split(":");this.minutes=parseInt(t[0],10),this.seconds=parseInt(t[1],10),--this.seconds,this.minutes=this.seconds<0?--this.minutes:this.minutes,this.minutes<0&&clearInterval(this.interval),this.seconds=this.seconds<0?59:this.seconds,this.seconds=this.seconds<10?"0"+this.seconds:this.seconds,L(".clockdiv").html("Session Expire in "+this.minutes+":"+this.seconds),e=this.minutes+":"+this.seconds,0==this.minutes&&0==this.seconds&&(this.minutes="00",this.seconds="00",clearInterval(this.interval),L("#reserve").modal("hide"))}),1e3)}},{key:"startTimer",value:function(){var e=this;this.counter={min:10,sec:1};var t=setInterval((function(){e.counter.sec-1==-1?(e.counter.min-=1,e.counter.sec=59):e.counter.sec-=1,(0==e.counter.min&&0==e.counter.sec||e.counter.min<0)&&(clearInterval(t),L("#reserve").modal("hide"))}),1200)}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();er.ctorParameters=function(){return[{type:It.a},{type:ae.a},{type:_.a},{type:z.a},{type:E.b}]},n.b([Object(s.Input)()],er.prototype,"display",void 0),n.b([Object(s.Input)()],er.prototype,"customer",void 0),n.b([Object(s.Input)()],er.prototype,"selectedPartDataForAction",void 0),n.b([Object(s.Input)()],er.prototype,"selectedPartActionType",void 0),n.b([Object(s.Input)()],er.prototype,"salesQuote",void 0),n.b([Object(s.Input)()],er.prototype,"salesOrderId",void 0),n.b([Object(s.Input)()],er.prototype,"selectedPart",void 0),n.b([Object(s.Output)()],er.prototype,"close",void 0),n.b([Object(s.Output)()],er.prototype,"select",void 0),n.b([Object(s.Output)()],er.prototype,"onPartReserve",void 0),n.b([Object(s.Input)()],er.prototype,"selectedParts",void 0),n.b([Object(s.Input)()],er.prototype,"part",void 0),n.b([Object(s.Input)()],er.prototype,"employeesList",void 0),er=n.b([Object(s.Component)({selector:"add-reserve-unreserve-part-number",template:n.c(r("MN9p")).default,styles:[n.c(r("kvBV")).default]})],er);var tr=r("hZbH"),rr=function(){function e(t,r,n){_classCallCheck(this,e),this.activeModal=t,this.employeeService=r,this.communicationService=n,this.isView=!1,this.selectedParts={},this.customerInfoFromSalesQuote={},this.SalesOrderId=null,this.salesQuoteId=null,this.pageSize=10,this.pageIndex=0,this.totalRecords=0,this.moduleId=0,this.referenceId=0,this.partNo=0,this.data=[],this.headers=[{field:"description",header:"Memo"},{field:"updatedBy",header:"Updated By"},{field:"updatedDate",header:"Updated Date"}],this.selectedColumns=this.headers,this.addList=[]}return _createClass(e,[{key:"ngOnInit",value:function(){console.log(this.customerContactList),null!=this.salesQuoteId?(this.partNo=this.selectedParts.partNumber,this.moduleId=oe.a.SALES_ORDER_QUOTE_MODULE_ID,this.referenceId=this.salesQuoteId,this.getAllMemoList(this.referenceId,this.moduleId,this.partNo),this.getAllEmployees()):null!=this.SalesOrderId&&(this.partNo=0,this.moduleId=oe.a.SALES_ORDER__MODULE_ID,this.referenceId=this.SalesOrderId,console.log(this.partNo),console.log(this.moduleId),console.log(this.referenceId),this.getAllMemoList(this.referenceId,this.moduleId,this.partNo),this.getAllEmployees())}},{key:"ngOnChanges",value:function(){console.log(this.customerContactList),this.getAllMemoList(this.referenceId,this.moduleId,this.partNo),this.getAllEmployees()}},{key:"dismissModel",value:function(){this.activeModal.close()}},{key:"loadData",value:function(e){this.lazyLoadEventData=e;var t=parseInt(e.first)/e.rows;this.pageIndex=t,this.pageSize=e.rows,e.first=t,console.log(e)}},{key:"addMemo",value:function(){this.addList=[],this.addList.push({memoId:"",description:""})}},{key:"saveMemo",value:function(){var e=this;if(this.isEdit){var t=this.formData(this.addList);this.communicationService.updateMemo(t).subscribe((function(t){e.getAllMemoList(e.referenceId,e.moduleId,e.partNo),L("#addNewMemo").modal("hide")}))}else{L("#addNewMemo").modal("hide");var r=this.formData(this.addList);this.communicationService.saveMemo(r).subscribe((function(t){e.getAllMemoList(e.referenceId,e.moduleId,e.partNo)}))}this.addList=[]}},{key:"formData",value:function(e){var t={MemoCode:0,Description:e[0].description,ModuleId:this.moduleId,ReferenceId:this.referenceId,WorkOrderPartNo:0,MasterCompanyId:1,CreatedBy:"admin",UpdatedBy:"admin",CreatedDate:new Date,UpdatedDate:new Date,IsActive:!0,IsDeleted:!1};return this.isEdit&&(t.MemoId=e[0].memoId),t}},{key:"getAllEmployees",value:function(){var e=this;this.employeeService.getEmployeeList().subscribe((function(t){e.employees=t[0],console.log(e.employees)}))}},{key:"getAllMemoList",value:function(e,t,r){var n=this;this.communicationService.getMemoList(e,t,r).subscribe((function(e){e&&e.length>0&&(n.newdata=e.reverse().map((function(e,t){return e.SERIAL_NO=t+1,e}))),n.data=n.newdata.reverse(),n.totalRecords=e.length,n.totalPages=Math.ceil(n.totalRecords/n.pageSize),console.log("dayata",n.data)}))}},{key:"edit",value:function(e,t){this.isEdit=!0,this.addList=[e]}},{key:"deleteMemo",value:function(e){var t=this;this.communicationService.deleteMemoList(e.memoId).subscribe((function(e){t.getAllMemoList(t.referenceId,t.moduleId,t.partNo)}))}},{key:"pageIndexChange",value:function(e){this.pageSize=e.rows}},{key:"getHtml",value:function(e,t){return"description"==t?L.parseHTML(e)[0]:e}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}}]),e}();rr.ctorParameters=function(){return[{type:R.b},{type:j.a},{type:tr.a}]},n.b([Object(s.Input)()],rr.prototype,"isView",void 0),n.b([Object(s.Input)()],rr.prototype,"selectedParts",void 0),n.b([Object(s.Input)()],rr.prototype,"customerInfoFromSalesQuote",void 0),n.b([Object(s.Input)()],rr.prototype,"customerContactList",void 0),n.b([Object(s.Input)()],rr.prototype,"SalesOrderId",void 0),n.b([Object(s.Input)()],rr.prototype,"salesQuoteId",void 0),rr=n.b([Object(s.Component)({selector:"app-m-memo",template:n.c(r("+gyq")).default,styles:[n.c(r("E8By")).default]})],rr);var nr=function(){function e(t,r,n,s,a,i,o,l,d){_classCallCheck(this,e),this.activeModal=t,this.communicationService=r,this.employeeService=n,this.commonService=s,this.authService=a,this.modalService=i,this.salesQuoteService=o,this.alertService=l,this.configurations=d,this.customerInfoFromSalesQuote={},this.salesQuoteId=null,this.SalesOrderId=null,this.isViewFromWO=!1,this.savedWorkOrderData=[],this.selectedPartNumber={},this.customerContactList=[],this.formData=new FormData,this.isView=!1,this.defaultPrimaryEmail="",this.pageSize=10,this.pageIndex=0,this.totalRecords=0,this.totalPages=0,this.data=[],this.headers=[{field:"emailType",header:"Email Type"},{field:"subject",header:"Subject"},{field:"contactBy",header:"Contacted By"},{field:"contactDate",header:"Contact Date"}],this.selectedColumns=this.headers,this.addList=[],this.employeeList=[],this.employeesOriginalData=[],this.emailViewData={},this.moduleId=0,this.referenceId=0,this.customerDetails={},this.customerContactCCList=[]}return _createClass(e,[{key:"ngOnInit",value:function(){this.salesQuoteId&&(this.moduleId=oe.a.SALES_ORDER_QUOTE_MODULE_ID,this.referenceId=this.salesQuoteId),this.SalesOrderId&&(this.customerDetails={customerName:this.customerInfoFromSalesQuote.customerName,customerCode:this.customerInfoFromSalesQuote.customerCode},this.customerId=this.customerInfoFromSalesQuote.customerId,this.moduleId=oe.a.SALES_ORDER__MODULE_ID,this.referenceId=this.SalesOrderId),this.customerDetails={customerName:this.customerInfoFromSalesQuote.customerName,customerCode:this.customerInfoFromSalesQuote.customerCode},this.customerId=this.customerInfoFromSalesQuote.customerId,this.getContactDetailsById(this.customerId),this.getAllEmployees(),this.getAllEmail(),this.getAllEmailType()}},{key:"getContactDetailsById",value:function(e){var t=this;this.commonService.getCustomerContactsById(e).subscribe((function(e){t.customerContactList=e;for(var r=0;r<t.customerContactList.length;r++)t.customerContactList[r].contactName=t.customerContactList[r].firstName+" "+t.customerContactList[r].lastName}))}},{key:"ngOnChanges",value:function(){this.getAllEmail()}},{key:"dismissModel",value:function(){this.activeModal.close()}},{key:"loadData",value:function(e){this.lazyLoadEventData=e;var t=parseInt(e.first)/e.rows;this.pageIndex=t,this.pageSize=e.rows,e.first=t}},{key:"addMemo",value:function(){var e=this;if(this.formData=new FormData,this.customerContactList&&this.customerContactList.length>0){this.customerContactCCList=[];for(var t=0;t<this.customerContactList.length;t++)1==this.customerContactList[t].isDefaultContact?(this.customerContact=this.customerContactList[t],this.contactSelected(this.customerContactList[t])):this.customerContactCCList.push(this.customerContactList[t].email)}this.bcc="",this.cc="",this.emailBody="",this.contactBy="",this.subject="",this.emailTypes&&this.emailTypes.length>0&&this.emailTypes.forEach((function(t){"Manual"==t.label&&(e.emailType=t.value)})),this.addList.push({memoId:"",memo:""})}},{key:"onChangeToEmail",value:function(){if(this.customerContactList&&this.customerContactList.length>0){this.customerContactCCList=[];for(var e=0;e<this.customerContactList.length;e++)1==this.customerContactList[e].isDefaultContact?this.toEmail!=this.defaultPrimaryEmail&&this.customerContactCCList.push(this.customerContactList[e].email):this.customerContactCCList.push(this.customerContactList[e].email)}}},{key:"fileUpload",value:function(e){var t,r=_createForOfIteratorHelper(e.files);try{for(r.s();!(t=r.n()).done;){var n=t.value;this.formData.append(n.name,n)}}catch(s){r.e(s)}finally{r.f()}}},{key:"removeFile",value:function(e){this.formData.delete(e.file.name)}},{key:"send",value:function(e){if(e)if(this.salesQuoteId){var t=this.emailQuotePopup;this.getQuotePDF(),this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}else this.triggerMail()}},{key:"triggerMailSalesQuote",value:function(){var e=this;this.formData=new FormData,null==this.cc&&(this.cc=""),null==this.bcc&&(this.bcc="");var t={WorkOrderPartNo:this.selectedPartNumber.workOrderPartNumberId,fromEmail:oe.a.FROM_EMAIL_FOR_SENDING_MAIL,toEmail:this.toEmail,masterCompanyId:1,cc:this.cc,bcc:this.bcc,subject:this.subject,emailBody:this.emailBody,moduleId:this.moduleId,referenceId:this.referenceId,createdBy:this.userName,updatedBy:this.userName,createdDate:new Date,updatedDate:new Date,isActive:!0,isDeleted:!1,contactById:this.contactBy.employeeId,emailType:this.emailType,isCommunicationTab:!0};for(var r in t)this.formData.append(r,t[r]);this.communicationService.saveAndUpdateEmailOfSalesQuote(this.formData).subscribe((function(t){e.contactBy=null,e.emailType=null,e.cc="",e.bcc="",e.toEmail="",e.emailBody="",e.subject="",L("#addNewMemo").modal("hide"),e.getAllEmail(),e.salesQuoteId&&e.closeModal(),e.fileUploadInput&&e.fileUploadInput.clear()}))}},{key:"triggerMail",value:function(){var e=this;null==this.cc&&(this.cc=""),null==this.bcc&&(this.bcc="");var t={WorkOrderPartNo:this.selectedPartNumber.workOrderPartNumberId,fromEmail:oe.a.FROM_EMAIL_FOR_SENDING_MAIL,toEmail:this.toEmail,masterCompanyId:1,cc:this.cc,bcc:this.bcc,subject:this.subject,emailBody:this.emailBody,moduleId:this.moduleId,referenceId:this.referenceId,createdBy:this.userName,updatedBy:this.userName,createdDate:new Date,updatedDate:new Date,isActive:!0,isDeleted:!1,contactById:this.contactBy.employeeId,emailType:this.emailType,customerContactId:this.customerContact.contactId,isCommunicationTab:!0};for(var r in t)this.formData.append(r,t[r]);this.communicationService.saveAndUpdateEmailOfSalesOrder(this.formData).subscribe((function(t){e.contactBy=null,e.emailType=null,e.cc="",e.bcc="",e.toEmail="",e.emailBody="",e.subject="",L("#addNewMemo").modal("hide"),e.getAllEmail(),e.salesQuoteId&&e.closeModal()}))}},{key:"emailView",value:function(e){this.emailViewData=e,this.isView=!0}},{key:"downloadFileUpload",value:function(e){var t="".concat(this.configurations.baseUrl,"/api/FileUpload/downloadattachedfile?filePath=").concat(e);window.location.assign(t)}},{key:"getQuotePDF",value:function(){var e=this;this.communicationService.soqsendmailpdfpreview(this.salesQuoteId).subscribe((function(t){e.pdfPath=t}))}},{key:"getAllEmployees",value:function(){var e=this;this.commonService.smartDropDownList("Employee","EmployeeId","FirstName").subscribe((function(t){console.log("Employee details:",t),e.employeesOriginalData=t.map((function(e){return Object.assign({},e,{employeeId:e.value,name:e.label})}))}))}},{key:"filterEmployee",value:function(e){if(this.employeeList=this.employeesOriginalData,void 0!==e.query&&null!==e.query){var t=_toConsumableArray(this.employeesOriginalData.filter((function(t){return t.label.toLowerCase().includes(e.query.toLowerCase())})));this.employeeList=t}}},{key:"filterCustomerContact",value:function(e){if(this.cusContactList=this.customerContactList,void 0!==e.query&&null!==e.query&&""!==e.query){var t=_toConsumableArray(this.customerContactList.filter((function(t){return t.contactName.toLowerCase().includes(e.query.toLowerCase())})));this.cusContactList=t}}},{key:"getAllEmail",value:function(){var e=this;this.communicationService.getEmailList(this.referenceId,this.moduleId,this.selectedPartNumber.workOrderPartNumberId).subscribe((function(t){e.data=t,console.log("response all emails",e.data)}))}},{key:"getAllEmailType",value:function(){var e=this;this.commonService.smartDropDownList("EmailType","EmailTypeId","Name").subscribe((function(t){e.emailTypes=t}))}},{key:"editEmail",value:function(e){this.toEmail=e.toEmail,this.cc=e.cc,this.bcc=e.bcc,this.subject=e.subject,this.emailBody=e.emailBody,this.contactBy=e.contactBy,this.emailType=e.emailType}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"closeModal",value:function(){this.modal.close(),this.fileUploadInput&&this.fileUploadInput.clear()}},{key:"contactSelected",value:function(e){this.toEmail=e.email,this.defaultPrimaryEmail=e.email}},{key:"checkValidEmails",value:function(){var e=!1,t=/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;if(this.cc||this.bcc||this.toEmail){if(e=!0,this.cc){var r=this.cc.split(","),n=!1;if(r.forEach((function(e){t.test(e)||(n=!0)})),n)return!0}if(this.bcc){var s=this.bcc.split(","),a=!1;if(s.forEach((function(e){t.test(e)||(a=!0)})),a)return!0}if(this.toEmail){var i=!1;if(t.test(this.toEmail)||(i=!0),i)return!0}e=!1}return e}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();nr.ctorParameters=function(){return[{type:R.b},{type:tr.a},{type:j.a},{type:_.a},{type:z.a},{type:R.c},{type:F.a},{type:E.b},{type:Pe.a}]},n.b([Object(s.ViewChild)("fileUploadInput",{static:!1})],nr.prototype,"fileUploadInput",void 0),n.b([Object(s.Input)()],nr.prototype,"customerInfoFromSalesQuote",void 0),n.b([Object(s.Input)()],nr.prototype,"workOrderId",void 0),n.b([Object(s.Input)()],nr.prototype,"salesQuoteId",void 0),n.b([Object(s.Input)()],nr.prototype,"SalesOrderId",void 0),n.b([Object(s.Input)()],nr.prototype,"isViewFromWO",void 0),n.b([Object(s.Input)()],nr.prototype,"savedWorkOrderData",void 0),n.b([Object(s.Input)()],nr.prototype,"selectedPartNumber",void 0),n.b([Object(s.Input)()],nr.prototype,"customerContactList",void 0),n.b([Object(s.ViewChild)("emailQuotePopup",{static:!1})],nr.prototype,"emailQuotePopup",void 0),nr=n.b([Object(s.Component)({selector:"app-e-email",template:n.c(r("jsXu")).default,styles:[n.c(r("OxzN")).default]})],nr);var sr=function(){function e(t,r,n,s){_classCallCheck(this,e),this.activeModal=t,this.communicationService=r,this.employeeService=n,this.commonService=s,this.isView=!1,this.savedWorkOrderData=[],this.selectedPartNumber={},this.selectedParts={},this.customerInfoFromSalesQuote={},this.SalesOrderId=null,this.salesQuoteId=null,this.phoneViewData={},this.isEdit=!1,this.pageSize=10,this.pageIndex=0,this.totalRecords=0,this.employees=[],this.employeeList=[],this.data=[],this.headers=[{field:"phoneNo",header:"Phone"},{field:"contactBy",header:"Contacted By"},{field:"notes",header:"Notes"}],this.selectedColumns=this.headers,this.addList=[]}return _createClass(e,[{key:"ngOnInit",value:function(){this.salesQuoteId?(this.moduleId=oe.a.SALES_ORDER_QUOTE_MODULE_ID,this.referenceId=this.salesQuoteId,console.log(this.moduleId),console.log(this.referenceId),this.getAllPhoneList(this.referenceId,this.moduleId,0),this.getAllEmployees()):this.SalesOrderId&&(this.moduleId=oe.a.SALES_ORDER__MODULE_ID,this.referenceId=this.SalesOrderId,console.log(this.moduleId),console.log(this.referenceId),this.getAllPhoneList(this.referenceId,this.moduleId,0),this.getAllEmployees())}},{key:"ngOnChanges",value:function(){this.getAllPhoneList(this.referenceId,this.moduleId,0),this.getAllEmployees()}},{key:"filterCustomerContact",value:function(e){if(this.cusContactList=this.customerContactList,void 0!==e.query&&null!==e.query&&""!==e.query){var t=_toConsumableArray(this.customerContactList.filter((function(t){return t.firstName.toLowerCase().includes(e.query.toLowerCase())})));this.cusContactList=t}}},{key:"contactSelected",value:function(e){this.addList[0].phoneNo=e.workPhone.trim()}},{key:"edit",value:function(e,t){this.isEdit=!0,this.addList=[Object.assign({},e,{contactId:Object(W.d)("employeeId",e.contactId,this.employees)})]}},{key:"getAllPhoneList",value:function(e,t,r){var n=this;this.communicationService.getPhoneList(e,t,r).subscribe((function(e){n.data=e,n.totalRecords=e.length,n.totalPages=Math.ceil(n.totalRecords/n.pageSize)}))}},{key:"dismissModel",value:function(){this.activeModal.close()}},{key:"loadData",value:function(e){this.lazyLoadEventData=e;var t=parseInt(e.first)/e.rows;this.pageIndex=t,e.first=t,console.log(e)}},{key:"addPhone",value:function(){this.addList=[],this.addList.push({phoneNo:"",contactId:"",notes:""})}},{key:"savePhone",value:function(){var e=this;if(this.isEdit){var t=this.formData(this.addList);this.communicationService.updatePhone(t).subscribe((function(t){e.getAllPhoneList(e.referenceId,e.moduleId,0),e.isEdit=!1}))}else{var r=this.formData(this.addList);this.communicationService.savePhone(r).subscribe((function(t){e.getAllPhoneList(e.referenceId,e.moduleId,0)}))}this.addList=[]}},{key:"formData",value:function(e){console.log(this.customerContact);var t={PhoneNo:e[0].phoneNo,Notes:e[0].notes,ContactById:this.getEmpId(e[0].contactId),WorkOrderPartNo:this.selectedPartNumber.workOrderPartNumberId,customerContactId:this.customerContactList[0].customerContactId,ModuleId:this.moduleId,ReferenceId:this.referenceId,MasterCompanyId:1,CreatedBy:"admin",UpdatedBy:"admin",CreatedDate:"2019-12-31T04:30:28.21",UpdatedDate:"2019-12-31T04:30:28.21",IsActive:!0,IsDeleted:!1};return this.isEdit&&(t.communicationPhoneId=e[0].communicationPhoneId),[t]}},{key:"getPhoneData",value:function(e){this.communicationService.getPhoneData(this.referenceId,0,38,e.phoneNo).subscribe((function(e){console.log(e)}))}},{key:"getEmpId",value:function(e){return e.employeeId?e.employeeId:null}},{key:"getAllEmployees",value:function(){var e=this;this.commonService.smartDropDownList("Employee","EmployeeId","FirstName").subscribe((function(t){console.log("REs",t),e.employees=t.map((function(e){return Object.assign({},e,{employeeId:e.value,name:e.label})}))}))}},{key:"deletePhone",value:function(e){var t=this;this.communicationService.deletePhoneList(e.communicationPhoneId).subscribe((function(e){t.getAllPhoneList(t.referenceId,t.moduleId,0)}))}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"pageIndexChange",value:function(e){this.pageSize=e.rows}},{key:"filterEmployee",value:function(e){if(this.employeeList=this.employees,void 0!==e.query&&null!==e.query){var t=_toConsumableArray(this.employees.filter((function(t){return t.label.toLowerCase().includes(e.query.toLowerCase())})));this.employeeList=t}}},{key:"phoneView",value:function(e){this.phoneViewData=e}}]),e}();sr.ctorParameters=function(){return[{type:R.b},{type:tr.a},{type:j.a},{type:_.a}]},n.b([Object(s.Input)()],sr.prototype,"workOrderId",void 0),n.b([Object(s.Input)()],sr.prototype,"isView",void 0),n.b([Object(s.Input)()],sr.prototype,"savedWorkOrderData",void 0),n.b([Object(s.Input)()],sr.prototype,"selectedPartNumber",void 0),n.b([Object(s.Input)()],sr.prototype,"selectedParts",void 0),n.b([Object(s.Input)()],sr.prototype,"customerInfoFromSalesQuote",void 0),n.b([Object(s.Input)()],sr.prototype,"customerContactList",void 0),n.b([Object(s.Input)()],sr.prototype,"SalesOrderId",void 0),n.b([Object(s.Input)()],sr.prototype,"salesQuoteId",void 0),sr=n.b([Object(s.Component)({selector:"app-phone",template:n.c(r("41Kw")).default,styles:[n.c(r("Vta2")).default]})],sr);var ar=function(){function e(t,r,n,s){_classCallCheck(this,e),this.activeModal=t,this.communicationService=r,this.employeeService=n,this.commonService=s,this.isView=!1,this.savedWorkOrderData=[],this.selectedPartNumber={},this.selectedParts={},this.customerInfoFromSalesQuote={},this.SalesOrderId=null,this.salesQuoteId=null,this.pageSize=10,this.pageIndex=0,this.totalRecords=0,this.employees=[],this.employeeList=[],this.data=[],this.headers=[{field:"mobile",header:"Mobile"},{field:"contactBy",header:"Contacted By"},{field:"notes",header:"Notes"}],this.selectedColumns=this.headers,this.addList=[]}return _createClass(e,[{key:"ngOnInit",value:function(){this.salesQuoteId?(this.partNo=this.selectedParts.partNumber,this.moduleId=oe.a.SALES_ORDER_QUOTE_MODULE_ID,this.referenceId=this.salesQuoteId,this.getAllTextList(this.referenceId,this.moduleId,this.partNo),this.getAllEmployees()):this.SalesOrderId&&(this.partNo=this.selectedParts.partNumber,this.moduleId=oe.a.SALES_ORDER__MODULE_ID,this.referenceId=this.SalesOrderId,this.getAllTextList(this.referenceId,this.moduleId,this.partNo),this.getAllEmployees())}},{key:"ngOnChanges",value:function(){this.getAllEmployees(),this.getAllTextList(this.referenceId,this.moduleId,this.partNo)}},{key:"dismissModel",value:function(){this.activeModal.close()}},{key:"loadData",value:function(e){this.lazyLoadEventData=e;var t=parseInt(e.first)/e.rows;this.pageIndex=t,this.pageSize=e.rows,e.first=t,console.log(e)}},{key:"addText",value:function(){this.addList=[],this.addList.push({mobile:"",contactId:"",notes:""})}},{key:"edit",value:function(e,t){this.isEdit=!0,this.addList=[Object.assign({},e,{contactId:Object(W.d)("employeeId",e.contactId,this.employees)})]}},{key:"savePhone",value:function(){var e=this;if(this.isEdit){var t=this.formData(this.addList);this.communicationService.updateText(t).subscribe((function(t){e.getAllTextList(e.referenceId,e.moduleId,e.partNo),e.isEdit=!1}))}else{var r=this.formData(this.addList);this.communicationService.saveText(r).subscribe((function(t){e.getAllTextList(e.referenceId,e.moduleId,e.partNo)}))}this.addList=[]}},{key:"formData",value:function(e){var t=this;return e.map((function(e){var r={Mobile:e.mobile,Notes:e.notes,ContactById:t.getEmpId(e.contactId),WorkOrderPartNo:0,ModuleId:t.moduleId,ReferenceId:t.referenceId,MasterCompanyId:1,CreatedBy:"admin",UpdatedBy:"admin",CreatedDate:"2019-12-31T04:30:28.21",UpdatedDate:"2019-12-31T04:30:28.21",IsActive:!0,IsDeleted:!1};return t.isEdit&&(r.communicationTextId=e.communicationTextId),r}))}},{key:"getEmpId",value:function(e){return e.employeeId?e.employeeId:null}},{key:"getAllEmployees",value:function(){var e=this;this.commonService.smartDropDownList("Employee","EmployeeId","FirstName").subscribe((function(t){console.log("REs",t),e.employees=t.map((function(e){return Object.assign({},e,{employeeId:e.value,name:e.label})}))}))}},{key:"getAllTextList",value:function(e,t,r){var n=this;this.communicationService.getTextList(e,t,r).subscribe((function(e){n.data=e,n.totalRecords=e.length,n.totalPages=Math.ceil(n.totalRecords/n.pageSize)}))}},{key:"deleteText",value:function(e){var t=this;this.communicationService.deleteTextList(e.communicationTextId).subscribe((function(e){t.getAllTextList(t.referenceId,t.moduleId,t.partNo)}))}},{key:"pageIndexChange",value:function(e){this.pageSize=e.rows}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"filterEmployee",value:function(e){if(this.employeeList=this.employees,void 0!==e.query&&null!==e.query){var t=_toConsumableArray(this.employees.filter((function(t){return t.label.toLowerCase().includes(e.query.toLowerCase())})));this.employeeList=t}}}]),e}();ar.ctorParameters=function(){return[{type:R.b},{type:tr.a},{type:j.a},{type:_.a}]},n.b([Object(s.Input)()],ar.prototype,"workOrderId",void 0),n.b([Object(s.Input)()],ar.prototype,"isView",void 0),n.b([Object(s.Input)()],ar.prototype,"savedWorkOrderData",void 0),n.b([Object(s.Input)()],ar.prototype,"selectedPartNumber",void 0),n.b([Object(s.Input)()],ar.prototype,"selectedParts",void 0),n.b([Object(s.Input)()],ar.prototype,"customerInfoFromSalesQuote",void 0),n.b([Object(s.Input)()],ar.prototype,"customerContactList",void 0),n.b([Object(s.Input)()],ar.prototype,"SalesOrderId",void 0),n.b([Object(s.Input)()],ar.prototype,"salesQuoteId",void 0),ar=n.b([Object(s.Component)({selector:"app-text",template:n.c(r("uL9L")).default,styles:[n.c(r("lDwM")).default]})],ar);var ir=r("Y/47"),or=r("NoKm"),lr=r("8XG2");r.d(t,"SalesPagesModule",(function(){return dr}));var dr=function e(){_classCallCheck(this,e)};dr=n.b([Object(s.NgModule)({imports:[ft,O.KeyFilterModule,i.a,o.FormsModule,o.ReactiveFormsModule,d.a,l.b,a.CommonModule,c.TableModule,u.ButtonModule,p.SelectButtonModule,m.InputTextModule,h.MultiSelectModule,C.InputSwitchModule,g.AutoCompleteModule,w.CalendarModule,b.GMapModule,f.RadioButtonModule,v.FileUploadModule,S.DialogModule,y.StepsModule,I.BreadcrumbModule,x.DropdownModule,k.TooltipModule,D.SpinnerModule,T.CheckboxModule,M.PanelModule,St.TabViewModule,x.DropdownModule,zt.a,Wt.WorkOrderPagesModule,Q.EditorModule,P.SplitButtonModule,Zt.ItemmasterpagesModule,ir.a,or.a,lr.a],declarations:[A,Y,ht,Le,Ve,ue,De,ie,Ne,xt,Ot,Mt,At,Lt,Ft,Vt,Ee,ut,mt,qt,We,Rt,Ht,X,ve,Ut,_t,rt,Bt,jt,Ke,Kt,He,Jt,$t,Xt,Yt,er,rr,nr,sr,ar,Se,we,Ze,et,it,ct,Ae,ot,gt,bt],providers:[_.a,H.a,F.a,yt.a,It.a,ae.a,Et.a,a.DatePipe],entryComponents:[Ut,_t,He,$t,Yt,Xt]})],dr)},"+gyq":function(e,t,r){"use strict";r.r(t),t.default='    <div class="card" style="padding: 10px;">\r\n        <div class="col-md-12">\r\n           <h4 class="po-head-sm"> \r\n              Communication - Memo \r\n              <a href="#" data-toggle="modal" data-target="#addNewMemo" (click)="addMemo()"\r\n               *ngIf="!isView">\r\n                <i class="fa fa-plus-circle fa-lg"></i> </a>\r\n            </h4>\r\n        </div>\r\n    </div>\r\n      <div>\r\n        <p-table #dt\r\n        class="rpo-table-cstm rro-table-cstm ptable-f10"\r\n        [value]="data"\r\n        [metaKeySelection]="true"\r\n        [first]="0"\r\n        (onPage)="pageIndexChange($event)"\r\n        [rows]="pageSize"\r\n        [paginator]="true"\r\n        [pageLinks]="3"\r\n        [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n        [columns]="selectedColumns"\r\n        selectionMode="multiple"\r\n        [resizableColumns]="true"\r\n        [reorderableColumns]="true"\r\n        [totalRecords]="totalRecords"\r\n        [scrollable]="true" scrollHeight="450px">\r\n\r\n            <ng-template pTemplate="caption">\r\n                <div class="row">\r\n                    <div class="col">\r\n                    <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns"\r\n                    [ngModelOptions]="{ standalone: true }" optionLabel="header" \r\n                    selectedItemsLabel="{0} columns selected"\r\n                    [style]="{ minWidth: \'200px\' }" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n                </div>\r\n                <div class="col">\r\n                  <div\r\n                    style="width: auto !important; float: right;"\r\n                    class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                  >\r\n                        <i class="fa fa-search"></i>\r\n                        <input type="text" pInputText size="50"\r\n                         class="form-control"\r\n                            (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter"\r\n                            style="height: 28px !important;" />\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class="row">\r\n                    <div class="col">\r\n                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data" matTooltipPosition="above"\r\n                    pButton icon="fa-download" iconPos="left" label="Export Data" (click)="dt.exportCSV()"\r\n                    style="padding:5px 10px !important;"></button>\r\n                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"\r\n                    matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                    (click)="dt.exportCSV({ selectionOnly: true })" style="padding:5px 10px !important;"></button>\r\n\r\n                    \x3c!-- <div class="excel-upload excel-upload-cstm">\r\n                    <button type="button" class="btn btn-primary" matTooltip="Download Sample File"\r\n                        matTooltipPosition="above" (click)="sampleExcelDownload()" style="padding: 5px 10px !important;">\r\n                        Sample File Download\r\n                    </button>\r\n\r\n                    <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)"\r\n                        class="uploaddoc upload-file" accept=".xlsx, .xls, .csv" />\r\n                    <label for="upload">\r\n                        <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                        <i class="fa fa-upload"></i>\r\n                        </span>\r\n                    </label>\r\n                    </div> --\x3e\r\n                    </div>\r\n                </div>\r\n            \r\n            </ng-template>\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col *ngFor="let col of columns" style="width:130px">\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n\r\n                    <th style="width:auto"\r\n                        *ngFor="let col of columns"\r\n                        pResizableColumn\r\n                        pReorderableColumn\r\n                        [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                    </th>\r\n                    <th style="width:50px;position:sticky"\r\n                        *ngIf="selectedColumns.length > 0 && !isView">\r\n                        Actions\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                        <input style="width:100%;" pInputText type="text" (input)="\r\n                            dt.filter($event.target.value, col.field, \'contains\')\r\n                        " />\r\n                    </th>\r\n                    <th style="width: 50px;" *ngIf="!isView"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowIndex="rowIndex" let-rowData let-columns="columns">\r\n                    <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                        <ng-container *ngFor="let col of columns" >\r\n                                <td  style="width:auto"\r\n                                *ngIf="col.field == \'SERIAL_NO\'"\r\n                                class="ui-resizable-column"\r\n                                pReorderableRowHandle>\r\n                                <p class="m-0 p-0 text-right">{{rowData[col.field]}}</p>\r\n                                <span> </span>\r\n                                </td>\r\n                                <td style="width:auto"\r\n                                *ngIf="col.field !== \'SERIAL_NO\'"\r\n                                class="ui-resizable-column"\r\n                                pReorderableRowHandle>\r\n                                    <p class="p_textEditor" [innerHTML]=rowData[col.field]></p>\r\n                                </td>\r\n                        </ng-container>\r\n                        <td style="width:50px;position:sticky" class="ui-resizable-column" *ngIf="!isView">\r\n                            \x3c!-- <button class="btn-edit ptable-wo-btns buton_back_bordernon" mat-icon-button data-target="#addNewMemo" data-toggle="modal"\r\n                            (click)="edit(rowData, i)" matTooltip="Edit">\r\n                                <mat-icon>edit</mat-icon>\r\n                            </button> --\x3e\r\n                            \x3c!-- <button class="btn btn-danger nobg" (click)="deleteMemo(rowData)">\r\n                                <i class="fa fa-trash" style="font-size: 14px;"></i>\r\n                            </button> --\x3e\r\n                            <span data-toggle="modal" data-target="#addNewMemo"><a class="btn nobg btn-edit-cstm" (click)="edit(rowData, rowIndex)" matTooltip="Edit" matTooltipPosition="above" data-dismiss="modal"><i class="fa fa-pencil"></i></a> </span>\r\n                            <span><a class="btn nobg btn-delete-cstm" (click)="deleteMemo(rowData)" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n                        </td>\r\n                    </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="data.length == 0">\r\n                <tr>\r\n                  <td colspan="3" style="color: red; font-weight: bold; text-align: center">\r\n                    No records found\r\n                  </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer">Total:</label>\r\n                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer">Pages Count:</label>    \r\n                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n              </ng-template>\r\n        </p-table>\r\n</div>\r\n\r\n<div id="addNewMemo" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{ isEdit ? \'Edit\' : \'Add\'  }} Memo </h4>\r\n            \r\n                <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize">\r\n                            {{customerInfoFromSalesQuote.customerName}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize">\r\n                            {{customerInfoFromSalesQuote.customerCode}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n            \r\n            </div>\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                        <th style="color: #fff;">Memo</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr class="material-tr"\r\n                        *ngFor="let material of addList; let i = index" id="row_{{i}}">\r\n                            <td>\r\n                                <p-editor [(ngModel)]="material.description" [style]="{\'height\':\'320px\'}" name="description" required></p-editor>\r\n                                \x3c!-- <textarea [(ngModel)] = "material.description"></textarea> --\x3e\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div style="float:right">\r\n                    <button class="btn btn-primary btn-primary" (click)="saveMemo()"\r\n                        style="padding: 6px 12px !important;margin-top: 10px;">\r\n                        Save\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" style="padding: 6px 12px !important;margin-top: 10px;">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>'},"/z99":function(e,t,r){"use strict";r.r(t),t.default="label {\n  text-align: left;\n  width: 100%;\n}\n\n.form-controls {\n  margin-top: 10px;\n}\n\n.column {\n  margin-left: 10px;\n}\n\n.column-seperator {\n  margin-left: 20px;\n}\n\n.checkbox-custom-label {\n  margin-left: 15px;\n  margin-top: 10px;\n}\n\nbutton {\n  border-radius: 5px;\n}\n\n:host ::ng-deep .ui-autocomplete {\n  padding: 0px !important;\n}\n\n:host ::ng-deep .ui-autocomplete > input {\n  padding: 0px 15px 0px 2px !important;\n}\n\n:host ::ng-deep .ui-chkbox-label {\n  display: inline;\n  padding-left: 5px;\n  padding-right: 5px;\n  position: relative;\n  vertical-align: bottom;\n}\n\n.statusChangeDate input {\n  background-color: #e9ecef !important;\n}\n\nbody .ui-state-disabled,\nbody .ui-widget:disabled {\n  opacity: 1 !important;\n  background-color: #e9ecef !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}\n\n.popup_checkbox_considerations ::ng-deep .ui-chkbox-label {\n  float: none !important;\n  margin-left: 20px !important;\n  top: 7px !important;\n  position: relative !important;\n  width: auto !important;\n}\n\n.inline-label-form-group-sm-label label {\n  width: 100px;\n}\n\n.inline-label-form-group-sm-label select {\n  width: calc(70% - 100px);\n}\n\n:host ::ng-deep div.ui-widget {\n  padding: 0px !important;\n}\n\n:host ::ng-deep div.ui-widget > button {\n  padding: 0px !important;\n  padding-right: 5px !important;\n}\n\n:host ::ng-deep div.ui-widget > button > span.ui-button-text {\n  padding: 0px 5px 1px 0px !important;\n  margin-top: -4px;\n}\n\n:host ::ng-deep div.ui-widget > button.ui-splitbutton-menubutton {\n  padding-right: 8px !important;\n}\n\n:host ::ng-deep div .ui-widget > button.ui-splitbutton-menubutton > span.ui-button-icon-left {\n  left: 0% !important;\n}\n\n:host ::ng-deep div.ui-menu > ul > li {\n  padding: 0px !important;\n  text-align: left !important;\n}\n\n:host ::ng-deep div.sales-order-actions {\n  padding: 4px 6px !important;\n}\n\n:host ::ng-deep div.ui-chkbox-box.ui-widget.ui-corner-all.ui-state-default.ui-state-disabled {\n  background-color: #c9c9c9 !important;\n  border-color: #adadad;\n  opacity: 100 !important;\n  color: #333333 !important;\n  border: 1px solid #adadad !important;\n}\n\n.btn {\n  height: 21px;\n}"},"0fsz":function(e,t,r){"use strict";r.r(t),t.default='input[type=text],\ninput[type=number],\nselect,\ntextarea {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\nselect:disabled {\n  background-color: #e9ecef !important;\n}\n\n.select-read-only {\n  border: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  text-indent: 1px;\n  text-overflow: "";\n  box-shadow: none !important;\n}\n\n.footer td {\n  background-color: #eaf2fd;\n}\n\n.p-radiobutton-label-horizontal .ui-radiobutton-label {\n  width: unset !important;\n  margin-right: 10px;\n}'},"0qOe":function(e,t,r){"use strict";r.r(t),t.default='<div class="form-group" #calendarWrap>\r\n    <div class="row" *ngIf="isViewMode == false">\r\n        <button type="button" class="btn btn-primary ml-1" (click)="addPartNumber()" [disabled]="salesQuote.isApproved">\r\n            Add PN\r\n        </button>\r\n        <button type="button" class="btn btn-info" [disabled]="selectedParts.length == 0"\r\n            (click)="partsAction(\'Reserve\')">\r\n            Reserve\r\n        </button>\r\n        <button type="button" class="btn btn-info" [disabled]="selectedParts.length == 0"\r\n            (click)="partsAction(\'Unreserve\')">\r\n            Unreserve\r\n        </button>\r\n    </div>\r\n    <div #calendarWrapper>\r\n    </div>\r\n    <div class="row" style="overflow-y: auto;  border: 1px solid rgba(0,0,0,.125);">\r\n        \x3c!-- <div style="overflow-y: auto;"> --\x3e\r\n        <p-table #dt class="rpo-table-cstm rro-table-cstm salesquotePart1 sales-part-number" [value]="summaryParts"\r\n            [lazy]="true" [rows]="10" [paginator]="showPaginator" [first]="0" [rowsPerPageOptions]="[10, 20, 30]"\r\n            selectionMode="multiple" [totalRecords]="totalRecords" [columns]="summaryColumns" [scrollable]="true"\r\n            [resizableColumns]="true" [reorderableColumns]="true" [reorderableColumns]="true" scrollHeight="450px"\r\n            (onLazyLoad)="onPaging($event)">\r\n            <ng-template pTemplate="colgroup" let-summaryColumns>\r\n                <colgroup>\r\n                    <col *ngFor="let summaryColumn of summaryColumns"\r\n                        [ngStyle]="{\'width\': summaryColumn.width, \'text-align\': summaryColumn.textalign}" />\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-summaryColumns>\r\n                <tr>\r\n                    \x3c!-- <th></th> --\x3e\r\n                    <th style="text-align: left !important;width:auto; background-color:rgb(107 149 239) !important; color: #fff !important;"\r\n                        *ngFor="let summaryColumn of summaryColumns">\r\n                        <span *ngIf="summaryColumn.field == \'quantityToBeQuoted\'\r\n                                 || summaryColumn.field == \'customerRef\'\r\n                                 || summaryColumn.field == \'quantityRequested\'">\r\n                            {{ summaryColumn.header }}<span class="clr-red">*</span>\r\n                        </span>\r\n                        <span *ngIf="summaryColumn.field != \'quantityToBeQuoted\' \r\n                            && summaryColumn.field != \'customerRef\'\r\n                                && summaryColumn.field != \'quantityRequested\'">\r\n                            {{ summaryColumn.header }}\r\n                        </span>\r\n                    </th>\r\n                    <th\r\n                        style="position:sticky !important;width:80px; background-color:rgb(107 149 239) !important; color: #fff !important;">\r\n                        Actions</th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-summaryPart let-columns="summaryColumns" let-rowIndex="rowIndex">\r\n                <tr ngClass="\'row-bg1\'" pReorderableRowHandle>\r\n                    <td *ngFor="let summaryColumn of summaryColumns" style="width:auto" pReorderableRowHandle>\r\n                        <span *ngIf="summaryColumn.field == \'hidePart\'">\r\n                            <a class="expand-row" *ngIf="!summaryPart[summaryColumn.field]"\r\n                                (click)="summaryPart[summaryColumn.field] = !summaryPart[summaryColumn.field]">\r\n                                <i class="fa fa-plus btn\r\n                                            btn-success btn-cstm btn-xs" matTooltip="Show details"\r\n                                    style="padding: 3px 8px !important;">\r\n                                </i>\r\n                            </a>\r\n                            <a class="expand-row" *ngIf="summaryPart[summaryColumn.field]"\r\n                                (click)="summaryPart[summaryColumn.field] =!summaryPart[summaryColumn.field]">\r\n                                <i class="fa fa-minus btn-danger btn-cstm btn-xs" matTooltip="Hide details"\r\n                                    style="padding: 3px 8px !important;">\r\n                                </i>\r\n                            </a>\r\n                        </span>\r\n                        <span class="float-right" *ngIf="summaryColumn.field == \'fixRate\'">\r\n                            {{summaryPart[summaryColumn.field] | twoDecimalGlobalNumberFormatPipe : \'1.5\'}}\r\n                        </span>\r\n                        <span *ngIf="summaryColumn.field != \'hidePart\'\r\n                                        && summaryColumn.field != \'quantityRequested\'\r\n                                        && summaryColumn.field != \'quantityToBeQuoted\'\r\n                                        && summaryColumn.field != \'quantityAlreadyQuoted\'\r\n                                        && summaryColumn.field != \'fixRate\'\r\n                                        && summaryColumn.field != \'grossSalePrice\'\r\n                                        && summaryColumn.field != \'salesDiscountExtended\'\r\n                                        && summaryColumn.field != \'netSalesPriceExtended\'\r\n                                        && summaryColumn.field != \'misc\'\r\n                                        && summaryColumn.field != \'freight\'\r\n                                        && summaryColumn.field != \'taxAmount\'\r\n                                        && summaryColumn.field != \'totalSales\'\r\n                                        && summaryColumn.field != \'unitCostExtended\'\r\n                                        && summaryColumn.field != \'marginAmountExtended\'\r\n                                        && summaryColumn.field != \'marginPercentageExtended\'">\r\n                            {{summaryPart[summaryColumn.field]}}\r\n                        </span>\r\n                        <span class="float-right" *ngIf="summaryColumn.field == \'quantityRequested\'\r\n                                        || summaryColumn.field == \'quantityToBeQuoted\'\r\n                                        || summaryColumn.field == \'quantityAlreadyQuoted\'">\r\n                            {{summaryPart[summaryColumn.field] | globalNmberFormat}}\r\n                        </span>\r\n                        <span class="float-right" *ngIf=" summaryColumn.field == \'grossSalePrice\'\r\n                                        || summaryColumn.field == \'salesDiscountExtended\'\r\n                                        || summaryColumn.field == \'netSalesPriceExtended\'\r\n                                        || summaryColumn.field == \'misc\'\r\n                                        || summaryColumn.field == \'freight\'\r\n                                        || summaryColumn.field == \'taxAmount\'\r\n                                        || summaryColumn.field == \'totalSales\'\r\n                                        || summaryColumn.field == \'unitCostExtended\'\r\n                                        || summaryColumn.field == \'marginAmountExtended\'\r\n                                        || summaryColumn.field == \'marginPercentageExtended\'">\r\n                            {{summaryPart[summaryColumn.field] | twoDecimalGlobalNumberFormatPipe}}\r\n                        </span>\r\n                    </td>\r\n                    <td style="position:sticky;width:80px">\r\n                        <span>\r\n                            <a [class.disabled]="salesQuote.isApproved || isViewMode"\r\n                                [ngClass]="{\'btn_disabled\': salesQuote.isApproved || isViewMode}" class="btn nobg"\r\n                                (click)="addPartNumber(summaryPart,rowIndex)" matTooltip="Add/Edit Stock Line"\r\n                                matTooltipPosition="above">\r\n                                <i class="fa fa-pencil"></i>\r\n                            </a>\r\n                        </span>\r\n                        <span>\r\n                            <a class="btn nobg" (click)="viewPartNumber(summaryPart,rowIndex)"\r\n                                matTooltip="View Stock Line" matTooltipPosition="above">\r\n                                <i class="fa fa-eye"></i>\r\n                            </a>\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n                <tr [hidden]="!summaryPart[rowIndex]" class="sub-table no-bg">\r\n                    \x3c!-- <td style="text-align: center;"></td> --\x3e\r\n                    \r\n                        <td colspan="23" class="p-0" style="overflow-y: auto !important;">\r\n                            <div class="zui-wrapper" style="margin-top:8px; margin-left:8px;overflow:auto;">\r\n                            <div [ngClass]="isViewMode ? \'zui-scroller-view\' : \'zui-scroller\'"\r\n                                style="background: #fff;">\r\n                                <p-table #dt class="rpo-table-cstm rro-table-cstm salesquotePart"\r\n                                    [value]="summaryPart.childParts" [lazy]="true" [rows]="10"\r\n                                    [rowsPerPageOptions]="[10, 20, 30]" [totalRecords]="totalRecords"\r\n                                    [pageLinks]="pageLinks" [paginator]="showPaginator" [columns]="columns"\r\n                                    [resizableColumns]="true" [scrollable]="true" scrollHeight="450px"\r\n                                    [reorderableColumns]="true" [ngStyle]="{\'width\' : \'100%\', \'padding-bottom\': \'0px !important\'}"\r\n                                    (onLazyLoad)="onPaging($event)">\r\n                                    <ng-template pTemplate="colgroup" let-columns>\r\n                                        <colgroup>\r\n                                            <col *ngFor="let col of columns" [ngStyle]="{\'width\': col.width}" />\r\n                                            \x3c!-- <col [ngStyle]="{\'width\': \'120px\'}" /> --\x3e\r\n                                        </colgroup>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                <tr style="text-align: left !important;">\r\n                    \x3c!-- <th style="width:25px">&nbsp;</th> --\x3e\r\n                    <th>PN</th>\r\n                    <th>PN Description </th>\r\n                    <th>Stk Line Num</th>\r\n                    <th>Ser Num</th>\r\n                    <th>Cond<span class="clr-red">*</span></th>\r\n                    <th>Stk Type</th>\r\n                    <th>Alt/Equiv</th>\r\n                    \x3c!-- <th rowspan="2">Cust Ref<span class="clr-red">*</span></th> --\x3e\r\n                    <th>Qty On Back Order</th>\r\n                    <th>Cust Reqest Date<span class="clr-red">*</span></th>\r\n                    <th>Cust Promised Date<span class="clr-red">*</span></th>\r\n                    <th>Est. Ship Date<span class="clr-red">*</span></th>\r\n                    <th>Priority<span class="clr-red">*</span></th>\r\n                    <th>Status </th>\r\n                    <th>Quote Num</th>\r\n                    <th>Quote Ver</th>\r\n                    <th>Quote Date</th>\r\n                    \x3c!-- <th rowspan="2">UOM </th> --\x3e\r\n                    <th>Qty Ord<span class="clr-red">*</span></th>\r\n                    <th>Qty Reserved<span class="clr-red">*</span></th>\r\n                    <th>Qty to Ship</th>\r\n                    <th>Qty Invoiced</th>\r\n                    <th>Invoice Num</th>\r\n                    <th>Invoice Date </th>\r\n                    <th>Qty Previously Shipped</th>\r\n                    <th>Last Ship Date </th>\r\n                    <th>Shipping Ref</th>\r\n                    <th>Qty Avail </th>\r\n                    <th>Qty On Hand</th>\r\n                    \x3c!-- <th rowspan="2">Curr<span class="clr-red">*</span></th> --\x3e\r\n                    \x3c!-- <th rowspan="2">FX Rate<span class="clr-red">*</span></th> --\x3e\r\n                    <th>Unit Cost </th>\r\n                    <th>MarkUp % </th>\r\n                    <th>MarkUp Amt/Unit </th>\r\n                    <th>Gross Price/Unit </th>\r\n                    <th>Disc. % </th>\r\n                    <th>Disc. Amt/Unit </th>\r\n                    <th>MarkUp Amt </th>\r\n                    <th>Gross Sales Amt </th>\r\n                    <th>Disc. Amt </th>\r\n                    <th>Net Sale Amt</th>\r\n                    \x3c!-- <th rowspan="2">Misc Amt </th> --\x3e\r\n                    \x3c!-- <th rowspan="2">Freight </th> --\x3e\r\n                    <th>Tax Type </th>\r\n                    <th>Tax Amt</th>\r\n                    <th>Total</th>\r\n                    <th>Extended Cost</th>\r\n                    <th>Product Margin</th>\r\n                    <th>Product Margin %</th>\r\n                    <th>Cntrl Num</th>\r\n                    <th>Cntrl ID Num</th>\r\n                    <th style="width:120px">Notes</th>\r\n                    <th class="zui-sticky-col" style="width: 120px !important;text-align: center !important;"\r\n                        *ngIf="isViewMode == false"> Actions</th>\r\n                </tr>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate="body" let-part let-stockIndex="rowIndex" let-columns="columns">\r\n                <tr>\r\n                    \x3c!-- <td style="width:25px">&nbsp;</td> --\x3e\r\n                    <td>\r\n                        {{ part.partNumber }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.description }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.stockLineNumber }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.serialNumber }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.conditionDescription }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.pmaStatus }}\r\n                    </td>\r\n                    <td>\r\n                        {{  part.altOrEqType }}\r\n                    </td>\r\n                    \x3c!-- <td>\r\n                            {{  part.customerRef }}\r\n                        </td> --\x3e\r\n                    <td class="text-right">\r\n                        {{  part.qtyBackOrder | globalNmberFormat }}\r\n\r\n                    </td>\r\n                    <td *ngIf="isViewMode == true || isEditDisabled(salesQuote, part)">\r\n                        {{  part.customerRequestDate | date: "MM/dd/yyyy" }}\r\n                    </td>\r\n                    <td *ngIf="isViewMode == false && !isEditDisabled(salesQuote, part)">\r\n                        <p-calendar [ngClass]="inputValidCheckHeader ? \'p-clder-validate\' : \'\'" class="pas-clder"\r\n                            [showIcon]="true" appendTo="body" name="customerRequestDate" [yearNavigator]="true"\r\n                            [monthNavigator]="true" yearRange="1900:2100" [(ngModel)]="part.customerRequestDate"\r\n                            (ngModelChange)="onEditPartDetails()" #customerRequestDate="ngModel"\r\n                            [minDate]="salesQuote.openDate" required>\r\n                        </p-calendar>\r\n                        <div *ngIf="customerRequestDate.invalid && (customerRequestDate.dirty || customerRequestDate.touched)"\r\n                            class="alert alert-danger alert-danger-cstm">\r\n                            <div *ngIf="customerRequestDate.errors.required">\r\n                                <small>Customer Request Date is required </small>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td *ngIf="isViewMode == true || isEditDisabled(salesQuote, part)">\r\n                        {{  part.promisedDate | date: "MM/dd/yyyy" }}\r\n                    </td>\r\n                    <td *ngIf="isViewMode == false && !isEditDisabled(salesQuote, part)">\r\n                        <p-calendar [ngClass]="inputValidCheckHeader ? \'p-clder-validate\' : \'\'" class="pas-clder"\r\n                            [showIcon]="true" appendTo="body" name="promisedDate" [yearNavigator]="true"\r\n                            [monthNavigator]="true" yearRange="1900:2100" [(ngModel)]="part.promisedDate"\r\n                            (ngModelChange)="onEditPartDetails()" #promisedDate="ngModel"\r\n                            [minDate]="salesQuote.openDate" required>\r\n                        </p-calendar>\r\n                        <div *ngIf="promisedDate.invalid && (promisedDate.dirty || promisedDate.touched)"\r\n                            class="alert alert-danger alert-danger-cstm">\r\n                            <div *ngIf="promisedDate.errors.required">\r\n                                <small>Promised Date is required </small>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td *ngIf="isViewMode == true || isEditDisabled(salesQuote, part)">\r\n                        {{  part.estimatedShipDate | date: "MM/dd/yyyy" }}\r\n                    </td>\r\n                    <td *ngIf="isViewMode == false && !isEditDisabled(salesQuote, part)">\r\n                        <p-calendar [ngClass]="inputValidCheckHeader ? \'p-clder-validate\' : \'\'" class="pas-clder"\r\n                            [showIcon]="true" appendTo="body" name="estimatedShipDate" [yearNavigator]="true"\r\n                            [monthNavigator]="true" yearRange="1900:2100" [(ngModel)]="part.estimatedShipDate"\r\n                            (ngModelChange)="onEditPartDetails()" #estimatedShipDate="ngModel"\r\n                            [minDate]="salesQuote.openDate" required>\r\n                        </p-calendar>\r\n                        <div *ngIf="estimatedShipDate.invalid && (estimatedShipDate.dirty || estimatedShipDate.touched)"\r\n                            class="alert alert-danger alert-danger-cstm">\r\n                            <div *ngIf="estimatedShipDate.errors.required">\r\n                                <small>Estimated Ship Date is required </small>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td *ngIf="isViewMode == true || isEditDisabled(salesQuote, part)">\r\n                        {{  part.priorityName }}\r\n                    </td>\r\n                    <td *ngIf="isViewMode == false && !isEditDisabled(salesQuote, part)">\r\n                        <select name="priorityId" [(ngModel)]="part.priorityId" required id="priorityId"\r\n                            #priorityId="ngModel" (change)="onEditPartDetails()">\r\n                            <option *ngFor=" let p of salesQuote.priorities" [ngValue]="p.priorityId">\r\n                                {{ p.description }}\r\n                            </option>\r\n                        </select>\r\n                    </td>\r\n                    <td>\r\n                        {{ part.statusName }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.salesQuoteNumber }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.quoteVesrion }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.quoteDate | date : "MM/dd/yyyy"}}\r\n                    </td>\r\n                    \x3c!-- <td>\r\n                            {{ part.uom }}\r\n                        </td> --\x3e\r\n                    <td class="text-right">\r\n                        {{ part.quantityFromThis | globalNmberFormat  }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.qtyReserved | globalNmberFormat }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.qtyToShip | globalNmberFormat }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.qtyInvoiced | globalNmberFormat }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.invoiceNumber }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.invoiceDate | date : "MM/dd/yyyy"}}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.qtyPreviouslyShipped | globalNmberFormat }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.lastShippedDate | date : "MM/dd/yyyy"}}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.shipReference }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.qtyAvailable | globalNmberFormat }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.qtyOnHand | globalNmberFormat }}\r\n                    </td>\r\n                    \x3c!-- <td>\r\n                            {{ part.currencyDescription }}\r\n                        </td> --\x3e\r\n                    \x3c!-- <td class="text-right">\r\n                            {{ part.fixRate | twoDecimalGlobalNumberFormatPipe}}\r\n                        </td> --\x3e\r\n                    <td class="text-right">\r\n                        {{ part.unitCostPerUnit | twoDecimalGlobalNumberFormatPipe}}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.markUpPercentage | twoDecimalGlobalNumberFormatPipe}}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.markupPerUnit | twoDecimalGlobalNumberFormatPipe}}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.grossSalePricePerUnit | twoDecimalGlobalNumberFormatPipe}}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.salesDiscount | twoDecimalGlobalNumberFormatPipe }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.salesDiscountPerUnit | twoDecimalGlobalNumberFormatPipe }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.markupExtended | twoDecimalGlobalNumberFormatPipe}}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.grossSalePrice | twoDecimalGlobalNumberFormatPipe}}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.salesDiscountExtended| twoDecimalGlobalNumberFormatPipe  }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.netSalesPriceExtended | twoDecimalGlobalNumberFormatPipe}}\r\n                    </td>\r\n                    \x3c!-- <td class="text-right">\r\n                            {{ part.misc | twoDecimalGlobalNumberFormatPipe}}\r\n                        </td> --\x3e\r\n                    \x3c!-- <td class="text-right">\r\n                            {{ part.freight | twoDecimalGlobalNumberFormatPipe}}\r\n                        </td> --\x3e\r\n                    <td>\r\n                        {{ part.taxType }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.taxAmount | twoDecimalGlobalNumberFormatPipe}}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.totalSales | twoDecimalGlobalNumberFormatPipe }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.unitCostExtended | twoDecimalGlobalNumberFormatPipe}}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.marginAmountExtended | twoDecimalGlobalNumberFormatPipe}}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.marginPercentagePerUnit | twoDecimalGlobalNumberFormatPipe}}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.controlNumber }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.idNumber }}\r\n                    </td>\r\n                    <td style="width:120px" *ngIf="isViewMode == false && !isEditDisabled(salesQuote, part)">\r\n                        <div class="form-group notes-popup-cstm mat_emo"\r\n                            style="width: 120px;    display: inline-flex;    margin-bottom: 0;">\r\n                            <div [innerHTML]="part.notes" class="text_editor_box"></div>\r\n                            <i class="fa fa-pencil fa-lg ci_cls" data-toggle="modal"\r\n                                style="position: relative;top: 6px;" data-target="#textarea-popupNotes"\r\n                                matTooltip="Notes" matTooltipPosition="above"\r\n                                (click)="onAddTextAreaInfo(part,stockIndex, rowIndex)"></i>\r\n                        </div>\r\n                    </td>\r\n                    <td *ngIf="isViewMode == true || isEditDisabled(salesQuote, part)">\r\n                        <div [innerHTML]="part.notes" class="text_editor_box"></div>\r\n                    </td>\r\n                    <td class="zui-sticky-col" *ngIf="isViewMode == false">\r\n                        <button type="button" [disabled]="isEditDisabled(salesQuote, part)" class="btn-edit"\r\n                            mat-icon-button (click)="openPartToEdit(part)" matTooltip="edit" matTooltipPosition="above">\r\n                            <mat-icon>edit</mat-icon>\r\n                        </button>\r\n                        <button type="button" [disabled]="isDeleteDisabled(salesQuote, part)" class="btn-delete"\r\n                            mat-icon-button matTooltip="Delete" matTooltipPosition="above"\r\n                            (click)="openPartDelete(deleteContent,part)">\r\n                            <mat-icon color="warn">delete</mat-icon>\r\n                        </button>\r\n                        <span>\r\n                            <a class="btn nobg btn-pluspo-cstm" (click)="initiateCreateWOROPO(part, \'PO\')"\r\n                                matTooltip="Create PO" matTooltipPosition="above">\r\n                                <i class="fa fa-plus"> </i>\r\n                            </a>\r\n                        </span>\r\n                        <span>\r\n                            <a class="btn nobg btn-plusro-cstm" (click)="initiateCreateWOROPO(part, \'RO\')"\r\n                                matTooltip="Create RO" matTooltipPosition="above">\r\n                                <i class="fa fa-plus" style="color: #259e08;"></i>\r\n                            </a>\r\n                        </span>\r\n                        <span>\r\n                            <a class="btn nobg btn-plusro-cstm" (click)="initiateCreateWOROPO(part, \'WO\')"\r\n                                matTooltip="Create WO" matTooltipPosition="above">\r\n                                <i class="fa fa-plus" style="color: #24089e;"></i>\r\n                            </a>\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="selectedParts.length == 0">\r\n                <tr>\r\n                    <td *ngFor="let col of columns">&nbsp;</td>\r\n                    \x3c!-- <td *ngFor="let col of columns" [ngStyle]="{\'width\': col.width}"></td> --\x3e\r\n                    \x3c!-- <td [attr.colspan]="22" class="no-records-cstm" style="text-align: left;">\r\n                                        No records found\r\n                                    </td> --\x3e\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div></div>\r\n    </td>\r\n\r\n</tr>\r\n</ng-template>\r\n<ng-template pTemplate="emptymessage" let-columns *ngIf="summaryParts.length == 0">\r\n    <tr>\r\n        <td *ngFor="let col of summaryColumns">&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n    </tr>\r\n</ng-template>\r\n<ng-template pTemplate="emptymessage" let-columns>\r\n    <tr>\r\n        <td colspan="23" style="color: red; font-weight: bold; text-align: center">\r\n            No records found\r\n        </td>\r\n    </tr>\r\n</ng-template>\r\n</p-table>\r\n</div>\r\n\x3c!-- </div> --\x3e\r\n\r\n\x3c!-- <div *ngIf="isViewMode == false" style="text-align:right; width:100%; padding:0;">\r\n    <button type="button" class="btn btn-primary" style="width:55px;height:20px;" (click)="approve()">Save</button>\r\n</div> --\x3e\r\n<div *ngIf="isViewMode == false" style="text-align:right; width:100%; padding-top:5px;">\r\n    <button *ngIf="saveButton" type="button" [disabled]="canSaveParts" class="btn btn-primary"\r\n        style="width:55px;height:20px;" (click)="approve()">\r\n        <span>Update</span>\r\n        \x3c!-- <span *ngIf="!checkUpdateOrsaveButton()">Save</span> --\x3e\r\n    </button>\r\n    <button type="button" *ngIf="!saveButton" [disabled]="canSaveParts" class="btn btn-primary"\r\n        style="width:55px;height:20px;" (click)="approve()">\r\n        \x3c!-- <span *ngIf="checkUpdateOrsaveButton()">Update</span> --\x3e\r\n        <span>Save</span>\r\n    </button>\r\n</div>\r\n\x3c!-- </div> --\x3e\r\n<div class="modal fade" id="textarea-popupNotes" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-lg" style="max-width: 400px !important;">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Edit {{"Notes"}}</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                        <th style="color: #fff;">{{"Notes"}}</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <p-editor [(ngModel)]="textAreaInfo" [style]="{\'height\':\'320px\'}" name="textAreaInfo"\r\n                                    required>\r\n                                </p-editor>\r\n\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div style="float:right">\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                        style="padding: 6px 12px !important;margin-top: 10px;"\r\n                        (click)="onSaveTextAreaInfo(textAreaInfo)">\r\n                        Save\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger" style="padding: 6px 12px !important;margin-top: 10px;"\r\n                        data-dismiss="modal">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #addPart let-c="close" let-d="dismiss">\r\n    <app-add-sales-part-number [display]="show" [selectedParts]="selectedParts" [salesQuote]="salesQuote"\r\n        (select)="openSalesMargin($event)" [isStockLineViewMode]="isStockLineViewMode"\r\n        [selectedSummaryRow]="selectedSummaryRow" (close)="onClose($event)">\r\n    </app-add-sales-part-number>\r\n</ng-template>\r\n<ng-template #popupContentforPartAction let-c="close" let-d="dismiss">\r\n    <app-sales-order-part-actions [display]="show" [salesQuote]="salesQuote"\r\n        [selectedPartActionType]="selectedPartActionType" [employeesList]="employeesList"\r\n        [selectedPartDataForAction]="selectedPartDataForAction" [salesOrderId]="salesOrderId"\r\n        (select)="openSalesMargin($event)" (close)="onClose($event)" (onPartReserve)="onShowModalReserve($event)">\r\n    </app-sales-order-part-actions>\r\n</ng-template>\r\n\r\n<ng-template #salesReserve let-c="close" let-d="dismiss" tabindex="-1">\r\n    <add-reserve-unreserve-part-number [salesQuote]="salesQuote" [employeesList]="employeesList"\r\n        [selectedPartDataForAction]="selectedPartDataForAction" [selectedPartActionType]="selectedPartActionType"\r\n        [selectedParts]="selectedParts" [part]="part" (close)="onCloseReserve($event)">\r\n    </add-reserve-unreserve-part-number>\r\n</ng-template>\r\n<ng-template #salesMargin let-c="close" let-d="dismiss" tabindex="-1">\r\n    <app-sales-margin tabindex="-1" [part]="part" [isEdit]="isEdit" (save)="openSalesMarginSave($event)"\r\n        (close)="onCloseMargin($event)"></app-sales-margin>\r\n</ng-template>\r\n\r\n<ng-template #deleteContent let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="onClosePartDelete()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="deletePart()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="onClosePartDelete()">No</button>\r\n    </div>\r\n\r\n</ng-template>\r\n<ng-template #updatePNDetailsModal let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeConfirmationModal()">&times;</button>\r\n        <h4 class="modal-title">Do you want to save the Part Details?</h4>\r\n    </div>\r\n    <div class="modal-footer">\r\n\r\n        <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="approve()">Save</button>\r\n    </div>\r\n</ng-template>'},"1UPW":function(e,t,r){"use strict";r.r(t),t.default=".t0 td {\r\n             \r\n  border: 1px solid #999; \r\n  -webkit-print-color-adjust: exact; \r\n  \r\n      }\r\n      .t1 .td1, .t1 .td3 {\r\n          padding-right: 30px;\r\n      }\r\n      .t1 .td2{\r\n          padding-right: 100px;\r\n      }\r\n      .t4 th, .t3 th{\r\n          background: #4298ff;  \r\n          -webkit-print-color-adjust: exact; \r\n          color: #FFF;\r\n          \r\n          padding: 5px;\r\n      }\r\n      .t4 th{\r\n       border: 1px solid #999;\r\n\r\n      }\r\n      .t2 th{\r\n          background: #c7c6c6;  \r\n          color: #000;\r\n          padding: 5px;\r\n          border: 1px solid #999;\r\n          -webkit-print-color-adjust: exact; \r\n      }\r\n      .t2{\r\n          border: 1px solid #999;   \r\n          -webkit-print-color-adjust: exact; \r\n          margin-top: 20px;\r\n      }\r\n      .t4 td{\r\n          border: 1px solid #999;\r\n          padding: 5px; \r\n          -webkit-print-color-adjust: exact; \r\n  \r\n      }\r\n      .t2 td {\r\n          border-bottom: 1px solid #999;\r\n          -webkit-print-color-adjust: exact; \r\n          border-left: 1px solid #999;\r\n          padding: 5px;\r\n      }\r\n      .t2 .th2, .t2 .td2{\r\n          width: 265px;\r\n      }\r\n      .t3 .td2{\r\n          border: 1px solid #999; \r\n          min-width: 100px;\r\n          -webkit-print-color-adjust: exact; \r\n  \r\n      }\r\n      .t2 td{\r\n          height: 25px;\r\n      }\r\n      .t2 td.blank {\r\n      border: 0;\r\n      }\r\n      .t3{\r\n       width: 100%;\r\n       margin-bottom: 20px;\r\n     }\r\n      .t3 th{\r\n       font-size: 12px !important\r\n     }\r\n      .t4 {\r\n       margin-top: 20px\r\n     }\r\n      table {\r\n       font-size: 12px !important;\r\n     }"},"1yJ2":function(e,t,r){"use strict";r.r(t),t.default=".row {\r\n  margin-top: 5px;\r\n}\r\n\r\n.sub-header-title {\r\n  border-bottom: 1px solid lightgray;\r\n  width: 100%;\r\n  font-size: 18px;\r\n  padding: 5px 8px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.sales-quote-approver-info {\r\n  display: flex;\r\n  width: 85%;\r\n  align-items: center;\r\n  margin-top: 22px;\r\n}\r\n\r\n.sales-quote-approver-info p {\r\n  flex: 30%;\r\n  padding: 0;\r\n}\r\n\r\n.sales-quote-approver-info p .label {\r\n  color: #000 !important;\r\n  font-weight: bold;\r\n}\r\n\r\nlabel {\r\n  font-size: 12px !important;\r\n  text-align: left;\r\n  width: 150px;\r\n  margin-right: 0;\r\n  font-weight: 400;\r\n}\r\n\r\n.approver-details-cstm {\r\n  margin-top: 16px;\r\n}\r\n\r\n.approver-details-cstm p {\r\n  float: left;\r\n  margin-right: 40px;\r\n}\r\n\r\n.approver-tab-cstm .col-md-3 {\r\n  padding-right: 40px;\r\n  margin-right: 0;\r\n}\r\n\r\n.approver-tab-cstm .form-row {\r\n  margin-top: 10px;\r\n}\r\n\r\n:host ::ng-deep div.ui-dropdown {\r\n  width: 100% !important;\r\n}\r\n"},"41Kw":function(e,t,r){"use strict";r.r(t),t.default='\r\n    <div class="card" style="padding: 10px;">\r\n        <div class="col-md-12">\r\n            <h4 class="po-head-sm">\r\n                  Communication - Phone \r\n                  <a href="#" data-toggle="modal" data-target="#addNewPhone"\r\n                  (click)="addPhone()" *ngIf="!isView">\r\n                  <i class="fa fa-plus-circle fa-lg"></i></a>\r\n            </h4>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <p-table #dt\r\n        class="rpo-table-cstm rro-table-cstm ptable-f10"\r\n        [value]="data"\r\n        [metaKeySelection]="true"\r\n        [first]="0"\r\n        (onPage)="pageIndexChange($event)"\r\n        [rows]="pageSize"\r\n        [paginator]="true"\r\n        [pageLinks]="3"\r\n        [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n        [columns]="selectedColumns"\r\n        selectionMode="multiple"\r\n        [resizableColumns]="true"\r\n        [reorderableColumns]="true"\r\n        [totalRecords]="totalRecords"\r\n        [scrollable]="true" scrollHeight="450px">\r\n        <ng-template pTemplate="caption">\r\n            <div class="row">\r\n                <div class="col">\r\n                <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns"\r\n                [ngModelOptions]="{ standalone: true }" optionLabel="header" \r\n                selectedItemsLabel="{0} columns selected"\r\n                [style]="{ minWidth: \'200px\' }" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n            </div>\r\n            <div class="col">\r\n              <div\r\n                style="width: auto !important; float: right;"\r\n                class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n              >\r\n                    <i class="fa fa-search"></i>\r\n                    <input type="text" pInputText \r\n                    size="50" class="form-control"\r\n                        (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter"\r\n                        style="height: 28px !important;" />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div class="row">\r\n                <div class="col">\r\n                <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data" matTooltipPosition="above"\r\n                pButton icon="fa-download" iconPos="left" label="Export Data" (click)="dt.exportCSV()"\r\n                style="padding:5px 10px !important;"></button>\r\n                <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"\r\n                matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                (click)="dt.exportCSV({ selectionOnly: true })" style="padding:5px 10px !important;"></button>\r\n\r\n                \x3c!-- <div class="excel-upload excel-upload-cstm">\r\n                <button type="button" class="btn btn-primary" matTooltip="Download Sample File"\r\n                    matTooltipPosition="above" (click)="sampleExcelDownload()" style="padding: 5px 10px !important;">\r\n                    Sample File Download\r\n                </button>\r\n\r\n                <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)"\r\n                    class="uploaddoc upload-file" accept=".xlsx, .xls, .csv" />\r\n                <label for="upload">\r\n                    <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                    <i class="fa fa-upload"></i>\r\n                    </span>\r\n                </label>\r\n                </div> --\x3e\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n\r\n\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col *ngFor="let col of columns" style="width:130px">\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n\r\n                    <th style="width:auto"\r\n                        *ngFor="let col of columns"\r\n                        pResizableColumn\r\n                        pReorderableColumn\r\n\r\n                        [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                    </th>\r\n                    <th style="width:50px;position:sticky"\r\n                        *ngIf="selectedColumns.length > 0 && !isView">\r\n                        Actions\r\n                    </th>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                        <input style="width:100%;" pInputText type="text" (input)="\r\n                            dt.filter($event.target.value, col.field, \'contains\')\r\n                        " />\r\n                    </th>\r\n                    <th style="width: 50px;" *ngIf="!isView"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                    <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                        <ng-container *ngFor="let col of columns">\r\n                            <td style="width:auto"\r\n                            *ngIf="col.field == \'contactBy\'"\r\n                            class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                            {{rowData[col.field]}}\r\n                            </td>\r\n                            <td style="width:auto"\r\n                            *ngIf="col.field == \'phoneNo\'"\r\n                            class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                            <p class="m-0 p-0 text-right">{{rowData[col.field]}}</p>\r\n                            </td>\r\n                            <td style="width:auto;"\r\n                                *ngIf="col.field == \'notes\'"\r\n                                class="ui-resizable-column"\r\n                                pReorderableRowHandle>\r\n                                <p class="m-0 p-0 p_textEditor" \r\n                                 [innerHTML]=rowData[col.field]></p>\r\n                            </td>\r\n                        </ng-container>\r\n                        \r\n                        <td style="width:50px;position:sticky" class="ui-resizable-column" *ngIf="!isView">\r\n                            <span data-target="#addNewPhone" data-toggle="modal"><a class="btn nobg btn-edit-cstm"\r\n                                (click)="edit(rowData, rowIndex)" matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-pencil"></i></a> </span>\r\n                            <span data-toggle="modal" data-target="#viewPhone"><a class="btn nobg btn-view-cstm"\r\n                                (click)="phoneView(rowData)" matTooltip="View" matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                            <span><a class="btn nobg btn-delete-cstm" (click)="deletePhone(rowData)" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n                            \x3c!-- <button class="btn-edit ptable-wo-btns" mat-icon-button data-target="#addNewPhone" data-toggle="modal"\r\n                            (click)="edit(rowData, i)" matTooltip="Edit">\r\n                                <mat-icon>edit</mat-icon>\r\n                            </button> \r\n                            <button class="btn btn-danger nobg" (click)="deletePhone(rowData)">\r\n                                <i class="fa fa-trash"></i>\r\n                            </button> --\x3e\r\n                        </td>\r\n                    </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="data.length == 0">\r\n                <tr>\r\n                  <td colspan="4" style="color: red; font-weight: bold; text-align: center">\r\n                    No records found\r\n                  </td>\r\n                </tr>\r\n            </ng-template>\r\n            \x3c!-- <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer" class="footer">No\'of records:</label>\r\n                <input style="width: 5%;"\r\n                        [(ngModel)]="totalRecords"\r\n                        [disabled]="true"\r\n                        pInputText\r\n                        type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer" class="footer1">Pages Count:</label>\r\n                <input style="width: 5%;"\r\n                        [(ngModel)]="totalPages"\r\n                        [disabled]="true"\r\n                        pInputText\r\n                        type="text" />\r\n            </ng-template> --\x3e\r\n            <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer">Total:</label>\r\n                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer">Pages Count:</label>    \r\n                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n              </ng-template>\r\n        </p-table>\r\n</div>\r\n\r\n<div id="addNewPhone" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{ isEdit ? \'Edit\' : \'Add\'  }} Phone </h4>\r\n           \r\n                <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize">\r\n                            {{customerInfoFromSalesQuote.customerName}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize">\r\n                            {{customerInfoFromSalesQuote.customerCode}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n           \r\n            </div>\r\n            <form #phoneForm="ngForm" class="form-horizontal" ngNativeValidate>\r\n            <div class="modal-body" *ngIf="addList.length > 0">\r\n                <div class="form-row">                   \r\n                    <div class="col-md-6">\r\n                        <div class="form-group">\r\n                            <label class="col-md-12">Customer Contact <span class="clr-red">*</span></label>\r\n                            <p-autoComplete field="firstName"\r\n                            [(ngModel)]="firstName" required\r\n                            name="cusContact" #cusContact="ngModel"\r\n                            errorMessage="Records not found" [forceSelection]="true"\r\n                            [dropdown]="true" [suggestions]="cusContactList"\r\n                            (completeMethod)="filterCustomerContact($event)"\r\n                            [size]="30" [minLength]="1" [dropdown]="true"\r\n                            (onSelect)="contactSelected($event)" \r\n                            class="p-autoComplete-ctsm">\r\n                            </p-autoComplete>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Phone</label>\r\n                            <input class="form-control" type="text" [(ngModel)] = "addList[0].phoneNo" maxlength="20" name="phoneNo" required disabled/>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label class="col-md-12">Contacted By</label>\r\n                            \x3c!-- <select [(ngModel)]="addList[0].contactId"\r\n                                class="form-control" name="contactedBy" required>\r\n                                <option value="">Select</option>\r\n                                <option *ngFor="let employee of employees" [value]="employee.value">{{employee.label}}</option>\r\n                            </select> --\x3e\r\n                            <p-autoComplete field="name"\r\n                                [(ngModel)]="addList[0].contactId"\r\n                                name="employees" errorMessage="Records not found" [forceSelection]="true"\r\n                                [dropdown]="true" [suggestions]="employeeList"\r\n                                (completeMethod)="filterEmployee($event)"\r\n                                [size]="30" [minLength]="1" [dropdown]="true"\r\n                                class="p-autoComplete-ctsm" required>\r\n                            </p-autoComplete>\r\n                        </div>                        \r\n                    </div>\r\n                    <div class="col-md-12">\r\n                        <div class="form-group">\r\n                            <label>Notes</label>\r\n                            <p-editor class="p-editor-cstm" [(ngModel)]="addList[0].notes" style="overflow-y: auto;;"\r\n                                     [style]="{\'height\':\'150px\'}" name="notes"></p-editor>\r\n                            \x3c!-- <p-editor [(ngModel)]="addList[0].notes" [style]="{\'height\':\'320px\'}" name="notes"></p-editor> --\x3e\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary btn-primary" data-dismiss="modal" (click)="savePhone()"\r\n                    style="padding: 6px 12px !important;margin-top: 10px;" [disabled]="!phoneForm.valid">\r\n                    {{(!isEdit)?\'Save\':\'Update\'}}\r\n                </button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" style="padding: 6px 12px !important;margin-top: 10px;">Close</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div id="viewPhone" class="modal fade"\r\n role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm">\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title"> Phone Details</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="col-sm-12" *ngIf="phoneViewData">\r\n                    <p>\r\n                        <span class="label"><strong> Customer Contact: </strong></span><span class="value">{{\r\n                            phoneViewData.customerContact\r\n                        }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> Phone: </strong></span><span class="value">{{\r\n                            phoneViewData.phoneNo\r\n                        }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> Contact By: </strong></span><span class="value">{{\r\n                            phoneViewData.contactBy\r\n                        }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><strong> Notes: </strong></span><span class="value">{{\r\n                            phoneViewData.notes\r\n                        }}</span>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n </div>'},"4FnP":function(e,t,r){"use strict";r.r(t),t.default='.grey-card {\n  background-color: #e7e7e7;\n}\n\n.wo-multiple-pn-details {\n  background: #fff;\n  padding: 8px;\n  border: 5px solid #e7e7e7;\n}\n\n.nav-pills-cstm {\n  margin-top: 10px;\n  font-size: 11px;\n}\n\n.nav-pills-cstm li {\n  float: left;\n}\n\n.nav-pills-cstm li a {\n  background-color: #4298ffb0;\n  color: white;\n  margin-right: 4px;\n}\n\nli.nav-item {\n  margin-right: 1px;\n  border-radius: 4px;\n}\n\n.nav-pills .nav-link,\n.nav-pills .show > .nav-link {\n  color: black;\n  background-color: #ddd;\n}\n\n.nav-pills > li > a.active,\n.nav-pills > li > a.active:focus,\n.nav-pills > li > a.active:hover {\n  color: #fff;\n  background-color: #337ab7 !important;\n}\n\n.dropdown-menu.show > a {\n  background-color: white !important;\n  color: black !important;\n}\n\n.hidedata {\n  display: none;\n}\n\n.hidedataOthers {\n  display: none;\n}\n\n.dropdown-submenu {\n  position: relative;\n}\n\n.dropdown-submenu .dropdown-menu {\n  top: 0;\n  left: 100%;\n  margin-top: -1px;\n}\n\nlabel {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text],\ninput[type=number],\nselect,\ntextarea {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.ui-widget {\n  padding: 0px !important;\n}\n\n.nav-pills li a {\n  padding: 5px 4px !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-6 .col-md-6 {\n    max-width: 44%;\n    margin-right: 15px;\n  }\n\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}\n\n.isDisabled {\n  pointer-events: none;\n}\n\n.ui-chkbox-box {\n  margin-right: 10px;\n  background-color: red !important;\n}\n\n.c-wf-bcrumb {\n  background-color: transparent;\n}\n\n.c-wf-bcrumb li {\n  font-family: "Roboto";\n  font-size: medium;\n  font-weight: 900;\n  color: #295d92;\n}\n\n.c-wf-bcrumb .breadcrumb-item.active {\n  color: #6c757d !important;\n}\n\n.wf-popup-form label {\n  width: 100px;\n  text-align: right;\n  margin-top: 1px;\n}\n\n.wfl-table-popup-cstm {\n  margin-top: 4px;\n}\n\n.wfl-table-popup-cstm tr th {\n  padding: 8px 4px !important;\n}\n\n.wfl-table-popup-cstm tr td {\n  padding: 5px;\n}\n\n.po-head-wfl {\n  font-weight: bold;\n  font-size: 13px !important;\n  color: #295d92 !important;\n  margin-bottom: 0;\n}'},"4YS2":function(e,t,r){"use strict";r.r(t),t.default='input[type=text],\ninput[type=number],\nselect,\ntextarea {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\nselect:disabled {\n  background-color: #e9ecef !important;\n}\n\n.select-read-only {\n  border: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  text-indent: 1px;\n  text-overflow: "";\n  box-shadow: none !important;\n}\n\n.footer td {\n  background-color: #eaf2fd;\n}\n\n.sales-analysis-header th {\n  background: #4298ff !important;\n  color: #fff !important;\n}\n\n.sales-quote-radio .ui-radiobutton-label {\n  width: unset !important;\n  margin-right: 10px;\n  color: #fff !important;\n}\n\n.sales-quote-radio .ui-radiobutton-label {\n  margin-left: 10px;\n  text-align: left;\n  font-size: 10.5px !important;\n  margin-top: 12px;\n  font-weight: normal;\n}\n\n.sales-quote-radio .ui-radiobutton {\n  margin-top: 14px;\n}\n\n.p-radiobutton-label-horizontal .ui-radiobutton-label {\n  width: unset !important;\n  margin-right: 10px;\n}'},5792:function(e,t,r){"use strict";r.r(t),t.default='<div class="form-group">\r\n  <div class="row">\r\n    <button type="button" class="btn btn-primary">Add PN</button>\r\n  </div>\r\n</div>\r\n'},"5BKa":function(e,t,r){"use strict";r.r(t),t.default=""},"5fjB":function(e,t,r){"use strict";r.r(t),t.default='<div class="approver-tab-cstm">\r\n    <h5 class="po-head">Approvers List</h5>\r\n    <div class="form-row">\r\n        <div class="col-md-12">\r\n            <div class="table-responsive">\r\n                <div class="table-responsive" style="margin-top: 10px;">\r\n                    <table class="table table-bordered table-striped table-fixed table-sorting mpn-list-table"\r\n                        id="mpn-list-table">\r\n                        <thead>\r\n                            <tr class="pad_workflo">\r\n                                <th style="width:150px">Approver Name</th>\r\n                                <th style="width:150px">Approver Code</th>\r\n                                <th style="width:150px">Approver Email</th>\r\n                                <th style="width:100px">SO Amount</th>\r\n                                <th style="width:100px">Min Amount</th>\r\n                                <th style="width:100px">Max Amount</th>\r\n                                <th>Message</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr class="mpn-row" style="display: table-row;"\r\n                                *ngFor="let approver of approvers; let i=index;"\r\n                                [ngClass]="{red : approver.isExceeded == true}">\r\n                                <td>\r\n                                    {{approver.approverName}}\r\n                                </td>\r\n                                <td>\r\n                                    {{approver.approverCode}}\r\n                                </td>\r\n                                <td>\r\n                                    {{approver.approverEmail}}\r\n                                </td>\r\n                                <td style="text-align: right;">\r\n                                    {{approver.totalCost | twoDecimalGlobalNumberFormatPipe}}\r\n                                </td>\r\n                                <td style="text-align: right;">\r\n                                    {{approver.lowerValue | twoDecimalGlobalNumberFormatPipe}}\r\n                                </td>\r\n                                <td style="text-align: right;">\r\n                                    {{approver.upperValue | twoDecimalGlobalNumberFormatPipe}}\r\n                                </td>\r\n                                <td>\r\n                                    {{approver.message}}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \x3c!-- <br />\r\n    <div style="text-align:right; width:100%; padding:0;">\r\n        <button type="button" class="btn btn-primary" style="width:55px;height:20px;"\r\n            (click)="openConfirmationModal()">Save</button>\r\n    </div> --\x3e\r\n</div>\r\n\r\n\r\n\x3c!-- <ng-template #updatePNDetailsModal let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeConfirmationModal()">&times;</button>\r\n        <h4 class="modal-title">Do you want to save the Internal Aprroval Details?</h4>\r\n    </div>\r\n    <div class="modal-footer">\r\n\r\n        <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="approve()">Save</button>\r\n    </div>\r\n</ng-template> --\x3e'},"5pas":function(e,t,r){"use strict";r.r(t),t.default=""},"6/vK":function(e,t,r){"use strict";r.r(t),t.default='<app-all-approval-rule [moduleType]="moduleType">\r\n\r\n</app-all-approval-rule>'},"6Brs":function(e,t,r){"use strict";r.r(t),t.default='<div class="card">\r\n  <div class="card-body">\r\n    <div class="table-responsive default-bg clear">\r\n      <div class="col-md-3">\r\n        <p><span class="label"><b>Sales Order Type <span class="clr-red">*</span> : </b></span>\r\n          <span class="value">\r\n            {{salesOrder.typeName ? salesOrder.typeName : \'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>SO Num: </b></span>\r\n          <span class="value">\r\n            {{salesOrder.salesOrderNumber ? salesQuote.salesOrderNumber : \'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Sales Quote Num: </b></span>\r\n          <span class="value">\r\n            {{salesOrder.salesOrderQuoteNumber ? salesQuote.salesOrderQuoteNumber : \'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Version Num: </b></span>\r\n          <span class="value">\r\n            {{salesOrder.versionNumber ? salesQuote.versionNumber : \'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>SO Num: </b></span>\r\n          <span class="value">\r\n            {{salesOrder.salesOrderNumber ? salesQuote.salesOrderNumber : \'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Open Date <span class="clr-red">*</span>: </b></span>\r\n          <span class="value">{{salesOrder.openDate | date: \'MM/dd/yyyy\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Status: </b></span>\r\n          <span class="value">{{salesOrder.status}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Restrict PMA: </b></span>\r\n          <span class="value">\r\n            <input type="checkbox" [(ngModel)]="salesOrder.restrictPMA" name="restrictPMA" id="restrictPMA"\r\n            [disabled]="true" />\r\n            \x3c!-- {{salesOrder.restrictPMA == true ? \'Yes\' : "No" }} --\x3e\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Restrict DER: </b></span>\r\n          <span class="value">\r\n            <input type="checkbox" [(ngModel)]="salesOrder.restrictDER" name="restrictDER" id="restrictDER"\r\n            [disabled]="true" />\r\n            \x3c!-- {{salesOrder.restrictDER == true ? \'Yes\' : "No" }} --\x3e\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <div class="col-md-3">\r\n        <p><span class="label"><b>Account Type <span class="clr-red">*</span>: </b></span>\r\n          <span class="value">{{salesOrder.accountTypeName ? salesOrder.accountTypeName : \'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Customer Name <span class="clr-red">*</span>: </b></span>\r\n          <span class="value">\r\n            {{salesOrder.customerName}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Customer Contact <span class="clr-red">*</span>: </b></span>\r\n          <span class="value">\r\n            {{salesOrder.customerContactName}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Contract Reference: </b></span>\r\n          <span class="value">\r\n            {{salesOrder.contractReference}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Cust Email: </b></span>\r\n          <span class="value">\r\n            {{salesOrder.customerContactEmail}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Credit Limit: </b></span>\r\n          <span class="value">\r\n            {{ salesOrder.creditLimit | twoDecimalGlobalNumberFormatPipe}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Credit Terms: </b></span>\r\n          <span class="value">\r\n            {{salesOrder.creditTerms}}\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <div class="col-md-3">\r\n        \x3c!-- <p><span class="label"><b>Customer Hold: </b></span>\r\n          <span class="value">{{salesOrder.customerHold}}\r\n          </span>\r\n        </p> --\x3e\r\n        <p><span class="label"><b>Salesperson/Agent: </b></span>\r\n          <span class="value">{{salesOrder.salesPersonName}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>CSR: </b></span>\r\n          <span class="value">\r\n            {{salesOrder.customerSeviceRepName}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Employee <span class="clr-red">*</span>:</b></span>\r\n          <span class="value">\r\n            {{salesOrder.employeeName}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>AR Balance: </b></span>\r\n          <span class="value">\r\n            {{salesOrder.balanceDue | twoDecimalGlobalNumberFormatPipe}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Warnings: </b></span>\r\n          <span class="value">\r\n            {{salesOrder.customerWarningMessage}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Memo: </b></span>\r\n          <span class="value">\r\n            \x3c!-- {{salesOrder.memo}} --\x3e\r\n            <p class="p-0 m-0 p_textEditor" [innerHTML]="salesOrder.memo"></p>\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Notes: </b></span>\r\n          <span class="value">\r\n            \x3c!-- {{salesOrder.notes}} --\x3e\r\n            <p class="p-0 m-0 p_textEditor" [innerHTML]="salesOrder.notes"></p>\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <div class="col-md-3">\r\n        <div class="card">\r\n          <div class="card-header" style="padding:.1rem 2rem">\r\n            <label style="text-align: center; width:100%">Margin Summary</label>\r\n          </div>\r\n          <div style="padding:5px">\r\n            <p style="padding:0px"><span class="label"><b>Sales</b></span>\r\n              <span class="value" style="text-align:right">{{marginSummary.sales |twoDecimalGlobalNumberFormatPipe}}\r\n              </span>\r\n            </p>\r\n            <p style="padding:0px"><span class="label"><b>Misc Amt</b></span>\r\n              <span class="value" style="text-align:right">{{marginSummary.misc |twoDecimalGlobalNumberFormatPipe}}\r\n              </span>\r\n            </p>\r\n            <p style="padding:0px"><span class="label"><b>Net Sales</b></span>\r\n              <span class="value" style="text-align:right">{{marginSummary.netSales |twoDecimalGlobalNumberFormatPipe}}\r\n              </span>\r\n            </p>\r\n            <p style="padding:0px"><span class="label"><b>Product Cost</b></span>\r\n              <span class="value"\r\n                style="text-align:right">{{marginSummary.productCost |twoDecimalGlobalNumberFormatPipe}}\r\n              </span>\r\n            </p>\r\n            <p style="padding:0px"><span class="label"><b>Margin Amt</b></span>\r\n              <span class="value"\r\n                style="text-align:right">{{marginSummary.marginAmount |twoDecimalGlobalNumberFormatPipe}}\r\n              </span>\r\n            </p>\r\n            <p style="padding:0px"><span class="label"><b>Margin %</b></span>\r\n              <span class="value"\r\n                style="text-align:right">{{marginSummary.marginPercentage |twoDecimalGlobalNumberFormatPipe}}\r\n              </span>\r\n            </p>\r\n            \x3c!-- <label style="font-weight: normal">Sales<span\r\n                style="float: right">{{marginSummary.sales |twoDecimalGlobalNumberFormatPipe}}</span></label>\r\n            <label style="font-weight: normal">Misc<span\r\n                style="float: right">{{marginSummary.misc| twoDecimalGlobalNumberFormatPipe}}</span></label>\r\n            <label style="font-weight: normal">Net\r\n              Sales<span\r\n                style="float: right">{{marginSummary.netSales | twoDecimalGlobalNumberFormatPipe}}</span></label>\r\n            <label style="font-weight: normal">Product\r\n              Cost<span\r\n                style="float: right">{{marginSummary.productCost | twoDecimalGlobalNumberFormatPipe}}</span></label>\r\n            <label style="font-weight: normal">Margin\r\n              Amt<span\r\n                style="float: right">{{marginSummary.marginAmount | twoDecimalGlobalNumberFormatPipe}}</span></label>\r\n            <label style="font-weight: normal">Margin\r\n              %<span\r\n                style="float: right">{{marginSummary.marginpercentage | twoDecimalGlobalNumberFormatPipe}}</span></label> --\x3e\r\n          </div>\r\n        </div>\r\n        <div style="padding-top: 10px"></div>\r\n        <div class="card">\r\n          <div class="card-header" style="padding:.1rem 3rem">\r\n            <label style="text-align: center; width:100%">Management Structure</label>\r\n          </div>\r\n          <div style="padding:5px">\r\n            <div class="form-group" style="margin-bottom: 4px;">\r\n              <input class="form-control" type="text" name="companyName" [(ngModel)]="managementStructure.level1"\r\n                disabled>\r\n            </div>\r\n            <div class="form-group" style="margin-bottom: 4px;">\r\n              <input class="form-control" type="text" name="BUName" [(ngModel)]="managementStructure.level2" disabled>\r\n            </div>\r\n            <div class="form-group" style="margin-bottom: 4px;">\r\n              <input class="form-control" type="text" name="divisionName" [(ngModel)]="managementStructure.level3"\r\n                disabled>\r\n            </div>\r\n            <div class="form-group" style="margin-bottom: 4px;">\r\n              <input class="form-control" type="text" name="deptName" [(ngModel)]="managementStructure.level4" disabled>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <p-tabView class="pas-tabview" (onChange)="onTabChange($event)">\r\n    <p-tabPanel header="Parts List">\r\n      <app-sales-order-part-number [salesQuote]="salesQuote" [salesOrderId]="salesOrder.salesOrderId"\r\n        [isViewMode]="true" [employeesList]="allEmployeeinfo"></app-sales-order-part-number>\r\n\r\n\r\n    </p-tabPanel>\r\n    <p-tabPanel header="Internal Approvers">\r\n      <app-sales-order-approve>\r\n      </app-sales-order-approve>\r\n    </p-tabPanel>\r\n    <p-tabPanel header="Approver Process">\r\n      <app-sales-order-customer-approval [customer-id]="salesQuote.customerId"\r\n        [sales-order-id]="salesOrder.salesOrderId" [status]="status" [customer-contacts]="customerContactList"\r\n        [customerContactList]="customerContactList" (on-part-approved-event)="onPartsApprovedEvent($event)">\r\n      </app-sales-order-customer-approval>\r\n    </p-tabPanel>\r\n    <p-tabPanel header="Address">\r\n      <div class="table-responsive default-bg clear">\r\n        <div class="col-sm-4">\r\n          <h5 class="po-head">Ship To</h5>\r\n          <p><span class="label"><b>User Type: </b></span><span\r\n              class="value">{{salesOrder.shipToUserType ? salesOrder.shipToUserType : \'-\'}}</span></p>\r\n          <p><span class="label"><b>User: </b></span><span\r\n              class="value">{{salesOrder.shipToUser ? salesOrder.shipToUser : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Site Name: </b></span><span\r\n              class="value">{{salesOrder.shipToSiteName ? salesOrder.shipToSiteName : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Address1: </b></span><span\r\n              class="value">{{salesOrder.shipToAddress1 ? salesOrder.shipToAddress1 : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Address2: </b></span><span\r\n              class="value">{{salesOrder.shipToAddress2 ? salesOrder.shipToAddress2 : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Address3: </b></span><span\r\n              class="value">{{salesOrder.shipToAddress3 ? salesOrder.shipToAddress3 : \'-\'}}</span></p>\r\n          <p><span class="label"><b>City: </b></span><span\r\n              class="value">{{salesOrder.shipToCity ? salesOrder.shipToCity : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Primary State/Province: </b></span><span\r\n              class="value">{{salesOrder.shipToState ? salesOrder.shipToState : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Postal: </b></span><span\r\n              class="value">{{salesOrder.shipToPostalCode ? salesOrder.shipToPostalCode : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Country: </b></span><span\r\n              class="value">{{salesOrder.shipToCountry ? salesOrder.shipToCountry : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Contact Name: </b></span><span\r\n              class="value">{{salesOrder.shipToContactName ? salesOrder.shipToContactName : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Memo: </b></span><span\r\n              class="value">\r\n              \x3c!-- {{salesOrder.shipViaMemo ? salesOrder.shipViaMemo : \'-\'}} --\x3e\r\n              <p class="p-0 m-0 p_textEditor" [innerHTML]="salesOrder.shipViaMemo"></p>\r\n            </span></p>\r\n          <p><span class="label"><b>Ship Via: </b></span><span\r\n              class="value">{{salesOrder.shipViaName ? salesOrder.shipViaName : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Shipping Cost: </b></span><span\r\n              class="value">{{salesOrder.shippingCost ? salesOrder.shippingCost : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Handling Cost: </b></span><span\r\n              class="value">{{salesOrder.handlingCost ? salesOrder.handlingCost : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Shipping Acct Num: </b></span><span\r\n              class="value">{{salesOrder.shippingAccountNo ? salesOrder.shippingAccountNo : \'-\'}}</span></p>\r\n        </div>\r\n        <div class="col-sm-4">\r\n          <h5 class="po-head">Bill To</h5>\r\n          <p><span class="label"><b>User Type: </b></span><span\r\n              class="value">{{salesOrder.billToUserType ? salesOrder.billToUserType : \'-\'}}</span></p>\r\n          <p><span class="label"><b>User: </b></span><span\r\n              class="value">{{salesOrder.billToUser ? salesOrder.billToUser : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Site Name: </b></span><span\r\n              class="value">{{salesOrder.billToSiteName ? salesOrder.billToSiteName : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Address1: </b></span><span\r\n              class="value">{{salesOrder.billToAddress1 ? salesOrder.billToAddress1 : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Address2: </b></span><span\r\n              class="value">{{salesOrder.billToAddress2 ? salesOrder.billToAddress2 : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Address3: </b></span><span\r\n              class="value">{{salesOrder.billToAddress3 ? salesOrder.billToAddress3 : \'-\'}}</span></p>\r\n          <p><span class="label"><b>City: </b></span><span\r\n              class="value">{{salesOrder.billToCity ? salesOrder.billToCity : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Primary State/Province: </b></span><span\r\n              class="value">{{salesOrder.billToState ? salesOrder.billToState : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Postal: </b></span><span\r\n              class="value">{{salesOrder.billToPostalCode ? salesOrder.billToPostalCode : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Country: </b></span><span\r\n              class="value">{{salesOrder.billToCountry ? salesOrder.billToCountry : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Contact Name: </b></span><span\r\n              class="value">{{salesOrder.billToContactName ? salesOrder.billToContactName : \'-\'}}</span></p>\r\n          <p><span class="label"><b>Memo: </b></span><span\r\n              class="value">\r\n              \x3c!-- {{salesOrder.billToMemo ? salesOrder.billToMemo : \'-\'}} --\x3e\r\n\r\n              <p class="p-0 m-0 p_textEditor" [innerHTML]="salesOrder.billToMemo"></p>\r\n            </span></p>\r\n        </div>\r\n      </div>\r\n    </p-tabPanel>\r\n    <p-tabPanel header="Freight">\r\n      <app-sales-order-freight [freightForm]="freight" [customerId]="customerId"\r\n        [salesOrderQuoteId]="salesQuote.salesOrderQuoteId" [salesOrderId]="salesQuote.salesOrderId"\r\n        (saveFreightListForSO)="saveSalesOrderFreightsList($event)"\r\n        (updateFreightListForSO)="updateSalesOrderFreightsList($event)" (refreshData)="getFreightList()" [isView]="true"\r\n        [isQuote]="false">\r\n      </app-sales-order-freight>\r\n    </p-tabPanel>\r\n    <p-tabPanel header="Charges">\r\n      <app-sales-order-charges [chargeForm]="charge" [customerId]="customerId"\r\n        [salesOrderQuoteId]="salesQuote.salesOrderQuoteId" [salesOrderId]="salesQuote.salesOrderId"\r\n        (saveChargesListForSO)="saveSalesOrderChargesList($event)"\r\n        (updateChargesListForSO)="updateSalesOrderChargesList($event)" (refreshData)="getChargesList()" [isView]="true"\r\n        [isQuote]="false">\r\n      </app-sales-order-charges>\r\n    </p-tabPanel>\r\n    <p-tabPanel header="Billing/Invoicing">\r\n      \x3c!-- <app-sales-order-billing [parts]="selectedParts" [salesOrderId]="id" [salesOrder]="salesQuote">\r\n      </app-sales-order-billing> --\x3e\r\n      <p>Billing/Invoicing under implementation</p>\r\n    </p-tabPanel>\r\n    <p-tabPanel header="Shipping">\r\n      <app-sales-order-shipping [parts]="selectedParts" [salesOrderId]="salesOrder.salesOrderId"\r\n      [customerDetails]="customerDetails" [salesOrder]="salesOrder"\r\n      [managementStructureId]="managementStructureId">\r\n      </app-sales-order-shipping>\r\n    </p-tabPanel>\r\n    <p-tabPanel header="Document">\r\n      <app-sales-order-document [salesOrderId]="salesQuote.salesOrderId" [isEditMode]="false" [viewMode]="true">\r\n      </app-sales-order-document>\r\n    </p-tabPanel>\r\n    <p-tabPanel header="Analysis">\r\n      <app-sales-order-analysis></app-sales-order-analysis>\r\n    </p-tabPanel>\r\n    <p-tabPanel header="Communication">\r\n      <app-communication [moduleName]="moduleName" [idForContact]="customerId" [isViewMode]="true" [type]="1"\r\n        [referenceId]="salesOrder.salesOrderId"></app-communication>\r\n    </p-tabPanel>\r\n  </p-tabView>\r\n  <div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n      <div class="lds-roller">\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  </div>'},"7Tzj":function(e,t,r){"use strict";r.r(t),t.default='<p-breadcrumb [model]="breadcrumbs" [home]="home"></p-breadcrumb>\r\n\r\n<div class="card new-card">\r\n  <div class="card-header bg-primary new-card-header">\r\n    <div class="row">\r\n      <div class="col">\r\n        <h4 class="new-card-heading">Search Customer</h4>\r\n      </div>\r\n      <div>\r\n        <button type="button" class="btn-sm new-btn-primary pull-right" matTooltipPosition="above" matTooltip="SO List"\r\n          [routerLink]="[\'/salesmodule/salespages/sales-order-list\']">\r\n          SO List\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class="card-body new-card-body">\r\n    <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="data" [first]="0" [rows]="pageSize" [paginator]="true"\r\n      [pageLinks]="3" [rowsPerPageOptions]="[10, 20, 50, 100]" [columns]="selectedColumns" selectionMode="multiple"\r\n      [metaKeySelection]="true" [lazy]="true" (onLazyLoad)="loadData($event)" [resizableColumns]="true"\r\n      [reorderableColumns]="true" [totalRecords]="totalRecords" [scrollable]="true" scrollHeight="450px">\r\n      <ng-template pTemplate="caption">\r\n        <div class="row">\r\n          <div class="col">\r\n            <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns" optionLabel="header"\r\n              selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns"\r\n              style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n          </div>\r\n          <div class="col">\r\n            <div style="width: auto !important; float: right;"\r\n              class="inner-addon right-addon w50 inline-block g-filter-search-cstm">\r\n              <i class="fa fa-search"></i>\r\n              <input type="text" pInputText size="50" class="form-control" (input)="globalSearch($event.target.value)"\r\n                placeholder="Filter">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="row">\r\n          <div class="col">\r\n            <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"\r\n              matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Data"\r\n              data-toggle="modal" (click)="selectedOnly = false; targetData = dt;"\r\n              data-target="#downloadConfirmation"></button>\r\n            <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"\r\n              matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n              (click)="dt.exportCSV({ selectionOnly: true })"></button>\r\n          </div>\r\n          <div class="col"></div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate="colgroup" let-columns>\r\n        <colgroup>\r\n          <col *ngFor="let col of columns" style="width:130px">\r\n        </colgroup>\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate="header" let-columns>\r\n        <tr>\r\n\r\n          <th style="width:auto" *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n            [pSortableColumn]="col.field">\r\n            {{ col.header }}\r\n            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n          </th>\r\n          <th style="width:180px;position:sticky" *ngIf="selectedColumns.length > 0">\r\n            Actions\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n            <input style="width:100%;" pInputText type="text"\r\n              (input)="dt.filter($event.target.value, col.field, \'contains\')">\r\n          </th>\r\n          <th style="width:200px;position:sticky"></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n        <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData" pReorderableRowHandle\r\n          (dblclick)="viewSelectedRow(rowData)">\r\n          <td style="width:auto" *ngFor="let col of columns" class="ui-resizable-column"\r\n            style="text-overflow: ellipsis;" [matTooltip]="mouseOverData(col.field,  rowData)"\r\n            matTooltipPosition="above" [matTooltipDisabled]="rowData[\'customerClassificationType\'] != \'Multiple\'"\r\n            [ngStyle]="{\'color\': getColorCodeForMultiple(rowData)}">\r\n            {{\r\n       col.field == \'createdDate\'\r\n         ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n         : rowData[col.field] && col.field == \'updatedDate\'\r\n         ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n         : rowData[col.field]\r\n                 }}\r\n          </td>\r\n          <td class="action-icons-cstm" style="width:180px" *ngIf="selectedColumns.length > 0">\r\n            <div>\r\n              <span>\r\n                <a class="btn btn-info boxed-float-btn nobg nobg" data-toggle="tooltip"\r\n                  (click)="viewSelectedRow(rowData)" matTooltip="View" matTooltipPosition="above">\r\n                  <i class="fa fa-eye"></i>\r\n                </a>\r\n              </span>\r\n              <button class="btn-add" mat-icon-button (click)="createOrder(rowData)" matTooltip="Create Sales Order"\r\n                matTooltipPosition="above" style="font-weight: bold;"\r\n                [disabled]="!rowData.isActive || rowData.isDeleted">\r\n                <i class="fa fa-plus"> </i>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="summary" id="footer">\r\n        <label id="footer" class="footer">Total:</label>\r\n        <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText type="text" />\r\n        &nbsp;&nbsp;\r\n        <label id="footer" class="footer1">Pages Count:</label>\r\n        <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText type="text" />\r\n      </ng-template>\r\n      <ng-template pTemplate="emptymessage" let-columns>\r\n        <tr>\r\n          <td colspan="11" style="color: red; font-weight: bold; text-align: center">\r\n            No records found\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #warningPopup let-c="close" let-d="dismiss">\r\n  <div class="modal-header">\r\n    <button type="button" class="close" data-dismiss="modal" (click)="closeModal()">&times;</button>\r\n    <h4 class="modal-title warning_color"> Warning</h4>\r\n  </div>\r\n  <div class="modal-body">\r\n    <p class="warning_color">{{customerWarning.warningMessage}}</p>\r\n  </div>\r\n  <div class="modal-footer">\r\n\r\n    <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n      (click)="moveToCreate(customerWarning.customerId)">Ok</button>\r\n  </div>\r\n</ng-template>\r\n<ng-template #restrictionPopup let-c="close" let-d="dismiss">\r\n  <div class="modal-header">\r\n    <button type="button" class="close" data-dismiss="modal" (click)="closeModal()">&times;</button>\r\n    <h4 class="modal-title restrict_color"> Restriction</h4>\r\n  </div>\r\n  <div class="modal-body">\r\n    <p class="restrict_color">{{customerWarning.restrictMessage}}</p>\r\n  </div>\r\n  <div class="modal-footer">\r\n\r\n    <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="closeModal()">Ok</button>\r\n  </div>\r\n</ng-template>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n  <div class="loading">\r\n    <div class="lds-roller">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class="modal fade" id="downloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n  <div class="modal-dialog modal-sm">\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" (click)="closePopupModal()">&times;</button>\r\n        <h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n      </div>\r\n      <div class="modal-body" *ngIf="targetData && !selectedOnly">\r\n        <strong>\r\n          <span>\r\n            You are attempting to export {{targetData.totalRecords}} of records.\r\n          </span>\r\n        </strong>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary"\r\n          (click)="(selectedOnly) ? targetData.exportCSV({ selectionOnly: true }) : exportCSV(targetData); closePopupModal();">Confirm</button>\r\n        <button type="button" class="btn btn-danger" (click)="closePopupModal()">Cancel</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>'},"84uX":function(e,t,r){"use strict";r.r(t),t.default="button {\n  border-radius: 5px;\n}\n\n.form-group > label {\n  width: 100%;\n}\n\ndiv.row {\n  padding: 10px;\n}\n\n.footer-t-rec {\n  margin-left: 65%;\n}\n\n.footer--count {\n  margin-right: 0px;\n}\n\n.ui-table-scrollable-header-box {\n  margin-right: 17px !important;\n}\n\n.ui-table-scrollable-body {\n  margin-right: 17px !important;\n}\n\n.sales-quote-part-search-data p-table .ui-table-summary {\n  margin: auto !important;\n}\n\n.alternate-part-label {\n  color: #ff5663 !important;\n}\n\n.row-bg1 {\n  background-color: #ffe4e2 !important;\n}\n\n.sales-quote-part-search-data tr td:first-child {\n  background: #4298ff;\n  color: #fff;\n  position: -webkit-sticky;\n  position: sticky;\n  left: 0;\n}\n\n.sales-quote-part-search-data tr td:last-child {\n  background: #FFF;\n  position: -webkit-sticky;\n  position: sticky;\n  right: 0;\n}\n\n.sales-quote-part-search-data tr th:first-child {\n  background: #4298ff;\n  color: #fff;\n  position: -webkit-sticky;\n  position: sticky;\n  left: 0;\n}\n\n.sales-quote-part-search-data tr th:last-child {\n  position: -webkit-sticky;\n  position: sticky;\n  right: 0;\n}\n\n::-webkit-scrollbar {\n  width: 10px;\n}\n\n.ui-table-scrollable-header {\n  overflow-y: scroll;\n}"},"8F3F":function(e,t,r){"use strict";r.r(t),t.default='<div class="card new-card">\r\n  <div class="card-body new-card-body">\r\n    <p-table #dt [value]="sales" class="rpo-table-cstm sales-analysis-header" [first]="0" [rows]="pageSize" [paginator]="showPaginator"\r\n      [pageLinks]="3" [rowsPerPageOptions]="[10, 20, 50, 100]" [columns]="selectedColumns" selectionMode="multiple"\r\n      [metaKeySelection]="true" [(selection)]="selectedColumn" [lazy]="true" (onLazyLoad)="loadData($event)"\r\n      [totalRecords]="totalRecords" [scrollable]="true" [style]="{ width: \'100%\' }">\r\n      <ng-template pTemplate="caption">\r\n        \x3c!--<div class="row">\r\n           <div class="col">\r\n            <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns" optionLabel="header"\r\n              selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns"\r\n              style="float:left"></p-multiSelect>\r\n          </div> --\x3e\r\n          \x3c!--<div class="col">\r\n            \x3c!-- <div style="width: auto !important; float: right;"\r\n              class="inner-addon right-addon w50 inline-block g-filter-search-cstm">\r\n              <i class="fa fa-search"></i>\r\n              <input type="text" pInputText size="50" class="form-control" (input)="globalSearch($event.target.value)"\r\n                placeholder="Filter">\r\n            </div>\r\n          </div>\r\n        </div>--\x3e\r\n        \x3c!-- <div class="row">\r\n          <div class="col">\r\n            <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns" optionLabel="header"\r\n              selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns"\r\n              style="float:left"></p-multiSelect>\r\n          </div>\r\n          <div class="col">\r\n            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n              <label class="radio-cstm wauto">\r\n                <input type="radio" name="viewType" class="form-control" value="pnview" [(ngModel)]="viewType"\r\n                  (click)="changeOfStatus(\'\',\'pnview\')">\r\n                <span class="checkmark"></span>PN View\r\n              </label>\r\n            </div>\r\n            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n              <label class="radio-cstm wauto">\r\n                <input type="radio" name="viewType" class="form-control" value="detailedview" [(ngModel)]="viewType"\r\n                  (click)="changeOfStatus(\'\',\'detailedview\')">\r\n                <span class="checkmark"></span>Detailed View\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div class="pull-right" style="padding-left:0px;">\r\n            <div class="">\r\n              <div class="col" style="float: right; padding: 3px 0 0;">\r\n\r\n                <div class="form-group">\r\n                  <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"\r\n                    matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Data"\r\n                    (click)="dt.exportCSV()"></button>\r\n                  <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"\r\n                    matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                    (click)="dt.exportCSV({ selectionOnly: true })"></button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> --\x3e\r\n        <div class="row">\r\n          <div style="margin-left: 12px;">\r\n            <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns" optionLabel="header"\r\n              selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns"\r\n              style="float:left"></p-multiSelect>\r\n          </div>\r\n          <div class="col">\r\n            <div\r\n              style="width: auto !important; float: right;"\r\n              class="inner-addon right-addon w50 inline-block g-filter-search-cstm">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="row">\r\n          <div class="col">             \r\n            <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"\r\n            matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Data"\r\n            (click)="dt.exportCSV()"></button>\r\n            <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"\r\n            matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n            (click)="dt.exportCSV({ selectionOnly: true })"></button>\r\n          </div>\r\n          <div class="col">\r\n            <div class="">\r\n              <div\r\n                class="col"\r\n                style="width: 250px; float: right; padding-top: 3px;">\r\n                <div class="form-group">\r\n                  <div\r\n                    class="pull-left"\r\n                    style="margin-top: 4px; margin-right: 15px;">\r\n                    <label class="radio-cstm wauto">\r\n                      <input type="radio" name="viewType" class="form-control" value="pnview" [(ngModel)]="viewType"\r\n                        (click)="changeOfStatus(\'\',\'pnview\')">\r\n                      <span class="checkmark"></span>PN View\r\n                    </label>\r\n          </div>\r\n          <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n            <label class="radio-cstm wauto">\r\n              <input type="radio" name="viewType" class="form-control" value="detailedview" [(ngModel)]="viewType"\r\n                (click)="changeOfStatus(\'\',\'detailedview\')">\r\n              <span class="checkmark"></span>Detailed View\r\n            </label>\r\n          </div>\r\n          </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>  \r\n      </ng-template>\r\n      <ng-template pTemplate="colgroup" let-columns>\r\n        <colgroup>\r\n          <col *ngFor="let col of columns" [ngStyle]="{\'width\': col.width}" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate="header" let-columns>\r\n        <tr *ngIf="!pnViewSelected">\r\n          <th colspan="12">&nbsp;\r\n          </th>\r\n          <th colspan="3">Per Unit Revenue\r\n          </th>\r\n          <th colspan="4">Extended Revenue\r\n          </th>\r\n          <th colspan="2">&nbsp;\r\n          </th>\r\n          <th colspan="2">Cost\r\n          </th>\r\n          <th colspan="2">Product Margin\r\n          </th>\r\n          <th colspan="5">\r\n          </th>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th *ngFor="let col of columns" [pSortableColumn]="col.field">\r\n            {{ col.header }}\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="body" let-rowData let-rowIndex="rowIndex" let-expanded="expanded" let-columns="columns">\r\n        <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex" pReorderableRowHandle>\r\n          <td *ngFor="let col of columns" style="text-overflow: ellipsis;"\r\n            [matTooltip]="mouseOverData(col.field,  rowData)" matTooltipPosition="above"\r\n            [matTooltipDisabled]="rowData[\'partNumberType\'] != \'Multiple\'"\r\n            [ngStyle]="{\'color\': getColorCodeForMultiple(rowData)}">\r\n            <span *ngIf="col.field == \'markupPerUnit\' || col.field == \'grossSalePricePerUnit\'\r\n                || col.field == \'discountAmount\'\r\n                || col.field == \'markupExtended\'\r\n                || col.field == \'salesDiscountExtended\'\r\n                || col.field == \'netSales\'\r\n                || col.field == \'misc\'\r\n                || col.field == \'grossSalePrice\'\r\n                || col.field == \'totalSales\'\r\n                || col.field == \'unitCost\'\r\n                || col.field == \'unitCostExtended\'\r\n                || col.field == \'marginAmountExtended\'\r\n                || col.field == \'freight\'\r\n                || col.field == \'taxAmount\'\r\n                || col.field == \'totalRevenue\'\r\n                || col.field == \'marginPercentage\'" style="float: right !important;">\r\n              {{convertDate(col.field , rowData) | twoDecimalGlobalNumberFormatPipe}}\r\n            </span>\r\n            <span *ngIf="col.field == \'qty\'" style="float: right !important;">\r\n              {{convertDate(col.field , rowData) | globalNmberFormat}}\r\n            </span>\r\n            <span *ngIf="col.field == \'notes\'" [innerHTML]="rowData.notes"></span>\r\n            <span *ngIf="col.field != \'qty\' \r\n                && col.field != \'markupPerUnit\' \r\n                && col.field != \'grossSalePricePerUnit\'\r\n                && col.field != \'discountAmount\'\r\n                && col.field != \'markupExtended\'\r\n                && col.field != \'salesDiscountExtended\'\r\n                && col.field != \'netSales\'\r\n                && col.field != \'misc\'\r\n                && col.field != \'grossSalePrice\'\r\n                && col.field != \'totalSales\'\r\n                && col.field != \'unitCost\'\r\n                && col.field != \'unitCostExtended\'\r\n                && col.field != \'marginAmountExtended\'\r\n                && col.field != \'freight\'\r\n                && col.field != \'taxAmount\'\r\n                && col.field != \'totalRevenue\'\r\n                && col.field != \'marginPercentage\'\r\n                && col.field != \'notes\'">\r\n              {{convertDate(col.field , rowData)}}\r\n            </span>\r\n\r\n          </td>\r\n        </tr>\r\n        <tr *ngIf="!pnViewSelected && rowIndex == (sales.length-1)" class="footer">\r\n          <td colspan="15">&nbsp;\r\n          </td>\r\n          <td><label>Total</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'markupExtended\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'grossSalePrice\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'salesDiscountExtended\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'netSales\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'misc\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'totalSales\')}}</label>\r\n          </td>\r\n          <td>&nbsp;\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'unitCostExtended\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'marginAmountExtended\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getPercentage(\'marginPercentage\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'freight\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'taxAmount\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'totalRevenue\')}}</label>\r\n          </td>\r\n          <td>&nbsp;\r\n          </td>\r\n        </tr>\r\n        <tr *ngIf="pnViewSelected && rowIndex == (sales.length-1)" class="footer">\r\n          <td colspan="6">&nbsp;\r\n          </td>\r\n          <td><label>Total</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'markupExtended\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'grossSalePrice\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'salesDiscountExtended\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'netSales\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'misc\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'totalSales\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'unitCostExtended\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'marginAmountExtended\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getPercentage(\'marginPercentage\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'freight\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'taxAmount\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'totalRevenue\')}}</label>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="emptymessage" let-columns *ngIf="sales.length == 0">\r\n        <tr>\r\n          <td [attr.colspan]="10" style="color: red; font-weight: bold; text-align: center">\r\n            No records found\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate="summary" id="footer">\r\n        <label id="footer" class="footer">Total:</label>\r\n        <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n        &nbsp;&nbsp;\r\n        <label id="footer" class="footer1">Pages Count:</label>\r\n\r\n        <input style="width: 5%;" [ngModel]="totalPages" [disabled]="true" pInputText type="text" />\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n  <div class="loading">\r\n    <div class="lds-roller">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n</div>'},"8kP8":function(e,t,r){"use strict";r.r(t),t.default=".modal-body p .label {\r\n    width: 33%;\r\n    padding: 0;\r\n    display: inline-block;\r\n}\r\n\r\n.modal-body p .value {\r\n    width: 54%;\r\n    display: inline-block;\r\n    margin-left: 5%;\r\n}\r\n\r\n.loader-position{\r\n    position: absolute;\r\n}\r\n\r\n.loader-align{\r\n    margin-top: 17rem;\r\n    margin-left:30rem;\r\n}"},"9vx5":function(e,t,r){"use strict";r.r(t),t.default="label {\n  text-align: left;\n  width: 100%;\n}\n\n.form-controls {\n  margin-top: 10px;\n}\n\n.column {\n  margin-left: 10px;\n}\n\n.column-seperator {\n  margin-left: 20px;\n}\n\n.checkbox-custom-label {\n  margin-left: 15px;\n  margin-top: 10px;\n}\n\nbutton {\n  border-radius: 5px;\n}\n\n.ng-valid[required], .ng-valid.required {\n  /*border-color:#42A948 !important;*/\n  /* green */\n}\n\n.ng-invalid:not(form) {\n  border-color: #a94442 !important;\n  /* red */\n}\n\n:host ::ng-deep .ui-autocomplete {\n  padding: 0px !important;\n}\n\n:host ::ng-deep .ui-autocomplete > input {\n  padding: 0px 15px 0px 2px !important;\n}\n\n.inline-label-form-group-sm-label label {\n  width: 100px;\n}\n\n.inline-label-form-group-sm-label select {\n  width: calc(70% - 100px);\n}\n\n:host ::ng-deep .card-body {\n  padding-left: 10px !important;\n}\n\n:host ::ng-deep div.ui-chkbox-box.ui-widget.ui-corner-all.ui-state-default.ui-state-disabled {\n  background-color: #c9c9c9 !important;\n  border-color: #adadad;\n  opacity: 100 !important;\n  color: #333333 !important;\n  border: 1px solid #adadad !important;\n}"},"9wWG":function(e,t,r){"use strict";r.r(t),t.default='\ufeff<div class="card">\r\n    <div class="card-body" style="padding: 1px 5px;">\r\n        <div class="x_content">\r\n            <div>\r\n\r\n\r\n                <div [ngClass]="!viewMode ? \'card\' : \'\'" class="card new-card" style="padding: 10px;">\r\n                    <div *ngIf="!viewMode" class="card-header bg-primary new-card-header">\r\n                        <div class="row">\r\n                            <div class="col">\r\n                              <h4 class="new-card-heading">  Documents List</h4>\r\n                            </div>\r\n                            <div>\r\n                                <a class="plusicon-cstm" href="#" data-toggle="modal" \r\n                                (click)="resetCreateForm()"\r\n                                    data-target="#addDocumentDetails">\r\n                                    <button type="button" class="btn-sm new-btn-primary"\r\n                                    matTooltip="Create Document Details "\r\n                                    (click)="resetCreateForm()"\r\n                                        matTooltipPosition="above">\r\n                                    Add Documents</button>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class="clear"></div>\r\n                      <hr />        \r\n                      <div class="card-body new-card-body">\r\n                        <p-table #documents class="rpo-table-cstm" [value]="documentsDestructuredData"\r\n                            [metaKeySelection]="true" [rows]="10" [paginator]="true" [pageLinks]="3"\r\n                            [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" selectionMode="multiple"\r\n                            [resizableColumns]="true" [reorderableColumns]="true" (onPage)="pageIndexChange($event)"\r\n                            [loading]="loaderForDocuments">\r\n                            <ng-template *ngIf="!viewMode" pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [options]="salesQuoteDocumentsColumns" [(ngModel)]="selectedColumns"\r\n                                        [ngModelOptions]="{standalone: true}" optionLabel="header"\r\n                                        selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}"\r\n                                        defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n\r\n                                    </div>\r\n                                    <div class="col">\r\n                                      <div\r\n                                        style="width: auto !important; float: right;"\r\n                                        class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                                      >\r\n                                        <i class="fa fa-search"></i>\r\n                                        <input type="text" pInputText size="50"\r\n                                            class="form-control"\r\n                                            (input)="documents.filterGlobal($event.target.value, \'contains\')"\r\n                                            placeholder=" Filter" style="height: 28px !important;">\r\n                                        </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class="row">\r\n                                    <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"\r\n                                        matTooltipPosition="above" pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Data" (click)="documents.exportCSV()"\r\n                                        style="padding: 5px 10px !important;"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"\r\n                                        matTooltipPosition="above" pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Selection Only"\r\n                                        (click)="documents.exportCSV({selectionOnly:true})"\r\n                                        style="padding: 5px 10px !important;"></button>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n\r\n                                <tr>\r\n                                    <ng-container *ngFor="let col of columns">\r\n                                        <th *ngIf="col.field !== \'fileName\'" pResizableColumn pReorderableColumn\r\n                                            [pSortableColumn]="col.field">\r\n                                            {{col.header}}\r\n                                            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                        </th>\r\n                                        <th *ngIf="col.field == \'fileName\'">\r\n                                            File Name\r\n\r\n                                    </ng-container>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n\r\n                                <tr>\r\n                                    \x3c!-- <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="documents.filter($event.target.value, col.field, \'contains\')">\r\n                                    </th> --\x3e\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input type="text"\r\n                                            *ngIf="col.field != \'fileCreatedDate\' && col.field != \'fileUpdatedDate\'"\r\n                                            style="width:100%;" pInputText\r\n                                            (input)="documents.filter($event.target.value, col.field, \'contains\')">\r\n                                        <input type="date" class="hidePlaceHolder"\r\n                                            *ngIf="col.field == \'fileCreatedDate\'" name="fileCreatedDate"\r\n                                            style="width:100%;"\r\n                                            (change)="dateFilterForTable($event.target.value, col.field )">\r\n                                        <input type="date" class="hidePlaceHolder"\r\n                                            *ngIf="col.field == \'fileUpdatedDate\'" name="fileUpdatedDate"\r\n                                            style="width:100%;"\r\n                                            (change)="dateFilterForTable($event.target.value, col.field )">\r\n                                    </th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                                <tr [pSelectableRow]="rowData" [pSelectableRowDblClick]="rowData" pReorderableRowHandle\r\n                                    (dblclick)="openViewOnDblClick(rowData)">\r\n                                    <ng-container *ngFor="let col of columns">\r\n                                        <td *ngIf="col.field !== \'fileName\'" class="ui-resizable-column"\r\n                                            pReorderableRowHandle>\r\n                                            {{col.field == \'fileCreatedDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'fileUpdatedDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                        </td>\r\n                                        <td *ngIf="col.field == \'fileName\'">\r\n                                            <a class="filelink" (click)="downloadFileUpload(rowData)">\r\n                                                {{ rowData[col.field] }}\r\n                                            </a>\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n\r\n                                    \x3c!-- <td *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{col.field == \'createdDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td> --\x3e\r\n                                    <td class="text-center" *ngIf="viewMode">\r\n                                        <span data-toggle="modal" data-target="#docView">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                                (click)="openView(rowData)" matTooltip="View"\r\n                                                matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                    </td>\r\n                                    <td class="text-center" *ngIf="!viewMode">\r\n                                        <span data-toggle="modal" data-target="#docView">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                                (click)="openView(rowData)" matTooltip="View"\r\n                                                matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n\r\n\r\n                                        <span>\r\n                                            <a class="btn nobg btn-edit-cstm" data-target="#addDocumentDetails"\r\n                                                data-toggle="modal" (click)="editVendorDocument(rowData,$event)"\r\n                                                matTooltip="Edit" matTooltipPosition="above">\r\n                                                <i class="fa fa-pencil"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n                                        \x3c!-- <button *ngIf="!viewMode" class="btn-edit" mat-icon-button\r\n                                            (click)="editVendorDocument(rowData,$event)" matTooltip="edit"\r\n                                             matTooltipPosition="above"\r\n                                            data-toggle="modal" data-target="#addDocumentDetails">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span>\r\n                                            <a class="btn nobg btn-delete-cstm"\r\n                                                (click)=" openDelete(deleteContent, rowData);documents.reset();"\r\n                                                matTooltip="Delete" matTooltipPosition="above"><i\r\n                                                    class="fa fa-trash"></i></a>\r\n                                        </span>\r\n\r\n\r\n\r\n                                        \x3c!-- <button *ngIf="!viewMode" class="btn-delete" mat-icon-button\r\n                                            matTooltip="Delete" matTooltipPosition="above"\r\n                                            (click)=" openDelete(deleteContent, rowData);documents.reset();">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-toggle="modal">\r\n                                            <a class="btn nobg btn-hist-cstm"\r\n                                                (click)="openHistory(contentAuditHist, rowData)" matTooltip="History"\r\n                                                matTooltipPosition="above">\r\n                                                <i class="fa fa-history"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="history"\r\n                                        matTooltipPosition="above"\r\n                                            (click)="openHistory(contentAuditHist, rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            \x3c!-- <ng-template pTemplate="emptymessage" let-columns\r\n                                *ngIf="documentsDestructuredData.length == 0">\r\n                                <tr>\r\n                                    <td [attr.colspan]="10" *ngIf="isViewMode == false"\r\n                                        style="color: red; font-weight: bold; text-align: center">\r\n                                        No records found\r\n                                    </td>\r\n                                    <td [attr.colspan]="10" *ngIf="isViewMode == true"\r\n                                        style="color: red; font-weight: bold; text-align: center">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template> --\x3e\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="documents._totalRecords" [disabled]="true"\r\n                                    pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(documents._totalRecords,pageSize)"\r\n                                    [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n\r\n                        </p-table>\r\n                    </div>\r\n\r\n                    <div *ngIf="!viewMode">\r\n                        <button type="button" class="btn btn-primary pull-right submit-btn" (click)="CreateNewClick()">\r\n                            Create New\r\n                        </button>\r\n                        <button type="button" class="btn btn-primary pull-right submit-btn" (click)="backClick()">\r\n                            Previous\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #deleteContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="deleteItemAndCloseModel()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n</ng-template>\r\n<ng-template #contentAuditHist let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n\r\n        <h4 class="modal-title">History of Documents</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n\r\n\r\n    </div>\r\n    <div class="modal-body">\r\n\r\n        <div class="table-responsive">\r\n            <table class="table table-bordered">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Document Name</th>\r\n\r\n                        <th>Description</th>\r\n                        <th>Memo</th>\r\n                        <th>File Name</th>\r\n                        <th>Updated By</th>\r\n                        <th>Last Updated Time</th>\r\n                        <th>Created By</th>\r\n                        <th>Created Time</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor="let audit of documentauditHisory">\r\n                    <tr *ngFor="let audit of documentauditHisory; let i = index;">\r\n                        <td\r\n                            [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'docName\', audit.docName)  ? \'black\' : \'red\'  }">\r\n                            {{audit.docName}}\r\n                        </td>\r\n                        <td\r\n                            [ngStyle]="{\'color\': getColorCodeForHistory(i, \'docDescription\', audit.docDescription)  ? \'black\' : \'red\'  }">\r\n                            {{audit.docDescription}}\r\n                        </td>\r\n                        <td\r\n                            [ngStyle]="{\'color\': getColorCodeForHistory(i, \'docMemo\', audit.docMemo)  ? \'black\' : \'red\'  }">\r\n                            {{audit.docMemo}}\r\n                        </td>\r\n                        <td\r\n                            [ngStyle]="{\'color\': getColorCodeForHistory(i, \'fileName\', audit.fileName)  ? \'black\' : \'red\'  }">\r\n                            {{audit.fileName}}\r\n                        </td>\r\n\r\n                        <td>{{audit.updatedBy}}</td>\r\n                        <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                        <td>{{audit.createdBy}}</td>\r\n                        <td>{{audit.createdDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                    </tr>\r\n                </tbody>\r\n\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n    </div>\r\n</ng-template>\r\n<div id="docView" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Document Details</h4>\r\n            </div>\r\n            <div class="modal-body" *ngIf="sourceViewforDocument">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label"><b>Name<span class="clr-red">*</span> : </b></span><span\r\n                            class="value">{{sourceViewforDocument.docName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><b>Description<span class="clr-red">*</span> : </b></span><span\r\n                            class="value">{{sourceViewforDocument.docDescription}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><b>Memo : </b></span><span\r\n                            class="value">{{sourceViewforDocument.docMemo}}</span>\r\n                    </p>\r\n                    <div class="mt-3">\r\n                        <h4 class="panel-title">Attachment Details:</h4>\r\n                        <p-table #dt class="table-responsive ptable-cus-pma"\r\n                            [paginator]="sourceViewforDocumentList.length > 0" [value]="sourceViewforDocumentList"\r\n                            [rows]="3" [columns]="sourceViewforDocumentListColumns">\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th *ngFor="let col of columns">\r\n                                        {{col.header}}\r\n                                    </th>\r\n                                    <th>\r\n                                        Download\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                            (input)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                                    </th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-part let-rowData let-columns="columns" let-i="rowIndex">\r\n                                <tr>\r\n                                    <td *ngFor="let col of columns">\r\n                                        <ng-container *ngIf="col.field==\'fileName\'">\r\n                                            {{part[col.field]}}\r\n                                        </ng-container>\r\n\r\n                                    </td>\r\n                                    <td>\r\n                                        <a (click)="downloadFileUpload(part)" matTooltip="Download"\r\n                                            matTooltipPosition="above" class="btn nobg btn-cstm"><span><i\r\n                                                    class="fa fa-download"></i></span></a>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                                *ngIf="sourceViewforDocumentList.length == 0">\r\n                                <tr>\r\n                                    <td [attr.colspan]="2" style="color: red; font-weight: bold; text-align: center">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                        </p-table>\r\n\r\n\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="addDocumentDetails" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Add Document Details</h4>\r\n            </div>\r\n            <form #addDocumentForm="ngForm" class="form-horizontal">\r\n                <div class="modal-body">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n\r\n                            \x3c!--<input class="form-control" type="hidden" name="vendorDocumentDetailId" [(ngModel)]="documentInformation.vendorDocumentDetailId" required>--\x3e\r\n                            <div class="form-group">\r\n                                <label>Name <span class="clr-red">*</span></label>\r\n                                <input class="form-control" type="text" name="name" (ngModelChange)="enableSave()"\r\n                                    [(ngModel)]="documentInformation.docName" required>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Description <span class="clr-red">*</span></label>\r\n                                <textarea class="form-control" name="description" (ngModelChange)="enableSave()"\r\n                                    [(ngModel)]="documentInformation.docDescription" required></textarea>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Memo </label>\r\n                                <textarea class="form-control" name="memo" (ngModelChange)="enableSave()"\r\n                                    [(ngModel)]="documentInformation.docMemo"></textarea>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-md-12">\r\n                            <div class="form-group">\r\n                                <label style="float: none;">Attachments <span class="clr-red">*</span></label>\r\n                                <p-fileUpload #fileUpload name="fileupload[]" multiple="multiple" ngf-keep="distinct"\r\n                                    [showCancelButton]="false" [showUploadButton]="false" customUpload="true"\r\n                                    (onSelect)="fileUploadForDocuments($event)" (onRemove)="removeFile($event)"\r\n                                    (ngModelChange)="enableSave()">\r\n                                </p-fileUpload>\r\n                            </div>\r\n                        </div>\r\n                        \x3c!-- <div class="table-responsive table-overflow">\r\n                            <h4 class="panel-title" style="padding-left: 10px;">Attachment Details:</h4>\r\n                            <table class="table table-bordered ">\r\n                                <tr>\r\n                                    <th>File Name</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                                <tr *ngFor="let f of sourceViewforDocumentList ">\r\n                                    <td>{{f.fileName}}</td>\r\n                                    <td><a class="btn nobg btn-cstm" (click)="downloadFileUpload(f)"> <span><i class="fa fa-download"></i></span> </a>  </td>\r\n\r\n                                </tr>\r\n\r\n                            </table>\r\n                        </div> --\x3e\r\n\r\n                        <div class="table-responsive table-overflow" *ngIf="sourceViewforDocumentList.length > 0">\r\n                            <h4 class="panel-title" style="padding-left: 10px;">Attachment Details:</h4>\r\n                            <p-table class="table-responsive ptable-cus-pma"\r\n                                [paginator]="sourceViewforDocumentList.length > 0" [value]="sourceViewforDocumentList"\r\n                                [rows]="3" [columns]="sourceViewforDocumentListColumns">\r\n                                <ng-template pTemplate="header" let-columns>\r\n                                    <tr>\r\n                                        <th *ngFor="let col of columns">\r\n                                            {{col.header}}\r\n                                        </th>\r\n                                        <th>\r\n                                            Download\r\n                                        </th>\r\n                                    </tr>\r\n                                </ng-template>\r\n                                <ng-template pTemplate="body" let-part let-rowData let-columns="columns"\r\n                                    let-i="rowIndex">\r\n                                    <tr>\r\n                                        <td *ngFor="let col of columns">\r\n                                            <ng-container *ngIf="col.field==\'fileName\'">\r\n                                                {{part[col.field]}}\r\n                                            </ng-container>\r\n\r\n                                        </td>\r\n                                        <td>\r\n                                            <a (click)="downloadFileUpload(part)" matTooltip="Download"\r\n                                                matTooltipPosition="above" class="btn nobg btn-cstm">\r\n                                                <span>\r\n                                                    <i class="fa fa-download"></i>\r\n                                                </span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </ng-template>\r\n                                <ng-template pTemplate="emptymessage" let-columns\r\n                                    *ngIf="sourceViewforDocumentList.length == 0">\r\n                                    <tr>\r\n                                        <td [attr.colspan]="2"\r\n                                            style="color: red; font-weight: bold; text-align: center">\r\n                                            No records found\r\n                                        </td>\r\n                                    </tr>\r\n                                </ng-template>\r\n                            </p-table>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" *ngIf="!isEditButton" class="btn btn-primary pull-right submit-btn"\r\n                        style="text-align:center" data-dismiss="modal" (click)="saveDocumentInformation()"\r\n                        [disabled]="!addDocumentForm.valid">\r\n                        Save\r\n                    </button>\r\n                    <button type="button" *ngIf="isEditButton" class="btn btn-primary pull-right submit-btn"\r\n                        style="text-align:center" (click)="saveDocumentInformation()" data-dismiss="modal"\r\n                        [disabled]="!addDocumentForm.valid || disableSave">\r\n                        Update\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},BefB:function(e,t,r){"use strict";r.r(t),t.default='<div class="approver-tab-cstm">\r\n  <h5 class="po-head mt-2">Customer Approvals List</h5>\r\n  <div class="table-responsive">\r\n    <div class="table-responsive" style="margin-top: 10px;">\r\n      <table class="table table-bordered table-striped table-fixed table-sorting mpn-list-table" id="mpn-list-table">\r\n        <thead>\r\n          <tr class="pad_workflo">\r\n            <th style="width: fit-content;">\r\n              <input type="checkbox" (click)="selectAllApproval(\'internal\', selectall)" [(ngModel)]="selectall"\r\n                [disabled]="isView" /> Select All\r\n            </th>\r\n            <th style="min-width:100px !important;" *ngFor="let header of columns">{{header.header}}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <ng-container *ngIf="!quotesList || quotesList.length==0"><tr>\r\n            <td colspan="13" class="no-records-cstm">\r\n              No records found\r\n            </td>\r\n          </tr></ng-container>\r\n          <ng-container *ngIf="quotesList">\r\n          <tr class="mpn-row" style="display: table-row;" *ngFor="let approver of quotesList; let i=index;">\r\n            <td>\r\n              <input type="checkbox" [disabled]="isView || !getPartToDisableOrNot(approver)"\r\n                [(ngModel)]="approver.isSelected" (click)="onApprovalSelected(approver, i)" />\r\n            </td>\r\n            <ng-container *ngFor="let field of columns">\r\n              <td style="width:130px !important" *ngIf="field.field != \'internalSentDate\'\r\n                                      && field.field != \'internalApprovedDate\'\r\n                                      && field.field != \'customerSentDate\'\r\n                                      && field.field != \'customerApprovedDate\'\r\n                                      && field.field != \'customerApprovedBy\'\r\n                                      && field.field != \'internalStatusId\'\r\n                                      && field.field != \'customerStatusId\'\r\n                                      && field.field != \'internalMemo\'\r\n                                      && field.field != \'customerMemo\'\r\n                                      && field.field != \'discount\'\r\n                                      && field.field != \'markUpPercentage\'\r\n                                      && field.field != \'unitCostExtended\'\r\n                                      && field.field != \'discountAmount\'\r\n                                      && field.field != \'netSales\'\r\n                                      && field.field != \'unitCost\'\r\n                                      && field.field != \'unitCostExtended\'\r\n                                      && field.field != \'marginAmountExtended\'\r\n                                      && field.field != \'marginPercentage\'\r\n                                      && field.field != \'markupExtended\'\r\n                                      && field.field != \'qtyQuoted\'">\r\n\r\n                <span>{{approver[field.field]}}</span>\r\n                \x3c!-- {{approver[field.field]}} --\x3e\r\n              </td>\r\n              <td style="text-align: right; width: 130px !important;" *ngIf="field.field == \'discount\'\r\n                                      || field.field == \'markupExtended\'\r\n                                      || field.field == \'markUpPercentage\'\r\n                                      || field.field == \'unitCostExtended\'\r\n                                      || field.field == \'discountAmount\'\r\n                                      || field.field == \'netSales\'\r\n                                      || field.field == \'unitCost\'\r\n                                      || field.field == \'unitCostExtended\'\r\n                                      || field.field == \'marginAmountExtended\'\r\n                                      || field.field == \'marginPercentage\'">\r\n                <span>{{approver[field.field] | twoDecimalGlobalNumberFormatPipe}}</span>\r\n                \x3c!-- {{approver[field.field] | twoDecimalGlobalNumberFormatPipe}} --\x3e\r\n              </td>\r\n              <td *ngIf="field.field == \'qtyQuoted\'" style="text-align: right; width: 140px !important;">\r\n                <span>{{approver[field.field] | globalNmberFormat}}</span>\r\n                \x3c!-- {{approver[field.field] | globalNmberFormat}} --\x3e\r\n              </td>\r\n\r\n              <td *ngIf="field.field == \'internalSentDate\'">\r\n                <p-calendar [showIcon]="true" class="calender-cstm" name="openDate" #openDate="ngModel" required\r\n                  [(ngModel)]="approver[field.field]"\r\n                  [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                  [disabled]="getInternalSentDateEnableStatus(approver)"\r\n                  [minDate]="getInternalSentMinDate(approver.openDate)" appendTo="body">\r\n                </p-calendar>\r\n              </td>\r\n              <td *ngIf="field.field == \'internalStatusId\' && !getApprovalActionInternalStatus(approver)">\r\n                <label *ngIf="field.field != \'internalStatusId\'"\r\n                  [ngClass]="fields.includes(field.field)?\'text-align-right\':\'\'">{{approver[field.field]}}</label>\r\n                <select style="width:150px;" [(ngModel)]="approver.internalStatusId"\r\n                  [ngModelOptions]="{standalone: true}"\r\n                  [disabled]="getinternalStatusIdEnableStatus(approver)"\r\n                  *ngIf="field.field == \'internalStatusId\'">\r\n                  <option value=\'-1\'>--Select</option>\r\n                  <option *ngFor="let status of statusList" [ngValue]="status.statusId">\r\n                    {{status.name}}\r\n                  </option>\r\n                </select>\r\n              </td>\r\n              <td *ngIf="field.field == \'internalStatusId\' && getApprovalActionInternalStatus(approver)">\r\n                <label *ngIf="field.field != \'internalStatusId\'"\r\n                  [ngClass]="fields.includes(field.field)?\'text-align-right\':\'\'">{{approver[field.field]}}</label>\r\n                <select style="width:150px;" [(ngModel)]="approver.internalStatusId"\r\n                  [ngModelOptions]="{standalone: true}"\r\n                  [disabled]="getinternalStatusIdEnableStatus(approver)"\r\n                  *ngIf="field.field == \'internalStatusId\'">\r\n                  <option value=\'\' selected>--Select</option>\r\n                  <option *ngFor="let status of statusListForApproval" [ngValue]="status.statusId">\r\n                    {{status.name}}\r\n                  </option>\r\n                </select>\r\n              </td>\r\n              <td *ngIf="field.field == \'internalMemo\'" style="min-width: 100px;">\r\n                <p class="m-0 p-0 p_textEditor" style="float: left" [innerHTML]="approver[\'internalMemo\']"></p>\r\n                <div style="margin-top: 4px;float: right;" *ngIf="getApprovalActionInternalStatus(approver)">\r\n                  <i class="fa fa-info-circle fa-lg" data-toggle="modal" data-target="#memo-popup"\r\n                    matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddTextAreaInfo(\'internalMemo\',i)"></i>\r\n                </div>\r\n              </td>\r\n              <td *ngIf="field.field == \'internalApprovedDate\'">\r\n                <p-calendar [showIcon]="true" class="calender-cstm" name="internalApprovedDate"\r\n                  #internalApprovedDate="ngModel" required [(ngModel)]="approver[field.field]"\r\n                  [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                  [disabled]="getinternalStatusIdEnableStatus(approver)"\r\n                  [minDate]="getInternalSentMinDate(approver.openDate)" appendTo="body">\r\n                </p-calendar>\r\n\r\n              </td>\r\n\r\n              <td *ngIf="field.field == \'customerSentDate\'">\r\n                <p-calendar [showIcon]="true" class="calender-cstm" name="openDate" #openDate="ngModel" required\r\n                  [(ngModel)]="approver[field.field]"\r\n                  [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                  [disabled]="getcustomerSentDateEnableStatus(approver)"\r\n                  [minDate]="getInternalSentMinDate(approver.openDate)" appendTo="body">\r\n                </p-calendar>\r\n              </td>\r\n              <td *ngIf="field.field == \'customerStatusId\' && !getApprovalActionCustomerStatus(approver)">\r\n                <label *ngIf="field.field != \'customerStatusId\'">{{approver[field.field]}}</label>\r\n                <select style="width:150px;" [(ngModel)]="approver[\'customerStatusId\']"\r\n                  [ngModelOptions]="{standalone: true}"\r\n                  [disabled]="getcustomerStatusIdEnableStatus(approver)"\r\n                  *ngIf="field.field == \'customerStatusId\'">\r\n                  <option value=\'-1\'>--Select</option>\r\n                  <option *ngFor="let status of statusList" [ngValue]="status.statusId">\r\n                    {{status.name}}\r\n                  </option>\r\n                </select>\r\n              </td>\r\n              <td *ngIf="field.field == \'customerStatusId\' && getApprovalActionCustomerStatus(approver)">\r\n                <label *ngIf="field.field != \'customerStatusId\'">{{approver[field.field]}}</label>\r\n                <select style="width:150px;" [(ngModel)]="approver[\'customerStatusId\']"\r\n                  [ngModelOptions]="{standalone: true}"\r\n                  [disabled]="getcustomerStatusIdEnableStatus(approver)"\r\n                  *ngIf="field.field == \'customerStatusId\'">\r\n                  <option value=\'\' selected>--Select</option>\r\n                  <option *ngFor="let status of statusListForApproval" [ngValue]="status.statusId">\r\n                    {{status.name}}\r\n                  </option>\r\n                </select>\r\n              </td>\r\n              <td *ngIf="field.field == \'customerMemo\'" style="min-width: 100px;">\r\n                <p class="m-0 p-0 p_textEditor" style="float: left" [innerHTML]="approver[\'customerMemo\']"></p>\r\n                <div style="margin-top: 4px;float: right;" *ngIf="getApprovalActionCustomerStatus(approver)">\r\n                  <i class="fa fa-info-circle fa-lg" data-toggle="modal" data-target="#memo-popup"\r\n                    matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddTextAreaInfo(\'customerMemo\',i)"></i>\r\n                </div>\r\n              </td>\r\n              <td *ngIf="field.field == \'customerApprovedDate\'">\r\n                <p-calendar [showIcon]="true" class="calender-cstm" name="openDate" #openDate="ngModel" required\r\n                  [(ngModel)]="approver[field.field]"\r\n                  [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                  [disabled]="getcustomerStatusIdEnableStatus(approver)"\r\n                  [minDate]="getInternalSentMinDate(approver.openDate)" appendTo="body">\r\n                </p-calendar>\r\n              </td>\r\n              <td *ngIf="field.field == \'customerApprovedBy\'">\r\n                <label *ngIf="field.field != \'customerApprovedBy\'">{{approver[field.field]}}</label>\r\n                <select *ngIf="field.field == \'customerApprovedBy\'" [(ngModel)]="approver[\'customerApprovedById\']"\r\n                  style="width:150px;" [disabled]="getcustomerStatusIdEnableStatus(approver)">\r\n                  <option value="">Select</option>\r\n                  <option *ngFor="let cus of customerContactList" [value]="cus.contactId">{{cus.firstName}}</option>\r\n                </select>\r\n              </td>\r\n            </ng-container>\r\n          </tr>\r\n        </ng-container>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <button *ngIf="!isView" class="btn btn-primary pull-right" (click)="saveApprovalProcess()"\r\n      style="margin-top: 10px; margin-bottom: 10px;">Submit</button>\r\n  </div>\r\n</div>\r\n\r\n<div class="modal fade" id="memo-popup" role="dialog" data-backdrop="static" data-keyboard="false">\r\n  <div class="modal-dialog modal-lg" style="max-width: 400px !important;">\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n        <h4 class="modal-title">Edit {{"Memo"}}</h4>\r\n      </div>\r\n      <div class="modal-body">\r\n        <table class="table table-bordered table-fixed workflow-table-material">\r\n          <thead>\r\n            <th style="color: #fff;">{{"Memo"}}</th>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <p-editor [(ngModel)]="textAreaInfo" [style]="{\'height\':\'320px\'}" name="textAreaInfo" required>\r\n                </p-editor>\r\n\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div style="float:right">\r\n          <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n            style="padding: 6px 12px !important;margin-top: 10px;" (click)="onSaveTextAreaInfo(textAreaInfo)">\r\n            Save\r\n          </button>\r\n          <button type="button" class="btn btn-danger" style="padding: 6px 12px !important;margin-top: 10px;"\r\n            data-dismiss="modal">\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n  <div class="loading">\r\n    <div class="lds-roller">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n</div>'},E8By:function(e,t,r){"use strict";r.r(t),t.default=".p_textEditor {\n  margin: 0;\n  padding: 0;\n}\n\n.btn-edit {\n  position: relative;\n  top: 4px;\n}"},Eq2J:function(e,t,r){"use strict";r.r(t),t.default="button {\n  border-radius: 5px;\n}\n\np-table tr th {\n  text-align: left !important;\n}\n\nbutton:disabled {\n  opacity: 0.5;\n}\n\n.footer-t-rec {\n  margin-left: 65%;\n}\n\n.footer--count {\n  margin-right: 0px;\n}\n\n.zui-table {\n  border: none;\n  border-right: solid 1px #DDEFEF;\n  border-collapse: separate;\n  border-spacing: 0;\n  font: normal 13px Arial, sans-serif;\n}\n\n.zui-table tr th {\n  background-color: #DDEFEF;\n  border: none;\n  color: #336B6B;\n  width: 100px;\n  padding: 10px;\n  text-align: left;\n  text-shadow: 1px 1px 1px #fff;\n  white-space: nowrap;\n}\n\n.zui-table tr td {\n  border-bottom: solid 1px #DDEFEF;\n  width: 100px;\n  color: #333;\n  padding: 10px;\n  text-shadow: 1px 1px 1px #fff;\n  white-space: nowrap;\n}\n\n.zui-wrapper {\n  position: relative;\n}\n\n.zui-scroller {\n  overflow-y: hidden;\n  padding-bottom: 5px;\n  width: 1279px;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n}\n\n.zui-scroller-view {\n  overflow-y: hidden;\n  padding-bottom: 5px;\n  width: 1097px;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n}\n\n.zui-table .zui-sticky-col {\n  border-left: solid 1px #DDEFEF;\n  border-right: solid 1px #DDEFEF;\n  left: 0;\n  position: absolute;\n  top: auto;\n  width: 120px;\n}\n\n.ui-table-scrollable-body {\n  margin-right: 17px !important;\n}\n\n.ui-table-scrollable-body {\n  margin-right: 17px !important;\n}\n\n::-webkit-scrollbar {\n  width: 10px;\n}\n\n.ui-table-scrollable-header {\n  overflow-y: scroll;\n}\n\n.alternate-part-label {\n  color: #ff5663 !important;\n}\n\n.row-bg1 {\n  background-color: #ffe4e2 !important;\n}\n\n.sales-quote-part-search-data tr td:first-child {\n  background: #4298ff;\n  color: #fff;\n  position: -webkit-sticky;\n  position: sticky;\n  left: 0;\n}\n\n.sales-quote-part-search-data tr td:last-child {\n  background: #FFF;\n  position: -webkit-sticky;\n  position: sticky;\n  right: 0;\n  width: 80px !important;\n}\n\n.sales-quote-part-search-data tr th:first-child {\n  background: #4298ff;\n  color: #fff;\n  position: -webkit-sticky;\n  position: sticky;\n  left: 0;\n}\n\n.sales-quote-part-search-data tr th:last-child {\n  position: -webkit-sticky;\n  position: sticky;\n  right: 0;\n}"},ErrZ:function(e,t,r){"use strict";r.r(t),t.default='<div class="row">\r\n  <div class="col-md-12 col-sm-12 col-12">\r\n    <div class="col-2 column">\r\n      <div class="form-group">\r\n        <label>Customer Name</label>\r\n        <input type="text" class="form-control" name="customerName" [ngModel]="salesQuote.customerName"\r\n          disabled="true" />\r\n      </div>\r\n    </div>\r\n    <div class="col-3 column">\r\n      <div class="form-group">\r\n        <label>Customer Code</label>\r\n        <input type="text" class="form-control" name="customerCode" [ngModel]="salesQuote.customerCode"\r\n          disabled="true" />\r\n      </div>\r\n    </div>\r\n    \x3c!-- <div class="col-2 column">\r\n      <div class="form-group">\r\n        <label>Cust Request Date</label>\r\n        <p-calendar name="customerRequestDate" [(ngModel)]="salesQuote.customerRequestDate" disabled="true" >\r\n        </p-calendar>\r\n      </div>\r\n    </div>\r\n\r\n   \r\n\r\n    <div class="col-2 column">\r\n      <div class="form-group">\r\n        <label>Promised Date</label>\r\n        <input type="text" class="form-control" name="promisedDate" [ngModel]="salesQuote.customerPromisedDate| date:\'M/d/y\'" disabled="true" />\r\n      </div>\r\n    </div> --\x3e\r\n    \x3c!--\r\n <div class="col-2 column">\r\n      <div class="form-group">\r\n        <label>Warnings</label>\r\n        <input type="text" class="form-control" name="notes" [ngModel]="salesQuote.notes" disabled="true" />\r\n      </div>\r\n    </div>\r\n    --\x3e\r\n\r\n    <div class="col-2 column">\r\n      <div class="form-group">\r\n        <label> Memo</label>\r\n        \x3c!-- <input type="text" class="form-control" name="memo" [ngModel]="salesQuote.memo"\r\n         disabled="true" /> --\x3e\r\n\r\n        <div [innerHTML]="salesQuote.memo" class="form-control" style="width:100%;" class="text_editor_box"></div>\r\n      </div>\r\n    </div>\r\n    <div class="col-5 column" style="padding: 18px 0px 10px; padding-left:12px">\r\n      <div class="form-group">\r\n        <label></label>\r\n        <div class="col-md-3">\r\n          <label>\r\n            <input type="checkbox" [(ngModel)]="salesQuote.restrictPMA" name="restrictPMA" id="restrictPMA"\r\n              [disabled]="true" />\r\n            Restrict PMA\r\n          </label>\r\n        </div>\r\n        <div class="col-md-6">\r\n          <label>\r\n            <input type="checkbox" [(ngModel)]="salesQuote.restrictDER" name="restrictDER" id="restrictDER"\r\n              [disabled]="true" />\r\n            Restrict DER\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>'},Esq9:function(e,t,r){"use strict";r.r(t),t.default="<router-outlet></router-outlet>\r\n"},FeMR:function(e,t,r){"use strict";r.r(t),t.default='\ufeff<div class="card">\r\n    <div class="card-body" style="padding: 1px 5px;">\r\n        <div class="x_content">\r\n            <div>\r\n\r\n\r\n                <div [ngClass]="!viewMode ? \'card\' : \'\'" class="card new-card" style="padding: 10px;">\r\n                    <div *ngIf="!viewMode" class="card-header bg-primary new-card-header">\r\n                        <div class="row">\r\n                            <div class="col">\r\n                              <h4 class="new-card-heading">  Documents List</h4>\r\n                            </div>\r\n                            <div>\r\n                                <a href="#" data-toggle="modal"                                 \r\n                                    data-target="#addDocumentDetails">\r\n                                    <button type="button" class="btn-sm new-btn-primary"\r\n                                    (click)="resetCreateForm()" \r\n                                    matTooltip="Create Document Details "\r\n                                        matTooltipPosition="above">\r\n                                    Add Documents</button>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class="clear"></div>\r\n                      <hr />        \r\n                      <div class="card-body new-card-body">\r\n                        <p-table #documents class="rpo-table-cstm" [value]="documentsDestructuredData"\r\n                            [metaKeySelection]="true" [rows]="10" [paginator]="true" [pageLinks]="3"\r\n                            [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" selectionMode="multiple"\r\n                            [resizableColumns]="true" [reorderableColumns]="true" (onPage)="pageIndexChange($event)"\r\n                            [loading]="loaderForDocuments">\r\n                            <ng-template *ngIf="!viewMode" pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [options]="salesQuoteDocumentsColumns" [(ngModel)]="selectedColumns"\r\n                                        [ngModelOptions]="{standalone: true}" optionLabel="header"\r\n                                        selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}"\r\n                                        defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n\r\n                                    </div>\r\n                                    <div class="col">\r\n                                      <div\r\n                                        style="width: auto !important; float: right;"\r\n                                        class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                                      >\r\n                                        <i class="fa fa-search"></i>\r\n                                        <input type="text" pInputText size="50"\r\n                                            class="form-control"\r\n                                            (input)="documents.filterGlobal($event.target.value, \'contains\')"\r\n                                            placeholder=" Filter" style="height: 28px !important;">\r\n                                        </div>\r\n                                    </div>\r\n                                  </div>\r\n                                  <div class="row">\r\n                                    <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"\r\n                                        matTooltipPosition="above" pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Data" (click)="documents.exportCSV()"\r\n                                        style="padding: 5px 10px !important;"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"\r\n                                        matTooltipPosition="above" pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Selection Only"\r\n                                        (click)="documents.exportCSV({selectionOnly:true})"\r\n                                        style="padding: 5px 10px !important;"></button>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n\r\n                                <tr>\r\n                                    <ng-container *ngFor="let col of columns">\r\n                                        <th *ngIf="col.field !== \'fileName\'" pResizableColumn pReorderableColumn\r\n                                            [pSortableColumn]="col.field">\r\n                                            {{col.header}}\r\n                                            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                        </th>\r\n                                        <th *ngIf="col.field == \'fileName\'">\r\n                                            File Name\r\n\r\n                                    </ng-container>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n\r\n                                <tr>\r\n                                    \x3c!-- <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="documents.filter($event.target.value, col.field, \'contains\')">\r\n                                    </th> --\x3e\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input type="text"\r\n                                            *ngIf="col.field != \'fileCreatedDate\' && col.field != \'fileUpdatedDate\'"\r\n                                            style="width:100%;" pInputText\r\n                                            (input)="documents.filter($event.target.value, col.field, \'contains\')">\r\n                                        <input type="date" class="hidePlaceHolder"\r\n                                            *ngIf="col.field == \'fileCreatedDate\'" name="fileCreatedDate"\r\n                                            style="width:100%;"\r\n                                            (change)="dateFilterForTable($event.target.value, col.field )">\r\n                                        <input type="date" class="hidePlaceHolder"\r\n                                            *ngIf="col.field == \'fileUpdatedDate\'" name="fileUpdatedDate"\r\n                                            style="width:100%;"\r\n                                            (change)="dateFilterForTable($event.target.value, col.field )">\r\n                                    </th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                                <tr [pSelectableRow]="rowData" [pSelectableRowDblClick]="rowData" pReorderableRowHandle\r\n                                    (dblclick)="openViewOnDblClick(rowData)">\r\n                                    <ng-container *ngFor="let col of columns">\r\n                                        <td *ngIf="col.field !== \'fileName\' && col.field != \'docMemo\'" class="ui-resizable-column"\r\n                                            pReorderableRowHandle>\r\n                                            {{col.field == \'fileCreatedDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'fileUpdatedDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                        </td>\r\n                                        <td *ngIf="col.field == \'docMemo\'">\r\n                                            <p class="m-0 p-0 p_textEditor" style="float: left"\r\n                                             [innerHTML]="rowData[col.field]"></p>\r\n                                        </td>\r\n                                        <td *ngIf="col.field == \'fileName\'">\r\n                                            <a class="filelink" (click)="downloadFileUpload(rowData)">\r\n                                                {{ rowData[col.field] }}\r\n                                            </a>\r\n                                        </td>\r\n                                    </ng-container>\r\n\r\n\r\n                                    \x3c!-- <td *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{col.field == \'createdDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td> --\x3e\r\n                                    <td class="text-center" *ngIf="viewMode">\r\n                                        <span data-toggle="modal" data-target="#docView">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                                (click)="openView(rowData)" matTooltip="View"\r\n                                                matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                    </td>\r\n                                    <td class="text-center" *ngIf="!viewMode">\r\n                                        <span data-toggle="modal" data-target="#docView">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                                (click)="openView(rowData)" matTooltip="View"\r\n                                                matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n\r\n\r\n                                        <span>\r\n                                            <a class="btn nobg btn-edit-cstm" data-target="#addDocumentDetails"\r\n                                                data-toggle="modal" (click)="editVendorDocument(rowData,$event)"\r\n                                                matTooltip="Edit" matTooltipPosition="above">\r\n                                                <i class="fa fa-pencil"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n                                        \x3c!-- <button *ngIf="!viewMode" class="btn-edit" mat-icon-button\r\n                                            (click)="editVendorDocument(rowData,$event)" matTooltip="edit"\r\n                                             matTooltipPosition="above"\r\n                                            data-toggle="modal" data-target="#addDocumentDetails">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span>\r\n                                            <a class="btn nobg btn-delete-cstm"\r\n                                                (click)=" openDelete(deleteContent, rowData);documents.reset();"\r\n                                                matTooltip="Delete" matTooltipPosition="above"><i\r\n                                                    class="fa fa-trash"></i></a>\r\n                                        </span>\r\n\r\n\r\n\r\n                                        \x3c!-- <button *ngIf="!viewMode" class="btn-delete" mat-icon-button\r\n                                            matTooltip="Delete" matTooltipPosition="above"\r\n                                            (click)=" openDelete(deleteContent, rowData);documents.reset();">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-toggle="modal">\r\n                                            <a class="btn nobg btn-hist-cstm"\r\n                                                (click)="openHistory(contentAuditHist, rowData)" matTooltip="History"\r\n                                                matTooltipPosition="above">\r\n                                                <i class="fa fa-history"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="history"\r\n                                        matTooltipPosition="above"\r\n                                            (click)="openHistory(contentAuditHist, rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            \x3c!-- <ng-template pTemplate="emptymessage" let-columns\r\n                                *ngIf="documentsDestructuredData.length == 0">\r\n                                <tr>\r\n                                    <td [attr.colspan]="10" *ngIf="isViewMode == false"\r\n                                        style="color: red; font-weight: bold; text-align: center">\r\n                                        No records found\r\n                                    </td>\r\n                                    <td [attr.colspan]="10" *ngIf="isViewMode == true"\r\n                                        style="color: red; font-weight: bold; text-align: center">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template> --\x3e\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="documents._totalRecords" [disabled]="true"\r\n                                    pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(documents._totalRecords,pageSize)"\r\n                                    [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n\r\n                        </p-table>\r\n                    </div>\r\n\r\n                    <div *ngIf="!viewMode">\r\n                        <button type="button" class="btn btn-primary pull-right submit-btn" (click)="CreateNewClick()">\r\n                            Create New\r\n                        </button>\r\n                        <button type="button" class="btn btn-primary pull-right submit-btn" (click)="backClick()">\r\n                            Previous\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #deleteContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="deleteItemAndCloseModel()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n</ng-template>\r\n<ng-template #contentAuditHist let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n\r\n        <h4 class="modal-title">History of Documents</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n\r\n\r\n    </div>\r\n    <div class="modal-body">\r\n\r\n        <div class="table-responsive">\r\n            <table class="table table-bordered">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Document Name</th>\r\n\r\n                        <th>Description</th>\r\n                        <th>Memo</th>\r\n                        <th>File Name</th>\r\n                        <th>Updated By</th>\r\n                        <th>Last Updated Time</th>\r\n                        <th>Created By</th>\r\n                        <th>Created Time</th>\r\n\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor="let audit of documentauditHisory">\r\n                    <tr *ngFor="let audit of documentauditHisory; let i = index;">\r\n                        <td\r\n                            [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'docName\', audit.docName)  ? \'black\' : \'red\'  }">\r\n                            {{audit.docName}}\r\n                        </td>\r\n                        <td\r\n                            [ngStyle]="{\'color\': getColorCodeForHistory(i, \'docDescription\', audit.docDescription)  ? \'black\' : \'red\'  }">\r\n                            {{audit.docDescription}}\r\n                        </td>\r\n                        <td\r\n                            [ngStyle]="{\'color\': getColorCodeForHistory(i, \'docMemo\', audit.docMemo)  ? \'black\' : \'red\'  }">\r\n                            {{audit.docMemo}}\r\n                        </td>\r\n                        <td\r\n                            [ngStyle]="{\'color\': getColorCodeForHistory(i, \'fileName\', audit.fileName)  ? \'black\' : \'red\'  }">\r\n                            {{audit.fileName}}\r\n                        </td>\r\n\r\n                        <td>{{audit.updatedBy}}</td>\r\n                        <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                        <td>{{audit.createdBy}}</td>\r\n                        <td>{{audit.createdDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                    </tr>\r\n                </tbody>\r\n\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n    </div>\r\n</ng-template>\r\n<div id="docView" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Document Details</h4>\r\n            </div>\r\n            <div class="modal-body" *ngIf="sourceViewforDocument">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label"><b>Name<span class="clr-red">*</span> : </b></span><span\r\n                            class="value">{{sourceViewforDocument.docName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><b>Description<span class="clr-red">*</span> : </b></span><span\r\n                            class="value">{{sourceViewforDocument.docDescription}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label"><b>Memo : </b></span>\r\n                        \x3c!-- <span class="value">{{sourceViewforDocument.docMemo}}</span> --\x3e\r\n                        <span class="value">\r\n                            <p class="p-0 m-0 p_textEditor" [innerHTML]="sourceViewforDocument.docMemo">\r\n                            </p></span>\r\n                    </p>\r\n\r\n                    <div class="mt-3">\r\n                        <h4 class="panel-title">Attachment Details:</h4>\r\n                        <p-table #dt class="table-responsive ptable-cus-pma"\r\n                            [paginator]="sourceViewforDocumentList.length > 0" [value]="sourceViewforDocumentList"\r\n                            [rows]="3" [columns]="sourceViewforDocumentListColumns">\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th *ngFor="let col of columns">\r\n                                        {{col.header}}\r\n                                    </th>\r\n                                    <th>\r\n                                        Download\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                            (input)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                                    </th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-part let-rowData let-columns="columns" let-i="rowIndex">\r\n                                <tr>\r\n                                    <td *ngFor="let col of columns">\r\n                                        <ng-container *ngIf="col.field==\'fileName\'">\r\n                                            {{part[col.field]}}\r\n                                        </ng-container>\r\n\r\n                                    </td>\r\n                                    <td>\r\n                                        <a (click)="downloadFileUpload(part)" matTooltip="Download"\r\n                                            matTooltipPosition="above" class="btn nobg btn-cstm"><span><i\r\n                                                    class="fa fa-download"></i></span></a>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                                *ngIf="sourceViewforDocumentList.length == 0">\r\n                                <tr>\r\n                                    <td [attr.colspan]="2" style="color: red; font-weight: bold; text-align: center">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                        </p-table>\r\n\r\n\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="addDocumentDetails" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Add Document Details</h4>\r\n            </div>\r\n            <form #addDocumentForm="ngForm" class="form-horizontal">\r\n                <div class="modal-body">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n\r\n                            \x3c!--<input class="form-control" type="hidden" name="vendorDocumentDetailId" [(ngModel)]="documentInformation.vendorDocumentDetailId" required>--\x3e\r\n                            <div class="form-group">\r\n                                <label>Name <span class="clr-red">*</span></label>\r\n                                <input class="form-control" type="text" name="name" (ngModelChange)="enableSave()"\r\n                                    [(ngModel)]="documentInformation.docName" required>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Description <span class="clr-red">*</span></label>\r\n                                <textarea class="form-control" name="description" (ngModelChange)="enableSave()"\r\n                                    [(ngModel)]="documentInformation.docDescription" required></textarea>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                \x3c!-- <label>Memo </label> --\x3e\r\n                                \x3c!-- <textarea class="form-control" name="memo" (ngModelChange)="enableSave()"\r\n                                    [(ngModel)]="documentInformation.docMemo"></textarea> --\x3e\r\n                                    <span class="label">Memo </span>\r\n                                    <div class="col-sm-11">\r\n                                      <span>                    \r\n                                        <div class="form-group memo-popup-cstm mat_emo">\r\n                                          <div\r\n                                          (ngModelChange)="enableSave()"\r\n                                            [innerHTML]=" documentInformation.docMemo.trim()"\r\n                                            [matTooltip]="parsedText(documentInformation.docMemo)"\r\n                                            matTooltipPosition="above"\r\n                                            class="form-control"\r\n                                            style="width: 109%;line-height:1.5"\r\n                                            class="text_editor_box"\r\n                                          ></div>\r\n                                        </div>\r\n                                      </span>\r\n                                    </div>\r\n                                    <div class="col-sm-1">\r\n                                      <span style="margin-left:10px">\r\n                                        <a\r\n                                        class="btn nobg"\r\n                                        data-toggle="modal"\r\n                                        (ngModelChange)="enableSave()"\r\n                                        data-target="#memo-popup-Doc"\r\n                                        (click)="onClickMemo()"\r\n                                        matTooltip="Add Memo"\r\n                                        matTooltipPosition="above"><i class="fa fa-pencil"></i>\r\n                                        </a>\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                        <div class="col-md-12">\r\n                            <div class="form-group">\r\n                                <label style="float: none;">Attachments <span class="clr-red">*</span></label>\r\n                                <p-fileUpload #fileUpload name="fileupload[]" multiple="multiple" ngf-keep="distinct"\r\n                                    [showCancelButton]="false" [showUploadButton]="false" customUpload="true"\r\n                                    (onSelect)="fileUploadForDocuments($event)" (onRemove)="removeFile($event)"\r\n                                    (ngModelChange)="enableSave()">\r\n                                </p-fileUpload>\r\n                            </div>\r\n                        </div>\r\n                        \x3c!-- <div class="table-responsive table-overflow">\r\n                            <h4 class="panel-title" style="padding-left: 10px;">Attachment Details:</h4>\r\n                            <table class="table table-bordered ">\r\n                                <tr>\r\n                                    <th>File Name</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                                <tr *ngFor="let f of sourceViewforDocumentList ">\r\n                                    <td>{{f.fileName}}</td>\r\n                                    <td><a class="btn nobg btn-cstm" (click)="downloadFileUpload(f)"> <span><i class="fa fa-download"></i></span> </a>  </td>\r\n\r\n                                </tr>\r\n\r\n                            </table>\r\n                        </div> --\x3e\r\n\r\n                        <div class="table-responsive table-overflow" *ngIf="sourceViewforDocumentList.length > 0">\r\n                            <h4 class="panel-title" style="padding-left: 10px;">Attachment Details:</h4>\r\n                            <p-table class="table-responsive ptable-cus-pma"\r\n                                [paginator]="sourceViewforDocumentList.length > 0" [value]="sourceViewforDocumentList"\r\n                                [rows]="3" [columns]="sourceViewforDocumentListColumns">\r\n                                <ng-template pTemplate="header" let-columns>\r\n                                    <tr>\r\n                                        <th *ngFor="let col of columns">\r\n                                            {{col.header}}\r\n                                        </th>\r\n                                        <th>\r\n                                            Download\r\n                                        </th>\r\n                                    </tr>\r\n                                </ng-template>\r\n                                <ng-template pTemplate="body" let-part let-rowData let-columns="columns"\r\n                                    let-i="rowIndex">\r\n                                    <tr>\r\n                                        <td *ngFor="let col of columns">\r\n                                            <ng-container *ngIf="col.field==\'fileName\'">\r\n                                                {{part[col.field]}}\r\n                                            </ng-container>\r\n\r\n                                        </td>\r\n                                        <td>\r\n                                            <a (click)="downloadFileUpload(part)" matTooltip="Download"\r\n                                                matTooltipPosition="above" class="btn nobg btn-cstm">\r\n                                                <span>\r\n                                                    <i class="fa fa-download"></i>\r\n                                                </span>\r\n                                            </a>\r\n                                        </td>\r\n                                    </tr>\r\n                                </ng-template>\r\n                                <ng-template pTemplate="emptymessage" let-columns\r\n                                    *ngIf="sourceViewforDocumentList.length == 0">\r\n                                    <tr>\r\n                                        <td [attr.colspan]="2"\r\n                                            style="color: red; font-weight: bold; text-align: center">\r\n                                            No records found\r\n                                        </td>\r\n                                    </tr>\r\n                                </ng-template>\r\n                            </p-table>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" *ngIf="!isEditButton" class="btn btn-primary pull-right submit-btn"\r\n                        style="text-align:center" data-dismiss="modal" (click)="saveDocumentInformation()"\r\n                        [disabled]="!addDocumentForm.valid || disableSave">\r\n                        Save\r\n                    </button>\r\n                    <button type="button" *ngIf="isEditButton" class="btn btn-primary pull-right submit-btn"\r\n                        style="text-align:center" (click)="saveDocumentInformation()" data-dismiss="modal"\r\n                        [disabled]="!addDocumentForm.valid || disableSave">\r\n                        Update\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="modal fade" id="memo-popup-Doc" style="z-index: 15000 !important;"  role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-sm">\r\n          <div class="modal-content">\r\n            <div class="modal-header">\r\n              <button type="button" class="close">\r\n                &times;\r\n              </button>\r\n              <h4 class="modal-title">Edit Memo</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n              <table class="table table-bordered table-fixed workflow-table-material">\r\n                <thead>\r\n                  <th style="color: #fff;">Memo</th>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td style="white-space: inherit">\r\n                      <p-editor\r\n                       spellcheck="true"\r\n                       (ngModelChange)="enableSave()"\r\n                        [(ngModel)]="memoPopupContent"\r\n                        [style]="{ height: \'320px\' }"\r\n                        name="memoPopupContent"\r\n                        required\r\n                      ></p-editor>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n              <div style="float: right;">\r\n                <button\r\n                  type="button"\r\n                  class="btn btn-primary"\r\n                  style="padding: 6px 12px !important; margin-top: 10px;"\r\n                  (click)="onClickPopupSave()" [disabled]="disableSave">\r\n                  Save\r\n                </button>\r\n                <button\r\n                  type="button"\r\n                  class="btn btn-danger"\r\n                  style="padding: 6px 12px !important; margin-top: 10px;"\r\n                  (click)="closeMemoModel()" >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},Fy9i:function(e,t,r){"use strict";r.r(t),t.default='<div class="modal-header">\r\n    <h4 class="modal-title" id="modal-basic-title"></h4>\r\n    <button type="button" class="close" data-dismiss="modal" (click)="close()">&times;</button>\r\n\r\n</div>\r\n<div class="modal-content" style="width:90%">\r\n    <div class="modal-body">\r\n        <div class="col-sm-12">\r\n\r\n            <h5 style="text-align: center;"><b>Sales Order Pick Ticket</b></h5>\r\n            <div class="clear"></div>\r\n            <hr />\r\n            <div class="second-block">\r\n                <div class="second-block-div">\r\n                    <label class="col-sm-2 second-block-label"><b><img src="{{this.management.logo}}" /></b>PAS</label>\r\n                </div>\r\n                <div class="second-block-div">\r\n                    <label class="col-sm-3 second-block-label"><b>Tagline :</b></label>\r\n                    <label class="col-sm-4 second-block-label" style="width:30%" disabled>{{this.management.companyName}}</label>\r\n                </div>\r\n                <div class="second-block-div">\r\n                    <label class="col-sm-3 second-block-label"><b>Address-1 :</b></label>\r\n                    <label class="col-sm-4 second-block-label" style="width:30%" disabled>{{this.management.address1}}</label>\r\n\r\n                </div>\r\n                <div class="second-block-div">\r\n                    <label class="col-sm-3 second-block-label"><b>Address-2 :</b></label>\r\n                    <label class="col-sm-4 second-block-label" style="width:30%" disabled>{{this.management.address2}}</label>\r\n\r\n                </div>\r\n                <div class="second-block-div">\r\n                    <label class="col-sm-3 second-block-label"><b>City :</b></label>\r\n                    <label class="col-sm-4 second-block-label" style="width:30%" disabled>{{this.management.city}}</label>\r\n\r\n                </div>\r\n                <div class="second-block-div">\r\n                    <label class="col-sm-3 second-block-label"><b>State :</b></label>\r\n                    <label class="col-sm-4 second-block-label" style="width:30%" disabled>{{this.management.stateOrProvince}}</label>\r\n\r\n                </div>\r\n                <div class="second-block-div">\r\n                    <label class="col-sm-3 second-block-label"><b>PostalCode :</b></label>\r\n                    <label class="col-sm-4 second-block-label" style="width:30%" disabled>{{this.management.postalCode}}</label>\r\n\r\n                </div>\r\n                <div class="second-block-div">\r\n                    <label class="col-sm-3 second-block-label"><b>Country :</b></label>\r\n                    <label class="col-sm-4 second-block-label" style="width:30%" disabled>{{this.management.country}}</label>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div class="second-block">\r\n                \x3c!-- <h5><b>Sales Order Quotation</b></h5> --\x3e\r\n                <div class="second-block-div">\r\n                    <label class="col-sm-4 second-block-label"><b>Pick Ticket Num</b></label>\r\n                    <label class="col-sm-4 second-block-label" style="width:30%" disabled>{{this.salesOrder.soPickTicketNumber}}</label>\r\n                    <img src="{{this.salesOrder.soPickTicketBarcode}}" alt="barcode" class="border" Placeholder="Barcode" style="width:30%" />\r\n                </div>\r\n                <div class="second-block-div">\r\n                    <label class="col-sm-4 second-block-label"><b>Date & Time</b></label>\r\n                    <label class="col-sm-6 second-block-label" disabled>{{todayDate| date:\'medium\' }}</label>\r\n\r\n                </div>\r\n                <div class="second-block-div">\r\n                    <label class="col-sm-4 second-block-label"><b>Page</b></label>\r\n                    <label class="col-sm-4 second-block-label" style="width:30%" disabled>1 of 1</label>\r\n\r\n                </div>\r\n\r\n                <div class="clear"></div>\r\n                <br />\r\n\r\n                <div class="second-block-div">\r\n\r\n                    <label class="col-sm-4 second-block-label"><b>SO Num</b></label>\r\n                    <label class="col-sm-4 second-block-label" style="width:60%" disabled>{{this.salesOrder.salesOrderNumber}}</label>\r\n\r\n                </div>\r\n                <div class="second-block-div">\r\n                    <label class="col-sm-4 second-block-label"><b>Ship Via</b></label>\r\n                    <label class="col-sm-4 second-block-label" style="width:60%" disabled>{{this.salesOrder.shipViaName}}</label>\r\n\r\n                </div>\r\n\r\n                <div class="clear"></div>\r\n                <br />\r\n\r\n                <div class="second-block-div">\r\n                    <label class="col-sm-4 second-block-label">Num of Items</label>\r\n                    <label class="col-sm-4 second-block-label" style="width:60%" disabled>{{this.salesOrder.numberOfItems}} </label>\r\n\r\n                </div>\r\n                <div class="second-block-div">\r\n                    <label class="col-sm-4 second-block-label">Num of Pieces</label>\r\n                    <label class="col-sm-4 second-block-label" style="width:60%" disabled>{{this.salesOrder.shipViaName}} </label>\r\n                </div>\r\n            </div>\r\n            <div class="col-sm-12">\r\n                <div class="first-block col-sm-6">\r\n                    <br /><br />\r\n                    <h5 style="padding-left:10px"> <b>Sold To</b> </h5>\r\n                    <div class="col-sm-12 first-block-4">\r\n                        <div class="second-block-div">\r\n                            <label class="col-sm-5 second-block-label"><b>Name :</b></label>\r\n                            <label class="col-sm-6 second-block-label" style="width:30%" disabled> {{this.salesOrder.customerName}}</label>\r\n                        </div>\r\n                        <div class="second-block-div">\r\n                            <label class="col-sm-5 second-block-label"><b>Address 1 :</b></label>\r\n                            <label class="col-sm-6 second-block-label" style="width:30%" disabled> {{this.salesOrder.custToAddress1}}</label>\r\n                        </div>\r\n                        <div class="second-block-div">\r\n                            <label class="col-sm-5 second-block-label"><b>Address 2 :</b></label>\r\n                            <label class="col-sm-6 second-block-label" style="width:30%" disabled> {{this.salesOrder.custToAddress2}}</label>\r\n                        </div>\r\n                        <div class="second-block-div">\r\n                            <label class="col-sm-5 second-block-label"><b>City :</b></label>\r\n                            <label class="col-sm-6 second-block-label" style="width:30%" disabled> {{this.salesOrder.custToCity}}</label>\r\n                        </div>\r\n                        <div class="second-block-div">\r\n                            <label class="col-sm-5 second-block-label"><b>State :</b></label>\r\n                            <label class="col-sm-6 second-block-label" style="width:30%" disabled> {{this.salesOrder.custToState}}</label>\r\n                        </div>\r\n                        <div class="second-block-div">\r\n                            <label class="col-sm-5 second-block-label"><b>Postal Code :</b></label>\r\n                            <label class="col-sm-6 second-block-label" style="width:30%" disabled> {{this.salesOrder.custToPostalCode}}</label>\r\n                        </div>\r\n                        <div class="second-block-div">\r\n                            <label class="col-sm-5 second-block-label"><b>Country :</b></label>\r\n                            <label class="col-sm-6 second-block-label" style="width:30%" disabled> {{this.salesOrder.custToCountry}}</label>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="first-block-right col-sm-6">\r\n                    <br /><br />\r\n                    <h5 style="padding-left:10px"> <b>Ship To</b> </h5>\r\n                    <div class="col-sm-12 first-block-4">\r\n                        <div class="second-block-div">\r\n                            <label class="col-sm-5 second-block-label"><b>Name :</b></label>\r\n                            <label class="col-sm-6 second-block-label" style="width:30%" disabled> {{this.salesOrder.shipToContactName}}</label>\r\n                        </div>\r\n                        <div class="second-block-div">\r\n                            <label class="col-sm-5 second-block-label"><b>Address 1 :</b></label>\r\n                            <label class="col-sm-6 second-block-label" style="width:30%" disabled> {{this.salesOrder.shipToAddress1}}</label>\r\n                        </div>\r\n                        <div class="second-block-div">\r\n                            <label class="col-sm-5 second-block-label"><b>Address 2 :</b></label>\r\n                            <label class="col-sm-6 second-block-label" style="width:30%" disabled> {{this.salesOrder.shipToAddress2}}</label>\r\n                        </div>\r\n                        <div class="second-block-div">\r\n                            <label class="col-sm-5 second-block-label"><b>City :</b></label>\r\n                            <label class="col-sm-6 second-block-label" style="width:30%" disabled> {{this.salesOrder.shipToCity}}</label>\r\n                        </div>\r\n                        <div class="second-block-div">\r\n                            <label class="col-sm-5 second-block-label"><b>State :</b></label>\r\n                            <label class="col-sm-6 second-block-label" style="width:30%" disabled> {{this.salesOrder.shipToState}}</label>\r\n                        </div>\r\n                        <div class="second-block-div">\r\n                            <label class="col-sm-5 second-block-label"><b>Postal Code :</b></label>\r\n                            <label class="col-sm-6 second-block-label" style="width:30%" disabled> {{this.salesOrder.shipToPostalCode}}</label>\r\n                        </div>\r\n                        <div class="second-block-div">\r\n                            <label class="col-sm-5 second-block-label"><b>Country :</b></label>\r\n                            <label class="col-sm-6 second-block-label" style="width:30%" disabled> {{this.salesOrder.shipToCountry}}</label>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n             <div class="col-sm-12">\r\n            <div>\r\n                <table style="width:99%">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Line Num</th>\r\n                            <th>PN</th>\r\n                            <th>PN Description</th>\r\n                            <th>Serial Num</th>\r\n                            <th>UOM</th>\r\n                            <th>Cond</th>\r\n                            <th>Priority</th>\r\n                            <th>PO Num</th>\r\n                            <th>Qty Ordered</th>\r\n                            <th>Qty to Ship</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <ng-container *ngFor="let part of this.parts let i=index">\r\n                            <tr class="border1">\r\n\r\n                                <td>{{i+1}}</td>\r\n                                <td>{{part.partNumber}}</td>\r\n                                <td>{{part.partDescription}}</td>\r\n                                <td>{{part.serialNumber}}</td>\r\n                                <td>{{part.uom}}</td>\r\n                                <td>{{this.salesOrderpartConditionDescription}}</td>\r\n                                <td>{{part.priorityName}}</td>\r\n                                <td>{{part.poNumber}}</td>\r\n                                <td>{{part.qty}}</td>\r\n                                <td>{{part.qtyShipped}}</td>\r\n                            </tr>\r\n                            <ng-container *ngIf="part">\r\n                                <tr class="border2">\r\n                                    <td colspan="2"><b>Site:</b>{{part.siteName}}</td>\r\n                                    <td colspan="2"> <b>Warehouse:</b>{{part.warehouseName}}</td>\r\n                                    <td colspan="3"><b>Location:</b>{{part.locationName}}</td>\r\n                                    <td colspan="1"><b>Shelf:</b>{{part.shelfName}}</td>\r\n                                    <td colspan="1"><b>Bin:</b>{{part.binName}}</td>\r\n\r\n\r\n                                </tr>\r\n\r\n                                <tr class="border3" *ngIf="part">\r\n                                    <td colspan="3">\r\n                                        <img src="{{part.partBarcode}}" alt="barcode" class="border" />\r\n                                    </td>\r\n\r\n                                    <td colspan="1"><b>SL Num:</b> {{part.stockLineId}}</td>\r\n                                    <td colspan="3"><b>Control Id:</b>{{part.controlNumber}}</td>\r\n                                    <td colspan="4"><b>ID #:</b>{{part.idNumber}}</td>\r\n\r\n\r\n                                </tr>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="modal-footer">\r\n    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="close()">No</button>\r\n</div>'},HuCJ:function(e,t,r){"use strict";r.r(t),t.default='<div class="card new-card">\r\n  <div class="card-body new-card-body">\r\n    <p-table #dt [value]="sales"\r\n     class="rpo-table-cstm sales-analysis-header" [first]="0" [rows]="pageSize" [paginator]="showPaginator"\r\n      [pageLinks]="3" [rowsPerPageOptions]="[10, 20, 50, 100]" [columns]="selectedColumns" selectionMode="multiple"\r\n      [metaKeySelection]="true" [(selection)]="selectedColumn" [lazy]="true" (onLazyLoad)="loadData($event)"\r\n      [totalRecords]="totalRecords" [scrollable]="true" [style]="{ width: \'100%\' }">\r\n      <ng-template pTemplate="caption">\r\n        \x3c!-- <div class="row"> --\x3e\r\n          \x3c!-- <div class="col">\r\n            <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns" optionLabel="header"\r\n              selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns"\r\n              style="float:left"></p-multiSelect>\r\n          </div> --\x3e\r\n          \x3c!-- <div class="col"> --\x3e\r\n            \x3c!-- <div style="width: auto !important; float: right;"\r\n              class="inner-addon right-addon w50 inline-block g-filter-search-cstm">\r\n              <i class="fa fa-search"></i>\r\n              <input type="text" pInputText size="50" class="form-control" (input)="globalSearch($event.target.value)"\r\n                placeholder="Filter">\r\n            </div> --\x3e\r\n          \x3c!-- </div>\r\n        </div> --\x3e\r\n        <div class="row">\r\n          <div style="margin-left: 12px;">\r\n            <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns" optionLabel="header"\r\n              selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns"\r\n              style="float:left"></p-multiSelect>\r\n          </div>\r\n          <div class="col">\r\n            <div\r\n              style="width: auto !important; float: right;"\r\n              class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n            >              </div>\r\n          </div>\r\n         \r\n        </div>          \r\n          <div class="row">\r\n            <div class="col">             \r\n                <button type="button"\r\n                 class="btn btn-primary new-table-button" matTooltip="Download Data"\r\n                  matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Data"\r\n                  (click)="dt.exportCSV()"></button>\r\n                <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"\r\n                  matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                  (click)="dt.exportCSV({ selectionOnly: true })"></button>\r\n             \r\n            </div>\r\n         \r\n            <div class="col">\r\n              <div class="">\r\n                <div\r\n                  class="col"\r\n                  style="width: 250px; float: right; padding-top: 3px;"\r\n                >\r\n                  <div class="form-group">\r\n                    <div\r\n                      class="pull-left"\r\n                      style="margin-top: 4px; margin-right: 15px;"\r\n                    >\r\n              <label class="radio-cstm wauto">\r\n                <input type="radio" name="viewType" class="form-control" value="pnview" [(ngModel)]="viewType"\r\n                  (click)="changeOfStatus(\'\',\'pnview\')">\r\n                <span class="checkmark"></span>PN View\r\n              </label>\r\n            </div>\r\n            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n              <label class="radio-cstm wauto">\r\n                <input type="radio" name="viewType" class="form-control" value="detailedview" [(ngModel)]="viewType"\r\n                  (click)="changeOfStatus(\'\',\'detailedview\')">\r\n                <span class="checkmark"></span>Detailed View\r\n              </label>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate="colgroup" let-columns>\r\n        <colgroup>\r\n          <col *ngFor="let col of columns" [ngStyle]="{\'width\': col.width}" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate="header" let-columns>\r\n        <tr *ngIf="!pnViewSelected">\r\n          <th colspan="11">&nbsp;\r\n          </th>\r\n          <th colspan="3">Per Unit Revenue\r\n          </th>\r\n          <th colspan="4">Extended Revenue\r\n          </th>\r\n          <th colspan="2">&nbsp;\r\n          </th>\r\n          <th colspan="2">Cost\r\n          </th>\r\n          <th colspan="2">Product Margin\r\n          </th>\r\n          <th colspan="5">\r\n          </th>\r\n        </tr>\r\n\r\n        <tr>\r\n          <th *ngFor="let col of columns" [pSortableColumn]="col.field">\r\n            {{ col.header }}\r\n          </th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="body" let-rowData let-rowIndex="rowIndex" let-expanded="expanded" let-columns="columns">\r\n        <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex" pReorderableRowHandle>\r\n          <td *ngFor="let col of columns" style="text-overflow: ellipsis;"\r\n            [matTooltip]="mouseOverData(col.field,  rowData)" matTooltipPosition="above"\r\n            [matTooltipDisabled]="rowData[\'partNumberType\'] != \'Multiple\'"\r\n            [ngStyle]="{\'color\': getColorCodeForMultiple(rowData)}">\r\n            <span *ngIf="col.field == \'markupPerUnit\' || col.field == \'grossSalePricePerUnit\'\r\n                || col.field == \'discountAmount\'\r\n                || col.field == \'markupExtended\'\r\n                || col.field == \'salesDiscountExtended\'\r\n                || col.field == \'netSales\'\r\n                || col.field == \'misc\'\r\n                || col.field == \'grossSalePrice\'\r\n                || col.field == \'totalSales\'\r\n                || col.field == \'unitCost\'\r\n                || col.field == \'unitCostExtended\'\r\n                || col.field == \'marginAmountExtended\'\r\n                || col.field == \'freight\'\r\n                || col.field == \'taxAmount\'\r\n                || col.field == \'totalRevenue\'\r\n                || col.field == \'marginPercentage\'" style="float: right !important;">\r\n              {{convertDate(col.field , rowData) | twoDecimalGlobalNumberFormatPipe}}\r\n            </span>\r\n            <span *ngIf="col.field == \'qtyQuoted\'" style="float: right !important;">\r\n              {{convertDate(col.field , rowData) | globalNmberFormat}}\r\n            </span>\r\n            <span *ngIf="col.field == \'notes\'" [innerHTML]="rowData.notes"></span>\r\n            <span *ngIf="col.field != \'qtyQuoted\' \r\n                && col.field != \'markupPerUnit\' \r\n                && col.field != \'grossSalePricePerUnit\'\r\n                && col.field != \'discountAmount\'\r\n                && col.field != \'markupExtended\'\r\n                && col.field != \'salesDiscountExtended\'\r\n                && col.field != \'netSales\'\r\n                && col.field != \'misc\'\r\n                && col.field != \'grossSalePrice\'\r\n                && col.field != \'totalSales\'\r\n                && col.field != \'unitCost\'\r\n                && col.field != \'unitCostExtended\'\r\n                && col.field != \'marginAmountExtended\'\r\n                && col.field != \'freight\'\r\n                && col.field != \'taxAmount\'\r\n                && col.field != \'totalRevenue\'\r\n                && col.field != \'marginPercentage\'\r\n                && col.field != \'notes\'">\r\n              {{convertDate(col.field , rowData)}}\r\n            </span>\r\n\r\n          </td>\r\n        </tr>\r\n        <tr *ngIf="!pnViewSelected && rowIndex == (sales.length-1)" class="footer">\r\n          <td colspan="14">&nbsp;\r\n          </td>\r\n          <td><label>Total</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'markupExtended\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'grossSalePrice\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'salesDiscountExtended\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'netSales\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'misc\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'totalSales\')}}</label>\r\n          </td>\r\n          <td>&nbsp;\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'unitCostExtended\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'marginAmountExtended\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getPercentage(\'marginPercentage\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'freight\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'taxAmount\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'totalRevenue\')}}</label>\r\n          </td>\r\n          <td>&nbsp;\r\n          </td>\r\n        </tr>\r\n        <tr *ngIf="pnViewSelected && rowIndex == (sales.length-1)" class="footer">\r\n          <td colspan="6">&nbsp;\r\n          </td>\r\n          <td><label>Total</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'markupExtended\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'grossSalePrice\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'salesDiscountExtended\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'netSales\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'misc\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'totalSales\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'unitCostExtended\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'marginAmountExtended\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getPercentage(\'marginPercentage\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'freight\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'taxAmount\')}}</label>\r\n          </td>\r\n          <td class="content-to-end"><label style="margin: 0">{{getTotalAmount(\'totalRevenue\')}}</label>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="emptymessage" let-columns *ngIf="sales.length == 0">\r\n        <tr>\r\n          <td [attr.colspan]="30" style="color: red; font-weight: bold; text-align: center">\r\n            No records found\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="summary" id="footer" >\r\n\r\n        <label id="footer" class="footer" style="    margin-top: 37px;">Total:</label>\r\n        <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n        &nbsp;&nbsp;\r\n        <label id="footer" class="footer1" style="    margin-top: 37px;">Pages Count:</label>\r\n\r\n        <input style="width: 5%;" [ngModel]="totalPages" [disabled]="true" pInputText type="text" />\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n  <div class="loading">\r\n    <div class="lds-roller">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n</div>'},Icu2:function(e,t,r){"use strict";r.r(t),t.default='<div class="form-group">\r\n  <div class="row" *ngIf="!isView" style="padding:8px 0px">\r\n    \x3c!-- <button data-target="#addNewFreight" data-toggle="modal" (click)="createNew()" class="btn btn-primary"\r\n      style="margin-left: 10px;">\r\n      Add Freight\r\n    </button> --\x3e\r\n    <div class="card-header bg-primary" style="width: 100%; padding: 0.1rem 1.25rem 0.1rem 1.25rem;">\r\n      <div class="row">\r\n        <div class="col">\r\n          <h4 class="new-card-heading" style="font-size: 16px; line-height: 2;">  Freight</h4>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type="button"\r\n            class="btn-sm new-btn-primary" data-target="#addNewFreight" data-toggle="modal" (click)="createNew()">\r\n            Add Freight\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div> \r\n  <div class="row " [ngClass]="(isView) ? \'pull-right\' : \'\'">\r\n    <div class="checkbox-cstm show_cst">\r\n      <label style="width: auto !important;margin-top: 3px;">\r\n          <input type="checkbox" [(ngModel)]="deletedStatusInfo" name="cparent55" id="cparent55" (click)="getDeleteListByStatus($event.target.checked)" />\r\n          <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n          Show  Deleted List\r\n      </label>\r\n    </div>\r\n  </div>\r\n  <div class="clearfix"></div>\r\n    <p-table [columns]="cols" [value]="salesOrderFreightList" [lazy]="false" [paginator]="true" [rows]="10"\r\n      class="rpo-table-cstm sales-analysis-header ptable-f10" [paginator]="true">\r\n      \x3c!--freightss--\x3e\r\n      <ng-template pTemplate="header" let-columns>\r\n        <tr>\r\n          <th colspan="8" style="background: #4298ff !important;\r\n          color:#fff !important; border: 1px solid #fff;border-right: 1px solid #e7ecf1;">\r\n            &nbsp;\r\n          </th>\r\n          <ng-container *ngIf="isView">\r\n            <th colspan="5" style="background: #4298ff !important;\r\n            color:#fff !important; border: 1px solid #e7ecf1;padding-left: 5px;">\r\n              <div class="display-inline-flex">\r\n                <div class="form-group" style="text-align: center; display: flex;    margin-bottom: 0px;">\r\n                  <p-radioButton class="p-radiobutton-label-horizontal p-radiobutton-label-w92" name="costPlusTypeSOQ"\r\n                    label="T&M - Mark Up" value="1" [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()">\r\n                  </p-radioButton>\r\n                  <div>\r\n                    <select class="form-group select-markup" (change)="markupChanged({}, \'all\')"\r\n                      [(ngModel)]="overAllMarkup" [disabled]="isView || costPlusType != 1" style="margin-top: 10px;">\r\n                      <option value="" selected>Select</option>\r\n                      <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div style="float: left; margin-bottom: 7px; margin-left: 4px; margin-right: 4px;">\r\n                  <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusTypeSOQ" value="2" label="Actual"\r\n                    [(ngModel)]="costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'"></p-radioButton>\r\n                </div>\r\n                <div>\r\n                  <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusTypeSOQ" value="3"\r\n                    label="Flat Rate" [(ngModel)]="costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'">\r\n                  </p-radioButton>\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th style="background: #4298ff !important;\r\n            color:#fff !important;"></th>\r\n          </ng-container>\r\n          <ng-container *ngIf="!isView">\r\n            <th colspan="5" style="background: #4298ff !important;\r\n            color:#fff !important; border: 1px solid #e7ecf1;padding: 0;padding-left: 20px;">\r\n              <div class="display-inline-flex" >\r\n                <div class="form-group" style="text-align: center; display: flex;    margin-bottom: 0px;">\r\n                  <p-radioButton (ngModelChange)="validated()" class="p-radiobutton-label-horizontal sales-quote-radio p-radiobutton-label-w92" name="costPlusTypeSOQ"\r\n                    label="T&M - Mark Up" value="1" [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()">\r\n                  </p-radioButton>\r\n                  <div>\r\n                    <select (ngModelChange)="validated()" class="form-group select-markup" (change)="markupChanged({}, \'all\')"\r\n                      [(ngModel)]="overAllMarkup" [disabled]="isView || costPlusType != 1" style="margin-top: 10px;">\r\n                      <option value="" selected>Select</option>\r\n                      <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div style="float: left; margin-bottom: 7px; margin-left: 4px; margin-right: 4px;">\r\n                  <p-radioButton (ngModelChange)="validated()" class="p-radiobutton-label-horizontal sales-quote-radio" name="costPlusTypeSOQ" value="2" label="Actual"\r\n                    [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()"></p-radioButton>\r\n                </div>\r\n                <div>\r\n                  <p-radioButton (ngModelChange)="validated()" class="p-radiobutton-label-horizontal sales-quote-radio" name="costPlusTypeSOQ" value="3"\r\n                    label="Flat Rate" [(ngModel)]="costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'">\r\n                  </p-radioButton>\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th style="background: #4298ff !important;\r\n            color:#fff !important;"></th>\r\n            \x3c!-- <th style="background: #fff; border: 1px solid #fff;"></th> --\x3e\r\n          </ng-container>\r\n        </tr>\r\n        <tr>\r\n          \x3c!-- <th rowspan="2">Task</th> --\x3e\r\n          \x3c!-- <th *ngFor="let col of columns" rowspan="2">\r\n            {{ col.header }}\r\n          </th> --\x3e\r\n          <th rowspan="2"  style="background-color: #4298ff !important;\r\n          color: #fff !important;">Ship Via<span class="clr-red">*</span></th>\r\n          <th rowspan="2"  style="background-color: #4298ff !important;\r\n          color: #fff !important;">Weight</th>\r\n          <th rowspan="2"  style="background-color: #4298ff !important;\r\n          color: #fff !important;">UOM</th>\r\n          <th colspan="4"  style="background-color: #4298ff !important;\r\n          color: #fff !important;">Dimensions</th>\r\n          \x3c!-- <th rowspan="2"  style="background-color: #4298ff !important;\r\n          color: #fff !important;">UOM</th> --\x3e\r\n          <th rowspan="2"  style="background-color: #4298ff !important;\r\n          color: #fff !important;">Currency</th>\r\n          <th rowspan="2"  style="background-color: #4298ff !important;\r\n          color: #fff !important;">Amount<span class="clr-red">*</span></th>\r\n          <th rowspan="2"  style="background-color: #4298ff !important;\r\n          color: #fff !important;">Memo</th>\r\n          <ng-container>\r\n            <th rowspan="2"  style="background-color: #4298ff !important;\r\n            color: #fff !important;">Billing Method</th>\r\n            <th rowspan="2"  style="background-color: #4298ff !important;\r\n            color: #fff !important;">Mark Up</th>\r\n            \x3c!-- <th tooltip="Time & Materials">Billing Rate</th> --\x3e\r\n            <th rowspan="2"  style="background-color: #4298ff !important;\r\n            color: #fff !important;">Billing Amount</th>\r\n            \x3c!-- <th tooltip="Time & Materials">T&M Amount</th>\r\n            <th>Fixed Amount</th> --\x3e\r\n          </ng-container>\r\n          <th rowspan="2"  style="background-color: #4298ff !important;\r\n          color: #fff !important;">Actions</th>\r\n        </tr>\r\n        <tr>\r\n          <th style="background-color: #4298ff !important;">L</th>\r\n          <th style="background-color: #4298ff !important;">H</th>\r\n          <th style="background-color: #4298ff !important;">W</th>\r\n          <th style="background-color: #4298ff !important;">UOM</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="body" let-freight let-columns="columns" let-rowIndex="rowIndex">\r\n        \x3c!-- <ng-container *ngFor="let dt of salesOrderFreightList;"> --\x3e\r\n          \x3c!-- *ngIf="!freight[\'isDeleted\']" --\x3e\r\n        <tr >\r\n          <td>\r\n            <select class="form-control select-read-only" id="hideDisabled" [(ngModel)]="freight.shipViaId" disabled>\r\n              <option value="">Select</option>\r\n              <option *ngFor="let sv of shipViaList" [value]="sv.value">{{sv.label}}</option>\r\n            </select>\r\n          </td>\r\n          <td class="content-to-end">{{freight.weight}}</td>\r\n          <td>{{freight.uom}}</td>\r\n          <td class="content-to-end">{{freight.length}}</td>\r\n          <td class="content-to-end">{{freight.height}}</td>\r\n          <td class="content-to-end">{{freight.width}}</td>\r\n          <td>{{freight.dimensionUOM}}</td>\r\n          <td>{{freight.currency}}</td>\r\n          <td class="content-to-end"><span *ngIf="freight.amount">{{formateCurrency(freight.amount)}}</span></td>\r\n          <td [innerHTML]="freight.memo"></td>\r\n          <ng-container>\r\n            <td>\r\n              <select (ngModelChange)="validated()" class="form-control" [(ngModel)]="freight.billingMethodId"\r\n                [disabled]="isView || costPlusType == 3"\r\n                (change)="freight.markupPercentageId = \'\';freight.billingAmount = 0;(freight.billingMethodId == \'2\')?freight.billingAmount = freight.amount:\'\';">\r\n                <option value="" selected>Select</option>\r\n                <option *ngFor="let bm of [{\'label\': \'T&M\', \'value\': \'1\'}, {\'label\': \'Actual\', \'value\': \'2\'}]"\r\n                  [value]="bm.value">{{bm.label}}</option>\r\n              </select>\r\n            </td>\r\n            <td>\r\n              <select (ngModelChange)="validated()" class="form-control select-markup" (change)="markupChanged(freight, \'row\')"\r\n                [(ngModel)]="freight.markupPercentageId" [disabled]="isView || freight.billingMethodId != \'1\'">\r\n                <option value="" selected>Select</option>\r\n                <option *ngFor="let markUp of markupList" [value]="markUp.value">{{ markUp.label }}</option>\r\n              </select>\r\n            </td>\r\n            <td>\r\n              <input (ngModelChange)="validated()" type="text" pInputText pKeyFilter="money" class="form-control text_right"\r\n                value="{{ formateCurrency(freight.billingAmount) }}"\r\n                (change)="freight.billingAmount = formateCurrency(freight.billingAmount)"\r\n                [(ngModel)]="freight.billingAmount" [disabled]="isView || freight.billingMethodId != \'2\'" />\r\n            </td>\r\n          </ng-container>\r\n          <td class="btn-spaces text-center" >\r\n            <div *ngIf="deletedStatusInfo==false">\r\n            <span data-target="#addNewFreight" data-toggle="modal" *ngIf="!isView">\r\n              <a class="btn nobg btn-edit-cstm" (click)="edit(freight, rowIndex)" matTooltip="Edit">\r\n                <i class="fa fa-pencil"></i>\r\n              </a>\r\n            </span>\r\n            <span *ngIf="!isView">\r\n              <a class="btn nobg btn-delete-cstm" (click)="openDelete(content,freight,rowIndex)" matTooltip="Delete">\r\n                <i class="fa fa-trash" ></i>\r\n              </a>\r\n            \r\n            </span>\r\n            <span>\r\n              <button class="btn  nobg grey_btn_icon" style="padding:0px" [disabled]="freight.salesOrderQuoteFreightId==0"  (click)="openInterShipViaHistory(contentAuditHist,freight)"\r\n              matTooltip="History" matTooltipPosition="above">\r\n              <i class="fa fa-history">\r\n              </i>\r\n              </button>\r\n          </span>\r\n         </div>\r\n          <div *ngIf="deletedStatusInfo==true">\r\n            <span *ngIf="!isView"><a class="btn nobg" (click)="restore(restoreId,freight,rowIndex);"  matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n            <span>\r\n              \x3c!-- <a class="btn nobg"\r\n                 (click)="openInterShipViaHistory(contentAuditHist,freight)"\r\n                 matTooltip="History" matTooltipPosition="above">\r\n                  <i class="fa fa-history">\r\n                  </i>\r\n              </a> --\x3e\r\n              <button class="btn  nobg grey_btn_icon" style="padding:0px" [disabled]="freight.salesOrderQuoteFreightId==0"  (click)="openInterShipViaHistory(contentAuditHist,freight)"\r\n              matTooltip="History" matTooltipPosition="above">\r\n              <i class="fa fa-history">\r\n              </i>\r\n              </button>\r\n          </span>\r\n          </div>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="footer">\r\n        <tr class="footer">\r\n          <td>Total</td>\r\n          \x3c!-- <td>&nbsp;</td> --\x3e\r\n          <td>&nbsp;</td>\r\n          <td>&nbsp;</td>\r\n          <td>&nbsp;</td>\r\n          <td>&nbsp;</td>\r\n          <td>&nbsp;</td>\r\n          <td>&nbsp;</td>\r\n          <td>&nbsp;</td>\r\n          <td class="content-to-end">{{formateCurrency(getTotalAmount())}}</td>\r\n          <td>&nbsp;</td>\r\n          <td>&nbsp;</td>\r\n          <td>&nbsp;</td>\r\n          \x3c!-- <td>{{getTotalBillingRate()}}</td> --\x3e\r\n          <ng-container *ngIf="costPlusType != 3">\r\n            <td class="content-to-end">{{formateCurrency(getTotalBillingAmount())}}</td>\r\n          </ng-container>\r\n          <ng-container *ngIf="costPlusType == 3">\r\n            <td>\r\n              <input type="text" pInputText pKeyFilter="money" style="text-align: right;"\r\n                [ngModel]="freightFlatBillingAmount  | twoDecimalGlobalNumberFormatPipe"\r\n                [ngModelOptions]="{updateOn:\'blur\'}"\r\n                (ngModelChange)="freightFlatBillingAmount=formatStringToNumberGlobal($event)"\r\n                (blur)="freightFlatBillingAmount = (freightFlatBillingAmount)?formateCurrency(freightFlatBillingAmount):\'0.00\'"\r\n                [disabled]="isView" />\r\n            </td>\r\n            \x3c!-- <td>\r\n              <input type="text" pInputText pKeyFilter="money" style="text-align: right;"\r\n                (blur)="freightFlatBillingAmount = (freightFlatBillingAmount)?formateCurrency(freightFlatBillingAmount):\'0.00\'"\r\n                [(ngModel)]="freightFlatBillingAmount" [disabled]="isView" />\r\n            </td> --\x3e\r\n          </ng-container>\r\n          <td>&nbsp;</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  <div *ngIf="!isView" style="padding: 10px;">\r\n    <button class="btn btn-primary pull-right side" [disabled]="isSaveChargesDesabled" (click)="createFreightsQuote()">\r\n      <span *ngIf="isUpdate">Update</span>\r\n      <span *ngIf="!isUpdate">Save</span>\r\n    </button>\r\n  </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div id="addNewFreight" class="modal fade" role="dialog" *ngIf="!view" data-backdrop="static" data-keyboard="false">\r\n  <div class="modal-dialog modal-xlg">\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title"> {{isEdit ? \'Edit\' : \'Add\'}} Freight</h4>\r\n      </div>\r\n      <div class="modal-body">\r\n        <div *ngIf="!isEdit">\r\n          <span class="cat-heading cat4 ng-star-inserted">\r\n            Add Freight\r\n            <i class="fa fa-plus" (click)="addNewRow()"></i>\r\n          </span>\r\n        </div>\r\n        <div class="tab-content">\r\n          <div class="table-responsive table-overflow" style="height: 340px;">\r\n            <form #frieghtsCreateForm="ngForm">\r\n              <table class="table table-bordered ">\r\n                <thead>\r\n                  <tr>\r\n                    \x3c!-- <th rowspan="2">Task *</th> --\x3e\r\n                    \x3c!-- <th>Carrier *</th> --\x3e\r\n                    <th rowspan="2">Ship Via<span class="clr-red">*</span></th>\r\n                    \x3c!-- <th>Dimensions *</th> --\x3e\r\n                    <th rowspan="2">Weight</th>\r\n                    <th rowspan="2">UOM</th>\r\n                    <th colspan="4">Dimensions</th>\r\n                   \r\n                    <th rowspan="2">Currency</th>\r\n                    <th rowspan="2">Amount<span class="clr-red">*</span></th>\r\n                    <th rowspan="2">Memo</th>\r\n                    <th rowspan="2">Actions</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>L</th>\r\n                    <th>H</th>\r\n                    <th>W</th>\r\n                    <th>UOM</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor="let f of freightForm; let i = index">\r\n                    \x3c!-- <td>\r\n                      <select class="form-control" [(ngModel)]="f.taskId" [disabled]="isView" name="task_{{i}}"\r\n                        style="width:100px;">\r\n                        <option value="">Select</option>\r\n                        <option *ngFor="let task of taskList" [value]="task.taskId">{{task.description}}</option>\r\n                      </select>\r\n                    </td> --\x3e\r\n                    <td>\r\n                      <p-dropdown placeholder="Select" name="shipVia{{ i }}" #shipVia="ngModel"\r\n                        [options]="shipViaList" (ngModelChange)="enableUpdate()" class="p-dropdown-custom-md" [(ngModel)]="f.shipViaId" required>\r\n                      </p-dropdown>\r\n                    </td>\r\n                    <td>\r\n                      <input type="number" name="weight{{ i }}" (ngModelChange)="enableUpdate()" #weight="ngModel" [(ngModel)]="f.weight"\r\n                        class="form-control w50" />\r\n                    </td>\r\n                    <td>\r\n                      <p-dropdown placeholder="Select" (ngModelChange)="enableUpdate()" (input)="onFilterUom($event.target.value)" name="unitOfMeasureId{{ i }}" [options]="unitOfMeasureList"\r\n                        class="p-dropdown-custom-md" [(ngModel)]="f.uomId" filter="true">\r\n                      </p-dropdown>\r\n                    </td>\r\n                    <td><input type="number" (ngModelChange)="enableUpdate()" name="length{{ i }}" [(ngModel)]="f.length" #length="ngModel"\r\n                        class="form-control w50" /></td>\r\n                    <td><input type="number" (ngModelChange)="enableUpdate()" name="height{{ i }}" #height="ngModel" [(ngModel)]="f.height"\r\n                        class="form-control w50" /></td>\r\n                    <td><input type="number" (ngModelChange)="enableUpdate()" name="width{{ i }}" #width="ngModel" [(ngModel)]="f.width"\r\n                        class="form-control w50" /></td>\r\n                    <td>\r\n                      <p-dropdown placeholder="Select" (ngModelChange)="enableUpdate()" filter="true" (input)="onFilterUom($event.target.value)" name="dimensionUOMId{{ i }}" [options]="unitOfMeasureList"\r\n                        class="p-dropdown-custom-md" [(ngModel)]="f.dimensionUOMId">\r\n                      </p-dropdown>\r\n                    </td>\r\n                    <td>\r\n                      <p-dropdown placeholder="Select " (ngModelChange)="enableUpdate()" name="currencyId{{ i }}" [options]="currencyList"\r\n                        class="p-dropdown-custom-md" [(ngModel)]="f.currencyId" filter="true"  (input)="onFilterCurrency($event.target.value)">\r\n                      </p-dropdown>\r\n                    </td>\r\n                    <td>\r\n                      <input type="text" (ngModelChange)="enableUpdate()" InputText pKeyFilter="money" name="amount{{ i }}" #amount="ngModel"\r\n                        [(ngModel)]="f.amount" class="form-control w50 text_right"\r\n                        (change)="f.amount = formateCurrency(f.amount);" required />\r\n                    </td>\r\n                    <td>\r\n                      <div class="form-group memo-popup-cstm mat_emo"\r\n                        style="width: 120px;    display: inline-flex;    margin-bottom: 0;">\r\n                        <div [innerHTML]="f.memo"  class="text_editor_box"></div>\r\n                        <i class="fa fa-pencil" data-toggle="modal"\r\n                          style="position: relative;top: 6px;" data-target="#textarea-popupFreight" matTooltip="Memo"\r\n                          matTooltipPosition="above" (click)="onAddTextAreaInfo(f,i)"></i>\r\n                         \r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      \x3c!-- [disabled]="i==0" --\x3e\r\n                      <button class="btn btn-danger nobg" [disabled]="isEdit==true" (click)="deleteRow(i, frieghtsCreateForm)">\r\n                        <i class="fa fa-trash"></i>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </form>\r\n            <div class="modal fade" id="textarea-popupFreight" role="dialog" data-backdrop="static"\r\n              data-keyboard="false">\r\n              <div class="modal-dialog modal-lg" style="max-width: 400px !important;">\r\n                <div class="modal-content">\r\n                  <div class="modal-header">\r\n                    <button type="button" class="close" (click)="onCloseTextAreaInfo()">&times;</button>\r\n                    <h4 class="modal-title">Edit {{"Memo"}}</h4>\r\n                  </div>\r\n                  <div class="modal-body">\r\n                    <table class="table table-bordered table-fixed workflow-table-material">\r\n                      <thead>\r\n                        <th style="color: #fff;">{{"Memo"}}</th>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td>\r\n                            <p-editor [(ngModel)]="textAreaInfo" [style]="{\'height\':\'320px\'}" name="textAreaInfo"\r\n                              required>\r\n                            </p-editor>\r\n\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                    <div style="float:right">\r\n                      <button type="button" class="btn btn-primary"\r\n                        style="padding: 6px 12px !important;margin-top: 10px;"\r\n                        (click)="onSaveTextAreaInfo(textAreaInfo);">\r\n                        Save\r\n                      </button>\r\n                      <button type="button" class="btn btn-danger"\r\n                        style="padding: 6px 12px !important;margin-top: 10px;" (click)="onCloseTextAreaInfo()">\r\n                        Close\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button class="btn btn-primary pull-right " (click)="saveFreightList()" [disabled]="!frieghtsCreateForm.valid ||  isEnableUpdateButton">\r\n          {{ isEdit ? \'Update\' : \'Save\' }}\r\n        </button>\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal">\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-template #content let-c="close" let-d="dismiss">\r\n  <div class="modal-header">\r\n    <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n    <button type="button" class="close" aria-label="Close" (click)="dismissModelAlett()">\r\n      <span aria-hidden="true">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class="modal-body">\r\n    <strong style="display: inline-flex;">\r\n      Ship Via:\r\n        <span class="new-label">\r\n          <select class="form-control select-read-only new-labelSelect" id="hideDisabled" [(ngModel)]="selectedRowForDelete.shipViaId" disabled>\r\n            <option value="">Select</option>\r\n            <option *ngFor="let sv of shipViaList" [value]="sv.value">{{sv.label}}</option>\r\n          </select>\r\n        </span>\r\n    </strong>\r\n</div>\r\n  <div class="modal-footer">\r\n    <button type="button" class="btn btn-success" (click)="delete()">Yes</button>\r\n    <button type="button" class="btn btn-danger" (click)="dismissModelAlett()">No</button>\r\n  </div>\r\n\r\n</ng-template>\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n  <div class="modal-header">\r\n      <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n\r\n      <button type="button" class="close" aria-label="Close" (click)="dismissModelAlettRestore()">\r\n          <span aria-hidden="true">&times;</span>\r\n      </button>\r\n  </div>\r\n  <div class="modal-body">\r\n        <strong style="display: inline-flex;">\r\n          Ship Via:\r\n            <span class="new-label" *ngIf="restorerecord">\r\n              <select class="form-control select-read-only new-labelSelect" id="hideDisabled" [(ngModel)]="restorerecord.shipViaId" disabled>\r\n                <option value="">Select</option>\r\n                <option *ngFor="let sv of shipViaList" [value]="sv.value">{{sv.label}}</option>\r\n              </select>\r\n            </span>\r\n        </strong>\r\n  </div>\r\n  <div class="modal-footer">\r\n      <button type="button" class="btn btn-primary" (click)="restoreRecord()">Yes</button>\r\n      <button type="button" class="btn btn-danger" (click)="dismissModelAlettRestore()">No</button>\r\n  </div>\r\n</ng-template> \r\n<ng-template #contentAuditHist let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n  <div class="modal-header">\r\n      <h4 class="modal-title">History of Freights</h4>\r\n      <button type="button" class="close" aria-label="Close" (click)="dismissModelHistory()">\r\n          <span aria-hidden="true">&times;</span>\r\n      </button>\r\n  </div>\r\n  <div class="modal-body">\r\n      <div class="table-responsive history_hg">\r\n          <table class="table table-bordered">\r\n              <thead>\r\n                  <tr>\r\n                      <th rowspan="2">Ship Via <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Weight</th>\r\n                      <th rowspan="2">UOM</th>\r\n                      <th colspan="4" style="text-align: center;">Dimensions</th>\r\n                      <th rowspan="2">Currency</th>\r\n                      <th rowspan="2">Amount <span class="clr-red">*</span></th>\r\n                      \x3c!-- <th rowspan="2">Amount</th> --\x3e\r\n                      <th rowspan="2">Memo</th>\r\n                      <th  rowspan="2">Billing Method</th> \r\n                      <th rowspan="2">Billing Amount</th>\r\n                      <th rowspan="2">Is Active</th>\r\n                      <th rowspan="2">Created Date</th>\r\n                      <th rowspan="2">Created By</th>\r\n                      <th rowspan="2">Updated Date</th>\r\n                      <th rowspan="2">Updated By</th>\r\n                      <th rowspan="2">Is Deleted</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <th>Length</th>\r\n                    <th>Height</th>\r\n                    <th>Width</th>\r\n                    <th>UOM</th>\r\n                  </tr>\r\n              </thead>\r\n              <tr *ngFor="let audit of freightAudiHistory; let i = index;">\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'shipVia\', audit.shipVia)  ? \'black\' : \'red\'  }">{{audit.shipVia}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'weight\', audit.weight)  ? \'black\' : \'red\'  }">{{audit.weight}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'uom\', audit.uom)  ? \'black\' : \'red\'  }">{{audit.uom}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'length\', audit.length)  ? \'black\' : \'red\'  }">{{audit.length}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'height\', audit.height)  ? \'black\' : \'red\'  }">{{audit.height}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'width\', audit.width)  ? \'black\' : \'red\'  }">{{audit.width}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'dimensionUOM\', audit.dimensionUOM)  ? \'black\' : \'red\'  }">{{audit.dimensionUOM}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'currency\', audit.currency)  ? \'black\' : \'red\'  }">{{audit.currency}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'amount\', audit.amount)  ? \'black\' : \'red\'  }">{{audit.amount}}</td>\r\n                  <td [ngStyle]="{color: getColorCodeForHistory(i, \'memo\', audit.memo) ? \'black\' : \'red\'}">\r\n                    <p class="p_editor" [innerHTML]="audit.memo"></p>\r\n                  </td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'billingMethodName\', audit.billingMethodName)  ? \'black\' : \'red\'  }">{{audit.billingMethodName}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'billingAmount\', audit.billingAmount)  ? \'black\' : \'red\'  }">{{audit.billingAmount}}</td>\r\n                <td style="text-align: center;">\r\n                      <span class="value">\r\n                        <label class="wauto">\r\n                            <input type="checkbox" name="isActive" [checked]="audit.isActive == true" disabled>\r\n                        </label>\r\n                      </span>\r\n                    </td>\r\n                  <td>{{audit.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                  <td>{{audit.createdBy}}</td>\r\n                  <td>{{audit.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                  <td>{{audit.updatedBy}}</td>\r\n                  <td style="text-align: center;">\r\n                      <span class="value">\r\n                        <label class="wauto">\r\n                            <input type="checkbox" name="isDeleted" [checked]="audit.isDeleted == true" disabled>\r\n                        </label>\r\n                      </span>\r\n                    </td>\r\n              </tr>\r\n          </table>\r\n      </div>\r\n  </div>\r\n  <div class="modal-footer">\r\n      <button type="button" class="btn btn-danger" (click)="dismissModelHistory()">Close</button>\r\n  </div>\r\n</ng-template>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n  <div class="loading">\r\n    <div class="lds-roller">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n</div>'},Ik6b:function(e,t,r){"use strict";r.r(t),t.default='<div class="row">\r\n  <div>\r\n    <label>Stock Type</label>\r\n  </div>\r\n  <div>\r\n    <label>\r\n      <input type="checkbox" name="includePMA" [(ngModel)]="query.partSearchParamters.restrictPMA" />&nbsp;Include\r\n      PMA\r\n    </label>\r\n  </div>\r\n  <div>\r\n    <label>\r\n      <input type="checkbox" name="includeDER" [(ngModel)]="query.partSearchParamters.restrictDER" />&nbsp;Include\r\n      DER\r\n    </label>\r\n  </div>\r\n  <div>\r\n    <label>\r\n      <input type="checkbox" name="includeAlternalePN"\r\n        [(ngModel)]="query.partSearchParamters.includeAlternatePartNumber" />&nbsp;Include\r\n      Alternate PN\r\n    </label>\r\n  </div>\r\n  <div>\r\n    <label>\r\n      <input type="checkbox" name="includeEquivalentPartNumber"\r\n        [(ngModel)]="query.partSearchParamters.includeEquivalentPartNumber" />&nbsp;Include\r\n      Equivalent PN\r\n    </label>\r\n  </div>\r\n  \x3c!-- <div>\r\n    <label>\r\n      <input type="checkbox" name="method" (change)="includeMultiplePN($event)" name="includeMultiplePN"\r\n        [(ngModel)]="query.partSearchParamters.includeMultiplePartNumber" />&nbsp;Multiple PN\'s\r\n    </label>\r\n  </div> --\x3e\r\n</div>\r\n<div class="row">\r\n  <div class="col-2 column">\r\n    <div class="form-group">\r\n      <label>PN<span class="clr-red">*</span></label>\r\n      <p-autoComplete class="autocomp-customer-cstm" name="partNumber"\r\n        [(ngModel)]="query.partSearchParamters.partNumberObj"\r\n        [suggestions]="this.partDetails" [forceSelection]="true"\r\n        field="partNumber" \r\n        (completeMethod)="searchPartByPartNumber($event)"\r\n        (onSelect)="onPartNumberSelect($event)" [size]="30" [minLength]="1" [dropdown]="true"\r\n        [disabled]="partEditDisable" required>\r\n      </p-autoComplete>\r\n    </div>\r\n  </div>\r\n  <div class="col-3 column">\r\n    <div class="form-group">\r\n      <label>PN Description</label>\r\n      <input type="text" class="form-control" name="partDescription"\r\n        [(ngModel)]="query.partSearchParamters.partDescription" [disabled]="true" />\r\n    </div>\r\n  </div>\r\n  <div class="col-7 column">\r\n    <div class="col-2 column">\r\n      <div class="form-group">\r\n        <label>Cond<span class="clr-red">*</span></label>\r\n        <select name="conditionId" [(ngModel)]="query.partSearchParamters.conditionId" [disabled]="partEditDisable"\r\n          (change)="onConditionSelect()" required>\r\n          <option value="0" selected>--select--</option>\r\n          <option *ngFor="let condition of allConditionInfo" [ngValue]="condition.conditionId">\r\n            {{condition.description}}\r\n          </option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    \x3c!-- [(ngModel)]="query.partSearchParamters.quantityRequested"  (change)="calculate()" --\x3e\r\n    <div class="col-2 column">\r\n      <div class="form-group">\r\n        <label>Qty Req<span class="clr-red">*</span></label>\r\n        <input class="form-control text-right" type="text" pKeyFilter="pint" pInputText required\r\n          [ngModel]="query.partSearchParamters.quantityRequested  | globalNmberFormat"\r\n          (ngModelChange)="query.partSearchParamters.quantityRequested=formatStringToNumberGlobal($event)"\r\n          (keyup)="calculate()" name="quantityRequested" autocomplete="off" />\r\n      </div>\r\n    </div>\r\n    \x3c!-- [(ngModel)]="query.partSearchParamters.quantityToQuote" --\x3e\r\n    <div class="col-2 column">\r\n      <div class="form-group">\r\n        <label>Qty to Quote<span class="clr-red">*</span></label>\r\n        <input type="text" class="form-control text-right" pKeyFilter="pint"  required\r\n          pInputText name="quantityToQuote"\r\n          [ngModel]="query.partSearchParamters.quantityToQuote  | globalNmberFormat"\r\n          [ngModelOptions]="{updateOn:\'blur\'}"\r\n          (ngModelChange)="query.partSearchParamters.quantityToQuote=formatStringToNumberGlobal($event)"\r\n          autocomplete="off" />\r\n      </div>\r\n    </div>\r\n    <div class="col-6 column">\r\n      <div class="col-5 column">\r\n        <div class="form-group">\r\n          <label>Qty AlreadyQuoted</label>\r\n          <input type="text" class="form-control text-right" name="qtyAlreadyQuoted"\r\n            [ngModel]="query.partSearchParamters.quantityAlreadyQuoted | globalNmberFormat"\r\n            (ngModelChange)="query.partSearchParamters.quantityAlreadyQuoted=$event" disabled="true" />\r\n        </div>\r\n      </div>\r\n      <div class="col-4 column">\r\n        <div class="form-group">\r\n          <label>Qty On Hand</label>\r\n          <input type="text" class="form-control text-right" name="qtyOnHand"\r\n            [ngModel]="query.partSearchParamters.qtyOnHand | globalNmberFormat"\r\n            (ngModelChange)="query.partSearchParamters.qtyOnHand=$event" disabled="true" />\r\n        </div>\r\n      </div>\r\n      <div class="col-3 column">\r\n        <div class="form-group">\r\n          <label>Qty Available</label>\r\n          <input type="text" class="form-control text-right" name="qtyAvailable"\r\n            [ngModel]="query.partSearchParamters.qtyAvailable | globalNmberFormat"\r\n            (ngModelChange)="query.partSearchParamters.qtyAvailable=$event" disabled="true" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class="row justify-content-start">\r\n  <div class="col-1 column" style="margin-right: 8px;">\r\n    <div class="form-group">\r\n      \x3c!-- <label>&nbsp;</label> --\x3e\r\n      <button class="btn btn-primary" (click)="search($event)"\r\n        [disabled]="searchDisabled || !(query.partSearchParamters.quantityToQuote > 0)">\r\n        Search PN\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class="col-2 column" style="margin-right: 8px;" *ngIf="enableMultiSearch">\r\n    <div class="form-group">\r\n      \x3c!-- <label>&nbsp;</label> --\x3e\r\n      <button class="btn btn-primary" (click)="openMultiPartSearch()"\r\n        style="background-color: #f0ad4e !important;">\r\n        Search Multiple PN\'s\r\n      </button>\r\n    </div>\r\n  </div>\r\n  \x3c!-- <div class="col-1 column" style="margin-right: 8px;">\r\n    <div class="form-group">\r\n      <label>&nbsp;</label>\r\n      <button class="btn btn-primary" [disabled]="historicalDisabled">Historical</button>\r\n    </div>\r\n  </div> --\x3e\r\n</div>\r\n<ng-template #searchMultiPart let-c="close" let-d="dismiss">\r\n  <div class="modal-header">\r\n    <h4 class="modal-title">Add Multiple PN\'s</h4>\r\n    <button type="button" class="close" aria-label="Close" (click)="onCloseMultiPartNumbers()">\r\n      <span aria-hidden="true">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class="modal-body">\r\n    <div class="row">\r\n      <div class="col-md-4">\r\n        <label class="sales-quote-multi-part-label" style="text-align: left">List of PN\'s (Saperated by Comma):</label>\r\n      </div>\r\n      <div class="col-md-7">\r\n        <textarea type="text" name="multiPartNumbers" [(ngModel)]="multiPartNumbers">\r\n                </textarea>\r\n\r\n      </div>\r\n      <div class="col-md-1">\r\n\r\n        <button type="button" class="btn btn-primary" (click)="searchMultiPartNumbers()">\r\n          <i class="fa fa-pencil"></i>\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n    <div class="row">\r\n      <div class="col-md-12">\r\n        <p-table #dt class="" [value]="multiSearchResult" [rows]="10" [lazy]="true" [paginator]="showPaginator"\r\n          [pageLinks]="pageLinks" [columns]="columns" [scrollable]="true" [style]="{ width: \'100%\' }">\r\n          <ng-template pTemplate="colgroup" let-columns>\r\n            <colgroup>\r\n              <col *ngFor="let col of columns" [ngStyle]="{\'width\': col.width}" />\r\n            </colgroup>\r\n          </ng-template>\r\n          <ng-template pTemplate="header">\r\n            <tr>\r\n              <th style="width:50px"></th>\r\n              <th>PN</th>\r\n              <th>PN Description</th>\r\n              <th>Condition Type</th>\r\n              <th>Alternate PN</th>\r\n              <th>Qty Available</th>\r\n              <th>Qty On Hand</th>\r\n              <th>Qty To Requested</th>\r\n\r\n              <th>Actions</th>\r\n            </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate="body" let-part>\r\n            <tr>\r\n              <td style="width:50px">\r\n                <input type="checkbox" *ngIf="part.exist" [(ngModel)]="part.selected"\r\n                  (change)="onChange($event, part,salesMargin)" />\r\n              </td>\r\n              <td>{{ part.partNumber }}</td>\r\n              <td>{{ part.partDescription }}</td>\r\n              <td>\r\n                <select [(ngModel)]="part.conditionType" [ngModelOptions]="{standalone: true}">\r\n                  <option>--select--</option>\r\n                  <option *ngFor="let condition of allConditionInfo" [ngValue]="condition.conditionId">\r\n                    {{condition.description}}</option>\r\n                </select>\r\n\r\n              </td>\r\n              <td>{{ part.alternatePartNumber }}</td>\r\n              <td><input type="number" class="form-control" [ngModel]="part.qtyAvailable | globalNmberFormat"\r\n                  (ngModelChange)="part.qtyAvailable=$event" [ngModelOptions]="{standalone: true}" /></td>\r\n              <td><input type="number" class="form-control" [ngModel]="part.qtyOnHand | globalNmberFormat"\r\n                  (ngModelChange)="part.qtyOnHand=$event" [ngModelOptions]="{standalone: true}" />\r\n              </td>\r\n              <td><input type="number" class="form-control" [ngModel]="part.qtyRequested | globalNmberFormat"\r\n                  (ngModelChange)="part.qtyRequested=$event" [ngModelOptions]="{standalone: true}" /></td>\r\n\r\n              <td>\r\n                <span>\r\n                  <a class="add-part-number clr-red" *ngIf="!part.exist" target="_blank"\r\n                    routerLink="/itemmastersmodule/itemmasterpages/app-item-master-stock">\r\n                    Add Part Number\r\n                  </a>\r\n\r\n                </span>\r\n              </td>\r\n\r\n            </tr>\r\n          </ng-template>\r\n\r\n        </p-table>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n  <div class="modal-footer">\r\n    <button type="button" class="btn btn-success" (click)="onCloseMultiPartNumbers()">Add Available Parts</button>\r\n    <button type="button" class="btn btn-danger" (click)="onCloseMultiPartNumbers()">No</button>\r\n  </div>\r\n\r\n</ng-template>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n  <div class="loading">\r\n    <div class="lds-roller">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n</div>'},Jyd3:function(e,t,r){"use strict";r.r(t),t.default="button {\n  border-radius: 5px;\n}\n\n.form-group > label {\n  width: 100%;\n}\n\ndiv.row {\n  padding: 10px;\n}\n\n.footer-t-rec {\n  margin-left: 65%;\n}\n\n.footer--count {\n  margin-right: 0px;\n}\n\n.ui-table-scrollable-header-box {\n  margin-right: 17px !important;\n}\n\n.ui-table-scrollable-body {\n  margin-right: 17px !important;\n}\n\n::-webkit-scrollbar {\n  width: 10px;\n}\n\n.ui-table-scrollable-header {\n  overflow-y: scroll;\n}\n\n.alternate-part-label {\n  color: #ff5663 !important;\n}\n\n.row-bg1 {\n  background-color: #ffe4e2 !important;\n}\n\n.sales-quote-part-search-data tr th {\n  background: #4298ff;\n  color: #fff;\n}\n\n.sales-quote-part-search-data tr td:first-child {\n  background: #4298ff;\n  color: #fff;\n  position: -webkit-sticky;\n  position: sticky;\n  left: 0;\n}\n\n.sales-quote-part-search-data tr td:last-child {\n  background: #FFF;\n  position: -webkit-sticky;\n  position: sticky;\n  right: 0;\n}\n\n.sales-quote-part-search-data tr th:first-child {\n  background: #4298ff;\n  color: #fff;\n  position: -webkit-sticky;\n  position: sticky;\n  left: 0;\n}\n\n.sales-quote-part-search-data tr th:last-child {\n  position: -webkit-sticky;\n  position: sticky;\n  right: 0;\n}"},Jzvy:function(e,t,r){"use strict";r.r(t),t.default='<div class="modal-header">\r\n    <button type="button" class="close" data-dismiss="modal" (click)="close()">&times;</button>\r\n    <h4 class="modal-title">Stocklines for {{partNumber}}</h4>\r\n</div>\r\n<div class="modal-body">\r\n    <p-table #dt [value]="customPaginate.results" class="rpo-table-cstm rro-table-cstm" [first]="customPaginate.first"\r\n        [rows]="customPaginate.rows" [paginator]="showPaginator" [pageLinks]="3"\r\n        [rowsPerPageOptions]="[10, 20, 50, 100]" [columns]="selectedColumns" selectionMode="multiple"\r\n        [metaKeySelection]="true" [(selection)]="table.selectedColumn" [lazy]="true" (onLazyLoad)="loadData($event)"\r\n        [resizableColumns]="true" [reorderableColumns]="true" [totalRecords]="customPaginate.totalRecordsCount"\r\n        [scrollable]="true" [style]="{ width: \'100%\' }">\r\n\r\n        <ng-template pTemplate="colgroup" let-columns>\r\n            <colgroup>\r\n                <col *ngFor="let col of columns" style="width:130px">\r\n            </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate="header" let-columns>\r\n            <tr>\r\n                <th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                    {{ col.header }}\r\n                    <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                </th>\r\n                <th style="width:100px;">\r\n                    Actions\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th [ngStyle]="{\'width\': col.width}" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                    <input style="width:100%;" pInputText type="text"\r\n                        (input)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                </th>\r\n                <th style="width:100px;position:sticky"></th>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="body" let-stockLine let-columns="columns" let-rowIndex="rowIndex">\r\n            <tr [pSelectableRow]="stockLine" [pSelectableRowIndex]="rowIndex" pReorderableRowHandle>\r\n                <td *ngFor="let col of columns" pReorderableRowHandle>\r\n                    {{\r\n                            stockLine[col.field]\r\n                     }}\r\n                </td>\r\n                <td style="width:100px;">\r\n                    <span>\r\n                        <a class=" btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                            (click)="viewStockLine(stockLine)" matTooltip="View">\r\n                            <i class="fa fa-eye"></i>\r\n                        </a>\r\n                        <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                            (click)="viewStockLineHistory(stockLine)" matTooltip="History">\r\n                            <i class="fa fa-history"></i>\r\n                        </a>\r\n                    </span>\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="emptymessage" let-columns *ngIf="customPaginate.results.length == 0">\r\n            <tr>\r\n                <td [attr.colspan]="10" style="color: red; font-weight: bold; text-align: center">\r\n                    No records found\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="summary" id="footer">\r\n            <label id="footer" class="footer">Total:</label>\r\n            <input style="width: 5%;" [(ngModel)]="customPaginate.totalRecordsCount" [disabled]="true" pInputText\r\n                type="text" />\r\n            &nbsp;&nbsp;\r\n            <label id="footer" class="footer1">Pages Count:</label>\r\n\r\n            <input style="width: 5%;" [ngModel]="customPaginate.totalPages" [disabled]="true" pInputText type="text" />\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n<div class="modal-footer">\r\n    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="close()">Close</button>\r\n</div>\r\n<div class="preloader" *ngIf="loading">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},K2XT:function(e,t,r){"use strict";r.r(t),t.default=".row {\r\n  margin-top: 5px;\r\n}\r\n\r\n.sub-header-title {\r\n  border-bottom: 1px solid lightgray;\r\n  width: 100%;\r\n  font-size: 18px;\r\n  padding: 5px 8px;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.sales-quote-approver-info{\r\n\tdisplay: flex;\r\n    width: 85%;\r\n    align-items: center;\r\n    margin-top: 22px;\r\n}\r\n\r\n.table > thead > tr > th {\r\n  vertical-align: center;\r\n  border-bottom: 0 solid #e7ecf1;\r\n  height: 45px;\r\n}\r\n\r\n.sales-quote-approver-info p{\r\n  flex: 30%;\r\n  padding: 0;\r\n}\r\n\r\n.sales-quote-approver-info p .label{\r\n  color: #000 !important;\r\n  font-weight: bold;\r\n}\r\n\r\nlabel {\r\n  font-size: 12px!important;\r\n  text-align: left;\r\n  width: 150px;\r\n  margin-right: 0;\r\n  font-weight: 400;\r\n}\r\n\r\n.approver-details-cstm {\r\n  margin-top: 16px;\r\n}\r\n\r\n.approver-details-cstm p {\r\n  float: left;\r\n  margin-right: 40px;\r\n}\r\n\r\n.approver-tab-cstm .col-md-3 {\r\n  padding-right: 40px;\r\n  margin-right: 0;\r\n}\r\n\r\n.approver-tab-cstm .form-row {\r\n  margin-top: 10px;\r\n}\r\n\r\n.red {\r\n  background-color: #ff0000 !important; \r\n}"},MBsq:function(e,t,r){"use strict";r.r(t),t.default=":host ::ng-deep div.ui-widget {\n  padding: 0px !important;\n}\n:host ::ng-deep div.ui-widget > button {\n  padding: 0px !important;\n  padding-right: 5px !important;\n}\n:host ::ng-deep div.ui-widget > button > span.ui-button-text {\n  padding: 2px 5px 2px 5px !important;\n}\n:host ::ng-deep div.ui-widget > button.ui-splitbutton-menubutton {\n  padding-right: 14px !important;\n}\n:host ::ng-deep div.ui-widget > button.ui-splitbutton-menubutton > span.ui-button-icon-left {\n  left: 0% !important;\n}\n:host ::ng-deep div.ui-menu > ul > li {\n  padding: 0px !important;\n  text-align: left !important;\n}\n:host ::ng-deep div.sales-order-actions {\n  padding: 4px 6px !important;\n}"},MN9p:function(e,t,r){"use strict";r.r(t),t.default='<form #partActionsForm="ngForm">\r\n\r\n    <div class="modal-header">\r\n        <button type="button" class="close" (click)="onClose()">\r\n            &times;\r\n        </button>\r\n        <h4 class="modal-title">{{selectedPartActionType}}</h4>\r\n    </div>\r\n    <div>\r\n         <p id="clockdiv" class="clockdiv" *ngIf="counter"> Session Expire in  {{counter.min}} <span>m</span> : {{counter.sec}} <span>s</span></p>\r\n    </div>\r\n   \r\n    <div class="modal-body">\r\n        \x3c!-- <h6>Table Data</h6> --\x3e\r\n        <div class="row margin-row">\r\n\r\n            \x3c!--<div class="col-md-12 col-sm-12 col-12">\r\n                <div class="col-4 column">\r\n                    <div class="form-group">\r\n                        <label class="col-sm-4  text-left">SO Num</label>\r\n                        <input type="text" class="form-control quantityTextBox col-sm-7" name="salesOrderNumber" disabled="true"\r\n                               [(ngModel)]="salesOrder.salesOrderNumber" />\r\n                    </div>\r\n                </div>\r\n                <div class="col-4 column">\r\n                    <div class="form-group">\r\n                        <label class="col-sm-4 text-left">Customer Name</label>\r\n                        <input type="text" class="form-control quantityTextBox col-sm-7" name="customerName" disabled="true"\r\n                               [(ngModel)]="salesOrder.customerName" />\r\n                    </div>\r\n                </div>\r\n            </div>--\x3e\r\n        </div>\r\n        <div class="row margin-row mt-2">\r\n            <div class="col-md-12 col-sm-12 col-12">\r\n\r\n                <div class="col-4 column">\r\n                    <div class="form-group">\r\n                        \x3c!-- <label>Show Alternates</label> --\x3e\r\n                        <p-checkbox name="showAlternates" binary="true" label="Show Alternates">\r\n                        </p-checkbox>\r\n                    </div>\r\n                </div>\r\n                <div class="col-4 column">\r\n                    <div class="form-group">\r\n                        <p-checkbox name="showEqualience" binary="true" label="Show Equalience">\r\n                        </p-checkbox>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <p-table #dt [value]="parts" class="rpo-table-cstm ptable-custom" [columns]="columns" [scrollable]="true"\r\n                 [resizableColumns]="true" selectionMode="single" [responsive]="true"\r\n                 [metaKeySelection]="true" [style]="{ width: \'100%\' }">\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col [ngStyle]="{\'width\': \'50px\'}" />\r\n\r\n                    <col *ngFor="let col of columns" [ngStyle]="{\'width\': col.width}" />\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n                    <th>\r\n                    </th>\r\n                    <th colspan="9">\r\n                        Materials\r\n                    </th>\r\n                    <th colspan="4">\r\n                        Stockline\r\n                    </th>\r\n                    <th colspan="4">\r\n\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th class="text-left">\r\n                        \x3c!-- <p-tableHeaderCheckbox></p-tableHeaderCheckbox> --\x3e\r\n                        <p-checkbox [(ngModel)]="selectAllParts" name="selectAllParts" binary="true" (onChange)="onChangeOfSelectAllQuotes($event)">\r\n                        </p-checkbox>\r\n                    </th>\r\n                    <th *ngFor="let col of columns">\r\n                        {{col.header}}\r\n                    </th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-part let-rowData let-i="rowIndex" let-columns="columns">\r\n                <tr pReorderableRowHandle>\r\n                    <td>\r\n                        <span>\r\n                            <p-checkbox [(ngModel)]="rowData.isSelected" name="isSelected{{i}}" (onChange)="onChangeOfPartSelection($event)"\r\n                                        binary="true">\r\n                            </p-checkbox>\r\n                        </span>\r\n                    </td>\r\n                    <td *ngFor="let col of columns" pReorderableRowHandle>\r\n                        <ng-container *ngIf="col.field !=\'quantityOnOrder\' && col.field !=\'quantityAvailable\' && col.field !=\'quantityOnHand\' && col.field !=\'quantityIssued\' && col.field!=\'quantityReserved\' && col.field!=\'quantity\' && col.field!=\'qtyToReserve\' && col.field != \'reservedDate\' && col.field != \'reservedById\' && col.field != \'issuedDate\' && col.field != \'issuedById\' && col.field != \'qtyToIssued\' && col.field != \'qtyToReserveAndIssue\' && col.field != \'qtyToUnReserve\' && col.header != \'Qty To UnIssue\'">\r\n\r\n                            \x3c!-- {{rowData[col.field]}}  --\x3e\r\n                            {{part[col.field]}}\r\n                        </ng-container>\r\n\r\n                        <span *ngIf="col.field ==\'quantityOnOrder\' || col.field ==\'quantityAvailable\' || col.field ==\'quantityOnHand\' || col.field ==\'quantityIssued\' || col.field ==\'quantityReserved\' || col.field ==\'quantity\'" class="float-right" style="text-align: right;">\r\n\r\n                            \x3c!-- {{rowData[col.field]}}  --\x3e\r\n                            {{part[col.field]}}\r\n                        </span>\r\n\r\n                        \x3c!--qtyToReserve--\x3e\r\n                        <ng-container *ngIf="col.field ==\'qtyToReserve\' && selectedPartActionType == \'Reserve\'">\r\n                            <input type="number" class="form-control quantityTextBox text-right" pInputText pKeyFilter="num" required="col.field ==\'qtyToReserve\' && selectedPartActionType == \'Reserve\'" name="qtyToReserve{{i}}" value="{{part.qtyToReserve}}"\r\n                                   [(ngModel)]="part.qtyToReserve" [disabled]="rowData.isSelected == false" />\r\n\r\n                        </ng-container>\r\n                        <span *ngIf="col.field ==\'qtyToReserve\' && selectedPartActionType != \'Reserve\'" class="float-right" style="text-align: right;">\r\n                            {{part[col.field]}}\r\n\r\n                        </span>\r\n                        \x3c!--/qtyToReserve--\x3e\r\n                        \x3c!-- qtyToIssued --\x3e\r\n                        <ng-container *ngIf="col.field ==\'qtyToIssued\' && selectedPartActionType == \'Issue\'">\r\n                            <input type="number" class="form-control quantityTextBox text-right" pInputText pKeyFilter="num" required="col.field ==\'qtyToIssued\' && selectedPartActionType == \'Issue\'" name="qtyToIssued{{i}}" value="{{part.qtyToIssued}}"\r\n                                   [(ngModel)]="part.qtyToIssued" [disabled]="rowData.isSelected == false" />\r\n\r\n                        </ng-container>\r\n                        <span *ngIf="col.field ==\'qtyToIssued\' && selectedPartActionType != \'Issue\'" class="float-right" style="text-align: right;">\r\n                            {{part[col.field]}}\r\n\r\n                        </span>\r\n\r\n                        \x3c!-- /qtyToReserveAndIssue --\x3e\r\n                        \x3c!-- qtyToUnReserve --\x3e\r\n                        <ng-container *ngIf="col.field ==\'qtyToUnReserve\' && selectedPartActionType == \'Unreserve\'">\r\n                            <input type="number" class="form-control quantityTextBox text-right" pInputText pKeyFilter="num" required="col.field ==\'qtyToUnReserve\' && selectedPartActionType == \'Unreserve\'" name="qtyToUnReserve{{i}}" value="{{part.qtyToUnReserve}}"\r\n                                   [(ngModel)]="part.qtyToUnReserve" [disabled]="rowData.isSelected == false" />\r\n\r\n                        </ng-container>\r\n\r\n                        \x3c!-- /qtyToUnReserve --\x3e\r\n                        \x3c!-- qtyToUnIssued --\x3e\r\n                        \x3c!-- /qtyToUnIssued --\x3e\r\n\r\n\r\n                        <ng-container *ngIf="col.field ==\'reservedDate\'">\r\n                            <p-calendar class="pcal-cpo-grid"\r\n                                        [(ngModel)]="part.reservedDate"\r\n                                        name="reservedDate{{i}}"\r\n                                        [showIcon]="true" appendTo=\'body\' [baseZIndex]="9999" [disabled]="rowData.isSelected == false"></p-calendar>\r\n                        </ng-container>\r\n                        <ng-container *ngIf="col.field ==\'reservedById\'">\r\n                            <p-autoComplete class="p-autoComplete-ctsm"\r\n                                            [(ngModel)]="part.reservedById"\r\n                                            name="reservedById{{i}}"\r\n                                            id="reservedById"\r\n                                            title="Reserved By" appendTo=\'body\' [baseZIndex]="9999"\r\n                                            field="name"\r\n                                            required="selectedPartActionType == \'Reserve\' || selectedPartActionType == \'Reserve & Issue\' || selectedPartActionType == \'Unreserve\'"\r\n                                            [suggestions]="employeesList" [disabled]="rowData.isSelected == false"\r\n                                            (completeMethod)="filterReservedBy($event)"\r\n                                            [dropdown]="true">\r\n                            </p-autoComplete>\r\n                        </ng-container>\r\n\r\n\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="parts.length == 0">\r\n                <tr>\r\n                    <td [attr.colspan]="18" class="no-records-cstm" style="text-align: left;">\r\n                        No records found\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="submit" (click)="savereserveissuesparts(parts)" class="btn btn-success" [disabled]="!partActionsForm.valid || disableSubmitButtonForAction == true">\r\n            Save\r\n        </button>\r\n        <button type="button" (click)="onClose()" class="btn btn-danger">\r\n            Close\r\n        </button>\r\n    </div>\r\n</form>\r\n\r\n\r\n'},N9pX:function(e,t,r){"use strict";r.r(t),t.default='<div class="right_col" role="main">\r\n    <div class="x_content">\r\n        <div class="card new-card">\r\n            <div class="card-header bg-primary new-card-header">\r\n                <div class="row">\r\n                    <div class="col">\r\n                        <h4 class="new-card-heading">{{id ? \'Edit\' : \'Create\'}} Sales Order</h4>\r\n                    </div>\r\n                    <div class="col-md-9">\r\n                        <button class="btn-sm new-btn-primary pull-left" (click)="toggle_po_header=!toggle_po_header">\r\n                            {{toggle_po_header ? \'Collapse\' : \'Expand\'}}\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <button type="button" class="btn-sm new-btn-primary pull-right" matTooltipPosition="above"\r\n                            matTooltip="SO List" [routerLink]="[\'/salesmodule/salespages/sales-order-list\']">\r\n                            SO List\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                \x3c!-- <div class="pull-left">\r\n                    <h4 class="po-head m-0">{{id ? \'Edit\' : \'Create\'}} Sales Order</h4>\r\n                </div>\r\n                 <button class="btn btn-primary pull-right" (click)="toggle_po_header=!toggle_po_header">\r\n                    {{toggle_po_header ? \'See Less\' : \'See More...\'}}\r\n                </button> \r\n                <button class="btn btn-primary" (click)="toggle_po_header=!toggle_po_header" style="margin-left: 20px;">\r\n                    {{toggle_po_header ? \'Collapse\' : \'Expand\'}}\r\n                </button>\r\n                <button type="button" class="btn btn-primary pull-right" matTooltipPosition="above" matTooltip="SO List"\r\n                    [routerLink]="[\'/salesmodule/salespages/sales-order-list\']">\r\n                    SO List\r\n                </button> --\x3e\r\n            </div>\r\n            <div class="card" style="padding: 5px; margin: 5px;" *ngIf="!toggle_po_header">\r\n                <div class="form-row">\r\n                    <div class="form-row">\r\n                        <div class="col-md-3" style="padding-left:15px;">\r\n                            <div class="form-group">\r\n                                <label>Customer Name\r\n                                    <span class="clr-red">*</span>\r\n                                    <span style="color:blue" class="ng-star-inserted">\r\n                                        <a class="btn nobg" (click)="viewSelectedRow()" matTooltip="View"\r\n                                            matTooltipPosition="above"><i class="fa fa-eye"></i></a>\r\n                                    </span>\r\n                                </label>\r\n                                <input type="text" [(ngModel)]="salesQuote.customerName" name="customerName"\r\n                                    class="form-control" [disabled]="true" id="customerName" #customerName="ngModel" />\r\n                                <div *ngIf="customerName.invalid && (customerName.dirty || customerName.touched)"\r\n                                    class="alert alert-danger alert-danger-cstm">\r\n                                    <div *ngIf="customerName.errors.required">\r\n                                        <small>Customer Name is required </small>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3" style="padding-left:25px; padding-top:5px">\r\n                            <div class="form-group">\r\n                                <label>Customer Code</label>\r\n                                <input type="text" [(ngModel)]="salesQuote.customerCode" name="customerCode"\r\n                                    class="form-control" [disabled]="true" id="customerCode" #customerCode="ngModel" />\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3" style="padding-left:25px; padding-top:5px">\r\n                            <div class="form-group">\r\n                                <label>SO Num <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control" name="salesOrderNumber"\r\n                                    [(ngModel)]="salesQuote.salesOrderNumber" [disabled]="true" #accountTypeId="ngModel"\r\n                                    id="salesOrderNumber" #salesOrderNumber="ngModel" />\r\n                                <div *ngIf="salesOrderNumber.invalid && (salesOrderNumber.dirty || salesOrderNumber.touched)"\r\n                                    class="alert alert-danger alert-danger-cstm">\r\n                                    <div *ngIf="salesOrderNumber.errors.required">\r\n                                        <small> SO Num is required </small>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3" style="padding-left:25px; padding-top:5px">\r\n                            <div class="form-group">\r\n                                <label>SO Quote Num</label>\r\n                                <input type="text" class="form-control" [(ngModel)]="salesQuote.salesOrderQuoteNumber"\r\n                                    name="salesOrderQuoteNumber" [disabled]="true" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="form-controls">\r\n                <form #newSalesQuoteForm="ngForm" class="form-horizontal">\r\n                    <div class="card" style="padding: 5px; margin: 5px;" *ngIf="toggle_po_header">\r\n                        <div class="form-row  mb-2">\r\n                            <div class="form-row">\r\n                                <div class="col-md-6 main_ar">\r\n                                    <div class="form-row">\r\n                                        <div class="col-md-6" style="padding:10px;">\r\n                                            <div class=" form-group">\r\n                                                <label for="quoteTypeId">Sales Order Type <span\r\n                                                        class="clr-red">*</span></label>\r\n                                                <select name="quoteTypeId" [(ngModel)]="salesQuote.quoteTypeId" required\r\n                                                    id="quoteTypeId" #quoteTypeId="ngModel" [disabled]="isEdit">\r\n                                                    \x3c!-- <option *ngFor="let type of salesQuote.salesQuoteTypes"\r\n                                                        [ngValue]="type.id">\r\n                                                        {{ type.name }}</option> --\x3e\r\n                                                        <option *ngFor="let item of soTypeList" [ngValue]="item.value">\r\n                                                            {{ item.label }}</option>\r\n                                                </select>\r\n                                                <div *ngIf="quoteTypeId.invalid && (quoteTypeId.dirty || quoteTypeId.touched)"\r\n                                                    class="alert alert-danger alert-danger-cstm">\r\n                                                    <div *ngIf="quoteTypeId.errors.required">\r\n                                                        <small> So Type is required </small>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group" style="padding-top: 5px;">\r\n                                                <label>SO Num <span class="clr-red">*</span></label>\r\n                                                <input type="text" class="form-control" name="salesOrderNumber"\r\n                                                    [(ngModel)]="salesQuote.salesOrderNumber" [disabled]="true"\r\n                                                    #accountTypeId="ngModel" id="salesOrderNumber"\r\n                                                    #salesOrderNumber="ngModel" />\r\n                                                <div *ngIf="salesOrderNumber.invalid && (salesOrderNumber.dirty || salesOrderNumber.touched)"\r\n                                                    class="alert alert-danger alert-danger-cstm">\r\n                                                    <div *ngIf="salesOrderNumber.errors.required">\r\n                                                        <small> SO Num is required </small>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>SO Quote Num</label>\r\n                                                <input type="text" class="form-control"\r\n                                                    [(ngModel)]="salesQuote.salesOrderQuoteNumber"\r\n                                                    name="salesOrderQuoteNumber" [disabled]="true" />\r\n                                            </div>\r\n                                            <div class="form-group" *ngIf="salesQuote.salesOrderQuoteNumber">\r\n                                                <label>Version Num</label>\r\n                                                <input type="text" [(ngModel)]="salesQuote.versionNumber"\r\n                                                    name="versionNumber" class="form-control" [disabled]="true"\r\n                                                    id="versionNumber" #versionNumber="ngModel" />\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Open Date<span class="clr-red">*</span></label>\r\n                                                <p-calendar name="openDate" [yearNavigator]="true"\r\n                                                    [monthNavigator]="true" yearRange="1900:2100"\r\n                                                    [(ngModel)]="salesQuote.openDate" [showIcon]="true" id="openDate"\r\n                                                    #openDate="ngModel" required (onSelect)="onChangeOpenDate()">\r\n                                                </p-calendar>\r\n                                                <div *ngIf="openDate.invalid && (openDate.dirty || openDate.touched)"\r\n                                                    class="alert alert-danger alert-danger-cstm">\r\n                                                    <div *ngIf="openDate.errors.required">\r\n                                                        <small> Open Date is required </small>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group" *ngIf="!salesQuote.salesOrderQuoteNumber">\r\n                                                <label>SO Status</label>\r\n                                                <select name="status" [(ngModel)]="salesQuote.statusId"\r\n                                                    [disabled]="true" #statusId="ngModel">\r\n                                                    <option value=\'-1\'>--Select</option>\r\n                                                    <option *ngFor="let item of soStatusList" [ngValue]="item.value">\r\n                                                        {{ item.label }}</option>\r\n                                                </select>\r\n                                                <div *ngIf="statusId.invalid && (statusId.dirty || statusId.touched)"\r\n                                                    class="alert alert-danger alert-danger-cstm">\r\n                                                    <div *ngIf="statusId.errors.required">\r\n                                                        <small> Status is required </small>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label></label>\r\n                                                <div class="col-md-6">\r\n                                                    <label>\r\n                                                        <input type="checkbox" [(ngModel)]="salesQuote.restrictPMA"\r\n                                                            name="restrictPMA" id="restrictPMA" [disabled]="true" />\r\n                                                        Restrict PMA\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="col-md-6">\r\n                                                    <label>\r\n                                                        <input type="checkbox" [(ngModel)]="salesQuote.restrictDER"\r\n                                                            name="restrictDER" id="restrictDER" [disabled]="true" />\r\n                                                        Restrict DER\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-6" style="padding:10px">\r\n                                            <div class="form-group">\r\n                                                <label for="accountTypeId">Account Type <span\r\n                                                        class="clr-red">*</span></label>\r\n                                                <select name="accountTypeId" required\r\n                                                    [(ngModel)]="salesQuote.accountTypeId" id="accountTypeId"\r\n                                                    #accountTypeId="ngModel" [disabled]="isEdit">\r\n                                                    <option *ngFor="let accountType of accountTypes"\r\n                                                        [ngValue]="accountType.value">\r\n                                                        {{ accountType.label }}\r\n                                                    </option>\r\n                                                </select>\r\n                                                <div *ngIf="accountTypeId.invalid && (accountTypeId.dirty || accountTypeId.touched)"\r\n                                                    class="alert alert-danger alert-danger-cstm">\r\n                                                    <div *ngIf="accountTypeId.errors.required">\r\n                                                        <small> Account Type is required </small>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Customer Name\r\n                                                    <span class="clr-red">*</span>\r\n                                                    <span style="color:blue" class="ng-star-inserted">\r\n                                                        <a class="btn nobg" (click)="viewSelectedRow()"\r\n                                                            matTooltip="View" matTooltipPosition="above"><i\r\n                                                                class="fa fa-eye"></i></a>\r\n                                                    </span>\r\n                                                </label>\r\n                                                <input type="text" [(ngModel)]="salesQuote.customerName"\r\n                                                    name="customerName" class="form-control" [disabled]="true"\r\n                                                    id="customerName" #customerName="ngModel" />\r\n                                                <div *ngIf="customerName.invalid && (customerName.dirty || customerName.touched)"\r\n                                                    class="alert alert-danger alert-danger-cstm">\r\n                                                    <div *ngIf="customerName.errors.required">\r\n                                                        <small>Customer Name is required </small>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Customer Contact<span class="clr-red">*</span></label>\r\n                                                <select [(ngModel)]="salesQuote.customerContactId" required\r\n                                                    (change)="onChangeInput()" [ngModelOptions]="{standalone: true}"\r\n                                                    name="customerContactId" id="customerContactId"\r\n                                                    #customerContactId="ngModel">\r\n                                                    <option value=\'-1\'>--Select</option>\r\n                                                    <option *ngFor="let contact of customerContactList"\r\n                                                        [ngValue]="contact.contactId">\r\n                                                        {{contact.firstName}} {{contact.lastName}} -\r\n                                                        {{ contact.workPhone }}\r\n                                                    </option>\r\n                                                </select>\r\n                                                <div *ngIf="customerContactId.invalid && (customerContactId.dirty || customerContactId.touched)"\r\n                                                    class="alert alert-danger alert-danger-cstm">\r\n                                                    <div *ngIf="customerContactId.errors.required">\r\n                                                        <small> Customer Contact is required </small>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Email</label>\r\n                                                <input type="text" class="form-control"\r\n                                                    [(ngModel)]="salesQuote.customerEmail" name="customerEmail"\r\n                                                    [disabled]="true" />\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Credit Limit &amp; terms<span class="clr-red">*</span></label>\r\n                                                <div class="col-md-5">\r\n                                                    <input type="text" class="form-control" style="text-align:right;"\r\n                                                        name=" creditLimit"\r\n                                                        [ngModel]="salesQuote.creditLimit | twoDecimalGlobalNumberFormatPipe"\r\n                                                        (ngModelChange)="salesQuote.creditLimit=$event" required\r\n                                                        [disabled]="true" />\r\n                                                </div>\r\n                                                <div class="col-md-7">\r\n                                                    <select name="creditLimitTermsId"\r\n                                                        [(ngModel)]="salesQuote.creditLimitTermsId" [disabled]="true"\r\n                                                        required>\r\n                                                        <option value=\'-1\'>--Select</option>\r\n                                                        <option *ngFor="let ct of creditTerms" [ngValue]="ct.value">\r\n                                                            {{ ct.label }}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group" style="padding-top:24px;">\r\n                                                <label>AR Balance </label>\r\n                                                <input type="text" class="form-control" style="text-align:right;"\r\n                                                    name="balanceDue"\r\n                                                    [ngModel]="salesQuote.balanceDue | twoDecimalGlobalNumberFormatPipe"\r\n                                                    (ngModelChange)="salesQuote.balanceDue=$event" [disabled]="true" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-6 main_ar">\r\n                                    <div class="form-row">\r\n                                        <div class="col-md-6" style="padding:10px;">\r\n                                            <div class="form-group">\r\n                                                <label>Salesperson/Agent</label>\r\n                                                <p-autoComplete class="autocomp-customer-cstm" name="salesPersonName"\r\n                                                    [(ngModel)]="salesQuote.salesPersonName"\r\n                                                    [suggestions]="salesFirstCollection" [forceSelection]="true"\r\n                                                    emptyMessage="No Match Found" field="name"\r\n                                                    (completeMethod)="filterSalesFirstName($event)" [size]="30"\r\n                                                    [minLength]="1" [dropdown]="true">\r\n                                                </p-autoComplete>\r\n                                            </div>\r\n                                            <div class="form-group" style="padding-top: 5px;">\r\n                                                <label>CSR</label>\r\n                                                <p-autoComplete class=" autocomp-customer-cstm"\r\n                                                    name="customerServiceRepName" id="customerServiceRepName"\r\n                                                    #customerServiceRepName="ngModel"\r\n                                                    [(ngModel)]="salesQuote.customerServiceRepName"\r\n                                                    [suggestions]="csrFirstCollection" [forceSelection]="true"\r\n                                                    emptyMessage="No Match Found" field="name"\r\n                                                    (completeMethod)="filtercsrFirstName($event)" [size]="30"\r\n                                                    [minLength]="1" [dropdown]="true">\r\n                                                </p-autoComplete>\r\n                                                <div *ngIf="customerServiceRepName.invalid && (customerServiceRepName.dirty || customerServiceRepName.touched)"\r\n                                                    class="alert alert-danger alert-danger-cstm">\r\n                                                    <div *ngIf="customerServiceRepName.errors.required">\r\n                                                        <small> CSR is required </small>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Employee<span class="clr-red">*</span></label>\r\n                                                <p-autoComplete class="autocomp-customer-cstm" name="employeeId"\r\n                                                    [(ngModel)]="salesQuote.employeeId"\r\n                                                    [suggestions]="firstCollection" [forceSelection]="true"\r\n                                                    #employeeId="ngModel" emptyMessage="No Match Found" field="label"\r\n                                                    (completeMethod)="filterfirstName($event)" [size]="30"\r\n                                                    [minLength]="1" [dropdown]="true" required>\r\n                                                </p-autoComplete>\r\n                                                <div *ngIf="employeeId.invalid && (employeeId.dirty || employeeId.touched)"\r\n                                                    class="alert alert-danger alert-danger-cstm">\r\n                                                    <div *ngIf="employeeId.errors.required">\r\n                                                        <small> Employee is required </small>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Contract Ref</label>\r\n                                                <input type="text" class="form-control" name="contractReferenceName"\r\n                                                    [(ngModel)]="salesQuote.contractReferenceName" [disabled]="true"\r\n                                                    (change)="onChangeInput()" />\r\n                                            </div>\r\n                                            <div class="form-group" *ngIf="salesQuote.salesOrderQuoteNumber">\r\n                                                <label>SO Status</label>\r\n                                                <select name="status" [(ngModel)]="salesQuote.statusId"\r\n                                                    (change)="onChangeInput()" [disabled]="true" #statusIds="ngModel">\r\n                                                    <option value=\'-1\'>--Select</option>\r\n                                                    \x3c!-- <ng-container *ngFor="let s of salesQuote.status">\r\n                                                        <option *ngIf="s.displayInDropdown" [ngValue]="s.id">\r\n                                                            {{ s.name }}</option>\r\n                                                    </ng-container> --\x3e\r\n                                                    <option *ngFor="let item of soStatusList" [ngValue]="item.value">\r\n                                                        {{ item.label }}</option>\r\n                                                </select>\r\n                                                <div *ngIf="statusIds.invalid && (statusIds.dirty || statusIds.touched)"\r\n                                                    class="alert alert-danger alert-danger-cstm">\r\n                                                    <div *ngIf="statusIds.errors.required">\r\n                                                        <small> Status is required </small>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-6" style="padding:10px; padding-right:20px">\r\n                                            <div class="card">\r\n                                                <div class="card-header" style="padding:.3rem 1rem">\r\n                                                    <label style="text-align: center">Margin Summary</label>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <label\r\n                                                        style="padding-left: 5px; padding-right:5px; font-weight: normal">Sales<span\r\n                                                            style="float: right">{{marginSummary.sales |twoDecimalGlobalNumberFormatPipe}}</span></label>\r\n                                                    <label\r\n                                                        style="padding-left: 5px; padding-right:5px; font-weight: normal">Misc\r\n                                                        Amt<span\r\n                                                            style="float: right">{{marginSummary.misc| twoDecimalGlobalNumberFormatPipe}}</span></label>\r\n                                                    <label\r\n                                                        style="padding-left: 5px; padding-right:5px; font-weight: normal">Net\r\n                                                        Sales<span\r\n                                                            style="float: right">{{marginSummary.netSales | twoDecimalGlobalNumberFormatPipe}}</span></label>\r\n                                                    <label\r\n                                                        style="padding-left: 5px; padding-right:5px; font-weight: normal">Product\r\n                                                        Cost<span\r\n                                                            style="float: right">{{marginSummary.productCost | twoDecimalGlobalNumberFormatPipe}}</span></label>\r\n                                                    <label\r\n                                                        style="padding-left: 5px; padding-right:5px; font-weight: normal">Margin\r\n                                                        Amt<span\r\n                                                            style="float: right">{{marginSummary.marginAmount | twoDecimalGlobalNumberFormatPipe}}</span></label>\r\n                                                    <label\r\n                                                        style="padding-left: 5px; padding-right:5px; font-weight: normal">Margin\r\n                                                        %<span\r\n                                                            style="float: right">{{marginSummary.marginPercentage | twoDecimalGlobalNumberFormatPipe}}</span></label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div style="padding-top: 10px"></div>\r\n                                            <div>\r\n                                                \x3c!-- <app-management-structure [salesQuote]="salesQuote"\r\n                                                    [managementStructureId]="managementStructureId">\r\n                                                </app-management-structure> --\x3e\r\n                                                <div class="card" style="margin-top: 20px;">\r\n                                                    <div class="card-header" style="padding: 10px 12px;">\r\n                                                        <h5 style="margin-bottom: 0; font-size: 12px;">Management\r\n                                                            Structure <span class="clr-red">*</span></h5>\r\n\r\n                                                    </div>\r\n                                                    <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                                        <div class="form-group">\r\n                                                            <select\r\n                                                                [ngClass]="managementValidCheck ? \'select-validate-cstm\' : \'\'"\r\n                                                                class="form-control" name="primaryCompany"\r\n                                                                [(ngModel)]="salesQuote.companyId"\r\n                                                                (change)="getBUList(salesQuote.companyId); checkValidOnChange(salesQuote.companyId, \'companyId\');"\r\n                                                                #mCompanyName (ngModelChange)="enableHeaderSave()"\r\n                                                                required>\r\n                                                                <option value="0">Select</option>\r\n                                                                <option *ngFor="let name of maincompanylist"\r\n                                                                    [ngValue]="name.value">{{name.label}}</option>\r\n                                                            </select>\r\n                                                            <div *ngIf="mCompanyName.invalid && (mCompanyName.dirty || mCompanyName.touched)"\r\n                                                                class="alert alert-danger alert-danger-cstm">\r\n                                                                <div *ngIf="mCompanyName.errors.required">\r\n                                                                    <small> Company Name is required </small>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class="form-group">\r\n                                                            <select [(ngModel)]="salesQuote.buId" name="primaryBU"\r\n                                                                (change)="getDivisionlist(salesQuote.buId)"\r\n                                                                class="form-control"\r\n                                                                (ngModelChange)="enableHeaderSave()">\r\n                                                                <option value="0">Select</option>\r\n                                                                <option *ngFor="let name of bulist"\r\n                                                                    [ngValue]="name.value">{{name.label}}</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                        <div class="form-group">\r\n                                                            <select class="form-control"\r\n                                                                [(ngModel)]="salesQuote.divisionId"\r\n                                                                name="primaryDivision"\r\n                                                                (change)="getDepartmentlist(salesQuote.divisionId)"\r\n                                                                (ngModelChange)="enableHeaderSave()">\r\n                                                                <option value="0">Select</option>\r\n                                                                <option *ngFor="let name of divisionlist"\r\n                                                                    [ngValue]="name.value">{{name.label}}</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                        <div class="form-group">\r\n                                                            <select class="form-control"\r\n                                                                [(ngModel)]="salesQuote.departmentId" name="primaryDept"\r\n                                                                (change)="getDepartmentId(salesQuote.departmentId)"\r\n                                                                (ngModelChange)="enableHeaderSave()">\r\n                                                                <option value="0">Select</option>\r\n                                                                <option *ngFor="let name of departmentList"\r\n                                                                    [ngValue]="name.value">{{name.label}}</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-row mb-2">\r\n                            <div class="col-md-4 main_ar">\r\n                                <div class="form-group" style="padding-left: 5px;">\r\n                                    <label>Customer Warning</label>\r\n                                    <textarea name="warningId" class="form-control"\r\n                                        style="height: 100px !important; width:90% !important; color: #d42c2c !important;"\r\n                                        disabled\r\n                                        value="{{customerWarning.warningMessage}}">{{customerWarning.warningMessage}}</textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-4 main_ar">\r\n                                <div class="form-group memo-popup-cstm">\r\n                                    <label>\r\n\r\n                                        Notes<i class=" fa fa-pencil" data-toggle="modal" data-target="#add-description"\r\n                                            matTooltipPosition="above" matTooltip="Add Notes"\r\n                                            (click)="onAddDescription(\'notes\')"></i>\r\n                                    </label>\r\n                                    <span>\r\n                                        <div class="form-group memo-popup-cstm mat_emo">\r\n\r\n                                            <div [innerHTML]="salesQuote.notes"\r\n                                                [matTooltip]="parsedText(salesQuote.notes)" matTooltipPosition="above"\r\n                                                class="form-control"\r\n                                                style="height: 100px !important; width:90% !important"\r\n                                                class="text_editor_box">\r\n                                            </div>\r\n                                        </div>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-4 main_ar">\r\n                                <div class="form-group memo-popup-cstm">\r\n                                    <label>\r\n\r\n                                        Memo<i class=" fa fa-pencil" data-toggle="modal" data-target="#add-description"\r\n                                            matTooltipPosition="above" matTooltip="Add Memo"\r\n                                            (click)="onAddDescription(\'memo\')"></i>\r\n                                    </label>\r\n                                    <span>\r\n                                        <div class="form-group memo-popup-cstm mat_emo">\r\n                                            <div [innerHTML]="salesQuote.memo"\r\n                                                [matTooltip]="parsedText(salesQuote.memo)" matTooltipPosition="above"\r\n                                                class="form-control" style="height: 100px !important;width:90%"\r\n                                                class="text_editor_box">\r\n                                            </div>\r\n                                        </div>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-12">\r\n                            <button type="submit" *ngIf="((!isEdit && !isCreateModeHeader))" (click)="onSubmit(true)"\r\n                                [disabled]="!newSalesQuoteForm.form.valid"\r\n                                class="btn pull-right submit-btn btn btn-primary">\r\n                                Submit\r\n                            </button>\r\n                            <button type="submit" *ngIf="((isEdit && !isCreateModeHeader))||isHeaderSubmit"\r\n                                [disabled]="enableUpdateButton" (click)="openConfirmationModal(true)"\r\n                                class="btn pull-right submit-btn btn btn-primary">\r\n                                Update\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div class="card" style="padding: 5px; margin: 5px;" *ngIf="isEdit">\r\n                        <div class="x_panel">\r\n                            <ng-container *ngIf="((isCreateModeHeader||isEdit))">\r\n                                <app-sales-order-actions [is-edit-mode]="isEdit" [control-settings]="controlSettings"\r\n                                    [customer-id]="customerId" [sales-order-id]="id" [router]="router"\r\n                                    (on-click)="onSalesOrderActionClick($event)">\r\n                                </app-sales-order-actions>\r\n                            </ng-container>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <ng-container *ngIf="isEmailTabEnabled ">\r\n                        <button type="button" (click)="isEmailTabEnabled = false"\r\n                            class="btn pull-right submit-btn btn btn-danger">\r\n                            Close\r\n                        </button>\r\n                        <div class="clearfix mb-1"></div>\r\n                    </ng-container>\r\n                    <ng-container *ngIf="((isCreateModeHeader||isEdit) && isEmailTabEnabled )">\r\n                        <div *ngIf="(selectedCommunicationTab == \'memo\')">\r\n                            <app-m-memo [SalesOrderId]="id" [selectedParts]="selectedParts"\r\n                                [customerInfoFromSalesQuote]="customerInfoFromSalesQuote"\r\n                                [customerContactList]="customerContactList"></app-m-memo>\r\n                        </div>\r\n                        <div *ngIf="(selectedCommunicationTab == \'email\')">\r\n                            <app-e-email [SalesOrderId]="id" [customerInfoFromSalesQuote]="customerInfoFromSalesQuote"\r\n                                [customerContactList]="customerContactList"></app-e-email>\r\n                        </div>\r\n                        <div *ngIf="(selectedCommunicationTab == \'text\')">\r\n                            <app-text [SalesOrderId]="id" [selectedParts]="selectedParts"\r\n                                [customerInfoFromSalesQuote]="customerInfoFromSalesQuote"\r\n                                [customerContactList]="customerContactList"></app-text>\r\n                        </div>\r\n                        <div *ngIf="(selectedCommunicationTab == \'phone\')">\r\n                            <app-phone [SalesOrderId]="id" [selectedParts]="selectedParts"\r\n                                [customerInfoFromSalesQuote]="customerInfoFromSalesQuote"\r\n                                [customerContactList]="customerContactList"></app-phone>\r\n                        </div>\r\n                        <div *ngIf="(selectedCommunicationTab == \'Quotemail\')">\r\n                            <app-email [SalesOrderId]="id" [customerInfoFromSalesQuote]="customerInfoFromSalesQuote"\r\n                                [customerContactList]="customerContactList"></app-email>\r\n                        </div>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngIf="((isCreateModeHeader||isEdit) && !isEmailTabEnabled)">\r\n                        <p-tabView class="pas-tabview" (onChange)="onTabChange($event)">\r\n                            <p-tabPanel header="Parts List" [selected]="true">\r\n                                <app-sales-order-part-number [salesQuote]="salesQuote" [salesOrderId]="id"\r\n                                    [employeesList]="employeesList" [isViewMode]="false" [customer]="customerDetails"\r\n                                    [salesOrderView]="salesOrderView" (on-parts-save)="onPartsSaveEvent($event)"\r\n                                    [totalCharges]="totalCharges" [totalFreights]="totalFreights"\r\n                                    [defaultSettingPriority]="defaultSettingPriority">\r\n                                </app-sales-order-part-number>\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Internal Approvers">\r\n                                <app-sales-order-approve>\r\n                                </app-sales-order-approve>\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Approver Process">\r\n                                <app-sales-order-customer-approval *ngIf="isEdit" [customer-id]="customerId"\r\n                                    [sales-order-id]="id" [status]="status" [customer-contacts]="customerContactList"\r\n                                    [customerContactList]="customerContactList"\r\n                                    (on-part-approved-event)="onPartsApprovedEvent()">\r\n                                </app-sales-order-customer-approval>\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Address">\r\n                                <app-address-component [addressType]="addressType" [id]="SalesOrderId">\r\n\r\n                                </app-address-component>\r\n                                \x3c!-- <app-sales-address [customerId]="customerId" [salesQuote]="salesQuote"\r\n                                    [salesOrderView]="salesOrderView" [salesOrderQuote]="salesOrderQuote">\r\n                                </app-sales-address> --\x3e\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Freight">\r\n                                <app-sales-order-freight [freightForm]="freight" [customerId]="customerId"\r\n                                    [salesOrderQuoteId]="salesQuote.salesOrderQuoteId" [salesOrderId]="id"\r\n                                    (saveFreightListForSO)="saveSalesOrderFreightsList($event)"\r\n                                    (updateFreightListForSO)="updateSalesOrderFreightsList($event)"\r\n                                    (refreshData)="getFreightList()" [isView]="false" [isQuote]="false">\r\n                                </app-sales-order-freight>\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Charges">\r\n                                <app-sales-order-charges [chargeForm]="charge" [customerId]="customerId"\r\n                                    [salesOrderQuoteId]="salesQuote.salesOrderQuoteId" [salesOrderId]="id"\r\n                                    (saveChargesListForSO)="saveSalesOrderChargesList($event)"\r\n                                    (updateChargesListForSO)="updateSalesOrderChargesList($event)"\r\n                                    (refreshData)="getChargesList()" [isView]="false" [isQuote]="false">\r\n                                </app-sales-order-charges>\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Shipping">\r\n                                <app-sales-order-shipping [parts]="selectedParts" [salesOrderId]="id"\r\n                                    [customerDetails]="customerDetails" [salesOrder]="salesQuote"\r\n                                    [managementStructureId]="managementStructureId">\r\n                                </app-sales-order-shipping>\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Billing/Invoicing">\r\n                                <app-sales-order-billing [parts]="selectedParts" [salesOrderId]="id"\r\n                                    [salesOrder]="salesQuote">\r\n                                </app-sales-order-billing>\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Document">\r\n                                \x3c!-- <app-sales-order-document [viewMode]="false" [salesOrderId]="id" [isEditMode]="true">\r\n                                </app-sales-order-document> \r\n                            [generalInformtionData]="savedGeneralInformationData ? savedGeneralInformationData : editGeneralInformationData"--\x3e\r\n                                <app-common-documents [moduleName]="moduleName" [referenceId]="id" [isViewMode]="false"\r\n                                    [offLineUpload]="true"></app-common-documents>\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Analysis">\r\n                                <app-sales-order-analysis></app-sales-order-analysis>\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Communication">\r\n                                \x3c!-- [ContactList]="customerContactList" --\x3e\r\n                                <app-communication [moduleName]="moduleName" [idForContact]="customerId" [type]="1"\r\n                                    [referenceId]="id"></app-communication>\r\n                            </p-tabPanel>\r\n                        </p-tabView>\r\n\r\n                    </ng-container>\r\n\r\n\r\n                    <div class="card-footer" style="text-align: right;" *ngIf="((isCreateModeHeader||isEdit))">\r\n                        <div class="col-md-1 col-sm-1 col-1">\r\n                            &nbsp;\r\n                        </div>\r\n                        <div class="col-md-11 col-sm-11 col-11">\r\n                            <button type="submit" *ngIf="!isEdit" class="btn pull-right submit-btn btn btn-primary"\r\n                                (click)="onSubmit(false)" [disabled]="!newSalesQuoteForm.form.valid">Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="add-description" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-lg" style="max-width: 400px !important;">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Edit {{tempMemoLabel}}</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                        <th style="color: #fff;">{{tempMemoLabel}}</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <p-editor [(ngModel)]="tempMemo" [style]="{\'height\':\'320px\'}" name="tempMemo" required>\r\n                                </p-editor>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div style="float:right">\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                        style="padding: 6px 12px !important;margin-top: 10px;" (click)="onSaveDescription()">\r\n                        Save\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger" style="padding: 6px 12px !important;margin-top: 10px;"\r\n                        data-dismiss="modal">\r\n                        Close\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #updateConfirmationModal let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeConfirmationModal()">&times;</button>\r\n        <h4 class="modal-title">Do you want to create new version or update existing sales order ?</h4>\r\n    </div>\r\n    <div class="modal-footer">\r\n\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n            (click)="closeConfirmationModal()">Cancel</button>\r\n        <button type="button" class="btn btn-secondary" data-dismiss="modal"\r\n            (click)="createNewSalesOrderQuoteVersion()">\r\n            Create New Version\r\n        </button>\r\n        <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n            (click)="updateSalesOrderQuote()">Update</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #errorMessagePop let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeErrorMessage()">&times;</button>\r\n        <h4 class="modal-title"> Please Enter (*) Mandatory Fields</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <p *ngFor="let error of errorMessages" [ngStyle]="{\'color\':\'red\'}"> {{ error }} </p>\r\n    </div>\r\n    <div class="modal-footer">\r\n\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeErrorMessage()">Close</button>\r\n    </div>\r\n</ng-template>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #viewQuote let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" (click)="dismissModel()">\r\n            &times;\r\n        </button>\r\n        <h4 class="modal-title">Details of Quote</h4>\r\n    </div>\r\n\r\n    <div class="modal-body" *ngIf="salesQuote">\r\n        <app-sales-quote-view [customerId]="customerId" [salesQuoteId]="salesOrderQuote.salesOrderQuoteId"\r\n            [salesQuoteView]="salesQuoteView"></app-sales-quote-view>\r\n    </div>\r\n\r\n\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n    </div>\r\n\r\n</ng-template>'},NSO6:function(e,t,r){"use strict";r.r(t),t.default='<div class="form-group">\r\n  <div class="row" *ngIf="!isView" style="padding:8px 0px;">\r\n    \x3c!-- <button data-target="#addNewCharges" data-toggle="modal" (click)="createNew()" class="btn btn-primary"\r\n      style="margin-left: 10px;">\r\n      Add Charges\r\n    </button> --\x3e\r\n    <div class="card-header bg-primary" style="width: 100%; padding: 0.1rem 1.25rem 0.1rem 1.25rem;">\r\n      <div class="row">\r\n        <div class="col">\r\n          <h4 class="new-card-heading" style="font-size: 16px; line-height: 2;">  Charges</h4>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type="button"\r\n            class="btn-sm new-btn-primary" data-target="#addNewCharges" data-toggle="modal" (click)="createNew()">\r\n            Add Charges\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class="row "  [ngClass]="(isView) ? \'pull-right\' : \'\'">\r\n    <div class="checkbox-cstm show_cst">\r\n      <label style="width: auto !important;margin-top: 3px;">\r\n          <input type="checkbox" [(ngModel)]="deletedStatusInfo" name="cparent55" id="cparent55" (click)="getDeleteListByStatus($event.target.checked)" />\r\n          <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n          Show Deleted List\r\n      </label>\r\n    </div>\r\n  </div>\r\n  <div class="clearfix"></div>\r\n    <p-table [columns]="cols" [value]="salesOrderChargesList" [lazy]="false" [paginator]="true" [rows]="10"\r\n      class="rpo-table-cstm ptable-f10" [paginator]="true">\r\n      \x3c!--chargess--\x3e\r\n      <ng-template pTemplate="header" let-columns>\r\n        <tr>\r\n          <th colspan="7" style="background: #4298ff !important;\r\n          color:#fff !important; border: 1px solid #fff;border-right: 1px solid #e7ecf1;">\r\n            &nbsp;\r\n          </th>\r\n          <ng-container *ngIf="isView">\r\n            <th colspan="4" style="background: #4298ff !important;\r\n            color:#fff !important; border: 1px solid #e7ecf1;padding-left: 5px;">\r\n              <div class="display-flex" style="background: #4298ff; padding-left: 10px;">\r\n                <div class="form-group" style="text-align: center; display: flex;    margin-bottom: 0px;">\r\n                  <p-radioButton class="p-radiobutton-label-horizontal p-radiobutton-label-w92" name="costPlusType"\r\n                    label="T&M - Mark Up" value="1" [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()">\r\n                  </p-radioButton>\r\n                  <div>\r\n                    <select class="form-group select-markup" (change)="markupChanged({}, \'all\')"\r\n                      [(ngModel)]="overAllMarkup" id="hideDisabled" [disabled]="isView || costPlusType != 1" style="margin-top: 10px;">\r\n                      <option value="" selected>Select</option>\r\n                      <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div style="float: left; margin-bottom: 7px; margin-left: 4px; margin-right: 4px;">\r\n                  <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType" value="2" label="Actual"\r\n                    [(ngModel)]="costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'"></p-radioButton>\r\n                </div>\r\n                <div>\r\n                  <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType" value="3" label="Flat Rate"\r\n                    [(ngModel)]="costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'">\r\n                  </p-radioButton>\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th style="background: #4298ff !important;\r\n            color:#fff !important;"></th>\r\n          </ng-container>\r\n          <ng-container *ngIf="!isView">\r\n            <th colspan="4" style="background: #fff; border: 1px solid #e7ecf1;padding: 0;">\r\n              <div class="display-flex" style="    background: #4298ff;    padding-left: 10px;">\r\n                <div class="form-group" style="text-align: center; display: flex;    margin-bottom: 0px;">\r\n                  <p-radioButton class="p-radiobutton-label-horizontal sales-quote-radio p-radiobutton-label-w92" name="costPlusType"\r\n                    label="T&M - Mark Up" value="1" (ngModelChange)="validated()" [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()">\r\n                  </p-radioButton>\r\n                  <div>\r\n                    <select class="form-group select-markup" (change)="markupChanged({}, \'all\')"\r\n                      [(ngModel)]="overAllMarkup" (ngModelChange)="validated()" [disabled]="isView || costPlusType != 1" style="margin-top: 10px;">\r\n                      <option value="" selected>Select</option>\r\n                      <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div style="float: left; margin-bottom: 7px; margin-left: 4px; margin-right: 4px;">\r\n                  <p-radioButton class="p-radiobutton-label-horizontal sales-quote-radio" name="costPlusType" value="2" label="Actual"\r\n                    [(ngModel)]="costPlusType" (ngModelChange)="validated()" [disabled]="isView" (click)="tmchange()"></p-radioButton>\r\n                </div>\r\n                <div>\r\n                  <p-radioButton class="p-radiobutton-label-horizontal sales-quote-radio" name="costPlusType" value="3" label="Flat Rate"\r\n                    [(ngModel)]="costPlusType" (ngModelChange)="validated()" [disabled]="isView" (click)="(!isView)?tmchange():\'\'">\r\n                  </p-radioButton>\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th style="background: #4298ff !important;\r\n            color:#fff !important;"></th>\r\n          </ng-container>\r\n        </tr>\r\n        <tr>\r\n          <th rowspan="2" style="background-color: #4298ff !important;\r\n          color: #fff !important;">Type<span class="clr-red">*</span></th>\r\n          <th rowspan="2" style="background-color: #4298ff !important;\r\n          color: #fff !important;">Description</th>\r\n          <th rowspan="2" style="background-color: #4298ff !important;\r\n          color: #fff !important;">Qty<span class="clr-red">*</span></th>\r\n          <th rowspan="2" style="background-color: #4298ff !important;\r\n          color: #fff !important;">Ref Num</th>\r\n          <th rowspan="2" style="background-color: #4298ff !important;\r\n          color: #fff !important;">Unit Cost<span class="clr-red">*</span></th>\r\n          <th rowspan="2" style="background-color: #4298ff !important;\r\n          color: #fff !important;">Extended Cost<span class="clr-red">*</span></th>\r\n          <th rowspan="2" style="background-color: #4298ff !important;\r\n          color: #fff !important;">Vendor Name</th>\r\n          <ng-container>\r\n            <th rowspan="2" style="background-color: #4298ff !important;\r\n            color: #fff !important;">Billing Method</th>\r\n            <th rowspan="2" style="background-color: #4298ff !important;\r\n            color: #fff !important;">Mark Up</th>\r\n            <th rowspan="2" style="background-color: #4298ff !important;\r\n            color: #fff !important;">Billing Rate</th>\r\n            <th rowspan="2" style="background-color: #4298ff !important;\r\n            color: #fff !important;">Billing Amount</th>\r\n          </ng-container>\r\n          <th rowspan="2"  style="background-color: #4298ff !important;\r\n          color: #fff !important;">Actions</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="body" let-charge let-columns="columns" let-rowIndex="rowIndex">\r\n        <tr >\r\n          <td>\r\n            <select class="form-control custom-select wf-pub-id" id="hideDisabled" [(ngModel)]="charge.chargesTypeId"\r\n              style="width: 130px;" name="type_{{rowIndex}}" [disabled]="true">\r\n              <option [value]="0">Select</option>\r\n              <option [value]="ctype.chargeId" *ngFor="let ctype of chargesTypes">{{\r\n                ctype.chargeType\r\n              }}</option>\r\n            </select>\r\n          </td>\r\n          <td>\r\n            {{charge.description}}\r\n          </td>\r\n          <td style="text-align: right;">\r\n            {{charge.quantity | globalNmberFormat}}\r\n          </td>\r\n          <td>\r\n            {{charge.refNum}}\r\n          </td>\r\n          <td style="text-align: right;">\r\n            {{charge.unitCost | twoDecimalGlobalNumberFormatPipe}}\r\n          </td>\r\n          <td style="text-align: right;">\r\n            {{charge.extendedCost | twoDecimalGlobalNumberFormatPipe}}\r\n          </td>\r\n          \x3c!-- <td>\r\n            {{getVendorNameById(charge.vendorId)}}\r\n          </td> --\x3e\r\n          <td>\r\n            {{charge.vendor ? charge.vendor.vendorName : \'\'}}\r\n          </td>\r\n          <ng-container>\r\n            <td>\r\n              <select class="form-control"  (ngModelChange)="validated()" [(ngModel)]="charge.billingMethodId" [disabled]="isView || costPlusType == 3"\r\n                (change)="charge.markupPercentageId = \'\';charge.billingRate = 0;charge.billingAmount = 0;(charge.billingMethodId == \'2\')?charge.billingAmount = charge.extendedCost:\'\';">\r\n                <option value="" selected>Select</option>\r\n                <option *ngFor="let bm of [{\'label\': \'T&M\', \'value\': \'1\'}, {\'label\': \'Actual\', \'value\': \'2\'}]"\r\n                  [value]="bm.value">{{bm.label}}</option>\r\n              </select>\r\n            </td>\r\n            <td>\r\n              <select class="form-control select-markup" (ngModelChange)="validated()" (change)="markupChanged(charge, \'row\')"\r\n                [(ngModel)]="charge.markupPercentageId" [disabled]="isView || charge.billingMethodId != \'1\'">\r\n                <option value="" selected>Select</option>\r\n                <option *ngFor="let markUp of markupList" [value]="markUp.value">{{ markUp.label }}</option>\r\n              </select>\r\n            </td>\r\n            <td>\r\n              <input type="text" pInputText (ngModelChange)="validated()" pKeyFilter="money" class="form-control text_right"\r\n                value="{{ formateCurrency(charge.billingRate) }}"\r\n                (change)="charge.billingRate = formateCurrency(charge.billingRate)" [(ngModel)]="charge.billingRate"\r\n                [disabled]="true" />\r\n            </td>\r\n            <td>\r\n              <input type="text"  (ngModelChange)="validated()" pInputText pKeyFilter="money" class="form-control text_right"\r\n                value="{{ formateCurrency(charge.billingAmount) }}"\r\n                (blur)="charge.billingAmount = (charge.billingAmount)?formateCurrency(charge.billingAmount):\'0.00\'"\r\n                (change)="charge.billingAmount = formateCurrency(charge.billingAmount)"\r\n                [(ngModel)]="charge.billingAmount" [disabled]="isView || charge.billingMethodId != \'2\'" />\r\n            </td>\r\n          </ng-container>\r\n          <td class="btn-spaces text-center" >\r\n            <div *ngIf="deletedStatusInfo==false">\r\n              <span data-target="#addNewCharges" data-toggle="modal" *ngIf="!isView">\r\n                <a class="btn nobg btn-edit-cstm" (click)="edit(charge, rowIndex)" matTooltip="Edit">\r\n                  <i class="fa fa-pencil"></i>\r\n                </a>\r\n              </span>\r\n              <span *ngIf="!isView">\r\n                <a class="btn nobg btn-delete-cstm" (click)="openDelete(content,charge,rowIndex)" matTooltip="Delete">\r\n                  <i class="fa fa-trash"></i>\r\n                </a>\r\n              </span>\r\n              <span>\r\n                \x3c!-- <a class="btn nobg"\r\n                   (click)="openInterShipViaHistory(contentAuditHist1,charge)"\r\n                   matTooltip="History" matTooltipPosition="above">\r\n                    <i class="fa fa-history">\r\n                    </i>\r\n                </a> --\x3e\r\n                <button class="btn  nobg grey_btn_icon" style="padding:0px" [disabled]="charge.salesOrderQuoteChargesId==0"  (click)="openInterShipViaHistory(contentAuditHist1,charge)"\r\n                matTooltip="History" matTooltipPosition="above">\r\n                <i class="fa fa-history">\r\n                </i>\r\n                </button>\r\n            </span>\r\n            </div>\r\n            <div *ngIf="deletedStatusInfo==true">\r\n              <span *ngIf="!isView"><a class="btn nobg" (click)="restore(restoreId,charge,rowIndex);"  matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n              <span>\r\n                \x3c!-- <a class="btn nobg"\r\n                   (click)="openInterShipViaHistory(contentAuditHist1,charge)"\r\n                   matTooltip="History" matTooltipPosition="above">\r\n                    <i class="fa fa-history">\r\n                    </i>\r\n                </a> --\x3e\r\n                <button class="btn  nobg grey_btn_icon" style="padding:0px" [disabled]="charge.salesOrderQuoteChargesId==0"  (click)="openInterShipViaHistory(contentAuditHist1,charge)"\r\n                matTooltip="History" matTooltipPosition="above">\r\n                <i class="fa fa-history">\r\n                </i>\r\n                </button>\r\n            </span>\r\n            </div>\r\n       \r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      \x3c!-- <ng-template pTemplate="emptymessage" let-columns >\r\n        <tr>\r\n          <td [attr.colspan]="30" style="color: red; font-weight: bold; text-align: center">\r\n            No records found\r\n          </td>\r\n        </tr>\r\n      </ng-template> --\x3e\r\n      <ng-template pTemplate="footer">\r\n        <tr class="footer">\r\n          <td>Total</td>\r\n          <td>&nbsp;</td>\r\n          <td>&nbsp;</td>\r\n          <td>&nbsp;</td>\r\n          <td>&nbsp;</td>\r\n          <td class="content-to-end">{{formateCurrency(calculateExtendedCostSummation())}}</td>\r\n          <td>&nbsp;</td>\r\n          <td>&nbsp;</td>\r\n          <td>&nbsp;</td>\r\n          <td>&nbsp;</td>\r\n          <ng-container *ngIf="costPlusType != 3">\r\n            <td class="content-to-end">{{formateCurrency(getTotalBillingAmount())}}</td>\r\n          </ng-container>\r\n          <ng-container *ngIf="costPlusType == 3">\r\n            <td>\r\n              <input type="text" pInputText pKeyFilter="money" style="text-align: right;"\r\n                [ngModel]="chargesFlatBillingAmount  | twoDecimalGlobalNumberFormatPipe"\r\n                [ngModelOptions]="{updateOn:\'blur\'}"\r\n                (ngModelChange)="chargesFlatBillingAmount=formatStringToNumberGlobal($event)"\r\n                (blur)="chargesFlatBillingAmount = (chargesFlatBillingAmount)?formateCurrency(chargesFlatBillingAmount):\'0.00\'"\r\n                [disabled]="isView" />\r\n            </td>\r\n            \x3c!-- <td>\r\n              <input type="text" style="text-align: right;" pInputText pKeyFilter="money"\r\n                (blur)="chargesFlatBillingAmount = (chargesFlatBillingAmount)?formateCurrency(chargesFlatBillingAmount):\'0.00\'"\r\n                [(ngModel)]="chargesFlatBillingAmount" [disabled]="isView" />\r\n            </td> --\x3e\r\n          </ng-container>\r\n          <td *ngIf="!isView">&nbsp;</td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  \r\n  <div *ngIf="!isView" style="padding: 10px;">\r\n    <button class="btn btn-primary pull-right side" [disabled]="isSaveChargesDesabled" (click)="createChargesQuote()">\r\n       <span *ngIf="isUpdate">Update</span>\r\n      <span *ngIf="!isUpdate">Save</span>\r\n    </button>\r\n  </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div id="addNewCharges" class="modal fade" role="dialog" *ngIf="!view" data-backdrop="static" data-keyboard="false">\r\n  <div class="modal-dialog modal-xlg">\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title"> {{isEdit ? \'Edit\' : \'Add\'}} Charges</h4>\r\n      </div>\r\n      <div class="modal-body">\r\n        <div *ngIf="!isEdit">\r\n          <span class="cat-heading cat4 ng-star-inserted">\r\n            Add Charges\r\n            <i class="fa fa-plus" (click)="addNewRow()"></i>\r\n          </span>\r\n        </div>\r\n        <div class="tab-content">\r\n          <div class="table-responsive table-overflow" style="height: 300px;">\r\n            <form #chargesCreateForm="ngForm">\r\n              <table class="table table-bordered ">\r\n                <thead>\r\n                  <tr>\r\n                    <th rowspan="2">Type<span class="clr-red">*</span></th>\r\n                    <th rowspan="2">Description</th>\r\n                    <th rowspan="2">Qty<span class="clr-red">*</span></th>\r\n                    <th rowspan="2">Ref Num</th>\r\n                    <th rowspan="2">Unit Cost<span class="clr-red">*</span></th>\r\n                    <th rowspan="2">Extended Cost<span class="clr-red">*</span></th>\r\n                    <th rowspan="2">Vendor Name</th>\r\n                    <th rowspan="2">Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr *ngFor="let charge of chargeForm; let i = index">\r\n                    <td>\r\n                      <select class="form-control custom-select1 wf-pub-id" id="dllChargesType"\r\n                        [(ngModel)]="charge.chargesTypeId" (ngModelChange)="enableUpdate()" style="width: 130px;" name="type_{{i}}" required>\r\n                        <option [value]="">Select</option>\r\n                        <option [value]="ctype.chargeId" *ngFor="let ctype of chargesTypes">{{\r\n                          ctype.chargeType\r\n                        }}</option>\r\n                      </select>\r\n                    </td>\r\n                    <td>\r\n                      <input type="text" pInputText value="{{ charge.description }}" [(ngModel)]="charge.description"\r\n                        class="form-control" name="desc_{{i}}" (ngModelChange)="enableUpdate()" />\r\n                    </td>\r\n                    <td>\r\n                      <input type="text" pInputText pKeyFilter="pnum" maxlength="15" class="form-control text-right"\r\n                        value="{{ charge.quantity }}" (change)="calculateExtendedCost(charge)"\r\n                        [(ngModel)]="charge.quantity" (ngModelChange)="enableUpdate()" name="qty_{{i}}" required />\r\n                    </td>\r\n                    <td>\r\n                      <input type="text" pInputText maxlength="15" class="form-control" value="{{ charge.refNum }}"\r\n                        [(ngModel)]="charge.refNum" (ngModelChange)="enableUpdate()" name="refNum_{{i}}" />\r\n                    </td>\r\n                    <td>\r\n                      <input type="text" pInputText pKeyFilter="money" class="form-control text-right"\r\n                        value="{{ charge.unitCost }}" (change)="calculateExtendedCost(charge)"\r\n                        [(ngModel)]="charge.unitCost" (ngModelChange)="enableUpdate()" name="unitCost_{{i}}" required maxlength="15" />\r\n                    </td>\r\n                    <td>\r\n                      <input type="text" pInputText pKeyFilter="money" class="form-control text-right" [disabled]="true"\r\n                        value="{{ charge.extendedCost }}" [(ngModel)]="charge.extendedCost" (ngModelChange)="enableUpdate()"\r\n                        (change)="calculateExtendedCostSummation()" name="exd_{{i}}" required disabled maxlength="15" />\r\n                    </td>\r\n                    <td>\r\n                      <p-autoComplete class="autocomp-customer-cstm" name="vendorName" [(ngModel)]="charge.vendor" (ngModelChange)="enableUpdate()"\r\n                        [ngModelOptions]="{standalone: true}" [suggestions]="vendorCollection" [forceSelection]="true"\r\n                        emptyMessage="No Match Found" field="vendorName" (completeMethod)="filterVendor($event)"\r\n                        [size]="30" [minLength]="1" [dropdown]="true">\r\n                      </p-autoComplete>\r\n                      \x3c!-- <p-autoComplete [(ngModel)]="charge.vendorId" [suggestions]="vendorCollection"\r\n                        [forceSelection]="true" (completeMethod)="filterVendor($event)" [dropdown]="true" [size]="30"\r\n                        [minLength]="1" field="vendorName" class="workflow-measurement-select" name="vendo_{{i}}">\r\n                      </p-autoComplete> --\x3e\r\n                    </td>\r\n                    <td>\r\n                      <button class="btn btn-danger nobg" [disabled]="isEdit==true"  (click)="deleteRow(i, frieghtsCreateForm)">\r\n                        <i class="fa fa-trash"></i>\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div> \r\n      <div class="modal-footer">\r\n        \x3c!-- [disabled]="!chargesCreateForm.valid" --\x3e\r\n        <button class="btn btn-primary pull-right " (click)="saveFreightList()" [disabled]="!chargesCreateForm.valid || isEnableUpdateButton">\r\n          {{ isEdit ? \'Update\' : (isQuote)?\'Save\':\'Save\' }}\r\n        </button>\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal">\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-template #content let-c="close" let-d="dismiss">\r\n  <div class="modal-header">\r\n    <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n    <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n      <span aria-hidden="true">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class="modal-body">\r\n    <strong style="display: inline-flex;">\r\n      Charge Type:\r\n        <span class="new-label" *ngIf="selectedRowForDelete">\r\n         {{selectedRowForDelete.chargeType}}\r\n        </span>\r\n    </strong>\r\n</div>\r\n  <div class="modal-footer">\r\n    <button type="button" class="btn btn-success" (click)="delete()">Yes</button>\r\n    <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n  </div>\r\n\r\n</ng-template>\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n  <div class="modal-header">\r\n      <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n\r\n      <button type="button" class="close" aria-label="Close" (click)="dismissModelAlett()">\r\n          <span aria-hidden="true">&times;</span>\r\n      </button>\r\n  </div>\r\n  <div class="modal-body">\r\n        <strong style="display: inline-flex;">\r\n          Charge Type:\r\n            <span class="new-label" *ngIf="restorerecord">\r\n             {{restorerecord.chargeType}}\r\n            </span>\r\n        </strong>\r\n  </div>\r\n  <div class="modal-footer">\r\n      <button type="button" class="btn btn-primary" (click)="restoreRecord()">Yes</button>\r\n      <button type="button" class="btn btn-danger" (click)="dismissModelAlett()">No</button>\r\n  </div>\r\n</ng-template> \r\n<ng-template #contentAuditHist1 let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n  <div class="modal-header">\r\n      <h4 class="modal-title">History of Charges</h4>\r\n      <button type="button" class="close" aria-label="Close" (click)="dismissModelHistory()">\r\n          <span aria-hidden="true">&times;</span>\r\n      </button>\r\n  </div>\r\n  <div class="modal-body">\r\n      <div class="table-responsive history_hg">\r\n          <table class="table table-bordered">\r\n              <thead>\r\n                  <tr>\r\n                      <th>Type <span class="clr-red">*</span></th>\r\n                      <th>Description</th>\r\n                      <th>Qty <span class="clr-red">*</span></th>\r\n                      <th>Ref Num</th>\r\n                      <th>Unit Cost <span class="clr-red">*</span></th>\r\n                      <th>Extended Cost <span class="clr-red">*</span></th>\r\n                      <th>Vendor Name</th>\r\n                      <th>Billing Rate</th>\r\n                      <th >Billing Method</th> \r\n                      <th>Billing Amount</th>\r\n                      <th>Is Active</th>\r\n                      <th>Created Date</th>\r\n                      <th>Created By</th>\r\n                      <th>Updated Date</th>\r\n                      <th>Updated By</th>\r\n                      <th>Is Deleted</th>\r\n                  </tr>\r\n              </thead>\r\n              <tr *ngFor="let audit of chargesAudiHistory; let i = index;">\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'chargeType\', audit.chargeType)  ? \'black\' : \'red\'  }">{{audit.chargeType}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'quantity\', audit.quantity)  ? \'black\' : \'red\'  }">{{audit.quantity}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'refNum\', audit.refNum)  ? \'black\' : \'red\'  }">{{audit.refNum}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'unitCost\', audit.unitCost)  ? \'black\' : \'red\'  }">{{audit.unitCost}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'extendedCost\', audit.extendedCost)  ? \'black\' : \'red\'  }">{{audit.extendedCost}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'vendorName\', audit.vendorName)  ? \'black\' : \'red\'  }">{{audit.vendorName}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'billingRate\', audit.billingRate)  ? \'black\' : \'red\'  }">{{audit.billingRate}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'billingMethodName\', audit.billingMethodName)  ? \'black\' : \'red\'  }">{{audit.billingMethodName}}</td>\r\n                  <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'billingAmount\', audit.billingAmount)  ? \'black\' : \'red\'  }">{{audit.billingAmount}}</td>\r\n                  <td style="text-align: center;">\r\n                      <span class="value">\r\n                        <label class="wauto">\r\n                            <input type="checkbox" name="isActive" [checked]="audit.isActive == true" disabled>\r\n                        </label>\r\n                      </span>\r\n                    </td>\r\n   \r\n                  <td>{{audit.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                  <td>{{audit.createdBy}}</td>\r\n                  <td>{{audit.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                  <td>{{audit.updatedBy}}</td>\r\n                  <td style="text-align: center;">\r\n                      <span class="value">\r\n                        <label class="wauto">\r\n                            <input type="checkbox" name="isDeleted" [checked]="audit.isDeleted == true" disabled>\r\n                        </label>\r\n                      </span>\r\n                    </td>\r\n              </tr>\r\n          </table>\r\n      </div>\r\n  </div>\r\n  <div class="modal-footer">\r\n      <button type="button" class="btn btn-danger" (click)="dismissModelHistory()">Close</button>\r\n  </div>\r\n</ng-template>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n  <div class="loading">\r\n    <div class="lds-roller">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n</div>'},Nhi2:function(e,t,r){"use strict";r.r(t),t.default='<div class="form-group">\r\n    <div class="row" *ngIf="!isView" style="padding:8px 0px">\r\n        <div class="card-header bg-primary" style="width: 100%; padding: 0.1rem 1.25rem 0.1rem 1.25rem;">\r\n            <div class="row">\r\n                <div class="col">\r\n                    <h4 class="new-card-heading" style="font-size: 16px; line-height: 2;">  Charges</h4>\r\n                </div>\r\n                <div>\r\n                    <button type="button"\r\n                            class="btn-sm new-btn-primary" data-target="#addNewCharges" data-toggle="modal" (click)="createNew()">\r\n                        Add Charges\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="row"  [ngClass]="(isView) ? \'pull-right\' : \'\'">\r\n        <div class="checkbox-cstm show_cst">\r\n            <label style="width: auto !important;margin-top: 3px;">\r\n                <input type="checkbox" [(ngModel)]="deletedStatusInfo" name="cparent55" id="cparent55" (click)="getDeleteListByStatus($event.target.checked)" />\r\n                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                Show  Deleted List\r\n            </label>\r\n        </div>\r\n    </div>\r\n    <div class="clearfix"></div>\r\n        <p-table [columns]="cols" [value]="salesOrderChargesList" [lazy]="false" [paginator]="true" [rows]="10"\r\n                 class="rpo-table-cstm sales-analysis-header ptable-f10" [paginator]="true">\r\n            \x3c!--chargess--\x3e\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n                    <th colspan="7" style="background: #4298ff !important; color: #fff; border: 1px solid #fff; border-right: 1px solid #e7ecf1;">\r\n                        &nbsp;\r\n                    </th>\r\n                    <ng-container *ngIf="isView">\r\n                        <th colspan="4" style="background: #4298ff !important; color:#fff; border: 1px solid #e7ecf1;padding-left: 5px;">\r\n                            <div class="display-flex" style="background: #4298ff; padding-left: 10px;">\r\n                                <div class="form-group" style="text-align: center; display: flex;    margin-bottom: 0px;">\r\n                                    <p-radioButton class="p-radiobutton-label-horizontal p-radiobutton-label-w92" name="costPlusType"\r\n                                                   label="T&M - Mark Up" value="1" [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()">\r\n                                    </p-radioButton>\r\n                                    <div>\r\n                                        <select class="form-group select-markup" (change)="markupChanged({}, \'all\')"\r\n                                                [(ngModel)]="overAllMarkup" [disabled]="isView || costPlusType != 1" style="margin-top: 10px;">\r\n                                            <option value="" selected>Select</option>\r\n                                            <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div style="float: left; margin-bottom: 7px; margin-left: 4px; margin-right: 4px;">\r\n                                    <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType" value="2" label="Actual"\r\n                                                   [(ngModel)]="costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'"></p-radioButton>\r\n                                </div>\r\n                                <div>\r\n                                    <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType" value="3" label="Flat Rate"\r\n                                                   [(ngModel)]="costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'">\r\n                                    </p-radioButton>\r\n                                </div>\r\n                            </div>\r\n                        </th>\r\n                        <th style="background: #4298ff !important;\r\n                        color:#fff !important;"></th>\r\n                    </ng-container>\r\n                    <ng-container *ngIf="!isView">\r\n                        <th colspan="4" style="background: #fff; border: 1px solid #e7ecf1;padding: 0;">\r\n                            <div class="display-flex" style="background: #4298ff; padding-left: 10px;">\r\n                                <div class="form-group" style="text-align: center; display: flex;    margin-bottom: 0px;">\r\n                                    <p-radioButton class="p-radiobutton-label-horizontal p-radiobutton-label-w92" name="costPlusType"\r\n                                                   label="T&M - Mark Up" (ngModelChange)="validated()" value="1" [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()">\r\n                                    </p-radioButton>\r\n                                    <div>\r\n                                        <select class="form-group select-markup" (change)="markupChanged({}, \'all\')"\r\n                                                [(ngModel)]="overAllMarkup" (ngModelChange)="validated()" [disabled]="isView || costPlusType != 1" style="margin-top: 10px;">\r\n                                            <option value="" selected>Select</option>\r\n                                            <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div style="float: left; margin-bottom: 7px; margin-left: 4px; margin-right: 4px;">\r\n                                    <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType" value="2" label="Actual"\r\n                                                   [(ngModel)]="costPlusType" (ngModelChange)="validated()" [disabled]="isView" (click)="tmchange()"></p-radioButton>\r\n                                </div>\r\n                                <div>\r\n                                    <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusType" value="3" label="Flat Rate"\r\n                                                   [(ngModel)]="costPlusType" (ngModelChange)="validated()" [disabled]="isView" (click)="(!isView)?tmchange():\'\'">\r\n                                    </p-radioButton>\r\n                                </div>\r\n                            </div>\r\n                        </th>\r\n                        <th style="background: #4298ff !important;\r\n                        color:#fff !important;"></th>\r\n                    </ng-container>\r\n                </tr>\r\n                <tr>\r\n                    <th rowspan="2" style="background-color: #4298ff !important;\r\n                    color: #fff !important;">Type<span class="clr-red">*</span></th>\r\n                    <th rowspan="2" style="background-color: #4298ff !important;\r\n                    color: #fff !important;">Description</th>\r\n                    <th rowspan="2" style="background-color: #4298ff !important;\r\n                    color: #fff !important;">Qty<span class="clr-red">*</span></th>\r\n                    <th rowspan="2" style="background-color: #4298ff !important;\r\n                    color: #fff !important;">Ref Num</th>\r\n                    <th rowspan="2" style="background-color: #4298ff !important;\r\n                    color: #fff !important;">Unit Cost<span class="clr-red">*</span></th>\r\n                    <th rowspan="2" style="background-color: #4298ff !important;\r\n                    color: #fff !important;">Extended Cost<span class="clr-red">*</span></th>\r\n                    <th rowspan="2" style="background-color: #4298ff !important;\r\n                    color: #fff !important;">Vendor Name</th>\r\n                    <ng-container>\r\n                        <th rowspan="2" style="background-color: #4298ff !important;\r\n                        color: #fff !important;">Billing Method</th>\r\n                        <th rowspan="2" style="background-color: #4298ff !important;\r\n                        color: #fff !important;">Mark Up</th>\r\n                        <th rowspan="2" style="background-color: #4298ff !important;\r\n                        color: #fff !important;">Billing Rate</th>\r\n                        <th rowspan="2" style="background-color: #4298ff !important;\r\n                        color: #fff !important;">Billing Amount</th>\r\n                    </ng-container>\r\n                    <th rowspan="2" style="background-color: #4298ff !important;\r\n                    color: #fff !important;">Actions</th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-charge let-columns="columns" let-rowIndex="rowIndex">\r\n                <tr>\r\n                    <td>\r\n                        <select class="form-control custom-select wf-pub-id" id="dllChargesType" [(ngModel)]="charge.chargesTypeId"\r\n                                style="width: 130px;" name="type_{{rowIndex}}" [disabled]="true">\r\n                            <option [value]="0">Select</option>\r\n                            <option [value]="ctype.chargeId" *ngFor="let ctype of chargesTypes">\r\n                                {{\r\n                                    ctype.chargeType\r\n                                }}\r\n                            </option>\r\n                        </select>\r\n                    </td>\r\n                    <td>\r\n                        {{charge.description}}\r\n                    </td>\r\n                    <td style="text-align: right;">\r\n                        {{charge.quantity | globalNmberFormat}}\r\n                    </td>\r\n                    <td>\r\n                        {{charge.refNum}}\r\n                    </td>\r\n                    <td style="text-align: right;">\r\n                        {{charge.unitCost | twoDecimalGlobalNumberFormatPipe}}\r\n                    </td>\r\n                    <td style="text-align: right;">\r\n                        {{charge.extendedCost | twoDecimalGlobalNumberFormatPipe}}\r\n                    </td>\r\n                    \x3c!-- <td>\r\n                      {{getVendorNameById(charge.vendorId)}}\r\n                    </td> --\x3e\r\n                    <td>\r\n                        {{charge.vendor ? charge.vendor.vendorName : \'\'}}\r\n                    </td>\r\n                    <ng-container>\r\n                        <td>\r\n                            <select class="form-control" [(ngModel)]="charge.billingMethodId"  (ngModelChange)="validated()" [disabled]="isView || costPlusType == 3"\r\n                                    (change)="charge.markupPercentageId = \'\';charge.billingRate = 0;charge.billingAmount = 0;(charge.billingMethodId == \'2\')?charge.billingAmount = charge.extendedCost:\'\';">\r\n                                <option value="" selected>Select</option>\r\n                                <option *ngFor="let bm of [{\'label\': \'T&M\', \'value\': \'1\'}, {\'label\': \'Actual\', \'value\': \'2\'}]"\r\n                                        [value]="bm.value">\r\n                                    {{bm.label}}\r\n                                </option>\r\n                            </select>\r\n                        </td>\r\n                        <td>\r\n                            <select class="form-control select-markup" (ngModelChange)="validated()" (change)="markupChanged(charge, \'row\')"\r\n                                    [(ngModel)]="charge.markupPercentageId" [disabled]="isView || charge.billingMethodId != \'1\'">\r\n                                <option value="" selected>Select</option>\r\n                                <option *ngFor="let markUp of markupList" [value]="markUp.value">{{ markUp.label }}</option>\r\n                            </select>\r\n                        </td>\r\n                        <td>\r\n                            <input type="text" pInputText (ngModelChange)="validated()" pKeyFilter="money" class="form-control text_right"\r\n                                   value="{{ formateCurrency(charge.billingRate) }}"\r\n                                   (change)="charge.billingRate = formateCurrency(charge.billingRate)" [(ngModel)]="charge.billingRate"\r\n                                   [disabled]="true" />\r\n                        </td>\r\n                        <td>\r\n                            <input type="text"  (ngModelChange)="validated()" pInputText pKeyFilter="money" class="form-control text_right"\r\n                                   value="{{ formateCurrency(charge.billingAmount) }}"\r\n                                   (change)="charge.billingAmount = formateCurrency(charge.billingAmount)"\r\n                                   [(ngModel)]="charge.billingAmount" [disabled]="isView || charge.billingMethodId != \'2\'" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <td class="btn-spaces text-center">\r\n                        <div *ngIf="deletedStatusInfo==false">\r\n                            <span data-target="#addNewCharges" data-toggle="modal" *ngIf="!isView">\r\n                                <a class="btn nobg btn-edit-cstm" (click)="edit(charge, rowIndex)" matTooltip="Edit">\r\n                                    <i class="fa fa-pencil"></i>\r\n                                </a>\r\n                            </span>\r\n                            <span *ngIf="!isView">\r\n                                <a class="btn nobg btn-delete-cstm" (click)="openDelete(content,charge,rowIndex)" matTooltip="Delete">\r\n                                    <i class="fa fa-trash"></i>\r\n                                </a>\r\n                            </span>\r\n                            <span>\r\n                                <button class="btn  nobg grey_btn_icon" style="padding:0px" [disabled]="charge.salesOrderChargesId==0" (click)="openInterShipViaHistory(contentAuditHist1,charge)"\r\n                                        matTooltip="History" matTooltipPosition="above">\r\n                                    <i class="fa fa-history">\r\n                                    </i>\r\n                                </button>\r\n                            </span>\r\n                        </div>\r\n                        <div *ngIf="deletedStatusInfo==true">\r\n                            <span *ngIf="!isView"><a class="btn nobg" (click)="restore(restoreId,charge,rowIndex);" matTooltip="Restore Record" matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                            <span>\r\n                                <button class="btn  nobg grey_btn_icon" style="padding:0px" [disabled]="charge.salesOrderQuoteChargesId==0" (click)="openInterShipViaHistory(contentAuditHist1,charge)"\r\n                                        matTooltip="History" matTooltipPosition="above">\r\n                                    <i class="fa fa-history">\r\n                                    </i>\r\n                                </button>\r\n                            </span>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="footer">\r\n                <tr class="footer">\r\n                    <td>Total</td>\r\n                    <td>&nbsp;</td>\r\n                    <td>&nbsp;</td>\r\n                    <td>&nbsp;</td>\r\n                    <td>&nbsp;</td>\r\n                    <td class="content-to-end">{{formateCurrency(calculateExtendedCostSummation())}}</td>\r\n                    <td>&nbsp;</td>\r\n                    <td>&nbsp;</td>\r\n                    <td>&nbsp;</td>\r\n                    <td>&nbsp;</td>\r\n                    <ng-container *ngIf="costPlusType != 3">\r\n                        <td class="content-to-end">{{formateCurrency(getTotalBillingAmount())}}</td>\r\n                    </ng-container>\r\n                    <ng-container *ngIf="costPlusType == 3">\r\n                        <td>\r\n                            <input type="text" pInputText pKeyFilter="money" style="text-align: right;"\r\n                                   [ngModel]="chargesFlatBillingAmount  | twoDecimalGlobalNumberFormatPipe"\r\n                                   [ngModelOptions]="{updateOn:\'blur\'}"\r\n                                   (ngModelChange)="chargesFlatBillingAmount=formatStringToNumberGlobal($event)"\r\n                                   (blur)="chargesFlatBillingAmount = (chargesFlatBillingAmount)?formateCurrency(chargesFlatBillingAmount):\'0.00\'"\r\n                                   [disabled]="isView" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <td>&nbsp;</td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    <div *ngIf="!isView" style="padding: 10px;">\r\n        \x3c!--<button class="btn btn-primary pull-right side" (click)="createChargesQuote()">Save</button>--\x3e\r\n        <button class="btn btn-primary pull-right side" [disabled]="isSaveChargesDesabled" (click)="createChargesQuote()">\r\n            <span *ngIf="salesOrderChargesList && salesOrderChargesList.length !=0">Update</span>\r\n            <span *ngIf="salesOrderChargesList && salesOrderChargesList.length ==0">Save</span>\r\n        </button>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div id="addNewCharges" class="modal fade" role="dialog" *ngIf="!view" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">\r\n                    &times;\r\n                </button>\r\n                <h4 class="modal-title"> {{isEdit ? \'Edit\' : \'Add\'}} Charges</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div *ngIf="!isEdit">\r\n                    <span class="cat-heading cat4 ng-star-inserted">\r\n                        Add Charges\r\n                        <i class="fa fa-plus" (click)="addNewRow()"></i>\r\n                    </span>\r\n                </div>\r\n                <div class="tab-content">\r\n                    <div class="table-responsive table-overflow" style="height: 300px;">\r\n                        <form #chargesCreateForm="ngForm">\r\n                            <table class="table table-bordered ">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th rowspan="2">Type<span class="clr-red">*</span></th>\r\n                                        <th rowspan="2">Description</th>\r\n                                        <th rowspan="2">Qty<span class="clr-red">*</span></th>\r\n                                        <th rowspan="2">Ref Num</th>\r\n                                        <th rowspan="2">Unit Cost<span class="clr-red">*</span></th>\r\n                                        <th rowspan="2">Extended Cost<span class="clr-red">*</span></th>\r\n                                        <th rowspan="2">Vendor Name</th>\r\n                                        <th rowspan="2">Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor="let charge of chargeForm; let i = index">\r\n                                        \x3c!-- (change)="onChargeTypeChange($event, charge)" --\x3e\r\n                                        <td>\r\n                                            <select class="form-control custom-select wf-pub-id" (ngModelChange)="enableUpdate()" id="dllChargesType"\r\n                                                    [(ngModel)]="charge.chargesTypeId" style="width: 130px;" name="type_{{i}}" required>\r\n                                                <option [value]="">Select</option>\r\n                                                <option [value]="ctype.chargeId" *ngFor="let ctype of chargesTypes">\r\n                                                    {{\r\n                                                        ctype.chargeType\r\n                                                    }}\r\n                                                </option>\r\n                                            </select>\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type="text" pInputText value="{{ charge.description }}" (ngModelChange)="enableUpdate()" [(ngModel)]="charge.description"\r\n                                                   class="form-control" name="desc_{{i}}" />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type="text" pInputText pKeyFilter="pnum" maxlength="15" (ngModelChange)="enableUpdate()" class="form-control text-right"\r\n                                                   value="{{ charge.quantity }}" (change)="calculateExtendedCost(charge)"\r\n                                                   [(ngModel)]="charge.quantity" name="qty_{{i}}" required />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type="text" pInputText maxlength="15" class="form-control" (ngModelChange)="enableUpdate()" value="{{ charge.refNum }}"\r\n                                                   [(ngModel)]="charge.refNum" name="refNum_{{i}}" />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type="text" pInputText pKeyFilter="money" class="form-control text-right"\r\n                                                   value="{{ charge.unitCost }}" (ngModelChange)="enableUpdate()" (change)="calculateExtendedCost(charge)"\r\n                                                   [(ngModel)]="charge.unitCost" name="unitCost_{{i}}" required maxlength="15" />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type="text" pInputText pKeyFilter="money" class="form-control text-right" [disabled]="true"\r\n                                                   value="{{ charge.extendedCost }}" (ngModelChange)="enableUpdate()" [(ngModel)]="charge.extendedCost"\r\n                                                   (change)="calculateExtendedCostSummation()" name="exd_{{i}}" required disabled maxlength="15" />\r\n                                        </td>\r\n                                        <td>\r\n                                            <p-autoComplete class="autocomp-customer-cstm" name="vendorName" (ngModelChange)="enableUpdate()" [(ngModel)]="charge.vendor"\r\n                                                            [ngModelOptions]="{standalone: true}" [suggestions]="vendorCollection" [forceSelection]="true"\r\n                                                            emptyMessage="No Match Found" field="vendorName" (completeMethod)="filterVendor($event)"\r\n                                                            [size]="30" [minLength]="1" [dropdown]="true">\r\n                                            </p-autoComplete>\r\n                                        </td>\r\n                                        <td>\r\n                                            <button class="btn btn-danger nobg" [disabled]="isEdit==true" (click)="deleteRow(i, frieghtsCreateForm)">\r\n                                                <i class="fa fa-trash"></i>\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                \x3c!-- [disabled]="!chargesCreateForm.valid" --\x3e\r\n                <button class="btn btn-primary pull-right " (click)="saveChargesList()" [disabled]="!chargesCreateForm.valid || isEnableUpdateButton">\r\n                    {{ isEdit ? \'Update\' : (isQuote)?\'Save\':\'Save\' }}\r\n                </button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">\r\n                    Close\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #contentAuditHist1 let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">History of Charges</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModelHistory()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="table-responsive history_hg">\r\n            <table class="table table-bordered">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Type <span class="clr-red">*</span></th>\r\n                        <th>Description</th>\r\n                        <th>Qty <span class="clr-red">*</span></th>\r\n                        <th>Ref Num</th>\r\n                        <th>Unit Cost <span class="clr-red">*</span></th>\r\n                        <th>Extended Cost <span class="clr-red">*</span></th>\r\n                        <th>Vendor Name</th>\r\n                        <th>Billing Rate</th>\r\n                        <th>Billing Method</th>\r\n                        <th>Billing Amount</th>\r\n                        <th>Is Active</th>\r\n                        <th>Created Date</th>\r\n                        <th>Created By</th>\r\n                        <th>Updated Date</th>\r\n                        <th>Updated By</th>\r\n                        <th>Is Deleted</th>\r\n                    </tr>\r\n                </thead>\r\n                <tr *ngFor="let audit of chargesAudiHistory; let i = index;">\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'chargeType\', audit.chargeType)  ? \'black\' : \'red\'  }">{{audit.chargeType}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'quantity\', audit.quantity)  ? \'black\' : \'red\'  }">{{audit.quantity}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'refNum\', audit.refNum)  ? \'black\' : \'red\'  }">{{audit.refNum}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'unitCost\', audit.unitCost)  ? \'black\' : \'red\'  }">{{audit.unitCost}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'extendedCost\', audit.extendedCost)  ? \'black\' : \'red\'  }">{{audit.extendedCost}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'vendorName\', audit.vendorName)  ? \'black\' : \'red\'  }">{{audit.vendorName}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'billingRate\', audit.billingRate)  ? \'black\' : \'red\'  }">{{audit.billingRate}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'billingMethodName\', audit.billingMethodName)  ? \'black\' : \'red\'  }">{{audit.billingMethodName}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'billingAmount\', audit.billingAmount)  ? \'black\' : \'red\'  }">{{audit.billingAmount}}</td>\r\n                    <td style="text-align: center;">\r\n                        <span class="value">\r\n                            <label class="wauto">\r\n                                <input type="checkbox" name="isActive" [checked]="audit.isActive == true" disabled>\r\n                            </label>\r\n                        </span>\r\n                    </td>\r\n\r\n                    <td>{{audit.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                    <td>{{audit.createdBy}}</td>\r\n                    <td>{{audit.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                    <td>{{audit.updatedBy}}</td>\r\n                    <td style="text-align: center;">\r\n                        <span class="value">\r\n                            <label class="wauto">\r\n                                <input type="checkbox" name="isDeleted" [checked]="audit.isDeleted == true" disabled>\r\n                            </label>\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModelHistory()">Close</button>\r\n    </div>\r\n</ng-template>\r\n<ng-template #content let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <strong style="display: inline-flex;">\r\n            Charge Type:\r\n            <span class="new-label" *ngIf="selectedRowForDelete">\r\n                {{selectedRowForDelete.chargeType}}\r\n            </span>\r\n        </strong>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="delete()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n</ng-template>\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModelAlett()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <strong style="display: inline-flex;">\r\n            Charge Type:\r\n            <span class="new-label" *ngIf="restorerecord">\r\n                {{restorerecord.chargeType}}\r\n            </span>\r\n        </strong>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModelAlett()">No</button>\r\n    </div>\r\n</ng-template> '},NyM1:function(e,t,r){"use strict";r.r(t),t.default='<div class="form-row ro-view-address">\r\n    <div class="col-md-3">\r\n        <h5 class="po-head">Ship To</h5>\r\n        <div class="form-group">\r\n            <label class="sales-quote-shipping-label">User Type <span class="clr-red">*</span></label>\r\n            <select [ngClass]="inputValidCheck ? \'select-validate-cstm\' : \'\'" name="shipToUserTypeId"\r\n                [(ngModel)]="salesOrderQuote.shipToUserTypeId" (change)="clearInputShipTo();onChangeShipToUserType();"\r\n                #shipUserType="ngModel" required>\r\n                <option value="null" disabled>-- Select --</option>\r\n                <option [ngValue]="1">Customer</option>\r\n                <option [ngValue]="2">Vendor</option>\r\n                <option [ngValue]="3">Company</option>\r\n            </select>\r\n            <div *ngIf="shipUserType.invalid && (shipUserType.dirty || shipUserType.touched)"\r\n                class="alert alert-danger alert-danger-cstm">\r\n                <div *ngIf="shipUserType.errors.required">\r\n                    <small> User Type is required </small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            \x3c!-- <div class="form-row"> --\x3e\r\n            \x3c!-- <div class="col-sm-11"> --\x3e\r\n            <label class="sales-quote-shipping-label">Customer Name <span class="clr-red">*</span></label>\r\n            <p-autoComplete field="label" [ngClass]="inputValidCheck ? \'p-acomp-validate\' : \'\'" class="pautocomp-cstm"\r\n                (onClear)="clearInputShipTo()" [(ngModel)]="salesOrderQuote.shipToUserId" name="shipCustomerName"\r\n                [suggestions]="userNames" (completeMethod)="filterUserNames($event)" [size]="30" [minLength]="1"\r\n                [dropdown]="true"\r\n                (onSelect)="onShipToUserSelected($event.value, salesOrderQuote, salesOrderQuote.shipToAddressId);"\r\n                #shipCustomerName="ngModel" errorMessage="Records not found" [forceSelection]="true" required>\r\n            </p-autoComplete>\r\n            <div *ngIf="shipCustomerName.invalid && (shipCustomerName.dirty || shipCustomerName.touched)"\r\n                class="alert alert-danger alert-danger-cstm">\r\n                <div *ngIf="shipCustomerName.errors.required">\r\n                    <small> User Name is required </small>\r\n                </div>\r\n            </div>\r\n            \x3c!-- </div> --\x3e\r\n            \x3c!-- <div class="col-sm-1">\r\n                    <div *ngIf="salesOrderQuote.shipToUserTypeId==1"\r\n                        style="cursor:pointer; font-size:14px; margin:2px -8px;"><a class="fa fa-plus-circle fa-lg"\r\n                            target="_blank" matTooltip="Add Customer" matTooltipPosition="above"\r\n                            [routerLink]="[\'/customersmodule/customerpages/app-customer-create\']"></a></div>\r\n                    <div *ngIf="salesOrderQuote.shipToUserTypeId==2"\r\n                        style="cursor:pointer; font-size:14px; margin:2px -8px;"><a class="fa fa-plus-circle fa-lg"\r\n                            target="_blank" matTooltip="Add Customer" matTooltipPosition="above"\r\n                            [routerLink]="[\'/vendorsmodule/vendorpages/app-vendor-general-information\']"></a></div>\r\n                </div> --\x3e\r\n            \x3c!-- </div> --\x3e\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="sales-quote-shipping-label">\r\n                Site Name <span class="clr-red">*</span>\r\n                <span style="margin-left:3px;cursor:pointer;"><a *ngIf="salesOrderQuote.shipToUserId"\r\n                        class="fa fa-plus-circle fa-lg" matTooltip="Add Site Name" matTooltipPosition="above"\r\n                        data-toggle="modal" data-target="#createPOSiteName"\r\n                        (click)="onClickShipSiteName(\'AddSiteName\')"></a></span>\r\n                <span style="margin-left:5px;cursor:pointer;"><a *ngIf="salesOrderQuote.shipToUserId"\r\n                        class="fa fa-edit fa-lg" matTooltip="Edit Site Name" matTooltipPosition="above"\r\n                        data-toggle="modal" data-target="#createPOSiteName"\r\n                        (click)="onClickShipSiteName(\'EditSiteName\', salesOrderQuote)"></a></span>\r\n            </label>\r\n            <select [(ngModel)]="salesOrderQuote.shipToSiteName" name="shipToSiteName"\r\n                (change)="onShipSiteSelect(salesOrderQuote.shipToSiteName)" required>\r\n                <option>--Select</option>\r\n                <option *ngFor="let site of siteList" [ngValue]="site.siteName">\r\n                    {{site.siteName}}\r\n                </option>\r\n\r\n            </select>\r\n\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="sales-quote-shipping-label">Address</label>\r\n            <input type="text" class="form-control" [(ngModel)]="salesOrderQuote.shipToAddress1" name="shipToAddress1"\r\n                [disabled]="true" />\r\n\r\n        </div>\r\n        <div class="form-group">\r\n\r\n            <label class="sales-quote-shipping-label">City</label>\r\n\r\n            <input type="text" class="form-control" [(ngModel)]="salesOrderQuote.shipToCity" name="shipToCity"\r\n                [disabled]="true" />\r\n\r\n\r\n        </div>\r\n        <div class="form-group">\r\n\r\n            <label class="sales-quote-shipping-label">Primary State/Province</label>\r\n\r\n            <input type="text" class="form-control" [(ngModel)]="salesOrderQuote.shipToState" name="shipToState"\r\n                [disabled]="true" />\r\n\r\n\r\n        </div>\r\n        <div class="form-group">\r\n\r\n            <label class="sales-quote-shipping-label">Postal</label>\r\n\r\n            <input type="text" class="form-control" [(ngModel)]="salesOrderQuote.shipToPostalCode"\r\n                name="shipToPostalCode" [disabled]="true" />\r\n\r\n\r\n        </div>\r\n        <div class="form-group">\r\n\r\n            <label class="sales-quote-shipping-label">Country</label>\r\n\r\n            <input type="text" class="form-control" [(ngModel)]="salesOrderQuote.shipToCountry" name="shipToCountry"\r\n                [disabled]="true" />\r\n\r\n        </div>\r\n        <div class="form-group">\r\n\r\n            <label class="sales-quote-shipping-label">Contact Name <span class="clr-red">*</span></label>\r\n\r\n            <p-autoComplete class="autocomp-customer-cstm" [(ngModel)]="salesOrderQuote.shipToContactId"\r\n                [suggestions]="firstNamesShipTo" [forceSelection]="true" emptyMessage="No Match Found" field="firstName"\r\n                (completeMethod)="filterCustomerContactsForShipTo($event)" [size]="30" [minLength]="1"\r\n                [dropdown]="true">\r\n            </p-autoComplete>\r\n\r\n\r\n        </div>\r\n\r\n        <div class="form-group memo-popup-cstm" style="margin-top: 12px;">\r\n            <label class="sales-quote-shipping-label">\r\n                Memo <i class="fa fa-pencil" data-toggle="modal" data-target="#add-memo-description"\r\n                    matTooltipPosition="above" matTooltip="Memo" (click)="onAddDescription(\'shipViaMemo\')"></i>\r\n            </label>\r\n\r\n\r\n            \x3c!-- <input type="text" name="memo" pInputText class="form-control aline_de"\r\n              disabled /> --\x3e\r\n            <div [innerHTML]="salesOrderQuote.shipViaMemo" \r\n            [matTooltip]="parsedText(salesOrderQuote.shipViaMemo)"\r\n            style="width:100%;padding:0px !important;line-height:1.5"\r\n                class="text_editor_box">\r\n\r\n            </div>\r\n\r\n\r\n\r\n            \x3c!-- <span matTooltipPosition="above" matTooltip="{{salesOrderQuote.shipViaMemo}}">\r\n              <input type="text" name="shipViaMemo" class="form-control" class="form-control"\r\n               value="{{salesOrderQuote.shipViaMemo}}" disabled /></span>\r\n            <i class="fa fa-info-circle fa-lg" data-toggle="modal"\r\n            data-target="#add-memo-description" matTooltipPosition="above"\r\n             matTooltip="{{salesOrderQuote.shipViaMemo}}"   (click)="onAddDescription(\'shipViaMemo\')"></i> --\x3e\r\n        </div>\r\n\r\n        <div class="form-group">\r\n\r\n            <label class="sales-quote-shipping-label">\r\n                Ship Via\r\n                <span style="margin-left:3px;cursor:pointer;"><a *ngIf="salesOrderQuote.shipToUserId"\r\n                        class="fa fa-plus-circle fa-lg" matTooltip="Add Ship Via" matTooltipPosition="above"\r\n                        (click)="onEditShipVia(salesOrderQuote); resetAddressShipViaForm();"></a></span>\r\n                <span style="margin-left:5px;cursor:pointer;"><a *ngIf="salesOrderQuote.shipToUserId"\r\n                        class="fa fa-edit fa-lg" matTooltip="Edit Ship Via" matTooltipPosition="above"\r\n                        (click)="onEditShipVia(salesOrderQuote)"></a></span>\r\n            </label>\r\n\r\n            <select [(ngModel)]="salesOrderQuote.shipViaName" name="shipViaName"\r\n                (change)="onShipViaSelect(salesOrderQuote.shipViaName)" required>\r\n                <option>--Select</option>\r\n                <option *ngFor="let shipVia of shipViaList" [ngValue]="shipVia.name">\r\n                    {{shipVia.name}}\r\n                </option>\r\n            </select>\r\n\r\n\r\n        </div>\r\n        <div class="form-group">\r\n\r\n            <label class="sales-quote-shipping-label">Shipping Acct Info</label>\r\n\r\n            <input type="text" class="form-control" [(ngModel)]="salesOrderQuote.shipViaShippingAccountInfo"\r\n                name="shipViaShippingAccountInfo" [disabled]="true" />\r\n\r\n\r\n        </div>\r\n        \x3c!-- <div class="form-group">\r\n\r\n            <label class="sales-quote-shipping-label">Shipping URL</label>\r\n\r\n            <input type="text" class="form-control" [(ngModel)]="salesOrderQuote.shipViaShippingURL" name="shipViaShippingURL"\r\n                   [disabled]="true" />\r\n\r\n\r\n        </div>\r\n        <div class="form-group">\r\n\r\n            <label class="sales-quote-shipping-label">Shipping ID</label>\r\n\r\n            <input type="text" class="form-control" [(ngModel)]="salesOrderQuote.shippingId" name="shippingId"\r\n                   [disabled]="true" />\r\n\r\n\r\n        </div> --\x3e\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n    <div class="col-md-3">\r\n        <h5 class="po-head">Bill To </h5>\r\n        <div class="form-group">\r\n            <label class="sales-quote-shipping-label">User Type <span class="clr-red">*</span></label>\r\n            <select [ngClass]="inputValidCheck ? \'select-validate-cstm\' : \'\'" name="billToUserTypeId"\r\n                [(ngModel)]="salesOrderQuote.billToUserTypeId" (change)="clearInputBillTo();onChangeBillToUserType();"\r\n                #billUserType="ngModel" required>\r\n                <option value="null">-- Select --</option>\r\n                <option value="1">Customer</option>\r\n                <option value="2">Vendor</option>\r\n                <option value="3">Company</option>\r\n            </select>\r\n            <div *ngIf="billUserType.invalid && (billUserType.dirty || billUserType.touched)"\r\n                class="alert alert-danger alert-danger-cstm">\r\n                <div *ngIf="billUserType.errors.required">\r\n                    <small> User Type is required </small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="form-group">\r\n            \x3c!-- <div class="form-row"> --\x3e\r\n            \x3c!-- <div class="col-sm-11"> --\x3e\r\n            <label class="sales-quote-shipping-label">Customer Name <span class="clr-red">*</span></label>\r\n            <p-autoComplete field="label" [ngClass]="inputValidCheck ? \'p-acomp-validate\' : \'\'" class="pautocomp-cstm"\r\n                (onClear)="clearInputBillTo()" [(ngModel)]="salesOrderQuote.billToUserId" name="billToUserName"\r\n                [suggestions]="billToUserNames" (completeMethod)="filterBillToUserNames($event)" [size]="30"\r\n                [minLength]="1" [dropdown]="true"\r\n                (onSelect)="onBillToUserSelected($event.value, salesOrderQuote, salesOrderQuote.billToAddressId);"\r\n                #billToUserName="ngModel" errorMessage="Records not found" [forceSelection]="true" required>\r\n            </p-autoComplete>\r\n            <div *ngIf="billToUserName.invalid && (billToUserName.dirty || billToUserName.touched)"\r\n                class="alert alert-danger alert-danger-cstm">\r\n                <div *ngIf="billToUserName.errors.required">\r\n                    <small> User Name is required </small>\r\n                </div>\r\n            </div>\r\n            \x3c!-- </div> --\x3e\r\n            \x3c!-- <div class="col-sm-1">\r\n                <div *ngIf="salesOrderQuote.billToUserTypeId==1"\r\n                    style="cursor:pointer; font-size:14px; margin:2px -8px;"><a class="fa fa-plus-circle fa-lg"\r\n                        target="_blank" matTooltip="Add Customer" matTooltipPosition="above"\r\n                        [routerLink]="[\'/customersmodule/customerpages/app-customer-create\']"></a></div>\r\n                <div *ngIf="salesOrderQuote.billToUserTypeId==2"\r\n                    style="cursor:pointer; font-size:14px; margin:2px -8px;"><a class="fa fa-plus-circle fa-lg"\r\n                        target="_blank" matTooltip="Add Customer" matTooltipPosition="above"\r\n                        [routerLink]="[\'/vendorsmodule/vendorpages/app-vendor-general-information\']"></a></div>\r\n            </div> --\x3e\r\n            \x3c!-- </div> --\x3e\r\n        </div>\r\n        <div class="form-group">\r\n\r\n            <label class="sales-quote-shipping-label">\r\n                Site Name<span class="clr-red">*</span>\r\n                <span style="margin-left:3px;cursor:pointer;"><a *ngIf="salesOrderQuote.billToUserId"\r\n                        class="fa fa-plus-circle fa-lg" matTooltip="Add Site Name" matTooltipPosition="above"\r\n                        data-toggle="modal" data-target="#createBillingSiteName"\r\n                        (click)="onClickBillSiteName(\'AddSiteName\')"></a></span>\r\n                <span style="margin-left:5px;cursor:pointer;"><a *ngIf="salesOrderQuote.billToUserId"\r\n                        class="fa fa-edit fa-lg" matTooltip="Edit Site Name" matTooltipPosition="above"\r\n                        data-toggle="modal" data-target="#createBillingSiteName"\r\n                        (click)="onClickBillSiteName(\'EditSiteName\', salesOrderQuote)"></a></span>\r\n            </label>\r\n\r\n            <select [(ngModel)]="salesOrderQuote.billToSiteName" name="billToSiteName"\r\n                (change)="onBillSiteSelect(salesOrderQuote.billToSiteName)" required>\r\n                <option>--Select</option>\r\n                <option *ngFor="let site of billToSiteList" [ngValue]="site.siteName">\r\n                    {{site.siteName}}\r\n                </option>\r\n            </select>\r\n\r\n\r\n\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="sales-quote-shipping-label">Address</label>\r\n\r\n            <input type="text" class="form-control" [(ngModel)]="salesOrderQuote.billToAddress1" name="billToAddress1"\r\n                [disabled]="true" />\r\n\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="sales-quote-shipping-label">City</label>\r\n\r\n            <input type="text" class="form-control" [(ngModel)]="salesOrderQuote.billToCity" name="billToCity"\r\n                [disabled]="true" />\r\n\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="sales-quote-shipping-label">Primary State/Province</label>\r\n\r\n            <input type="text" class="form-control" [(ngModel)]="salesOrderQuote.billToState" name="billToState"\r\n                [disabled]="true" />\r\n\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="sales-quote-shipping-label">Postal</label>\r\n\r\n            <input type="text" class="form-control" [(ngModel)]="salesOrderQuote.billToPostalCode"\r\n                name="billToPostalCode" [disabled]="true" />\r\n\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="sales-quote-shipping-label">Country</label>\r\n\r\n            <input type="text" class="form-control" [(ngModel)]="salesOrderQuote.billToCountry" name="billToCountry"\r\n                [disabled]="true" />\r\n\r\n        </div>\r\n        <div class="form-group">\r\n            <label class="sales-quote-shipping-label">Contact Name <span class="clr-red">*</span></label>\r\n\r\n            <p-autoComplete class="autocomp-customer-cstm" [(ngModel)]="salesOrderQuote.billToContactId"\r\n                [suggestions]="firstNamesBillTo" [forceSelection]="true" emptyMessage="No Match Found" field="firstName"\r\n                (completeMethod)="filterCustomerContactsForBillTo($event)" [size]="30" [minLength]="1"\r\n                [dropdown]="true">\r\n            </p-autoComplete>\r\n\r\n\r\n        </div>\r\n        <div class="form-group memo-popup-cstm mat_emo" style="margin-top: 12px;">\r\n            <label class="sales-quote-shipping-label">\r\n                Memo <i class="fa fa-pencil" data-toggle="modal"\r\n                 data-target="#add-memo-description"\r\n                    matTooltipPosition="above" matTooltip="Memo"\r\n                     (click)="onAddDescription(\'billToMemo\')"></i>\r\n            </label>\r\n\r\n            \x3c!-- <span matTooltipPosition="above" matTooltip="{{salesOrderQuote.billToMemo}}"  > --\x3e\r\n            \x3c!-- <input type="text" name="billToMemo" class="form-control" class="form-control"\r\n            value="{{salesOrderQuote.billToMemo}}" disabled /> --\x3e\r\n\r\n            <div [innerHTML]="salesOrderQuote.billToMemo"\r\n             class="form-control"\r\n             [matTooltip]="parsedText(salesOrderQuote.billToMemo)"\r\n                style="width:100%;padding:0px !important;" class="text_editor_box"></div>\r\n\r\n\r\n\r\n            \x3c!-- </span> --\x3e\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="add-memo-description" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-lg" style="max-width: 400px !important;">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Edit {{tempMemoLabel}}</h4>\r\n            </div>\r\n\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                        <th style="color: #fff;">{{tempMemoLabel}}</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <p-editor [(ngModel)]="tempMemo" [style]="{\'height\':\'320px\'}" name="tempMemo" required>\r\n                                </p-editor>\r\n                                \x3c!-- <textarea [(ngModel)] = "material.description"></textarea> --\x3e\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div style="float:right">\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                        style="padding: 6px 12px !important;margin-top: 10px;"\r\n                         (click)="onSaveDescription()">\r\n                        Save\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger" \r\n                    style="padding: 6px 12px !important;margin-top: 10px;"\r\n                        data-dismiss="modal">\r\n                        Close\r\n                    </button>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            \x3c!-- <div class="modal-body">\r\n              <div class="form-group">\r\n                <label class="sales-quote-shipping-label">{{tempMemoLabel}}</label>\r\n                <textarea class="form-control" name="tempMemo" [(ngModel)]="tempMemo" value={{tempMemo}}></textarea>\r\n              </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n              <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="onSaveDescription()">Save</button>\r\n              <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div> --\x3e\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="createPOSiteName" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-lg partsList-modal" style="max-width: 400px !important;">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal"\r\n                    (click)="resetAddressShippingForm();">&times;</button>\r\n                <h4 class="modal-title">{{addressSiteNameHeader}}</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="form-row">\r\n                    <form #addSiteNameForm="ngForm" class="form-horizontal add-site-name">\r\n                        <div class="form-group col-md-12">\r\n                            <label class="col-md-6">Site Name:</label>\r\n                            <input type="text" class="form-control col-md-6" name="siteName"\r\n                                [(ngModel)]="addressFormForShipping.siteName">\r\n                        </div>\r\n                        <div class="form-group col-md-12">\r\n                            <label class="col-md-6">Address 1:</label>\r\n                            <input type="text" class="form-control col-md-6" name="address1"\r\n                                [(ngModel)]="addressFormForShipping.address1">\r\n                        </div>\r\n                        <div class="form-group col-md-12">\r\n                            <label class="col-md-6">Address 2:</label>\r\n                            <input type="text" class="form-control col-md-6" name="address2"\r\n                                [(ngModel)]="addressFormForShipping.address2">\r\n                        </div>\r\n                        \x3c!-- <div class="form-group col-md-12">\r\n                          <label class="col-md-6">Address 3:</label>\r\n                          <input type="text" class="form-control col-md-6" name="address3" [(ngModel)]="addressFormForShipping.address3">\r\n                        </div> --\x3e\r\n                        <div class="form-group col-md-12">\r\n                            <label class="col-md-6">City:</label>\r\n                            <input type="text" class="form-control col-md-6" name="city"\r\n                                [(ngModel)]="addressFormForShipping.city">\r\n                        </div>\r\n                        <div class="form-group col-md-12">\r\n                            <label class="col-md-6">State:</label>\r\n                            <input type="text" class="form-control col-md-6" name="stateOrProvince"\r\n                                [(ngModel)]="addressFormForShipping.stateOrProvince">\r\n                        </div>\r\n                        <div class="form-group col-md-12">\r\n                            <label class="col-md-6">Postal:</label>\r\n                            <input type="text" class="form-control col-md-6" name="postalCode"\r\n                                [(ngModel)]="addressFormForShipping.postalCode">\r\n                        </div>\r\n                        <div class="form-group col-md-12">\r\n                            <label class="col-md-6">Country:</label>\r\n                            \x3c!-- <input type="text" class="form-control col-md-6" name="country" [(ngModel)]="addressFormForShipping.country"> --\x3e\r\n                            <p-autoComplete field="label" class="pautocomp-cstm"\r\n                                [(ngModel)]="addressFormForShipping.countryId" name="country"\r\n                                [suggestions]="countriesList" (completeMethod)="filterCountries($event)" [size]="30"\r\n                                [minLength]="1" [dropdown]="true" errorMessage="Records not found"\r\n                                [forceSelection]="true"></p-autoComplete>\r\n                        </div>\r\n                        <div class="form-group col-md-12" style="margin-top: 8px;">\r\n                            <button type="button" class="btn btn-primary" [disabled]="!addSiteNameForm.valid"\r\n                                (click)="saveShippingAddress(); " data-dismiss="modal">Save</button>\r\n                            \x3c!--resetAddressShippingForm();--\x3e\r\n                            \x3c!-- <button type="button" class="btn btn-primary" [disabled]="!addSiteNameForm.valid" (click)="saveShippingAddressToPO();" data-dismiss="modal">Save to this PO</button>--\x3e\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="resetAddressShippingForm();">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="createBillingSiteName" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-lg partsList-modal" style="max-width: 400px !important;">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal"\r\n                    (click)="resetAddressBillingForm();">&times;</button>\r\n                <h4 class="modal-title">{{addressSiteNameHeader}}</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="form-row">\r\n                    <form #addSiteNameForm="ngForm" class="form-horizontal add-site-name">\r\n                        <div class="form-group col-md-12">\r\n                            <label class="col-md-6">Site Name:</label>\r\n                            <input type="text" class="form-control col-md-6" name="siteName"\r\n                                [(ngModel)]="addressFormForBilling.siteName">\r\n                        </div>\r\n                        \x3c!-- <div class="form-group col-md-12">\r\n                          <label class="col-md-6">Site Name:</label>\r\n                          <select class="form-control col-md-6" name="siteName" [(ngModel)]="addressFormForBilling.siteName">\r\n                            <option value="0">Select</option>\r\n                          </select>\r\n                        </div> --\x3e\r\n                        <div class="form-group col-md-12">\r\n                            <label class="col-md-6">Address 1:</label>\r\n                            <input type="text" class="form-control col-md-6" name="address1"\r\n                                [(ngModel)]="addressFormForBilling.address1">\r\n                        </div>\r\n                        <div class="form-group col-md-12">\r\n                            <label class="col-md-6">Address 2:</label>\r\n                            <input type="text" class="form-control col-md-6" name="address2"\r\n                                [(ngModel)]="addressFormForBilling.address2">\r\n                        </div>\r\n                        \x3c!-- <div class="form-group col-md-12">\r\n                          <label class="col-md-6">Address 3:</label>\r\n                          <input type="text" class="form-control col-md-6" name="address3" [(ngModel)]="addressFormForBilling.address3">\r\n                        </div> --\x3e\r\n                        <div class="form-group col-md-12">\r\n                            <label class="col-md-6">City:</label>\r\n                            <input type="text" class="form-control col-md-6" name="city"\r\n                                [(ngModel)]="addressFormForBilling.city">\r\n                        </div>\r\n                        <div class="form-group col-md-12">\r\n                            <label class="col-md-6">State:</label>\r\n                            <input type="text" class="form-control col-md-6" name="stateOrProvince"\r\n                                [(ngModel)]="addressFormForBilling.stateOrProvince">\r\n                        </div>\r\n                        <div class="form-group col-md-12">\r\n                            <label class="col-md-6">Postal:</label>\r\n                            <input type="text" class="form-control col-md-6" name="postalCode"\r\n                                [(ngModel)]="addressFormForBilling.postalCode">\r\n                        </div>\r\n                        <div class="form-group col-md-12">\r\n                            <label class="col-md-6">Country:</label>\r\n                            <p-autoComplete field="label" class="pautocomp-cstm"\r\n                                [(ngModel)]="addressFormForBilling.countryId" name="country"\r\n                                [suggestions]="countriesList" (completeMethod)="filterCountries($event)" [size]="30"\r\n                                [minLength]="1" [dropdown]="true" errorMessage="Records not found"\r\n                                [forceSelection]="true"></p-autoComplete>\r\n                            \x3c!-- <input type="text" class="form-control col-md-6" name="country" [(ngModel)]="addressFormForBilling.country"> --\x3e\r\n                        </div>\r\n                        <div class="form-group col-md-12" style="margin-top: 8px;">\r\n                            <button type="button" class="btn btn-primary" [disabled]="!addSiteNameForm.valid"\r\n                                (click)="saveBillingAddress();" data-dismiss="modal">Save</button>\r\n                            \x3c!--<button type="button" class="btn btn-primary" [disabled]="!addSiteNameForm.valid" (click)="saveBillingAddressToPO();" data-dismiss="modal">Save to this PO</button>--\x3e\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="resetAddressBillingForm();">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n<div style="text-align:right; width:100%; padding:0;">\r\n    <button type="button" class="btn btn-primary" style="width:55px;height:20px;"\r\n        (click)="openConfirmationModal()">Save</button>\r\n</div>\r\n\r\n<ng-template #updatePNDetailsModal let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeConfirmationModal()">&times;</button>\r\n        <h4 class="modal-title">Do you want to save the Address Details?</h4>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="approve()">Save</button>\r\n    </div>\r\n</ng-template>\r\n<ng-template #shipToShipVia let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" (click)="clsoeShipViaModal(); resetAddressShipViaForm()">&times;</button>\r\n        <h4 class="modal-title"> Add Ship Via </h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-row">\r\n            <form #addShipViaForm="ngForm" class="form-horizontal add-site-name">\r\n                <div class="form-group col-md-12">\r\n                    <label class="col-md-6">Ship Via:</label>\r\n                    \x3c!-- <input type="text" class="form-control col-md-6" name="shippingAcctInfo" [(ngModel)]="addShipViaFormForShipping.shipVia"> --\x3e\r\n                    \x3c!-- <select class="form-control col-md-6" name="shipviaId" [(ngModel)]="shipToShipViaDetails.shipviaId">\r\n                      <option value="0">Select</option>\r\n                    </select> --\x3e\r\n                    <select class="form-control col-md-6" title="Ship Via" name="shipVia"\r\n                        [(ngModel)]="addShipViaFormForShipping.shipViaId" required>\r\n                        <option *ngFor="let object of allShipViaInfo" [ngValue]="object.value">{{object.label}}</option>\r\n                    </select>\r\n                </div>\r\n                \x3c!-- <div class="form-group col-md-12">\r\n                  <label class="col-md-6">Shipping Cost:</label>\r\n                  <input type="text" class="form-control col-md-6" name="shippingCost" [(ngModel)]="shipToShipViaDetails.shippingCost">\r\n                </div>\r\n                <div class="form-group col-md-12">\r\n                  <label class="col-md-6">Handling Cost:</label>\r\n                  <input type="text" class="form-control col-md-6" name="handlingCost" [(ngModel)]="shipToShipViaDetails.handlingCost">\r\n                </div> --\x3e\r\n                <div class="form-group col-md-12">\r\n                    <label class="col-md-6">Shipping Acct Info:</label>\r\n                    <input type="text" class="form-control col-md-6" name="shippingAcctInfo"\r\n                        [(ngModel)]="addShipViaFormForShipping.shippingAccountInfo">\r\n                </div>\r\n                <div class="form-group col-md-12">\r\n                    <label class="col-md-6">Shipping URL:</label>\r\n                    <input type="text" class="form-control col-md-6" name="shippingURL"\r\n                        [(ngModel)]="addShipViaFormForShipping.shippingURL">\r\n                </div>\r\n                <div class="form-group col-md-12">\r\n                    <label class="col-md-6">Shipping Id:</label>\r\n                    <input type="text" class="form-control col-md-6" name="shippingId"\r\n                        [(ngModel)]="addShipViaFormForShipping.shippingId">\r\n                </div>\r\n                <div class="form-group col-md-12">\r\n                    <label class="col-md-6">Memo:</label>\r\n                    <input type="text" class="form-control col-md-6" name="shipviamemo"\r\n                        [(ngModel)]="addShipViaFormForShipping.memo">\r\n                </div>\r\n                <div class="form-group col-md-12" style="margin-top: 8px;">\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                        [disabled]="!addShipViaForm.valid"\r\n                        (click)="saveShipViaForShipTo(); resetAddressShipViaForm();">Save</button>\r\n                    \x3c!--<button type="button" class="btn btn-primary" data-dismiss="modal"  [disabled]="!addShipViaForm.valid" (click)="saveShipToShipViaDetailsToPO()">Save to this PO</button>--\x3e\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="clsoeShipViaModal()">Close</button>\r\n    </div>\r\n</ng-template>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},"O/au":function(e,t,r){"use strict";r.r(t),t.default='<form #partActionsForm="ngForm">\r\n\r\n<div class="modal-header">\r\n        <button type="button" class="close" (click)="onClose()">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title">{{selectedPartActionType}}</h4>\r\n      </div>\r\n      <div class="modal-body">\r\n       \x3c!-- <h6>Table Data</h6> --\x3e\r\n       <div class="row margin-row">\r\n        <div class="col-md-12 col-sm-12 col-12">\r\n          <div class="col-4 column">\r\n            <div class="form-group">\r\n              <label class="col-sm-4  text-left">SO Num</label>\r\n              <input type="text" class="form-control quantityTextBox col-sm-7" name="salesOrderNumber" disabled="true"\r\n                [(ngModel)]="salesOrder.salesOrderNumber" /> \r\n            </div>\r\n          </div>\r\n          <div class="col-4 column">\r\n            <div class="form-group">\r\n              <label class="col-sm-4 text-left">Customer Name</label>\r\n              <input type="text" class="form-control quantityTextBox col-sm-7" name="customerName" disabled="true"\r\n                [(ngModel)]="salesOrder.customerName" />\r\n            </div>\r\n          </div>\r\n       </div>\r\n      </div>\r\n      <div class="row margin-row mt-2">\r\n        <div class="col-md-12 col-sm-12 col-12">\r\n          \r\n          <div class="col-4 column">\r\n            <div class="form-group">\r\n              \x3c!-- <label>Show Alternates</label> --\x3e\r\n              <p-checkbox name="showAlternates"  binary="true" label="Show Alternates">\r\n              </p-checkbox>\r\n            </div>\r\n          </div>\r\n          <div class="col-4 column">\r\n            <div class="form-group">\r\n              <p-checkbox name="showEqualience"  binary="true" label="Show Equalience">\r\n              </p-checkbox>\r\n            </div>\r\n          </div>\r\n    \r\n        </div>\r\n      </div>\r\n\r\n      <p-table #dt [value]="parts" class="rpo-table-cstm ptable-custom" [columns]="columns" [scrollable]="true"\r\n     [resizableColumns]="true" selectionMode="single"  [responsive]="true"                                         \r\n [metaKeySelection]="true" [style]="{ width: \'100%\' }">\r\n        <ng-template pTemplate="colgroup" let-columns>\r\n          <colgroup>\r\n            <col  [ngStyle]="{\'width\': \'50px\'}"  />\r\n\r\n            <col *ngFor="let col of columns" [ngStyle]="{\'width\': col.width}" />\r\n          </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate="header" let-columns>\r\n          <tr>\r\n            <th>\r\n            </th>\r\n            <th colspan="9">\r\n              Materials\r\n            </th>\r\n            <th colspan="4">\r\n              Stockline\r\n            </th>\r\n            <th colspan="4">\r\n              \r\n            </th>\r\n          </tr>\r\n          <tr>\r\n            <th class="text-left">\r\n              \x3c!-- <p-tableHeaderCheckbox></p-tableHeaderCheckbox> --\x3e\r\n              <p-checkbox [(ngModel)]="selectAllParts" name="selectAllParts" binary="true" (onChange)="onChangeOfSelectAllQuotes($event)"\r\n      >\r\n    </p-checkbox>\r\n            </th>\r\n            <th *ngFor="let col of columns">\r\n              {{col.header}}\r\n            </th>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="body" let-part let-rowData let-i="rowIndex" let-columns="columns">\r\n          <tr pReorderableRowHandle >\r\n              <td>\r\n                  <span><input type="checkbox" (change)="onChange($event, part)" /></span>\r\n                  \x3c!-- <p-tableCheckbox [value]="part"></p-tableCheckbox> --\x3e\r\n                  \x3c!--<p-checkbox (change)="onChange($event, part)"\r\n                              binary="true">\r\n                  </p-checkbox>--\x3e\r\n              </td>\r\n            <td *ngFor="let col of columns" pReorderableRowHandle >\r\n              <ng-container *ngIf="col.field !=\'quantityOnOrder\' && col.field !=\'quantityAvailable\' && col.field !=\'quantityOnHand\' && col.field !=\'quantityIssued\' && col.field!=\'quantityReserved\' && col.field!=\'quantity\' && col.field!=\'qtyToReserve\' && col.field != \'reservedDate\' && col.field != \'reservedById\' && col.field != \'issuedDate\' && col.field != \'issuedById\' && col.field != \'qtyToIssued\' && col.field != \'qtyToReserveAndIssue\' && col.field != \'qtyToUnReserve\' && col.header != \'Qty To UnIssue\'">\r\n                \x3c!-- {{rowData[col.field]}}  --\x3e\r\n                {{part[col.field]}}  \r\n              </ng-container>\r\n\r\n              <span *ngIf="col.field ==\'quantityOnOrder\' || col.field ==\'quantityAvailable\' || col.field ==\'quantityOnHand\' || col.field ==\'quantityIssued\' || col.field ==\'quantityReserved\' || col.field ==\'quantity\'" class="float-right" style="text-align: right;">\r\n                \x3c!-- {{rowData[col.field]}}  --\x3e\r\n                {{part[col.field]}}  \r\n              </span>\r\n\r\n              \x3c!--qtyToReserve--\x3e\r\n              \x3c!--<ng-container *ngIf="col.field ==\'qtyToReserve\' && selectedPartActionType == \'Reserve\'">\r\n                <input type="number" class="form-control quantityTextBox text-right" pInputText pKeyFilter="num" required="col.field ==\'qtyToReserve\' && selectedPartActionType == \'Reserve\'" name="qtyToReserve{{i}}"  value="{{part.qtyToReserve}}" \r\n                [(ngModel)]="part.qtyToReserve"  [disabled]="rowData.isSelected == false" />  \r\n                \r\n              </ng-container>\r\n              <span *ngIf="col.field ==\'qtyToReserve\' && selectedPartActionType != \'Reserve\'" class="float-right" style="text-align: right;">\r\n                {{part[col.field]}} \r\n                \r\n              </span>--\x3e\r\n               \x3c!--/qtyToReserve--\x3e\r\n\r\n               \x3c!-- qtyToIssued --\x3e\r\n              \x3c!--<ng-container *ngIf="col.field ==\'qtyToIssued\' && selectedPartActionType == \'Issue\'">\r\n                <input type="number" class="form-control quantityTextBox text-right" pInputText pKeyFilter="num" required="col.field ==\'qtyToIssued\' && selectedPartActionType == \'Issue\'" name="qtyToIssued{{i}}"  value="{{part.qtyToIssued}}" \r\n                [(ngModel)]="part.qtyToIssued" [disabled]="rowData.isSelected == false" />  \r\n                \r\n              </ng-container>\r\n              <span *ngIf="col.field ==\'qtyToIssued\' && selectedPartActionType != \'Issue\'" class="float-right" style="text-align: right;">\r\n                {{part[col.field]}} \r\n                \r\n              </span>--\x3e\r\n              \x3c!-- /qtyToIssued --\x3e\r\n\r\n               \x3c!-- qtyToReserveAndIssue --\x3e\r\n               \x3c!--<ng-container *ngIf="col.field ==\'qtyToReserveAndIssue\' && selectedPartActionType == \'Reserve & Issue\'">\r\n                <input type="number" class="form-control quantityTextBox text-right" pInputText pKeyFilter="num" required="col.field ==\'qtyToReserveAndIssue\' && selectedPartActionType == \'Reserve & Issue\'" name="qtyToReserveAndIssue{{i}}"  value="{{part.qtyToReserveAndIssue}}" \r\n                [(ngModel)]="part.qtyToReserveAndIssue"   [disabled]="rowData.isSelected == false" />  \r\n                \r\n              </ng-container>\r\n              <span *ngIf="col.field ==\'qtyToReserveAndIssue\' && selectedPartActionType != \'Reserve & Issue\'" class="float-right" style="text-align: right;">\r\n                {{part[col.field]}} \r\n                \r\n              </span>--\x3e\r\n              \x3c!-- /qtyToReserveAndIssue --\x3e\r\n              \x3c!-- qtyToUnReserve --\x3e\r\n              \x3c!--<ng-container *ngIf="col.field ==\'qtyToUnReserve\' && selectedPartActionType == \'Unreserve\'">\r\n                <input type="number" class="form-control quantityTextBox text-right" pInputText pKeyFilter="num" required="col.field ==\'qtyToUnReserve\' && selectedPartActionType == \'Unreserve\'" name="qtyToUnReserve{{i}}"  value="{{part.qtyToUnReserve}}" \r\n                [(ngModel)]="part.qtyToUnReserve"  [disabled]="rowData.isSelected == false" />  \r\n                \r\n              </ng-container>--\x3e\r\n              \r\n              \x3c!-- /qtyToUnReserve --\x3e\r\n\r\n              \x3c!-- qtyToUnIssued --\x3e\r\n              \x3c!--<ng-container *ngIf="col.header ==\'Qty To UnIssue\' && selectedPartActionType == \'UnIssue\'">\r\n                <input type="number" class="form-control quantityTextBox text-right" pInputText pKeyFilter="num" required="col.header ==\'Qty To UnIssue\' && selectedPartActionType == \'UnIssue\'" name="qtyToUnIssued{{i}}"  value="{{part.qtyToUnIssued}}" \r\n                [(ngModel)]="part.qtyToUnIssued"  [disabled]="rowData.isSelected == false" />  \r\n                \r\n              </ng-container>--\x3e\r\n              \r\n              \x3c!-- /qtyToUnIssued --\x3e\r\n \r\n              \r\n              \x3c!--<ng-container *ngIf="col.field ==\'reservedDate\'">\r\n                <p-calendar class="pcal-cpo-grid"\t\t\t\t\t  \t\r\n\t\t\t\t\t\t      [(ngModel)]="part.reservedDate"\r\n\t\t\t\t\t\t      name="reservedDate{{i}}"\r\n\t\t\t\t\t\t      [showIcon]="true" appendTo=\'body\' [baseZIndex]="9999" [disabled]="rowData.isSelected == false"\r\n\t\t\t\t\t      ></p-calendar>                \r\n              </ng-container>              \r\n              <ng-container *ngIf="col.field ==\'reservedById\'">\r\n                <p-autoComplete \r\n                  class="p-autoComplete-ctsm"\r\n                  [(ngModel)]="part.reservedById"\r\n                  name="reservedById{{i}}"\r\n                  id="reservedById"\r\n                  title="Reserved By" appendTo=\'body\' [baseZIndex]="9999" \r\n                  field="name"\r\n                  required="selectedPartActionType == \'Reserve\' || selectedPartActionType == \'Reserve & Issue\' || selectedPartActionType == \'Unreserve\'"\r\n                  [suggestions]="employeesList" [disabled]="rowData.isSelected == false"\r\n                  (completeMethod)="filterReservedBy($event)" \r\n                  [dropdown]="true">\r\n                    </p-autoComplete>\r\n              </ng-container>   \r\n              <ng-container *ngIf="col.field ==\'issuedDate\'">\r\n                <p-calendar\t\t\t\t\t  \t\r\n\t\t\t\t\t\t      [(ngModel)]="part.issuedDate" [disabled]="rowData.isSelected == false"\r\n\t\t\t\t\t\t      name="issuedDate{{i}}" appendTo=\'body\' [baseZIndex]="9999" \r\n\t\t\t\t\t\t      [showIcon]="true"\r\n\t\t\t\t\t      ></p-calendar>                \r\n              </ng-container>              \r\n              <ng-container *ngIf="col.field ==\'issuedById\'">\r\n                <p-autoComplete \r\n                  class="p-autoComplete-ctsm" [disabled]="rowData.isSelected == false"\r\n                  [(ngModel)]="part.issuedById"\r\n                  name="issuedById{{i}}"\r\n                  id="issuedById"\r\n                  title="Reserved By" appendTo=\'body\' [baseZIndex]="9999" \r\n                  field="name"\r\n                  required="selectedPartActionType == \'Issue\' || selectedPartActionType == \'Reserve & Issue\' || selectedPartActionType == \'UnIssue\'"\r\n                                    [suggestions]="employeesList"\r\n                  (completeMethod)="filterReservedBy($event)" [size]="30" [minLength]="1"\r\n                  [dropdown]="true">\r\n                    </p-autoComplete>\r\n              </ng-container>--\x3e              \r\n            </td>          \r\n          </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate="emptymessage" let-columns *ngIf="parts.length == 0">\r\n            <tr>\r\n              <td [attr.colspan]="18" class="no-records-cstm" style="text-align: left;">\r\n                No records found\r\n              </td>\r\n            </tr>\r\n          </ng-template>\r\n        </p-table>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button type="submit" (click)="savereserveissuesparts(parts)" class="btn btn-success" [disabled]="!partActionsForm.valid || disableSubmitButtonForAction == true">\r\n          Save\r\n        </button>\r\n        <button type="button" (click)="onClose()" class="btn btn-danger">\r\n          Close\r\n        </button>\r\n  </div>\r\n  </form>\r\n\r\n\r\n'},OxzN:function(e,t,r){"use strict";r.r(t),t.default=".coustomTable tr th {\n  font-weight: 600 !important;\n  font-size: 10.5px !important;\n  color: #fff !important;\n  background-color: #4298ff;\n  border: 1px solid #3a7fd2;\n  letter-spacing: 0.3px;\n  line-height: 25px;\n  text-align: center;\n}\n\n.coustomTable tr td {\n  padding: 5px 2px !important;\n  white-space: nowrap;\n  color: #222;\n  background: inherit;\n  border: 1px solid #c8c8c8;\n  font-size: 11px !important;\n}\n\n.workflow-table-material {\n  padding-bottom: 50%;\n}\n\n.fileupload {\n  overflow: scroll;\n}\n\ninput[type=number], input[type=text], input[type=email], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.modal-body p {\n  overflow: auto !important;\n}\n\n.form-horizontal b {\n  top: auto !important;\n}"},"P/OL":function(e,t,r){"use strict";r.r(t),t.default='<form #addPartNumbers="ngForm" class="form-horizontal" (ngSubmit)="onAddPartNumberSubmit($event)">\r\n  <div class="modal-header">\r\n    <button type="button" class="close" (click)="onClose()">\r\n      &times;\r\n    </button>\r\n    <h4 class="modal-title">Add PN</h4>\r\n  </div>\r\n  <div class="modal-body">\r\n    <app-customer-detail [salesQuote]="salesQuote"></app-customer-detail>\r\n    <app-part-number-filter [salesQuote]="salesQuote" [parts]="parts" [allConditionInfo]="allConditionInfo"\r\n      [selectedParts]="selectedParts" [isStockLineViewMode]="isStockLineViewMode" (onPartSearch)="onPartSearch($event)"\r\n      [selectedSummaryRow]="selectedSummaryRow" (onSearchTypeChange)="onSearchTypeChange($event)">\r\n    </app-part-number-filter>\r\n    <ng-container>\r\n      <app-part-details [parts]="parts" [query]="query" (select)="onSelect($event)"\r\n        [isStockLineViewMode]="isStockLineViewMode" (onPartSelect)="onShowModalMargin($event)"></app-part-details>\r\n    </ng-container>\r\n    \x3c!--<ng-container *ngIf="searchType === \'1\'">\r\n          <app-part-details [parts]="parts" (onPartSelect)="onShowModalMargin($event)"></app-part-details>\r\n        </ng-container>--\x3e\r\n    \x3c!--<ng-container *ngIf="searchType === \'2\'">\r\n          <app-stockline-part-details [parts]="parts" (select)="onSelect($event)"></app-stockline-part-details>\r\n        </ng-container>--\x3e\r\n  </div>\r\n  <div class="modal-footer">\r\n    \x3c!-- <button type="submit" (click)="onClose()" class="btn btn-success">\r\n      Save\r\n    </button> --\x3e\r\n    <button type="button" (click)="onClose()" class="btn btn-danger">\r\n      Close\r\n    </button>\r\n  </div>\r\n</form>'},P4hD:function(e,t,r){"use strict";r.r(t),t.default='<div class="card">\r\n  <div class="card-body">\r\n    <div class="table-responsive default-bg clear">\r\n      <div class="col-md-3">\r\n        <p><span class="label"><b>Quote Type <span class="clr-red">*</span> : </b></span>\r\n          <span class="value">\r\n            {{salesQuote.quoteTypeName ? salesQuote.quoteTypeName : \'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>SO Quote Num: </b></span>\r\n          <span class="value">\r\n            {{salesQuote.salesOrderQuoteNumber ? salesQuote.salesOrderQuoteNumber : \'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Version Num: </b></span>\r\n          <span class="value">\r\n            {{salesQuote.versionNumber ? salesQuote.versionNumber : \'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Open Date <span class="clr-red">*</span>: </b></span>\r\n          <span class="value">{{salesQuote.openDate | date: \'MM/dd/yyyy\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Customer Ref <span class="clr-red">*</span>: </b></span>\r\n          <span class="value">\r\n            {{salesQuote.customerReference}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Valid For (Days) <span class="clr-red">*</span>: </b></span>\r\n          <span class="value">{{salesQuote.validForDays ? salesQuote.validForDays : \'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Quote Exp Date <span class="clr-red">*</span>: </b></span>\r\n          <span class="value">{{salesQuote.quoteExpireDate | date: \'MM/dd/yyyy\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>SO Quote Status: </b></span>\r\n          <span class="value">{{salesQuote.status ? salesQuote.status :\'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Customer Warning: </b></span>\r\n          <span class="value">\r\n            {{salesQuote.customerWarningMessage ? salesQuote.customerWarningMessage : \'-\'}}\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <div class="col-md-3">\r\n        <p><span class="label"><b>Account Type <span class="clr-red">*</span>: </b></span>\r\n          <span class="value">{{salesQuote.accountTypeName ? salesQuote.accountTypeName : \'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Customer Name <span class="clr-red">*</span>: </b></span>\r\n          <span class="value">\r\n            {{salesQuote.customerName ? salesQuote.customerName : \'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Customer Contact <span class="clr-red">*</span>: </b></span>\r\n          <span class="value">\r\n            {{salesQuote.customerContactName ? salesQuote.customerContactName :\'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Cust Email: </b></span>\r\n          <span class="value">\r\n            {{salesQuote.customerContactEmail ? salesQuote.customerContactEmail : \'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Contract Ref: </b></span>\r\n          <span class="value">\r\n            {{salesQuote.contractReference ? salesQuote.contractReference :\'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Credit Limit: </b></span>\r\n          <span class="value">\r\n            {{ salesQuote.creditLimit | twoDecimalGlobalNumberFormatPipe}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Credit Terms: </b></span>\r\n          <span class="value">\r\n            {{salesQuote.creditTerms ? salesQuote.creditTerms : \'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Employee <span class="clr-red">*</span>:</b></span>\r\n          <span class="value">\r\n            {{salesQuote.employeeName ? salesQuote.employeeName : \'-\'}}\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <div class="col-md-3">\r\n        <p><span class="label"><b>Restrict PMA: </b></span>\r\n          <span class="value">\r\n            <input type="checkbox" [(ngModel)]="salesQuote.restrictPMA" name="restrictPMA" id="restrictPMA"\r\n              [disabled]="true" />\r\n            \x3c!-- {{salesQuote.restrictPMA == true ? \'Yes\' : "No" }} --\x3e\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Restrict DER: </b></span>\r\n          <span class="value">\r\n            <input type="checkbox" [(ngModel)]="salesQuote.restrictDER" name="restrictDER" id="restrictDER"\r\n              [disabled]="true" />\r\n            \x3c!-- {{salesQuote.restrictDER == true ? \'Yes\' : "No" }} --\x3e\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Salesperson/Agent: </b></span>\r\n          <span class="value">{{salesQuote.salesPersonName ? salesQuote.salesPersonName : \'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>CSR: </b></span>\r\n          <span class="value">\r\n            {{salesQuote.customerSeviceRepName ? salesQuote.customerSeviceRepName : \'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Lead Source : </b></span>\r\n          <span class="value">\r\n            {{salesQuote.leadSource ? salesQuote.leadSource : \'-\'}}\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Probability (%) : </b></span>\r\n          <span class="value">\r\n            \x3c!-- {{salesQuote.ProbabilityName ? (salesQuote.ProbabilityName | twoDecimalGlobalNumberFormatPipe) : \'-\'}} --\x3e\r\n            {{salesQuote.probabilityName ? (salesQuote.probabilityName) : \'-\'}} \r\n\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Memo: </b></span>\r\n          <span class="value">\r\n\r\n            <p class="p-0 m-0 p_textEditor" [innerHTML]="salesQuote.memo"></p>\r\n\r\n          </span>\r\n        </p>\r\n        <p><span class="label"><b>Notes: </b></span>\r\n          <span class="value">\r\n\r\n            <p class="p-0 m-0 p_textEditor" [innerHTML]="salesQuote.notes"></p>\r\n\r\n          </span>\r\n        </p>\r\n      </div>\r\n      <div class="col-md-3">\r\n        <div class="card">\r\n          <div class="card-header" style="padding:.1rem 2rem">\r\n            <label style="text-align: center; width:100%">Margin Summary</label>\r\n          </div>\r\n          <div style="padding:5px">\r\n            <p style="padding:0px"><span class="label"><b>Sales</b></span>\r\n              <span class="value" style="text-align:right">{{marginSummary.sales |twoDecimalGlobalNumberFormatPipe}}\r\n              </span>\r\n            </p>\r\n            <p style="padding:0px"><span class="label"><b>Misc Amt</b></span>\r\n              <span class="value" style="text-align:right">{{marginSummary.misc |twoDecimalGlobalNumberFormatPipe}}\r\n              </span>\r\n            </p>\r\n            <p style="padding:0px"><span class="label"><b>Net Sales</b></span>\r\n              <span class="value" style="text-align:right">{{marginSummary.netSales |twoDecimalGlobalNumberFormatPipe}}\r\n              </span>\r\n            </p>\r\n            <p style="padding:0px"><span class="label"><b>Product Cost</b></span>\r\n              <span class="value"\r\n                style="text-align:right">{{marginSummary.productCost |twoDecimalGlobalNumberFormatPipe}}\r\n              </span>\r\n            </p>\r\n            <p style="padding:0px"><span class="label"><b>Margin Amt</b></span>\r\n              <span class="value"\r\n                style="text-align:right">{{marginSummary.marginAmount |twoDecimalGlobalNumberFormatPipe}}\r\n              </span>\r\n            </p>\r\n            <p style="padding:0px"><span class="label"><b>Margin %</b></span>\r\n              <span class="value"\r\n                style="text-align:right">{{marginSummary.marginPercentage |twoDecimalGlobalNumberFormatPipe}}\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div style="padding-top: 10px"></div>\r\n        <div class="card">\r\n          <div class="card-header">\r\n            <label style="text-align: center; width:100%">Management Structure</label>\r\n          </div>\r\n          <div style="padding:5px">\r\n            <div class="form-group" style="margin-bottom: 4px;">\r\n              <input class="form-control" type="text" name="companyName" [(ngModel)]="managementStructure.level1"\r\n                disabled>\r\n            </div>\r\n            <div class="form-group" style="margin-bottom: 4px;">\r\n              <input class="form-control" type="text" name="BUName" [(ngModel)]="managementStructure.level2" disabled>\r\n            </div>\r\n            <div class="form-group" style="margin-bottom: 4px;">\r\n              <input class="form-control" type="text" name="divisionName" [(ngModel)]="managementStructure.level3"\r\n                disabled>\r\n            </div>\r\n            <div class="form-group" style="margin-bottom: 4px;">\r\n              <input class="form-control" type="text" name="deptName" [(ngModel)]="managementStructure.level4" disabled>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<p-tabView class="pas-tabview" (onChange)="onTabChange($event)">\r\n  <p-tabPanel header="Parts List">\r\n    <app-sales-part-number [salesQuote]="salesQuote" [isViewMode]="true"></app-sales-part-number>\r\n  </p-tabPanel>\r\n  <p-tabPanel header="Internal Approvers">\r\n    <app-sales-approve>\r\n    </app-sales-approve>\r\n  </p-tabPanel>\r\n  <p-tabPanel header="Approver Process">\r\n    <app-sales-customer-approvals [salesQuoteView]="salesQuoteView" [customerContactList]="customerContactList"\r\n      [marginSummary]="marginSummary" (quoteApprovedCheck)="verifySalesQuoteConversion($event)"\r\n      (on-quote-parts-approved-event)="onPartsApprovedEvent($event)">\r\n    </app-sales-customer-approvals>\r\n  </p-tabPanel>\r\n  <p-tabPanel header="Address">\r\n    <div class="table-responsive default-bg clear">\r\n      <div class="col-sm-4">\r\n        <h5 class="po-head">Ship To</h5>\r\n        <p><span class="label"><b>User Type: </b></span><span\r\n            class="value">{{salesQuote.shipToUserType ? salesQuote.shipToUserType : \'-\'}}</span></p>\r\n        <p><span class="label"><b>{{salesQuote.shipToUserType}} Name: </b></span><span\r\n            class="value">{{salesQuote.shipToUser ? salesQuote.shipToUser : \'-\'}}</span></p>\r\n        <p><span class="label"><b>Site Name: </b></span><span\r\n            class="value">{{salesQuote.shipToSiteName ? salesQuote.shipToSiteName : \'-\'}}</span></p>\r\n        <p><span class="label"><b>Address: </b></span><span\r\n            class="value">{{salesQuote.shipToAddress1 ? salesQuote.shipToAddress1 : \'-\'}}</span></p>\r\n        \x3c!-- <p><span class="label"><b>Address2: </b></span><span\r\n            class="value">{{salesQuote.shipToAddress2 ? salesQuote.shipToAddress2 : \'-\'}}</span></p>\r\n        <p><span class="label"><b>Address3: </b></span><span\r\n            class="value">{{salesQuote.shipToAddress3 ? salesQuote.shipToAddress3 : \'-\'}}</span></p> --\x3e\r\n        <p><span class="label"><b>City: </b></span><span\r\n            class="value">{{salesQuote.shipToCity ? salesQuote.shipToCity : \'-\'}}</span></p>\r\n        <p><span class="label"><b>Primary State/Province: </b></span><span\r\n            class="value">{{salesQuote.shipToState ? salesQuote.shipToState : \'-\'}}</span></p>\r\n        <p><span class="label"><b>Postal: </b></span><span\r\n            class="value">{{salesQuote.shipToPostalCode ? salesQuote.shipToPostalCode : \'-\'}}</span></p>\r\n        <p><span class="label"><b>Country: </b></span><span\r\n            class="value">{{salesQuote.shipToCountry ? salesQuote.shipToCountry : \'-\'}}</span></p>\r\n        <p><span class="label"><b>Contact Name: </b></span><span\r\n            class="value">{{salesQuote.shipToContactName ? salesQuote.shipToContactName : \'-\'}}</span></p>\r\n        <p><span class="label"><b>Memo: </b></span><span class="value">\r\n            <p class="p-0 m-0 p_textEditor" [innerHTML]="salesQuote.shipViaMemo"></p>\r\n\r\n\r\n          </span></p>\r\n        <p><span class="label"><b>Ship Via: </b></span><span\r\n            class="value">{{salesQuote.shipViaName ? salesQuote.shipViaName : \'-\'}}</span></p>\r\n        <p><span class="label"><b>Shipping Acct Info: </b></span><span\r\n            class="value">{{salesQuote.shipViaShippingAccountInfo ? salesQuote.shipViaShippingAccountInfo : \'-\'}}</span>\r\n        </p>\r\n      </div>\r\n      <div class="col-sm-4">\r\n        <h5 class="po-head">Bill To</h5>\r\n        <p><span class="label"><b>User Type: </b></span><span\r\n            class="value">{{salesQuote.billToUserType ? salesQuote.billToUserType : \'-\'}}</span></p>\r\n        <p><span class="label"><b>{{salesQuote.billToUserType}} Name: </b></span><span\r\n            class="value">{{salesQuote.billToUser ? salesQuote.billToUser : \'-\'}}</span></p>\r\n        <p><span class="label"><b>Site Name: </b></span><span\r\n            class="value">{{salesQuote.billToSiteName ? salesQuote.billToSiteName : \'-\'}}</span></p>\r\n        <p><span class="label"><b>Address: </b></span><span\r\n            class="value">{{salesQuote.billToAddress1 ? salesQuote.billToAddress1 : \'-\'}}</span></p>\r\n        \x3c!-- <p><span class="label"><b>Address2: </b></span><span\r\n            class="value">{{salesQuote.billToAddress2 ? salesQuote.billToAddress2 : \'-\'}}</span></p>\r\n        <p><span class="label"><b>Address3: </b></span><span\r\n            class="value">{{salesQuote.billToAddress3 ? salesQuote.billToAddress3 : \'-\'}}</span></p> --\x3e\r\n        <p><span class="label"><b>City: </b></span><span\r\n            class="value">{{salesQuote.billToCity ? salesQuote.billToCity : \'-\'}}</span></p>\r\n        <p><span class="label"><b>Primary State/Province: </b></span><span\r\n            class="value">{{salesQuote.billToState ? salesQuote.billToState : \'-\'}}</span></p>\r\n        <p><span class="label"><b>Postal: </b></span><span\r\n            class="value">{{salesQuote.billToPostalCode ? salesQuote.billToPostalCode : \'-\'}}</span></p>\r\n        <p><span class="label"><b>Country: </b></span><span\r\n            class="value">{{salesQuote.billToCountry ? salesQuote.billToCountry : \'-\'}}</span></p>\r\n        <p><span class="label"><b>Contact Name: </b></span><span\r\n            class="value">{{salesQuote.billToContactName ? salesQuote.billToContactName : \'-\'}}</span></p>\r\n        <p><span class="label"><b>Memo: </b></span><span class="value">\r\n            <p class="p-0 m-0 p_textEditor" [innerHTML]="salesQuote.billToMemo"></p>\r\n          </span></p>\r\n      </div>\r\n    </div>\r\n  </p-tabPanel>\r\n\r\n  <p-tabPanel header="Freight">\r\n    <app-sales-order-quote-freight [freightForm]="freight" [customerId]="customerId"\r\n      [salesOrderQuoteId]="salesQuote.salesOrderQuoteId" (saveFreightListForSO)="saveSalesOrderFreightsList($event)"\r\n      (updateFreightListForWo)="updateSalesOrderFreightsList($event)" (refreshData)="getFreightList($event)"\r\n      [markupList]="markupList" [isView]="true" [isQuote]="true" [buildMethodDetails]="buildMethodDetails">\r\n    </app-sales-order-quote-freight>\r\n  </p-tabPanel>\r\n  <p-tabPanel header="Charges">\r\n    <app-sales-order-quote-charges [chargeForm]="charge" [customerId]="customerId"\r\n      [salesOrderQuoteId]="salesQuote.salesOrderQuoteId" (saveChargesListForSO)="saveSalesOrderChargesList($event)"\r\n      (updateChargesListForSO)="updateSalesOrderChargesList($event)" (refreshData)="getChargesList()"\r\n      [markupList]="markupList" [isView]="true" [isQuote]="true">\r\n    </app-sales-order-quote-charges>\r\n  </p-tabPanel>\r\n  <p-tabPanel header="Document">\r\n    \x3c!-- <app-salesQuote-documents [isEditMode]="false" [salesOrderQuoteId]="salesQuote.salesOrderQuoteId" [viewMode]="true">\r\n    </app-salesQuote-documents> --\x3e\r\n    <app-common-documents [moduleName]="moduleName" [referenceId]="salesQuote.salesOrderQuoteId" [isViewMode]="true"\r\n      [offLineUpload]="false"></app-common-documents>\r\n  </p-tabPanel>\r\n  <p-tabPanel header="Analysis">\r\n    <app-sales-quote-analysis>\r\n    </app-sales-quote-analysis>\r\n  </p-tabPanel>\r\n  <p-tabPanel header="Communication">\r\n    <app-communication [moduleName]="moduleName" [idForContact]="customerId" [isViewMode]="true" [type]="1"\r\n      [referenceId]="salesQuote.salesOrderQuoteId"></app-communication>\r\n  </p-tabPanel>\r\n</p-tabView>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n  <div class="loading">\r\n    <div class="lds-roller">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n</div>'},PkGK:function(e,t,r){"use strict";r.r(t),t.default=".x_panel {\n  padding: 0 10px;\n  background-color: #fff;\n}\n\nlabel {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\n.viewform-cstm .label {\n  width: 120px !important;\n}\n\n.viewform-cstm .value {\n  margin-left: 10px;\n}\n\n.form-control:disabled {\n  background-color: #e9ecef !important;\n}\n\ninput[type=text], input[type=number], input[type=email], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n  height: 24px !important;\n}\n\na.fa.fa-plus-circle {\n  color: green !important;\n}\n\n.label-cstm {\n  width: auto;\n  float: left;\n  text-align: left;\n  margin-right: 0;\n  font-weight: normal;\n}\n\na.fa.fa-plus-circle {\n  color: green !important;\n}\n\n.checkbox-cstm {\n  margin-left: 10px;\n}\n\n.cus-contact-table tr th {\n  padding: 7px;\n}\n\n.cus-contact-table tr td {\n  padding: 4px;\n}\n\n/*// @media (min-width: 768px) {\n    // .col-md-3\n\n{\n    // max-width: 22%;\n    // margin-right: 15px;\n    //\n}\n\n// .col-md-6 {\n    // max-width: 44%;\n    // margin-right: 15px;\n    //\n}\n\n//\n}*/\n\n.btn-tbl-file-download {\n  /* padding: 1px 4px; */\n  line-height: 7px;\n  width: 85px !important;\n  height: 19px;\n  border: 0;\n}"},Qe1B:function(e,t,r){"use strict";var n=this&&this.__decorate||function(e,t,r,n){var s,a=arguments.length,i=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,n);else for(var o=e.length-1;o>=0;o--)(s=e[o])&&(i=(a<3?s(i):a>3?s(t,r,i):s(t,r))||i);return a>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var a=r("8Y7J"),i=r("GS7A"),o=r("SVse"),l=r("sdDj"),d=r("VSng"),c=r("iInd"),u=r("iInd"),p=function(){function e(e,t,r,n){this.el=e,this.renderer=t,this.router=r,this.cd=n,this.iconPos="left",this.onClick=new a.EventEmitter,this.onDropdownClick=new a.EventEmitter,this.showTransitionOptions="225ms ease-out",this.hideTransitionOptions="195ms ease-in",this.overlayVisible=!1}return e.prototype.onDefaultButtonClick=function(e){this.onClick.emit(e)},e.prototype.itemClick=function(e,t){t.disabled?e.preventDefault():(t.url||e.preventDefault(),t.command&&t.command({originalEvent:e,item:t}),this.overlayVisible=!1)},e.prototype.show=function(){this.overlayVisible=!this.overlayVisible},e.prototype.onOverlayAnimationStart=function(e){switch(e.toState){case"visible":this.overlay=e.element,this.appendOverlay(),this.overlay.style.zIndex=String(++l.DomHandler.zindex),this.alignOverlay(),this.bindDocumentClickListener(),this.bindDocumentResizeListener();break;case"void":this.onOverlayHide()}},e.prototype.onDropdownButtonClick=function(e){this.onDropdownClick.emit(e),this.dropdownClick=!0,this.show()},e.prototype.alignOverlay=function(){this.appendTo?l.DomHandler.absolutePosition(this.overlay,this.containerViewChild.nativeElement):l.DomHandler.relativePosition(this.overlay,this.containerViewChild.nativeElement)},e.prototype.appendOverlay=function(){this.appendTo&&("body"===this.appendTo?document.body.appendChild(this.overlay):l.DomHandler.appendChild(this.overlay,this.appendTo),this.overlay.style.minWidth=l.DomHandler.getWidth(this.el.nativeElement.children[0])+"px")},e.prototype.restoreOverlayAppend=function(){this.overlay&&this.appendTo&&this.el.nativeElement.appendChild(this.overlay)},e.prototype.bindDocumentClickListener=function(){var e=this;this.documentClickListener||(this.documentClickListener=this.renderer.listen("document","click",(function(){e.dropdownClick?e.dropdownClick=!1:(e.overlayVisible=!1,e.unbindDocumentClickListener(),e.cd.markForCheck())})))},e.prototype.unbindDocumentClickListener=function(){this.documentClickListener&&(this.documentClickListener(),this.documentClickListener=null)},e.prototype.bindDocumentResizeListener=function(){this.documentResizeListener=this.onWindowResize.bind(this),window.addEventListener("resize",this.documentResizeListener)},e.prototype.unbindDocumentResizeListener=function(){this.documentResizeListener&&(window.removeEventListener("resize",this.documentResizeListener),this.documentResizeListener=null)},e.prototype.onWindowResize=function(){this.overlayVisible=!1},e.prototype.onOverlayHide=function(){this.unbindDocumentClickListener(),this.unbindDocumentResizeListener(),this.overlay=null},e.prototype.ngOnDestroy=function(){this.restoreOverlayAppend(),this.onOverlayHide()},n([a.Input(),s("design:type",Array)],e.prototype,"model",void 0),n([a.Input(),s("design:type",String)],e.prototype,"icon",void 0),n([a.Input(),s("design:type",String)],e.prototype,"iconPos",void 0),n([a.Input(),s("design:type",String)],e.prototype,"label",void 0),n([a.Output(),s("design:type",a.EventEmitter)],e.prototype,"onClick",void 0),n([a.Output(),s("design:type",a.EventEmitter)],e.prototype,"onDropdownClick",void 0),n([a.Input(),s("design:type",Object)],e.prototype,"style",void 0),n([a.Input(),s("design:type",String)],e.prototype,"styleClass",void 0),n([a.Input(),s("design:type",Object)],e.prototype,"menuStyle",void 0),n([a.Input(),s("design:type",String)],e.prototype,"menuStyleClass",void 0),n([a.Input(),s("design:type",Boolean)],e.prototype,"disabled",void 0),n([a.Input(),s("design:type",Number)],e.prototype,"tabindex",void 0),n([a.Input(),s("design:type",Object)],e.prototype,"appendTo",void 0),n([a.Input(),s("design:type",String)],e.prototype,"dir",void 0),n([a.Input(),s("design:type",String)],e.prototype,"showTransitionOptions",void 0),n([a.Input(),s("design:type",String)],e.prototype,"hideTransitionOptions",void 0),n([a.ViewChild("container",{static:!1}),s("design:type",a.ElementRef)],e.prototype,"containerViewChild",void 0),n([a.ViewChild("defaultbtn",{static:!1}),s("design:type",a.ElementRef)],e.prototype,"buttonViewChild",void 0),n([a.Component({selector:"p-splitButton",template:'\n        <div #container [ngClass]="{\'ui-splitbutton ui-buttonset ui-widget\':true,\'ui-state-disabled\':disabled}" [ngStyle]="style" [class]="styleClass">\n            <button #defaultbtn type="button" pButton [icon]="icon" [iconPos]="iconPos" [label]="label" [cornerStyleClass]="dir === \'rtl\' ? \'ui-corner-right\': \'ui-corner-left\'" (click)="onDefaultButtonClick($event)" [disabled]="disabled" [attr.tabindex]="tabindex">\n            </button><button type="button" pButton class="ui-splitbutton-menubutton" icon="pi pi-chevron-down" [cornerStyleClass]="dir === \'rtl\' ? \'ui-corner-left\': \'ui-corner-right\'" (click)="onDropdownButtonClick($event)" [disabled]="disabled"></button>\n            <div #overlay [ngClass]="\'ui-menu ui-menu-dynamic ui-widget ui-widget-content ui-corner-all ui-helper-clearfix ui-shadow\'" *ngIf="overlayVisible"\n                    [ngStyle]="menuStyle" [class]="menuStyleClass"\n                    [@overlayAnimation]="{value: \'visible\', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}" (@overlayAnimation.start)="onOverlayAnimationStart($event)">\n                <ul class="ui-menu-list ui-helper-reset">\n                    <ng-template ngFor let-item [ngForOf]="model">\n                        <li class="ui-menuitem ui-widget ui-corner-all" role="menuitem" *ngIf="item.visible !== false">\n                            <a *ngIf="!item.routerLink" [attr.href]="item.url" class="ui-menuitem-link ui-corner-all" [attr.target]="item.target"\n                                [ngClass]="{\'ui-state-disabled\':item.disabled}" (click)="itemClick($event, item)">\n                                <span [ngClass]="\'ui-menuitem-icon\'" [class]="item.icon" *ngIf="item.icon"></span>\n                                <span class="ui-menuitem-text">{{item.label}}</span>\n                            </a>\n                            <a *ngIf="item.routerLink" [routerLink]="item.routerLink" [queryParams]="item.queryParams"\n                                class="ui-menuitem-link ui-corner-all" [attr.target]="item.target" [ngClass]="{\'ui-state-disabled\':item.disabled}" (click)="itemClick($event, item)">\n                                <span [ngClass]="\'ui-menuitem-icon\'" [class]="item.icon" *ngIf="item.icon"></span>\n                                <span class="ui-menuitem-text">{{item.label}}</span>\n                            </a>\n                        </li>\n                    </ng-template>\n                </ul>\n            </div>\n        </div>\n    ',animations:[i.trigger("overlayAnimation",[i.state("void",i.style({transform:"translateY(5%)",opacity:0})),i.state("visible",i.style({transform:"translateY(0)",opacity:1})),i.transition("void => visible",i.animate("{{showTransitionParams}}")),i.transition("visible => void",i.animate("{{hideTransitionParams}}"))])]}),s("design:paramtypes",[a.ElementRef,a.Renderer2,c.Router,a.ChangeDetectorRef])],e)}();t.SplitButton=p;var m=function(){function e(){}return n([a.NgModule({imports:[o.CommonModule,d.ButtonModule,u.RouterModule],exports:[p,d.ButtonModule,u.RouterModule],declarations:[p]})],e)}();t.SplitButtonModule=m},R2fv:function(e,t,r){"use strict";r.r(t),t.default="::ng-deep .ui-chkbox-label {\n  float: none !important;\n  margin-left: 20px !important;\n  top: 7px !important;\n  position: relative !important;\n  width: auto !important;\n}\n\n::ng-deep .ui-chkbox-label {\n  float: none !important;\n  margin-left: 20px !important;\n  top: 7px !important;\n  position: relative !important;\n  width: auto !important;\n}\n\n::ng-deep .ui-calendar-button {\n  height: 24px !important;\n}"},RFtn:function(e,t,r){"use strict";r.r(t),t.default="button {\r\n  border-radius: 5px;\r\n}\r\n"},"Rx+c":function(e,t,r){"use strict";r.r(t),t.default=".modal-body p .label {\r\n    width: 33%;\r\n    padding: 0;\r\n    display: inline-block;\r\n}\r\n\r\n.modal-body p .value {\r\n    width: 54%;\r\n    display: inline-block;\r\n    margin-left: 5%;\r\n}\r\n\r\n.loader-position{\r\n    position: absolute;\r\n}\r\n\r\n.loader-align{\r\n    margin-top: 17rem;\r\n    margin-left: 30rem;\r\n}\r\n\r\n.myclass {\r\n    margin-top: -5px\r\n}"},SPTF:function(e,t,r){"use strict";r.r(t),t.default=".modal-content {\n  width: 80% !important;\n  margin: 0 auto;\n}\n\ntable {\n  width: 1000px;\n  overflow: auto !important;\n  border-collapse: collapse;\n}\n\ntd {\n  border: none;\n}\n\ntable thead {\n  background: #808080;\n}\n\ntable thead tr {\n  background: #0d57b0 !important;\n}\n\ntable thead tr th {\n  background: #0d57b0 !important;\n  padding: 5px !important;\n  color: #fff;\n  letter-spacing: 0.3px;\n  font-size: 10px;\n  text-transform: capitalize;\n  z-index: 1;\n}\n\ntable tbody {\n  overflow-y: auto;\n  max-height: 500px;\n}\n\ntable tbody tr td {\n  background: #fff;\n  padding: 2px;\n  line-height: 22px;\n  color: #333;\n  font-size: 11.5px !important;\n  letter-spacing: 0.1px;\n}\n\nh4 {\n  padding: 5px;\n  display: inline-block;\n  color: #053773;\n  font-size: 14px;\n  font-weight: 600;\n  width: 100%;\n  margin: 0;\n}\n\n.h5 {\n  font-family: inherit;\n  font-weight: 500;\n  line-height: 1.1;\n  color: inherit;\n  padding: 5px;\n  font-size: 14px;\n  margin-bottom: 15px;\n  margin: 0 !important;\n  padding: 5px;\n  background-color: #fff;\n}\n\nhr {\n  margin-top: 10px;\n  margin-bottom: 10px;\n  border: 0;\n  border-top: 1px solid #e0e0e0;\n  height: 0;\n  box-sizing: content-box;\n}\n\n.first-block {\n  position: relative;\n  min-height: 1px;\n  float: left;\n  padding-right: 2px;\n  padding-left: 2px;\n  width: 50%;\n  text-align: left;\n}\n\n.first-block-right {\n  position: relative;\n  min-height: 1px;\n  float: right;\n  padding-right: 2px;\n  padding-left: 2px;\n  width: 50%;\n  text-align: left;\n}\n\n.first-block-4 {\n  position: relative;\n  min-height: 1px;\n  float: left;\n  padding-right: 2px;\n  width: 70%;\n  padding-left: 2px;\n}\n\n.first-block-address {\n  margin-right: 20px;\n  text-align: left;\n}\n\n.second-block {\n  position: relative;\n  min-height: 1px;\n  float: left;\n  padding-right: 2px;\n  width: 49%;\n  padding-left: 2px;\n  box-sizing: border-box;\n}\n\n.second-block-div {\n  margin: 2px 0;\n  position: relative;\n  min-height: 1px;\n  float: left;\n  padding-right: 2px;\n  padding-left: 2px;\n  width: 100%;\n}\n\n.second-block-label {\n  position: relative;\n  min-height: 1px;\n  float: left;\n  padding-right: 2px;\n  padding-left: 2px;\n  width: 38.33333333%;\n  text-transform: capitalize;\n  margin-bottom: 0;\n  text-align: left;\n}\n\n.clear {\n  clear: both;\n}\n\n.form-div {\n  top: 6px;\n  position: relative;\n  font-weight: normal;\n  margin-top: 10px;\n}\n\n.image {\n  border: 1px solid #ccc;\n  padding: 5px;\n}\n\n.noborder {\n  border: 0 !important;\n}\n\n.border1 {\n  border-top: 1px solid black;\n  border-right: 1px solid black;\n  border-left: 1px solid black;\n}\n\n.border2 {\n  border-right: 1px solid black;\n  border-left: 1px solid black;\n}\n\n.border3 {\n  border-bottom: 1px solid black;\n  border-right: 1px solid black;\n  border-left: 1px solid black;\n}\n\n.mtop20 {\n  margin-top: 20px;\n}\n\n.logo-block {\n  margin: auto;\n  text-align: center;\n}\n\n.pdf-block {\n  width: 800px;\n  margin: auto;\n  border: 1px solid #ccc;\n  padding: 25px 15px;\n}"},Seli:function(e,t,r){"use strict";r.r(t),t.default="button {\n  border-radius: 5px;\n}\n\n:host ::ng-deep .ui-chkbox-label {\n  top: 0px !important;\n  text-align: right !important;\n}\n\n:host ::ng-deep .ui-chkbox {\n  position: relative;\n  top: -6px;\n}\n\n:host ::ng-deep .ui-chkbox-box.ui-state-active {\n  background-color: #007ad9;\n  color: #ffffff;\n  padding: 0px;\n}\n\n@media (min-width: 1100px) {\n  :host ::ng-deep .modal-lg {\n    max-width: 1250px !important;\n  }\n}"},U55D:function(e,t,r){"use strict";r.r(t),t.default=""},Vqvs:function(e,t,r){"use strict";r.r(t),t.default='<app-all-approval-rule [moduleType]="moduleType">\r\n\r\n</app-all-approval-rule>'},Vta2:function(e,t,r){"use strict";r.r(t),t.default='.select-read-only {\n  border: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  text-indent: 1px;\n  text-overflow: "";\n  box-shadow: none !important;\n}\n\nselect-read-only {\n  background-color: white !important;\n}\n\nselect:disabled {\n  background-color: white !important;\n}\n\ninput[type=number], input[type=text], input[type=email], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}'},WQW6:function(e,t,r){"use strict";r.r(t),t.default=".btn-spaces > button {\r\n  margin-right: 13px !important;\r\n}\r\n/* .ui-radiobutton-label{\r\n  color: #ffffff !important;\r\n} */\r\ninput[type='text'],\r\ninput[type='number'],\r\nselect,\r\ntextarea {\r\n  height: 24px !important;\r\n  border-radius: 5px !important;\r\n}\r\n.select-read-only{\r\n  border: none;\r\n  -webkit-appearance: none;\r\n  -moz-appearance: none;\r\n  text-indent: 1px;\r\n  text-overflow: '';\r\n  box-shadow: none !important;\r\n}\r\n.table-overflow th {\r\n  text-align: center;\r\n}\r\n.sales-analysis-header th{\r\n  background: #4298ff !important;\r\n  color:#fff !important;\r\n}\r\n/* p-radiobutton .ui-radiobutton .ui-radiobutton-box{\r\n  border: 3px solid #ffffff !important;\r\n} */\r\n.seve{\r\n  margin-bottom: 20px;\r\n  margin-right: 12px;\r\n}\r\n.ui-table .ui-table-tbody > tr:nth-child(odd) {\r\n  background-color: #ffffff !important;\r\n}\r\n.footer td{\r\n  background-color: #eaf2fd !important;\r\n}\r\nselect.select-read-only {\r\n  background-color: #ffffff !important;\r\n}\r\n.sales-quote-radio .ui-radiobutton-label {\r\n  width: unset !important;\r\n  margin-right: 10px;\r\n  color:#fff !important;\r\n}\r\n.sales-quote-radio .ui-radiobutton-label {\r\n  margin-left: 10px;\r\n  text-align: left;\r\n  font-size: 10.5px !important;\r\n  margin-top: 12px;\r\n  font-weight: normal;\r\n}\r\n.sales-quote-radio .ui-radiobutton{\r\nmargin-top:14px;\r\n}\r\n"},Wl3k:function(e,t,r){"use strict";r.r(t),t.default="button {\r\n  border-radius: 5px;\r\n}\r\n\r\n.fs10 {\r\n  font-size: 10px;\r\n  font-weight: bold;\r\n  color: #ff5663;\r\n  font-family: tahoma;\r\n  margin: 3px 0px;\r\n}\r\n\r\n.wauto {\r\n  width: auto !important;\r\n}\r\n\r\n.no-bg {\r\n  background: none !important;\r\n}\r\n\r\nlabel {\r\n  width: 100%;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n}\r\n\r\nthead > tr > th {\r\n  border: 1px solid #3a7fd2;\r\n  font-weight: 500;\r\n  color: #fff;\r\n  background-color: #4298ff;\r\n  font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\r\n  letter-spacing: 0.3px;\r\n  padding: 8px 10px;\r\n  font-size: 10px;\r\n  font-weight: 600;\r\n}\r\n\r\ntbody > tr > td {\r\n  white-space: nowrap;\r\n  font-size: 11px;\r\n  color: #222;\r\n  padding: 8px 10px;\r\n  background: inherit;\r\n  border: 1px solid #c8c8c8;\r\n}\r\n\r\ndiv.row {\r\n  padding: 10px;\r\n}\r\n\r\ndiv.row-table {\r\n  background-color: white !important;\r\n}\r\n\r\n.quantityTextBox {\r\n  width: 60%;\r\n}\r\n\r\ndiv.calculation table thead tr td,\r\ndiv.calculation table tbody tr td {\r\n  text-align: right;\r\n}\r\n"},ZOZ9:function(e,t,r){"use strict";r.r(t),t.default='<div class="form-group">\r\n    <div class="row" *ngIf="!isView" style="padding:8px 0px">\r\n        <div class="card-header bg-primary" style="width: 100%; padding: 0.1rem 1.25rem 0.1rem 1.25rem;">\r\n            <div class="row">\r\n                <div class="col">\r\n                    <h4 class="new-card-heading" style="font-size: 16px; line-height: 2;">  Freight</h4>\r\n                </div>\r\n                <div>\r\n                    <button type="button"\r\n                            class="btn-sm new-btn-primary" data-target="#addNewFreight" data-toggle="modal" (click)="createNew()">\r\n                        Add Freight\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="row"  [ngClass]="(isView) ? \'pull-right\' : \'\'">\r\n        <div class="checkbox-cstm show_cst">\r\n            <label style="width: auto !important;margin-top: 3px;">\r\n                <input type="checkbox" [(ngModel)]="deletedStatusInfo" name="cparent55" id="cparent55" (click)="getDeleteListByStatus($event.target.checked)" />\r\n                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                Show  Deleted List\r\n            </label>\r\n        </div>\r\n    </div>\r\n    <div class="clearfix"></div>\r\n        <p-table [columns]="cols" [value]="salesOrderFreightList" [lazy]="false" [paginator]="true" [rows]="10"\r\n                 class="rpo-table-cstm sales-analysis-header ptable-f10" [paginator]="true">\r\n            \x3c!--freightss--\x3e\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n                    <th colspan="8" style="background: #4298ff !important; color: #fff !important; border: 1px solid #fff; border-right: 1px solid #e7ecf1;">\r\n                        &nbsp;\r\n                    </th>\r\n                    <ng-container *ngIf="isView">\r\n                        <th colspan="5" style=" background: #4298ff !important; color: #fff !important; border: 1px solid #e7ecf1; padding-left: 5px;">\r\n                            <div class="display-inline-flex">\r\n                                <div class="form-group" style="text-align: center; display: flex;    margin-bottom: 0px;">\r\n                                    <p-radioButton class="p-radiobutton-label-horizontal p-radiobutton-label-w92" name="costPlusTypeSOQ"\r\n                                                   label="T&M - Mark Up" (ngModelChange)="validated()" value="1" [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()">\r\n                                    </p-radioButton>\r\n                                    <div>\r\n                                        <select class="form-group select-markup" (ngModelChange)="validated()" (change)="markupChanged({}, \'all\')"\r\n                                                [(ngModel)]="overAllMarkup" [disabled]="isView || costPlusType != 1" style="margin-top: 10px;">\r\n                                            <option value="" selected>Select</option>\r\n                                            <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div style="float: left; margin-bottom: 7px; margin-left: 4px; margin-right: 4px;">\r\n                                    <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusTypeSOQ" value="2" label="Actual"\r\n                                                   [(ngModel)]="costPlusType" (ngModelChange)="validated()" [disabled]="isView" (click)="(!isView)?tmchange():\'\'"></p-radioButton>\r\n                                </div>\r\n                                <div>\r\n                                    <p-radioButton class="p-radiobutton-label-horizontal" (ngModelChange)="validated()" name="costPlusTypeSOQ" value="3"\r\n                                                   label="Flat Rate" [(ngModel)]="costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'">\r\n                                    </p-radioButton>\r\n                                </div>\r\n                            </div>\r\n                        </th>\r\n                        <th style="background: #4298ff !important;\r\n                        color:#fff !important;"></th>\r\n                    </ng-container>\r\n                    <ng-container *ngIf="!isView">\r\n                        <th colspan="5" style="background: #4298ff !important; color: #fff !important; border: 1px solid #e7ecf1; padding: 0;">\r\n                            <div class="display-inline-flex">\r\n                                <div class="form-group" style="text-align: center; display: flex;    margin-bottom: 0px;">\r\n                                    <p-radioButton class="p-radiobutton-label-horizontal p-radiobutton-label-w92" name="costPlusTypeSOQ"\r\n                                                   label="T&M - Mark Up" value="1" [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()">\r\n                                    </p-radioButton>\r\n                                    <div>\r\n                                        <select class="form-group select-markup" (change)="markupChanged({}, \'all\')"\r\n                                                [(ngModel)]="overAllMarkup" [disabled]="isView || costPlusType != 1" style="margin-top: 10px;">\r\n                                            <option value="" selected>Select</option>\r\n                                            <option *ngFor="let markUp of markupList" [value]="markUp.value">{{markUp.label}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div style="float: left; margin-bottom: 7px; margin-left: 4px; margin-right: 4px;">\r\n                                    <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusTypeSOQ" value="2" label="Actual"\r\n                                                   [(ngModel)]="costPlusType" [disabled]="isView" (click)="tmchange()"></p-radioButton>\r\n                                </div>\r\n                                <div>\r\n                                    <p-radioButton class="p-radiobutton-label-horizontal" name="costPlusTypeSOQ" value="3"\r\n                                                   label="Flat Rate" [(ngModel)]="costPlusType" [disabled]="isView" (click)="(!isView)?tmchange():\'\'">\r\n                                    </p-radioButton>\r\n                                </div>\r\n                            </div>\r\n                        </th>\r\n                        <th style="background: #4298ff !important; color:#fff !important;"></th>\r\n                        \x3c!-- <th style="background: #fff; border: 1px solid #fff;"></th> --\x3e\r\n                    </ng-container>\r\n                </tr>\r\n                <tr>\r\n                    <th rowspan="2" style="background-color: #4298ff !important;\r\n                    color: #fff !important;">Ship Via<span class="clr-red">*</span></th>\r\n                    <th rowspan="2" style="background-color: #4298ff !important;\r\n                    color: #fff !important;">Weight</th>\r\n                    <th rowspan="2" style="background-color: #4298ff !important;\r\n                    color: #fff !important;">UOM</th>\r\n                    <th colspan="3" style="background-color: #4298ff !important;\r\n                    color: #fff !important;">Dimensions</th>\r\n                    <th rowspan="2" style="background-color: #4298ff !important;\r\n                    color: #fff !important;">UOM</th>\r\n                    <th rowspan="2" style="background-color: #4298ff !important;\r\n                    color: #fff !important;">Currency</th>\r\n                    <th rowspan="2" style="background-color: #4298ff !important;\r\n                    color: #fff !important;">Amount<span class="clr-red">*</span></th>\r\n                    <th rowspan="2" style="background-color: #4298ff !important;\r\n                    color: #fff !important;">Memo</th>\r\n                    <ng-container>\r\n                        <th rowspan="2" style="background-color: #4298ff !important;\r\n                        color: #fff !important;">Billing Method</th>\r\n                        <th rowspan="2" style="background-color: #4298ff !important;\r\n                        color: #fff !important;">Mark Up</th>\r\n                        \x3c!-- <th tooltip="Time & Materials">Billing Rate</th> --\x3e\r\n                        <th rowspan="2" style="background-color: #4298ff !important;\r\n                        color: #fff !important;">Billing Amount</th>\r\n                        \x3c!-- <th tooltip="Time & Materials">T&M Amount</th>\r\n                        <th>Fixed Amount</th> --\x3e\r\n                    </ng-container>\r\n                    <th rowspan="2" style="background-color: #4298ff !important;\r\n                    color: #fff !important;">Actions</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style="background-color: #4298ff !important;">L</th>\r\n                    <th style="background-color: #4298ff !important;">H</th>\r\n                    <th style="background-color: #4298ff !important;">W</th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-freight let-columns="columns" let-rowIndex="rowIndex">\r\n                <tr>\r\n                    <td>\r\n                        <select class="form-control select-read-only" [(ngModel)]="freight.shipViaId" disabled>\r\n                            <option value="">Select</option>\r\n                            <option *ngFor="let sv of shipViaList" [value]="sv.value">{{sv.label}}</option>\r\n                        </select>\r\n                    </td>\r\n                    <td class="content-to-end">{{freight.weight}}</td>\r\n                    <td>{{freight.uom}}</td>\r\n                    <td class="content-to-end">{{freight.length}}</td>\r\n                    <td class="content-to-end">{{freight.height}}</td>\r\n                    <td class="content-to-end">{{freight.width}}</td>\r\n                    <td>{{freight.dimensionUOM}}</td>\r\n                    <td>{{freight.currency}}</td>\r\n                    <td class="content-to-end"><span *ngIf="freight.amount">{{formateCurrency(freight.amount)}}</span></td>\r\n                    <td [innerHTML]="freight.memo"></td>\r\n                    <ng-container>\r\n                        <td>\r\n                            <select class="form-control" (ngModelChange)="validated()" [(ngModel)]="freight.billingMethodId"\r\n                                    [disabled]="isView || costPlusType == 3"\r\n                                    (change)="freight.markupPercentageId = \'\';freight.billingAmount = 0;(freight.billingMethodId == \'2\')?freight.billingAmount = freight.amount:\'\';">\r\n                                <option value="" selected>Select</option>\r\n                                <option *ngFor="let bm of [{\'label\': \'T&M\', \'value\': \'1\'}, {\'label\': \'Actual\', \'value\': \'2\'}]"\r\n                                        [value]="bm.value">\r\n                                    {{bm.label}}\r\n                                </option>\r\n                            </select>\r\n                        </td>\r\n                        <td>\r\n                            <select class="form-control select-markup" (ngModelChange)="validated()" (change)="markupChanged(freight, \'row\')"\r\n                                    [(ngModel)]="freight.markupPercentageId" [disabled]="isView || freight.billingMethodId != \'1\'">\r\n                                <option value="" selected>Select</option>\r\n                                <option *ngFor="let markUp of markupList" [value]="markUp.value">{{ markUp.label }}</option>\r\n                            </select>\r\n                        </td>\r\n                        <td>\r\n                            <input type="text" (ngModelChange)="validated()" pInputText pKeyFilter="money" class="form-control text_right"\r\n                                   value="{{ formateCurrency(freight.billingAmount) }}"\r\n                                   (change)="freight.billingAmount = formateCurrency(freight.billingAmount)"\r\n                                   [(ngModel)]="freight.billingAmount" [disabled]="isView || freight.billingMethodId != \'2\'" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <td class="btn-spaces text-center">\r\n                        <div *ngIf="deletedStatusInfo==false">\r\n                            <span data-target="#addNewFreight" data-toggle="modal" *ngIf="!isView">\r\n                                <a class="btn nobg btn-edit-cstm" (click)="edit(freight, rowIndex)" matTooltip="Edit">\r\n                                    <i class="fa fa-pencil"></i>\r\n                                </a>\r\n                            </span>\r\n                            <span *ngIf="!isView">\r\n                                \x3c!--<a class="btn nobg btn-delete-cstm" (click)="delete(freight, rowIndex)" matTooltip="Delete">\r\n                                    <i class="fa fa-trash"></i>\r\n                                </a>--\x3e\r\n                                <a class="btn nobg btn-delete-cstm" (click)="openDelete(content,freight,rowIndex)" matTooltip="Delete">\r\n                                    <i class="fa fa-trash"></i>\r\n                                </a>\r\n                            </span>\r\n                            <span>\r\n                                <button class="btn  nobg grey_btn_icon" style="padding:0px" [disabled]="freight.SalesOrderFreightId==0" (click)="openInterShipViaHistory(contentAuditHist,freight)"\r\n                                        matTooltip="History" matTooltipPosition="above">\r\n                                    <i class="fa fa-history">\r\n                                    </i>\r\n                                </button>\r\n                            </span>\r\n                        </div>\r\n                        <div *ngIf="deletedStatusInfo==true">\r\n                            <span *ngIf="!isView"><a class="btn nobg" (click)="restore(restoreId,freight,rowIndex);" matTooltip="Restore Record" matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                            <span>\r\n                                <button class="btn  nobg grey_btn_icon" style="padding:0px" [disabled]="freight.SalesOrderFreightId==0" (click)="openInterShipViaHistory(contentAuditHist,freight)"\r\n                                        matTooltip="History" matTooltipPosition="above">\r\n                                    <i class="fa fa-history">\r\n                                    </i>\r\n                                </button>\r\n                            </span>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="footer">\r\n                <tr class="footer">\r\n                    <td>Total</td>\r\n                    \x3c!-- <td>&nbsp;</td> --\x3e\r\n                    <td>&nbsp;</td>\r\n                    <td>&nbsp;</td>\r\n                    <td>&nbsp;</td>\r\n                    <td>&nbsp;</td>\r\n                    <td>&nbsp;</td>\r\n                    <td>&nbsp;</td>\r\n                    <td>&nbsp;</td>\r\n                    <td class="content-to-end">{{formateCurrency(getTotalAmount())}}</td>\r\n                    <td>&nbsp;</td>\r\n                    <td>&nbsp;</td>\r\n                    <td>&nbsp;</td>\r\n\r\n\r\n\r\n                    \x3c!-- <td>{{getTotalBillingRate()}}</td> --\x3e\r\n                    <ng-container *ngIf="costPlusType != 3">\r\n                        <td class="content-to-end">{{formateCurrency(getTotalBillingAmount())}}</td>\r\n                        \x3c!--lB\r\n                        nt--\x3e\r\n                    </ng-container>\r\n                    <ng-container *ngIf="costPlusType == 3">\r\n                        <td>\r\n                            <input type="text" pInputText pKeyFilter="money" style="text-align: right;"\r\n                                   [ngModel]="freightFlatBillingAmount  | twoDecimalGlobalNumberFormatPipe"\r\n                                   [ngModelOptions]="{updateOn:\'blur\'}"\r\n                                   (ngModelChange)="freightFlatBillingAmount=formatStringToNumberGlobal($event)"\r\n                                   (blur)="freightFlatBillingAmount = (freightFlatBillingAmount)?formateCurrency(freightFlatBillingAmount):\'0.00\'"\r\n                                   [disabled]="isView" />\r\n                        </td>\r\n                    </ng-container>\r\n                    <td>\r\n                        \x3c!--!i--\x3e\r\n                        &nbsp;\r\n                    </td>\r\n                    \x3c!--!i--\x3e\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    <div *ngIf="!isView" style="padding: 10px;">\r\n        \x3c!--<button class="btn btn-primary pull-right side" (click)="createFreightsQuote()">Save</button>--\x3e\r\n        <button class="btn btn-primary pull-right side" [disabled]="isSaveChargesDesabled" (click)="createFreightsQuote()">\r\n            <span *ngIf="salesOrderFreightList && salesOrderFreightList.length !=0">Update</span>\r\n            <span *ngIf="salesOrderFreightList && salesOrderFreightList.length ==0">Save</span>\r\n        </button>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n<div id="addNewFreight" class="modal fade" role="dialog" *ngIf="!view" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">\r\n                    &times;\r\n                </button>\r\n                <h4 class="modal-title"> {{isEdit ? \'Edit\' : \'Add\'}} Freight</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div *ngIf="!isEdit">\r\n                    <span class="cat-heading cat4 ng-star-inserted">\r\n                        Add Freight\r\n                        <i class="fa fa-plus" (click)="addNewRow()"></i>\r\n                    </span>\r\n                </div>\r\n                <div class="tab-content">\r\n                    <div class="table-responsive table-overflow" style="height: 300px;">\r\n                        <form #frieghtsCreateForm="ngForm">\r\n                            <table class="table table-bordered ">\r\n                                <thead>\r\n                                    <tr>\r\n                                        \x3c!-- <th rowspan="2">Task *</th> --\x3e\r\n                                        \x3c!-- <th>Carrier *</th> --\x3e\r\n                                        <th rowspan="2">Ship Via<span class="clr-red">*</span></th>\r\n                                        \x3c!-- <th>Dimensions *</th> --\x3e\r\n                                        <th rowspan="2">Weight</th>\r\n                                        <th rowspan="2">UOM</th>\r\n                                        <th colspan="3">Dimensions</th>\r\n                                        <th rowspan="2">UOM</th>\r\n                                        <th rowspan="2">Currency</th>\r\n                                        <th rowspan="2">Amount<span class="clr-red">*</span></th>\r\n                                        <th rowspan="2">Memo</th>\r\n                                        <th rowspan="2">Actions</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>L</th>\r\n                                        <th>H</th>\r\n                                        <th>W</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor="let f of freightForm; let i = index">\r\n                                        <td>\r\n                                            <p-dropdown placeholder="Select Site Name" name="shipVia{{ i }}" #shipVia="ngModel"\r\n                                                        [options]="shipViaList" (ngModelChange)="enableUpdate()" class="p-dropdown-custom-md" [(ngModel)]="f.shipViaId" required>\r\n                                            </p-dropdown>\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type="number" name="weight{{ i }}" (ngModelChange)="enableUpdate()" #weight="ngModel" [(ngModel)]="f.weight"\r\n                                                   class="form-control w50" />\r\n                                        </td>\r\n                                        <td>\r\n                                            <p-dropdown placeholder="Select UOM" (ngModelChange)="enableUpdate()" name="unitOfMeasureId{{ i }}" [options]="unitOfMeasureList"\r\n                                                        class="p-dropdown-custom-md" [(ngModel)]="f.uomId">\r\n                                            </p-dropdown>\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type="number" name="length{{ i }}" (ngModelChange)="enableUpdate()" [(ngModel)]="f.length" #length="ngModel"\r\n                                                   class="form-control w50" />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type="number" name="height{{ i }}" (ngModelChange)="enableUpdate()" #height="ngModel" [(ngModel)]="f.height"\r\n                                                   class="form-control w50" />\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type="number" name="width{{ i }}" (ngModelChange)="enableUpdate()" #width="ngModel" [(ngModel)]="f.width"\r\n                                                   class="form-control w50" />\r\n                                        </td>\r\n                                        <td>\r\n                                            <p-dropdown placeholder="Select UOM" (ngModelChange)="enableUpdate()" name="dimensionUOMId{{ i }}" [options]="unitOfMeasureList"\r\n                                                        class="p-dropdown-custom-md" [(ngModel)]="f.dimensionUOMId">\r\n                                            </p-dropdown>\r\n                                        </td>\r\n                                        <td>\r\n                                            <p-dropdown placeholder="Select Currency" (ngModelChange)="enableUpdate()" name="currencyId{{ i }}" [options]="currencyList"\r\n                                                        class="p-dropdown-custom-md" [(ngModel)]="f.currencyId">\r\n                                            </p-dropdown>\r\n                                        </td>\r\n                                        <td>\r\n                                            <input type="text" InputText pKeyFilter="money" name="amount{{ i }}" (ngModelChange)="enableUpdate()" #amount="ngModel"\r\n                                                   [(ngModel)]="f.amount" class="form-control w50 text_right"\r\n                                                   (change)="f.amount = formateCurrency(f.amount);" required />\r\n                                        </td>\r\n                                        <td>\r\n                                            <div class="form-group memo-popup-cstm mat_emo"\r\n                                                 style="width: 120px;    display: inline-flex;    margin-bottom: 0;">\r\n                                                <div [innerHTML]="f.memo" [matTooltip]="parsedText(f.memo)" matTooltipPosition="above"\r\n                                                     class="text_editor_box"></div>\r\n                                                <i class="fa fa-pencil ci_cls" data-toggle="modal" style="position: relative;top: 6px;"\r\n                                                   data-target="#textarea-popupFreight" matTooltip="Memo" matTooltipPosition="above"\r\n                                                   (click)="onAddTextAreaInfo(f,i)"></i>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            \x3c!-- [disabled]="i==0" --\x3e\r\n                                            <button class="btn btn-danger nobg" [disabled]="isEdit==true" (click)="deleteRow(i, frieghtsCreateForm)">\r\n                                                <i class="fa fa-trash"></i>\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </form>\r\n                        <div class="modal fade" id="textarea-popupFreight" role="dialog" data-backdrop="static"\r\n                             data-keyboard="false">\r\n                            <div class="modal-dialog modal-lg" style="max-width: 400px !important;">\r\n                                <div class="modal-content">\r\n                                    <div class="modal-header">\r\n                                        <button type="button" class="close" (click)="onCloseTextAreaInfo()">&times;</button>\r\n                                        <h4 class="modal-title">Edit {{"Memo"}}</h4>\r\n                                    </div>\r\n                                    <div class="modal-body">\r\n                                        <table class="table table-bordered table-fixed workflow-table-material">\r\n                                            <thead>\r\n                                            <th style="color: #fff;">{{"Memo"}}</th>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <p-editor [(ngModel)]="textAreaInfo" [style]="{\'height\':\'320px\'}" name="textAreaInfo"\r\n                                                                  required>\r\n                                                        </p-editor>\r\n\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <div style="float:right">\r\n                                            <button type="button" class="btn btn-primary"\r\n                                                    style="padding: 6px 12px !important;margin-top: 10px;"\r\n                                                    (click)="onSaveTextAreaInfo(textAreaInfo)">\r\n                                                Save\r\n                                            </button>\r\n                                            <button type="button" class="btn btn-danger"\r\n                                                    style="padding: 6px 12px !important;margin-top: 10px;" (click)="onCloseTextAreaInfo()">\r\n                                                Close\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary pull-right " (click)="saveFreightList()" [disabled]="!frieghtsCreateForm.valid ||  isEnableUpdateButton">\r\n                    {{ isEdit ? \'Update\' : \'Save\' }}\r\n                </button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">\r\n                    Close\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #contentAuditHist let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">History of Freights</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModelHistory()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="table-responsive history_hg">\r\n            <table class="table table-bordered">\r\n                <thead>\r\n                    <tr>\r\n                        <th rowspan="2">Ship Via <span class="clr-red">*</span></th>\r\n                        <th rowspan="2">Weight</th>\r\n                        <th rowspan="2">UOM</th>\r\n                        <th colspan="4" style="text-align: center;">Dimensions</th>\r\n                        <th rowspan="2">Currency</th>\r\n                        <th rowspan="2">Amount <span class="clr-red">*</span></th>\r\n                        \x3c!-- <th rowspan="2">Amount</th> --\x3e\r\n                        <th rowspan="2">Memo</th>\r\n                        <th rowspan="2">Billing Method</th>\r\n                        <th rowspan="2">Billing Amount</th>\r\n                        <th rowspan="2">Is Active</th>\r\n                        <th rowspan="2">Created Date</th>\r\n                        <th rowspan="2">Created By</th>\r\n                        <th rowspan="2">Updated Date</th>\r\n                        <th rowspan="2">Updated By</th>\r\n                        <th rowspan="2">Is Deleted</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Length</th>\r\n                        <th>Height</th>\r\n                        <th>Width</th>\r\n                        <th>UOM</th>\r\n                    </tr>\r\n                </thead>\r\n                <tr *ngFor="let audit of freightAudiHistory; let i = index;">\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'shipVia\', audit.shipVia)  ? \'black\' : \'red\'  }">{{audit.shipVia}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'weight\', audit.weight)  ? \'black\' : \'red\'  }">{{audit.weight}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'uom\', audit.uom)  ? \'black\' : \'red\'  }">{{audit.uom}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'length\', audit.length)  ? \'black\' : \'red\'  }">{{audit.length}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'height\', audit.height)  ? \'black\' : \'red\'  }">{{audit.height}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'width\', audit.width)  ? \'black\' : \'red\'  }">{{audit.width}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'dimensionUOM\', audit.dimensionUOM)  ? \'black\' : \'red\'  }">{{audit.dimensionUOM}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'currency\', audit.currency)  ? \'black\' : \'red\'  }">{{audit.currency}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'amount\', audit.amount)  ? \'black\' : \'red\'  }">{{audit.amount}}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'memo\', audit.memo) ? \'black\' : \'red\'}">\r\n                        <p class="p_editor" [innerHTML]="audit.memo"></p>\r\n                    </td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'billingMethodName\', audit.billingMethodName)  ? \'black\' : \'red\'  }">{{audit.billingMethodName}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'billingAmount\', audit.billingAmount)  ? \'black\' : \'red\'  }">{{audit.billingAmount}}</td>\r\n                    <td style="text-align: center;">\r\n                        <span class="value">\r\n                            <label class="wauto">\r\n                                <input type="checkbox" name="isActive" [checked]="audit.isActive == true" disabled>\r\n                            </label>\r\n                        </span>\r\n                    </td>\r\n                    <td>{{audit.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                    <td>{{audit.createdBy}}</td>\r\n                    <td>{{audit.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                    <td>{{audit.updatedBy}}</td>\r\n                    <td style="text-align: center;">\r\n                        <span class="value">\r\n                            <label class="wauto">\r\n                                <input type="checkbox" name="isDeleted" [checked]="audit.isDeleted == true" disabled>\r\n                            </label>\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModelHistory()">Close</button>\r\n    </div>\r\n</ng-template>\r\n<ng-template #content let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModelAlett()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <strong style="display: inline-flex;">\r\n            Ship Via:\r\n            <span class="new-label">\r\n                <select class="form-control select-read-only new-labelSelect" id="hideDisabled" [(ngModel)]="selectedRowForDelete.shipViaId" disabled>\r\n                    <option value="">Select</option>\r\n                    <option *ngFor="let sv of shipViaList" [value]="sv.value">{{sv.label}}</option>\r\n                </select>\r\n            </span>\r\n        </strong>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="delete()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModelAlett()">No</button>\r\n    </div>\r\n\r\n</ng-template>\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModelAlettRestore()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <strong style="display: inline-flex;">\r\n            Ship Via:\r\n            <span class="new-label" *ngIf="restorerecord">\r\n                <select class="form-control select-read-only new-labelSelect" id="hideDisabled" [(ngModel)]="restorerecord.shipViaId" disabled>\r\n                    <option value="">Select</option>\r\n                    <option *ngFor="let sv of shipViaList" [value]="sv.value">{{sv.label}}</option>\r\n                </select>\r\n            </span>\r\n        </strong>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModelAlettRestore()">No</button>\r\n    </div>\r\n</ng-template>'},Zj2O:function(e,t,r){"use strict";r.r(t),t.default='<div class="form-group">\r\n  <div class="row">\r\n    <button type="button" class="btn btn-primary">Add PN</button>\r\n  </div>\r\n</div>\r\n'},aoDo:function(e,t,r){"use strict";r.r(t),t.default=".modal-body p .label {\r\n    width: 33%;\r\n    padding: 0;\r\n    display: inline-block;\r\n}\r\n\r\n.modal-body p .value {\r\n    width: 54%;\r\n    display: inline-block;\r\n    margin-left: 5%;\r\n}\r\n\r\n.loader-position{\r\n    position: absolute;\r\n}\r\n\r\n.loader-align{\r\n    margin-top: 17rem;\r\n    margin-left:30rem;\r\n}"},bHlc:function(e,t,r){"use strict";r.r(t),t.default='<div class="approver-tab-cstm">\r\n  <h5 class="po-head mt-2">Customer Approvals List</h5>\r\n\r\n  <div class="table-responsive">\r\n    <div class="table-responsive" style="margin-top: 10px;">\r\n      <table class="table table-bordered table-striped table-fixed table-sorting mpn-list-table" id="mpn-list-table">\r\n        <thead>\r\n          <tr class="pad_workflo">\r\n            <th>\r\n              <input type="checkbox" (click)="selectAllApproval(\'internal\', selectall)" [(ngModel)]="selectall"\r\n                [disabled]="isView" /> Select All\r\n            </th>\r\n            <th style="min-width: 100px !important;" *ngFor="let header of columns">{{header.header}}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr class="mpn-row" style="display: table-row;"\r\n            *ngFor="let approver of salesOrderCustomerApprovalListView; let i=index;">\r\n            <td>\r\n              <input type="checkbox" [disabled]="isView || !getPartToDisableOrNot(approver)"\r\n                [(ngModel)]="approver.selected" (click)="onApprovalSelected(approver, i)" />\r\n            </td>\r\n            <ng-container *ngFor="let field of columns">\r\n              <td style="width: 130px !important;" *ngIf="field.field != \'internalSentDate\'\r\n                                      && field.field != \'internalApprovedDate\'\r\n                                      && field.field != \'customerSentDate\'\r\n                                      && field.field != \'customerApprovedDate\'\r\n                                      && field.field != \'customerApprovedBy\'\r\n                                      && field.field != \'internalStatusId\'\r\n                                      && field.field != \'customerStatusId\'\r\n                                      && field.field != \'internalMemo\'\r\n                                      && field.field != \'customerMemo\'\r\n                                      && field.field != \'discount\'\r\n                                      && field.field != \'markUpPercentage\'\r\n                                      && field.field != \'unitCostExtended\'\r\n                                      && field.field != \'discountAmount\'\r\n                                      && field.field != \'netSales\'\r\n                                      && field.field != \'unitCost\'\r\n                                      && field.field != \'unitCostExtended\'\r\n                                      && field.field != \'marginAmountExtended\'\r\n                                      && field.field != \'marginPercentage\'\r\n                                      && field.field != \'markupExtended\'\r\n                                      && field.field != \'qty\'">\r\n\r\n                <span>{{approver[field.field]}}</span>\r\n              </td>\r\n              <td style="text-align: right; width: 150px !important;" *ngIf="field.field == \'discount\'\r\n                                      || field.field == \'markUpPercentage\'\r\n                                      || field.field == \'unitCostExtended\'\r\n                                      || field.field == \'discountAmount\'\r\n                                      || field.field == \'netSales\'\r\n                                      || field.field == \'unitCost\'\r\n                                      || field.field == \'markupExtended\'\r\n                                      || field.field == \'unitCostExtended\'\r\n                                      || field.field == \'marginAmountExtended\'\r\n                                      || field.field == \'marginPercentage\'">\r\n                <span>{{approver[field.field] | twoDecimalGlobalNumberFormatPipe}}</span>\r\n              </td>\r\n              <td *ngIf="field.field == \'qty\'" style="text-align: right; width: 130px !important;">\r\n                <span>{{approver[field.field] | globalNmberFormat}}</span>\r\n              </td>\r\n\r\n              <td *ngIf="field.field == \'internalSentDate\'">\r\n                <p-calendar [showIcon]="true" class="calender-cstm" name="openDate" #openDate="ngModel" required\r\n                  [(ngModel)]="approver[field.field]" [dateFormat]="\'dd/mm/yy\'" [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                  [disabled]="!approver.selected || approver[\'approvalActionId\'] != 1" appendTo="body">\r\n                </p-calendar>\r\n              </td>\r\n              <td *ngIf="field.field == \'internalStatusId\' && !getApprovalActionInternalStatus(approver)">\r\n                <label *ngIf="field.field != \'internalStatusId\'"\r\n                  [ngClass]="fields.includes(field.field)?\'text-align-right\':\'\'">{{approver[field.field]}}</label>\r\n                <select style="width:150px;" [(ngModel)]="approver[\'internalStatusId\']"\r\n                  [ngModelOptions]="{standalone: true}"\r\n                  [disabled]="!approver.selected || approver[\'approvalActionId\'] != 2"\r\n                  *ngIf="field.field == \'internalStatusId\'">\r\n                  <option value=\'-1\'>--Select</option>\r\n                  <option *ngFor="let status of statusList" [ngValue]="status.statusId">\r\n                    {{status.name}}\r\n                  </option>\r\n                </select>\r\n              </td>\r\n              <td *ngIf="field.field == \'internalStatusId\' && getApprovalActionInternalStatus(approver)">\r\n                <label *ngIf="field.field != \'internalStatusId\'"\r\n                  [ngClass]="fields.includes(field.field)?\'text-align-right\':\'\'">{{approver[field.field]}}</label>\r\n                <select style="width:150px;" [(ngModel)]="approver[\'internalStatusId\']"\r\n                  [ngModelOptions]="{standalone: true}"\r\n                  [disabled]="!approver.selected || approver[\'approvalActionId\'] != 2"\r\n                  *ngIf="field.field == \'internalStatusId\'">\r\n                  <option value=\'\' selected>--Select</option>\r\n                  <option *ngFor="let status of statusListForApproval" [ngValue]="status.statusId">\r\n                    {{status.name}}\r\n                  </option>\r\n                </select>\r\n              </td>\r\n              <td *ngIf="field.field == \'internalMemo\'" style="min-width: 100px;">\r\n                <p class="m-0 p-0 p_textEditor" style="float: left" [innerHTML]="approver[\'internalMemo\']"></p>\r\n                <div style="margin-top: 4px;float: right;" *ngIf="getApprovalActionInternalStatus(approver)">\r\n                  <i class="fa fa-info-circle fa-lg" data-toggle="modal" data-target="#memo-popup"\r\n                    matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddTextAreaInfo(\'internalMemo\',i)"></i>\r\n                </div>\r\n              </td>\r\n              <td *ngIf="field.field == \'internalApprovedDate\'">\r\n                <p-calendar [showIcon]="true" class="calender-cstm" name="openDate" #openDate="ngModel" required\r\n                  [(ngModel)]="approver[field.field]" [dateFormat]="\'dd/mm/yy\'"\r\n                  [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                  [disabled]="!approver.selected || approver[\'approvalActionId\'] != 2" appendTo="body">\r\n                </p-calendar>\r\n              </td>\r\n\r\n              <td *ngIf="field.field == \'customerSentDate\'">\r\n                <p-calendar [showIcon]="true" class="calender-cstm" name="openDate" #openDate="ngModel" required\r\n                  [(ngModel)]="approver[field.field]" [dateFormat]="\'dd/mm/yy\'"\r\n                  [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                  [disabled]="!approver.selected || approver[\'approvalActionId\'] != 3" appendTo="body">\r\n                </p-calendar>\r\n              </td>\r\n              <td *ngIf="field.field == \'customerStatusId\' && !getApprovalActionCustomerStatus(approver)">\r\n                <label *ngIf="field.field != \'customerStatusId\'">{{approver[field.field]}}</label>\r\n                <select style="width:150px;" [(ngModel)]="approver[\'customerStatusId\']"\r\n                  [ngModelOptions]="{standalone: true}"\r\n                  [disabled]="!approver.selected || approver[\'approvalActionId\'] != 4"\r\n                  *ngIf="field.field == \'customerStatusId\'">\r\n                  <option value=\'-1\'>--Select</option>\r\n                  <option *ngFor="let status of statusList" [ngValue]="status.statusId">\r\n                    {{status.name}}\r\n                  </option>\r\n                </select>\r\n              </td>\r\n              <td *ngIf="field.field == \'customerStatusId\' && getApprovalActionCustomerStatus(approver) ">\r\n                <label *ngIf="field.field != \'customerStatusId\'">{{approver[field.field]}}</label>\r\n                <select style="width:150px;" [(ngModel)]="approver[\'customerStatusId\']"\r\n                  [ngModelOptions]="{standalone: true}"\r\n                  [disabled]="!approver.selected || approver[\'approvalActionId\'] != 4"\r\n                  *ngIf="field.field == \'customerStatusId\'">\r\n                  <option value=\'\' selected>--Select</option>\r\n                  <option *ngFor="let status of statusListForApproval" [ngValue]="status.statusId">\r\n                    {{status.name}}\r\n                  </option>\r\n                </select>\r\n              </td>\r\n              <td *ngIf="field.field == \'customerMemo\'" style="min-width: 100px;">\r\n                <p class="m-0 p-0 p_textEditor" style="float: left" [innerHTML]="approver[\'customerMemo\']"></p>\r\n                <div style="margin-top: 4px;float: right;" *ngIf="getApprovalActionCustomerStatus(approver)">\r\n                  <i class="fa fa-info-circle fa-lg" data-toggle="modal" data-target="#memo-popup"\r\n                    matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddTextAreaInfo(\'customerMemo\',i)"></i>\r\n                </div>\r\n              </td>\r\n              <td *ngIf="field.field == \'customerApprovedDate\'">\r\n                <p-calendar [showIcon]="true" class="calender-cstm" name="openDate" #openDate="ngModel" required\r\n                  [(ngModel)]="approver[field.field]" [dateFormat]="\'dd/mm/yy\'"\r\n                  [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                  [disabled]="!approver.selected || approver[\'approvalActionId\'] != 4" appendTo="body">\r\n                </p-calendar>\r\n              </td>\r\n              <td *ngIf="field.field == \'customerApprovedBy\'">\r\n                <label *ngIf="field.field != \'customerApprovedBy\'">{{approver[field.field]}}</label>\r\n                <select *ngIf="field.field == \'customerApprovedBy\'" [(ngModel)]="approver[\'customerApprovedById\']"\r\n                  style="width:150px;" [disabled]="!approver.selected || approver[\'approvalActionId\'] != 4">\r\n                  <option value="">Select</option>\r\n                  <option *ngFor="let cus of customerContactList" [value]="cus.contactId">{{cus.contactName}}</option>\r\n                </select>\r\n              </td>\r\n            </ng-container>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n    <button *ngIf="!isView" class="btn btn-primary pull-right" (click)="saveApprovalProcess()"\r\n      style="margin-top: 10px; margin-bottom: 10px;">Submit</button>\r\n  </div>\r\n</div>\r\n\r\n<div class="modal fade" id="memo-popup" role="dialog" data-backdrop="static" data-keyboard="false">\r\n  <div class="modal-dialog modal-lg" style="max-width: 400px !important;">\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n        <h4 class="modal-title">Edit {{"Memo"}}</h4>\r\n      </div>\r\n      <div class="modal-body">\r\n        <table class="table table-bordered table-fixed workflow-table-material">\r\n          <thead>\r\n            <th style="color: #fff;">{{"Memo"}}</th>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>\r\n                <p-editor [(ngModel)]="textAreaInfo" [style]="{\'height\':\'320px\'}" name="textAreaInfo" required>\r\n                </p-editor>\r\n\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div style="float:right">\r\n          <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n            style="padding: 6px 12px !important;margin-top: 10px;" (click)="onSaveTextAreaInfo(textAreaInfo)">\r\n            Save\r\n          </button>\r\n          <button type="button" class="btn btn-danger" style="padding: 6px 12px !important;margin-top: 10px;"\r\n            data-dismiss="modal">\r\n            Close\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #customerApprovalConfirmationModal let-c="close" let-d="dismiss">\r\n  <div class="modal-header">\r\n    <button type="button" class="close" data-dismiss="modal" (click)="closeConfirmationModal()">&times;</button>\r\n    <h4 class="modal-title">Do you want to approve the parts selected ?</h4>\r\n  </div>\r\n  <div class="modal-footer">\r\n    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeConfirmationModal()">Cancel</button>\r\n    <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="approve()">Approve</button>\r\n  </div>\r\n</ng-template>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n  <div class="loading">\r\n    <div class="lds-roller">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n</div>'},c50w:function(e,t,r){"use strict";r.r(t),t.default=""},ck4h:function(e,t,r){"use strict";r.r(t),t.default="button {\n  border-radius: 5px;\n}\n\np-table tr th {\n  text-align: left !important;\n}\n\nbutton:disabled {\n  opacity: 0.5;\n}\n\n.footer-t-rec {\n  margin-left: 65%;\n}\n\n.footer--count {\n  margin-right: 0px;\n}\n\n.zui-table {\n  border: none;\n  border-right: solid 1px #DDEFEF;\n  border-collapse: separate;\n  border-spacing: 0;\n  font: normal 13px Arial, sans-serif;\n}\n\n.zui-table tr th {\n  background-color: #DDEFEF;\n  border: none;\n  color: #336B6B;\n  width: 130px;\n  padding: 10px;\n  text-align: left;\n  text-shadow: 1px 1px 1px #fff;\n  white-space: nowrap;\n}\n\n.zui-table tr td {\n  border-bottom: solid 1px #DDEFEF;\n  width: 130px;\n  color: #333;\n  padding: 10px;\n  text-shadow: 1px 1px 1px #fff;\n  white-space: nowrap;\n}\n\n.zui-wrapper {\n  position: relative;\n}\n\n.zui-scroller {\n  overflow-y: hidden;\n  padding-bottom: 5px;\n  width: 1279px;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n}\n\n.zui-scroller-view {\n  overflow-y: hidden;\n  padding-bottom: 5px;\n  width: 1097px;\n  border: 1px solid rgba(0, 0, 0, 0.125);\n}\n\n.zui-table .zui-sticky-col {\n  border-left: solid 1px #DDEFEF;\n  border-right: solid 1px #DDEFEF;\n  left: 0;\n  position: absolute;\n  top: auto;\n  width: 120px;\n}\n\n.ui-table-scrollable-header-box {\n  margin-right: 17px !important;\n}\n\n.ui-table-scrollable-body {\n  margin-right: 17px !important;\n}\n\n::-webkit-scrollbar {\n  width: 10px;\n}\n\n.ui-table-scrollable-header {\n  overflow-y: scroll;\n}\n\n.alternate-part-label {\n  color: #ff5663 !important;\n}\n\n.row-bg1 {\n  background-color: #ffe4e2 !important;\n}\n\n.sales-quote-part-search-data tr td:first-child {\n  background: #4298ff;\n  color: #fff;\n  position: -webkit-sticky;\n  position: sticky;\n  left: 0;\n}\n\n.sales-quote-part-search-data tr td:last-child {\n  background: #FFF;\n  position: -webkit-sticky;\n  position: sticky;\n  right: 0;\n  width: 80px !important;\n}\n\n.sales-quote-part-search-data tr th:first-child {\n  background: #4298ff;\n  color: #fff;\n  position: -webkit-sticky;\n  position: sticky;\n  left: 0;\n}\n\n.sales-quote-part-search-data tr th:last-child {\n  position: -webkit-sticky;\n  position: sticky;\n  right: 0;\n}"},d9PF:function(e,t,r){"use strict";r.r(t),t.default='<div class="modal-header">\r\n    <button type="button" class="close" data-dismiss="modal"\r\n        (click)="onClick(salesOrderConfirmationType.No)">&times;</button>\r\n    <h4 class="modal-title">{{header}}</h4>\r\n</div>\r\n<div class="modal-body">\r\n    <h6 class="text-center">\r\n        {{body}}\r\n    </h6>\r\n</div>\r\n<div class="modal-footer">\r\n    <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n        (click)="onClick(salesOrderConfirmationType.No)">No</button>\r\n    <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n        (click)="onClick(salesOrderConfirmationType.Yes)">Yes</button>\r\n</div>'},etMe:function(e,t,r){"use strict";r.r(t),t.default='<div class="sales-order-actions">\r\n    <button type="button" class="btn btn-primary" (click)="onClick(salesOrderActionType.ViewQuote)"\r\n        *ngIf="controlSettings && controlSettings.showViewQuote">\r\n        View Quote\r\n    </button>\r\n    <p-splitButton label="Payment" styleClass="btn btn-primary" [model]="paymentItems">\r\n    </p-splitButton>\r\n    <button type="button" class="btn btn-primary" (click)="onClick(salesOrderActionType.NewSalesOrder)">New SO</button>\r\n    <p-splitButton [showTransitionOptions]="\'0ms\'" [hideTransitionOptions]="\'0ms\'" label="Print"\r\n        styleClass="btn btn-primary" [model]="printItems">\r\n    </p-splitButton>\r\n    <p-splitButton [showTransitionOptions]="\'0ms\'" [hideTransitionOptions]="\'0ms\'" label="Actions"\r\n        styleClass="btn btn-primary" [model]="actionItems">\r\n    </p-splitButton>\r\n    <p-splitButton label="Communication" styleClass="btn btn-primary" [model]="communicationItems">\r\n    </p-splitButton>\r\n    <button type="button" class="btn btn-primary"\r\n        (click)="onClick(salesOrderActionType.CancelSalesOrder)">Cancel</button>\r\n    <button type="button" class="btn btn-primary" (click)="onClick(salesOrderActionType.CloseSalesOrder)">\r\n        Close\r\n        SO\r\n    </button>\r\n</div>'},etp1:function(e,t,r){"use strict";r.r(t),t.default="p-autocomplete {\r\n  border-radius: 5px !important;\r\n}\r\n\r\n.ui-input-control {\r\n  margin-top: 6px !important;\r\n}\r\n\r\n.btn-small {\r\n  padding: 1px;\r\n}\r\n\r\n/* #footer {\r\n  display: inline-flex;\r\n  font-size: 11px !important;\r\n} */\r\n\r\n.footer-t-rec {\r\n  margin-left: 65%;\r\n}\r\n\r\n.footer--count {\r\n  margin-right: 0px;\r\n}\r\n"},fBTL:function(e,t,r){"use strict";var n=this&&this.__decorate||function(e,t,r,n){var s,a=arguments.length,i=a<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,n);else for(var o=e.length-1;o>=0;o--)(s=e[o])&&(i=(a<3?s(i):a>3?s(t,r,i):s(t,r))||i);return a>3&&i&&Object.defineProperty(t,r,i),i},s=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)};Object.defineProperty(t,"__esModule",{value:!0});var a=r("8Y7J"),i=r("SVse"),o=r("7LN8"),l=r("GS7A"),d=0,c=function(){function e(e){this.el=e,this.collapsed=!1,this.expandIcon="pi pi-plus",this.collapseIcon="pi pi-minus",this.showHeader=!0,this.toggler="icon",this.collapsedChange=new a.EventEmitter,this.onBeforeToggle=new a.EventEmitter,this.onAfterToggle=new a.EventEmitter,this.transitionOptions="400ms cubic-bezier(0.86, 0, 0.07, 1)",this.id="ui-panel-"+d++}return e.prototype.onHeaderClick=function(e){"header"===this.toggler&&this.toggle(e)},e.prototype.onIconClick=function(e){"icon"===this.toggler&&this.toggle(e)},e.prototype.toggle=function(e){if(this.animating)return!1;this.animating=!0,this.onBeforeToggle.emit({originalEvent:e,collapsed:this.collapsed}),this.toggleable&&(this.collapsed?this.expand(e):this.collapse(e)),e.preventDefault()},e.prototype.expand=function(e){this.collapsed=!1,this.collapsedChange.emit(this.collapsed)},e.prototype.collapse=function(e){this.collapsed=!0,this.collapsedChange.emit(this.collapsed)},e.prototype.getBlockableElement=function(){return this.el.nativeElement.children[0]},e.prototype.onToggleDone=function(e){this.animating=!1,this.onAfterToggle.emit({originalEvent:e,collapsed:this.collapsed})},n([a.Input(),s("design:type",Boolean)],e.prototype,"toggleable",void 0),n([a.Input(),s("design:type",String)],e.prototype,"header",void 0),n([a.Input(),s("design:type",Boolean)],e.prototype,"collapsed",void 0),n([a.Input(),s("design:type",Object)],e.prototype,"style",void 0),n([a.Input(),s("design:type",String)],e.prototype,"styleClass",void 0),n([a.Input(),s("design:type",String)],e.prototype,"expandIcon",void 0),n([a.Input(),s("design:type",String)],e.prototype,"collapseIcon",void 0),n([a.Input(),s("design:type",Boolean)],e.prototype,"showHeader",void 0),n([a.Input(),s("design:type",String)],e.prototype,"toggler",void 0),n([a.Output(),s("design:type",a.EventEmitter)],e.prototype,"collapsedChange",void 0),n([a.Output(),s("design:type",a.EventEmitter)],e.prototype,"onBeforeToggle",void 0),n([a.Output(),s("design:type",a.EventEmitter)],e.prototype,"onAfterToggle",void 0),n([a.Input(),s("design:type",String)],e.prototype,"transitionOptions",void 0),n([a.ContentChild(o.Footer,{static:!1}),s("design:type",Object)],e.prototype,"footerFacet",void 0),n([a.Component({selector:"p-panel",template:'\n        <div [attr.id]="id" [ngClass]="\'ui-panel ui-widget ui-widget-content ui-corner-all\'" [ngStyle]="style" [class]="styleClass">\n            <div [ngClass]="{\'ui-panel-titlebar ui-widget-header ui-helper-clearfix ui-corner-all\': true, \'ui-panel-titlebar-clickable\': (toggleable && toggler === \'header\')}" \n                *ngIf="showHeader" (click)="onHeaderClick($event)">\n                <span class="ui-panel-title" *ngIf="header">{{header}}</span>\n                <ng-content select="p-header"></ng-content>\n                <a *ngIf="toggleable" [attr.id]="id + \'-label\'" class="ui-panel-titlebar-icon ui-panel-titlebar-toggler ui-corner-all ui-state-default" tabindex="0"\n                    (click)="onIconClick($event)" (keydown.enter)="onIconClick($event)" [attr.aria-controls]="id + \'-content\'" role="tab" [attr.aria-expanded]="!collapsed">\n                    <span [class]="collapsed ? expandIcon : collapseIcon"></span>\n                </a>\n            </div>\n            <div [attr.id]="id + \'-content\'" class="ui-panel-content-wrapper" [@panelContent]="collapsed ? {value: \'hidden\', params: {transitionParams: animating ? transitionOptions : \'0ms\', height: \'0\', opacity:\'0\'}} : {value: \'visible\', params: {transitionParams: animating ? transitionOptions : \'0ms\', height: \'*\', opacity: \'1\'}}" (@panelContent.done)="onToggleDone($event)"\n                [ngClass]="{\'ui-panel-content-wrapper-overflown\': collapsed||animating}"\n                role="region" [attr.aria-hidden]="collapsed" [attr.aria-labelledby]="id + \'-label\'">\n                <div class="ui-panel-content ui-widget-content">\n                    <ng-content></ng-content>\n                </div>\n                \n                <div class="ui-panel-footer ui-widget-content" *ngIf="footerFacet">\n                    <ng-content select="p-footer"></ng-content>\n                </div>\n            </div>\n        </div>\n    ',animations:[l.trigger("panelContent",[l.state("hidden",l.style({height:"0",opacity:0})),l.state("void",l.style({height:"{{height}}",opacity:"{{opacity}}"}),{params:{height:"0",opacity:"0"}}),l.state("visible",l.style({height:"*",opacity:1})),l.transition("visible <=> hidden",l.animate("{{transitionParams}}")),l.transition("void => hidden",l.animate("{{transitionParams}}")),l.transition("void => visible",l.animate("{{transitionParams}}"))])]}),s("design:paramtypes",[a.ElementRef])],e)}();t.Panel=c;var u=function(){function e(){}return n([a.NgModule({imports:[i.CommonModule],exports:[c,o.SharedModule],declarations:[c]})],e)}();t.PanelModule=u},fJFJ:function(e,t,r){"use strict";r.r(t),t.default="button {\r\n  border-radius: 5px;\r\n}\r\n"},fSHZ:function(e,t,r){"use strict";r.r(t),t.default='<div class="modal-header">\r\n  <button type="button" class="close" data-dismiss="modal" (click)="close()">&times;</button>\r\n  <h4 class="modal-title">Are you sure you want to copy this Order?</h4>\r\n</div>\r\n<div class="modal-body">\r\n  <h6> If yes, please select below considerations.</h6>\r\n\r\n  <div class="form-group popup_checkbox_considerations" style="margin-top: 5px;">\r\n    <p-checkbox name="copyParts" [(ngModel)]="salesOrderCopyParameters.copyParts" binary="true" label="Parts">\r\n    </p-checkbox>\r\n  </div>\r\n  <div class="form-group popup_checkbox_considerations" style="margin-top: 5px;">\r\n    <p-checkbox name="copyInternalApprovals" [(ngModel)]="salesOrderCopyParameters.copyInternalApprovals" binary="true"\r\n      label="Internal Approvals">\r\n    </p-checkbox>\r\n  </div>\r\n</div>\r\n<div class="modal-footer">\r\n  <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="close()">No</button>\r\n  <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="copy()">Yes</button>\r\n</div>'},fsuF:function(e,t,r){"use strict";r.r(t),t.default='<div class="row">\r\n  <div style="overflow-y: auto;">\r\n    <p-table #dt class="rpo-table-cstm rro-table-cstm sales-quote-part-search-data" [value]="parts" [rows]="10"\r\n      [lazy]="true" [paginator]="showPaginator" [rowsPerPageOptions]="[10, 20, 30]" [totalRecords]="totalRecords"\r\n      [pageLinks]="pageLinks" [columns]="columns" [scrollable]="true" [resizableColumns]="true"\r\n      [reorderableColumns]="true" [style]="{ width: \'100%\' }" (onLazyLoad)="onPaging($event)">\r\n      <ng-template pTemplate="colgroup" let-columns>\r\n        <colgroup>\r\n          <col *ngFor="let col of columns" [ngStyle]="{\'width\': col.width, \'text-align\': col.textalign}" />\r\n          <col style="width:80px" />\r\n        </colgroup>\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate="header" let-columns>\r\n        <tr>\r\n          <th style="text-align: left !important;" *ngFor="let col of columns" pResizableColumn pReorderableColumn>\r\n            {{ col.header }}\r\n\r\n          </th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="body" let-part let-columns="columns">\r\n        <tr [pSelectableRow]="part" [ngClass]="{\'row-bg1\':part.alternateFor.length==0}" pReorderableRowHandle>\r\n\r\n          <td *ngFor="let col of columns" pReorderableRowHandle>\r\n            <span *ngIf="col.field == \'selected\'"><input type="checkbox" (change)="onChange($event, part, 0)" /></span>\r\n            <span *ngIf="col.field == \'partNumber\'">{{ part.partNumber }} <span class="alternate-part-label"\r\n                *ngIf="part.mappingType==1">(Alt)</span> <span class="alternate-part-label"\r\n                *ngIf="part.mappingType==2">(Eq)</span></span>\r\n\r\n            <span *ngIf="col.field == \'itemClassification\'">\r\n              {{\r\n                      part.itemClassification !== null\r\n                        ? part.itemClassification.itemType\r\n                        : ""\r\n                    }}\r\n            </span>\r\n\r\n            <span\r\n              *ngIf="col.field != \'qtyOnOrder\' && col.field != \'qtyToOrder\' && col.field != \'qtyOnHand\' && col.field != \'qtyAvailable\' && col.field != \'partNumber\' && col.field != \'selected\'&&col.field != \'itemClassification\'">{{part[col.field] }}</span>\r\n            <span *ngIf="col.field == \'qtyAvailable\'" class="float-right">\r\n              {{\r\n                    part.qtyAvailable | globalNmberFormat\r\n                  }}\r\n            </span>\r\n            <span *ngIf="col.field == \'qtyOnHand\'" class="float-right">\r\n              {{\r\n                    part.qtyOnHand | globalNmberFormat\r\n                  }}\r\n            </span>\r\n            <span *ngIf="col.field == \'qtyToOrder\'" class="float-right">\r\n              {{\r\n                    part.qtyToOrder | globalNmberFormat\r\n                  }}\r\n            </span>\r\n            <span *ngIf="col.field == \'qtyOnOrder\'" class="float-right">\r\n              {{\r\n                    part.qtyOnOrder | globalNmberFormat\r\n                  }}\r\n            </span>\r\n\r\n\r\n          </td>\r\n          <td>\r\n            <span>\r\n              <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" (click)="viewSelectedRow(part)"\r\n                matTooltip="View">\r\n                <i class="fa fa-eye"></i>\r\n              </a>\r\n              <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" (click)="viewStockLineHistory(part)"\r\n                matTooltip="History">\r\n                <i class="fa fa-history"></i>\r\n              </a>\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>'},hAxM:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}(r("fBTL"))},hUYh:function(e,t,r){"use strict";r.r(t),t.default='<p-breadcrumb [model]="breadcrumbs" [home]="home"></p-breadcrumb>\r\n<div class="card new-card">\r\n    <div class="card-header bg-primary new-card-header">\r\n        <div class="row">\r\n            <div class="col">\r\n                <h4 class="new-card-heading">Sales Order Confirmation List</h4>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="card-body new-card-body">\r\n        <p-table #dt [value]="sales" class="rpo-table-cstm rro-table-cstm" [columns]="selectedColumns"\r\n            [scrollable]="true" [autoLayout]="true" [resizableColumns]="true" [style]="{ width: \'100%\' }">\r\n            <ng-template pTemplate="caption">\r\n                <div class="row">\r\n                    <div class="col">\r\n                        <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns" optionLabel="header"\r\n                            selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}"\r\n                            defaultLabel="Choose Columns" style="float:left">\r\n                        </p-multiSelect>\r\n                    </div>\r\n                    <div class="col">\r\n                        <div style="width: auto !important; float: right;"\r\n                            class="inner-addon right-addon w50 inline-block g-filter-search-cstm">\r\n                            <i class="fa fa-search"></i>\r\n                            <input type="text" pInputText size="50" class="form-control"\r\n                                (input)="globalSearch($event.target.value)" placeholder="Filter">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="row">\r\n                    <div class="col">\r\n                        <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"\r\n                            matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Data"\r\n                            (click)="dt.exportCSV()"></button>\r\n                        <button type="button" class="btn btn-primary new-table-button"\r\n                            matTooltip="Download Selected Data" matTooltipPosition="above" pButton icon="fa-download"\r\n                            iconPos="left" label="Export Selected Data"\r\n                            (click)="dt.exportCSV({ selectionOnly: true })"></button>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col *ngFor="let col of columns" [ngStyle]="{\'width\': col.width}" />\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n                    <th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                    </th>\r\n                    <th style="width:100px;">\r\n                        Actions\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th [ngStyle]="{\'width\': col.width}" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                        <input style="width:100%;" pInputText type="text"\r\n                            (input)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                    </th>\r\n                    <th style="width:100px;position:sticky"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData="rowData" let-sale let-columns="columns" let-rowIndex="rowIndex">\r\n                <tr [pSelectableRow]="sale" [pSelectableRowIndex]="rowIndex" pReorderableRowHandle\r\n                    [pSelectableRowDblClick]="rowData">\r\n                    <td *ngFor="let col of columns" pReorderableRowHandle>\r\n                        {{\r\n      (col.type === "date") ? ( sale[col.field] ? ( sale[col.field] | date: "MM/dd/yyyy"  ) : \'\' ): sale[col.field]\r\n                    }}\r\n                    </td>\r\n                    <td style="width: 100px">\r\n                        <button class="btn-edit" mat-icon-button (click)="viewSelectedRow(viewOrder,sale)"\r\n                            matTooltip="View" matTooltipPosition="above">\r\n                            <i class="fa fa-eye"></i>\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="sales.length == 0">\r\n                <tr>\r\n                    <td [attr.colspan]="10" style="color: red; font-weight: bold; text-align: center">\r\n                        No records found\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer" class="footer">Total:</label>\r\n                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer" class="footer1">Pages Count:</label>\r\n\r\n                <input style="width: 5%;" [ngModel]="totalPages" [disabled]="true" pInputText type="text" />\r\n            </ng-template>\r\n        </p-table>\r\n\r\n\r\n    </div>\r\n</div>\r\n<ng-template #content let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="deleteQuote()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #viewOrder let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" (click)="dismissModel()">\r\n            &times;\r\n        </button>\r\n        <h4 class="modal-title">Details of Order</h4>\r\n    </div>\r\n\r\n    <div class="modal-body">\r\n        <app-sales-order-view [customerId]="customerId" [salesOrderId]="salesOrderId" [salesOrderView]="salesOrderView">\r\n        </app-sales-order-view>\r\n\r\n\r\n    </div>\r\n\r\n\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">Okay</button>\r\n    </div>\r\n\r\n</ng-template>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},hUmh:function(e,t,r){"use strict";r.r(t),t.default="p-autocomplete {\r\n  border-radius: 5px !important;\r\n}\r\n\r\n.ui-input-control {\r\n  margin-top: 6px !important;\r\n}\r\n\r\n.btn-small {\r\n  padding: 1px;\r\n}\r\n\r\n/* #footer {  \r\n  font-size: 11px !important;\r\n  font-weight:12px !important;\r\n} */\r\n\r\n.footer-t-rec {\r\n  margin-left: 65%;\r\n}\r\n\r\n.footer--count {\r\n  margin-right: 0px;\r\n}\r\n"},j14T:function(e,t,r){"use strict";r.r(t),t.default="button {\r\n  border-radius: 5px;\r\n}\r\n"},jHA9:function(e,t,r){"use strict";r.r(t),t.default='<p-breadcrumb [model]="breadcrumbs" [home]="home"></p-breadcrumb>\r\n\r\n<div class="card new-card">\r\n  <div class="card-header bg-primary new-card-header">\r\n    <div class="row">\r\n      <div class="col">\r\n        <h4 class="new-card-heading">Search Customer</h4>\r\n      </div>\r\n      <div>\r\n        <button type="button" class="btn-sm new-btn-primary pull-right" matTooltipPosition="above"\r\n          matTooltip=" SO Quote List" [routerLink]="[\'/salesmodule/salespages/sales-quote-list\']">\r\n          SO Quote List\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class="card-body new-card-body">\r\n    <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="data" [first]="0" [rows]="pageSize" [paginator]="true"\r\n      [pageLinks]="3" [rowsPerPageOptions]="[10, 20, 50, 100]" [columns]="selectedColumns" selectionMode="multiple"\r\n      [metaKeySelection]="true" [lazy]="true" (onLazyLoad)="loadData($event)" [resizableColumns]="true"\r\n      [reorderableColumns]="true" [totalRecords]="totalRecords" [scrollable]="true" scrollHeight="450px">\r\n      <ng-template pTemplate="caption">\r\n        <div class="row">\r\n          <div class="col">\r\n            <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns" optionLabel="header"\r\n              selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns"\r\n              style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n          </div>\r\n          <div class="col">\r\n            <div style="width: auto !important; float: right;"\r\n              class="inner-addon right-addon w50 inline-block g-filter-search-cstm">\r\n              <i class="fa fa-search"></i>\r\n              <input type="text" pInputText size="50" class="form-control" (input)="globalSearch($event.target.value)"\r\n                placeholder="Filter">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="row">\r\n          <div class="col">\r\n            \x3c!-- <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"\r\n              matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Data"\r\n              (click)="dt.exportCSV()"></button> --\x3e\r\n            <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"\r\n              matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Data"\r\n              data-toggle="modal" (click)="selectedOnly = false; targetData = dt;"\r\n              data-target="#downloadConfirmation"></button>\r\n            <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"\r\n              matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n              (click)="dt.exportCSV({ selectionOnly: true })"></button>\r\n          </div>\r\n          <div class="col"></div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate="colgroup" let-columns>\r\n        <colgroup>\r\n          <col *ngFor="let col of columns" style="width:130px">\r\n        </colgroup>\r\n      </ng-template>\r\n\r\n      <ng-template pTemplate="header" let-columns>\r\n        <tr>\r\n\r\n          <th style="width:auto" *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n            [pSortableColumn]="col.field">\r\n            {{ col.header }}\r\n            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n          </th>\r\n          <th style="width:180px;position:sticky">\r\n            Actions\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n            <input style="width:100%;" pInputText type="text"\r\n              (input)="dt.filter($event.target.value, col.field, \'contains\')">\r\n          </th>\r\n          <th style="width:180px;position:sticky"></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n        <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData" pReorderableRowHandle\r\n          (dblclick)="viewSelectedRow(rowData)">\r\n          <td style="width:auto" *ngFor="let col of columns" class="ui-resizable-column"\r\n            style="text-overflow: ellipsis;" [matTooltip]="mouseOverData(col.field,  rowData)"\r\n            matTooltipPosition="above" [matTooltipDisabled]="rowData[\'customerClassificationType\'] != \'Multiple\'"\r\n            [ngStyle]="{\'color\': getColorCodeForMultiple(rowData)}">\r\n            {{\r\n              col.field == \'createdDate\'\r\n                ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                : rowData[col.field] && col.field == \'updatedDate\'\r\n                ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                : rowData[col.field]\r\n                        }}\r\n          </td>\r\n          <td class="action-icons-cstm" style="width:180px" *ngIf="selectedColumns.length > 0">\r\n            <div>\r\n              <span>\r\n                <a class="btn btn-info boxed-float-btn nobg nobg" data-toggle="tooltip"\r\n                  (click)="viewSelectedRow(rowData)" matTooltip="View" matTooltipPosition="above">\r\n                  <i class="fa fa-eye"></i>\r\n                </a>\r\n              </span>\r\n              <button class="btn-add" mat-icon-button matTooltip="Create Sales Order Quote" matTooltipPosition="above"\r\n                (click)="createQuote(rowData)" [disabled]="!rowData.isActive || rowData.isDeleted">\r\n                <i class="fa fa-plus"> </i>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="summary" id="footer">\r\n        <label id="footer" class="footer">Total:</label>\r\n        <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText type="text" />\r\n        &nbsp;&nbsp;\r\n        <label id="footer" class="footer1">Pages Count:</label>\r\n        <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText type="text" />\r\n      </ng-template>\r\n      <ng-template pTemplate="emptymessage" let-columns>\r\n        <tr>\r\n          <td colspan="11" style="color: red; font-weight: bold; text-align: center">\r\n            No records found\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n<ng-template #warningPopup let-c="close" let-d="dismiss">\r\n  <div class="modal-header">\r\n    <button type="button" class="close" data-dismiss="modal" (click)="closeModal()">&times;</button>\r\n    <h4 class="modal-title warning_color"> Warning</h4>\r\n  </div>\r\n  <div class="modal-body">\r\n    <p class="warning_color">{{customerWarning.warningMessage}}</p>\r\n  </div>\r\n  <div class="modal-footer">\r\n\r\n    <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n      (click)="moveToCreate(customerWarning.customerId)">Ok</button>\r\n  </div>\r\n</ng-template>\r\n<ng-template #restrictionPopup let-c="close" let-d="dismiss">\r\n  <div class="modal-header">\r\n    <button type="button" class="close" data-dismiss="modal" (click)="closeModal()">&times;</button>\r\n    <h4 class="modal-title restrict_color"> Restriction</h4>\r\n  </div>\r\n  <div class="modal-body">\r\n    <p class="restrict_color">{{customerWarning.restrictMessage}}</p>\r\n  </div>\r\n  <div class="modal-footer">\r\n\r\n    <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="closeModal()">Ok</button>\r\n  </div>\r\n</ng-template>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n  <div class="loading">\r\n    <div class="lds-roller">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class="modal fade" id="downloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n  <div class="modal-dialog modal-sm">\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" (click)="closePopupModal()">&times;</button>\r\n        <h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n      </div>\r\n      <div class="modal-body" *ngIf="targetData && !selectedOnly">\r\n        <strong>\r\n          <span>\r\n            You are attempting to export {{targetData.totalRecords}} of records.\r\n          </span>\r\n        </strong>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary"\r\n          (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }) : exportCSV(targetData); closeDeleteModal();">Confirm</button>\r\n        <button type="button" class="btn btn-danger" (click)="closePopupModal()">Cancel</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>'},jV7o:function(e,t,r){"use strict";r.r(t),t.default='<div class="modal-header">\r\n  <button type="button" class="close" (click)="onClose($event)">\r\n    &times;\r\n  </button>\r\n  <h4 class="modal-title" *ngIf="!isEdit">Compute Sales Price</h4>\r\n  <h4 class="modal-title" *ngIf="isEdit">Edit Margin Details</h4>\r\n\r\n</div>\r\n<div class="modal-body">\r\n  <div class="row margin-row">\r\n    <div class="col-md-12 col-sm-12 col-12">\r\n      <div class="form-group" style="display: inline-block;margin: 10px 5px 0 5px;">\r\n        <p class="fs10 wauto no-bg">\r\n          <label style="width: auto;">PN <span class="clr-red">:</span></label>\r\n          {{part.partNumber}}\r\n        </p>\r\n      </div>\r\n      <div class="form-group" style="display: inline-block;margin: 10px 5px 0 5px;">\r\n        <p class="fs10 wauto no-bg">\r\n          <label style="width: auto;">Description <span class="clr-red">:</span></label>\r\n          {{part.description}} </p>\r\n      </div>\r\n      <div class="form-group" style="display: inline-block;margin: 10px 5px 0 5px;">\r\n        <p class="fs10 wauto no-bg">\r\n          <label style="width: auto;">Cond <span class="clr-red">:</span></label>\r\n          {{part.conditionDescription}}\r\n        </p>\r\n      </div>\r\n      <div class="form-group" style="display: inline-block;margin: 10px 5px 0 5px;">\r\n        <p class="fs10 wauto no-bg">\r\n          <label style="width: auto;">Classification <span class="clr-red">:</span></label>\r\n          {{ part.itemClassification  ? part.itemClassification : \'\'}}</p>\r\n      </div>\r\n      <div *ngIf="part.stockLineNumber" class="form-group" style="display: inline-block;margin: 10px 5px 0 5px;">\r\n        <p class="fs10 wauto no-bg">\r\n          <label style="width: auto;">Stk Line Number <span class="clr-red">:</span></label>\r\n          {{ part.stockLineNumber  ? part.stockLineNumber : \'\'}}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class="row margin-row">\r\n    <div class="col-md-12 col-sm-12 col-12">\r\n      <div class="col-3 column">\r\n        <div class="form-group">\r\n          <label>Quantity requested</label>\r\n          <input type="text" class="form-control quantityTextBox text-right" pInputText pKeyFilter="num"\r\n            name="quantityRequest" disabled="true" [ngModel]="part.quantityRequested  | globalNmberFormat"\r\n            (ngModelChange)="part.quantityRequested=formatStringToNumberGlobal($event)" />\r\n        </div>\r\n      </div>\r\n      <div class="col-3 column">\r\n        <div class="form-group">\r\n          <label>Quantity already quoted</label>\r\n          <input type="text" class="form-control quantityTextBox text-right" name="quantityAlreadyQuoted"\r\n            disabled="true" [ngModel]="part.quantityAlreadyQuoted  | globalNmberFormat"\r\n            (ngModelChange)="part.quantityAlreadyQuoted=formatStringToNumberGlobal($event)" />\r\n        </div>\r\n      </div>\r\n      <div class="col-3 column">\r\n        <div class="form-group">\r\n          <label>Quantity from this <span *ngIf="part.method==\'Item Master\'">PN</span><span\r\n              *ngIf="part.method==\'Stock Line\'">{{part.stockLineNumber}}</span></label>\r\n          <input type="text" (keyup)="onChangeQuantityFromThis($event)" (blur)="onChangeQuantityFromThis($event)"\r\n            class="form-control quantityTextBox text-right" name="quantityFromThis"\r\n            [ngModel]="part.quantityFromThis | globalNmberFormat" [ngModelOptions]="{updateOn:\'blur\'}"\r\n            (ngModelChange)="part.quantityFromThis=formatStringToNumberGlobal($event)" (change)="calculate()"\r\n            name="quantityRequested" autocomplete="off" />\r\n          <div class="error" *ngIf="invalidQuantityenteredForQuantityFromThis == true">\r\n            <span style="color:red">Value cannot be greater than qty to be quoted and qty available</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class="col-3 column">\r\n        <div class="form-group">\r\n          <label>Quantity to be quoted</label>\r\n          <input type="text" class="form-control quantityTextBox text-right" name="quantityToBeQuoted" disabled="true"\r\n            [ngModel]="part.quantityToBeQuoted  | globalNmberFormat"\r\n            (ngModelChange)="part.quantityToBeQuoted=formatStringToNumberGlobal($event)" />\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n  <div class="row margin-row row-table calculation">\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th style="width:25%"></th>\r\n          <th style="width:15%"></th>\r\n          <th style="width:25%"><span>Per Unit</span></th>\r\n          <th style="width:25%"><span>Extended</span></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <span>Sales Price</span></td>\r\n          <td>\r\n          </td>\r\n          <td><span><input type="text" class="form-control text-right"\r\n                [ngModel]="part.salesPricePerUnit  | twoDecimalGlobalNumberFormatPipe"\r\n                [ngModelOptions]="{updateOn:\'blur\'}"\r\n                (ngModelChange)="part.salesPricePerUnit=formatStringToNumberGlobal($event)"\r\n                (blur)="calculate()"\r\n                pKeyFilter="money" /></span></td>\r\n          <td><span>{{part.salesPriceExtended | twoDecimalGlobalNumberFormatPipe }}</span></td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <span>Markup (%)</span>\r\n          </td>\r\n          <td>\r\n            <select style="width:90%" [(ngModel)]="part.markUpPercentage" (change)="calculate()">\r\n              <option [ngValue]="0">Select</option>\r\n              <option *ngFor="let p of percentage" [ngValue]="p.label">{{ p.label }}</option>\r\n            </select>\r\n            <span style="padding-left: 5px;">%</span>\r\n          </td>\r\n          <td><span><input type="text" class="form-control text-right"\r\n                [ngModel]="part.markupPerUnit | twoDecimalGlobalNumberFormatPipe" \r\n                [ngModelOptions]="{updateOn:\'blur\'}"\r\n                (ngModelChange)="part.markupPerUnit=formatStringToNumberGlobal($event)" \r\n                (blur)="calculate()"\r\n                pKeyFilter="money" /></span>\r\n          </td>\r\n          <td><span>{{part.markupExtended | twoDecimalGlobalNumberFormatPipe }}</span></td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <span>Sales Disc (%)</span>\r\n          </td>\r\n          <td>\r\n            <select style="width:90%" [(ngModel)]="part.salesDiscount" (change)="calculate()">\r\n              <option [ngValue]="0">Select</option>\r\n              <option *ngFor="let p of percentage" [ngValue]="p.label">{{ p.label }}</option>\r\n            </select>\r\n            <span style="padding-left: 5px;">%</span>\r\n\r\n          </td>\r\n          <td>\r\n            <input type="text" \r\n              class="form-control text-right"\r\n              [ngModel]="part.salesDiscountPerUnit  | twoDecimalGlobalNumberFormatPipe"\r\n              [ngModelOptions]="{updateOn:\'blur\'}"\r\n              (ngModelChange)="part.salesDiscountPerUnit=formatStringToNumberGlobal($event)" \r\n              (blur)="calculate()" \r\n              pKeyFilter="money"/>\r\n          </td>\r\n          <td><span>{{part.salesDiscountExtended | twoDecimalGlobalNumberFormatPipe}}</span></td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <span>Net Sale Price</span>\r\n          </td>\r\n          <td>\r\n          </td>\r\n          <td>\r\n            <span>{{part.netSalesPricePerUnit | twoDecimalGlobalNumberFormatPipe}}</span>\r\n          </td>\r\n          <td><span>{{part.netSalesPriceExtended | twoDecimalGlobalNumberFormatPipe }}</span></td>\r\n        </tr>\r\n        <tr>\r\n          <td colspan="4">&nbsp;</td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <span>Unit Cost</span>\r\n          </td>\r\n          <td>\r\n\r\n          </td>\r\n          \x3c!--\r\n                <td>\r\n                  <span><input type="number" class="form-control" [(ngModel)]="part.unitCostPerUnit" (change)="calculate()" /></span>\r\n                </td>\r\n              --\x3e\r\n          <td><span>{{ part.unitCostPerUnit | twoDecimalGlobalNumberFormatPipe }}</span></td>\r\n          <td><span>{{ part.unitCostExtended | twoDecimalGlobalNumberFormatPipe }}</span></td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <span>Margin Amount</span>\r\n          </td>\r\n          <td>\r\n          </td>\r\n          \x3c!-- <td>\r\n                    <input type="number" class="form-control" [(ngModel)]="part.marginAmountPerUnit" (change)="calculate()" />\r\n                </td>\r\n              --\x3e\r\n          <td><span>{{ part.marginAmountPerUnit | twoDecimalGlobalNumberFormatPipe }}</span></td>\r\n          <td><span>{{ part.marginAmountExtended | twoDecimalGlobalNumberFormatPipe }}</span></td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <span>Margin (%)</span>\r\n          </td>\r\n          <td>\r\n          </td>\r\n          \x3c!--\r\n                <td>\r\n                  <select [(ngModel)]="part.marginPercentagePerUnit" (change)="calculate()">\r\n                      <option *ngFor="let p of percentage" [ngValue]="p.value">{{ p.label }}</option> \r\n                  </select>\r\n                </td>\r\n              --\x3e\r\n          <td><span>{{ part.marginPercentagePerUnit | twoDecimalGlobalNumberFormatPipe }} % </span></td>\r\n          <td><span>{{ part.marginPercentageExtended | twoDecimalGlobalNumberFormatPipe }} %</span></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n<div class="modal-footer">\r\n  <button type="submit" class="btn btn-primary" [disabled]="invalidQuantityenteredForQuantityFromThis == true"\r\n    (click)="onSave($event)">\r\n    Save\r\n  </button>\r\n  <button type="button" (click)="onClose($event)" class="btn btn-danger">\r\n    Close\r\n  </button>\r\n</div>'},jsXu:function(e,t,r){"use strict";r.r(t),t.default='\r\n\r\n    <div class="card" style="padding: 10px;">\r\n        <div class="col-md-12">\r\n            <h4 class="po-head-sm">\r\n              Communication - Email \r\n              <a href="#" data-toggle="modal" data-target="#addNewMemo" (click)="addMemo()" *ngIf="!isViewFromWO">\r\n              <i class="fa fa-plus-circle fa-lg"></i></a>\r\n            </h4>\r\n        </div>\r\n    </div>\r\n   <div>\r\n        <p-table #dt\r\n        class="rpo-table-cstm rro-table-cstm ptable-f10"\r\n        [value]="data"\r\n        [first]="0"\r\n        [rows]="pageSize"\r\n        [paginator]="true"\r\n        [pageLinks]="3"\r\n        [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n        [columns]="selectedColumns"\r\n        selectionMode="multiple"\r\n        [metaKeySelection]="true"\r\n        [lazy]="false"        \r\n        [resizableColumns]="true"\r\n        [reorderableColumns]="true"\r\n        [totalRecords]="totalRecords"\r\n        [scrollable]="true" scrollHeight="450px"> \x3c!--(onLazyLoad)="loadData($event)"--\x3e\r\n        <ng-template pTemplate="caption">\r\n            <div class="row">\r\n                <div class="col">\r\n                <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns"\r\n                [ngModelOptions]="{ standalone: true }" optionLabel="header" \r\n                selectedItemsLabel="{0} columns selected"\r\n                [style]="{ minWidth: \'200px\' }" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n            </div>\r\n            <div class="col">\r\n              <div\r\n                style="width: auto !important; float: right;"\r\n                class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n              >\r\n                    <i class="fa fa-search"></i>\r\n                    <input type="text" pInputText size="50"\r\n                     class="form-control"\r\n                        (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter"\r\n                        style="height: 28px !important;" />\r\n                    </div>\r\n                </div>\r\n              </div>\r\n              <div class="row">\r\n                <div class="col">\r\n                <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data" matTooltipPosition="above"\r\n                pButton icon="fa-download" iconPos="left" label="Export Data" (click)="dt.exportCSV()"\r\n                style="padding:5px 10px !important;"></button>\r\n                <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"\r\n                matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                (click)="dt.exportCSV({ selectionOnly: true })" style="padding:5px 10px !important;"></button>\r\n\r\n                \x3c!-- <div class="excel-upload excel-upload-cstm">\r\n                <button type="button" class="btn btn-primary" matTooltip="Download Sample File"\r\n                    matTooltipPosition="above" (click)="sampleExcelDownload()" style="padding: 5px 10px !important;">\r\n                    Sample File Download\r\n                </button>\r\n\r\n                <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)"\r\n                    class="uploaddoc upload-file" accept=".xlsx, .xls, .csv" />\r\n                <label for="upload">\r\n                    <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                    <i class="fa fa-upload"></i>\r\n                    </span>\r\n                </label>\r\n                </div> --\x3e\r\n                </div>\r\n            \r\n            </div>\r\n        \r\n        </ng-template>\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col *ngFor="let col of columns" style="width:130px">\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n                    <th style="width:auto"\r\n                        *ngFor="let col of columns"\r\n                        pResizableColumn\r\n                        pReorderableColumn\r\n                        [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                    </th>\r\n                    <th style="width:50px;position:sticky"\r\n                        *ngIf="selectedColumns.length > 0 && !isViewFromWO">\r\n                        Actions\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                        <input style="width:100%;" pInputText type="text" (input)="\r\n                            dt.filter($event.target.value, col.field, \'contains\')\r\n                        " />\r\n                    </th>\r\n                    <th style="width: 50px;" *ngIf="!isViewFromWO"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                    <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                        <td style="width:auto"\r\n                        *ngFor="let col of columns"\r\n                        class="ui-resizable-column"\r\n                        pReorderableRowHandle>\r\n                        {{rowData[col.field]}}\r\n                        </td>\r\n                        <td style="width:50px;position:sticky" class="ui-resizable-column" *ngIf="!isViewFromWO">\r\n                            \x3c!-- <button class="btn-edit ptable-wo-btns" mat-icon-button data-target="#addNewMemo" data-toggle="modal"\r\n                            (click)="editEmail(rowData)" matTooltip="Edit">\r\n                                <mat-icon>edit</mat-icon>\r\n                            </button> --\x3e\r\n                        <span data-toggle="modal" data-target="#viewEmail"><a class="btn nobg btn-view-cstm"\r\n                            (click)="emailView(rowData)" matTooltip="View" matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                        <span><a class="btn nobg btn-delete-cstm" (click)="data.splice(rowIndex, 1)" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n                             \x3c!-- <button class="btn btn-danger nobg" >\r\n                                <a href="#" data-toggle="modal" data-target="#viewEmail" (click)="emailView(rowData)">\r\n                            <i _ngcontent-c313="" class="fa fa-eye view_icon_adjust"></i></a>\r\n                        </button> --\x3e\r\n                            \x3c!-- <button class="btn btn-danger nobg" (click)="addList.splice(i, 1)">\r\n                                <i class="fa fa-trash"></i>\r\n                            </button> --\x3e\r\n                        </td>\r\n                    </tr>\r\n            </ng-template>\r\n            \x3c!-- <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer" class="footer">No\'of records:</label>\r\n                <input style="width: 5%;"\r\n                        [(ngModel)]="totalRecords"\r\n                        [disabled]="true"\r\n                        pInputText\r\n                        type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer" class="footer1">Pages Count:</label>\r\n                <input style="width: 5%;"\r\n                        [(ngModel)]="totalPages"\r\n                        [disabled]="true"\r\n                        pInputText\r\n                        type="text" />\r\n            </ng-template> --\x3e\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="data.length == 0">\r\n                <tr>\r\n                  <td colspan="5" style="color: red; font-weight: bold; text-align: center">\r\n                    No records found\r\n                  </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer">Total:</label>\r\n                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer">Pages Count:</label>    \r\n                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n              </ng-template>\r\n        </p-table>\r\n</div>\r\n\r\n\r\n<div id="addNewMemo" class="modal fade"\r\n role="dialog" data-backdrop="static">\r\n    \r\n        <div class="modal-dialog" style="margin-top:0%;">\r\n\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">Add Email</h4>\r\n                    <div class="col-md-12 shadow-box-cstm">\r\n                        <div class="col-md-6">\r\n                          <p class="fs12">\r\n                            <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                            </label>\r\n                            <span class="span-header-red" style="text-transform: capitalize">\r\n                                {{customerDetails.customerName}}\r\n                            </span>\r\n                          </p>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                          <p class="fs12">\r\n                            <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                            </label>\r\n                            <span class="span-header-red" style="text-transform: capitalize">\r\n                                {{customerDetails.customerCode}}\r\n                            </span>\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                </div>\r\n                <form #attachDocForm="ngForm" class="form-horizontal" ngNativeValidate>\r\n                <div class="modal-body">\r\n                    <div class="form-row">\r\n                    <div class="col-md-12">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group col-md-12">\r\n                                <label>Email Type <span class="clr-red">*</span></label>\r\n                                <select [(ngModel)]="emailType" class="form-control" name="emailType" required>\r\n                                    <option value="">Select</option>\r\n                                    <option *ngFor="let emailTy of emailTypes" [value]="emailTy.value">{{emailTy.label}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-12">Customer Contact <span class="clr-red">*</span></label>\r\n                                <p-autoComplete field="contactName"\r\n                                [(ngModel)]="customerContact" required\r\n                                name="cusContact" #cusContact="ngModel"\r\n                                errorMessage="Records not found" [forceSelection]="true"\r\n                                [dropdown]="true" [suggestions]="cusContactList"\r\n                                (completeMethod)="filterCustomerContact($event)"\r\n                                [size]="30" [minLength]="1"                                 (onSelect)="contactSelected($event)" \r\n                                class="p-autoComplete-ctsm">\r\n                                </p-autoComplete>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <label>BCC</label>\r\n                                <select [(ngModel)]="bcc" class="form-control" name="emailType">\r\n                                    <option value="">Select</option>\r\n                                    <option *ngFor="let custContact of customerContactCCList" [value]="custContact">{{custContact}}</option>\r\n                                </select>\r\n                            </div>        \r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group col-md-12">\r\n                                <label class="col-md-12">Contacted By <span class="clr-red">*</span></label>\r\n                                <p-autoComplete field="name"\r\n                                [(ngModel)]="contactBy" required\r\n                                name="employees" #employees="ngModel"\r\n                                errorMessage="Records not found" [forceSelection]="true"\r\n                                [dropdown]="true" [suggestions]="employeeList"\r\n                                (completeMethod)="filterEmployee($event)"\r\n                                [size]="30" [minLength]="1" [dropdown]="true"\r\n                                class="p-autoComplete-ctsm">\r\n                            </p-autoComplete>\r\n                            </div>\r\n                            <div class="form-group col-md-12">\r\n                                <label>Email To <span class="clr-red">*</span></label>\r\n                                \x3c!-- <div class="inner-addon right-addon inline-block"></div> --\x3e\r\n                                    <input class="form-control" id="email" name="email" (change)="onChangeToEmail()" [pattern]="emailPattern"\r\n                                                    #userEmail="ngModel" type="email" pKeyFilter="email" mask="email"\r\n                                                    [(ngModel)]="toEmail" required />\r\n                                    \x3c!-- <div *ngIf="userEmail.errors" [ngClass]="\'error\'">\r\n                                        <div *ngIf="userEmail.errors.pattern">\r\n                                            <span style="color:red">To Email not valid</span>\r\n                                        </div>\r\n                                    </div> --\x3e\r\n                                \x3c!-- </div> --\x3e\r\n                            </div>\r\n                            <div class="form-group col-md-12" style="margin-top:-7px">\r\n                                <label>CC</label>\r\n                                <select [(ngModel)]="cc" class="form-control" name="emailType">\r\n                                    <option value="">Select</option>\r\n                                    <option *ngFor="let custContact of customerContactCCList" [value]="custContact">{{custContact}}</option>\r\n                                </select>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                    </div>\r\n                       \r\n                        <div class="col-md-12 ">\r\n                            <div class="form-group">\r\n                                <label class="col-md-12">Email Subject <span class="clr-red">*</span></label>\r\n                                <input class="form-control" type="text" [(ngModel)]="subject" name="subject" rows="1" required>\r\n                            </div>\r\n                \r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <label>Email Body</label>\r\n                                    <p-editor class="p-editor-cstm" [(ngModel)]="emailBody" style="overflow-y: auto;;"\r\n                                     [style]="{\'height\':\'150px\'}" name="emailBody" required></p-editor>\r\n                                    \x3c!-- <textarea class="form-control" rows="50" [(ngModel)]="emailBody" name="emailBody" required></textarea> --\x3e\r\n                                </div>\r\n                          \r\n                            </div>\r\n                            <div class="col-md-12">\r\n                            <div class="form-group">\r\n                                <label style="float: none;width: auto;">Attachments:</label>\r\n                                <p-fileUpload\r\n                                #fileUploadInput\r\n                                name="fileupload[]"\r\n                                multiple="multiple"\r\n                                [showCancelButton]="false"\r\n                                [showUploadButton]="false"\r\n                                customUpload="true"\r\n                                (onSelect)="fileUpload($event)"\r\n                                (onRemove)="removeFile($event)"\r\n                                class="form-control col-md-12 fileupload"\r\n                                ></p-fileUpload>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div class="modal-footer" style="padding-top:0px; padding-bottom:0px;">\r\n                        <button type="submit" class="btn btn-primary btn-primary" (click)="send(attachDocForm.valid)"\r\n                            style="padding: 6px 12px !important;margin-top: 10px;" [disabled]="!attachDocForm.valid || checkValidEmails()">\r\n                            Send\r\n                        </button>\r\n                        <button type="button" class="btn btn-danger" data-dismiss="modal" style="padding: 6px 12px !important;margin-top: 10px;">Close</button>\r\n                    </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n\r\n        </div>\r\n   \r\n</div>\r\n\r\n\r\n\r\n<div id="viewEmail" class="modal fade"\r\n role="dialog" data-backdrop="static">\r\n    \r\n        <div class="modal-dialog modal-sm">\r\n\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content" *ngIf="isView==true">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title"> Email Details</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="col-sm-12">\r\n                        <p>\r\n                          <span class="label"><strong> Email Type: </strong></span><span class="value">{{\r\n                            emailViewData.emailType\r\n                          }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><strong> CC: </strong></span><span class="value">{{\r\n                                emailViewData.cc\r\n                            }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><strong> BCC: </strong></span><span class="value">{{\r\n                                emailViewData.bcc\r\n                            }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><strong>Subject: </strong></span><span class="value">{{\r\n                                emailViewData.subject\r\n                            }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><strong> Contacted By: </strong></span><span class="value">{{\r\n                                emailViewData.contactBy\r\n                            }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><strong> Contact Date: </strong></span><span class="value">{{\r\n                                emailViewData.contactDate\r\n                            }}</span>\r\n                        </p>\r\n                        \x3c!-- <hr> --\x3e\r\n                        <p>\r\n                            <span class="label" style="float: left;"><strong> Email Content: </strong></span>\r\n                            <span class="value"  [innerHTML]="emailViewData.emailBody"></span>\r\n                        </p>\r\n                    <div class="modal-footer" style="padding: 0px;">\r\n                        <button type="button" class="btn btn-danger" data-dismiss="modal" style="padding: 6px 12px !important;margin-top: 10px;">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n   \r\n</div>\r\n<ng-template #emailQuotePopup let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n      <button type="button" class="close" data-dismiss="modal" (click)="closeModal()">&times;</button>\r\n      <h4 class="modal-title">Confirmation</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n      <h6 class="text-center">\r\n        Are you sure you want to send this Quote to Customer?\r\n      </h6>\r\n      <a class="filelink btn btn-link"\r\n                        (click)="downloadFileUpload(pdfPath)" target="_blank"\r\n                        download>Preview Quote</a>\r\n      \x3c!-- <a href="{{pdfPath}}" class="btn btn-link" target="_blank" >Preview Quote</a> --\x3e\r\n    </div>\r\n    <div class="modal-footer">\r\n  \r\n      <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeModal()">No</button>\r\n      <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="triggerMailSalesQuote()">Yes</button>\r\n    </div>\r\n  </ng-template>'},kAn8:function(e,t,r){"use strict";r.r(t),t.default='\x3c!-- <p>Billing Under Implementation</p> --\x3e\r\n\r\n\r\n<div class="card">\r\n    <div class="card-body p-t-0">\r\n        <div class="row">\r\n            <div class="col-md-3" style="padding-left:25px; padding-top:5px">\r\n                <div class="form-group">\r\n                    <label>SO Num <span class="clr-red">*</span></label>\r\n                    <input type="text" class="form-control" name="salesOrderNumber"\r\n                        [(ngModel)]="salesOrder.salesOrderNumber" [disabled]="true" #accountTypeId="ngModel"\r\n                        id="salesOrderNumber" #salesOrderNumber="ngModel" />\r\n                </div>\r\n            </div>\r\n            <div class="col-md-3" style="padding-left:25px; padding-top:5px">\r\n                <div class="form-group">\r\n                    <label>SO Quote Num</label>\r\n                    <input type="text" class="form-control" [(ngModel)]="salesOrder.salesOrderQuoteNumber"\r\n                        name="salesOrderQuoteNumber" [disabled]="true" />\r\n                </div>\r\n            </div>\r\n            <div class="col-md-3" style="padding-left:25px; padding-top:5px">\r\n                <label></label>\r\n                <div class="form-group">\r\n                    <button type="submit" class="btn submit-btn btn btn-primary">Sales\r\n                        order</button>\r\n                </div>\r\n\r\n            </div>\r\n            <div class="col-md-3" style="padding-left:25px; padding-top:5px">\r\n                <label></label>\r\n                <div class="form-group">\r\n                    <button type="submit" class="btn  submit-btn btn btn-primary">Invoice</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <p-table #dt [value]="partsForBilling" class="rpo-table-cstm" [first]="0" [rows]="pageSize"\r\n            [paginator]="showPaginator" [pageLinks]="3" [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n            [columns]="selectedColumns" [lazy]="true" (onLazyLoad)="loadData($event)" [totalRecords]="totalRecords"\r\n            [scrollable]="true" [style]="{ width: \'100%\' }">\r\n            \x3c!-- <ng-template pTemplate="caption"> --\x3e\r\n            \x3c!-- <div class="row">\r\n                    <div class="col">\r\n                    </div>\r\n                </div> --\x3e\r\n            \x3c!-- </ng-template> --\x3e\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col *ngFor="let col of columns" [ngStyle]="{\'width\': col.width}" />\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n                    <th style="width:50px;">Ready?</th>\r\n                    <th *ngFor="let col of columns" [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                    </th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData let-rowIndex="rowIndex" let-columns="columns">\r\n                <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex" pReorderableRowHandle>\r\n                    <td style="width:50px; text-align: center;">\r\n                        <input type="checkbox" name="billing" [(ngModel)]="rowData.selected"\r\n                            [disabled]="!rowData.isApproved || rowData.isBilled" />\r\n                    </td>\r\n                    <td *ngFor="let col of columns">\r\n                        <span *ngIf="col.field == \'totalSales\'" class="float-right">\r\n                            {{convertDate(col.field , rowData) | twoDecimalGlobalNumberFormatPipe}}\r\n                        </span>\r\n                        <span *ngIf="col.field != \'totalSales\'">\r\n                            {{convertDate(col.field , rowData)}}\r\n                        </span>\r\n                    </td>\r\n                    <td style="text-align:center">\r\n                        <button type="submit" class="btn submit-btn btn btn-primary"\r\n                            (click)="onSelectPartNumber(rowData)" [disabled]="!rowData.selected">Invoice</button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="partsForBilling.length == 0">\r\n                <tr>\r\n                    <td [attr.colspan]="10" style="color: red; font-weight: bold; text-align: center">\r\n                        No records found\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer" class="footer">Total:</label>\r\n                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer" class="footer1">Pages Count:</label>\r\n\r\n                <input style="width: 5%;" [ngModel]="totalPages" [disabled]="true" pInputText type="text" />\r\n            </ng-template>\r\n        </p-table>\r\n        <form #billinForm="ngForm">\r\n            <div class="row">\r\n                <div class="col-md-5">\r\n                    <div class="card">\r\n                        <div class="card-body" *ngIf="billingorInvoiceForm">\r\n                            <div class="row">\r\n                                <div class="col-md-6">\r\n                                    <div class="form-group ">\r\n                                        <label> Invoice Type <span class="clr-red">*</span></label>\r\n                                        <p-dropdown [options]="invoiceTypeList" name="invoiceType"\r\n                                            #invoiceType="ngModel" placeholder="Select"\r\n                                            class="p-dropdown-custom-md-Header"\r\n                                            [(ngModel)]="billingorInvoiceForm.invoiceTypeId" [disabled]="isViewMode"\r\n                                            required>\r\n                                        </p-dropdown>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-6">\r\n                                    <div class="form-group ">\r\n                                        <label> REV Type </label>\r\n                                        <input type="number" class="form-control wo-input" name="revType"\r\n                                            #revType="ngModel" [(ngModel)]="billingorInvoiceForm.revType"\r\n                                            [disabled]="isViewMode" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="row">\r\n                                <div class="col-md-6">\r\n                                    <div class="form-group ">\r\n                                        <label> Invoice Number </label>\r\n                                        <input type="text" class="form-control wo-input" name="invoiceNumber"\r\n                                            #invoiceNumber="ngModel" [(ngModel)]="billingorInvoiceForm.invoiceNo"\r\n                                            [disabled]="isViewMode" />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-6">\r\n                                    <div class="form-group ">\r\n                                        <label> Customer Ref </label>\r\n                                        <input type="text" class="form-control wo-input" name="customerRef"\r\n                                            #customerRef="ngModel" disabled [(ngModel)]="salesOrder.customerRef"\r\n                                            [disabled]="isViewMode" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div class="row">\r\n                                <div class="col-md-6">\r\n                                    <div class="form-group ">\r\n                                        <label> Invoice Date <span class="clr-red">*</span></label>\r\n                                        <p-calendar [showIcon]="true" class="calender-cstm" name="invoiceDate"\r\n                                            #invoiceDate="ngModel" [(ngModel)]="billingorInvoiceForm.invoiceDate"\r\n                                            [disabled]="isViewMode" required></p-calendar>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-6">\r\n                                    <div class="form-group ">\r\n                                        <label> SO Open Date </label>\r\n                                        <p-calendar [showIcon]="true" class="calender-cstm" name="woOpenDate"\r\n                                            #woOpenDate="ngModel" [disabled]=true [(ngModel)]="salesOrder.openDate"\r\n                                            [disabled]="isViewMode">\r\n                                        </p-calendar>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="row">\r\n                                <div class="col-md-6">\r\n                                    <div class="form-group ">\r\n                                        <label> Time <span class="clr-red">*</span></label>\r\n                                        <p-calendar name="invoiceTime" class="billInvoiceTime" #invoiceTime="ngModel"\r\n                                            [timeOnly]="true" [(ngModel)]="billingorInvoiceForm.invoiceTime"\r\n                                            showTime="true" hourFormat="24" [disabled]="isViewMode" required>\r\n                                        </p-calendar>\r\n                                        \x3c!-- <p-calendar  [(ngModel)]="billingorInvoiceForm.invoiceTime" required [disabled]="isViewMode" showTime="true" hourFormat="24"></p-calendar> --\x3e\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-6">\r\n                                    <div class="form-group ">\r\n                                        <label> Sales Person </label>\r\n                                        <input type="text" class="form-control wo-input" name="salesPerson"\r\n                                            #salesPerson="ngModel" disabled\r\n                                            [(ngModel)]="salesOrder.salesPersonName.name" [disabled]="isViewMode" />\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="row">\r\n                                <div class="col-md-6">\r\n                                    <div class="form-group ">\r\n                                        <label> Print Date </label>\r\n                                        <p-calendar [showIcon]="true" class="calender-cstm" name="printDate"\r\n                                            #printDate="ngModel" [(ngModel)]="billingorInvoiceForm.printDate"\r\n                                            [disabled]="isViewMode"></p-calendar>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-6">\r\n                                    <div class="form-group">\r\n                                        <label for="credit" style="width: 100%;">Currency <span class="clr-red">*</span>\r\n                                        </label>\r\n                                        <p-dropdown [options]="currencyList" name="currency" #currency="ngModel"\r\n                                            required placeholder="Select" class="p-dropdown-custom-md-Header"\r\n                                            [(ngModel)]="billingorInvoiceForm.currencyId" [disabled]="isViewMode">\r\n                                        </p-dropdown>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="row">\r\n                                <div class="col-md-6">\r\n                                    <div class="form-group ">\r\n                                        <label> Ship Date </label>\r\n                                        <p-calendar [showIcon]="true" class="calender-cstm" name="shipDate"\r\n                                            #shipDate="ngModel" [(ngModel)]="billingorInvoiceForm.shipDate"\r\n                                            [disabled]="isViewMode"></p-calendar>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class="col-md-6">\r\n                                    <div class="form-group ">\r\n                                        <label> Available Credit</label>\r\n                                        <input type="number" class="form-control wo-input" name="salePerson"\r\n                                            #salePerson="ngModel" [(ngModel)]="billingorInvoiceForm.availableCredit"\r\n                                            [disabled]="isViewMode" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="row">\r\n                                <div class="col-md-6">\r\n                                    <div class="form-group ">\r\n                                        <label> No of Pieces </label>\r\n                                        <input type="number" class="form-control wo-input" name="noofPieces"\r\n                                            #noofPieces="ngModel" [(ngModel)]="billingorInvoiceForm.noofPieces"\r\n                                            [disabled]="isViewMode" />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-6">\r\n                                    <div class="form-group ">\r\n                                        <label>Credit Terms </label>\r\n                                        <input type="text" class="form-control wo-input" name="creditTerms"\r\n                                            #creditTerms="ngModel" disabled [(ngModel)]="salesOrder.creditLimit"\r\n                                            [disabled]="isViewMode" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="row">\r\n                                <div class="col-md-6">\r\n                                    <div class="form-group ">\r\n                                        <label for="employee">Employee </label>\r\n                                        <input type="text" class="form-control wo-input" name="employee"\r\n                                            #employee="ngModel" disabled [(ngModel)]="billingorInvoiceForm.employeeName"\r\n                                            [disabled]="isViewMode" />\r\n\r\n                                        \x3c!-- <p-autoComplete\r\n                                          field="label"\r\n                                          [(ngModel)]="billingorInvoiceForm.employeeId"\r\n                                          name="employees"\r\n                                          #employees="ngModel"\r\n                                          errorMessage="Records not found"\r\n                                          [forceSelection]="true"\r\n                                          [dropdown]="true"\r\n                                          [suggestions]="employeeList"\r\n                                          (completeMethod)="filterEmployee($event)"\r\n                                          [size]="30"\r\n                                          [minLength]="1"\r\n                                          [dropdown]="true"\r\n                                          class="p-autoComplete-ctsm"\r\n                                        >\r\n                                        </p-autoComplete> --\x3e\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-6">\r\n                                    <div class="form-group ">\r\n                                        <label>Stage Code </label>\r\n                                        <input type="number" class="form-control wo-input" name="gateStatus"\r\n                                            #gateStatus="ngModel" [(ngModel)]="billingorInvoiceForm.gateStatus"\r\n                                            [disabled]="isViewMode" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-7">\r\n                    <div class="card" *ngIf="billingorInvoiceForm">\r\n                        <div class="card-body">\r\n                            <div class="row">\r\n\r\n                                <div class="col-md-4">\r\n                                    <h5 class="po-heading">Sold To</h5>\r\n                                    <div class="form-group ">\r\n                                        <label>Customer\r\n                                        </label><span class="clr-red">*</span>\r\n                                        <p-autoComplete field="customerName"\r\n                                            [(ngModel)]="billingorInvoiceForm.soldToCustomerId" name="soldcustomerName"\r\n                                            errorMessage="Records not found" [forceSelection]="true"\r\n                                            (onSelect)="getSiteNamesBySoldCustomerId($event)"\r\n                                            [suggestions]="customerNamesList"\r\n                                            (completeMethod)="filterCustomerName($event)"\r\n                                            (onKeyUp)="clearAddress(\'SoldTo\' , $event.target.value)" [size]="30"\r\n                                            [minLength]="1" #customerName="ngModel" required [dropdown]="true"\r\n                                            class="p-autoComplete-ctsm" [disabled]="isViewMode">\r\n                                        </p-autoComplete>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <h5 class="po-heading">Bill To</h5>\r\n                                    <div class="form-group ">\r\n                                        <label>Customer\r\n                                        </label><span class="clr-red">*</span>\r\n                                        <p-autoComplete field="customerName"\r\n                                            [(ngModel)]="billingorInvoiceForm.billToCustomerId" name="billcustomerName"\r\n                                            errorMessage="Records not found" [forceSelection]="true"\r\n                                            (onSelect)="getSiteNamesByBillCustomerId($event)"\r\n                                            [suggestions]="customerNamesList"\r\n                                            (completeMethod)="filterCustomerName($event)"\r\n                                            (onKeyUp)="clearAddress(\'BillTo\' , $event.target.value)" [size]="30"\r\n                                            [minLength]="1" #customerName="ngModel" required [dropdown]="true"\r\n                                            class="p-autoComplete-ctsm" [disabled]="isViewMode">\r\n                                        </p-autoComplete>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <h5 class="po-heading">Ship To</h5>\r\n                                    <div class="form-group ">\r\n                                        <label>Customer\r\n                                        </label><span class="clr-red">*</span>\r\n                                        <p-autoComplete field="customerName"\r\n                                            [(ngModel)]="billingorInvoiceForm.shipToCustomerId" name="shipcustomerName"\r\n                                            errorMessage="Records not found" [forceSelection]="true"\r\n                                            (onSelect)="getSiteNamesByShipCustomerId($event)"\r\n                                            [suggestions]="customerNamesList"\r\n                                            (completeMethod)="filterCustomerName($event)"\r\n                                            (onKeyUp)="clearAddress(\'ShipTo\', $event.target.value)" [size]="30"\r\n                                            [minLength]="1" #customerName="ngModel" required [dropdown]="true"\r\n                                            class="p-autoComplete-ctsm" [disabled]="isViewMode">\r\n                                        </p-autoComplete>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="row">\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group">\r\n                                        <label for="credit">Site Name</label><span class="clr-red">*</span>\r\n                                        <p-dropdown placeholder="Select Site Name" name="scope" #scope="ngModel"\r\n                                            [options]="soldCustomerSiteList" class="p-dropdown-custom-md-Header"\r\n                                            (onChange)="changeOfSoldSiteName($event.value)"\r\n                                            [(ngModel)]="billingorInvoiceForm.soldToSiteId" [disabled]="isViewMode"\r\n                                            required>\r\n                                        </p-dropdown>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group">\r\n                                        <label for="credit">Site Name</label><span class="clr-red">*</span>\r\n                                        <p-dropdown placeholder="Select Site Name" name="scope1bill"\r\n                                            #scope1bill="ngModel" [options]="billCustomerSiteList"\r\n                                            class="p-dropdown-custom-md-Header"\r\n                                            (onChange)="changeOfBillSiteName($event.value)"\r\n                                            [(ngModel)]="billingorInvoiceForm.billToSiteId" [disabled]="isViewMode"\r\n                                            required>\r\n                                        </p-dropdown>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group">\r\n                                        <label for="credit">Site Name</label><span class="clr-red">*</span>\r\n                                        <p-dropdown placeholder="Select Site Name" name="scope1" #scope1="ngModel"\r\n                                            [options]="shipCustomerSiteList" class="p-dropdown-custom-md-Header"\r\n                                            (onChange)="changeOfShipSiteName($event.value)"\r\n                                            [(ngModel)]="billingorInvoiceForm.shipToSiteId" [disabled]="isViewMode"\r\n                                            required>\r\n                                        </p-dropdown>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="row">\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>Address 1 </label>\r\n                                        <input type="text" class="form-control wo-input" name="soldAddress1"\r\n                                            #soldAddress1="ngModel" [(ngModel)]="soldCustomerAddress.line1" disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>Address 1 </label>\r\n                                        <input type="text" class="form-control wo-input" name="billAddress1"\r\n                                            #billAddress1="ngModel" [(ngModel)]="billCustomerAddress.line1" disabled />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>Address 1 </label>\r\n                                        <input type="text" class="form-control wo-input" name="shipAddress1"\r\n                                            #shipAddress1="ngModel" [(ngModel)]="shipCustomerAddress.line1" disabled />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="row">\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>Address 2 </label>\r\n                                        <input type="text" class="form-control wo-input" name="soldAddress2"\r\n                                            #soldAddress1="ngModel" [(ngModel)]="soldCustomerAddress.line2" disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>Address 2 </label>\r\n                                        <input type="text" class="form-control wo-input" name="billAddress2"\r\n                                            #billAddress2="ngModel" [(ngModel)]="billCustomerAddress.line2" disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>Address 2 </label>\r\n                                        <input type="text" class="form-control wo-input" name="shipAddress2"\r\n                                            #shipAddress1="ngModel" [(ngModel)]="shipCustomerAddress.line2" disabled />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="row">\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>City </label>\r\n                                        <input type="text" class="form-control wo-input" name="soldCity"\r\n                                            #soldCity="ngModel" [(ngModel)]="soldCustomerAddress.city" disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>City </label>\r\n                                        <input type="text" class="form-control wo-input" name="billCity"\r\n                                            #billCity="ngModel" [(ngModel)]="billCustomerAddress.city" disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>City </label>\r\n                                        <input type="text" class="form-control wo-input" name="shipCity"\r\n                                            #shipCity="ngModel" [(ngModel)]="shipCustomerAddress.city" disabled />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="row">\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>StateOrProvince </label>\r\n                                        <input type="text" class="form-control wo-input" name="soldstateOrProvince"\r\n                                            #soldstateOrProvince="ngModel"\r\n                                            [(ngModel)]="soldCustomerAddress.stateOrProvince" disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>StateOrProvince </label>\r\n                                        <input type="text" class="form-control wo-input" name="billstateOrProvince"\r\n                                            #billstateOrProvince="ngModel"\r\n                                            [(ngModel)]="billCustomerAddress.stateOrProvince" disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>StateOrProvince </label>\r\n                                        <input type="text" class="form-control wo-input" name="stateOrProvince"\r\n                                            #shipstateOrProvince="ngModel"\r\n                                            [(ngModel)]="shipCustomerAddress.stateOrProvince" disabled />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="row">\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>Postal Code </label>\r\n                                        <input type="number" class="form-control wo-input" name="soldpostalCode"\r\n                                            #soldpostalCode="ngModel" [(ngModel)]="soldCustomerAddress.postalCode"\r\n                                            disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>Postal Code </label>\r\n                                        <input type="number" class="form-control wo-input" name="billpostalCode"\r\n                                            #billpostalCode="ngModel" [(ngModel)]="billCustomerAddress.postalCode"\r\n                                            disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>Postal Code </label>\r\n                                        <input type="number" class="form-control wo-input" name="shippostalCode"\r\n                                            #shippostalCode="ngModel" [(ngModel)]="shipCustomerAddress.postalCode"\r\n                                            disabled />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="row">\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>Country </label>\r\n                                        <input type="text" class="form-control wo-input" name="soldcountry"\r\n                                            #soldcountry="ngModel" [(ngModel)]="soldCustomerAddress.country" disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>Country </label>\r\n                                        <input type="text" class="form-control wo-input" name="billcountry"\r\n                                            #billcountry="ngModel" [(ngModel)]="billCustomerAddress.country" disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>Country </label>\r\n                                        <input type="text" class="form-control wo-input" name="shipcountry"\r\n                                            #shipcountry="ngModel" [(ngModel)]="shipCustomerAddress.country" disabled />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="row">\r\n                                <div class="col-md-4">\r\n\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>Attention </label>\r\n                                        <input type="text" class="form-control wo-input" name="billToAttention"\r\n                                            #billToAttention="ngModel"\r\n                                            [(ngModel)]="billingorInvoiceForm.shipToAttention"\r\n                                            [disabled]="isViewMode" />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-4">\r\n                                    <div class="form-group ">\r\n                                        <label>Attention </label>\r\n                                        <input type="text" class="form-control wo-input" name="shipToAttention"\r\n                                            #shipToAttention="ngModel"\r\n                                            [(ngModel)]="billingorInvoiceForm.shipToAttention"\r\n                                            [disabled]="isViewMode" />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="row" style="margin-top: 15px;" *ngIf="billingorInvoiceForm">\r\n                \x3c!-- <div class="col-md-7">\r\n                    <div class="card">\r\n\r\n                        <div class="card-body p-10">\r\n                            <div>\r\n                                <div class="col-md-12">\r\n                                    <div class="col-md-7">\r\n                                        <div class="form-group" style="margin-left: -8px;">\r\n                                            <p-radioButton class="p-radiobutton-label-horizontal"\r\n                                                name="HoursorClockorScan" label="Cost Plus" value="Cost Plus"\r\n                                                [(ngModel)]="billingorInvoiceForm.costPlusType" [disabled]="isViewMode">\r\n                                            </p-radioButton>\r\n                                            <p-radioButton class="p-radiobutton-label-horizontal col-width"\r\n                                                name="HoursorClockorScan" value="Flat Rate" label="Flat Rate"\r\n                                                [(ngModel)]="billingorInvoiceForm.costPlusType" [disabled]="isViewMode">\r\n                                            </p-radioButton>\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-5"\r\n                                        style="border-style: groove; border-radius: 10px; margin-top: 7px;padding: 2px 5px;">\r\n                                        <h4 style="color : #295d92; float: left; margin: 0;"> Grand Total: </h4>\r\n                                        <span\r\n                                            style="color: red; float: right;">{{billingorInvoiceForm.grandTotal}}</span>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <h5 class="po-heading">{{billingorInvoiceForm.costPlusType}} Information </h5>\r\n\r\n                            <table class="table table-bordered ">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th>Total Cost</th>\r\n                                        <th *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'">MarkUp</th>\r\n                                        <th>Cost Plus Amount</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div class="form-group">\r\n                                                <p-checkbox class="p-checkbox-label-2" name="totalworkOrder"\r\n                                                    binary="false" label="Total Sales Order"\r\n                                                    (onChange)="resetOtherOptions(); calculateGrandTotal();"\r\n                                                    [(ngModel)]="billingorInvoiceForm.totalWorkOrder"\r\n                                                    [disabled]="isViewMode"></p-checkbox>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td class="text-right">\r\n                                            {{billingorInvoiceForm.totalWorkOrderCost}}\r\n                                        </td>\r\n                                        <td *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'">\r\n                                            <div class="form-group" *ngIf="billingorInvoiceForm.totalWorkOrder">\r\n                                                <p-dropdown placeholder="Select " name="totalWOMarkup"\r\n                                                    #totalWOMarkup="ngModel" [options]="markUpList"\r\n                                                    class="p-dropdown-custom-md"\r\n                                                    (onChange)="calculateTotalWorkOrderCostPlus($event.value); calculateGrandTotal();"\r\n                                                    [(ngModel)]="billingorInvoiceForm.totalWorkOrderValue"\r\n                                                    [disabled]="isViewMode">\r\n                                                </p-dropdown>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        <td class="text-right"\r\n                                            *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'">\r\n                                            {{billingorInvoiceForm.totalWorkOrderCostPlus }}\r\n                                        </td>\r\n                                        <td *ngIf="billingorInvoiceForm.costPlusType !== \'Cost Plus\'">\r\n                                            <input type="number" name="totalWorkOrderCostPlus"\r\n                                                (change)="onChangeSOCostPlus();" class="form-control wo-input"\r\n                                                [(ngModel)]="billingorInvoiceForm.totalWorkOrderCostPlus "\r\n                                                [disabled]="isViewMode" />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div class="form-group">\r\n                                                <p-checkbox (onChange)="resetMaterial(); calculateGrandTotal();"\r\n                                                    class="p-checkbox-label-2" name="material" binary="false"\r\n                                                    label="Material" [(ngModel)]="billingorInvoiceForm.material"\r\n                                                    [disabled]="billingorInvoiceForm.totalWorkOrder || isViewMode">\r\n                                                </p-checkbox>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td class="text-right">\r\n                                            {{billingorInvoiceForm.materialCost}}\r\n                                        </td>\r\n                                        <td *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'">\r\n                                            <div class="form-group" *ngIf="billingorInvoiceForm.material">\r\n                                                <p-dropdown placeholder="Select " name="materialValue"\r\n                                                    #materialValue="ngModel" [options]="markUpList"\r\n                                                    class="p-dropdown-custom-md"\r\n                                                    (onChange)="calculateMaterialCostPlus($event.value); calculateGrandTotal();"\r\n                                                    [(ngModel)]="billingorInvoiceForm.materialValue"\r\n                                                    [disabled]="isViewMode">\r\n                                                </p-dropdown>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td class="text-right"\r\n                                            *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'">\r\n                                            {{billingorInvoiceForm.materialCostPlus  }}\r\n                                        </td>\r\n                                        <td\r\n                                            *ngIf="billingorInvoiceForm.costPlusType !== \'Cost Plus\' && !billingorInvoiceForm.totalWorkOrder">\r\n                                            <input type="number" name="materialCostPlus"\r\n                                                (change)="onChangeMaterialCostPlus(); calculateGrandTotal();"\r\n                                                class="form-control wo-input"\r\n                                                [(ngModel)]="billingorInvoiceForm.materialCostPlus"\r\n                                                [disabled]="isViewMode" />\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div class="form-group">\r\n                                                <p-checkbox class="p-checkbox-label-2" name="laborOverHead"\r\n                                                    binary="false" label="Labor & Over Head"\r\n                                                    (onChange)="resetLaborOverHead();  calculateGrandTotal();"\r\n                                                    [(ngModel)]="billingorInvoiceForm.laborOverHead"\r\n                                                    [disabled]="billingorInvoiceForm.totalWorkOrder || isViewMode">\r\n                                                </p-checkbox>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td class="text-right">\r\n                                            {{billingorInvoiceForm.laborOverHeadCost}}\r\n                                        </td>\r\n\r\n                                        <td *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'">\r\n                                            <div class="form-group" *ngIf="billingorInvoiceForm.laborOverHead">\r\n                                                <p-dropdown placeholder="Select " name="head" #head="ngModel"\r\n                                                    [options]="markUpList" class="p-dropdown-custom-md"\r\n                                                    (onChange)="calculateLaborOverHeadCostPlus($event.value);  calculateGrandTotal();"\r\n                                                    [(ngModel)]="billingorInvoiceForm.laborOverHeadValue"\r\n                                                    [disabled]="isViewMode">\r\n                                                </p-dropdown>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td class="text-right"\r\n                                            *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'">\r\n                                            {{billingorInvoiceForm.laborOverHeadCostPlus   }}\r\n                                        </td>\r\n                                        <td\r\n                                            *ngIf="billingorInvoiceForm.costPlusType !== \'Cost Plus\' && !billingorInvoiceForm.totalWorkOrder">\r\n                                            <input type="number" name="laborOverHeadCostPlus"\r\n                                                (change)="onChangeLaborOHCostPlus(); calculateGrandTotal();"\r\n                                                class="form-control wo-input"\r\n                                                [(ngModel)]="billingorInvoiceForm.laborOverHeadCostPlus"\r\n                                                [disabled]="isViewMode" />\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div class="form-group">\r\n                                                <p-checkbox class="p-checkbox-label-2"\r\n                                                    (onChange)="resetMisCharges(); calculateGrandTotal();"\r\n                                                    name="miscCharges" binary="false" label="Misc Chargers"\r\n                                                    [(ngModel)]="billingorInvoiceForm.miscCharges"\r\n                                                    [disabled]="billingorInvoiceForm.totalWorkOrder || isViewMode">\r\n                                                </p-checkbox>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td class="text-right">\r\n                                            {{billingorInvoiceForm.miscChargesCost}}\r\n                                        </td>\r\n                                        <td *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'">\r\n                                            <div class="form-group" *ngIf="billingorInvoiceForm.miscCharges">\r\n                                                <p-dropdown placeholder="Select " name="misc" #misc="ngModel"\r\n                                                    [options]="markUpList" class="p-dropdown-custom-md"\r\n                                                    (onChange)="calculateMiscChargesCostPlus($event.value); calculateGrandTotal();"\r\n                                                    [(ngModel)]="billingorInvoiceForm.miscChargesValue"\r\n                                                    [disabled]="isViewMode">\r\n                                                </p-dropdown>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td class="text-right"\r\n                                            *ngIf="billingorInvoiceForm.costPlusType === \'Cost Plus\'">\r\n                                            {{billingorInvoiceForm.miscChargesCostPlus}}\r\n                                        </td>\r\n                                        <td\r\n                                            *ngIf="billingorInvoiceForm.costPlusType !== \'Cost Plus\' && !billingorInvoiceForm.totalWorkOrder">\r\n                                            <input type="number" name="miscChargesCostPlus"\r\n                                                (change)="onChangeMiscChCostPlus(); calculateGrandTotal();"\r\n                                                class="form-control wo-input"\r\n                                                [(ngModel)]="billingorInvoiceForm.miscChargesCostPlus"\r\n                                                [disabled]="isViewMode" />\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div> --\x3e\r\n                <div class="">\r\n                    <div class="card">\r\n                        <div class="card-body">\r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <p-checkbox class="p-checkbox-label-2" name="proForma" binary="false"\r\n                                        label="PRO FOR MA" [(ngModel)]="billingorInvoiceForm.isProForma"\r\n                                        [disabled]="isViewMode"></p-checkbox>\r\n                                </div>\r\n                                \x3c!-- <div class="form-group">\r\n                                    <p-checkbox class="p-checkbox-label-2" name="partialInvoice" binary="false"\r\n                                        label="Partial Invoice" [(ngModel)]="billingorInvoiceForm.partialInvoice"\r\n                                        [disabled]="isViewMode"></p-checkbox>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <p-checkbox class="p-checkbox-label-2" name="costPlusRateCombo" binary="false"\r\n                                        label="CostPlus & Flate RateCombo"\r\n                                        [(ngModel)]="billingorInvoiceForm.costPlusRateCombo" [disabled]="isViewMode">\r\n                                    </p-checkbox>\r\n                                </div> --\x3e\r\n                                \x3c!-- <div class="row">\r\n                                    <div class="col-md-5">\r\n                                        <div class="form-group">\r\n                                            <label for="credit" style="width: 100%;">Ship Via\r\n                                            </label>\r\n                                            <p-dropdown placeholder="Select Site Name" name="shipVia" #shipVia="ngModel"\r\n                                                [options]="shipViaList" class="p-dropdown-custom-md-Header"\r\n                                                [(ngModel)]="billingorInvoiceForm.shipViaId"\r\n                                                (onChange)="changeOfShipVia($event.value)" [disabled]="isViewMode">\r\n                                            </p-dropdown>\r\n                                        </div>\r\n                                        <div class="form-group ">\r\n                                            <label>Ship Account</label>\r\n                                            <input type="text" class="form-control wo-input" name="shipAccount"\r\n                                                #shipAccount="ngModel" disable\r\n                                                [(ngModel)]="billingorInvoiceForm.shipAccountInfo"\r\n                                                [disabled]="isViewMode" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-5 col-offset-1">\r\n                                        <div class="form-group ">\r\n                                            <label>Way Bill REF</label>\r\n                                            <input type="text" class="form-control wo-input" name="wayBillRef"\r\n                                                #wayBillRef="ngModel" [(ngModel)]="billingorInvoiceForm.wayBillRef"\r\n                                                [disabled]="isViewMode" />\r\n                                        </div>\r\n                                        <div class="form-group ">\r\n                                            <label>Tracking #</label>\r\n                                            <input type="text" class="form-control wo-input" name="tracking"\r\n                                                #tracking="ngModel" [(ngModel)]="billingorInvoiceForm.tracking"\r\n                                                [disabled]="isViewMode" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div> --\x3e\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style="float: right;" *ngIf="!isViewMode">\r\n                \x3c!-- [disabled]="!billinForm.valid" --\x3e\r\n                <button class="btn btn-primary pull-right" *ngIf="!isEditBilling"\r\n                    (click)="saveSalesOrderBilling()">Save</button>\r\n                <button class="btn btn-primary pull-right" *ngIf="isEditBilling"\r\n                    (click)="updateWorkOrderBilling()">Update</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},kNxy:function(e,t,r){"use strict";r.r(t),t.default='<div class="row">\r\n    <div style="overflow-y: auto;">\r\n        <p-table #dt class="rpo-table-cstm salesquotePart" [value]="parts" [rows]="10" [lazy]="true"\r\n            [paginator]="showPaginator" [rowsPerPageOptions]="[10, 20, 30]" [totalRecords]="totalRecords"\r\n            [pageLinks]="pageLinks" [columns]="columns" [scrollable]="true" [resizableColumns]="true"\r\n            [reorderableColumns]="true" scrollHeight="450px" [style]="{ width: \'100%\' }"\r\n            (onLazyLoad)="onPaging($event)">\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col *ngFor="let col of columns" [ngStyle]="{\'width\': col.width, \'text-align\': col.textalign}" />\r\n                    <col style="width:80px" />\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n                    <th style="background-color: #4298ff !important;\r\n                    color: #fff !important;"></th>\r\n                    <th style="text-align: left !important; background-color: #4298ff !important;\r\n                    color: #fff !important;" *ngFor="let col of columns" pResizableColumn pReorderableColumn>\r\n                        <span *ngIf="col.field == \'conditionDescription\' || col.field == \'qtyToOrder\'">\r\n                            {{ col.header }}<span class="clr-red">*</span>\r\n                        </span>\r\n                        <span *ngIf="col.field != \'conditionDescription\' && col.field != \'qtyToOrder\'">\r\n                            {{ col.header }}\r\n                        </span>\r\n                    </th>\r\n                    \x3c!-- <th style="width:80px;">Actions</th> --\x3e\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-part let-columns="columns" let-rowIndex="rowIndex">\r\n                <tr [ngClass]="{\'row-bg1\':part.alternateFor.length==0}" pReorderableRowHandle>\r\n                    <td>\r\n                        <a class="expand-row" *ngIf="!hideme[rowIndex]" (click)="viewSelectedRow(part,rowIndex)">\r\n                            <i class="fa fa-plus btn btn-success btn-cstm btn-xs" matTooltip="Show stock line details"\r\n                                style="padding: 3px 8px !important;"></i>\r\n                        </a>\r\n                        <a class="expand-row" *ngIf="hideme[rowIndex]" (click)="hideStockline(rowIndex)">\r\n                            <i class="fa fa-minus btn-danger btn-cstm btn-xs" matTooltip="Hide stock line details"\r\n                                style="padding: 3px 8px !important;"></i>\r\n                        </a>\r\n                    </td>\r\n                    <td *ngFor="let col of columns" pReorderableRowHandle>\r\n                        <span *ngIf="col.field == \'select\'">\r\n                            \x3c!-- <span *ngIf="!getCheckBoxDisplay(part, rowIndex,false)">\r\n                                <input type="checkbox" (change)="onChange($event, part)" />\r\n                            </span> --\x3e\r\n                            <input type="checkbox" (change)="onChange($event, part)" [disabled]="isStockLineViewMode" />\r\n                        </span>\r\n                        <span *ngIf="col.field == \'partNumber\'">\r\n                            {{part.partNumber}}\r\n                            <span class="alternate-part-label" *ngIf="part.mappingType==1">(Alt)</span>\r\n                            <span class="alternate-part-label" *ngIf="part.mappingType==2">(Eq)</span>\r\n                        </span>\r\n                        <span *ngIf="col.field == \'itemClassification\'">\r\n                            {{part.itemClassification !== null? part.itemClassification: ""}}\r\n                        </span>\r\n                        <span\r\n                            *ngIf="col.field != \'qtyToOrder\' && col.field != \'qtyAvailable\' && col.field != \'qtyOnHand\' && col.field != \'unitListPrice\' && col.field != \'unitCost\' && col.field != \'partNumber\'&& col.field != \'selected\'&&col.field != \'itemClassification\'&& col.field != \'glAccount\'">{{part[col.field] }}</span>\r\n                        <span *ngIf="col.field == \'unitCost\'" class="float-right">\r\n                            {{ part.unitCost | twoDecimalGlobalNumberFormatPipe }}\r\n                        </span>\r\n                        <span *ngIf="col.field == \'qtyOnHand\'" class="float-right">\r\n                            {{ part.qtyOnHand | globalNmberFormat}}\r\n                        </span>\r\n                        <span *ngIf="col.field == \'qtyToOrder\'" class="float-right">\r\n                            {{ part.qtyToOrder | globalNmberFormat}}\r\n                        </span>\r\n                        <span *ngIf="col.field == \'qtyAvailable\'" class="float-right">\r\n                            {{ part.qtyAvailable | globalNmberFormat }}\r\n                            \x3c!-- <span class="\r\n                            alternate-part-label"\r\n                                *ngIf="part.qtyRemainedToQuote != part.qtyAvailable">({{part.qtyRemainedToQuote}})\r\n                            </span> --\x3e\r\n                        </span>\r\n                    </td>\r\n                    \x3c!-- <td style="width:80px; text-align:center"> --\x3e\r\n                    \x3c!-- <span> --\x3e\r\n                    \x3c!-- <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                (click)="viewSelectedRow(part, itemMasterViewTemplate)" matTooltip="View">\r\n                                <i class="fa fa-list"></i>\r\n                            </a> --\x3e\r\n                    \x3c!-- <span data-toggle="modal" data-target="#stockAudit"><a class="btn nobg btn-hist-cstm"\r\n                                    (click)="openStocklineAudit(part)" matTooltip="History"\r\n                                    matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                    \x3c!-- <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                (click)="viewStockLineHistory(part)" matTooltip="History">\r\n                                <i class="fa fa-history"></i>\r\n                            </a> --\x3e\r\n                    \x3c!-- </span> --\x3e\r\n                    \x3c!-- </td> --\x3e\r\n\r\n                </tr>\r\n                <tr [hidden]="!hideme[rowIndex]" class="sub-table no-bg">\r\n\r\n                    <td style="text-align: center;"> </td>\r\n                    \x3c!-- *ngIf="!isStockLineViewMode" --\x3e\r\n\r\n                    <td colspan="12" class="p-0">\r\n                        \x3c!-- rpo-table-cstm rro-table-cstm sales-quote-part-search-data --\x3e\r\n                        <p-table #dt class=" rpo-table-cstm1 rro-table-cstm salesquotePart "\r\n                            [value]="roleUpMaterialList" [rows]="10" [lazy]="true" [paginator]="showPaginator"\r\n                            [rowsPerPageOptions]="[10, 20, 30]" [totalRecords]="totalRecords" [pageLinks]="pageLinks"\r\n                            [columns]="stockLinecolumns" [scrollable]="true" [resizableColumns]="true"\r\n                            [reorderableColumns]="true" scrollHeight="450px" [style]="{ width: \'100%\' }"\r\n                            (onLazyLoad)="onPaging($event)">\r\n                            <ng-template pTemplate="colgroup" let-stockLinecolumns>\r\n                                <colgroup>\r\n                                    <col *ngFor="let col of stockLinecolumns"\r\n                                        [ngStyle]="{\'width\': col.width, \'text-align\': col.textalign}" />\r\n                                    <col style="width:80px" />\r\n                                </colgroup>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-stockLinecolumns>\r\n                <tr>\r\n                    \x3c!-- <th></th> --\x3e\r\n                    <th style="text-align: left !important;" *ngFor="let col of stockLinecolumns" pResizableColumn\r\n                        pReorderableColumn>\r\n\r\n                        <span *ngIf="col.field == \'stockLineNumber\' ||\r\n                                            col.field == \'controlNumber\' || \r\n                                            col.field == \'idNumber\' || \r\n                                            col.field == \'stockType\' || \r\n                                            col.field == \'partNumber\' || \r\n                                            col.field == \'description\' || \r\n                                            col.field == \'qtyAvailable\' || \r\n                                            col.field == \'qtyOnHand\' || \r\n                                            col.field == \'mfg\' || \r\n                                            col.field == \'unitCost\'">\r\n                            {{ col.header }}<span class="clr-red">*</span>\r\n                        </span>\r\n                        <span *ngIf="col.field != \'stockLineNumber\' &&\r\n                                            col.field != \'controlNumber\' && \r\n                                            col.field != \'idNumber\' && \r\n                                            col.field != \'stockType\' && \r\n                                            col.field != \'partNumber\' &&\r\n                                            col.field != \'description\' && \r\n                                            col.field != \'qtyAvailable\' && \r\n                                            col.field != \'qtyOnHand\' && \r\n                                            col.field != \'mfg\' && \r\n                                            col.field != \'unitCost\'">\r\n                            {{ col.header }}\r\n                        </span>\r\n\r\n                    </th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate="body" let-part let-rowIndex="rowIndex" let-columns="stockLinecolumns">\r\n\r\n                <tr>\r\n                    \x3c!-- <td>\r\n                                        <input type="checkbox" [disabled]="getCheckBoxDisplay(part, rowIndex)"\r\n                                            (change)="onChangeStock($event, part)" />\r\n                                    </td> --\x3e\r\n                    \x3c!-- <td *ngIf="getCheckBoxDisplay(part, rowIndex)">&nbsp;</td> --\x3e\r\n                    <td *ngFor="let col of stockLinecolumns" pReorderableRowHandle>\r\n                        <span *ngIf="col.field == \'selected\'">\r\n                            <span *ngIf="!getCheckBoxDisplay(part, rowIndex,true)">\r\n                                <input type="checkbox" (change)="onChangeStock($event, part, 0)"\r\n                                    [disabled]="isStockLineViewMode" />\r\n                            </span>\r\n\r\n                        </span>\r\n\r\n                        <span class="float-left" *ngIf=" col.field==\'partNumber\'">{{ part.partNumber }}\r\n                            <span class=" alternate-part-label" *ngIf="part.mappingType==1">(Alt)</span>\r\n                            <span class="alternate-part-label" *ngIf="part.mappingType==2">(Eq)</span>\r\n                        </span>\r\n\r\n                        <span *ngIf="col.field == \'itemClassification\'" class="float-left">\r\n                            {{\r\n                                    part.itemClassification !== null\r\n                                        ? part.itemClassification\r\n                                        : ""\r\n                                                }}\r\n                        </span>\r\n\r\n                        <span class="float-left"\r\n                            *ngIf="col.field != \'certifiedDate\' &&\r\n                             col.field != \'tagDate\' && col.field != \'memo\' &&\r\n                             col.field != \'unitCost\' && col.field != \'qtyOnHand\' && col.field != \'qtyAvailable\' && col.field != \'partNumber\' && col.field != \'selected\' && col.field != \'itemClassification\'">{{part[col.field] }}</span>\r\n                        <span *ngIf="col.field == \'tagDate\'" class="float-left">\r\n                            {{\r\n                                    part.tagDate | date: "MM/dd/yyyy"\r\n                                                }}\r\n                        </span>\r\n                        <span *ngIf="col.field == \'qtyAvailable\'" class="float-right">\r\n                            {{\r\n                                    part.qtyAvailable | globalNmberFormat\r\n                                                }}\r\n                            <span matTooltip="Qty Available" matTooltipPosition="above" class="\r\n                                            alternate-part-label"\r\n                                *ngIf="part.qtyRemainedToQuote != part.qtyAvailable">({{part.qtyRemainedToQuote}})\r\n                            </span>\r\n                        </span>\r\n                        <span *ngIf="col.field == \'certifiedDate\'" class="float-left">\r\n                            {{\r\n                                    part.certifiedDate | date: "MM/dd/yyyy"\r\n                                                }}\r\n                        </span>\r\n                        <span *ngIf="col.field == \'qtyOnHand\'" class="float-right">\r\n                            {{\r\n                                    part.qtyOnHand | globalNmberFormat\r\n                                                }}\r\n                        </span>\r\n                        <span *ngIf="col.field == \'unitCost\'" class="float-right">\r\n                            {{\r\n                                    part.unitCost | twoDecimalGlobalNumberFormatPipe\r\n                                                }}\r\n                        </span>\r\n                        <span *ngIf="col.field == \'memo\'" class="float-right1">\r\n                            <p class="m-0 p-0 p_textEditor" [innerHTML]=part.memo></p>\r\n                        </span>\r\n                    </td>\r\n                    <td>\r\n                        <span>\r\n                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                (click)="viewStockSelectedRow(part)" matTooltip="View">\r\n                                <i class="fa fa-eye"></i>\r\n                            </a>\r\n                            \x3c!-- <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                (click)="viewStockLineHistory(part)" matTooltip="History">\r\n                                <i class="fa fa-history"></i>\r\n                            </a> --\x3e\r\n                            <span data-toggle="modal" data-target="#stockAudit"><a class="btn nobg btn-hist-cstm"\r\n                                    (click)="openStocklineAudit(part)" matTooltip="History"\r\n                                    matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="roleUpMaterialList.length == 0">\r\n                <tr>\r\n                    <td [attr.colspan]="12" class="no-records-cstm" style="text-align: left;">\r\n                        No Record Exist\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n        </td>\r\n        </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="emptymessage" let-columns>\r\n            <tr>\r\n                <td [attr.colspan]="13" class="no-records-cstm" style="text-align: center;">\r\n                    No records found\r\n                </td>\r\n            </tr>\r\n        </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n<div id="stockAudit" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xlg">\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">\r\n                    &times;\r\n                </button>\r\n                <h4 class="modal-title">History of Stockline</h4>\r\n            </div>\r\n            <div class="modal-body pd-10">\r\n                <div class="table-responsive stockline-audit history_hg tin_cal">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length > 0; else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                <th colspan="16">General</th>\r\n                                <th colspan="6">Expiration</th>\r\n                                <th colspan="3">Application</th>\r\n                                <th colspan="4">Application</th>\r\n                                <th colspan="12">Acquisition</th>\r\n                                <th colspan="6">Traceability</th>\r\n                                <th colspan="2">Export/International</th>\r\n                                <th colspan="9">Inventory</th>\r\n                                <th colspan="5">Location</th>\r\n                                <th colspan="3">Lot & Consignment</th>\r\n                                <th colspan="6">Warnings</th>\r\n                                <th colspan="4">Management Structure</th>\r\n                                <th colspan="9">Certification, Tag and Inspection</th>\r\n                                <th colspan="1">Other</th>\r\n                                <th colspan="1">Memo</th>\r\n                                <th colspan="13">Time Life</th>\r\n                                <th colspan="5"></th>\r\n                            </tr>\r\n                            <tr>\r\n                                <th>Is Customer Stock</th>\r\n                                <th>PN</th>\r\n                                <th>PN Description</th>\r\n                                <th>Revised PN</th>\r\n                                <th>OEM</th>\r\n                                <th>PMA</th>\r\n                                <th>DER</th>\r\n                                <th>Item Group</th>\r\n                                <th>Cond</th>\r\n                                <th>Is Serialized</th>\r\n                                <th>Serial Num</th>\r\n                                <th>Stockline Num</th>\r\n                                <th>NSN</th>\r\n                                <th>ESN</th>\r\n                                <th>Control Num</th>\r\n                                <th>Control ID Num</th>\r\n                                <th>Days Since Received</th>\r\n                                <th>Days Since Mfg</th>\r\n                                <th>Days Since Tagged</th>\r\n                                <th>Days Opened</th>\r\n                                <th>Shelf Life</th>\r\n                                <th>Shelf Life Exp Date</th>\r\n                                <th>NHA</th>\r\n                                <th>TLA</th>\r\n                                <th>Aircraft Tail Num</th>\r\n                                <th>Manufacturer</th>\r\n                                <th>Mfg. Lot Num</th>\r\n                                <th>Mfg. Batch Num</th>\r\n                                <th>Mfg. Date</th>\r\n                                <th>Acquisition Type</th>\r\n                                <th>Order Date</th>\r\n                                <th>Entry Date</th>\r\n                                <th>Expiration Date</th>\r\n                                <th>Vendor</th>\r\n                                <th>PO Num</th>\r\n                                <th>RO Num</th>\r\n                                <th>Requestor</th>\r\n                                <th>Received Date</th>\r\n                                <th>Receiver Num</th>\r\n                                <th>Reconciliation Num</th>\r\n                                <th>WO Num</th>\r\n                                <th>Obtain From Type</th>\r\n                                <th>Obtain From</th>\r\n                                <th>Owner Type</th>\r\n                                <th>Owner</th>\r\n                                <th>Traceable To Type</th>\r\n                                <th>Traceable To</th>\r\n                                <th>ECCN</th>\r\n                                <th>ITAR</th>\r\n                                <th>Qty On Hand</th>\r\n                                <th>Qty Reserved</th>\r\n                                <th>Qty Issued</th>\r\n                                <th>Qty Avail</th>\r\n                                <th>PO Unit Cost</th>\r\n                                <th>RO Unit Cost</th>\r\n                                <th>Unit Sale Price</th>\r\n                                <th>Core Cost/Unit</th>\r\n                                <th>GL Account</th>\r\n                                <th>Site</th>\r\n                                <th>Warehouse</th>\r\n                                <th>Location</th>\r\n                                <th>Shelf</th>\r\n                                <th>Bin</th>\r\n                                <th>Lot Num</th>\r\n                                <th>Lot Description</th>\r\n                                <th>Lot Cost</th>\r\n                                <th>Black List</th>\r\n                                <th>Black List Reason</th>\r\n                                <th>Accident</th>\r\n                                <th>Accident Reason</th>\r\n                                <th>Incident</th>\r\n                                <th>Incident Reason</th>\r\n                                <th colspan="4"></th>\r\n                                <th>Part Cert Num</th>\r\n                                <th>Certify By</th>\r\n                                <th>Certified Date</th>\r\n                                <th>Certify Due Date</th>\r\n                                <th>Tag Type</th>\r\n                                <th>Tag Num</th>\r\n                                <th>Tag Date</th>\r\n                                <th>Inspection By</th>\r\n                                <th>Inspection Date</th>\r\n                                <th>Integration With</th>\r\n                                <th>Memo</th>\r\n                                <th>Cycles Remaining</th>\r\n                                <th>Cycles Since New</th>\r\n                                <th>Cycles Since Ovh</th>\r\n                                <th>Cycles Since Insp</th>\r\n                                <th>Cycles Since Repair</th>\r\n                                <th>Time Remaining</th>\r\n                                <th>Time Since New</th>\r\n                                <th>Time Since Ovh</th>\r\n                                <th>Time Since Insp</th>\r\n                                <th>Time Since Repair</th>\r\n                                <th>Last Since New</th>\r\n                                <th>Last Since Ovh</th>\r\n                                <th>Last Since Insp</th>\r\n                                <th>Is Active</th>\r\n                                <th>Created Date</th>\r\n                                <th>Created By</th>\r\n                                <th>Updated Date</th>\r\n                                <th>Updated By</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length > 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index">\r\n                                <td style="text-align: center;">\r\n                                    <p> <input type="checkbox" name="isCustomerStock"\r\n                                            [(ngModel)]="audit.isCustomerStock" disabled></p>\r\n                                </td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'partNumber\', audit.partNumber) ? \'black\' : \'red\'}">\r\n                                    {{ audit.partNumber }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'partDescription\', audit.partDescription) ? \'black\' : \'red\'}">\r\n                                    {{ audit.partDescription }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'revisedPart\', audit.revisedPart) ? \'black\' : \'red\'}">\r\n                                    {{ audit.revisedPart }}</td>\r\n                                <td style="text-align: center;">\r\n                                    <p> <input type="checkbox" name="oem" [(ngModel)]="audit.oem" disabled></p>\r\n                                </td>\r\n                                <td style="text-align: center;">\r\n                                    <p> <input type="checkbox" name="isPMA" [(ngModel)]="audit.isPMA" disabled></p>\r\n                                </td>\r\n                                <td style="text-align: center;">\r\n                                    <p> <input type="checkbox" name="isDER" [(ngModel)]="audit.isDER" disabled></p>\r\n                                </td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'itemGroup\', audit.itemGroup) ? \'black\' : \'red\'}">\r\n                                    {{ audit.itemGroup }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'condition\', audit.condition) ? \'black\' : \'red\'}">\r\n                                    {{ audit.condition }}</td>\r\n                                <td style="text-align: center;">\r\n                                    <p> <input type="checkbox" name="isSerialized" [(ngModel)]="audit.isSerialized"\r\n                                            disabled></p>\r\n                                </td>\r\n                                <td class="text-right"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'serialNumber\', audit.serialNumber) ? \'black\' : \'red\'}">\r\n                                    {{ audit.serialNumber }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'stockLineNumber\', audit.stockLineNumber) ? \'black\' : \'red\'}">\r\n                                    {{ audit.stockLineNumber }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'nationalStockNumber\', audit.nationalStockNumber) ? \'black\' : \'red\'}">\r\n                                    {{ audit.nationalStockNumber }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'engineSerialNumber\', audit.engineSerialNumber) ? \'black\' : \'red\'}">\r\n                                    {{ audit.engineSerialNumber }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'controlNumber\', audit.controlNumber) ? \'black\' : \'red\'}">\r\n                                    {{ audit.controlNumber }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'idNumber\', audit.idNumber) ? \'black\' : \'red\'}">\r\n                                    {{ audit.idNumber }}</td>\r\n                                <td class="text-right"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'daysReceived\', audit.daysReceived) ? \'black\' : \'red\'}">\r\n                                    {{ audit.daysReceived }}</td>\r\n                                <td class="text-right"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'manufacturingDays\', audit.manufacturingDays) ? \'black\' : \'red\'}">\r\n                                    {{ audit.manufacturingDays }}</td>\r\n                                <td class="text-right"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'tagDays\', audit.tagDays) ? \'black\' : \'red\'}">\r\n                                    {{ audit.tagDays }}</td>\r\n                                <td class="text-right"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'openDays\', audit.openDays) ? \'black\' : \'red\'}">\r\n                                    {{ audit.openDays }}</td>\r\n                                <td style="text-align: center;">\r\n                                    <p> <input type="checkbox" name="shelfLife" [(ngModel)]="audit.shelfLife" disabled>\r\n                                    </p>\r\n                                </td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'shelfLifeExpirationDate\', audit.shelfLifeExpirationDate) ? \'black\' : \'red\'}">\r\n                                    {{ audit.shelfLifeExpirationDate | date: \'MM/dd/yyyy\' }}</td>\r\n                                <td [ngStyle]="{color: getColorCodeForHistory(i, \'nha\', audit.nha) ? \'black\' : \'red\'}">\r\n                                    {{ audit.nha }}</td>\r\n                                <td [ngStyle]="{color: getColorCodeForHistory(i, \'tla\', audit.tla) ? \'black\' : \'red\'}">\r\n                                    {{ audit.tla }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'aircraftTailNumber\', audit.aircraftTailNumber) ? \'black\' : \'red\'}">\r\n                                    {{ audit.aircraftTailNumber }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'manufacturer\', audit.manufacturer) ? \'black\' : \'red\'}">\r\n                                    {{ audit.manufacturer }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'manufacturerLotNumber\', audit.manufacturerLotNumber) ? \'black\' : \'red\'}">\r\n                                    {{ audit.manufacturerLotNumber }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'manufacturingBatchNumber\', audit.manufacturingBatchNumber) ? \'black\' : \'red\'}">\r\n                                    {{ audit.manufacturingBatchNumber }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'manufacturingDate\', audit.manufacturingDate) ? \'black\' : \'red\'}">\r\n                                    {{ audit.manufacturingDate | date: \'MM/dd/yyyy\' }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'acquistionTypeName\', audit.acquistionTypeName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.acquistionTypeName }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'orderDate\', audit.orderDate) ? \'black\' : \'red\'}">\r\n                                    {{ audit.orderDate | date: \'MM/dd/yyyy\' }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'entryDate\', audit.entryDate) ? \'black\' : \'red\'}">\r\n                                    {{ audit.entryDate | date: \'MM/dd/yyyy\' }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'expirationDate\', audit.expirationDate) ? \'black\' : \'red\'}">\r\n                                    {{ audit.expirationDate | date: \'MM/dd/yyyy\' }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'vendorName\', audit.vendorName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.vendorName }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'purchaseOrderNumber\', audit.purchaseOrderNumber) ? \'black\' : \'red\'}">\r\n                                    {{ audit.purchaseOrderNumber }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'repairOrderNumber\', audit.repairOrderNumber) ? \'black\' : \'red\'}">\r\n                                    {{ audit.repairOrderNumber }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'requestedByName\', audit.requestedByName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.requestedByName }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'receivedDate\', audit.receivedDate) ? \'black\' : \'red\'}">\r\n                                    {{ audit.receivedDate | date: \'MM/dd/yyyy\' }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'receiver\', audit.receiver) ? \'black\' : \'red\'}">\r\n                                    {{ audit.receiver }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'reconciliationNumber\', audit.reconciliationNumber) ? \'black\' : \'red\'}">\r\n                                    {{ audit.reconciliationNumber }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'workOrderNumber\', audit.workOrderNumber) ? \'black\' : \'red\'}">\r\n                                    {{ audit.workOrderNumber }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'obtainFromTypeName\', audit.obtainFromTypeName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.obtainFromTypeName }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'obtainFromName\', audit.obtainFromName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.obtainFromName }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'ownerTypeName\', audit.ownerTypeName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.ownerTypeName }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'ownerName\', audit.ownerName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.ownerName }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'traceableToTypeName\', audit.traceableToTypeName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.traceableToTypeName }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'tracableToName\', audit.tracableToName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.tracableToName }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'exportECCN\', audit.exportECCN) ? \'black\' : \'red\'}">\r\n                                    {{ audit.exportECCN }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'itarNumber\', audit.itarNumber) ? \'black\' : \'red\'}">\r\n                                    {{ audit.itarNumber }}</td>\r\n                                <td class="text-right"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'quantityOnHand\', audit.quantityOnHand) ? \'black\' : \'red\'}">\r\n                                    {{ audit.quantityOnHand }}</td>\r\n                                <td class="text-right"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'quantityReserved\', audit.quantityReserved) ? \'black\' : \'red\'}">\r\n                                    {{ audit.quantityReserved }}</td>\r\n                                <td class="text-right"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'quantityIssued\', audit.quantityIssued) ? \'black\' : \'red\'}">\r\n                                    {{ audit.quantityIssued }}</td>\r\n                                <td class="text-right"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'quantityAvailable\', audit.quantityAvailable) ? \'black\' : \'red\'}">\r\n                                    {{ audit.quantityAvailable }}</td>\r\n                                <td class="text-right"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'purchaseOrderUnitCost\', audit.purchaseOrderUnitCost) ? \'black\' : \'red\'}">\r\n                                    {{ audit.purchaseOrderUnitCost }}</td>\r\n                                <td class="text-right"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'repairOrderUnitCost\', audit.repairOrderUnitCost) ? \'black\' : \'red\'}">\r\n                                    {{ audit.repairOrderUnitCost }}</td>\r\n                                <td class="text-right"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'unitSalesPrice\', audit.unitSalesPrice) ? \'black\' : \'red\'}">\r\n                                    {{ audit.unitSalesPrice }}</td>\r\n                                <td class="text-right"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'coreUnitCost\', audit.coreUnitCost) ? \'black\' : \'red\'}">\r\n                                    {{ audit.coreUnitCost }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'glAccountName\', audit.glAccountName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.glAccountName }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'siteName\', audit.siteName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.siteName }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'warehouse\', audit.warehouse) ? \'black\' : \'red\'}">\r\n                                    {{ audit.warehouse }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'location\', audit.location) ? \'black\' : \'red\'}">\r\n                                    {{ audit.location }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'shelfName\', audit.shelfName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.shelfName }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'binName\', audit.binName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.binName }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'lotNum\', audit.lotNum) ? \'black\' : \'red\'}">\r\n                                    {{ audit.lotNum }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'lotDescription\', audit.lotDescription) ? \'black\' : \'red\'}">\r\n                                    {{ audit.lotDescription }}</td>\r\n                                <td class="text-right"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'lotCost\', audit.lotCost) ? \'black\' : \'red\'}">\r\n                                    {{ audit.lotCost }}</td>\r\n                                <td style="text-align: center;">\r\n                                    <p> <input type="checkbox" name="blackListed" [(ngModel)]="audit.blackListed"\r\n                                            disabled></p>\r\n                                </td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'blackListedReason\', audit.blackListedReason) ? \'black\' : \'red\'}">\r\n                                    <p class="p_editor" [innerHTML]="audit.blackListedReason"></p>\r\n                                </td>\r\n                                <td style="text-align: center;">\r\n                                    <p> <input type="checkbox" name="accident" [(ngModel)]="audit.accident" disabled>\r\n                                    </p>\r\n                                </td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'accidentReason\', audit.accidentReason) ? \'black\' : \'red\'}">\r\n                                    <p class="p_editor" [innerHTML]="audit.accidentReason"></p>\r\n                                </td>\r\n                                <td style="text-align: center;">\r\n                                    <p> <input type="checkbox" name="incident" [(ngModel)]="audit.incident" disabled>\r\n                                    </p>\r\n                                </td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'incidentReason\', audit.incidentReason) ? \'black\' : \'red\'}">\r\n                                    <p class="p_editor" [innerHTML]="audit.incidentReason"></p>\r\n                                </td>\r\n                                <td class="min-w-100"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'companyName\', audit.companyName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.companyName }}</td>\r\n                                <td class="min-w-100"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'buName\', audit.buName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.buName }}</td>\r\n                                <td class="min-w-100"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'divName\', audit.divName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.divName }}</td>\r\n                                <td class="min-w-100"\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'deptName\', audit.deptName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.deptName }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'partCertificationNumber\', audit.partCertificationNumber) ? \'black\' : \'red\'}">\r\n                                    {{ audit.partCertificationNumber }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'certifiedByName\', audit.certifiedByName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.certifiedByName }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'certifiedDate\', audit.certifiedDate) ? \'black\' : \'red\'}">\r\n                                    {{ audit.certifiedDate | date: \'MM/dd/yyyy\' }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'certifiedDueDate\', audit.certifiedDueDate) ? \'black\' : \'red\'}">\r\n                                    {{ audit.certifiedDueDate | date: \'MM/dd/yyyy\' }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'tagTypeName\', audit.tagTypeName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.tagTypeName }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'tagNum\', audit.tagNum) ? \'black\' : \'red\'}">\r\n                                    {{ audit.tagNum }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'tagDate\', audit.tagDate) ? \'black\' : \'red\'}">\r\n                                    {{ audit.tagDate | date: \'MM/dd/yyyy\' }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionByName\', audit.inspectionByName) ? \'black\' : \'red\'}">\r\n                                    {{ audit.inspectionByName }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionDate\', audit.inspectionDate) ? \'black\' : \'red\'}">\r\n                                    {{ audit.inspectionDate | date: \'MM/dd/yyyy\' }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'integrationPortal\', audit.integrationPortal) ? \'black\' : \'red\'}">\r\n                                    {{ audit.integrationPortal }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'memo\', audit.memo) ? \'black\' : \'red\'}">\r\n                                    <p class="p_editor" [innerHTML]="audit.memo"></p>\r\n                                </td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'cyclesRemaining\', audit.cyclesRemaining) ? \'black\' : \'red\'}">\r\n                                    {{ audit.cyclesRemaining }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'cyclesSinceNew\', audit.cyclesSinceNew) ? \'black\' : \'red\'}">\r\n                                    {{ audit.cyclesSinceNew }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'cyclesSinceOVH\', audit.cyclesSinceOVH) ? \'black\' : \'red\'}">\r\n                                    {{ audit.cyclesSinceOVH }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'cyclesSinceInspection\', audit.cyclesSinceInspection) ? \'black\' : \'red\'}">\r\n                                    {{ audit.cyclesSinceInspection }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'cyclesSinceRepair\', audit.cyclesSinceRepair) ? \'black\' : \'red\'}">\r\n                                    {{ audit.cyclesSinceRepair }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'timeRemaining\', audit.timeRemaining) ? \'black\' : \'red\'}">\r\n                                    {{ audit.timeRemaining }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'timeSinceNew\', audit.timeSinceNew) ? \'black\' : \'red\'}">\r\n                                    {{ audit.timeSinceNew }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'timeSinceOVH\', audit.timeSinceOVH) ? \'black\' : \'red\'}">\r\n                                    {{ audit.timeSinceOVH }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'timeSinceInspection\', audit.timeSinceInspection) ? \'black\' : \'red\'}">\r\n                                    {{ audit.timeSinceInspection }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'timeSinceRepair\', audit.timeSinceRepair) ? \'black\' : \'red\'}">\r\n                                    {{ audit.timeSinceRepair }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'lastSinceNew\', audit.lastSinceNew) ? \'black\' : \'red\'}">\r\n                                    {{ audit.lastSinceNew }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'lastSinceOVH\', audit.lastSinceOVH) ? \'black\' : \'red\'}">\r\n                                    {{ audit.lastSinceOVH }}</td>\r\n                                <td\r\n                                    [ngStyle]="{color: getColorCodeForHistory(i, \'lastSinceInspection\', audit.lastSinceInspection) ? \'black\' : \'red\'}">\r\n                                    {{ audit.lastSinceInspection }}</td>\r\n                                <td style="background-color: #fff !important; text-align: center;">\r\n                                    <p> <input type="checkbox" name="isActive" [(ngModel)]="audit.isActive" disabled>\r\n                                    </p>\r\n                                </td>\r\n\r\n                                <td>{{ audit.createdDate | date: \'MM/dd/yyyy h:mm a\' }}</td>\r\n                                <td>{{ audit.createdBy }}</td>\r\n                                <td>{{ audit.updatedDate | date: \'MM/dd/yyyy h:mm a\' }}</td>\r\n                                <td>{{ audit.updatedBy }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <h4 style="color: #ff5663;">No History Found</h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">\r\n                    Close\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},kv34:function(e,t,r){"use strict";r.r(t),t.default=".row {\r\n  margin-top: 5px;\r\n}\r\n\r\n.sub-header-title {\r\n  border-bottom: 1px solid lightgray;\r\n  width: 100%;\r\n  font-size: 18px;\r\n  padding: 5px 8px;\r\n  margin-bottom: 5px;\r\n}\r\n"},kvBV:function(e,t,r){"use strict";r.r(t),t.default="button {\r\n    border-radius: 5px;\r\n}\r\n\r\n:host ::ng-deep .ui-chkbox-label {\r\n    top: 0px !important;\r\n    text-align: right !important;\r\n}\r\n\r\n:host ::ng-deep .ui-chkbox {\r\n    position: relative;\r\n    top: -6px;\r\n}\r\n\r\n:host ::ng-deep .ui-chkbox-box.ui-state-active {\r\n    background-color: #007ad9;\r\n    color: #ffffff;\r\n    padding: 0px;\r\n}\r\n\r\n@media (min-width: 1100px) {\r\n    :host ::ng-deep .modal-lg {\r\n        max-width: 1250px !important;\r\n    }\r\n}\r\n"},kwl7:function(e,t,r){"use strict";r.r(t),t.default="::ng-deep .ui-chkbox-label {\n  float: none !important;\n  margin-left: 20px !important;\n  top: 7px !important;\n  position: relative !important;\n  width: auto !important;\n}\n\n::ng-deep .ui-chkbox-label {\n  float: none !important;\n  margin-left: 20px !important;\n  top: 7px !important;\n  position: relative !important;\n  width: auto !important;\n}\n\n::ng-deep .ui-calendar-button {\n  height: 24px !important;\n}"},lDwM:function(e,t,r){"use strict";r.r(t),t.default='.select-read-only {\n  border: none;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  text-indent: 1px;\n  text-overflow: "";\n  box-shadow: none !important;\n}\n\nselect-read-only {\n  background-color: white !important;\n}\n\nselect:disabled {\n  background-color: white !important;\n}'},lY1k:function(e,t,r){"use strict";r.r(t),t.default=".row {\r\n    margin-top: 5px;\r\n}\r\n\r\n.sub-header-title {\r\n    border-bottom: 1px solid lightgray;\r\n    width: 100%;\r\n    font-size: 18px;\r\n    padding: 5px 8px;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.sales-quote-approver-info {\r\n    display: flex;\r\n    width: 85%;\r\n    align-items: center;\r\n    margin-top: 22px;\r\n}\r\n\r\n.sales-quote-approver-info p {\r\n        flex: 30%;\r\n        padding: 0;\r\n    }\r\n\r\n.sales-quote-approver-info p .label {\r\n            color: #000 !important;\r\n            font-weight: bold;\r\n        }\r\n\r\nlabel {\r\n    font-size: 12px !important;\r\n    text-align: left;\r\n    width: 150px;\r\n    margin-right: 0;\r\n    font-weight: 400;\r\n}\r\n\r\n.approver-details-cstm {\r\n    margin-top: 16px;\r\n}\r\n\r\n.approver-details-cstm p {\r\n        float: left;\r\n        margin-right: 40px;\r\n    }\r\n\r\n.approver-tab-cstm .col-md-3 {\r\n    padding-right: 40px;\r\n    margin-right: 0;\r\n}\r\n\r\n.approver-tab-cstm .form-row {\r\n    margin-top: 10px;\r\n}\r\n\r\n.red {\r\n    background-color: #ff0000 !important; \r\n}"},mf9h:function(e,t,r){"use strict";r.r(t),t.default="p .label {\n  width: 40%;\n  padding: 0;\n  display: inline-block;\n}\n\np .value {\n  width: 55%;\n  display: inline-block;\n  margin-left: 5%;\n}"},"nL5/":function(e,t,r){"use strict";r.r(t),t.default="button {\n  border-radius: 5px;\n}\n\nlabel {\n  width: 100%;\n}\n\ndiv.row {\n  padding: 10px;\n}\n\nbutton {\n  margin-left: 3px;\n}\n\ndiv.filter-method {\n  background-color: #e5e5e5;\n}\n\ndiv.filter-method > div {\n  float: left;\n}\n\n.clr-red, .clr-red:hover {\n  color: #ff5663 !important;\n}\n\n.form-control:disabled {\n  background-color: #e9ecef !important;\n}"},oS5I:function(e,t,r){"use strict";r.r(t),t.default=".modal-body p .label {\r\n    width: 33%;\r\n    padding: 0;\r\n    display: inline-block;\r\n}\r\n\r\n.modal-body p .value {\r\n    width: 54%;\r\n    display: inline-block;\r\n    margin-left: 5%;\r\n}\r\n\r\n.loader-position{\r\n    position: absolute;\r\n}\r\n\r\n.loader-align{\r\n    margin-top: 17rem;\r\n    margin-left: 30rem;\r\n}\r\n\r\n.sales-analysis-header tr th{\r\n    background: #4298ff !important;\r\n    color:#fff !important;\r\n}\r\n\r\n.myclass {\r\n    margin-top: -5px\r\n}\r\n\r\n.footer td{\r\n    background-color: #eaf2fd !important;\r\n  }\r\n\r\n.ui-datatable-scrollable-footer {\r\noverflow: hidden;\r\n}\r\n\r\n.label{\r\n    margin-right:0px !important;\r\n}"},oUHZ:function(e,t,r){"use strict";r.r(t),t.default='<div class="card">\r\n    <div class="card-body p-t-0">\r\n        <div class="row">\r\n            <div class="col-md-3" style="padding-left:25px; padding-top:5px">\r\n                <div class="form-group">\r\n                    <label>SO Num <span class="clr-red">*</span></label>\r\n                    <input type="text" class="form-control" name="salesOrderNumber"\r\n                        [(ngModel)]="salesOrder.salesOrderNumber" [disabled]="true" #accountTypeId="ngModel"\r\n                        id="salesOrderNumber" #salesOrderNumber="ngModel" />\r\n                </div>\r\n            </div>\r\n            <div class="col-md-3" style="padding-left:25px; padding-top:5px">\r\n                <div class="form-group">\r\n                    <label>SO Quote Num</label>\r\n                    <input type="text" class="form-control" [(ngModel)]="salesOrder.salesOrderQuoteNumber"\r\n                        name="salesOrderQuoteNumber" [disabled]="true" />\r\n                </div>\r\n            </div>\r\n            <div class="col-md-3" style="padding-left:25px; padding-top:5px">\r\n                <label></label>\r\n                <div class="form-group">\r\n                    <button type="submit" class="btn submit-btn btn btn-primary">Sales\r\n                        order</button>\r\n                </div>\r\n\r\n            </div>\r\n            <div class="col-md-3" style="padding-left:25px; padding-top:5px">\r\n                <label></label>\r\n                <div class="form-group">\r\n                    <button type="submit" class="btn  submit-btn btn btn-primary">Create Shipping</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <p-table #dt [value]="partsForBilling" class="rpo-table-cstm rro-table-cstm" [first]="0" [rows]="pageSize"\r\n            [paginator]="showPaginator" [pageLinks]="3" [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n            [columns]="selectedColumns" [lazy]="true" (onLazyLoad)="loadData($event)" [totalRecords]="totalRecords"\r\n            [scrollable]="true" [style]="{ width: \'100%\' }">\r\n            \x3c!-- <ng-template pTemplate="caption"> --\x3e\r\n            \x3c!-- <div class="row">\r\n                    <div class="col">\r\n                    </div>\r\n                </div> --\x3e\r\n            \x3c!-- </ng-template> --\x3e\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col *ngFor="let col of columns" [ngStyle]="{\'width\': col.width}" />\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n                    <th style="width:50px !important;">Ready?</th>\r\n                    <th *ngFor="let col of columns" [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                    </th>\r\n                    <th style="width:130px !important;">Actions</th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData let-rowIndex="rowIndex" let-columns="columns">\r\n                <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex" pReorderableRowHandle>\r\n                    <td style="width:50px !important; text-align: center;">\r\n                        <input type="checkbox" [(ngModel)]="rowData.selected"\r\n                            [disabled]="!rowData.isApproved || rowData.isShipped" />\r\n                    </td>\r\n                    <td *ngFor="let col of columns">\r\n                        <span *ngIf="col.field == \'totalSales\'" class="float-right">\r\n                            {{convertDate(col.field , rowData) | twoDecimalGlobalNumberFormatPipe}}\r\n                        </span>\r\n                        <span *ngIf="col.field != \'totalSales\'">\r\n                            {{convertDate(col.field , rowData)}}\r\n                        </span>\r\n                    </td>\r\n                    <td style="text-align:center" style="width:130px !important;">\r\n                        <button type="submit" class="btn submit-btn btn btn-primary"\r\n                            (click)="onSelectPartNumber(rowData)" [disabled]="!rowData.selected">Create\r\n                            Shipping</button>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="partsForBilling.length == 0">\r\n                <tr>\r\n                    <td [attr.colspan]="10" style="color: red; font-weight: bold; text-align: center">\r\n                        No records found\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer" class="footer">Total:</label>\r\n                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer" class="footer1">Pages Count:</label>\r\n\r\n                <input style="width: 5%;" [ngModel]="totalPages" [disabled]="true" pInputText type="text" />\r\n            </ng-template>\r\n        </p-table>\r\n\r\n\r\n        \x3c!-- <div class="card-body"> --\x3e\r\n        <div *ngIf="partSelected">\r\n            <form #shippingForm="ngForm">\r\n                <div class="form-row">\r\n                    <div class="col-md-6">\r\n                        <div class="card card-stock">\r\n                            <div class="card-body">\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label class="workorder-label">Shipping Order Num</label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text"\r\n                                            [(ngModel)]="shippingHeader.woShippingNum" name="shippingOrderNum"\r\n                                            disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Status<span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <select [(ngModel)]="shippingHeader.soShippingStatusId" name="status" required\r\n                                            [disabled]="isView">\r\n                                            <option value="">Select</option>\r\n                                            <option\r\n                                                *ngFor="let status of [{\'label\':\'Open\', \'id\':1}, {\'label\':\'Shipped\', \'id\':2}, {\'label\':\'In Transit\', \'id\':3}, {\'label\':\'Received\', \'id\':4}]"\r\n                                                [value]="status.id">{{status.label}}</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Open Date <span class="clr-red">*</span> </label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <p-calendar [showIcon]="true" (onSelect)="calculateExpiryDate()"\r\n                                            [(ngModel)]="shippingHeader.openDate" name="openDate" [disabled]="isView"\r\n                                            required></p-calendar>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Customer</label>\r\n                                    </div>\r\n                                    <div class="col-md-8" *ngIf="customerDetails">\r\n                                        <input class="form-control" (change)="calculateExpiryDate()" type="text"\r\n                                            [(ngModel)]="customerDetails.name" name="customer" disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12" *ngIf="customerDetails">\r\n                                    <div class="col-md-4">\r\n                                        <label>Cus Code</label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text"\r\n                                            [(ngModel)]="customerDetails.customerCode" name="customerCode" disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Cert Num</label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="number" [(ngModel)]="validFor" name="certNum"\r\n                                            disabled />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    \x3c!-- <div class="col-md-3">\r\n                            <div class="card card-stock">\r\n                                <div class="card-header">\r\n                                    <h5>Manufacturer</h5>\r\n                                </div>\r\n                                <div class="card-body">\r\n                                    <div class="form-group">\r\n                                        <label>Manufacturer</label>\r\n                                        <select [(ngModel)]="stockLineForm.manufacturerId" name="manufacturerId">\r\n                                            <option value="0">-- Select --</option>\r\n                                            <option *ngFor="let manufacturer of allManufacturerInfo" [ngValue]="manufacturer.value">{{manufacturer.label}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        <label>Mfg. Lot Num</label>\r\n                                        <input class="form-control" type="text" name="manufacturerLotNumber" [(ngModel)]="stockLineForm.manufacturerLotNumber">\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        <label>Mfg. Batch Num</label>\r\n                                        <input class="form-control" type="text" name="manufacturingBatchNumber" [(ngModel)]="stockLineForm.manufacturingBatchNumber">\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        <label>Mfg. Date</label>\r\n                                        <p-calendar class="workflow-clder" [showIcon]="true" [maxDate]="minDateValue" name="manufacturingDate" [(ngModel)]="stockLineForm.manufacturingDate"></p-calendar>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </div> --\x3e\r\n\r\n\r\n                    <div class="col-md-6">\r\n                        <div class="card card-stock">\r\n                            <div class="card-body">\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Ship Via <span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <select [(ngModel)]="shippingHeader.shipviaId" [disabled]="isView"\r\n                                            name="shipVia" required>\r\n                                            <option value="">Select</option>\r\n                                            <option *ngFor="let shipvia of shipViaList" [value]="shipvia.value">\r\n                                                {{shipvia.label}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Ship Date<span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <p-calendar [showIcon]="true" (onSelect)="calculateExpiryDate()"\r\n                                            [(ngModel)]="shippingHeader.shipDate" name="shipDate" [disabled]="isView"\r\n                                            required></p-calendar>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>AWD/Tracking Num<span class="clr-red">*</span> </label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text" [(ngModel)]="shippingHeader.airwayBill"\r\n                                            name="airwayBill" [disabled]="isView" required />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class="form-group col-md-12">\r\n                                    \x3c!-- <div class="col-md-3">\r\n                                        <label>Weight</label>\r\n                                    </div> --\x3e\r\n                                    <div class="col-md-6">\r\n                                        <label>Weight</label>\r\n                                        <input type="number" class="input-field-value" pKeyFilter="num" pInputText\r\n                                            maxlength="10" [(ngModel)]="shippingHeader.shipWeight" name="shipWeight"\r\n                                            id="shipWeight" title="Export Weight" (keyup)="btnChange()" />\r\n                                    </div>\r\n                                    <div class="col-md-6">\r\n                                        <label>UOM <span style="color: red;" *ngIf="shippingHeader.shipWeight">*</span>\r\n                                        </label>\r\n                                        <p-dropdown [options]="allWeightUnitOfMeasureInfo" filter="true"\r\n                                            [(ngModel)]="shippingHeader.shipWeightUnit" name="shipWeightUnit"\r\n                                            [resetFilterOnHide]="true" placeholder="Select" [showClear]="true"\r\n                                            [required]="shippingHeader.shipWeight > 0" (onChange)="btnChange()">\r\n                                        </p-dropdown>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    \x3c!-- <div class="col-md-4">\r\n                                        <label class="control-label">Dimension</label>\r\n                                    </div> --\x3e\r\n                                    <div class="col-md-6">\r\n                                        <label class="control-label">Dimension</label>\r\n                                        <span class="display-flex inline-block">\r\n                                            <input type="number" name="exportLength" class="input-field-value"\r\n                                                pInputText pKeyFilter="num" maxlength="10" (keyup)="btnChange()"\r\n                                                [(ngModel)]="shippingHeader.shipSizeLength" />&nbsp;\r\n                                            <input type="number" name="exportWidth" class="input-field-value" pInputText\r\n                                                pKeyFilter="num" maxlength="10" (keyup)="btnChange()"\r\n                                                [(ngModel)]="shippingHeader.shipSizeWidth" />&nbsp;\r\n                                            <input type="number" name="exportHeight" class="input-field-value"\r\n                                                pInputText pKeyFilter="num" maxlength="10" (keyup)="btnChange()"\r\n                                                [(ngModel)]="shippingHeader.shipSizeHeight" />\r\n                                        </span>\r\n                                    </div>\r\n                                    <div class="col-md-6">\r\n                                        <label class="control-label">\r\n                                            UOM <span style="color: red;"\r\n                                                *ngIf="shippingHeader.shipSizeLength || shippingHeader.shipSizeWidth || shippingHeader.shipSizeHeight">*</span>\r\n                                        </label>\r\n                                        <p-dropdown [options]="allSizeUnitOfMeasureInfo" filter="true"\r\n                                            [(ngModel)]="shippingHeader.shipSizeUnitOfMeasureId"\r\n                                            name="shipSizeUnitOfMeasureId" [resetFilterOnHide]="true"\r\n                                            placeholder="Select" [showClear]="true"\r\n                                            [required]="shippingHeader.shipSizeLength > 0 || shippingHeader.shipSizeWidth > 0 || shippingHeader.shipSizeHeight > 0"\r\n                                            (onChange)="btnChange()"></p-dropdown>\r\n                                    </div>\r\n                                    \x3c!-- <div class="col-md-8">\r\n                                        <input class="form-control" type="number" [(ngModel)]="shippingHeader.dimension"\r\n                                            name="dimension" [disabled]="isView" required />\r\n                                    </div> --\x3e\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    \x3c!-- <div class="col-md-4">\r\n                        <div class="card card-stock">\r\n                            <div class="card-body"> --\x3e\r\n                    \x3c!-- <div class="form-group col-12">\r\n                                        <div class="col-6">\r\n                                            <label>SO Num</label>\r\n                                        </div>\r\n                                        <div class="col-6" *ngIf="customerDetails">\r\n                                            <input class="form-control" type="text" [(ngModel)]="salesOrderGeneralInformation.workOrderNum" name="soNum" disabled/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-group col-12">\r\n                                        <div class="col-6">\r\n                                            <label>RO Num</label>\r\n                                        </div>\r\n                                        <div class="col-6" *ngIf="customerDetails">\r\n                                            <input class="form-control" type="text" [(ngModel)]="salesOrder.workOrderNum" name="roNum" readonly/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-group col-12">\r\n                                        <div class="col-6">\r\n                                            <label>PO Num</label>\r\n                                        </div>\r\n                                        <div class="col-6" *ngIf="customerDetails">\r\n                                            <input class="form-control" type="text" [(ngModel)]="salesOrderGeneralInformation.workOrderNum" name="poNum" readonly/>\r\n                                        </div>\r\n                                    </div> --\x3e\r\n                    \x3c!-- <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>WO Num</label>\r\n                                    </div>\r\n                                    <div class="col-md-8"\r\n                                        *ngIf="customerDetails">\r\n                                        <input class="form-control" type="text"\r\n                                            [(ngModel)]="salesOrderGeneralInformation.workOrderNum" name="woNum" disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Shipment</label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="number" [(ngModel)]="shippingHeader.shipment"\r\n                                            name="shipment" [disabled]="isView" />\r\n                                    </div>\r\n                                </div> --\x3e\r\n                    \x3c!-- </div>\r\n                        </div>\r\n                    </div> --\x3e\r\n                </div>\r\n\r\n                <h4 class="heading">Address Details</h4>\r\n                <div class="form-row">\r\n                    <div class="col-md-4">\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5 style="text-align: center;">Origin</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Name <span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        \x3c!-- <input class="form-control" type="text" [(ngModel)]="shippingHeader.originName"\r\n                                                   name="originName" [disabled]="isView" required /> --\x3e\r\n                                        \x3c!-- <p-dropdown placeholder="Select" name="originName" #originName="ngModel"\r\n                                                   [options]="orignSiteNames" class="p-dropdown-custom-md p-dropdown-mh120 shipping_v"\r\n                                                   [(ngModel)]="shippingHeader.originSiteId"\r\n                                                   (onChange)="orignSiteNameEvent($event.value)" required>\r\n                                       </p-dropdown> --\x3e\r\n                                        <select [(ngModel)]="shippingHeader.originSiteId" name="originSiteId"\r\n                                            (change)="setOriginToAddress(shippingHeader.originSiteId)" required>\r\n                                            \x3c!-- <option value=""></option> --\x3e\r\n                                            <option *ngFor="let site of orignSiteNames" [ngValue]="site.originSiteId">\r\n                                                {{site.originName}}</option>\r\n                                        </select>\r\n                                        \x3c!-- \r\n                                        <select [(ngModel)]="receivingForm.siteId" name="siteId"\r\n                                                (change)="siteValueChange(receivingForm.siteId)" required>\r\n                                            <option value="0">-- Select --</option>\r\n                                            <option *ngFor="let site of allSites" [ngValue]="site.siteId">{{site.name}}</option>\r\n                                        </select> --\x3e\r\n\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label class="workorder-label">Address Line 1<span\r\n                                                class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text"\r\n                                            [(ngModel)]="shippingHeader.originAddress1" name="originAddress1" disabled\r\n                                            required />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label class="workorder-label">Address Line 2</label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text"\r\n                                            [(ngModel)]="shippingHeader.originAddress2" name="originAddress2"\r\n                                            disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>City<span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text" [(ngModel)]="shippingHeader.originCity"\r\n                                            name="originCity" disabled required />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>State<span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text" [(ngModel)]="shippingHeader.originState"\r\n                                            name="originState" disabled required />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Zip<span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text" [(ngModel)]="shippingHeader.originZip"\r\n                                            name="originZip" required disabled />\r\n                                    </div>\r\n                                </div>\r\n                                \x3c!-- <div class="form-group col-md-12">\r\n                                        <div class="col-md-4">\r\n                                            <label>Country<span class="clr-red">*</span></label>\r\n                                        </div>\r\n                                        <div class="col-md-8">\r\n                                            <select [(ngModel)]="shippingHeader.originCountryId" name="originCountry" required [disabled]="isView">\r\n                                                <option value=""></option>\r\n                                                <option *ngFor="let country of countryList" [value]="country.value">{{country.label}}</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div> --\x3e\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Country<span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    \x3c!--<div class="col-md-8">\r\n                                            <select [(ngModel)]="shippingHeader.soldToCountryId" name="soldToCountryId" required [disabled]="isView" disabled>\r\n                                                <option value=""></option>\r\n                                                <option *ngFor="let country of countryList" [value]="country.value">{{country.label}}</option>\r\n                                            </select>\r\n                                        </div>--\x3e\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text"\r\n                                            [(ngModel)]="shippingHeader.originCountryName" name="soldToCountryName2"\r\n                                            required disabled />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="col-md-4">\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5 style="text-align: center;">Bill To</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Name <span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text" [(ngModel)]="shippingHeader.soldToName"\r\n                                            name="soldName" [disabled]="isView" required disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Site <span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <select [(ngModel)]="shippingHeader.soldToSiteId" (change)="setSoldToAddress()"\r\n                                            [disabled]="isView" name="soldToSite" required>\r\n                                            <option value="">Select</option>\r\n                                            <option *ngFor="let site of siteList"\r\n                                                [value]="site.customerShippingAddressId">\r\n                                                {{site.siteName}}\r\n                                            </option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label class="workorder-label">Address Line 1<span\r\n                                                class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text"\r\n                                            [(ngModel)]="shippingHeader.soldToAddress1" name="soldToAddress1" required\r\n                                            [disabled]="isView" disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label class="workorder-label">Address Line 2</label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text"\r\n                                            [(ngModel)]="shippingHeader.soldToAddress2" name="soldToAddress2"\r\n                                            [disabled]="isView" disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>City<span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text" [(ngModel)]="shippingHeader.soldToCity"\r\n                                            name="soldToCity" [disabled]="isView" required disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>State<span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text" [(ngModel)]="shippingHeader.soldToState"\r\n                                            name="soldToState" [disabled]="isView" required disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Zip<span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text" [(ngModel)]="shippingHeader.soldToZip"\r\n                                            name="soldToZip" [disabled]="isView" required disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Country<span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    \x3c!--<div class="col-md-8">\r\n                                            <select [(ngModel)]="shippingHeader.soldToCountryId" name="soldToCountryId" required [disabled]="isView" disabled>\r\n                                                <option value=""></option>\r\n                                                <option *ngFor="let country of countryList" [value]="country.value">{{country.label}}</option>\r\n                                            </select>\r\n                                        </div>--\x3e\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text"\r\n                                            [(ngModel)]="shippingHeader.soldToCountryName" name="soldToCountryName"\r\n                                            [disabled]="isView" required disabled />\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="col-md-4">\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                    <label style="width: auto !important;margin-top: 3px;">\r\n                                        \x3c!--  --\x3e\r\n                                        <input type="checkbox" [(ngModel)]="shippingHeader.isSameForShipTo"\r\n                                            name="cparent" id="cparent"\r\n                                            (click)="assignDetails($event.target.checked)" />\r\n                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                        Is same for Ship To\r\n                                    </label>\r\n                                </div>\r\n                                <h5 style="text-align: center;">Ship To</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Name <span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        \x3c!-- <input class="form-control" type="text"\r\n                                                 [(ngModel)]="shippingHeader.shipToName" name="shipToName"\r\n                                                  [disabled]="isView" required/> --\x3e\r\n\r\n                                        <p-autoComplete field="customerName"\r\n                                            [(ngModel)]="shippingHeader.shipToCustomerId" name="shipToName"\r\n                                            errorMessage="Records not found" [forceSelection]="true"\r\n                                            (onSelect)="getSiteNamesByShipCustomerId($event)"\r\n                                            [suggestions]="customerNamesList"\r\n                                            (completeMethod)="filterCustomerName($event)"\r\n                                            (onKeyUp)="clearAddress(\'ShipTo\', $event.target.value)" [size]="30"\r\n                                            [minLength]="1" #customerName="ngModel" required [dropdown]="true"\r\n                                            class="p-autoComplete-ctsm" [disabled]="isView">\r\n                                        </p-autoComplete>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Site <span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <select [(ngModel)]="shippingHeader.shipToSiteId" (change)="setShipToAddress()"\r\n                                            [disabled]="isView" name="shipToSite" required>\r\n                                            <option value="">Select</option>\r\n                                            <option *ngFor="let site of shipCustomerSiteList"\r\n                                                [value]="site.customerShippingAddressId">{{site.siteName}}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label class="workorder-label">Address Line 1<span\r\n                                                class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text"\r\n                                            [(ngModel)]="shippingHeader.shipToAddress1" name="shipToAddress1"\r\n                                            disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label class="workorder-label">Address Line 2</label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text"\r\n                                            [(ngModel)]="shippingHeader.shipToAddress2" name="shipToAddress2"\r\n                                            disabled />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>City<span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text" [(ngModel)]="shippingHeader.shipToCity"\r\n                                            name="shipToCity" disabled required />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>State<span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text" [(ngModel)]="shippingHeader.shipToState"\r\n                                            name="shipToState" disabled required />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Zip<span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text" [(ngModel)]="shippingHeader.shipToZip"\r\n                                            name="shipToZip" disabled required />\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group col-md-12">\r\n                                    <div class="col-md-4">\r\n                                        <label>Country<span class="clr-red">*</span></label>\r\n                                    </div>\r\n                                    \x3c!--<div class="col-md-8">\r\n                                            <select [(ngModel)]="shippingHeader.shipToCountryId" disabled name="shipToCountry" required>\r\n                                                <option value=""></option>\r\n                                                <option *ngFor="let country of countryList" [value]="country.value">{{country.label}}</option>\r\n                                            </select>\r\n                                        </div>--\x3e\r\n                                    <div class="col-md-8">\r\n                                        <input class="form-control" type="text"\r\n                                            [(ngModel)]="shippingHeader.shipToCountryName" name="shipToCountryName"\r\n                                            disabled required />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n                \x3c!--  --\x3e\r\n                \x3c!-- {{shippingHeader.originCountryId}}- {{shippingHeader.shipToCountryId}} --\x3e\r\n                \x3c!-- *ngIf="(shippingHeader.soldToCountryId && shippingHeader.shipToCountryId) && shippingHeader.soldToCountryId !=shippingHeader.shipToCountryId" --\x3e\r\n                <div\r\n                    *ngIf="(shippingHeader.originCountryId && shippingHeader.shipToCountryId) && shippingHeader.originCountryId !=shippingHeader.shipToCountryId">\r\n                    <h4 class="heading">Custom Info </h4>\r\n                    <div class="form-row">\r\n                        <div class="col-md-4">\r\n                            <div class="card card-stock">\r\n                                <div class="card-body">\r\n                                    <div class="form-group col-md-12">\r\n                                        <div class="col-md-4">\r\n                                            <label>Entry Type </label>\r\n                                        </div>\r\n                                        <div class="col-md-8">\r\n                                            <input class="form-control" type="text"\r\n                                                [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'entryType\']"\r\n                                                name="entryType" [disabled]="isView" required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-group col-md-12">\r\n                                        <div class="col-md-4">\r\n                                            <label>Entry Num</label>\r\n                                        </div>\r\n                                        <div class="col-md-8">\r\n                                            <input class="form-control" type="text"\r\n                                                [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'entryNumber\']"\r\n                                                name="entryNumber" [disabled]="isView" required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-group col-md-12">\r\n                                        <div class="col-md-4">\r\n                                            <label class="workorder-label">Entry Commodity Code</label>\r\n                                        </div>\r\n                                        <div class="col-md-8">\r\n                                            <input class="form-control" type="text"\r\n                                                [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'commodityCode\']"\r\n                                                name="entryCommodityCode" [disabled]="isView" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-4">\r\n                            <div class="card card-stock">\r\n                                <div class="card-body">\r\n                                    <div class="form-group col-md-12">\r\n                                        <div class="col-md-4">\r\n                                            <label>EPU </label>\r\n                                        </div>\r\n                                        <div class="col-md-8">\r\n                                            <input class="form-control" type="text"\r\n                                                [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'epu\']" name="epu"\r\n                                                [disabled]="isView" required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-group col-md-12">\r\n                                        <div class="col-md-4">\r\n                                            <label>UCR</label>\r\n                                        </div>\r\n                                        <div class="col-md-8">\r\n                                            <input class="form-control" type="text"\r\n                                                [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'ucr\']" name="ucr"\r\n                                                [disabled]="isView" required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-group col-md-12">\r\n                                        <div class="col-md-4">\r\n                                            <label>Master UCR</label>\r\n                                        </div>\r\n                                        <div class="col-md-8">\r\n                                            <input class="form-control" type="text"\r\n                                                [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'masterUCR\']"\r\n                                                name="masterUCR" [disabled]="isView" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-group col-md-12">\r\n                                        <div class="col-md-4">\r\n                                            <label class="workorder-label">Movement Ref No</label>\r\n                                        </div>\r\n                                        <div class="col-md-8">\r\n                                            <input class="form-control" type="text"\r\n                                                [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'movementRefNo\']"\r\n                                                name="MovementRefNo" [disabled]="isView" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-4">\r\n                            <div class="card card-stock">\r\n                                <div class="card-body">\r\n                                    <div class="form-group col-md-12">\r\n                                        <div class="col-md-4">\r\n                                            <label class="workorder-label">Customs Value </label>\r\n                                        </div>\r\n                                        <div class="col-md-8">\r\n                                            <input class="form-control" type="number"\r\n                                                [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'customsValue\']"\r\n                                                name="customsValue" [disabled]="isView" required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-group col-md-12">\r\n                                        <div class="col-md-4">\r\n                                            <label>Net Mass</label>\r\n                                        </div>\r\n                                        <div class="col-md-8">\r\n                                            <input class="form-control" type="number"\r\n                                                [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'netMass\']"\r\n                                                name="netMass" [disabled]="isView" required />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-group col-md-12">\r\n                                        <div class="col-md-4">\r\n                                            <label>VAT Value</label>\r\n                                        </div>\r\n                                        <div class="col-md-8">\r\n                                            <input class="form-control" type="number"\r\n                                                [(ngModel)]="shippingHeader[\'workOrderCustomsInfo\'][\'vatValue\']"\r\n                                                name="VATValue" [disabled]="isView" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div class="row">\r\n                \x3c!-- [disabled]="!shippingForm.valid" --\x3e\r\n                <button *ngIf="!isView" class="btn btn-primary pull-right" style="width: 100px;"\r\n                    (click)="save()">Save</button>\r\n            </div>\r\n        </div>\r\n\r\n        \x3c!-- </div> --\x3e\r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},onBv:function(e,t,r){"use strict";r.r(t),t.default=".btn-spaces > button {\r\n  margin-right: 13px !important;\r\n}\r\n/* .ui-radiobutton-label{\r\n  color: #ffffff !important;\r\n} */\r\ninput[type='text'],\r\ninput[type='number'],\r\nselect,\r\ntextarea {\r\n  height: 24px !important;\r\n  border-radius: 5px !important;\r\n}\r\n.select-read-only{\r\n  border: none;\r\n  -webkit-appearance: none;\r\n  -moz-appearance: none;\r\n  text-indent: 1px;\r\n  text-overflow: '';\r\n  box-shadow: none !important;\r\n}\r\n.table-overflow th {\r\n  text-align: center;\r\n}\r\n/* p-radiobutton .ui-radiobutton .ui-radiobutton-box{\r\n  border: 3px solid #ffffff !important;\r\n} */\r\n.seve{\r\n  margin-bottom: 20px;\r\n  margin-right: 12px;\r\n}\r\n.ui-table .ui-table-tbody > tr:nth-child(odd) {\r\n  background-color: #ffffff !important;\r\n}\r\n.footer td{\r\n  background-color: #eaf2fd !important;\r\n}\r\nselect.select-read-only {\r\n  background-color: #ffffff !important;\r\n}\r\n.p-radiobutton-label-horizontal .ui-radiobutton-label {\r\n  width: unset !important;\r\n  margin-right: 10px;\r\n}\r\n\r\n"},pCCp:function(e,t,r){"use strict";r.r(t),t.default='<p-breadcrumb [model]="breadcrumbs" [home]="home"></p-breadcrumb>\r\n<div class="card new-card">\r\n    <div class="card-header bg-primary new-card-header">\r\n        <div class="row">\r\n            <div class="col">\r\n                <h4 class="new-card-heading">Sales Order List</h4>\r\n            </div>\r\n            <div>\r\n                <button type="button" class="btn-sm new-btn-primary" matTooltipPosition="above"\r\n                    matTooltip="Create Sales Order" [routerLink]="[\'/salesmodule/salespages/sales-order\']">\r\n                    Create Sales Order\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="card-body new-card-body">\r\n        <p-table #dt [value]="sales" class="rpo-table-cstm rro-table-cstm" [first]="0" [rows]="pageSize"\r\n            [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n            [columns]="selectedColumns" [lazy]="true" [metaKeySelection]="true" (onLazyLoad)="loadData($event)"\r\n            [resizableColumns]="true" [reorderableColumns]="true" [totalRecords]="totalRecords" [scrollable]="true"\r\n            [style]="{ width: \'100%\' }" selectionMode="multiple" [(selection)]="selectedColumn">\r\n\r\n            <ng-template pTemplate="caption">\r\n                <div class="row">\r\n                    <div class="col">\r\n                        <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns" optionLabel="header"\r\n                            selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}"\r\n                            defaultLabel="Choose Columns" style="float:left">\r\n                        </p-multiSelect>\r\n                    </div>\r\n                    <div class="col">\r\n                        <div style="width: auto !important; float: right;"\r\n                            class="inner-addon right-addon w50 inline-block g-filter-search-cstm">\r\n                            <i class="fa fa-search"></i>\r\n                            <input type="text" pInputText size="50" class="form-control"\r\n                                (input)="globalSearch($event.target.value)" placeholder="Filter">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="row">\r\n                    <div class="col">\r\n                        <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"\r\n                            matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Data"\r\n                            data-toggle="modal" (click)="selectedOnly = false; targetData = dt;"\r\n                            data-target="#downloadConfirmation"></button>\r\n                        <button type="button" class="btn btn-primary new-table-button"\r\n                            matTooltip="Download Selected Data" matTooltipPosition="above" pButton icon="fa-download"\r\n                            iconPos="left" label="Export Selected Data"\r\n                            (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                        \x3c!-- data-toggle="modal"\r\n                            data-target="#downloadConfirmation"\r\n                            (click)="selectedOnly = true; targetData = dt;" --\x3e\r\n                        <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                            <label class="radio-cstm wauto">\r\n                                <input type="radio" name="viewType" class="form-control" value="pnview"\r\n                                    [(ngModel)]="viewType" (click)="changeOfStatus(\'\',\'pnview\')">\r\n                                <span class="checkmark"></span>PN View\r\n                            </label>\r\n                        </div>\r\n                        <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                            <label class="radio-cstm wauto">\r\n                                <input type="radio" name="viewType" class="form-control" value="soview"\r\n                                    [(ngModel)]="viewType" (click)="changeOfStatus(\'\',\'soview\')">\r\n                                <span class="checkmark"></span>SO View\r\n                            </label>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class="pull-right" style="padding-left:0px;">\r\n                        <div class="">\r\n                            <div class="col" style="float: right; padding: 3px 0 0;">\r\n                                <div class="form-group">\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;"\r\n                                        *ngFor="let status of statusList">\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="currentStatus" class="form-control"\r\n                                                value="{{status.value}}" [(ngModel)]="currentStatus"\r\n                                                (change)="clearText(currentStatus); changeOfStatus(status.value, \'\')">\r\n                                            <span class="checkmark"></span>{{status.label}}\r\n                                        </label>\r\n                                    </div>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="currentStatusSo" class="form-control" value="0"\r\n                                                [(ngModel)]="currentStatus" checked="{{currentStatus == 0}}"\r\n                                                (change)="clearText(currentStatus); changeOfStatus(0, \'\')">\r\n                                            <span class="checkmark"></span>All\r\n                                        </label>\r\n                                    </div>\r\n                                    <div class="checkbox-cstm pull-right" style="margin-left: 0;">\r\n                                        <label style="width: auto !important;margin-top: 3px;">\r\n                                            \x3c!--  --\x3e\r\n                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent"\r\n                                                id="cparent" (click)="getDeleteListByStatus($event.target.checked)" />\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Show Deleted List\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col *ngFor="let col of columns" [ngStyle]="{\'width\': col.width}" />\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n                    <th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                    </th>\r\n                    <th style="width:100px;position:sticky !important">\r\n                        Actions\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th [ngStyle]="{\'width\': col.width}" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                        <ng-container *ngIf="col.field == \'status\'">\r\n                            <input *ngIf="col.field !== \'quoteDate\' \r\n                            && col.field !== \'openDate\'\r\n                            && col.field !== \'requestedDateType\' \r\n                            && col.field !== \'estimatedShipDateType\' \r\n                            && col.field !== \'createdDate\'\r\n                            && col.field !== \'updatedDate\'" #filterStatusInput [disabled]="col.field == \'status\' &&  currentStatus !=\'0\'"\r\n                            style="width:100%;" pInputText type="text"\r\n                            (input)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                          </ng-container>\r\n                          <ng-container *ngIf="col.field != \'status\'">\r\n                            <input *ngIf="col.field !== \'quoteDate\'\r\n                            && col.field !== \'openDate\'\r\n                            && col.field !== \'requestedDateType\' \r\n                            && col.field !== \'estimatedShipDateType\'  \r\n                            && col.field !== \'createdDate\'\r\n                            && col.field !== \'updatedDate\'" [disabled]="col.field == \'status\' &&  currentStatus !=\'0\'"\r\n                            style="width:100%;" pInputText type="text"\r\n                            (input)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                          </ng-container>\r\n                        <input type="date" *ngIf="col.field == \'quoteDate\'" name="quoteDate" style="width:100%;"\r\n                            (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                        <input type="date" *ngIf="col.field == \'createdDate\'" name="createdDate" style="width:100%;"\r\n                            (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                        <input type="date" *ngIf="col.field == \'updatedDate\'" name="updatedDate" style="width:100%;"\r\n                            (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                        <input type="date" *ngIf="col.field == \'openDate\'" name="openDate" style="width:100%;"\r\n                            (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                        <input type="date" *ngIf="col.field == \'requestedDateType\'" name="requestedDateType"\r\n                            style="width:100%;" (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                        <input type="date" *ngIf="col.field == \'estimatedShipDateType\'" name="estimatedShipDateType"\r\n                            style="width:100%;" (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n\r\n                        \x3c!-- <input style="width:100%;" pInputText type="text"\r\n                                (input)="dt.filter($event.target.value, col.field, \'contains\')"> --\x3e\r\n                    </th>\r\n                    <th style="width:100px;position:sticky !important"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData let-rowIndex="rowIndex" let-expanded="expanded"\r\n                let-columns="columns">\r\n                <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex" pReorderableRowHandle\r\n                    [pSelectableRowDblClick]="rowData">\r\n                    <td *ngFor="let col of columns" style="text-overflow: ellipsis;"\r\n                        [matTooltip]="mouseOverData(col.field,  rowData)" matTooltipPosition="above"\r\n                        [matTooltipDisabled]="rowData[\'partDescriptionType\'] != \'Multiple\' ||\r\n                                rowData[\'partNumberType\'] != \'Multiple\'  || \r\n                                rowData[\'requestedDateType\'] != \'Multiple\'||\r\n                                    rowData[\'estimatedShipDateType\'] != \'Multiple\'||\r\n                                    rowData[\'priorityType\'] != \'Multiple\'"\r\n                        [ngStyle]="{\'color\': getColorCodeForMultiple(rowData)}">\r\n                        \x3c!-- {{convertDate(col.field , rowData)}} --\x3e\r\n                        <span\r\n                            *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'">\r\n                                {{convertDate(col.field , rowData)}}\r\n                        </span>\r\n                        <span *ngIf="col.field == \'createdDate\' || col.field == \'updatedDate\'">\r\n                                {{convertDate(col.field , rowData) | date: \'MM/dd/yyyy h:mm a \'}}\r\n                        </span>\r\n                    </td>\r\n                    <td style="width: 100px">\r\n\r\n                        <div *ngIf="currentDeletedstatus==false">\r\n                            <span>\r\n                                <a class="btn nobg" (click)="viewSelectedRow(viewOrder,rowData)" matTooltip="View"\r\n                                    matTooltipPosition="above"><i class="fa fa-eye"></i></a>\r\n                            </span>\r\n                            <span>\r\n                                <a class="btn nobg" (click)="openOrderToEdit(rowData)" matTooltip="Edit"\r\n                                    matTooltipPosition="above">\r\n                                    <i class="fa fa-pencil"></i>\r\n                                </a>\r\n                            </span>\r\n                            <span>\r\n                                <a class="btn nobg" (click)="openDelete(content,rowData)" matTooltip="Delete"\r\n                                    matTooltipPosition="above">\r\n                                    <i class="fa fa-trash"></i>\r\n                                </a>\r\n                            </span>\r\n                            <span data-toggle="modal" data-target="#soHistory">\r\n                                <a class="btn nobg btn-hist-cstm" (click)="getAuditHistoryById(rowData)"\r\n                                    matTooltip="History" matTooltipPosition="above"><i class="fa fa-history"></i></a>\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div *ngIf="currentDeletedstatus==true">\r\n                            <span>\r\n                                <a class="btn nobg" (click)="viewSelectedRow(viewOrder,rowData)" matTooltip="View"\r\n                                    matTooltipPosition="above"><i class="fa fa-eye"></i></a>\r\n                            </span>\r\n                            <span data-toggle="modal" data-target="#soHistory">\r\n                                <a class="btn nobg btn-hist-cstm" (click)="getAuditHistoryById(rowData)" matTooltip="History"\r\n                                  matTooltipPosition="above"><i class="fa fa-history"></i></a>\r\n                              </span>\r\n                            <span><a class="btn nobg" (click)="restore(restoreIdSo,rowData);"\r\n                                    matTooltip="Restore Record" matTooltipPosition="above"><i class="fa fa-undo"\r\n                                        aria-hidden="true"></i></a> </span>\r\n\r\n                        </div>\r\n                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete"\r\n                                matTooltipPosition="above" (click)="openDelete(content,sale)">\r\n                                <mat-icon color="warn">delete</mat-icon>\r\n                            </button> --\x3e\r\n\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="sales.length == 0">\r\n                <tr>\r\n                    <td [attr.colspan]="10" style="color: red; font-weight: bold; text-align: center">\r\n                        No records found\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer" class="footer">Total:</label>\r\n                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer" class="footer1">Pages Count:</label>\r\n\r\n                <input style="width: 5%;" [ngModel]="totalPages" [disabled]="true" pInputText type="text" />\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n<div class="modal fade" id="downloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n            </div>\r\n            <div class="modal-body" *ngIf="targetData">\r\n                <strong>\r\n                    <span>\r\n                        You are attempting to export {{targetData.totalRecords}} of records.\r\n                    </span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary"\r\n                    (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):exportCSV(targetData); closeDeleteModal();">Confirm</button>\r\n                <button type="button" class="btn btn-danger" (click)="closeDeleteModal()">Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #content let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <h6 class="modal-body">SO Number : {{selectedSalesOrderToDelete}}</h6>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="deleteQuote()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n\r\n</ng-template>\r\n<ng-template #restoreIdSo let-c="close" let-d="dismiss" data-backdrop="static">\r\n\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <h6 class="modal-body">SO Number : {{restorerecord.salesOrderNumber}}</h6>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n</ng-template>\r\n<ng-template #viewOrder let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" (click)="dismissModel()">\r\n            &times;\r\n        </button>\r\n        <h4 class="modal-title">Details of Sales Order</h4>\r\n    </div>\r\n\r\n    <div class="modal-body">\r\n        <app-sales-order-view [customerId]="customerId" [salesOrderId]="salesOrderId" [salesOrderView]="salesOrderView">\r\n        </app-sales-order-view>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n\x3c!-- <div class="preloader loader-position" *ngIf="isSpinnerVisible">\r\n    <div class="loader-css loader-align">\r\n        <img src="../../../../assets/images/loader.gif" />\r\n    </div>\r\n</div> --\x3e\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id="soHistory" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="closeHistoryModal()">&times;</button>\r\n                <h4 class="modal-title">History of Sales Order</h4>\r\n            </div>\r\n            <div class="modal-body" *ngIf="auditHistory">\r\n                <div class="table-responsive">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Quote Num</th>\r\n                                <th>Status</th>\r\n                                <th>SO Num</th>\r\n                                <th>Customer Name</th>\r\n                                <th>Customer Type</th>\r\n                                <th>Cust Ref</th>\r\n                                <th>Priority</th>\r\n                                <th>Salesperson</th>\r\n                                <th>Created Date</th>\r\n                                <th>Created By</th>\r\n                                <th>Modified Date</th>\r\n                                <th>Modified By</th>\r\n                                <th>Is Deleted</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody class="audithistory-cstm">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                <td\r\n                                    [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'salesOrderQuoteNumber\', audit.salesOrderQuoteNumber)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.salesOrderQuoteNumber}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'status\', audit.status)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.status}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'salesOrderNumber\', audit.salesOrderNumber)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.salesOrderNumber}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'customerName\', audit.customerName)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.customerName}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'customerType\', audit.customerType)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.customerType}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'customerReference\', audit.customerReference)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.customerReference}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'priority\', audit.priorityType)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.priority}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'salesPerson\', audit.salesPerson)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.salesPerson}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'createdBy\', audit.createdBy)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.createdBy}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'createdDate\', audit.createdDate)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'updatedDate\', audit.updatedDate)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'updatedBy\', audit.updatedBy)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.updatedBy}}</td>\r\n                                <td>\r\n                                    <p style="background-color: #fff !important;"> <input type="checkbox"\r\n                                            name="isDeleted" [(ngModel)]="audit.isDeleted" disabled></p>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="preloader" style="z-index: 10000;" *ngIf="isSpinnerVisible">\r\n                <div class="loading">\r\n                    <div class="lds-roller">\r\n                        <div>\r\n                        </div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <app-spinner *ngIf="isSpinnerVisible"></app-spinner>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" (click)="closeHistoryModal()">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},poJz:function(e,t,r){"use strict";r.r(t),t.default="<h4>Under construction....</h4>\r\n"},q5Ih:function(e,t,r){"use strict";r.r(t),t.default='<div class="right_col" role="main">\r\n    <div class="x_content">\r\n        <div class="card new-card">\r\n            <div class="card-header bg-primary new-card-header">\r\n                <div class="row">\r\n                    <div class="col">\r\n                        <h4 class="new-card-heading">{{id ? \'Edit\' : \'Create\'}} Sales Order Quote</h4>\r\n                    </div>\r\n                    <div class="col-md-8">\r\n                        <button class="btn-sm new-btn-primary pull-left" (click)="expandHeader()">\r\n                            {{toggle_po_header ? \'Collapse\' : \'Expand\'}}\r\n                        </button>\r\n                    </div>\r\n                    <div>\r\n                        <button type="button" class="btn-sm new-btn-primary pull-right" matTooltipPosition="above"\r\n                            matTooltip=" SO Quote List" [routerLink]="[\'/salesmodule/salespages/sales-quote-list\']">\r\n                            SO Quote List\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div class="card" style="padding: 5px; margin: 5px;" *ngIf="!toggle_po_header">\r\n                <div class="form-row">\r\n                    <div class="form-row">\r\n                        <div class="col-md-3" style="padding-left:15px;">\r\n                            <div class="form-group">\r\n                                <label>Customer Name\r\n                                    <span class="clr-red">*</span>\r\n                                    <span style="color:blue" class="ng-star-inserted">\r\n                                        <a class="btn nobg" (click)="viewSelectedRow()" matTooltip="View"\r\n                                            matTooltipPosition="above"><i class="fa fa-eye"></i></a>\r\n                                    </span>\r\n                                </label>\r\n                                <input type="text" [(ngModel)]="salesQuote.customerName" name="customerName"\r\n                                    class="form-control" [disabled]="true" id="customerName" #customerName="ngModel" />\r\n                                <div *ngIf="customerName.invalid && (customerName.dirty || customerName.touched)"\r\n                                    class="alert alert-danger alert-danger-cstm">\r\n                                    <div *ngIf="customerName.errors.required">\r\n                                        <small>Customer Name is required </small>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3" style="padding-left:25px; padding-top:5px">\r\n                            <div class="form-group">\r\n                                <label>Customer Code</label>\r\n                                <input type="text" [(ngModel)]="salesQuote.customerCode" name="customerCode"\r\n                                    class="form-control" [disabled]="true" id="customerCode" #customerCode="ngModel" />\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3" style="padding-left:25px; padding-top:5px">\r\n                            <div class="form-group">\r\n                                <label>SO Quote Num</label>\r\n                                <input type="text" [(ngModel)]="salesQuote.salesOrderQuoteNumber"\r\n                                    name="salesOrderQuoteNumber" class="form-control" [disabled]="true"\r\n                                    id="salesOrderQuoteNumber" #salesOrderQuoteNumber="ngModel" />\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3" style="padding-left:25px; padding-top:5px">\r\n                            <div class="form-group" *ngIf="isEdit">\r\n                                <label>Version Num</label>\r\n                                <input type="text" [(ngModel)]="salesQuote.versionNumber" name="versionNumber"\r\n                                    class="form-control" [disabled]="true" id="versionNumber"\r\n                                    #versionNumber="ngModel" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="form-controls">\r\n                <form #newSalesQuoteForm="ngForm" class="form-horizontal">\r\n                    <div class="card" style="padding: 5px; margin: 5px;" *ngIf="toggle_po_header">\r\n                        <div class="form-row">\r\n                            <div class="col-md-6 main_ar">\r\n                                <div class="form-row">\r\n                                    <div class="col-md-6" style="padding:10px;">\r\n                                        <div class="form-group">\r\n                                            <label>Quote Type <span class="clr-red">*</span></label>\r\n                                            <select name="quoteTypeId" required [(ngModel)]="salesQuote.quoteTypeId"\r\n                                                [disabled]="true" id="quoteTypeId" #quoteTypeId="ngModel">\r\n                                                <option *ngFor="let type of salesQuote.salesQuoteTypes"\r\n                                                    [ngValue]="type.id">\r\n                                                    {{ type.name }}\r\n                                                </option>\r\n                                            </select>\r\n                                            <div *ngIf="quoteTypeId.invalid && (quoteTypeId.dirty || quoteTypeId.touched)"\r\n                                                class="alert alert-danger alert-danger-cstm">\r\n                                                <div *ngIf="quoteTypeId.errors.required">\r\n                                                    <small> Quote Type is required </small>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="form-group" style="padding-top:5px;">\r\n                                            <label>SO Quote Num</label>\r\n                                            <input type="text" [(ngModel)]="salesQuote.salesOrderQuoteNumber"\r\n                                                name="salesOrderQuoteNumber" class="form-control" [disabled]="true"\r\n                                                id="salesOrderQuoteNumber" #salesOrderQuoteNumber="ngModel" />\r\n                                        </div>\r\n                                        <div class="form-group" *ngIf="isEdit">\r\n                                            <label>Version Num</label>\r\n                                            <input type="text" [(ngModel)]="salesQuote.versionNumber"\r\n                                                name="versionNumber" class="form-control" [disabled]="true"\r\n                                                id="versionNumber" #versionNumber="ngModel" />\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Open Date<span class="clr-red">*</span></label>\r\n                                            <p-calendar name="openDate" [(ngModel)]="salesQuote.openDate"\r\n                                                [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                                [showIcon]="true" id="openDate" #openDate="ngModel" required\r\n                                                (onSelect)="onChangeOpenDate()">\r\n                                            </p-calendar>\r\n                                            <div *ngIf="openDate.invalid && (openDate.dirty || openDate.touched)"\r\n                                                class="alert alert-danger alert-danger-cstm">\r\n                                                <div *ngIf="openDate.errors.required">\r\n                                                    <small> Open Date is required </small>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Customer Ref<span class="clr-red">*</span></label>\r\n                                            <input type="text" required name="customerReferenceName"\r\n                                                id="customerReferenceName" #customerReferenceName="ngModel"\r\n                                                class="form-control" [(ngModel)]="salesQuote.customerReferenceName"\r\n                                                (change)="onChangeInput()" autocomplete=" off" />\r\n                                            <div *ngIf="customerReferenceName.invalid && (customerReferenceName.dirty || customerReferenceName.touched)"\r\n                                                class="alert alert-danger alert-danger-cstm">\r\n                                                <div *ngIf="customerReferenceName.errors.required">\r\n                                                    <small>Customer Ref is required </small>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Quote Exp Date<span class="clr-red">*</span></label>\r\n                                            <p-calendar name="quoteExpiryDate" [(ngModel)]="salesQuote.quoteExpiryDate"\r\n                                                [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                                [showIcon]="true" id="quoteExpiryDate" #quoteExpiryDate="ngModel"\r\n                                                required [disabled]="true" (onSelect)="onChangeQuoteExpiryDate()">\r\n                                            </p-calendar>\r\n                                            <div *ngIf="quoteExpiryDate.invalid && (quoteExpiryDate.dirty || quoteExpiryDate.touched)"\r\n                                                class="alert alert-danger alert-danger-cstm">\r\n                                                <div *ngIf="quoteExpiryDate.errors.required">\r\n                                                    <small>Quote Exp Date is required </small>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="form-group"> \r\n                                            <label>Employee<span class="clr-red">*</span></label>\r\n                                            <p-autoComplete field="label" class="autocomp-customer-cstm" name="employeeId"\r\n                                                [(ngModel)]="salesQuote.employeeId" [suggestions]="firstCollection"\r\n                                                [forceSelection]="true" emptyMessage="No Match Found" field="label"\r\n                                                (completeMethod)="filterfirstName($event)" [size]="30" [minLength]="1"\r\n                                                [dropdown]="true" #employeeName="ngModel" required>\r\n                                            </p-autoComplete>\r\n                                            <div *ngIf="employeeName.invalid && (employeeName.dirty || employeeName.touched)"\r\n                                                class="alert alert-danger alert-danger-cstm">\r\n                                                <div *ngIf="employeeName.errors.required">\r\n                                                    <small>Employee is required </small>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-6" style="padding:10px">\r\n                                        <div class="form-group">\r\n                                            <label>Account Type <span class="clr-red">*</span></label>\r\n                                            <select name="accountTypeId" required [(ngModel)]="salesQuote.accountTypeId"\r\n                                                [disabled]="true" id="accountTypeId" #accountTypeId="ngModel">\r\n                                                <option *ngFor="let accountType of accountTypes"\r\n                                                    [ngValue]="accountType.value">\r\n                                                    {{ accountType.label }}\r\n                                                </option>\r\n                                            </select>\r\n                                            <div *ngIf="accountTypeId.invalid && (accountTypeId.dirty || accountTypeId.touched)"\r\n                                                class="alert alert-danger alert-danger-cstm">\r\n                                                <div *ngIf="accountTypeId.errors.required">\r\n                                                    <small> Account Type is required </small>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Customer Name\r\n                                                <span class="clr-red">*</span>\r\n                                                <span style="color:blue" class="ng-star-inserted">\r\n                                                    <a class="btn nobg" (click)="viewSelectedRow()" matTooltip="View"\r\n                                                        matTooltipPosition="above"><i class="fa fa-eye"></i></a>\r\n                                                </span>\r\n                                            </label>\r\n                                            <input type="text" [(ngModel)]="salesQuote.customerName" name="customerName"\r\n                                                class="form-control" [disabled]="true" id="customerName"\r\n                                                #customerName="ngModel" />\r\n                                            <div *ngIf="customerName.invalid && (customerName.dirty || customerName.touched)"\r\n                                                class="alert alert-danger alert-danger-cstm">\r\n                                                <div *ngIf="customerName.errors.required">\r\n                                                    <small>Customer Name is required </small>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Customer Contact<span class="clr-red">*</span></label>\r\n                                            <select [(ngModel)]="salesQuote.customerContactId" required\r\n                                                [ngModelOptions]="{standalone: true}" name="customerContactId"\r\n                                                (change)="onChangeInput()" id="customerContactId"\r\n                                                #customerContactId="ngModel">\r\n                                                <option value=\'0\' selected>--Select</option>\r\n                                                <option *ngFor="let contact of customerContactList"\r\n                                                    [ngValue]="contact.customerContactId">\r\n                                                    {{contact.firstName}} {{contact.lastName}} -\r\n                                                    {{ contact.workPhone }}\r\n                                                </option>\r\n                                            </select>\r\n                                            <div *ngIf="customerContactId.invalid && (customerContactId.dirty || customerContactId.touched)"\r\n                                                class="alert alert-danger alert-danger-cstm">\r\n                                                <div *ngIf="customerContactId.errors.required">\r\n                                                    <small>Customer Contact is required </small>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Cust Email </label>\r\n                                            <input type="text" [(ngModel)]="salesQuote.customerEmail"\r\n                                                name="customerEmail" class="form-control" [disabled]="true"\r\n                                                id="customerEmail" #customerEmail="ngModel" />\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Contract Ref</label>\r\n                                            <input type="text" class="form-control" name="contractReferenceName"\r\n                                                [(ngModel)]="salesQuote.contractReferenceName"\r\n                                                (change)="onChangeInput()" [disabled]="true" />\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Credit Limit &amp; terms</label>\r\n                                            <div class="col-md-5">\r\n                                                <input type="text" class="form-control" style="text-align:right;"\r\n                                                    name="creditLimit"\r\n                                                    [ngModel]="salesQuote.creditLimit | twoDecimalGlobalNumberFormatPipe"\r\n                                                    (ngModelChange)="salesQuote.creditLimit=$event" [disabled]="true" />\r\n                                            </div>\r\n                                            <div class="col-md-7">\r\n                                                <select name="creditLimitTermsId" class="form-control"\r\n                                                    [(ngModel)]="salesQuote.creditLimitTermsId" [disabled]="true">\r\n                                                    <option value=\'0\'>--Select</option>\r\n                                                    <option *ngFor="let ct of creditTerms" [ngValue]="ct.value">\r\n                                                        {{ ct.label }}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="form-group" style="padding-top: 24px">\r\n                                            <label>Valid For (Days)<span class="clr-red">*</span></label>\r\n                                            <input type="number" name="validForDays"\r\n                                                [(ngModel)]="salesQuote.validForDays"\r\n                                                style="text-align:right; width:112px" id="validForDays"\r\n                                                #validForDays="ngModel" required (change)="onChangeValidForDays()"\r\n                                                class="form-control" />\r\n                                            <div *ngIf="validForDays.invalid && (validForDays.dirty || validForDays.touched)"\r\n                                                class="alert alert-danger alert-danger-cstm">\r\n                                                <div *ngIf="validForDays.errors.required">\r\n                                                    <small> Valid For (Days) is required </small>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-6 main_ar">\r\n                                <div class="form-row">\r\n                                    <div class="col-md-6" style="padding:10px; padding-top:5px">\r\n                                        <div class="form-group" style="padding:12px">\r\n                                            <label></label>\r\n                                            <div class="col-md-6">\r\n                                                <label>\r\n                                                    <input type="checkbox" [(ngModel)]="salesQuote.restrictPMA"\r\n                                                        name="restrictPMA" id="restrictPMA" [disabled]="true" />\r\n                                                    Restrict PMA\r\n                                                </label>\r\n                                            </div>\r\n                                            <div class="col-md-6">\r\n                                                <label>\r\n                                                    <input type="checkbox" [(ngModel)]="salesQuote.restrictDER"\r\n                                                        name="restrictDER" id="restrictDER" [disabled]="true" />\r\n                                                    Restrict DER\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="form-group" style="padding-top: 10px">\r\n                                            <label>Sales Person/Agent</label>\r\n                                            <p-autoComplete class="autocomp-customer-cstm" name="salesPersonName"\r\n                                                [(ngModel)]="salesQuote.salesPersonName"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                [suggestions]="salesFirstCollection" [forceSelection]="true"\r\n                                                emptyMessage="No Match Found" field="name"\r\n                                                (completeMethod)="filterSalesFirstName($event)" [size]="30"\r\n                                                [minLength]="1" [dropdown]="true">\r\n                                            </p-autoComplete>\r\n                                        </div>\r\n                                        <div class="form-group" style="padding-top:4px;">\r\n                                            <label>CSR</label>\r\n                                            <p-autoComplete class=" autocomp-customer-cstm"\r\n                                                name="customerServiceRepName"\r\n                                                [(ngModel)]="salesQuote.customerServiceRepName"\r\n                                                [suggestions]="csrFirstCollection" [forceSelection]="true"\r\n                                                emptyMessage="No Match Found" field="name"\r\n                                                (completeMethod)="filtercsrFirstName($event)" [size]="30"\r\n                                                [minLength]="1" [dropdown]="true">\r\n                                            </p-autoComplete>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Lead Source</label>\r\n                                            <select name="leadSource" [(ngModel)]="salesQuote.leadSourceId"\r\n                                                (change)="onChangeInput()">\r\n                                                <option value="null" selected>--Select</option>\r\n                                                <option *ngFor="let ls of leadSources" [ngValue]="ls.value">\r\n                                                    {{ ls.label }}</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Probability (%)</label>\r\n                                            <select name="probability" [(ngModel)]="salesQuote.probabilityId"\r\n                                                (change)="onChangeInput()">\r\n                                                <option value="null" selected>--Select</option>\r\n                                                <option *ngFor="let p of percents" [ngValue]="p.value">\r\n                                                    {{ p.label }}</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>SO Quote Status<span class="clr-red">*</span></label>\r\n                                            <div class="col-md-6">\r\n                                                <input type="text" class="form-control"\r\n                                                    [ngModel]="salesQuote.statusName" name="salesQuoteStatus"\r\n                                                    [disabled]="true" />\r\n                                            </div>\r\n                                            <div class="col-md-6">\r\n                                                <p-calendar name="statusChangeDate" [yearNavigator]="true"\r\n                                                    [monthNavigator]="true" yearRange="1900:2100"\r\n                                                    [(ngModel)]="salesQuote.statusChangeDate" [showIcon]="true"\r\n                                                    id="statusChangeDate" #statusChangeDate="ngModel" required\r\n                                                    [disabled]="true">\r\n                                                </p-calendar>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-6" style="padding:10px">\r\n                                        <div class="card">\r\n                                            <div class="card-header" style="padding:.3rem 1rem">\r\n                                                <label style="text-align: center">Margin Summary</label>\r\n                                            </div>\r\n                                            <div>\r\n                                                <label\r\n                                                    style="padding-left: 5px; padding-right:5px; font-weight: normal">Sales<span\r\n                                                        style="float: right">{{marginSummary.sales | twoDecimalGlobalNumberFormatPipe}}</span></label>\r\n                                                <label\r\n                                                    style="padding-left: 5px; padding-right:5px; font-weight: normal">Misc\r\n                                                    Amt<span\r\n                                                        style="float: right">{{marginSummary.misc | twoDecimalGlobalNumberFormatPipe}}</span></label>\r\n                                                <label\r\n                                                    style="padding-left: 5px; padding-right:5px; font-weight: normal">Net\r\n                                                    Sales<span\r\n                                                        style="float: right">{{marginSummary.netSales | twoDecimalGlobalNumberFormatPipe}}</span></label>\r\n                                                <label\r\n                                                    style="padding-left: 5px; padding-right:5px; font-weight: normal">Product\r\n                                                    Cost<span\r\n                                                        style="float: right">{{marginSummary.productCost | twoDecimalGlobalNumberFormatPipe}}</span></label>\r\n                                                <label\r\n                                                    style="padding-left: 5px; padding-right:5px; font-weight: normal">Margin\r\n                                                    Amt<span\r\n                                                        style="float: right">{{marginSummary.marginAmount | twoDecimalGlobalNumberFormatPipe}}</span></label>\r\n                                                <label\r\n                                                    style="padding-left: 5px; padding-right:5px; font-weight: normal">Margin\r\n                                                    %<span\r\n                                                        style="float: right">{{marginSummary.marginPercentage | twoDecimalGlobalNumberFormatPipe}}</span></label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div style="padding: 10px"></div>\r\n                                        <div>\r\n                                            \x3c!-- <app-management-structure [salesQuote]="salesQuote"\r\n                                                [managementStructureId]="currentUserManagementStructureId">\r\n                                            </app-management-structure> --\x3e\r\n                                            <div class="card" style="margin-top: 20px;">\r\n                                                <div class="card-header" style="padding: 10px 12px;">\r\n                                                    <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure\r\n                                                        <span class="clr-red">*</span></h5>\r\n\r\n                                                </div>\r\n                                                <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                                    <div class="form-group">\r\n                                                        <select\r\n                                                            [ngClass]="managementValidCheck ? \'select-validate-cstm\' : \'\'"\r\n                                                            class="form-control" name="primaryCompany"\r\n                                                            [(ngModel)]="salesQuote.companyId"\r\n                                                            (change)="getBUList(salesQuote.companyId); checkValidOnChange(salesQuote.companyId, \'companyId\');"\r\n                                                            #mCompanyName (ngModelChange)="enableHeaderSave()" required>\r\n                                                            <option value="0">Select</option>\r\n                                                            <option *ngFor="let name of maincompanylist"\r\n                                                                [ngValue]="name.value">{{name.label}}</option>\r\n                                                        </select>\r\n                                                        <div *ngIf="mCompanyName.invalid && (mCompanyName.dirty || mCompanyName.touched)"\r\n                                                            class="alert alert-danger alert-danger-cstm">\r\n                                                            <div *ngIf="mCompanyName.errors.required">\r\n                                                                <small> Company Name is required </small>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="form-group">\r\n                                                        <select [(ngModel)]="salesQuote.buId" name="primaryBU"\r\n                                                            (change)="getDivisionlist(salesQuote.buId)"\r\n                                                            class="form-control" (ngModelChange)="enableHeaderSave()">\r\n                                                            <option value="0">Select</option>\r\n                                                            <option *ngFor="let name of bulist" [ngValue]="name.value">\r\n                                                                {{name.label}}</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div class="form-group">\r\n                                                        <select class="form-control" [(ngModel)]="salesQuote.divisionId"\r\n                                                            name="primaryDivision"\r\n                                                            (change)="getDepartmentlist(salesQuote.divisionId)"\r\n                                                            (ngModelChange)="enableHeaderSave()">\r\n                                                            <option value="0">Select</option>\r\n                                                            <option *ngFor="let name of divisionlist"\r\n                                                                [ngValue]="name.value">{{name.label}}</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div class="form-group">\r\n                                                        <select class="form-control"\r\n                                                            [(ngModel)]="salesQuote.departmentId" name="primaryDept"\r\n                                                            (change)="getDepartmentId(salesQuote.departmentId)"\r\n                                                            (ngModelChange)="enableHeaderSave()">\r\n                                                            <option value="0">Select</option>\r\n                                                            <option *ngFor="let name of departmentList"\r\n                                                                [ngValue]="name.value">{{name.label}}</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-row mb-2">\r\n                            <div class="col-md-4 main_ar">\r\n                                <div class="form-group" style="padding-left: 5px;">\r\n                                    <label>Customer Warning</label>\r\n                                    <textarea name="warningId" class="form-control"\r\n                                        style="height: 100px !important; width:90% !important; color: #d42c2c !important;"\r\n                                        disabled\r\n                                        value="{{customerWarning.warningMessage}}">{{customerWarning.warningMessage}}</textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-4 main_ar">\r\n                                <div class="form-group memo-popup-cstm">\r\n                                    <label>\r\n                                        Notes<i class="fa fa-pencil" data-toggle="modal" data-target="#add-description"\r\n                                            matTooltipPosition="above" matTooltip="Notes"\r\n                                            (click)="onAddDescription(\'notes\')"></i>\r\n                                    </label>\r\n                                    <span>\r\n                                        <div class="form-group memo-popup-cstm mat_emo">\r\n                                            <div [innerHTML]="salesQuote.notes"\r\n                                                [matTooltip]="parsedText(salesQuote.notes)" class="form-control"\r\n                                                style="height: 100px !important; width:90% !important"\r\n                                                class="text_editor_box">\r\n                                            </div>\r\n                                        </div>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-4 main_ar">\r\n                                <div class="form-group memo-popup-cstm">\r\n                                    <label>\r\n                                        Memo<i class=" fa fa-pencil" data-toggle="modal" data-target="#add-description"\r\n                                            matTooltipPosition="above" matTooltip="Memo"\r\n                                            (click)="onAddDescription(\'memo\')"></i>\r\n                                    </label>\r\n                                    <span>\r\n                                        <div class="form-group memo-popup-cstm mat_emo">\r\n                                            <div [innerHTML]="salesQuote.memo"\r\n                                                [matTooltip]="parsedText(salesQuote.memo)" class="form-control"\r\n                                                style="height: 100px !important;width:90%" class="text_editor_box">\r\n                                            </div>\r\n                                        </div>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-12">\r\n                            <button type="submit" *ngIf="!isEdit && !isCreateModeHeader" (click)="onSubmit(true)"\r\n                                [disabled]="!newSalesQuoteForm.form.valid"\r\n                                class="btn pull-right submit-btn btn btn-primary">\r\n                                Save\r\n                            </button>\r\n                            <button type="submit" *ngIf="((isEdit && !isCreateModeHeader))||isHeaderSubmit"\r\n                                (click)="openConfirmationModal(true)" [disabled]="enableUpdateButton"\r\n                                class="btn pull-right submit-btn btn btn-primary">\r\n                                Update\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div class="card" style="padding: 5px; margin: 5px;" *ngIf="isEdit">\r\n                        <div class="x_panel">\r\n                            <button type="button" (click)="initiateSalesOrderCoversion()"\r\n                                [disabled]="verifySalesOrderQuoteObj.canCovertToSalesOrder == false"\r\n                                class="btn btn-primary">\r\n                                Create SO\r\n                            </button>\r\n                            <button type="button" class="btn btn-primary" (click)="inititateEmailQuote()">\r\n                                Email Quote\r\n                            </button>\r\n                            <button type="button" class="btn btn-primary" (click)="initiateQuoteCopying()">\r\n                                Make Duplicate\r\n                            </button>\r\n                            <a class="btn btn-primary" (click)="initiatePrintProcess()">Print Quote </a>\r\n                            <a class="btn btn-primary" (click)="initiateCreatingNewQuote()">New Quote</a>\r\n                            <span class="btn btn-primary" (click)="initiateClosingSalesOrderQuote()">Close</span>\r\n                            \x3c!-- <p-splitButton label="Communication" class="btn btn-primary btn"\r\n                                [model]="communicationItems">\r\n                            </p-splitButton> --\x3e\r\n                        </div>\r\n                    </div>\r\n                    <ng-container *ngIf="((isCreateModeHeader||isEdit) && isEmailTabEnabled)">\r\n                        <button type="button" (click)="isEmailTabEnabled = false"\r\n                            class="btn pull-right submit-btn btn btn-danger">\r\n                            Close\r\n                        </button>\r\n                        <div class="clearfix mb-1"></div>\r\n                    </ng-container>\r\n                    <ng-container *ngIf="((isCreateModeHeader||isEdit) && !isEmailTabEnabled)">\r\n                        <p-tabView class="pas-tabview" (onChange)="onTabChange($event)">\r\n                            <p-tabPanel header="Parts List" [selected]="true">\r\n                                <app-sales-part-number [salesQuote]="salesQuote" [salesQuoteView]="salesQuoteView"\r\n                                    [isViewMode]="false" (on-parts-save)="onPartsSaveEvent($event)"\r\n                                    [customer]="customerDetails" [totalFreights]="totalFreights"\r\n                                    [totalCharges]="totalCharges" [defaultSettingPriority]="defaultSettingPriority">\r\n                                </app-sales-part-number>\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Internal Approvers">\r\n                                <app-sales-approve>\r\n                                </app-sales-approve>\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Approver Process">\r\n\r\n                                <app-sales-customer-approvals *ngIf="isEdit == true" [salesQuoteView]="salesQuoteView"\r\n                                    [isViewMode]="false" [customerContactList]="customerContactList"\r\n                                    [marginSummary]="marginSummary" (quoteApprovedCheck)="verifySalesQuoteConversion(null)"\r\n                                    (on-quote-parts-approved-event)="onPartsApprovedEvent($event)">\r\n                                </app-sales-customer-approvals>\r\n\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Address">\r\n                                <app-address-component [addressType]="addressType" [id]="SalesOrderQuoteId">\r\n\r\n                                </app-address-component>\r\n                                \x3c!-- <app-sales-address [customerId]="customerId" [salesQuoteView]="salesQuoteView"\r\n                                    [salesQuote]="salesQuote" [salesOrderQuote]="salesOrderQuote"></app-sales-address> --\x3e\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Freight">\r\n                                <app-sales-order-quote-freight [freightForm]="freight" [customerId]="customerId"\r\n                                    [salesOrderQuoteId]="salesQuote.salesOrderQuoteId"\r\n                                    (saveFreightListForSO)="saveSalesOrderFreightsList($event)"\r\n                                    (updateFreightListForSO)="updateSalesOrderFreightsList($event)"\r\n                                    (refreshData)="getFreightList()" [markupList]="markupList" [isView]="false"\r\n                                    [isQuote]="true" [buildMethodDetails]="buildMethodDetails">\r\n                                </app-sales-order-quote-freight>\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Charges">\r\n                                <app-sales-order-quote-charges [chargeForm]="charge" [customerId]="customerId"\r\n                                    [salesOrderQuoteId]="salesQuote.salesOrderQuoteId"\r\n                                    (saveChargesListForSO)="saveSalesOrderChargesList($event)"\r\n                                    (updateChargesListForSO)="updateSalesOrderChargesList($event)"\r\n                                    (refreshData)="getChargesList()" [markupList]="markupList" [isView]="false"\r\n                                    [isQuote]="true">\r\n                                </app-sales-order-quote-charges>\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Document">\r\n                                \x3c!-- <app-salesQuote-documents [viewMode]="false" [salesOrderQuoteId]="id"\r\n                                    [isEditMode]="true">\r\n                                </app-salesQuote-documents> --\x3e\r\n                                <app-common-documents [moduleName]="moduleName" [referenceId]="id" [isViewMode]="false"\r\n                                    [offLineUpload]="true"></app-common-documents>\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Analysis"> \r\n                                <app-sales-quote-analysis>\r\n                                </app-sales-quote-analysis>\r\n                            </p-tabPanel>\r\n                            <p-tabPanel header="Communication">\r\n                                \x3c!-- [ContactList]="customerContactList" --\x3e\r\n                              <app-communication [isViewMode]="false" [type]="1" [moduleName]="moduleName" [idForContact]="customerId"  [referenceId]="id"></app-communication>\r\n                            </p-tabPanel> \r\n\r\n                        </p-tabView>\r\n                    </ng-container>\r\n\r\n                    <ng-container *ngIf="((isCreateModeHeader||isEdit) && isEmailTabEnabled)">\r\n\r\n                        <div *ngIf="(selectedCommunicationTab == \'memo\')">\r\n                            <app-m-memo [salesQuoteId]="id" [selectedParts]="selectedParts"\r\n                                [customerInfoFromSalesQuote]="customerInfoFromSalesQuote"\r\n                                [customerContactList]="customerContactList"></app-m-memo>\r\n                        </div>\r\n\r\n                        <div *ngIf="(selectedCommunicationTab == \'text\')">\r\n                            <app-text [salesQuoteId]="id" [selectedParts]="selectedParts"\r\n                                [customerInfoFromSalesQuote]="customerInfoFromSalesQuote"\r\n                                [customerContactList]="customerContactList"></app-text>\r\n                        </div>\r\n                        <div *ngIf="(selectedCommunicationTab == \'phone\')">\r\n                            <app-phone [salesQuoteId]="id" [selectedParts]="selectedParts"\r\n                                [customerInfoFromSalesQuote]="customerInfoFromSalesQuote"\r\n                                [customerContactList]="customerContactList"></app-phone>\r\n                        </div>\r\n                        <div *ngIf="(selectedCommunicationTab == \'email\')">\r\n                            <app-e-email [salesQuoteId]="id" [customerInfoFromSalesQuote]="customerInfoFromSalesQuote"\r\n                                [customerContactList]="customerContactList"></app-e-email>\r\n                        </div>\r\n                        <div *ngIf="(selectedCommunicationTab == \'Quotemail\')">\r\n                            <app-email [salesQuoteId]="id" [customerInfoFromSalesQuote]="customerInfoFromSalesQuote"\r\n                                [customerContactList]="customerContactList"></app-email>\r\n                        </div>\r\n                        <div class="clearfix mb-1"></div>\r\n                    </ng-container>\r\n\r\n                    <div class="card-footer" style="text-align: right;">\r\n                        <div class="col-md-1 col-sm-1 col-1">\r\n                            &nbsp;\r\n                        </div>\r\n                        <div class="col-md-11 col-sm-11 col-11">\r\n\r\n\r\n                            <button type="submit" *ngIf="!isEdit && isCreateModeHeader" (click)="onSubmit(false)"\r\n                                class="btn pull-right submit-btn btn btn-primary">\r\n                                Submit\r\n                            </button>\r\n                            \x3c!-- <button type="submit" *ngIf="isEdit && !isCreateModeHeader"\r\n                                (click)="openConfirmationModal(false)"\r\n                                class="btn pull-right submit-btn btn btn-primary">\r\n                                Update\r\n                            </button> --\x3e\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="add-description" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-lg" style="max-width: 400px !important;">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Edit {{tempMemoLabel}}</h4>\r\n            </div>\r\n\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                        <th style="color: #fff;">{{tempMemoLabel}}</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <p-editor [(ngModel)]="tempMemo" [style]="{\'height\':\'320px\'}" name="tempMemo" required>\r\n                                </p-editor>\r\n\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div style="float:right">\r\n\r\n\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal" style="margin-top: 10px;"\r\n                        (click)="onSaveDescription()">\r\n                        Save\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger" style="margin-top: 10px;" data-dismiss="modal">\r\n                        Close\r\n                    </button>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #errorMessagePop let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeErrorMessage()">&times;</button>\r\n        <h4 class="modal-title"> Please Enter (*) Mandatory Fields</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <p *ngFor="let error of errorMessages" [ngStyle]="{\'color\':\'red\'}"> {{ error }} </p>\r\n    </div>\r\n    <div class="modal-footer">\r\n\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeErrorMessage()">Close</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #emailQuotePopup let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeModal()">&times;</button>\r\n        <h4 class="modal-title">Confirmation</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <h6 class="text-center">\r\n            Are you sure you want to send this Quote to Customer?\r\n        </h6>\r\n    </div>\r\n    <div class="modal-footer">\r\n\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeModal()">No</button>\r\n        <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="sendQuoteToCustomer()">Yes</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #closeQuotePopup let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeModal()">&times;</button>\r\n        <h4 class="modal-title">Confirmation</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <h6 class="text-center">\r\n            Are you sure you want to Close this Quote?\r\n        </h6>\r\n    </div>\r\n    <div class="modal-footer">\r\n\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeModal()">No</button>\r\n        <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="closeSalesOrderQuote()">Yes</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #newQuoteCreatePopup let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeModal()">&times;</button>\r\n        <h4 class="modal-title">Confirmation</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <h6 class="text-center">\r\n            Are you sure you want to create new Quote? Unsaved changes will be lost.\r\n        </h6>\r\n    </div>\r\n    <div class="modal-footer">\r\n\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeModal()">No</button>\r\n        <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="newQuoteEvent()">Yes</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #copyQuotePopup let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeModal()">&times;</button>\r\n        <h4 class="modal-title">Are you sure you want to copy this Quote?</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <h6> If yes, please select below considerations.</h6>\r\n\r\n        <div class="form-group popup_checkbox_considerations" style="margin-top: 5px;">\r\n            <p-checkbox name="isPartsAllowForCopy" [(ngModel)]="copyConsiderations.isPartsAllowForCopy" binary="true"\r\n                label="Parts">\r\n            </p-checkbox>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeModal()">No</button>\r\n        <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="copySalesOrderQuote()">Yes</button>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<ng-template #salesQuoteConvertPopup let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeModal()">&times;</button>\r\n        <h4 class="modal-title">Creating Sales Order From Quote</h4>\r\n    </div>\r\n    <form #quoteConversionForm="ngForm" class="form-horizontal">\r\n\r\n        <div class="modal-body">\r\n            <div class="form-group">\r\n                <label>Enter Customer Refrence<span class="clr-red">*</span></label>\r\n                <input type="text" required class="form-control" name="customerReference" style="max-width: 60%;"\r\n                    [(ngModel)]="salesOrderConversionCriteriaObj.customerReference" (change)="onChangeValidForDays()" />\r\n            </div>\r\n\r\n            <div class="form-group popup_checkbox_considerations" style="margin-top: 5px;">\r\n                <p-checkbox name="selectAllForConversion"\r\n                    (onChange)="onActionSelectAllforconvversion()"\r\n                    [(ngModel)]="selectAllForConversion" binary="true" label="Select all">\r\n                </p-checkbox>\r\n            </div>\r\n\r\n            <div class="form-group popup_checkbox_considerations" style="margin-top: 5px;">\r\n                <p-checkbox name="transferStockline" [(ngModel)]="salesOrderConversionCriteriaObj.transferStockline"\r\n                    binary="true" label="Transfer Stockline">\r\n                </p-checkbox>\r\n            </div>\r\n\r\n            <div class="form-group popup_checkbox_considerations" style="margin-top: 5px;">\r\n                <p-checkbox name="reserveStockline" [(ngModel)]="salesOrderConversionCriteriaObj.reserveStockline"\r\n                    binary="true" label="Reserve Stockline">\r\n                </p-checkbox>\r\n            </div>\r\n\r\n            <div class="form-group popup_checkbox_considerations" style="margin-top: 5px;">\r\n                <p-checkbox name="transferNotes" [(ngModel)]="salesOrderConversionCriteriaObj.transferNotes"\r\n                    binary="true" label="Transfer Notes">\r\n                </p-checkbox>\r\n            </div>\r\n\r\n            <div class="form-group popup_checkbox_considerations" style="margin-top: 5px;">\r\n                <p-checkbox name="transferMemos" [(ngModel)]="salesOrderConversionCriteriaObj.transferMemos"\r\n                    binary="true" label="Transfer Memo">\r\n                </p-checkbox>\r\n            </div>\r\n            <div class="form-group popup_checkbox_considerations" style="margin-top: 5px;">\r\n                <p-checkbox name="transferFreight" [(ngModel)]="salesOrderConversionCriteriaObj.transferFreight"\r\n                    binary="true" label="Transfer Freights">\r\n                </p-checkbox>\r\n            </div>\r\n            <div class="form-group popup_checkbox_considerations" style="margin-top: 5px;">\r\n                <p-checkbox name="transferCharges" [(ngModel)]="salesOrderConversionCriteriaObj.transferCharges"\r\n                    binary="true" label="Transfer Charges">\r\n                </p-checkbox>\r\n            </div>\r\n        </div>\r\n        <div class="modal-footer">\r\n\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeModal()">No</button>\r\n            <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                [disabled]="conversionStarted || !quoteConversionForm.valid" (click)="convertSalesOrderQuote()">\r\n                Convert\r\n            </button>\r\n        </div>\r\n    </form>\r\n</ng-template>\r\n<ng-template #updateConfirmationModal let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeConfirmationModal()">&times;</button>\r\n        <h4 class="modal-title">Do you want to create new version or update existing sales order quote ?</h4>\r\n    </div>\r\n    <div class="modal-footer">\r\n\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n            (click)="closeConfirmationModal()">Cancel</button>\r\n        <button type="button" class="btn btn-secondary" data-dismiss="modal"\r\n            (click)="createNewSalesOrderQuoteVersion()">\r\n            Create New Version\r\n        </button>\r\n        <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n            (click)="updateSalesOrderQuote()">Update</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #salesQuotePrintPopup let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeModal()">&times;</button>\r\n        <h4 class="modal-title">Print Quote</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="x_panel" id="quote_print_content">\r\n            <app-sales-quote-print-template [salesQuoteView]="salesQuoteView"></app-sales-quote-print-template>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeModal()">No</button>\r\n        <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="print()">Yes</button>\r\n    </div>\r\n</ng-template>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},qszz:function(e,t,r){"use strict";r.r(t),t.default="button {\n  border-radius: 5px;\n}\n\nlabel {\n  width: 100%;\n}\n\ndiv.row {\n  padding: 10px;\n}\n\n.form-control:disabled {\n  background-color: #e9ecef !important;\n}"},reQ4:function(e,t,r){"use strict";r.r(t),t.default=":host ::ng-deep div.ui-widget {\n  padding: 0px !important;\n}\n:host ::ng-deep div.ui-widget > button {\n  padding: 0px !important;\n  padding-right: 5px !important;\n}\n:host ::ng-deep div.ui-widget > button > span.ui-button-text {\n  padding: 0px 5px 0px 0px !important;\n}\n:host ::ng-deep div.ui-widget > button.ui-splitbutton-menubutton {\n  padding-right: 14px !important;\n}\n:host ::ng-deep div.ui-widget > button.ui-splitbutton-menubutton > span.ui-button-icon-left {\n  left: 0% !important;\n}\n:host ::ng-deep div.ui-menu > ul > li {\n  padding: 0px !important;\n  text-align: left !important;\n}\n:host ::ng-deep div.sales-order-actions {\n  padding: 4px 6px !important;\n}\n:host ::ng-deep .ui-chkbox-label {\n  margin-left: 5px !important;\n  top: 4px !important;\n}"},s7lY:function(e,t,r){"use strict";r.r(t),t.default=".modal-body p .label {\r\n    width: 33%;\r\n    padding: 0;\r\n    display: inline-block;\r\n}\r\n\r\n.modal-body p .value {\r\n    width: 54%;\r\n    display: inline-block;\r\n    margin-left: 5%;\r\n}\r\n\r\n.loader-position{\r\n    position: absolute;\r\n}\r\n\r\n.loader-align{\r\n    margin-top: 17rem;\r\n    margin-left: 30rem;\r\n}\r\n\r\n.myclass {\r\n    margin-top: -5px\r\n}\r\n\r\n.label{\r\n    margin-right:0px !important;\r\n}\r\n\r\n.sales-analysis-header tr th{\r\n    background: #4298ff !important;\r\n    color:#fff !important;\r\n}"},sjNA:function(e,t,r){"use strict";r.r(t),t.default="p .label {\n  width: 40%;\n  padding: 0;\n  display: inline-block;\n}\n\np .value {\n  width: 55%;\n  display: inline-block;\n  margin-left: 5%;\n}"},tYCb:function(e,t,r){"use strict";r.r(t),t.default='<div class="form-group">\r\n    <div class="row" *ngIf="isViewMode == false" style="padding-bottom: 8px;">\r\n        <button type="button" class="btn btn-primary" (click)="addPartNumber()" [disabled]="salesQuote.isApproved">\r\n            Add PN\r\n        </button>\r\n    </div>\r\n    <div class="row" style="overflow-y: auto;  border: 1px solid rgba(0,0,0,.125);">\r\n        \x3c!-- <div style="overflow-y: auto;"> --\x3e\r\n        <p-table #dt class="rpo-table-cstm rro-table-cstm salesquotePart1 sales-part-number" [value]="summaryParts" [lazy]="true"\r\n            [rows]="10" [paginator]="showPaginator" [first]="0" [rowsPerPageOptions]="[10, 20, 30]"\r\n            selectionMode="multiple" [totalRecords]="totalRecords" [columns]="summaryColumns" [scrollable]="true"\r\n            [resizableColumns]="true" [reorderableColumns]="true" scrollHeight="450px" (onLazyLoad)="onPaging($event)">\r\n            <ng-template pTemplate="colgroup" let-summaryColumns>\r\n                <colgroup>\r\n                    <col *ngFor="let summaryColumn of summaryColumns"\r\n                        [ngStyle]="{\'width\': summaryColumn.width, \'text-align\': summaryColumn.textalign}" />\r\n\r\n\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-summaryColumns>\r\n                <tr>\r\n                    \x3c!-- <th></th> --\x3e\r\n                    <th style="text-align: left !important; width:auto; background-color:rgb(107 149 239) !important; color: #fff !important;"\r\n                        *ngFor="let summaryColumn of summaryColumns">\r\n                        <span *ngIf="summaryColumn.field == \'quantityToBeQuoted\'\r\n                                 || summaryColumn.field == \'customerRef\'\r\n                                 || summaryColumn.field == \'quantityRequested\'">\r\n                            {{ summaryColumn.header }}<span class="clr-red">*</span>\r\n                        </span>\r\n                        <span *ngIf="summaryColumn.field != \'quantityToBeQuoted\' \r\n                            && summaryColumn.field != \'customerRef\'\r\n                                && summaryColumn.field != \'quantityRequested\'">\r\n                            {{ summaryColumn.header }}\r\n                        </span>\r\n                    </th>\r\n                    <th\r\n                        style="position: sticky !important;width:80px; background-color:rgb(107 149 239) !important; color: #fff !important;">\r\n                        Actions</th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-summaryPart let-columns="summaryColumns" let-rowIndex="rowIndex">\r\n                <tr ngClass="\'row-bg1\'" pReorderableRowHandle>\r\n                    <td *ngFor="let summaryColumn of summaryColumns" style="width:auto" pReorderableRowHandle>\r\n                        <span *ngIf="summaryColumn.field == \'hidePart\'">\r\n                            <a class="expand-row" *ngIf="!summaryPart[summaryColumn.field]"\r\n                                (click)="summaryPart[summaryColumn.field] = !summaryPart[summaryColumn.field]">\r\n                                <i class="fa fa-plus btn\r\n                                            btn-success btn-cstm btn-xs" matTooltip="Show details"\r\n                                    style="padding: 3px 8px !important;">\r\n                                </i>\r\n                            </a>\r\n                            <a class="expand-row" *ngIf="summaryPart[summaryColumn.field]"\r\n                                (click)="summaryPart[summaryColumn.field] =!summaryPart[summaryColumn.field]">\r\n                                <i class="fa fa-minus btn-danger btn-cstm btn-xs" matTooltip="Hide details"\r\n                                    style="padding: 3px 8px !important;">\r\n                                </i>\r\n                            </a>\r\n                        </span>\r\n                        <span class="float-right" *ngIf="summaryColumn.field == \'fixRate\'">\r\n                            {{summaryPart[summaryColumn.field] | twoDecimalGlobalNumberFormatPipe : \'1.5\'}}\r\n                        </span>\r\n                        <span *ngIf="summaryColumn.field != \'hidePart\'\r\n                                        && summaryColumn.field != \'quantityRequested\'\r\n                                        && summaryColumn.field != \'quantityToBeQuoted\'\r\n                                        && summaryColumn.field != \'quantityAlreadyQuoted\'\r\n                                        && summaryColumn.field != \'fixRate\'\r\n                                        && summaryColumn.field != \'grossSalePrice\'\r\n                                        && summaryColumn.field != \'salesDiscountExtended\'\r\n                                        && summaryColumn.field != \'netSalesPriceExtended\'\r\n                                        && summaryColumn.field != \'misc\'\r\n                                        && summaryColumn.field != \'freight\'\r\n                                        && summaryColumn.field != \'taxAmount\'\r\n                                        && summaryColumn.field != \'totalSales\'\r\n                                        && summaryColumn.field != \'unitCostExtended\'\r\n                                        && summaryColumn.field != \'marginAmountExtended\'\r\n                                        && summaryColumn.field != \'marginPercentageExtended\'">\r\n                            {{summaryPart[summaryColumn.field]}}\r\n                        </span>\r\n                        <span class="float-right" *ngIf="summaryColumn.field == \'quantityRequested\'\r\n                                        || summaryColumn.field == \'quantityToBeQuoted\'\r\n                                        || summaryColumn.field == \'quantityAlreadyQuoted\'">\r\n                            {{summaryPart[summaryColumn.field] | globalNmberFormat}}\r\n                        </span>\r\n                        <span class="float-right" *ngIf="summaryColumn.field == \'grossSalePrice\'\r\n                                        || summaryColumn.field == \'salesDiscountExtended\'\r\n                                        || summaryColumn.field == \'netSalesPriceExtended\'\r\n                                        || summaryColumn.field == \'misc\'\r\n                                        || summaryColumn.field == \'freight\'\r\n                                        || summaryColumn.field == \'taxAmount\'\r\n                                        || summaryColumn.field == \'totalSales\'\r\n                                        || summaryColumn.field == \'unitCostExtended\'\r\n                                        || summaryColumn.field == \'marginAmountExtended\'\r\n                                        || summaryColumn.field == \'marginPercentageExtended\'">\r\n                            {{summaryPart[summaryColumn.field] | twoDecimalGlobalNumberFormatPipe}}\r\n                        </span>\r\n                    </td>\r\n                    <td style="position:sticky;width:80px">\r\n                        <span>\r\n                            <a [class.disabled]="salesQuote.isApproved || isViewMode"\r\n                                [ngClass]="{\'btn_disabled\': salesQuote.isApproved || isViewMode}" class="btn nobg"\r\n                                (click)="addPartNumber(summaryPart,rowIndex)" matTooltip="Add/Edit Stock Line"\r\n                                matTooltipPosition="above">\r\n                                <i class="fa fa-pencil"></i>\r\n                            </a>\r\n                        </span>\r\n                        <span>\r\n                            <a class="btn nobg" (click)="viewPartNumber(summaryPart,rowIndex)"\r\n                                matTooltip="View Stock Line" matTooltipPosition="above">\r\n                                <i class="fa fa-eye"></i>\r\n                            </a>\r\n                        </span>\r\n                    </td>\r\n                </tr>\r\n                <tr [hidden]="!summaryPart[rowIndex]" class="sub-table no-bg">\r\n                    <td style="text-align: center;"></td>\r\n                    <div class="zui-wrapper" style="padding-bottom:12px;margin-top:8px;margin-left:8px;;">\r\n                        <td colspan="23" class="p-0" style="overflow-y: auto !important;">\r\n                            <div [ngClass]="isViewMode ? \'zui-scroller-view\' : \'zui-scroller\'"\r\n                             style="background: #fff;">\r\n                                \x3c!-- zui-table rpo-table-cstm sales-quote-part-search-data --\x3e\r\n                                <p-table #dt class=" rpo-table-cstm rro-table-cstm salesquotePart "\r\n                                    [value]="summaryPart.childParts" [lazy]="true" [rows]="10"\r\n                                    [rowsPerPageOptions]="[10, 20, 30]" [totalRecords]="totalRecords"\r\n                                    [pageLinks]="pageLinks" [paginator]="showPaginator" [columns]="columns"\r\n                                    [resizableColumns]="true" [scrollable]="true" scrollHeight="450px"\r\n                                    [reorderableColumns]="true" [style]="{ width: \'100%\'}"\r\n                                    (onLazyLoad)="onPaging($event)">\r\n\r\n                                    <ng-template pTemplate="colgroup" let-columns>\r\n                                        <colgroup>\r\n                                            <col *ngFor="let col of columns" [ngStyle]="{\'width\': col.width}" />\r\n                                        </colgroup>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                <tr style="text-align: left !important;">\r\n                    \x3c!-- <th style="width:25px">&nbsp;</th> --\x3e\r\n                    <th>PN</th>\r\n                    <th>PN Description</th>\r\n                    <th>Stk Line Num</th>\r\n                    <th>Ser Num</th>\r\n                    <th>Cond</th>\r\n                    <th>Priority<span class="clr-red">*</span></th>\r\n                    <th>Quote Date</th>\r\n                    <th>Qty Available<span class="clr-red">*</span></th>\r\n                    <th>Qty Quoted<span class="clr-red">*</span></th>\r\n                    <th rowspan="2">Qty Prev Quoted</th>\r\n                    <th>Cust Request Date<span class="clr-red">*</span></th>\r\n                    <th>Cust Promised Date<span class="clr-red">*</span></th>\r\n                    <th>Est.Ship Date<span class="clr-red">*</span></th>\r\n                    <th>Status</th>\r\n                    <th>Unit Cost</th>\r\n                    <th>MarkUp %</th>\r\n                    <th>MarkUp Amt/Unit</th>\r\n                    <th>Gross Price/Unit</th>\r\n                    <th>Disc. %</th>\r\n                    <th>Disc. Amt/Unit</th>\r\n                    <th>MarkUp Amt</th>\r\n                    <th>Gross Sales Amt</th>\r\n                    <th>Disc. Amt</th>\r\n                    <th>Net Sales Amt</th>\r\n                    <th>Tax Type & Rate</th>\r\n                    <th>Tax Amt</th>\r\n                    <th>Total</th>\r\n                    <th>Extended Cost</th>\r\n                    <th>Product Margin</th>\r\n                    <th>Product Margin (%)</th>\r\n                    <th>Stk Type</th>\r\n                    <th>Alt/Equiv</th>\r\n                    <th>Cntrl Num</th>\r\n                    <th>Cntrl ID Num</th>\r\n                    <th style="width:120px">Notes</th>\r\n                    <th class="zui-sticky-col" style="width: 107px !important;text-align: center !important;"\r\n                        *ngIf="isViewMode == false">Actions</th>\r\n\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-part let-stockIndex="rowIndex" let-columns="columns">\r\n                <tr>\r\n                    \x3c!-- <td style="width:25px">&nbsp;</td> --\x3e\r\n                    <td>\r\n                        {{ part.partNumber }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.description }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.stockLineNumber }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.serialNumber }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.conditionDescription }}\r\n                    </td>\r\n                    <td *ngIf="isViewMode == false && !isEditDisabled(salesQuote, part)">\r\n                        <select name="priorityId" [(ngModel)]="part.priorityId" required id="priorityId"\r\n                            #priorityId="ngModel" (change)="onEditPartDetails()">\r\n                            <option *ngFor="let p of priorities" [ngValue]="p.priorityId">\r\n                                {{ p.description }}\r\n                            </option>\r\n                        </select>\r\n                    </td>\r\n                    <td *ngIf="isViewMode == true || isEditDisabled(salesQuote, part)">\r\n                        {{ part.priorityName }}\r\n                    </td>\r\n                    <td>\r\n                        {{ salesQuote.openDate | date: "MM/dd/yyyy"}}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.qtyAvailable | globalNmberFormat}}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.quantityToBeQuoted | globalNmberFormat}}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.quantityAlreadyQuoted | globalNmberFormat}}\r\n                    </td>\r\n                    <td *ngIf="isViewMode == true || isEditDisabled(salesQuote, part)">\r\n                        {{  part.customerRequestDate | date: "MM/dd/yyyy" }}\r\n                    </td>\r\n                    <td *ngIf="isViewMode == false && !isEditDisabled(salesQuote, part)">\r\n                        <p-calendar [ngClass]="inputValidCheckHeader ? \'p-clder-validate\' : \'\'" class="pas-clder"\r\n                            [showIcon]="true" appendTo="body" name="customerRequestDate" [yearNavigator]="true"\r\n                            [monthNavigator]="true" yearRange="1900:2100" [(ngModel)]="part.customerRequestDate"\r\n                            (ngModelChange)="onCustomerDateChange(stockIndex, rowIndex)" #customerRequestDate="ngModel"\r\n                            [minDate]="salesQuote.openDate" required>\r\n                        </p-calendar>\r\n                        <div *ngIf="customerRequestDate.invalid && (customerRequestDate.dirty || customerRequestDate.touched)"\r\n                            class="alert alert-danger alert-danger-cstm">\r\n                            <div *ngIf="customerRequestDate.errors.required">\r\n                                <small>Customer Request Date is required </small>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td *ngIf="isViewMode == true || isEditDisabled(salesQuote, part)">\r\n                        {{  part.promisedDate | date: "MM/dd/yyyy"}}\r\n                    </td>\r\n                    <td *ngIf="isViewMode == false && !isEditDisabled(salesQuote, part)">\r\n                        <p-calendar [ngClass]="inputValidCheckHeader ? \'p-clder-validate\' : \'\'" class="pas-clder"\r\n                            [showIcon]="true" appendTo="body" name="promisedDate" [yearNavigator]="true"\r\n                            [monthNavigator]="true" yearRange="1900:2100" [(ngModel)]="part.promisedDate"\r\n                            (ngModelChange)="onEditPartDetails()" #promisedDate="ngModel"\r\n                            [minDate]="salesQuote.openDate" required>\r\n                        </p-calendar>\r\n                        <div *ngIf="promisedDate.invalid && (promisedDate.dirty || promisedDate.touched)"\r\n                            class="alert alert-danger alert-danger-cstm">\r\n                            <div *ngIf="promisedDate.errors.required">\r\n                                <small>Promised Date is required </small>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td *ngIf="isViewMode == true || isEditDisabled(salesQuote, part)">\r\n                        {{  part.estimatedShipDate | date: "MM/dd/yyyy" }}\r\n                    </td>\r\n                    <td *ngIf="isViewMode == false && !isEditDisabled(salesQuote, part)">\r\n                        <p-calendar [ngClass]="inputValidCheckHeader ? \'p-clder-validate\' : \'\'" class="pas-clder"\r\n                            [showIcon]="true" appendTo="body" name="estimatedShipDate" [yearNavigator]="true"\r\n                            [monthNavigator]="true" yearRange="1900:2100" [(ngModel)]="part.estimatedShipDate"\r\n                            (ngModelChange)="onEditPartDetails()" #estimatedShipDate="ngModel"\r\n                            [minDate]="salesQuote.openDate" required>\r\n                        </p-calendar>\r\n                        <div *ngIf="estimatedShipDate.invalid && (estimatedShipDate.dirty || estimatedShipDate.touched)"\r\n                            class="alert alert-danger alert-danger-cstm">\r\n                            <div *ngIf="estimatedShipDate.errors.required">\r\n                                <small>Estimated Ship Date is required </small>\r\n                            </div>\r\n                        </div>\r\n                    </td>\r\n                    <td *ngIf="isViewMode == false" class="text-left">\r\n                        {{ salesQuote.statusName }}\r\n                    </td>\r\n                    <td *ngIf="isViewMode == true">\r\n                        {{ salesQuote.status }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.unitCostPerUnit  | twoDecimalGlobalNumberFormatPipe }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.markUpPercentage  | twoDecimalGlobalNumberFormatPipe }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.markupPerUnit  | twoDecimalGlobalNumberFormatPipe }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.grossSalePricePerUnit  | twoDecimalGlobalNumberFormatPipe}}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.salesDiscount  | twoDecimalGlobalNumberFormatPipe }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.salesDiscountPerUnit  | twoDecimalGlobalNumberFormatPipe }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.markupExtended  | twoDecimalGlobalNumberFormatPipe }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.grossSalePrice | twoDecimalGlobalNumberFormatPipe}}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.salesDiscountExtended  | twoDecimalGlobalNumberFormatPipe }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.netSalesPriceExtended  | twoDecimalGlobalNumberFormatPipe }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.taxType }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.taxAmount  | twoDecimalGlobalNumberFormatPipe }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.totalSales  | twoDecimalGlobalNumberFormatPipe }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.unitCostExtended  | twoDecimalGlobalNumberFormatPipe }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.marginAmountExtended  | twoDecimalGlobalNumberFormatPipe }}\r\n                    </td>\r\n                    <td class="text-right">\r\n                        {{ part.marginPercentageExtended  | twoDecimalGlobalNumberFormatPipe }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.pmaStatus }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.altOrEqType }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.controlNumber }}\r\n                    </td>\r\n                    <td>\r\n                        {{ part.idNumber }}\r\n                    </td>\r\n                    <td style="width:120px" *ngIf="isViewMode == false && !isEditDisabled(salesQuote, part)">\r\n                        <div class="form-group notes-popup-cstm mat_emo"\r\n                            style="width: 120px;    display: inline-flex;    margin-bottom: 0;">\r\n                            <div [innerHTML]="part.notes" class="text_editor_box"></div>\r\n                            <i class="fa fa-pencil" data-toggle="modal"\r\n                                style="position: relative;top: 6px; color: royalblue !important;"\r\n                                data-target="#textarea-popupNotes" matTooltip="Notes" matTooltipPosition="above"\r\n                                (click)="onAddTextAreaInfo(part,stockIndex, rowIndex)"></i>\r\n                        </div>\r\n                    </td>\r\n                    <td *ngIf=" isViewMode==true || isEditDisabled(salesQuote, part)">\r\n                        <div [innerHTML]="part.notes" class="text_editor_box"></div>\r\n                    </td>\r\n                    <td class="zui-sticky-col" style="width:107px !important" *ngIf="isViewMode == false">\r\n                        <span *ngIf="!isEditDisabled(salesQuote, part)">\r\n                            <a [class.disabled]="isEditDisabled(salesQuote, part)"\r\n                                [ngClass]="{\'btn_disabled\': isEditDisabled(salesQuote, part)}" class="btn nobg"\r\n                                (click)="openPartToEdit(part)" matTooltip="Edit" matTooltipPosition="above">\r\n                                <i class="fa fa-pencil"></i>\r\n                            </a>\r\n                        </span>\r\n\r\n                        <span>\r\n                            <a [class.disabled]="isDeleteDisabled(salesQuote, part)"\r\n                                [ngClass]="{\'btn_disabled\': isDeleteDisabled(salesQuote, part)}" class="btn nobg"\r\n                                (click)="openPartDelete(deleteContent,part)" matTooltip="Delete"\r\n                                matTooltipPosition="above">\r\n                                <i class="fa fa-trash"></i>\r\n                            </a>\r\n                        </span>\r\n                        \x3c!-- <button [disabled]="isEditDisabled(salesQuote, part)" class="btn-edit" mat-icon-button\r\n                            (click)="openPartToEdit(part)" matTooltip="edit" matTooltipPosition="above">\r\n                            <mat-icon>edit</mat-icon>\r\n                        </button>\r\n                        <button [disabled]="isDeleteDisabled(salesQuote, part)" class="btn-delete" mat-icon-button\r\n                            matTooltip="Delete" matTooltipPosition="above" (click)="openPartDelete(deleteContent,part)">\r\n                            <mat-icon color="warn">delete</mat-icon>\r\n                        </button> --\x3e\r\n                        <span data-toggle="modal" data-target="#soqPartHistory">\r\n                            \x3c!-- [class.disabled]="!part.salesOrderQuotePartId" --\x3e\r\n                            <a [ngClass]="{\'btn_disabled\': !part.salesOrderQuotePartId}" class="btn nobg btn-hist-cstm"\r\n                                (click)="getAuditHistoryById(part)" matTooltip="History" matTooltipPosition="above"><i\r\n                                    class="fa fa-history"></i></a>\r\n                        </span>\r\n\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="selectedParts.length == 0">\r\n                <tr>\r\n                    <td *ngFor="let col of columns">&nbsp;</td>\r\n                </tr>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n    </td>\r\n</div>\r\n</tr>\r\n</ng-template>\r\n\x3c!-- <ng-template pTemplate="emptymessage" let-columns >\r\n    <tr>\r\n        <td *ngFor="let col of summaryColumns">&nbsp;</td>\r\n        <td>&nbsp;</td>\r\n    </tr>\r\n</ng-template>  --\x3e\r\n<ng-template pTemplate="emptymessage" let-columns>\r\n    <tr>\r\n        <td colspan="23" style="color: red; font-weight: bold; text-align: center">\r\n            No records found\r\n        </td>\r\n    </tr>\r\n</ng-template>\r\n</p-table>\r\n\x3c!-- </div> --\x3e\r\n</div>\r\n<div class="modal fade" id="textarea-popupNotes" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-lg" style="max-width: 400px !important;">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Edit {{"Notes"}}</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                        <th style="color: #fff;">{{"Notes"}}</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <p-editor [(ngModel)]="textAreaInfo" [style]="{\'height\':\'320px\'}" name="textAreaInfo"\r\n                                    required>\r\n                                </p-editor>\r\n\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div style="float:right">\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                        style="padding: 6px 12px !important;margin-top: 10px;"\r\n                        (click)="onSaveTextAreaInfo(textAreaInfo)">\r\n                        Save\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger" style="padding: 6px 12px !important;margin-top: 10px;"\r\n                        data-dismiss="modal">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div *ngIf="isViewMode == false" style="text-align:right; width:100%; padding-top:5px;">\r\n    <button *ngIf="saveButton" type="button" [disabled]="canSaveParts" class="btn btn-primary"\r\n        style="width:55px;height:20px;" (click)="approve()">\r\n        <span>Update</span>\r\n        \x3c!-- <span *ngIf="!checkUpdateOrsaveButton()">Save</span> --\x3e\r\n    </button>\r\n    <button type="button" *ngIf="!saveButton" [disabled]="canSaveParts" class="btn btn-primary"\r\n        style="width:55px;height:20px;" (click)="approve()">\r\n        \x3c!-- <span *ngIf="checkUpdateOrsaveButton()">Update</span> --\x3e\r\n        <span>Save</span>\r\n    </button>\r\n</div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #updatePNDetailsModal let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeConfirmationModal()">&times;</button>\r\n        <h4 class="modal-title">Do you want to save the Part Details?</h4>\r\n    </div>\r\n    <div class="modal-footer">\r\n\r\n        <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="approve()">Save</button>\r\n    </div>\r\n</ng-template>\r\n<ng-template #addPart let-c="close" let-d="dismiss">\r\n    <app-add-sales-part-number [display]="show" [selectedParts]="selectedParts" [salesQuote]="salesQuote"\r\n        [isStockLineViewMode]="isStockLineViewMode" [selectedSummaryRow]="selectedSummaryRow"\r\n        (select)="openSalesMargin($event)" (close)="onClose($event)">\r\n    </app-add-sales-part-number>\r\n</ng-template>\r\n\r\n<ng-template #salesMargin let-c="close" let-d="dismiss" tabindex="-1">\r\n    <app-sales-margin tabindex="-1" [part]="part" [isEdit]="isEdit" (save)="openSalesMarginSave($event)"\r\n        (close)="onCloseMargin($event)"></app-sales-margin>\r\n</ng-template>\r\n\r\n<ng-template #deleteContent let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="onClosePartDelete()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-body">\r\n        <h6 class="modal-body">Part Number : {{part.partNumber}}</h6>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="deletePart()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="onClosePartDelete()">No</button>\r\n    </div>\r\n\r\n</ng-template>\r\n<ng-template #partSaveConfirmationModal let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="closeConfirmationModal()">&times;</button>\r\n        <h4 class="modal-title">Do you want to save the Part Details?</h4>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n            (click)="closeConfirmationModal()">Cancel</button>\r\n        <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="approve()">Save</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<div id="soqPartHistory" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xlg">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="closeHistoryModal()">&times;</button>\r\n                <h4 class="modal-title">History of Sales Order Quote Part</h4>\r\n            </div>\r\n            <div class="modal-body" *ngIf="auditHistory">\r\n                <div class="table-responsive history_hg" style="overflow-x:auto;">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>PN</th>\r\n                                <th>PN Description</th>\r\n                                <th>Stk Line Num</th>\r\n                                <th>Ser Num</th>\r\n                                <th>Cond</th>\r\n                                <th>Priority</th>\r\n                                <th>Qty Quoted</th>\r\n                                <th>Cust Request Date</th>\r\n                                <th>Cust Promised Date</th>\r\n                                <th>Est.Ship Date</th>\r\n                                <th>Status</th>\r\n                                <th>Cust Ref</th>\r\n                                <th>Unit Cost</th>\r\n                                <th>MarkUp %</th>\r\n                                <th>MarkUp Amt/Unit</th>\r\n                                <th>Disc. Amt/Unit</th>\r\n                                <th>Disc. Amt</th>\r\n                                <th>Disc. %</th>\r\n                                <th>Extended Cost</th>\r\n                                <th>Fix Rate</th>\r\n                                <th>UOM</th>\r\n                                <th>Product Margin</th>\r\n                                <th>Product Margin (%)</th>\r\n                                <th>Cntrl Num</th>\r\n                                <th>Cntrl ID Num</th>\r\n                                <th>Created Date</th>\r\n                                <th>Created By</th>\r\n                                <th>Updated Date</th>\r\n                                <th>Updated By</th>\r\n                                <th>Is Deleted</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody class="audithistory-cstm">\r\n                            \x3c!--*ngIf="auditHistory.length> 0"--\x3e\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td\r\n                                    [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'partNumber\', audit.partNumber)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.partNumber}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'partDescription\', audit.partDescription)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.partDescription}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'stockLineNumber\', audit.stockLineNumber)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.stockLineNumber}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'serialNumber\', audit.serialNumber)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.serialNumber}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'conditionDescription\', audit.conditionDescription)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.conditionDescription}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'priorityName\', audit.priorityName)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.priorityName}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'qtyQuoted\', audit.qtyQuoted)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.qtyQuoted}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'customerRequestDate\', audit.customerRequestDate)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.customerRequestDate | date: \'MM/dd/yyyy\'}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'promisedDate\', audit.promisedDate)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.promisedDate | date: \'MM/dd/yyyy\'}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'estimatedShipDate\', audit.estimatedShipDate)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.estimatedShipDate | date: \'MM/dd/yyyy\'}}</td>\r\n\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'statusName\', audit.statusName)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.statusName}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'customerReference\', audit.customerReference)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.customerReference}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'unitCost\', audit.unitCost)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.unitCost | twoDecimalGlobalNumberFormatPipe}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'markUpPercentage\', audit.markUpPercentage)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.markUpPercentage}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'markupExtended\', audit.markupExtended)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.markupExtended | twoDecimalGlobalNumberFormatPipe}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'discount\', audit.discount)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.discount | twoDecimalGlobalNumberFormatPipe}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'discountAmount\', audit.discountAmount)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.discountAmount | twoDecimalGlobalNumberFormatPipe}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'salesDiscountExtended\', audit.salesDiscountExtended)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.salesDiscountExtended | twoDecimalGlobalNumberFormatPipe}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'unitCostExtended\', audit.unitCostExtended)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.unitCostExtended | twoDecimalGlobalNumberFormatPipe}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'fxRate\', audit.fxRate)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.fxRate}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'uomName\', audit.uomName)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.uomName}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'marginAmountExtended\', audit.marginAmountExtended)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.marginAmountExtended | twoDecimalGlobalNumberFormatPipe}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'marginPercentage\', audit.marginPercentage)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.marginPercentage}}</td>\r\n\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'controlNumber\', audit.controlNumber)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.controlNumber}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'idNumber\', audit.idNumber)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.idNumber}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'createdDate\', audit.createdDate)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'createdBy\', audit.createdBy)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.createdBy}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'updatedDate\', audit.updatedDate)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'updatedBy\', audit.updatedBy)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.updatedBy}}</td>\r\n                                <td>\r\n                                    <p style="background-color: #fff !important;"> <input type="checkbox"\r\n                                            name="isDeleted" [(ngModel)]="audit.isDeleted" disabled></p>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            \x3c!-- <img src="../../../../../assets/images/binoculars.png" style="height: 100px; width: 100px;"> --\x3e\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="preloader" style="z-index: 10000;" *ngIf="isSpinnerVisible">\r\n                <div class="loading">\r\n                    <div class="lds-roller">\r\n                        <div>\r\n                        </div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <app-spinner *ngIf="isSpinnerVisible"></app-spinner>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" (click)="closeHistoryModal()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>'},talG:function(e,t,r){"use strict";r.r(t),t.default='\r\n\r\n\r\n<table cellpadding=0  class="t1" style="font-family: Arial; font-size: 14px; \r\nborder-spacing: 0 1em;">\r\n    <tr>\r\n        <td colspan="2">\r\n            <table>\r\n                <tr>\r\n                    <td><strong>Quotation for:</strong></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{salesQuote.customerName}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td><strong>Address:</strong></td>\r\n                </tr>\r\n                <tr>\r\n                  <td><strong>{{customerAddress.address1}}, {{customerAddress.address1}}</strong></td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{customerAddress.city}}, {{customerAddress.stateOrProvince}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>{{customerAddress.countryName}}, {{customerAddress.postalCode}}</td>\r\n                </tr>\r\n            </table>\r\n        </td>\r\n        <td colspan="2">\r\n            <table class="t3" align="right">\r\n              <tr>\r\n                  <th colspan="2">SALES ORDER QUOTATION\t</th>\r\n              </tr>\r\n                <tr>\r\n                    <td>Quote Date</td>\r\n                    <td class="td2">{{salesQuote.createdOn  | date: \'MM/dd/yyyy\'}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Quotation ID</td>\r\n                    <td class="td2">{{salesQuote.salesOrderQuoteNumber}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Valid Until</td>\r\n                    <td class="td2">{{salesQuote.validForDays}} Days</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Prepared By</td>\r\n                    <td class="td2">{{salesQuote.createdBy}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Date Printed</td>\r\n                    <td class="td2">{{todayDate | date: \'MM/dd/yyyy\'}}</td>\r\n                </tr>\r\n            </table>\r\n        </td>\r\n    </tr>\r\n    <tr></tr>\r\n    \r\n    <tr>\r\n        <td class="tr0 td1"><strong>Quote Type</strong></td>\r\n        <td class="tr0 td2">{{salesQuote.quoteTypeName}}</td>\r\n        <td  class="tr0 td3"><strong>Account Type</strong></td>\r\n        <td class="tr0 td4">{{salesQuote.accountTypeName}}</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="tr2 td1"><strong>Sales Quote No</strong></td>\r\n        <td class="tr2 td2" >{{salesQuote.salesOrderQuoteNumber}}</td>\r\n        <td   class="tr2 td3"><strong>Customer Name</strong></td>\r\n        <td class="tr2 td24">{{salesQuote.customerName}}</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="tr2 td1"><strong>Open Date</strong></td>\r\n        <td class="tr2 td2" >{{salesQuote.openDate | date: \'MM/dd/yyyy\'}}</td>\r\n        <td   class="tr2 td3"><strong>Customer Code</strong></td>\r\n        <td class="tr2 td24">{{salesQuote.customerName}}</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="tr2 td1"><strong>Valid For</strong></td>\r\n        <td class="tr2 td2" >{{salesQuote.validForDays}} Days</td>\r\n        <td   class="tr2 td3"><strong>Customer Contact</strong></td>\r\n        <td class="tr2 td24">{{salesQuote.customerContactName}}</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="tr2 td1"><strong>Quote Exp Date</strong></td>\r\n        <td class="tr2 td2" >{{salesQuote.quoteExpireDate | date: \'MM/dd/yyyy\'}}</td>\r\n        <td   class="tr2 td3" ><strong>Customer Ref</strong></td>\r\n        <td class="tr2 td24">{{salesQuote.customerReference}}</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="tr2 td1"><strong>Cust Request Date</strong></td>\r\n        <td class="tr2 td2" >{{salesQuote.customerRequestDate | date: \'MM/dd/yyyy\'}}</td>\r\n        <td   class="tr2 td3"><strong>Priority</strong></td>\r\n        <td class="tr2 td24">{{salesQuote.priorityName}}</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="tr2 td1"><strong>Promised Date</strong></td>\r\n        <td  class="tr2 td2" >{{salesQuote.promisedDate | date: \'MM/dd/yyyy\'}}</td>\r\n        <td    class="tr2 td3"><strong>Sales Person</strong></td>\r\n        <td class="tr2 td24">{{salesQuote.salesPersonName}}</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="tr2 td1"><strong>Estimated Ship Date</strong></td>\r\n        <td  class="tr2 td2" >{{salesQuote.estimatedShipDate | date: \'MM/dd/yyyy\'}}</td>\r\n        <td    class="tr2 td3" ><strong>Customer Service Rep</strong></td>\r\n        <td class="tr2 td24">{{salesQuote.customerSeviceRepName}}</td>\r\n    </tr>\r\n    <tr>\r\n        <td class="tr2 td1"><strong>Employee</strong></td>\r\n        <td  class="tr2 td2" >{{salesQuote.employeeName}}</td>\r\n        <td   class="tr2 td3" ><strong>Status</strong></td>\r\n        <td class="tr2 td24">{{salesQuote.status}}</td>\r\n    </tr>\r\n</table>\r\n\r\n        <table cellpadding=2 cellspacing=0 class="t4"  style="font-family: Arial; font-size: 14px;   ">\r\n            <thead>\r\n                <tr>\r\n                    <th>QUOTE NUMBER</th>\r\n                    <th>SALES PERSON</th>\r\n                    <th>SHIP DATE</th>\r\n                    <th>SHIP VIA</th>\r\n                    <th>F.O.B. POINT</th>\r\n                    <th>TERMS</th>\r\n                    <th>CURRENCY</th>\r\n                    <th>UOM</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td class="td8">{{salesQuote.salesOrderQuoteNumber}}</td>\r\n                    <td  class="td46">{{salesQuote.salesPersonName}}</td>\r\n                    <td  class="td47">{{salesQuote.estimatedShipDate | date: \'MM/dd/yyyy\'}}</td>\r\n                    <td class="td14">{{salesQuote.shipViaName}}</td>\r\n                    <td class="td48"></td>\r\n                    <td class="td16">{{salesQuote.creditTerms}}</td>\r\n                    <td class="td17">{{salesQuote.currencyName}}</td>\r\n                    <td class="td17"></td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n<table cellpadding=2 cellspacing=0 class="t2"  style="font-family: Arial; font-size: 14px;   ">\r\n    <thead>\r\n    <tr>\r\n        <th>ITEM</th>\r\n        <th class="th2">PN & DESCRIPTION</th>\r\n        <th>COND</th>\r\n        <th>QTY</th>\r\n        <th>UNIT PRICE</th>\r\n        <th>DISCOUNT</th>\r\n        <th>AMOUNT</th>\r\n    </tr>\r\n</thead>\r\n<tbody>\r\n    <tr *ngFor="let part of parts; let i = index">\r\n        <td class="td8">{{i+1}}</td>\r\n        <td class="td2">{{part.partNumber}} & {{part.partDescription}}</td>\r\n        <td  class="td47">{{part.conditionDescription}}</td>\r\n        <td class="td14"  style="text-align: right;">{{part.qtyQuoted}}</td>\r\n        <td class="td48" style="text-align: right;">{{part.unitSalePrice | twoDecimalGlobalNumberFormatPipe}}</td>\r\n        <td class="td16"  style="text-align: right;">{{part.discountAmount | twoDecimalGlobalNumberFormatPipe}}</td>\r\n        <td class="td17" style="text-align: right;">{{part.totalSales | twoDecimalGlobalNumberFormatPipe}}</td>\r\n    </tr>\r\n    \r\n    <tr>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n    </tr>\r\n    <tr>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n    </tr>\r\n  \r\n    <tr>\r\n        <td colspan="5" class="blank"> </td>\r\n        <td colspan="1" class="total-line">Subtotal</td>\r\n        <td class="total-value" style="text-align: right;"><div id="subtotal">{{subtotal | twoDecimalGlobalNumberFormatPipe}}</div></td>\r\n    </tr>\r\n    <tr>\r\n        <td colspan="5" class="blank"> </td>\r\n        <td colspan="1" class="total-line">Tax Rate</td>\r\n        <td class="total-value"><div id="total"></div></td>\r\n    </tr>\r\n    <tr>\r\n        <td colspan="5" class="blank"> </td>\r\n        <td colspan="1" class="total-line">Sales Tax</td>\r\n        <td class="total-value"><div id="total"></div></td>\r\n    </tr>\r\n    <tr>\r\n        <td colspan="5" class="blank"> </td>\r\n        <td colspan="1" class="total-line">Other Tax(es)</td>\r\n        <td class="total-value"><div id="total"></div></td>\r\n    </tr>\r\n    <tr>\r\n        <td colspan="5" class="blank"> </td>\r\n        <td colspan="1" class="total-line">Misc Charges</td>\r\n        <td class="total-value"><div id="total"></div></td>\r\n    </tr>\r\n    <tr>\r\n        <td colspan="5" class="blank"> </td>\r\n        <td colspan="1" class="total-line"><strong>Total</strong></td>\r\n        <td class="total-value" style="text-align: right;"><strong>{{totalAmount | twoDecimalGlobalNumberFormatPipe}}</strong></td>\r\n    </tr>\r\n\r\n</tbody>\r\n</table>'},uGI4:function(e,t,r){"use strict";r.r(t),t.default=".sub-header-title {\r\n    border-bottom: 1px solid lightgray;\r\n    width: 100%;\r\n    font-size: 18px;\r\n    padding: 5px 8px;\r\n    margin-bottom: 5px;\r\n  }\r\n  a.fa.fa-plus-circle {\r\n    color: green !important;\r\n  }\r\n  @media (min-width: 768px) {\r\n    .col-md-3 {\r\n        max-width: 22%;\r\n        margin-right: 15px;\r\n    }\r\n  }\r\n  .modal .add-site-name label{\r\n    /* font-size: 12px !important; */\r\n    width: 150px;\r\n    margin-right: 0;\r\n    font-weight: 400;\r\n  }\r\n  .text_editor_box .p{\r\n    margin-bottom: -7px;\r\n  }"},uL9L:function(e,t,r){"use strict";r.r(t),t.default='<div class="card" style="padding: 10px;">\r\n    <div class="col-md-12">\r\n       <h4 class="po-head-sm">\r\n             Communication - Text  \r\n             <a href="#" data-toggle="modal" data-target="#addNewText"\r\n             (click)="addText()" *ngIf="!isView">\r\n             <i class="fa fa-plus-circle fa-lg"></i> </a>\r\n        </h4>\r\n    </div>\r\n</div>\r\n<div>\r\n        <p-table #dt\r\n        class="rpo-table-cstm rro-table-cstm ptable-f10"\r\n        [value]="data"\r\n        [metaKeySelection]="true"\r\n        [first]="0"\r\n        (onPage)="pageIndexChange($event)"\r\n        [rows]="pageSize"\r\n        [paginator]="true"\r\n        [pageLinks]="3"\r\n        [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n        [columns]="selectedColumns"\r\n        selectionMode="multiple"\r\n        [resizableColumns]="true"\r\n        [reorderableColumns]="true"\r\n        [totalRecords]="totalRecords"\r\n        [scrollable]="true" scrollHeight="450px">\r\n\r\n            <ng-template pTemplate="caption">\r\n                <div class="row">\r\n                    <div class="col">\r\n                    <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns"\r\n                    [ngModelOptions]="{ standalone: true }" optionLabel="header" \r\n                    selectedItemsLabel="{0} columns selected"\r\n                    [style]="{ minWidth: \'200px\' }" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n                </div>\r\n                <div class="col">\r\n                  <div\r\n                    style="width: auto !important; float: right;"\r\n                    class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                  >\r\n                        <i class="fa fa-search"></i>\r\n                        <input type="text" pInputText size="50"\r\n                         class="form-control"\r\n                            (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter"\r\n                            style="height: 28px !important;" />\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class="row">\r\n                    <div class="col">\r\n                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data" matTooltipPosition="above"\r\n                    pButton icon="fa-download" iconPos="left" label="Export Data" (click)="dt.exportCSV()"\r\n                    style="padding:5px 10px !important;"></button>\r\n                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"\r\n                    matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                    (click)="dt.exportCSV({ selectionOnly: true })" style="padding:5px 10px !important;"></button>\r\n\r\n                    \x3c!-- <div class="excel-upload excel-upload-cstm">\r\n                    <button type="button" class="btn btn-primary" matTooltip="Download Sample File"\r\n                        matTooltipPosition="above" (click)="sampleExcelDownload()" style="padding: 5px 10px !important;">\r\n                        Sample File Download\r\n                    </button>\r\n\r\n                    <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)"\r\n                        class="uploaddoc upload-file" accept=".xlsx, .xls, .csv" />\r\n                    <label for="upload">\r\n                        <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                        <i class="fa fa-upload"></i>\r\n                        </span>\r\n                    </label>\r\n                    </div> --\x3e\r\n                    </div>\r\n                </div>\r\n                \r\n            </ng-template>\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col *ngFor="let col of columns" style="width:130px">\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n\r\n                    <th style="width:auto"\r\n                        *ngFor="let col of columns"\r\n                        pResizableColumn\r\n                        pReorderableColumn\r\n                        [pSortableColumn]="col.field">\r\n                        {{ col.header }}\r\n                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                    </th>\r\n                    <th style="width:50px;position:sticky"\r\n                        *ngIf="selectedColumns.length > 0 && !isView">\r\n                        Actions\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                        <input style="width:100%;" pInputText type="text" (input)="\r\n                            dt.filter($event.target.value, col.field, \'contains\')\r\n                        " />\r\n                    </th>\r\n                    <th style="width: 50px;" *ngIf="!isView"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                    <tr [pSelectableRowDblClick]="rowData" [pSelectableRow]="rowData">\r\n                        <ng-container *ngFor="let col of columns">\r\n                            <td style="width:auto"\r\n                            *ngIf="col.field == \'contactBy\'"\r\n                            class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                            {{rowData[col.field]}}\r\n                            </td>\r\n                            <td style="width:auto"\r\n                            *ngIf="col.field == \'mobile\'"\r\n                            class="ui-resizable-column"\r\n                            pReorderableRowHandle>\r\n                            <p class="m-0 p-0 text-right">{{rowData[col.field]}}</p>\r\n                            </td>\r\n                            <td style="width:auto"\r\n                                *ngIf="col.field == \'notes\'"\r\n                                class="ui-resizable-column"\r\n                                pReorderableRowHandle>\r\n                                <p class="m-0 p-0 p_textEditor" [innerHTML]=rowData[col.field]></p>\r\n                            </td>\r\n                        </ng-container>\r\n                        <td style="width:50px;position:sticky" class="ui-resizable-column" *ngIf="!isView">\r\n                            <span data-target="#addNewText" data-toggle="modal"><a class="btn nobg btn-edit-cstm" (click)="edit(rowData, rowIndex)" matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-pencil"></i></a> </span>\r\n                            <span><a class="btn nobg btn-delete-cstm" (click)="deleteText(rowData);" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n                            \x3c!-- <button class="btn-edit ptable-wo-btns" mat-icon-button data-target="#addNewText" data-toggle="modal"\r\n                            (click)="edit(rowData, i)" matTooltip="Edit">\r\n                                <mat-icon>edit</mat-icon>\r\n                            </button>\r\n                            <button class="btn btn-danger nobg" (click)="deleteText(rowData);">\r\n                                <i class="fa fa-trash"></i>\r\n                            </button> --\x3e\r\n                        </td>\r\n                    </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="data.length == 0">\r\n                <tr>\r\n                  <td colspan="4" style="color: red; font-weight: bold; text-align: center">\r\n                    No records found\r\n                  </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer">Total:</label>\r\n                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer">Pages Count:</label>    \r\n                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n              </ng-template>\r\n        </p-table>\r\n</div>\r\n\r\n<div id="addNewText" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{ isEdit ? \'Edit\' : \'Add\'  }} Text </h4>\r\n                <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Name:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize">\r\n                            {{customerInfoFromSalesQuote.customerName}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                      <p class="fs12">\r\n                        <label class="control-label labels-font-header" style="width: auto;">Customer Code:\r\n                        </label>\r\n                        <span class="span-header-red" style="text-transform: capitalize">\r\n                            {{customerInfoFromSalesQuote.customerCode}}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n          \r\n          \r\n          \r\n            </div>\r\n            <form #textForm="ngForm" class="form-horizontal" ngNativeValidate>\r\n            <div class="modal-body" *ngIf="addList.length > 0">\r\n                <div class="form-row">                   \r\n                    <div class="col-md-6">\r\n                        <div class="form-group">\r\n                            <label>Phone</label>\r\n                            <input class="form-control" type="number" [(ngModel)] = "addList[0].mobile" maxlength="20" name="phoneNo" required/>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label class="col-md-12">Contacted By</label>\r\n                            \x3c!-- <select [(ngModel)]="addList[0].contactId" class="form-control" name="contactedBy" required>\r\n                                <option value="">Select</option>\r\n                                <option *ngFor="let employee of employees" [value]="employee.value">{{employee.label}}</option>\r\n                            </select> --\x3e\r\n                            <p-autoComplete field="name"\r\n                                [(ngModel)]="addList[0].contactId"\r\n                                name="employees" errorMessage="Records not found" [forceSelection]="true"\r\n                                [dropdown]="true" [suggestions]="employeeList"\r\n                                (completeMethod)="filterEmployee($event)"\r\n                                [size]="30" [minLength]="1" [dropdown]="true"\r\n                                class="p-autoComplete-ctsm" required>\r\n                            </p-autoComplete>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                      \r\n                    </div>                    \r\n                </div>                \r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary btn-primary" data-dismiss="modal" (click)="savePhone()"\r\n                    style="padding: 6px 12px !important;margin-top: 10px;" [disabled]="!textForm.valid">\r\n                    {{(isEdit)?\'Update\':\'Save\'}}\r\n                </button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" style="padding: 6px 12px !important;margin-top: 10px;">Close</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>'},w6bw:function(e,t,r){"use strict";r.r(t),t.default='\x3c!-- <div class="approver-tab-cstm">\r\n\r\n    <h5 class="po-head">Approvers List</h5>\r\n    <div class="form-row">\r\n        <div class="col-md-12">\r\n            <div class="table-responsive">\r\n                <div class="table-responsive" style="margin-top: 10px;">\r\n                    <table class="table table-bordered table-striped table-fixed table-sorting mpn-list-table"\r\n                        id="mpn-list-table">\r\n                        <thead>\r\n                            <tr class="pad_workflo">\r\n                                <th style="width:150px">Approver Name</th>\r\n                                <th style="width:150px">Approver Code</th>\r\n                                <th style="width:150px">Approver Email</th>\r\n                                <th style="width:100px">Quote Amount</th>\r\n                                <th style="width:100px">Min Amount</th>\r\n                                <th style="width:100px">Max Amount</th>\r\n                                <th>Message</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr class="mpn-row" style="display: table-row;"\r\n                                *ngFor="let approver of approvers; let i=index;"\r\n                                [ngClass]="{red : approver.isExceeded == true}">\r\n                                <td>\r\n                                    {{approver.approverName}}\r\n                                </td>\r\n                                <td>\r\n                                    {{approver.approverCode}}\r\n                                </td>\r\n                                <td>\r\n                                    {{approver.approverEmail}}\r\n                                </td>\r\n                                <td style="text-align: right;">\r\n                                    {{approver.totalCost | twoDecimalGlobalNumberFormatPipe}}\r\n                                </td>\r\n                                <td style="text-align: right;">\r\n                                    {{approver.lowerValue | twoDecimalGlobalNumberFormatPipe}}\r\n                                </td>\r\n                                <td style="text-align: right;">\r\n                                    {{approver.upperValue | twoDecimalGlobalNumberFormatPipe}}\r\n                                </td>\r\n                                <td>\r\n                                    {{approver.message}}\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> --\x3e\r\n\x3c!-- <div class="approver-tab-cstm">\r\n    <h5 class="po-head">Approvers List</h5>\r\n    <div class="table-responsive"\r\n        style="margin-top: 10px; max-height: 600px !important; overflow-y: scroll !important;">\r\n        <table class="table table-bordered approvers-table" id="mpn-list-table">\r\n            <thead>\r\n                <tr class="pad_workflo">\r\n                    <th>Approver Name</th>\r\n                    <th>Approver Code</th>\r\n                    <th>Approver Email</th>\r\n                    <th>Quote Amount</th>\r\n                    <th>Min Amount</th>\r\n                    <th>Max Amount</th>\r\n                    <th>Message</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr class="mpn-row" *ngFor="let approver of approvers; let i=index;">\r\n                    <td>{{approver.approverName}}</td>\r\n                    <td>{{approver.approverCode}}</td>\r\n                    <td>{{approver.approverEmail}}</td>\r\n                    <td style="text-align: right;">\r\n                        <label\r\n                            style="text-align: right !important;">{{approver.totalCost | twoDecimalGlobalNumberFormatPipe}}</label>\r\n                    </td>\r\n                    <td style="text-align: right;">\r\n                        <label\r\n                            style="text-align: right !important;">{{approver.lowerValue | twoDecimalGlobalNumberFormatPipe}}</label>\r\n                    </td>\r\n                    <td style="text-align: right;">\r\n                        <label\r\n                            style="text-align: right !important;">{{approver.upperValue | twoDecimalGlobalNumberFormatPipe}}</label>\r\n                    </td>\r\n                    <td [ngClass]="{red : approver.isExceeded == true}">{{approver.message}}</td>\r\n                </tr>\r\n                <tr *ngIf="approvers.length == 0">\r\n                    <td [attr.colspan]="29" class="no-records-cstm"\r\n                        style="color: red; font-weight: bold; text-align: center">\r\n                        No records found\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div> --\x3e\r\n\r\n\r\n\x3c!-- <p-tabPanel *ngIf="!posettingModel.IsEnforceApproval" header="Internal Approvers"> --\x3e\r\n    <div class="approver-tab-cstm">\r\n        <div class="table-responsive">\r\n        <div class="table-responsive" style="margin-top: 10px; max-height: 600px !important; overflow-y: scroll !important;">\r\n            <table class="table table-bordered table-striped \r\n            table-fixed table-sorting mpn-list-table"\r\n                   id="mpn-list-table">\r\n                <thead>\r\n                    <tr class="pad_workflo">\r\n                        <th>Approver Name</th>\r\n                        <th>Approver Code</th>\r\n                        <th>Approver Email</th>\r\n                        <th>Total Sales Quote Amout</th>\r\n                        <th>Approver Rule</th>\r\n                        <th>Memo</th>                                \r\n                        <th>Message</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr  class="mpn-row" *ngFor="let approver of internalApproversList; let i=index;">\r\n                        <td>{{approver.approverName}}</td>\r\n                        <td>{{approver.approverCode}}</td>\r\n                        <td>{{approver.approverEmail}}</td>\r\n                        <td style="text-align: right;">\r\n                            <label style="text-align: right !important;">{{approver.totalCost | twoDecimalGlobalNumberFormatPipe}}</label>\r\n                        </td>\r\n                        <td>\r\n                            {{approver.rule}}\r\n                        </td>\r\n                        <td>\r\n                            <p class="m-0 p-0 p_textEditor" style="float: left" [innerHTML]="approver[\'memo\']"></p>\r\n                        </td>\r\n                        <td [ngClass]="{red : approver.isExceeded == true}" >{{approver.message}}</td>\r\n                    </tr>\r\n                    <tr  *ngIf="internalApproversList.length == 0" >\r\n                        <td [attr.colspan]="29"   class="no-records-cstm" style="color: red; font-weight: bold; text-align: center">\r\n                            No records found\r\n                        </td>\t\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </div>\r\n    </div>\r\n\x3c!-- </p-tabPanel> --\x3e'},wF9L:function(e,t,r){"use strict";r.r(t),t.default='\x3c!-- <div class="card">\r\n  <div class="card-body">\r\n    <h5 class="po-head-15f">Management Structure <span class="clr-red">*</span> </h5>\r\n    <div class="col-md-12">\r\n      <div class="form-group">\r\n        <p-dropdown placeholder="Select Legal Entity" name="company" #wocompanyId="ngModel" required\r\n          [options]="legalEntityList" class="p-dropdown-custom-md-2" (onChange)="selectedLegalEntity($event.value)"\r\n          [(ngModel)]="salesQuote.companyId">\r\n        </p-dropdown>\r\n      </div>\r\n      <div class="form-group">\r\n        <p-dropdown placeholder="Select " name="bu" #wobu="ngModel" [options]="businessUnitList"\r\n          class="p-dropdown-custom-md-2" (onChange)="selectedBusinessUnit($event.value)" [(ngModel)]="salesQuote.buId">\r\n        </p-dropdown>\r\n      </div>\r\n      <div class="form-group">\r\n\r\n        <p-dropdown placeholder="Select " name="division" #wodivision="ngModel" [options]="divisionList"\r\n          class="p-dropdown-custom-md-2" (onChange)="selectedDivision($event.value)"\r\n          [(ngModel)]="salesQuote.divisionId">\r\n        </p-dropdown>\r\n      </div>\r\n      <div class="form-group">\r\n        <p-dropdown placeholder="Select " name="department" #wodepartment="ngModel" [options]="departmentList"\r\n          class="p-dropdown-custom-md-2" (onChange)="selectedDepartment($event.value)"\r\n          [(ngModel)]="salesQuote.departmentId">\r\n        </p-dropdown>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> --\x3e\r\n<div class="card" style="margin-top: 20px;">\r\n  <div class="card-header" style="padding: 10px 12px;">\r\n    <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure <span class="clr-red">*</span></h5>\r\n\r\n  </div>\r\n  <div class="card-body" style="padding: 12px 12px 4px;">\r\n    <div class="form-group">\r\n      <select [ngClass]="managementValidCheck ? \'select-validate-cstm\' : \'\'" class="form-control" name="primaryCompany"\r\n        [(ngModel)]="salesQuote.companyId"\r\n        (change)="getBUList(salesQuote.companyId); checkValidOnChange(salesQuote.companyId, \'companyId\');" #mCompanyName\r\n        (ngModelChange)="enableHeaderSave()" required>\r\n        <option value="0">Select</option>\r\n        <option *ngFor="let name of maincompanylist" [ngValue]="name.value">{{name.label}}</option>\r\n      </select>\r\n      <div *ngIf="mCompanyName.invalid && (mCompanyName.dirty || mCompanyName.touched)"\r\n        class="alert alert-danger alert-danger-cstm">\r\n        <div *ngIf="mCompanyName.errors.required">\r\n          <small> Company Name is required </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class="form-group">\r\n      <select [(ngModel)]="salesQuote.buId" name="primaryBU" (change)="getDivisionlist(salesQuote.buId)"\r\n        class="form-control" (ngModelChange)="enableHeaderSave()">\r\n        <option value="0">Select</option>\r\n        <option *ngFor="let name of bulist" [ngValue]="name.value">{{name.label}}</option>\r\n      </select>\r\n    </div>\r\n    <div class="form-group">\r\n      <select class="form-control" [(ngModel)]="salesQuote.divisionId" name="primaryDivision"\r\n        (change)="getDepartmentlist(salesQuote.divisionId)" (ngModelChange)="enableHeaderSave()">\r\n        <option value="0">Select</option>\r\n        <option *ngFor="let name of divisionlist" [ngValue]="name.value">{{name.label}}</option>\r\n      </select>\r\n    </div>\r\n    <div class="form-group">\r\n      <select class="form-control" [(ngModel)]="salesQuote.departmentId" name="primaryDept"\r\n        (change)="getDepartmentId(salesQuote.departmentId)" (ngModelChange)="enableHeaderSave()">\r\n        <option value="0">Select</option>\r\n        <option *ngFor="let name of departmentList" [ngValue]="name.value">{{name.label}}</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n  <div class="loading">\r\n    <div class="lds-roller">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n</div>'},wKQm:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),function(e){for(var r in e)t.hasOwnProperty(r)||(t[r]=e[r])}(r("Qe1B"))},yhfA:function(e,t,r){"use strict";r.r(t),t.default='<p-breadcrumb [model]="breadcrumbs" [home]="home"></p-breadcrumb>\r\n\r\n<div class="card new-card">\r\n  <div class="card-header bg-primary new-card-header">\r\n    <div class="row">\r\n      <div class="col">\r\n        <h4 class="new-card-heading">Quote List</h4>\r\n      </div>\r\n      <div>\r\n        <button type="button" class="btn-sm new-btn-primary" matTooltipPosition="above"\r\n          matTooltip="Create Sales Order Quote" [routerLink]="[\'/salesmodule/salespages/sales-quote\']">\r\n          Create Sales Order Quote\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class="card-body new-card-body">\r\n    <p-table #dt [value]="sales" class="rpo-table-cstm rro-table-cstm" [first]="0" [rows]="pageSize"\r\n      [paginator]="showPaginator" [pageLinks]="3" [rowsPerPageOptions]="[10, 20, 50, 100]" [columns]="selectedColumns"\r\n      selectionMode="multiple" [metaKeySelection]="true" [(selection)]="selectedColumn" [lazy]="true"\r\n      (onLazyLoad)="loadData($event)" [resizableColumns]="true" [reorderableColumns]="true"\r\n      [totalRecords]="totalRecords" [scrollable]="true" [style]="{ width: \'100%\' }">\r\n      <ng-template pTemplate="caption">\r\n        <div class="row">\r\n          <div class="col">\r\n            <p-multiSelect [options]="headers" [(ngModel)]="selectedColumns" optionLabel="header"\r\n              selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns"\r\n              style="float:left"></p-multiSelect>\r\n          </div>\r\n          <div class="col">\r\n            <div style="width: auto !important; float: right;"\r\n              class="inner-addon right-addon w50 inline-block g-filter-search-cstm">\r\n              <i class="fa fa-search"></i>\r\n              <input type="text" pInputText size="50" class="form-control" (input)="globalSearch($event.target.value)"\r\n                placeholder="Filter">\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class="row">\r\n          <div class="col">\r\n            <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"\r\n              matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Data"\r\n              data-toggle="modal" (click)="selectedOnly = false; targetData = dt;"\r\n              data-target="#downloadConfirmation"></button>\r\n            \x3c!-- (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true })\r\n                :exportCSV(targetData); closeDeleteModal();" --\x3e\r\n            <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"\r\n              matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n              (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n              <label class="radio-cstm wauto">\r\n                <input type="radio" name="viewType" class="form-control" value="pnview" [(ngModel)]="viewType"\r\n                  (click)="changeOfStatus(\'\',\'pnview\')">\r\n                <span class="checkmark"></span>PN View\r\n              </label>\r\n            </div>\r\n            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n              <label class="radio-cstm wauto">\r\n                <input type="radio" name="viewType" class="form-control" value="soqview" [(ngModel)]="viewType"\r\n                  (click)="changeOfStatus(\'\',\'soqview\')">\r\n                <span class="checkmark"></span>SOQ View\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div class="pull-right" style="padding-left:0px;">\r\n            <div class="">\r\n              <div class="col" style="float: right; padding: 3px 0 0;">\r\n                <div class="form-group">\r\n                  <div class="pull-left" style="margin-top: 4px; margin-right: 15px;" *ngFor="let status of statusList">\r\n                    <label class="radio-cstm wauto">\r\n                      <input type="radio" name="currentStatus" class="form-control" value="{{status.value}}"\r\n                        [(ngModel)]="currentStatus" (change)="clearText(currentStatus); changeOfStatus(status.value, \'\');">\r\n                      <span class="checkmark"></span>{{status.label}}\r\n                    </label>\r\n                  </div>\r\n                  <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                    <label class="radio-cstm wauto">\r\n                      <input type="radio" name="currentStatusSoq" class="form-control" value="0"\r\n                        [(ngModel)]="currentStatus" checked="{{currentStatus == 0}}" (change)="clearText(currentStatus); changeOfStatus(0, \'\');">\r\n                      <span class="checkmark"></span>All\r\n                    </label>\r\n                  </div>\r\n                  <div class="checkbox-cstm pull-right" style="margin-left: 0;">\r\n                    <label style="width: auto !important;margin-top: 3px;">\r\n                      \x3c!--  --\x3e\r\n                      <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent"\r\n                        (click)="getDeleteListByStatus($event.target.checked)" />\r\n                      <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                      Show Deleted List\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n      <ng-template pTemplate="colgroup" let-columns>\r\n        <colgroup>\r\n          <col *ngFor="let col of columns" [ngStyle]="{\'width\': col.width}" />\r\n        </colgroup>\r\n      </ng-template>\r\n      <ng-template pTemplate="header" let-columns>\r\n        <tr>\r\n          <th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n            {{ col.header }}\r\n            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n          </th>\r\n          <th style="width:100px;position:sticky !important">\r\n            Actions\r\n          </th>\r\n        </tr>\r\n        <tr>\r\n          <th [ngStyle]="{\'width\': col.width}" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n            <ng-container *ngIf="col.field == \'status\'">\r\n              <input *ngIf="col.field !== \'quoteDate\' \r\n              && col.field !== \'createdDate\'\r\n              && col.field !== \'updatedDate\'" #filterStatusInput [disabled]="col.field == \'status\' &&  currentStatus !=\'0\'"\r\n              style="width:100%;" pInputText type="text"\r\n              (input)="dt.filter($event.target.value, col.field, \'contains\')">\r\n            </ng-container>\r\n            <ng-container *ngIf="col.field != \'status\'">\r\n              <input *ngIf="col.field !== \'quoteDate\' \r\n              && col.field !== \'createdDate\'\r\n              && col.field !== \'updatedDate\'" [disabled]="col.field == \'status\' &&  currentStatus !=\'0\'"\r\n              style="width:100%;" pInputText type="text"\r\n              (input)="dt.filter($event.target.value, col.field, \'contains\')">\r\n            </ng-container>\r\n            <input type="date" *ngIf="col.field == \'quoteDate\'" name="quoteDate" style="width:100%;"\r\n              (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n            <input type="date" *ngIf="col.field == \'createdDate\'" name="createdDate" style="width:100%;"\r\n              (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n            <input type="date" *ngIf="col.field == \'updatedDate\'" name="updatedDate" style="width:100%;"\r\n              (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n\r\n\r\n          </th>\r\n          <th style="width:100px;position:sticky !important"></th>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="body" let-rowData let-rowIndex="rowIndex" let-expanded="expanded" let-columns="columns">\r\n        <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex" pReorderableRowHandle>\r\n          <td *ngFor="let col of columns" style="text-overflow: ellipsis;"\r\n            [matTooltip]="mouseOverData(col.field,  rowData)" matTooltipPosition="above"\r\n            [matTooltipDisabled]="rowData[\'partNumberType\'] != \'Multiple\'"\r\n            [ngStyle]="{\'color\': getColorCodeForMultiple(rowData)}">\r\n            <span *ngIf="col.field == \'quoteAmount\' || col.field == \'soAmount\'" style="float: right !important;">\r\n              {{convertDate(col.field , rowData) | toDecimal}}\r\n            </span>\r\n            <span\r\n              *ngIf="col.field != \'quoteAmount\' && col.field != \'soAmount\' && col.field != \'createdDate\' && col.field != \'updatedDate\'">\r\n              {{convertDate(col.field , rowData)}}\r\n            </span>\r\n            <span *ngIf="col.field == \'createdDate\' || col.field == \'updatedDate\'">\r\n              {{convertDate(col.field , rowData) | date: \'MM/dd/yyyy h:mm a \'}}\r\n            </span>\r\n\r\n          </td>\r\n          <td style="width: 100px">\r\n            <div *ngIf="currentDeletedstatus==false">\r\n              <span>\r\n                <a class="btn nobg" (click)="viewSelectedRow(viewQuote,rowData)" matTooltip="View"\r\n                  matTooltipPosition="above"><i class="fa fa-eye"></i></a>\r\n              </span>\r\n\r\n              <span>\r\n                <a [class.disabled]="rowData.status === \'Closed\' || rowData.isNewVersionCreated || rowData.status === \'Expired\'"\r\n                  [ngClass]="{\'btn_disabled\': rowData.status === \'Closed\' || rowData.isNewVersionCreated || rowData.status === \'Expired\'}"\r\n                  class="btn nobg" (click)="openQuoteToEdit(rowData)" matTooltip="Edit" matTooltipPosition="above">\r\n                  <i class="fa fa-pencil"></i>\r\n                </a>\r\n              </span>\r\n\r\n              <span>\r\n                <a [class.disabled]="rowData.status === \'Closed\' || rowData.isNewVersionCreated || rowData.status === \'Expired\'"\r\n                  [ngClass]="{\'btn_disabled\': rowData.status === \'Closed\' || rowData.isNewVersionCreated || rowData.status === \'Expired\'}"\r\n                  class="btn nobg" (click)="openDelete(content,rowData)" matTooltip="Delete" matTooltipPosition="above">\r\n                  <i class="fa fa-trash"></i>\r\n                </a>\r\n              </span>\r\n              <span data-toggle="modal" data-target="#soqHistory">\r\n                <a class="btn nobg btn-hist-cstm" (click)="getAuditHistoryById(rowData)" matTooltip="History"\r\n                  matTooltipPosition="above"><i class="fa fa-history"></i></a>\r\n              </span>\r\n            </div>\r\n            <div *ngIf="currentDeletedstatus==true">\r\n              <span>\r\n                <a class="btn nobg" (click)="viewSelectedRow(viewQuote,rowData)" matTooltip="View"\r\n                  matTooltipPosition="above"><i class="fa fa-eye"></i></a>\r\n              </span>\r\n              <span data-toggle="modal" data-target="#soqHistory">\r\n                <a class="btn nobg btn-hist-cstm" (click)="getAuditHistoryById(rowData)" matTooltip="History"\r\n                  matTooltipPosition="above"><i class="fa fa-history"></i></a>\r\n              </span>\r\n              <span><a class="btn nobg" (click)="restore(restoreIdSoq,rowData);" matTooltip="Restore Record"\r\n                  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="emptymessage" let-columns *ngIf="sales.length == 0">\r\n        <tr>\r\n          <td [attr.colspan]="10" style="color: red; font-weight: bold; text-align: center">\r\n            No records found\r\n          </td>\r\n        </tr>\r\n      </ng-template>\r\n      <ng-template pTemplate="summary" id="footer">\r\n        <label id="footer" class="footer">Total:</label>\r\n        <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n        &nbsp;&nbsp;\r\n        <label id="footer" class="footer1">Pages Count:</label>\r\n\r\n        <input style="width: 5%;" [ngModel]="totalPages" [disabled]="true" pInputText type="text" />\r\n      </ng-template>\r\n    </p-table>\r\n  </div>\r\n</div>\r\n\x3c!-- <div class="preloader loader-position" *ngIf="isSpinnerVisible">\r\n  <div class="loader-css loader-align">\r\n    <img src="../../../../assets/images/loader.gif" />\r\n  </div>\r\n</div> --\x3e\r\n<ng-template #restoreIdSoq let-c="close" let-d="dismiss" data-backdrop="static">\r\n\r\n  <div class="modal-header">\r\n    <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n\r\n    <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n      <span aria-hidden="true">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class="modal-body">\r\n    <h6 class="modal-body">SO Quote Number : {{restorerecord.salesOrderQuoteNumber}}</h6>\r\n  </div>\r\n  <div class="modal-footer">\r\n    <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n    <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n  </div>\r\n</ng-template>\r\n<div class="modal fade" id="downloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n  <div class="modal-dialog modal-sm">\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" (click)="closeModal()">&times;</button>\r\n        <h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n      </div>\r\n      <div class="modal-body" *ngIf="targetData && !selectedOnly">\r\n        <strong>\r\n          <span>\r\n            You are attempting to export {{targetData.totalRecords}} of records.\r\n          </span>\r\n        </strong>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary"\r\n          (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):exportCSV(targetData); closeDeleteModal();">Confirm</button>\r\n        <button type="button" class="btn btn-danger" (click)="closeModal()">Cancel</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ng-template #content let-c="close" let-d="dismiss">\r\n  <div class="modal-header">\r\n    <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n    <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n      <span aria-hidden="true">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class="modal-body">\r\n    <h6 class="modal-body">SO Quote Number : {{selectedQuoteToDelete}}</h6>\r\n  </div>\r\n\r\n  <div class="modal-footer">\r\n    <button type="button" class="btn btn-success" (click)="deleteQuote()">Yes</button>\r\n    <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n  </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #viewQuote let-c="close" let-d="dismiss">\r\n  <div class="modal-header">\r\n    <button type="button" class="close" (click)="dismissModel()">\r\n      &times;\r\n    </button>\r\n    <h4 class="modal-title">Details of Quote</h4>\r\n  </div>\r\n\r\n  <div class="modal-body" *ngIf="salesQuote">\r\n    <app-sales-quote-view [customerId]="customerId" [salesQuoteId]="salesOrderQuoteId"\r\n      [salesQuoteView]="salesQuoteView"></app-sales-quote-view>\r\n  </div>\r\n  <div class="modal-footer">\r\n    <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n  </div>\r\n\r\n</ng-template>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n  <div class="loading">\r\n    <div class="lds-roller">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div id="soqHistory" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n  <div class="modal-dialog modal-xl">\r\n\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" (click)="closeHistoryModal()">&times;</button>\r\n        <h4 class="modal-title">History of Sales Order Quote</h4>\r\n      </div>\r\n      <div class="modal-body" *ngIf="auditHistory">\r\n        <div class="table-responsive">\r\n          <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n            <thead>\r\n              <tr>\r\n                <th>Quote Num</th>\r\n                <th>Status</th>\r\n                <th>SO Num</th>\r\n                <th>Customer Name</th>\r\n                <th>Customer Type</th>\r\n                <th>Cust Ref</th>\r\n                <th>Probability</th>\r\n                <th>Salesperson</th>\r\n                <th>Created Date</th>\r\n                <th>Created By</th>\r\n                <th>Updated Date</th>\r\n                <th>Updated By</th>\r\n                <th>Is Deleted</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class="audithistory-cstm">\r\n              \x3c!--*ngIf="auditHistory.length> 0"--\x3e\r\n              <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                <td\r\n                  [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'salesOrderQuoteNumber\', audit.salesOrderQuoteNumber)  ? \'black\' : \'red\'  }">\r\n                  {{audit.salesOrderQuoteNumber}}</td>\r\n                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'status\', audit.status)  ? \'black\' : \'red\'  }">\r\n                  {{audit.status}}</td>\r\n                <td\r\n                  [ngStyle]="{\'color\': getColorCodeForHistory(i, \'salesOrderNumber\', audit.salesOrderNumber)  ? \'black\' : \'red\'  }">\r\n                  {{audit.salesOrderNumber}}</td>\r\n                <td\r\n                  [ngStyle]="{\'color\': getColorCodeForHistory(i, \'customerName\', audit.customerName)  ? \'black\' : \'red\'  }">\r\n                  {{audit.customerName}}</td>\r\n                <td\r\n                  [ngStyle]="{\'color\': getColorCodeForHistory(i, \'customerType\', audit.customerType)  ? \'black\' : \'red\'  }">\r\n                  {{audit.customerType}}</td>\r\n                <td\r\n                  [ngStyle]="{\'color\': getColorCodeForHistory(i, \'customerReference\', audit.customerReference)  ? \'black\' : \'red\'  }">\r\n                  {{audit.customerReference}}</td>\r\n                <td\r\n                  [ngStyle]="{\'color\': getColorCodeForHistory(i, \'probability\', audit.probability)  ? \'black\' : \'red\'  }">\r\n                  {{audit.probability}}</td>\r\n                <td\r\n                  [ngStyle]="{\'color\': getColorCodeForHistory(i, \'salesPerson\', audit.salesPerson)  ? \'black\' : \'red\'  }">\r\n                  {{audit.salesPerson}}</td>\r\n                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'createdBy\', audit.createdBy)  ? \'black\' : \'red\'  }">\r\n                  {{audit.createdBy}}</td>\r\n                <td\r\n                  [ngStyle]="{\'color\': getColorCodeForHistory(i, \'createdDate\', audit.createdDate)  ? \'black\' : \'red\'  }">\r\n                  {{audit.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                <td\r\n                  [ngStyle]="{\'color\': getColorCodeForHistory(i, \'updatedDate\', audit.updatedDate)  ? \'black\' : \'red\'  }">\r\n                  {{audit.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'updatedBy\', audit.updatedBy)  ? \'black\' : \'red\'  }">\r\n                  {{audit.updatedBy}}</td>\r\n                <td>\r\n                  <p style="background-color: #fff !important;"> <input type="checkbox" name="isDeleted"\r\n                      [(ngModel)]="audit.isDeleted" disabled></p>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <ng-template #noDatavailable>\r\n            <div class="text-center">\r\n              <img src="../../../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n              <h4 style="color: #ff5663;">No History Found </h4>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n      <div class="preloader" style="z-index: 10000;" *ngIf="isSpinnerVisible">\r\n        <div class="loading">\r\n          <div class="lds-roller">\r\n            <div>\r\n            </div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <app-spinner *ngIf="isSpinnerVisible"></app-spinner>\r\n      <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="closeHistoryModal()">Close</button>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>'},ywEN:function(e,t,r){"use strict";r.r(t),t.default=".x_panel {\n  padding: 0 10px;\n  background-color: #fff;\n}\n\nlabel {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\n.viewform-cstm .label {\n  width: 120px !important;\n}\n\n.viewform-cstm .value {\n  margin-left: 10px;\n}\n\n.form-control:disabled {\n  background-color: #e9ecef !important;\n}\n\ninput[type=text], input[type=number], input[type=email], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n  height: 24px !important;\n}\n\na.fa.fa-plus-circle {\n  color: green !important;\n}\n\n.label-cstm {\n  width: auto;\n  float: left;\n  text-align: left;\n  margin-right: 0;\n  font-weight: normal;\n}\n\na.fa.fa-plus-circle {\n  color: green !important;\n}\n\n.checkbox-cstm {\n  margin-left: 10px;\n}\n\n.cus-contact-table tr th {\n  padding: 7px;\n}\n\n.cus-contact-table tr td {\n  padding: 4px;\n}\n\n/*// @media (min-width: 768px) {\n    // .col-md-3\n\n{\n    // max-width: 22%;\n    // margin-right: 15px;\n    //\n}\n\n// .col-md-6 {\n    // max-width: 44%;\n    // margin-right: 15px;\n    //\n}\n\n//\n}*/\n\n.btn-tbl-file-download {\n  /* padding: 1px 4px; */\n  line-height: 7px;\n  width: 85px !important;\n  height: 19px;\n  border: 0;\n}"}}]);