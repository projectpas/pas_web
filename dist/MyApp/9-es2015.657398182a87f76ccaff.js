(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"+rfH":function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));class s{constructor(t,e,n,s,a,r,i,o,l,c,d,u){this.assetLocationId=e,this.code=n,this.name=s,this.memo=a,this.masterCompanyId=r,this.createdBy=i,this.updatedBy=o,this.createdDate=l,this.updatedDate=c,this.isDelete=d,this.isActive=u}}},"0leF":function(t,e,n){"use strict";n.r(e),e.default=".ms-block {\n  padding: 5px;\n  box-shadow: 1px 1px 5px #bbb;\n  background: #fff;\n  width: 300px;\n  text-align: center;\n}"},"1tnc":function(t,e,n){"use strict";n.r(e),e.default='<p-breadcrumb [model]="breadcrumbs" [home]="home" *ngIf="isView==false"></p-breadcrumb>\r\n<div class="card new-card" >\r\n    <div class="card-header bg-primary" *ngIf="isView==false">\r\n      <div class="row">\r\n        <div class="col">\r\n          <h4 class="new-card-heading">  {{ assetServices.isEditMode == true ? \'Edit\'  : \'Create\'}} Asset Caps</h4>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type="button"\r\n            class="btn-sm new-btn-primary"\r\n            [routerLink]="[\'/assetmodule/assetpages/app-asset-listing\']">\r\n            Asset List\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class="card-body new-card-body">\r\n<div class="md-stepper-horizontal orange new-stepper-align" *ngIf="isView==false">\r\n    <div class="md-step" [ngClass]="{ active: activeIndex >= 0 , editable : activeIndex === 0}"\r\n         (click)="changeOfTab(\'General\')">\r\n        <div class="md-step-circle"><span>1</span></div>\r\n        <div class="md-step-title">General Information</div>\r\n        <div class="md-step-bar-left"></div>\r\n        <div class="md-step-bar-right"></div>\r\n    </div>\r\n    <div class="md-step" [ngClass]="{ active: activeIndex >= 1, editable : activeIndex === 1 }"\r\n         (click)="changeOfTab(\'Capes\')">\r\n        <div class="md-step-circle"><span>2</span></div>\r\n        <div class="md-step-title">Capes</div>\r\n        <div class="md-step-bar-left"></div>\r\n        <div class="md-step-bar-right"></div>\r\n    </div>\r\n    <div class="md-step" [ngClass]="{ active: activeIndex >= 2 , editable : activeIndex === 2 }"\r\n         (click)="changeOfTab(\'Calibration\')">\r\n        <div class="md-step-circle"><span>3</span></div>\r\n        <div class="md-step-title">Calibration</div>\r\n        <div class="md-step-bar-left"></div>\r\n        <div class="md-step-bar-right"></div>\r\n    </div>\r\n    <div class="md-step" [ngClass]="{ active: activeIndex >= 3 , editable : activeIndex === 3 }"\r\n         (click)="changeOfTab(\'Maintenance\')">\r\n        <div class="md-step-circle"><span>4</span></div>\r\n        <div class="md-step-title">Maintenance & Warranty</div>\r\n        <div class="md-step-bar-left"></div>\r\n        <div class="md-step-bar-right"></div>\r\n    </div>\r\n</div>\r\n<div class="card" style="border: none;">\r\n    \x3c!-- <div class="x_content"> --\x3e\r\n        \x3c!-- <div action="#" method="post" id="" name="" class="form-horizontal ro-grid-form mtop10"> --\x3e\r\n            \x3c!-- <ng-template #content id="addShippingInfo" let-c="close" let-d="dismiss">\r\n                 --\x3e\r\n            <div class="modal fade" #content id="addShippingInfo" role="dialog" data-backdrop="static">\r\n                <div class="modal-dialog  modal-xlg" id="addShippingInfo">\r\n                    \x3c!-- Modal content--\x3e\r\n                    <div class="modal-content">\r\n                        <div class="modal-header">\r\n                            <button type="button" class="close" data-dismiss="modal" (click)="dismissModelWithAlert()">\xd7</button>\r\n                            <h4 class="modal-title">Add Capability</h4>\r\n\r\n                        </div>\r\n                        <div class="form-row" style="padding: 12px 20px;">\r\n                            <div class="col-md-3">\r\n                                <label class="fs12">Asset ID : </label>\r\n                                <span class="span-header-red"> {{local?.assetId}}</span>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <label class="fs12">Asset Name : </label>\r\n                                <span class="span-header-red"> {{local?.name}}</span>\r\n\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <label class="fs12">Alt Asset ID : </label>\r\n                                <span class="span-header-red"> {{local?.alternateAssetName}}</span> \r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <label class="fs12">Asset Class/Attribute : </label>\r\n                                <span class="span-header-red"> {{local?.assetAttributeType}}</span> \r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div class="modal-body" style="padding: 12px;">\r\n                            <form #genForm="ngForm" [formGroup]="capabilitiesForm">\r\n                                <div formArrayName="mfgForm">\r\n                                    <div class="form-row">\r\n                                        <div class="col-md-2">\r\n                                            <div class="form-group">\r\n                                                <label class="popup-plusicon-cstm-caps">Capability Type  <span class="clr-red">*</span></label>\r\n                                             \r\n                                                <p-dropdown class="p-dropdown-100"  [ngModelOptions]="{standalone: true}" (input)="onFilterCapability($event.target.value)" (onChange)="onCapabilityTypeSelection($event)"  (ngModelChange)="getmemo($event)" required [options]="capabilityTypeData" filter="true" [(ngModel)]="capabilityForm.CapabilityTypeId" name="CapabilityTypeId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-2">\r\n                                            <div class="form-group pop-up-caps-autocomplete">\r\n                                                <label class="popup-plusicon-cstm-caps">PN  <span class="clr-red">*</span></label>\r\n                                         \r\n\r\n                                                <p-autoComplete  (ngModelChange)="getmemo($event)" class="p-autoComplete-ctsm" field="partNumber" name="Inspector47" [dropdown]="true"\r\n                                                errorMessage="Records not found"  [suggestions]="partCollection" emptyMessage="No Records Found" [ngModelOptions]="{standalone: true}"\r\n                                                (completeMethod)="filterPNpartItems($event)"  [size]="30" [minLength]="1" required  (onKeyUp)=partPNentHandler($event) (onSelect)="partnmId($event)"\r\n                                                [(ngModel)]="capabilityForm.selectedPartId"  #prellRevInsp33="ngModel" >\r\n                                            </p-autoComplete> \r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-2">\r\n                                            <div class="form-group">\r\n                                                <label class="popup-plusicon-cstm-caps text-left">\r\n                                                    Aircraft Manufacturer <span class="clr-red">*</span>\r\n                                                </label>\r\n                                                <p-dropdown class="p-dropdown-100" (input)="onFilteManufacturer($event.target.value)"  [ngModelOptions]="{standalone: true}" (onChange)="manufacturerChange($event,capabilityForm)" required  (ngModelChange)="getmemo($event)"  [options]="manufacturerData" filter="true" [(ngModel)]="capabilityForm.selectedAircraftTypes" name="selectedAircraftTypes" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-2">\r\n                                            <div class="">\r\n                                                <span class="popup-plusicon-cstm-caps text-left">\r\n                                                    Model\r\n                                                    <input type="checkbox" [(ngModel)]="modelUnknown"\r\n                                                           [ngModelOptions]="{standalone: true}" style="width: 20px !important;    position: relative;\r\n                                                           top: 2px; margin-left: 7px; "\r\n                                                           (change)="resetAircraftModelsorDashNumbers($event,1);"> Unknown\r\n                                                </span>\r\n                                                <p-multiSelect *ngIf="!modelUnknown" [maxSelectedLabels]="2"\r\n                                                               [disabled]="!selectedAircraftId" class="imstock-pmselect"\r\n                                                               [options]="capabilityForm.selectedAircraftDataModels"\r\n                                                               [ngModelOptions]="{standalone: true}" \r\n                                                               [(ngModel)]="capabilityForm.selectedAircraftModelTypes"\r\n                                                               [panelStyle]="{minWidth:\'12em\'}"\r\n                                                               (click)="openModelPopups(capabilityForm)"\r\n                                                               (onChange)="aircraftModalChange($event,capabilityForm)">\r\n                                                </p-multiSelect>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-3" *ngIf="!modelUnknown">\r\n                                            <div class="">\r\n                                                <span class="popup-plusicon-cstm-caps text-left">\r\n                                                    Dash Number\r\n                                                    <input type="checkbox" [(ngModel)]="dashNumberUnknown"\r\n                                                           style="width: 20px !important; margin-left: 7px;  position: relative;\r\n                                                           top: 2px; "\r\n                                                           [ngModelOptions]="{standalone: true}" \r\n                                                           (change)="resetAircraftModelsorDashNumbers($event,2);">\r\n                                                    Unknown\r\n                                                </span>\r\n\r\n                                                <p-multiSelect *ngIf=" !modelUnknown && !dashNumberUnknown" class="dashnumber_f"\r\n                                                               [disabled]="!selectedAircraftId"\r\n                                                               [options]="search_AircraftDashNumberList"\r\n                                                               [ngModelOptions]="{standalone: true}"\r\n                                                               [(ngModel)]="capabilityForm.selectedDashNumbers"\r\n                                                               [panelStyle]="{minWidth:\'12em\'}"\r\n                                                               (onChange)="dashNumberChange($event,capabilityForm)">\r\n                                                </p-multiSelect>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div class="col-md-1">\r\n                                            \x3c!-- (!modelUnknown && !capabilityForm.selectedAircraftModelTypes)||(!dashNumberUnknown && !capabilityForm.selectedDashNumbers)|| --\x3e\r\n                                            <button style="margin-top: 20px;" type="button" class="btn btn-primary"\r\n                                                    (click)="mapAircraftInformation(capabilityForm)"\r\n                                                    [disabled]="disableCapesSave || !capabilityForm.selectedPartId || !capabilityForm.selectedAircraftTypes  || !capabilityForm.CapabilityTypeId "\r\n                                                    >\r\n                                                Add  \r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="card"> \r\n                                        <p-table class="p-table-cstm" [value]="aircraftData"  [rows]="pageSize1" [paginator]="true" [pageLinks]="3"\r\n                                        [rowsPerPageOptions]="[10,20,50,100]" [totalRecords]="totalRecords1" (onLazyLoad)="loadData2($event)"\r\n                                                 [columns]="colaircraft" [scrollable]="true" [style]="{width:\'100%\'}"\r\n                                                 [paginator]="true">\r\n                                            <ng-template pTemplate="header" let-columns>\r\n                                                <tr>\r\n                                                    <th *ngFor="let col of columns" style="width:200px">\r\n                                                        {{col.header}} <span *ngIf="col.star==true" class="clr-red">*</span>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </ng-template>\r\n                                            <ng-template pTemplate="body" let-i="rowIndex" let-rowData\r\n                                                         let-columns="columns">\r\n                                                <tr>\r\n                                                    <td *ngFor="let col of columns">\r\n                                                        \x3c!-- {{rowData[col.field]}} --\x3e\r\n                                                        {{\r\n                                                            col.field == \'createdDate\'\r\n                                                              ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                                              : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                              ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                                              : rowData[col.field] \r\n                                                          }}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </ng-template>\r\n                                            <ng-template pTemplate="emptymessage" let-columns>\r\n                                                <tr>\r\n                                                    <td colspan="12" style="color: red; font-weight: bold; text-align: center">\r\n                                                        No records found\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </ng-template>\r\n                                            <ng-template pTemplate="summary" id="footer"> \r\n                                                <div style="text-align: right;">\r\n                                                    <label id="footer" class="footer">Total:</label>\r\n                                                    <input style="width: 5% !important;"  [ngModelOptions]="{standalone: true}"  [(ngModel)]="totalRecords1" disabled pInputText\r\n                                                           type="text" /> &nbsp;&nbsp;\r\n                                                    <label id="footer" class="footer1">Pages Count:</label>\r\n                                                    <input style="width: 5% !important;margin-right: 12px;"  [ngModelOptions]="{standalone: true}"  [(ngModel)]="totalPages1" disabled pInputText\r\n                                                           type="text" />\r\n                                                </div>\r\n                                            </ng-template>\r\n                                        </p-table>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div class="modal-footer">\r\n                            <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                                    (click)="saveCapabilities(capabilityForm,\'add\')" [disabled]="aircraftData && aircraftData.length == 0">\r\n                                Save\r\n                            </button>\r\n                            <button type="button" class="btn btn-danger"\r\n                                    (click)="dismissModelWithAlert()">\r\n                                Close\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \x3c!-- </ng-template> --\x3e\r\n            <ng-template #tabRedirectConfirmationModal2 let-c="close" let-d="dismiss">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">&times;</button>\r\n                    <h4 class="modal-title">Confirmation</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <h6 class="text-center">\r\n                        Are you sure you want to go to {{nextOrPreviousTab}} tab? Unsaved changes will be lost.\r\n                    </h6>\r\n                </div>\r\n                <div class="modal-footer">\r\n\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel()">No</button>\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="redirectToTab()">Yes</button>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #editcontent let-c="close" let-d="dismiss">\r\n                <div class="modal-dialog modal-xl" style="margin: 0px !important;">\r\n                    \x3c!-- Modal content--\x3e\r\n                    <div class="modal-content">\r\n                        <div class="modal-header">\r\n                            <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">\xd7</button>\r\n                            <h4 class="modal-title">Edit Capability</h4>\r\n                        </div>\r\n                        <div class="modal-body">\r\n                            <div class="form-row cal_cds">\r\n                                <div class="col-md-3">\r\n                                    <label class="fs12">Asset ID : </label>\r\n                                    <span class="span-header-red"> {{local?.assetId}}</span>\r\n                                </div>\r\n                                <div class="col-md-3">\r\n                                    <label class="fs12">Asset Name : </label>\r\n                                    <span class="span-header-red"> {{local?.name}}</span>\r\n    \r\n                                </div>\r\n                                <div class="col-md-3">\r\n                                    <label class="fs12">Alt Asset ID : </label>\r\n                                    <span class="span-header-red"> {{local?.alternateAssetName}}</span> \r\n                                </div>\r\n                                <div class="col-md-3">\r\n                                    <label class="fs12">Asset Class/Attribute : </label>\r\n                                    <span class="span-header-red"> {{local?.assetAttributeType}}</span> \r\n                                </div>\r\n                            </div>\r\n                            <form [formGroup]="capabilitiesForm">\r\n                                <div formArrayName="mfgForm">\r\n                                    <div class="form-row" *ngIf="aircraftDataEdit">\r\n                                        <div class="col-md-2">\r\n                                            <div class="form-group">\r\n                                                <label class="popup-plusicon-cstm-caps">Capability Type <span class="clr-red">*</span></label>\r\n                                               \r\n                                                <p-dropdown class="p-dropdown-100" [ngModelOptions]="{standalone: true}" (input)="onFilterCapability($event.target.value)" (onChange)="onCapabilityTypeSelection($event)"  (ngModelChange)="getmemo($event)" required [options]="capabilityTypeData" filter="true" [(ngModel)]="aircraftDataEdit.capabilityId" name="CapabilityTypeId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-2">\r\n                                            <div class="form-group pop-up-caps-autocomplete">\r\n                                                <label class="popup-plusicon-cstm-caps">PN <span class="clr-red">*</span></label>\r\n                                     <p-autoComplete  (ngModelChange)="getmemo2($event)" class="p-autoComplete-ctsm" field="partNumber" name="Inspector47" [dropdown]="true"\r\n                                                errorMessage="Records not found"  [suggestions]="partCollection" emptyMessage="No Records Found" [ngModelOptions]="{standalone: true}"\r\n                                                (completeMethod)="filterPNpartItems($event)"  [size]="30" [minLength]="1" required  (onKeyUp)=partPNentHandler($event) (onSelect)="partnmId($event)"\r\n                                                [(ngModel)]="aircraftDataEdit.partNumber"  #prellRevInsp33="ngModel" >\r\n                                            </p-autoComplete> \r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-2">\r\n                                            <div class="form-group">\r\n                                                <label class="popup-plusicon-cstm-caps text-left">\r\n                                                    Aircraft Manufacturer <span class="clr-red">*</span>\r\n                                              </label>\r\n                                                <p-dropdown class="p-dropdown-100" (input)="onFilteManufacturer($event.target.value)" [ngModelOptions]="{standalone: true}" (onChange)="manufacturerChange($event,capabilityForm)"  (ngModelChange)="getmemo2($event)"  [options]="manufacturerData" filter="true" [(ngModel)]="aircraftDataEdit.aircraftTypeId" name="aircraftTypeId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class="col-md-2">\r\n                                            <div class="">\r\n                                                \x3c!-- <label class="popup-plusicon-cstm-caps text-left">\r\n                                                    Model\r\n                                                </label> --\x3e\r\n                                                <span class="popup-plusicon-cstm-caps text-left">\r\n                                                    Model\r\n                                                    <input type="checkbox" [(ngModel)]="modelUnknown"\r\n                                                           [ngModelOptions]="{standalone: true}" style="width: 20px !important;position: relative;\r\n                                                           top: 2px; \r\n                                                           margin-left: 7px; "\r\n                                                           (change)="resetAircraftModelsorDashNumbers($event,1)"> Unknown\r\n                                                </span>\r\n                                                <select *ngIf="!modelUnknown" [(ngModel)]="aircraftDataEdit.aircraftModelId" (ngModelChange)="getmemo2($event)" (change)="aircraftModalChange_1($event,aircraftTypeId,\'\')"\r\n                                                        [ngModelOptions]="{standalone: true}" id="aircraftDashlId"\r\n                                                        style="width: 150px !important;">\r\n                                                        <option value="">--Select--</option>\r\n                                                    <option *ngFor="let m of capabilityForm.selectedAircraftDataModels" [ngValue]="m.value">\r\n                                                        {{m.label}}\r\n                                                    </option>\r\n                                                </select>\r\n                                                \x3c!-- <p-dropdown class="p-dropdown-100"  [ngModelOptions]="{standalone: true}" (input)="onFilterCapability($event.target.value)" (onChange)="onCapabilityTypeSelection($event)"  (ngModelChange)="getmemo($event)" required [options]="capabilityTypeData" filter="true" [(ngModel)]="capabilityForm.CapabilityTypeId" name="CapabilityTypeId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown> --\x3e\r\n                                            </div>\r\n                                        </div>\r\n                                     \r\n                                        <div class="col-md-2" *ngIf="!modelUnknown">\r\n                                            <div class="">\r\n                                                <span class="popup-plusicon-cstm-caps text-left">\r\n                                                    Dash Number\r\n                                                    <input type="checkbox" [(ngModel)]="dashNumberUnknown"\r\n                                                           style="width: 20px !important; margin-left: 7px; position: relative;\r\n                                                           top: 2px; "\r\n                                                           [ngModelOptions]="{standalone: true}"\r\n                                                           (change)="resetAircraftModelsorDashNumbers($event,2)">\r\n                                                    Unknown\r\n                                                </span>\r\n                                                <select  *ngIf=" !modelUnknown && !dashNumberUnknown" [(ngModel)]="aircraftDataEdit.aircraftDashNumberId" (ngModelChange)="getmemo2($event)"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        style="width: 150px !important;">\r\n                                                    <option value="">--Select--</option>\r\n                                                    <option *ngFor="let m of search_AircraftDashNumberList" [ngValue]="m.value">\r\n                                                        {{m.label}}\r\n                                                    </option>\r\n                                                </select>\r\n                                                \x3c!-- <p-dropdown class="p-dropdown-100"  [ngModelOptions]="{standalone: true}" (input)="onFilterCapability($event.target.value)" (onChange)="onCapabilityTypeSelection($event)"  (ngModelChange)="getmemo($event)" required [options]="capabilityTypeData" filter="true" [(ngModel)]="capabilityForm.CapabilityTypeId" name="CapabilityTypeId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown> --\x3e\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                      \r\n\r\n                                        <div class="col-md-1">\r\n                                            <button style="margin-top: 20px;" type="button" class="btn btn-primary"\r\n                                                    (click)="saveCapabilities(capabilityForm,\'edit\')" [disabled]="disableSaveForEdit">\r\n                                                Update\r\n                                            </button> \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #content2 let-c="close" let-d="dismiss">\r\n                <div class="modal-header">\r\n                    <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n                    <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                        <span aria-hidden="true">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div class="modal-body">\r\n                   \r\n                    <div class="form-row" >\r\n                        <div class="col-md-3" style="margin-right: 0px !important;">\r\n                            <label class="fs12">Part Number: </label>\r\n                            <span class="new-label"> {{assetServices.CapeslistCollection.partNumber}}</span>\r\n                        </div>\r\n                        <div class="col-md-4" style="margin-right: 0px !important;">\r\n                            <label class="fs12"> Capability Type  : </label>\r\n                            <span class="new-label"> {{assetServices.CapeslistCollection.captypedescription}}</span>\r\n\r\n                        </div>\r\n                        <div class="col-md-2" style="margin-right: 0px !important;">\r\n                            <label class="fs12">Model : </label>\r\n                            <span class="new-label"> {{assetServices.CapeslistCollection.modelname}}</span> \r\n                        </div>\r\n                        <div class="col-md-2" style="margin-right: 0px !important;">\r\n                            <label class="fs12">Dash Number : </label>\r\n                            <span class="new-label"> {{assetServices.CapeslistCollection.dashnumber}}</span> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary" (click)="removeAsset()">Yes</button>\r\n                    <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n                </div>\r\n\r\n            </ng-template>\r\n        \x3c!-- </div> --\x3e\r\n        \x3c!-- <div class="clear"></div> --\x3e\r\n        \x3c!-- <hr> --\x3e\r\n    \x3c!-- </div> --\x3e\r\n    <div class="card" style="border: none;">\r\n        <div class="card-body" *ngIf="isView==false" style="padding: 0px !important;">\r\n            <div class="col-md-3">\r\n                <label class="fs12">Asset ID : </label>\r\n                <span class="span-header-red"> {{local?.assetId}}</span>\r\n            </div>\r\n            <div class="col-md-3">\r\n                <label class="fs12">Asset Name : </label>\r\n                <span class="span-header-red"> {{local?.name}}</span>\r\n\r\n            </div>\r\n            <div class="col-md-3">\r\n                <label class="fs12">Alt Asset ID : </label>\r\n                <span class="span-header-red"> {{local?.alternateAssetName}}</span>\r\n            </div>\r\n            <div class="col-md-3">\r\n                <label class="fs12">Asset Class/Attribute : </label>\r\n                <span class="span-header-red"> {{local?.assetAttributeType}}</span> \r\n            </div>\r\n            <div class="clear"></div>\r\n            <hr />\r\n            <div class="clear"></div>\r\n\r\n            \x3c!-- <div class="col-md-12" style="margin-bottom: -10px;">\r\n                <h4 class="float-left">\r\n                    Capabilities\r\n                    <a class="plusicon-cstm new-margin" matTooltip="Add Capability" matTooltipPosition="above"\r\n                       data-toggle="modal" data-target="#addShippingInfo" (click)="openCapess()">\r\n                  \r\n                        <i class="fa fa-plus-circle fa-lg"></i>\r\n                    </a>\r\n                </h4>\r\n            </div> --\x3e\r\n            <div class="card-header bg-primary" *ngIf="isView==false">\r\n                <div class="row">\r\n                  <div class="col">\r\n                    <h4 class="new-card-heading"> Capabilities Info</h4>\r\n                  </div>\r\n                  <div>\r\n                    <button\r\n                      type="button"\r\n                      class="btn-sm new-btn-primary"  matTooltip="Add Capability" matTooltipPosition="above"\r\n                      data-toggle="modal" data-target="#addShippingInfo" (click)="openCapess()">\r\n                      Add New Capability\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            <div class="clear"></div>\r\n            <hr />\r\n        </div>\r\n       \r\n\r\n\r\n        <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="allCapesInfo" [metaKeySelection]="true"\r\n        [(first)]="pageNumber" [rows]="pageSize" [paginator]="true" [pageLinks]="3"\r\n                 [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" selectionMode="multiple" [(selection)]="selectedRows"\r\n                 [resizableColumns]="true" [reorderableColumns]="true" [lazy]="true" (onLazyLoad)="loadData($event)"\r\n                 [scrollable]="true" [totalRecords]="totalRecords" scrollHeight="450px">\r\n            <ng-template pTemplate="caption">\r\n                <div class="row" *ngIf="isView==false">\r\n                    <div class="col">\r\n                    <p-multiSelect [maxSelectedLabels]="2" [options]="cols" optionLabel="header"\r\n                                   [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                   selectedItemsLabel="{0} columns selected" defaultLabel="Choose Columns">\r\n                    </p-multiSelect>\r\n                </div>\r\n                <div class="col">\r\n                  <div\r\n                    style="width: auto !important; float: right;"\r\n                    class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                  >\r\n                        <i class="fa fa-search"></i>\r\n                        <input type="text" pInputText size="50" \r\n                        class="form-control"\r\n                               (input)="globalSearch($event.target.value)" \r\n                               placeholder="Filter">\r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class="row" >\r\n                        <div class="col">\r\n                    <button  *ngIf="isView==false" type="button" class="btn btn-primary new-table-button" matTooltip="Download Data" matTooltipPosition="above"\r\n                            pButton icon="fa-download" iconPos="left" style="padding: 5px 12px !important;" label="Export All Data"\r\n                            \r\n                            data-toggle="modal" \r\n                            (click)="selectedOnly = false; targetData = dt;"\r\n                             data-target="#downloadConfirmation"></button>\r\n                             \x3c!-- (click)="exportCSV(dt)" --\x3e\r\n                    <button  *ngIf="isView==false" type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"\r\n                            matTooltipPosition="above" style="padding: 5px 12px !important;"\r\n                            pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                            (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                    <div  *ngIf="isView==false" class="excel-upload  excel-upload-cstm">\r\n                        <button name="download" id="download" type="button" class="btn btn-primary"\r\n                                matTooltip="Download Sample File" matTooltipPosition="above" (click)="sampleExcelDownloadForCapes()"\r\n                                style="padding: 5px 10px !important;">\r\n                            Sample File Download\r\n                        </button>\r\n\r\n                        <input type="file" name="upload3[]" id="upload3" (change)="CapesExcelUpload($event)"\r\n                               class="uploaddoc upload-file" accept=".xlsx, .xls, .csv" />\r\n                        <label for="upload3">\r\n                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                <i class="fa fa-upload"></i>\r\n                            </span>\r\n                        </label>\r\n                        &nbsp; &nbsp;\r\n                    </div>\r\n                    </div>\r\n                    <div class="col"  >\r\n                        <div class="">\r\n                          <div\r\n                            class="col"\r\n                            style="width: 370px; float: right; padding-top: 3px;"\r\n                          >\r\n                            <div class="form-group">\r\n                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                    <label class="radio-cstm wauto">\r\n                                        <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getCapesListByStatus(\'Active\')" [checked]="currentstatus2==\'Active\'">\r\n                                        <span class="checkmark"></span>Active\r\n                                    </label>\r\n                                </div>\r\n                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                    <label class="radio-cstm wauto">\r\n                                        <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getCapesListByStatus(\'InActive\')" [checked]="currentstatus2==\'InActive\'">\r\n                                        <span class="checkmark"></span>In-Active\r\n                                    </label>\r\n                                </div>\r\n                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                    <label class="radio-cstm wauto">\r\n                                        <input type="radio" name="EmpStatus" class="form-control" value="ALL" (click)="getCapesListByStatus(\'ALL\')" [checked]="currentstatus2==\'ALL\'">\r\n                                        <span class="checkmark"></span>All\r\n                                    </label>\r\n                                </div>\r\n                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                    <label style="width: auto !important;margin-top: 3px;">\r\n                                        <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" (click)="getDeleteListByStatus($event.target.checked)" />\r\n                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                        Show  Deleted List \r\n                                    </label>\r\n                                </div>\r\n                                </div>\r\n            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \x3c!-- <div class="checkbox-cstm" style="margin-left: 0;text-align: end;padding-right: 10px;width: 100%;" *ngIf="isView==true">\r\n                        <label style="width: auto !important;margin-top: 3px;">\r\n                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" (click)="getDeleteListByStatus($event.target.checked)" />\r\n                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                            Show  Deleted List\r\n                        </label>\r\n                    </div> --\x3e\r\n                </div>\r\n            </ng-template>\r\n\r\n\r\n\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col *ngFor="let col of columns"  style="width:140px"/>\r\n                </colgroup>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n\r\n                    <th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                        {{ col.header }} <span *ngIf="col.star==true" class="clr-red" >*</span>\r\n                        <p-sortIcon [field]="col.field"></p-sortIcon> \r\n                    </th>\r\n                    <th style="width:150px;position: sticky;">Actions</th>\r\n                </tr>\r\n                <tr>\r\n\r\n                    <th *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                        <input style="width:100%!important;" pInputText type="text" *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'"\r\n                               (input)="dt.filter($event.target.value, col.field,\'contains\')" />\r\n                               \r\n                               <input type="date"   style="width:100%" class="hidePlaceHolder" *ngIf="col.field == \'createdDate\'"\r\n                               name="createdDate"  (change)="dateFilterForTable($event.target.value, col.field)" />\r\n<input type="date" style="width:100%"  class="hidePlaceHolder" *ngIf="col.field == \'updatedDate\'"   name="updatedDate"\r\n            (change)="dateFilterForTable($event.target.value,col.field)" />\r\n                    </th>\r\n                    <th style="width:150px;position: sticky"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData let-columns="columns" let-assetCapes let-rowIndex="rowIndex">\r\n                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                    <td *ngFor="let col of columns" class="ui-resizable-column"\r\n                        pReorderableRowHandle>\r\n                        \x3c!-- {{rowData[col.field]}} --\x3e\r\n\r\n                        {{\r\n                            col.field == \'createdDate\'\r\n                              ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                              : rowData[col.field] && col.field == \'updatedDate\'\r\n                              ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                              : rowData[col.field] \r\n                          }}\r\n                    </td>\r\n\r\n                    <td class="action-icons-cstm" style="width:150px">\r\n                        <div *ngIf="currentDeletedstatus==false">\r\n    \x3c!-- <p-inputSwitch [disabled]="isView==false" *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off"\r\n                                           (onChange)="toggleActiveStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                            <p-inputSwitch [disabled]="isView==true" *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on"\r\n                                           offLabel="off" (onChange)="toggleActiveStatus(rowData)" [(ngModel)]="rowData[\'isActive\']">\r\n                            </p-inputSwitch>\r\n                            <p-inputSwitch [disabled]="isView==true" *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on"\r\n                                           offLabel="off" (onChange)="toggleActiveStatus(rowData)" [(ngModel)]="rowData[\'isActive\']">\r\n                            </p-inputSwitch> --\x3e\r\n\r\n\r\n                            <p-inputSwitch [disabled]="isView==true" [(ngModel)]="rowData[\'isActive\']" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                            matTooltipPosition="above" (onChange)="toggleActiveStatus(rowData)"></p-inputSwitch> \r\n\r\n                             <span *ngIf="isView==false">\r\n                                <a class="btn nobg" (click)="opencapesToEdit(editcontent,rowData)" matTooltip="Edit"\r\n                                   matTooltipPosition="above"><i class="fa fa-pencil"></i></a>\r\n                            </span>\r\n                            <span *ngIf="isView==false">\r\n                                <a class="btn nobg"\r\n                                   (click)="openDelete(content2,rowData)"\r\n                                   matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a>\r\n                            </span>\r\n                               <span data-toggle="modal" data-target="#contentHist">\r\n                                <a class="btn nobg"\r\n                                   (click)="getAuditHistoryById(rowData)" matTooltip="History"\r\n                                   matTooltipPosition="above"><i class="fa fa-history"></i></a>\r\n                            </span>\r\n\r\n                        </div>\r\n                        <div *ngIf="currentDeletedstatus==true"> \r\n                            <p-inputSwitch  [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}" matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                           matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch>\r\n                            <span data-toggle="modal" data-target="#contentHist">\r\n                                <a class="btn nobg" \r\n                                   (click)="getAuditHistoryById(rowData)" matTooltip="History"\r\n                                   matTooltipPosition="above"><i class="fa fa-history"></i></a>\r\n                            </span>\r\n\r\n                            <span><a class="btn nobg" *ngIf="isView==false" (click)="restore(restoreId,rowData);" matTooltip="Restore Record" matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                            \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n\r\n                        </div>\r\n                        \r\n\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns>\r\n                <tr>\r\n                    <td colspan="12" style="color: red; font-weight: bold; text-align: center">\r\n                        No records found\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="summary" id="footer"> \r\n                <div style="text-align: right;">\r\n                    <label id="footer" class="footer">Total:</label>\r\n                    <input style="width: 5% !important;" [(ngModel)]="totalRecords" [disabled]="true" pInputText\r\n                           type="text" /> &nbsp;&nbsp;\r\n                    <label id="footer" class="footer1">Pages Count:</label>\r\n                    <input style="width: 5% !important;margin-right: 12px;" [(ngModel)]="totalPages" [disabled]="true" pInputText\r\n                           type="text" />\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal-body">\r\n\r\n    \x3c!--<div class="form-group col-sm-12">\r\n            <label for="customerName" class="control-label col-sm-4">\r\n                PN <strong style="color:red">*</strong>\r\n                <p-autoComplete [(ngModel)]="assetId" (onKeyUp)=partEventHandler($event)\r\n                                (onSelect)="onAssetIdselection($event)" [ngModelOptions]="{standalone: true}"\r\n                                [suggestions]="localCollection" (completeMethod)="filterpartItems($event)" [size]="30"\r\n                                [minLength]="1" [dropdown]="true">\r\n                    <ng-template let-assetId pTemplate="part">\r\n                        <div class="ui-helper-clearfix">{{assetId}}</div>\r\n                    </ng-template>\r\n                </p-autoComplete>\r\n\r\n            </label>\r\n        </div>--\x3e\r\n</div>\r\n<div *ngIf="isView==false">\r\n    \x3c!-- <button type="submit" class="btn btn-primary pull-right submit-btn" [disabled]="disableSave"\r\n            (click)="saveCapes()">\r\n        Save\r\n    </button> --\x3e\r\n    <button type="button" class="btn btn-primary pull-right submit-btn" (click)="nextClick()">Next</button>\r\n    \x3c!--<button type="button" class="btn btn-success pull-right submit-btn" (click)="nextClick()">Next</button>--\x3e\r\n    <button type="button" class="btn btn-primary pull-right submit-btn" (click)="backClick()">Previous</button>\r\n</div>\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-row" >\r\n            <div class="col-md-3" style="margin-right: 0px !important;">\r\n                <label class="fs12" >Part Number: </label>\r\n                <span class="new-label"> {{restorerecord.partNumber}}</span>\r\n            </div>\r\n            <div class="col-md-4" style="margin-right: 0px !important;">\r\n                <label class="fs12"> Capability Type  : </label>\r\n                <span class="new-label"> {{restorerecord.captypedescription}}</span>\r\n\r\n            </div>\r\n            <div class="col-md-2" style="margin-right: 0px !important;">\r\n                <label class="fs12">Model : </label>\r\n                <span class="new-label"> {{restorerecord.modelname}}</span> \r\n            </div>\r\n            <div class="col-md-2" style="margin-right: 0px !important;">\r\n                <label class="fs12">Dash Number : </label>\r\n                <span class="new-label"> {{restorerecord.dashnumber}}</span> \r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<div class="modal fade" id="downloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t<div class="modal-dialog modal-sm">\r\n\t\t<div class="modal-content">\r\n\t\t\t<div class="modal-header">\r\n\t\t\t\t<button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n\t\t\t\t<h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-body" *ngIf="targetData">\r\n\t\t\t\t<strong>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\tYou are attempting to export {{targetData.totalRecords}} of records. \r\n\t\t\t\t\t</span> \r\n\t\t\t\t</strong>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button type="button" class="btn btn-primary" (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):exportCSV(targetData); closeDeleteModal();">Confirm</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="closeDeleteModal()">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static"\r\n     data-keyboard="false">\r\n    <div class="modal-dialog modal-xlg">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="closeHistory()">&times;</button>\r\n                <h4 class="modal-title">History of Asset Capes</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="preloader" *ngIf="isSpinnerVisibleView">\r\n                    <div class="loading">\r\n                        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                    </div>\r\n                </div> \r\n                <div class="table-responsive rro-table-cstmvt">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Audit Id</th>\r\n                                <th>PN  <span class="clr-red">*</span></th>\r\n                                <th>PN Description </th>\r\n                                <th>Capability Type <span class="clr-red">*</span></th>\r\n                                <th>Aircraft Manufacturer  <span class="clr-red">*</span></th>\r\n                                <th>Model</th>\r\n                                <th>Dash Number</th>\r\n                                <th>Is Active</th>\r\n                                <th>Is Deleted</th>\r\n                                <th>Created Date</th>\r\n                                <th>Created By</th>\r\n                                <th>Updated Date</th> \r\n                                <th>Updated By</th>\r\n                          \r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                <td>\r\n                                    {{audit.assetCapesAuditId}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'partNumber\', audit.partNumber)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.partNumber}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'partDescription\', audit.partDescription)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.partDescription}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'captypedescription\', audit.captypedescription)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.captypedescription}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'manufacturer\', audit.manufacturer)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.manufacturer}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'modelname\', audit.modelname)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.modelname}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'dashNumber\', audit.dashNumber)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.dashNumber}}\r\n                                </td>\r\n                                <td>\r\n                                    <input type="checkbox" disabled [checked]="audit.isActive == true"\r\n                                    style="margin: 0px auto; display: block;" />  \r\n                                </td>\r\n                                <td>\r\n                                    <input type="checkbox" disabled [checked]="audit.isDeleted == true"\r\n                                    style="margin: 0px auto; display: block;" />  \r\n                                </td>\r\n                                <td>{{audit.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                <td>{{audit.createdBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            \x3c!--<img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">--\x3e\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" (click)="closeHistory()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div> '},"27c/":function(t,e,n){"use strict";n.r(e),e.default='<div *ngIf="!isWorkOrder">\r\n    <div class="x_content">\r\n        \x3c!-- <nav aria-label="breadcrumb">\r\n            <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n                <li class="breadcrumb-item active" aria-current="page">Asset</li>\r\n                <li class="breadcrumb-item" aria-current="page">Asset List</li>\r\n            </ol>\r\n        </nav> --\x3e\r\n        <p-breadcrumb [model]="breadcrumbs" [home]="home"></p-breadcrumb>\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Asset List</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="navigateTogeneralInfo()">\r\n                                  Add Asset\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body"> \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="allAssetInfo" \r\n                                 [metaKeySelection]="true" [(first)]="pageNumber" [rows]="pageSize" [paginator]="true"\r\n                                  [pageLinks]="3" [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns"\r\n                                 selectionMode="multiple" [(selection)]="selectedRows" [resizableColumns]="true" [reorderableColumns]="true"\r\n                                 [scrollable]="true" [totalRecords]="totalRecords" scrollHeight="450px" (onLazyLoad)="publicationPagination($event)" [lazy]="true">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                        <p-multiSelect [maxSelectedLabels]="2" [options]="cols" optionLabel="header"\r\n                                        [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                        selectedItemsLabel="{0} columns selected" defaultLabel="Choose Columns">\r\n                         </p-multiSelect>\r\n                        </div>\r\n                        <div class="col">\r\n                          <div\r\n                            style="width: auto !important; float: right;"\r\n                            class="inner-addon right-addon w50 inline-block g-filter-search-cstm">\r\n                            <i class="fa fa-search"></i>\r\n                            <input type="text" pInputText size="50"\r\n                                               class="form-control"\r\n                                               (input)="dt.filterGlobal($event.target.value, \'contains\')"\r\n                                               placeholder="Filter"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="row">\r\n                              <div class="col">\r\n                                <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"\r\n                                matTooltipPosition="above" pButton icon="fa-download" style="padding: 5px 12px !important;" iconPos="left"\r\n                                label="Export All Data"  data-toggle="modal"\r\n                                (click)="selectedOnly = false; targetData = dt;" \r\n                                data-target="#downloadConfirmation"></button>\r\n                        <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"\r\n                                matTooltipPosition="above" matTooltip="Download Selected Data"\r\n                                matTooltipPosition="above" style="padding: 5px 12px !important;" pButton icon="fa-download" iconPos="left"\r\n                                label="Export Selected Data"\r\n                                (click)="dt.exportCSV({selectionOnly:true})"\r\n                               ></button>\r\n                               \x3c!-- data-toggle="modal"\r\n                               data-target="#downloadConfirmation"\r\n                               (click)="selectedOnly = true; targetData = dt;" --\x3e\r\n                    </div>\r\n                    <div class="col">\r\n                        <div class="">\r\n                          <div\r\n                            class="col"\r\n                            style="width: 400px; float: right; padding-top: 3px;"\r\n                          >\r\n                            <div class="form-group">\r\n                                <div\r\n                                class="pull-left"\r\n                                style="margin-top: 4px; margin-right: 15px;"\r\n                              >\r\n                              <label class="radio-cstm wauto">\r\n                                <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="geListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                <span class="checkmark"></span>Active\r\n                            </label>\r\n                        </div>\r\n                        <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                            <label class="radio-cstm wauto">\r\n                                <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="geListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                <span class="checkmark"></span>In-Active\r\n                            </label>\r\n                        </div>\r\n                        <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                            <label class="radio-cstm wauto">\r\n                                <input type="radio" name="EmpStatus" class="form-control" value="ALL" (click)="geListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                <span class="checkmark"></span>All\r\n                            </label>\r\n                        </div>\r\n                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                            <label style="width: auto !important;margin-top: 3px;">\r\n                 \r\n                                <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent"  (click)="getDeleteListByStatus($event.target.checked)"\r\n                                />\r\n                              <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                            Show  Deleted List \r\n                            </label>\r\n                          </div>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n              </div>\r\n              </div> \r\n                            </ng-template>\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                    <col *ngFor="let col of columns" style="width:140px">\r\n                                </colgroup>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns style="padding-top: 1% !important">\r\n                                <tr>\r\n                                    <ng-container *ngFor="let col of columns">\r\n                                        <th class="text-center"\r\n                                            *ngIf="col.field!=\'companyName\' && col.field!=\'buName\' && col.field!=\'deptName\' && col.field!=\'divName\'"\r\n                                            pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                            {{col.header}}\r\n                                            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                        </th>\r\n                                        <th class="text-center" *ngIf="col.field==\'companyName\'" colspan="4"\r\n                                            pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                            Management Structure\r\n                                        </th>\r\n                                    </ng-container>\r\n                                    <th style="width:150px;position: sticky;" *ngIf="selectedColumns.length> 0">\r\n                                        Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        \x3c!--  --\x3e\r\n                                        <input  style="width:100%;" *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                               \x3c!-- <input type="date" class="hidePlaceHolder"\r\n                                              name="createdDate"\r\n                                               style="width:100%;"\r\n                                               (change)="dateFilterForTableList($event.target.value, col.field )"> --\x3e\r\n                                        \x3c!-- <input type="date" class="hidePlaceHolder"\r\n                                               *ngIf="col.field == \'updatedDate\'" name="updatedDate"\r\n                                               style="width:100%;"\r\n                                               (change)="dateFilterForTableList($event.target.value, col.field )"> --\x3e\r\n\r\n                                               <input type="date"   style="width:100%" class="hidePlaceHolder" *ngIf="col.field == \'createdDate\'"\r\n                                               name="createdDate"  (change)="dateFilterForTable($event.target.value, col.field)" />\r\n <input type="date" style="width:100%"  class="hidePlaceHolder" *ngIf="col.field == \'updatedDate\'"   name="updatedDate"\r\n                            (change)="dateFilterForTable($event.target.value,col.field)" />\r\n                                    </th>\r\n                                    <th style="width:150px;position: sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-asset let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle\r\n                                    (dblclick)="openView(view,rowData)">\r\n\r\n                                    <td style="width:auto" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle>\r\n                                         <ng-container *ngIf="col.field !=\'calibrationRequiredNew\' && col.field!=\'isSerializedNew\'">\r\n                                            {{\r\n                                                col.field == \'createdDate\'\r\n                                                  ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                                  : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                  ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                                  : rowData[col.field] \r\n                                              }}\r\n                                        </ng-container>\r\n                                        <ng-container *ngIf="col.field ==\'calibrationRequiredNew\' || col.field ==\'isSerializedNew\'">\r\n                                            <input type="checkbox" disabled [checked]="rowData[col.field] == \'Yes\'"\r\n                                                   style="margin: 0px auto; display: block;" />\r\n                                        </ng-container>\r\n                                    </td> \r\n                                    \r\n                                    <td class="action-icons-cstm" style="width:150px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                         <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                                           matTooltipPosition="above" (onChange)="toggleIsActive(rowData,$event)"></p-inputSwitch> \r\n                                                           \x3c!-- (onChange)="openView(view,rowData)" --\x3e\r\n                                                           <span > \r\n                                                <a class="btn nobg btn-view-cstm"\r\n                                                   (click)="openView(view,rowData)" matTooltip="View" matTooltipPosition="above">\r\n                                                    <i class="fa fa-eye"></i>\r\n                                                </a> \r\n                                            </span>\r\n                                            <span>\r\n                                                <a class="btn nobg btn-edit-cstm" (click)="openAssetToEdit(rowData)"\r\n                                                   matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-pencil"></i></a>\r\n                                            </span>\r\n                                          <span>\r\n                                                <a class="btn nobg btn-delete-cstm"\r\n                                                   (click)="openHistory(history,rowData)" matTooltip="History" matTooltipPosition="above">\r\n                                                    <i class="fa fa-history"></i>\r\n                                                </a>\r\n                                            </span>\r\n                                            <span>\r\n                                                <a class="btn nobg btn-delete-cstm"\r\n                                                   (click)="openDelete(content,rowData)" matTooltip="Delete" matTooltipPosition="above">\r\n                                                    <i class="fa fa-trash"></i>\r\n                                                </a> \r\n                                            </span>\r\n\r\n                                        </div>\r\n                                        <div *ngIf="currentDeletedstatus==true">\r\n                                            <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                            matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                            <span data-toggle="modal" data-target="#view">\r\n                                                <a class="btn nobg btn-view-cstm" (onChange)="openView(view,rowData)"\r\n                                                   (click)="openView(view,rowData)" matTooltip="View" matTooltipPosition="above">\r\n                                                    <i class="fa fa-eye"></i>\r\n                                                </a> \r\n                                            </span>\r\n                                          <span ><a class="btn nobg" (click)="restore(restoreId,rowData);"  matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                          <span>\r\n                                            <a class="btn nobg btn-delete-cstm"\r\n                                               (click)="openHistory(history,rowData)" matTooltip="History" matTooltipPosition="above">\r\n                                                <i class="fa fa-history"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        </div> \r\n                                       </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns>\r\n                                <tr>\r\n                                    <td colspan="18" style="color: red; font-weight: bold; text-align: center">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <div style="text-align: right;">\r\n                                    <label id="footer" class="footer">Total:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText\r\n                                           type="text" /> &nbsp;&nbsp;\r\n                                    <label id="footer" class="footer1">Pages Count:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText\r\n                                           type="text" />\r\n                                </div>\r\n                            </ng-template>\r\n                        </p-table>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div> \r\n    <ng-template #view class="modal fade assetMange" id="view" role="dialog"> \r\n        <div class="modal-content ">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">\xd7</button>\r\n                <h4 class="modal-title">Details of Asset: <span>"{{assetViewList.assetId}}"</span></h4>\r\n            </div>\r\n            <div class="modal-body viewform">\r\n                <div class="preloader" *ngIf="isSpinnerVisibleView">\r\n                    <div class="loading">\r\n                        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                    </div>\r\n                </div>\r\n                <div id="adminsearchlocationajax" class="table-responsive default-bg clear">\r\n                    <div class="panel-group" id="accordion">\r\n                        <div class="panel panel-default">\r\n                            <div class="form-row" style="width: 100%;">\r\n                                <div class="col-md-12 shadow-box-cstm" style="margin-left: 8px;max-width: 99.2%">\r\n                                    <div class="col-md-3">\r\n                                        <p class="fs12">\r\n                                            <span class="control-label labels-font-header">Asset ID : </span>\r\n                                            <span class="span-header-red pl-1" style="text-transform: capitalize;">{{ assetViewList.assetId }}</span>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div class="col-md-3">\r\n                                        <p class="fs12">\r\n                                            <span class="control-label labels-font-header">Asset Name : </span>\r\n                                            <span class="span-header-red pl-1" style="text-transform: capitalize; ">{{ assetViewList.name }}</span>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div class="col-md-3">\r\n                                        <p class="fs12">\r\n                                            <span class="control-label labels-font-header">Alt Asset ID : </span>\r\n                                            <span class="span-header-red pl-1" style="text-transform: capitalize">{{ assetViewList.alternateAssetName }}</span>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div class="col-md-3">\r\n                                        <p class="fs12">\r\n                                            <span class="control-label labels-font-header">Asset Class/Attribute: </span>\r\n                                            <span class="span-header-red pl-1" style="text-transform: capitalize">{{ assetViewList.assetAttributeType }}</span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="table-responsive default-bg clear">\r\n                                <div class="col-sm-6">\r\n                                    <button type="button" class="btn btn-primary" (click)="openAllCollapse()">\r\n                                        Open\r\n                                        All\r\n                                    </button>\r\n                                    <button type="button" class="btn btn-secondary" (click)="closeAllCollapse()">\r\n                                        Close\r\n                                        All\r\n                                    </button>    \r\n                                </div>\r\n                                <div class="col-sm-6" style="text-align-last: end; padding-right: 2%;">\r\n                                    <button type="button" name="isActive" [ngClass]="assetViewList.isActive ? \'btn btn-success\' : \'btn btn-danger\'" disabled>\r\n                                        <span class="value">{{assetViewList.isActive ? \'Active\' : \'In-Active\'}}</span>\r\n                                     </button> \r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div class="panel-heading">\r\n                                <h4 class="panel-title">\r\n                                    <a class="" data-toggle="collapse" href="#step1" aria-expanded="true">\r\n                                        General\r\n                                        Information\r\n                                    </a>\r\n                                </h4>\r\n                            </div>\r\n                            <div id="step1" class="panel-collapse collapse in show">\r\n                                <div class="panel-body">\r\n                                    <div class="col-sm-6">\r\n                                        <div>\r\n                                            <label class="radio-inline pointerEv" style="text-align: start;">\r\n                                                <input type="radio" value="1" name="assetRadio" class="form-check-inline"\r\n                                                    [checked]="assetViewList.isTangible == true"\r\n                                                   >\r\n                                                Tangible\r\n                                            </label>\r\n                                            <label class="radio-inline pointerEv">\r\n                                                <input type="radio" value="2" name="assetRadio"\r\n                                                    [checked]="assetViewList.isIntangible == true">\r\n                                                Intangible\r\n                                            </label>\r\n\r\n                                            <label class="radio-inline pointerEv" *ngIf="assetViewList.isTangible==true" style="width: 150px;">\r\n                                                <input type="radio" value="1" name="assetRadio1" class="form-check-inline"\r\n                                                    [checked]="assetViewList.isdepreciable == true"\r\n                                                   >\r\n                                                   Depreciable\r\n                                            </label>\r\n                                            <label class="radio-inline pointerEv" *ngIf="assetViewList.isTangible==true" style="width: 120px;">\r\n                                                <input type="radio" value="2" name="assetRadio1"\r\n                                                    [checked]="assetViewList.isNonDepreciable == true">\r\n                                                    Non-Depreciable\r\n                                            </label>\r\n                                            <label class="radio-inline pointerEv" *ngIf="assetViewList.isIntangible==true" style="width: 150px;">\r\n                                                <input type="radio" value="1" name="assetRadio2" class="form-check-inline"\r\n                                                    [checked]="assetViewList.isAmortizable == true"\r\n                                                   >\r\n                                                   Amortizable\r\n                                            </label>\r\n                                            <label class="radio-inline pointerEv" *ngIf="assetViewList.isIntangible==true" style="width: 120px;">\r\n                                                <input type="radio" value="2" name="assetRadio2"\r\n                                                    [checked]="assetViewList.isNonAmortizable == true">\r\n                                                    Non-Amortizable\r\n                                            </label>\r\n                                        </div>\r\n                                        <p> \r\n                                            \x3c!-- <span class="label"><b>Tangible/Intangible: </b></span><span class="value">{{assetViewList.depreOrIntang}}</span> --\x3e\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Entry Date: </b></span><span class="value">{{assetViewList.entryDate | date: \'MM/dd/yyyy  h:mm a\'}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Asset ID: <span class="text-danger">*</span></b></span><span class="value">{{assetViewList.assetId}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Asset Name: <span class="text-danger">*</span></b></span><span class="value">\r\n                                                {{assetViewList.name}}\r\n                                            </span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Asset Description: </b></span><span class="value">{{assetViewList.description}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Alt Asset ID: </b></span><span class="value">{{assetViewList.alternateAssetName}}</span>\r\n                                        </p>\r\n                                        <div *ngIf="assetViewList.isIntangible==false">\r\n                                        <p>\r\n                                            <span class="label"><b>Acquisition Type: <span class="text-danger">*</span></b></span><span class="value">{{assetViewList.assetAquisitionType}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Manufacturer: </b></span><span class="value">\r\n                                                {{assetViewList.manufacturer}}\r\n                                            </span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Manufactured Date: </b></span><span class="value">{{assetViewList.manufacturedDate | date: \'MM/dd/yyyy\'}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Expiration Date: </b></span><span class="value">{{assetViewList.expirationDate | date: \'MM/dd/yyyy\'}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Model Number: </b></span><span class="value">{{assetViewList.model}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Serialized: </b></span>\r\n                                            <span class="value">\r\n                                                <input type="checkbox" disabled [checked]="assetViewList.isSerialized==true">\r\n                                            </span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>UOM: <span class="text-danger">*</span> </b></span><span class="value">{{assetViewList.unitOfMeasureName}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Currency:  <span class="text-danger">*</span></b></span><span class="value">{{assetViewList.currency}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Unit Cost: </b></span><span class="value">{{assetViewList.unitCost}}</span>\r\n                                        </p>\r\n                                       \r\n                                        <p *ngIf="assetViewList.isIntangible==false">\r\n                                            <span class="label"><b>Asset Location: </b></span><span class="value">{{assetViewList.assetLocationName}}</span> \r\n                                        </p>\r\n                                       \r\n                                        <div style="display: inline-flex;width: 100%;" *ngIf="assetViewList.isIntangible==false">\r\n                                            <div style=" width: 30.2%;" class="label">\r\n                                                <p>\r\n                                                    <span ><b>Memo: </b></span>\r\n                                                </p>\r\n                                            </div>\r\n                                            <div [innerHTML]="assetViewList.memo"   matTooltipPosition="above"  [matTooltip]="parsedText(assetViewList.memo)" class="value" style="font-size: 11.4px;"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="card" style="margin-top: 6px;width: 50%;" *ngIf="assetViewList.isIntangible==true">\r\n                                        <div class="card-header" style="padding: 0 10px;">\r\n                                            <p style="margin-bottom: 0; font-size: 12px;">\r\n                                                Management Structure <span class="text-danger">*</span></p>\r\n                                        </div>\r\n                                        <div class="card-body" style="padding: 8px 12px 6px;">\r\n                                           \r\n                                                <span class="form-group ">\r\n                                                    <b> </b></span><span class="form-control ma-fd">\r\n                                                    {{assetViewList.level1}}\r\n\r\n                                                </span>\r\n                                            \r\n                                                <span class="form-group ">\r\n                                                    <b> </b></span><span class="form-control ma-fd">\r\n                                                    {{assetViewList.level2}}\r\n                                                </span>\r\n                                           \r\n                                                <span class="form-group ">\r\n                                                    <b> </b></span><span class="form-control ma-fd">\r\n                                                    {{assetViewList.level3}}\r\n                                                </span>\r\n                                            \r\n                                                <span class="form-group ">\r\n                                                    <b> </b></span><span class="form-control ma-fd">\r\n                                                    {{assetViewList.level4}}\r\n                                                </span>\r\n                                            \r\n                                        </div>\r\n                                    </div>\t\r\n                                    </div> \r\n                                    <div class="col-sm-6">\r\n                                                <div class="card" style="margin-top: 6px;width: 50%;" *ngIf="assetViewList.isIntangible==false">\r\n                                                    <div class="card-header" style="padding: 0 10px;">\r\n                                                        <p style="margin-bottom: 0; font-size: 12px;">\r\n                                                            Management Structure <span class="text-danger">*</span></p>\r\n                                                    </div>\r\n                                                    <div class="card-body" style="padding: 8px 12px 6px;">\r\n                                                       \r\n                                                            <span class="form-group ">\r\n                                                                <b> </b></span><span class="form-control ma-fd">\r\n                                                                {{assetViewList.level1}}\r\n\r\n                                                            </span>\r\n                                                        \r\n                                                            <span class="form-group ">\r\n                                                                <b> </b></span><span class="form-control ma-fd">\r\n                                                                {{assetViewList.level2}}\r\n                                                            </span>\r\n                                                       \r\n                                                            <span class="form-group ">\r\n                                                                <b> </b></span><span class="form-control ma-fd">\r\n                                                                {{assetViewList.level3}}\r\n                                                            </span>\r\n                                                        \r\n                                                            <span class="form-group ">\r\n                                                                <b> </b></span><span class="form-control ma-fd">\r\n                                                                {{assetViewList.level4}}\r\n                                                            </span>\r\n                                                        \r\n                                                    </div>\r\n                                                </div>\t\r\n                                        <p *ngIf="assetViewList.isIntangible==false">\r\n                                            <span class="label"><b>Asset Parent: </b></span><span class="value">{{assetViewList.assetParentName}}</span>\r\n                                        </p>\r\n                                        <div *ngIf="assetViewList.isIntangible==false" style="width: 90%;">\r\n\r\n                                            <div class="card" style="margin-top: 20px;margin-bottom:4px;">\r\n                                                <div class="card-header" style="padding: 10px 12px;">\r\n                                                    <p>\r\n                                                        <span class="label"><b>Asset Class/Attribute: <span class="text-danger">*</span></b></span><span class="value">{{assetViewList.assetAttributeType}}</span>\r\n                                                        </p>\r\n                                                </div>\r\n                                                <div class="depreciation-asset-block block-bg1" style="padding-left: 2%;">\r\n                                                    <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                                        </div>\r\n                                                        <p>\r\n                                                            <span class="label"><b>Depreciation Method: </b></span><span class="value">{{assetViewList.depreciationMethod}}</span>\r\n                                                            </p>\r\n                                                            <p>\r\n                                                            <span class="label col-sm-6"><b>Residual  %: </b></span><span class="value">{{assetViewList.residualPer}}</span>\r\n                                                            </p>\r\n                                                            <p>\r\n                                                            <span class="label"><b>Asset Life: </b></span><span class="value">{{assetViewList.assetLife}}</span>\r\n                                                            </p>\r\n                                                            <p>\r\n                                                            <span class="label"><b>Depr Frequency: </b></span><span class="value">{{assetViewList.deprFrequency}}</span>\r\n                                                            </p>\r\n                                                            <p>\r\n                                                            <span class="label"><b>Acquired GL Account: </b></span><span class="value">{{assetViewList.acquiredGL}}</span>\r\n                                                            </p>\r\n                                                            <p>\r\n                                                            <span class="label"><b>Depr Expense GL Account: </b></span><span class="value">{{assetViewList.deprExpenseGL}}</span>\r\n                                                            </p>\r\n                                                            <p>\r\n                                                            <span class="label"><b>Accum Depr GL Account: </b></span><span class="value">{{assetViewList.adDeprGL}}</span>\r\n                                                            </p>\r\n                                                            <p>\r\n                                                            <span class="label"><b>Sale GL Account: </b></span><span class="value">{{assetViewList.saleGL}}</span>\r\n                                                            </p>\r\n                                                            <p>\r\n                                                                <span class="label"><b>Write Off GL Account: </b></span><span class="value">{{assetViewList.writeOffGL}}</span>\r\n                                                                </p>\r\n                                                            <p>\r\n                                                            <span class="label"><b>Write Down GL Account: </b></span><span class="value">{{assetViewList.writeDownGL}}</span>\r\n                                                            </p>\r\n                                                    </div>\r\n                                                        </div>\r\n\r\n\r\n                                        \r\n                                     \r\n                                       \r\n                                        </div>\r\n                                        <div *ngIf="assetViewList.isIntangible==true" style="width: 90%;">\r\n\r\n                                      \r\n\r\n                                                        <div class="card" style="margin-top: 20px;margin-bottom:4px;">\r\n                                                            <div class="card-header" style="padding: 10px 12px;">\r\n                                                                <p>\r\n                                                                    <span class="label"><b>Intangible Class: <span class="text-danger">*</span></b></span><span class="value">{{assetViewList.assetAttributeType}}</span>\r\n                                                                    </p>\r\n                                                            </div>\r\n                                                            <div class="depreciation-asset-block block-bg1" style="padding-left: 2%;">\r\n                                                                <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                                                    <p>\r\n                                                                        <span class="label"><b>Depreciation Method: </b></span><span class="value">{{assetViewList.depreciationMethod}}</span>\r\n                                                                        </p>\r\n                                                                        <p>\r\n                                                                        <span class="label"><b>Intangible Life: </b></span><span class="value">{{assetViewList.assetLife}}</span>\r\n                                                                        </p>\r\n                                                                        <p>\r\n                                                                        <span class="label"><b>Amort Frequency: </b></span><span class="value">{{assetViewList.deprFrequency}}</span>\r\n                                                                        </p>\r\n                                                                        \r\n                                                                        <p>\r\n                                                                        <span class="label"><b>Amort Expense GL Account: </b></span><span class="value">{{assetViewList.deprExpenseGL}}</span>\r\n                                                                        </p>\r\n                                                                        <p>\r\n                                                                        <span class="label"><b>Acc Amort Depr GL Account: </b></span><span class="value">{{assetViewList.adDeprGL}}</span>\r\n                                                                        </p>\r\n                                                                        <p>\r\n                                                                        <span class="label"><b>Intangible GL Account: </b></span><span class="value">{{assetViewList.saleGL}}</span>\r\n                                                                        </p>\r\n                                                                        <p>\r\n                                                                            <span class="label"><b>Intangible Write Off GL Account: </b></span><span class="value">{{assetViewList.writeOffGL}}</span>\r\n                                                                            </p>\r\n                                                                        <p>\r\n                                                                        <span class="label"><b>Intangible Write Down GL Account: </b></span><span class="value">{{assetViewList.writeDownGL}}</span>\r\n                                                                        </p>\r\n                                                                </div>\r\n                                                                    </div>\r\n                                                                    </div>\r\n                                       \r\n                                    \r\n                                      \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="panel panel-default" *ngIf="assetViewList.isIntangible==false"> \r\n                            <div class="panel-heading">\r\n                                <h4 class="panel-title">\r\n                                    <a class="collapsed" data-toggle="collapse" href="#step2">Capes</a>\r\n                                </h4>\r\n                            </div>\r\n                            <div id="step2" class="panel-collapse collapse">\r\n                                <div class="panel-body">\r\n                                    <app-asset-capes [isView]="true" [viewassetRecordId]="assetViewList.assetRecordId"></app-asset-capes>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="panel panel-default" *ngIf="assetViewList.isIntangible==false">\r\n                            <div class="panel-heading">\r\n                                <h4 class="panel-title">\r\n                                    <a class="collapsed" data-toggle="collapse" href="#step3">Calibration</a>\r\n                                </h4>\r\n                            </div>\r\n                            <div id="step3" class="panel-collapse collapse">\r\n                                <div class="panel-body">\r\n\r\n                                       <div class="form-row" style="width: 101%;background-color: #fff !important;">\r\n                                    <div class="col-md-3 asset_border" >\r\n                                        <p>\r\n                                            <input type="checkbox" disabled [ngModelOptions]="{standalone: true}" [(ngModel)]="assetViewList.calibrationRequired">\r\n                                            Calibration Required\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.calibrationRequired">\r\n                                            <span class="label"><b>Calibration Frequency <span class="clr-red">*</span>: </b></span><span *ngIf="assetViewList.calibrationFrequencyDays || assetViewList.calibrationFrequencyMonths" class="value">\r\n                                                {{assetViewList.calibrationFrequencyMonths}} Months,\r\n                                                {{assetViewList.calibrationFrequencyDays}} Days\r\n                                            </span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.calibrationRequired">\r\n                                            <span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.calibrationVendor}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.calibrationRequired">\r\n                                            <span class="label"><b>Default Cost: </b></span><span class="value">&nbsp;{{assetViewList.calibrationDefaultCost}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.calibrationRequired">\r\n                                            <span class="label"><b>Currency: <span class="text-danger" *ngIf="assetViewList.calibrationDefaultCost !=0">*</span></b></span><span class="value">&nbsp;{{assetViewList.calibrationCurrencyName}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.calibrationRequired">\r\n                                            <span class="label"><b>GL Account: <span class="text-danger" *ngIf="assetViewList.calibrationRequired">*</span></b></span><span class="value">{{assetViewList.calibrationGlAccount}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.calibrationRequired">\r\n                                            <span class="label"><b>Calibration Memo: </b></span><span class="value textareaMemos" [innerHTML]="assetViewList.calibrationMemo" matTooltipPosition="above"  [matTooltip]="parsedText(assetViewList.calibrationMemo)"></span>\r\n                                        </p>\r\n                                       \r\n                                        <br>\r\n                                        <div class="col-sm-12" *ngIf="assetViewList && assetViewList.calibrationRequired">\r\n                                            <div class="form-group col-sm-12 calibration-block w400"\r\n                                                 *ngIf="assetViewList.calibrationRequired || assetViewList.certificationRequired || assetViewList.inspectionRequired || assetViewList.verificationRequired">\r\n                                                <div class="table-responsive">\r\n                                                    <table class="table table-bordered table-striped">\r\n                                                        <thead style="background:#337ab7;color:#fff">\r\n                                                            <tr>\r\n                                                                <th>Type</th>\r\n                                                                <th colspan="2" style="text-align: center;">Tolerance</th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <td>Min</td>\r\n                                                                <td>\r\n                                                                    <span class="value">{{assetViewList.assetCalibrationMin}}</span>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <span class="value">{{assetViewList.assetCalibrationMinTolerance}}</span>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Max</td>\r\n                                                                <td>\r\n                                                                    <span class="value">{{assetViewList.assetCalibratonMax}}</span>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <span class="value">{{assetViewList.assetCalibrationMaxTolerance}}</span>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Expected</td>\r\n                                                                <td>\r\n                                                                    <span class="value">{{assetViewList.assetCalibrationExpected}}</span>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <span class="value">{{assetViewList.assetCalibrationExpectedTolerance}}</span>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr >\r\n                                                                <td>Memo</td>\r\n                                                                <td colspan="2">\r\n                                                                    \x3c!-- <span class="value">{{assetViewList.assetCalibrationMemo}}</span> --\x3e\r\n                                                                    <div [innerHTML]="assetViewList.assetCalibrationMemo" matTooltipPosition="above"  [matTooltip]="parsedText(assetViewList.assetCalibrationMemo)" class="value" style="font-size: 11.4px;"></div>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n    \r\n                                        </div>\r\n                                    </div>\r\n                                    \x3c!-- *ngIf="assetViewList.certificationRequired" --\x3e\r\n                                    <div class="col-md-3 asset_border" >\r\n                                        <p>\r\n                                            <input type="checkbox" disabled [ngModelOptions]="{standalone: true}" [(ngModel)]="assetViewList.certificationRequired">\r\n                                            Certification Required\r\n                                        </p>\r\n                                        <p  *ngIf="assetViewList && assetViewList.certificationRequired">\r\n                                            <span class="label"><b>Certification Frequency <span class="clr-red">*</span>: </b></span><span *ngIf="assetViewList.certificationFrequencyMonths || assetViewList.certificationFrequencyDays" class="value">\r\n                                                {{assetViewList.certificationFrequencyMonths}} Months,\r\n                                                {{assetViewList.certificationFrequencyDays}} Days\r\n                                            </span>\r\n                                        </p>\r\n                                        <p  *ngIf="assetViewList && assetViewList.certificationRequired">\r\n                                            <span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.certificationVendor}}</span>\r\n                                        </p>\r\n                                        <p  *ngIf="assetViewList && assetViewList.certificationRequired">\r\n                                            <span class="label"><b>Dafault Cost: </b></span><span class="value">&nbsp;{{assetViewList.certificationDefaultCost}}</span>\r\n                                        </p>\r\n                                        <p  *ngIf="assetViewList && assetViewList.certificationRequired">\r\n                                            <span class="label"><b>Currency:  <span class="text-danger" *ngIf="assetViewList.certificationDefaultCost !=0">*</span></b></span><span class="value">&nbsp;{{assetViewList.certificationCurrencyName}}</span>\r\n                                        </p>\r\n                                        <p  *ngIf="assetViewList && assetViewList.certificationRequired">\r\n                                            <span class="label"><b>GL Account: <span class="text-danger" *ngIf="assetViewList.certificationRequired">*</span></b></span><span class="value">{{assetViewList.certificationGlAccount}}</span>\r\n                                        </p>\r\n                                        <p  *ngIf="assetViewList && assetViewList.certificationRequired">\r\n                                            <span class="label"><b>Certification Memo: </b></span><span class="value textareaMemos" [innerHTML]="assetViewList.certificationMemo" matTooltipPosition="above"  [matTooltip]="parsedText(assetViewList.certificationMemo)"></span>\r\n                                        </p>\r\n                                      \r\n                                    </div>\r\n                                    \x3c!-- *ngIf="assetViewList.inspectionRequired" --\x3e\r\n                                    <div class="col-md-3 asset_border" >\r\n                                        <p>\r\n                                            <input type="checkbox" disabled [ngModelOptions]="{standalone: true}" [(ngModel)]="assetViewList.inspectionRequired">\r\n                                            Inspection Required\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.inspectionRequired">\r\n                                            <span class="label"><b>Inspection Frequency <span class="clr-red">*</span>: </b></span><span *ngIf="assetViewList.inspectionFrequencyMonths || assetViewList.inspectionFrequencyDays" class="value">\r\n                                                {{assetViewList.inspectionFrequencyMonths}} Months,\r\n                                                {{assetViewList.inspectionFrequencyDays}} Days\r\n                                            </span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.inspectionRequired">\r\n                                            <span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.inspectionVendor}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.inspectionRequired">\r\n                                            <span class="label"><b>Dafault Cost: </b></span><span class="value">&nbsp;{{assetViewList.inspectionDefaultCost}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.inspectionRequired">\r\n                                            <span class="label"><b>Currency: <span class="text-danger" *ngIf="assetViewList.inspectionDefaultCost !=0">*</span></b></span><span class="value">&nbsp;{{assetViewList.inspectionCurrencyName}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.inspectionRequired">\r\n                                            <span class="label"><b>GL Account: <span class="text-danger" *ngIf="assetViewList.inspectionRequired">*</span></b></span><span class="value">{{assetViewList.inspectionGlAccount}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.inspectionRequired"> \r\n                                             <span class="label"><b>Inspection Memo: </b></span><span class="value textareaMemos" [innerHTML]="assetViewList.inspectionMemo" matTooltipPosition="above"  [matTooltip]="parsedText(assetViewList.inspectionMemo)"></span> \r\n                                        </p>\r\n                                    </div>\r\n                                    \x3c!-- *ngIf="assetViewList.verificationRequired" --\x3e\r\n                                    <div class="col-md-3 asset_border" >\r\n                                        <p>\r\n                                            <input type="checkbox" disabled [ngModelOptions]="{standalone: true}" [(ngModel)]="assetViewList.verificationRequired">\r\n                                            Verification Required\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.verificationRequired">\r\n                                            <span class="label"><b>Verification Frequency <span class="clr-red">*</span>: </b></span><span *ngIf="assetViewList.verificationFrequencyMonths || assetViewList.verificationFrequencyDays" class="value">\r\n                                                {{assetViewList.verificationFrequencyMonths}} Months,\r\n                                                {{assetViewList.verificationFrequencyDays}} Days\r\n                                            </span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.verificationRequired">\r\n                                            <span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.verificationVendor}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.verificationRequired">\r\n                                            <span class="label"><b>Dafault Cost: </b></span><span class="value">&nbsp;{{assetViewList.verificationDefaultCost}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.verificationRequired">\r\n                                            <span class="label"><b>Currency:<span class="text-danger" *ngIf="assetViewList.verificationDefaultCost !=0">*</span> </b></span><span class="value">&nbsp;{{assetViewList.verificationCurrencyName}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.verificationRequired">\r\n                                            <span class="label"><b>GL Account: <span class="text-danger" *ngIf="assetViewList.verificationRequired">*</span></b></span><span class="value">{{assetViewList.verificationGlAccount}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.verificationRequired">\r\n                                            <span class="label"><b>Verification Memo: </b></span><span class="value textareaMemos" [innerHTML]="assetViewList.verificationMemo" matTooltipPosition="above"  [matTooltip]="parsedText(assetViewList.verificationMemo)"></span>\r\n                                        </p>\r\n                                       \r\n                                    </div>\r\n                                       </div>\r\n                               \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="panel panel-default" *ngIf="assetViewList.isIntangible==false">\r\n                            <div class="panel-heading">\r\n                                <h4 class="panel-title">\r\n                                    <a class="collapsed" data-toggle="collapse" href="#step4">\r\n                                        Maintenance &amp;\r\n                                        Warranty\r\n                                    </a>\r\n                                </h4>\r\n                            </div>\r\n                            <div id="step4" class="panel-collapse collapse">\r\n                                <div class="panel-body">\r\n                                    <div class="form-row" style="width: 101%;background-color: #fff !important;">\r\n                                  <div class="col-sm-3 asset_border" style="padding:6px;">\r\n                                \r\n                                        <p>\r\n                                       \r\n                                            <input type="checkbox" disabled [ngModelOptions]="{standalone: true}" [(ngModel)]="assetViewList.assetIsMaintenanceReqd">\r\n                                            Maintenance Required\r\n                                        </p>\r\n                                        \r\n                                        <p *ngIf="assetViewList && assetViewList.assetIsMaintenanceReqd">  \r\n                                            <span class="label"><b>Maintenance Frequency <span class="clr-red">*</span>: </b></span><span *ngIf="assetViewList.maintenanceFrequencyMonths || assetViewList.maintenanceFrequencyDays" class="value">\r\n                                                {{assetViewList.maintenanceFrequencyMonths}} Months,\r\n                                                {{assetViewList.maintenanceFrequencyDays}} Days\r\n                                            </span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.assetIsMaintenanceReqd">\r\n                                            <span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.maintenanceVendor}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.assetIsMaintenanceReqd">\r\n                                            <span class="label"><b>GL Account: <span class="text-danger" *ngIf="assetViewList.assetIsMaintenanceReqd">*</span></b></span><span class="value">{{assetViewList.maintenanceGlAccount}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.assetIsMaintenanceReqd">\r\n                                            <span class="label"><b>Maintenance Memo: </b></span><span class="value textareaMemos" [innerHTML]="assetViewList.maintenanceMemo" matTooltipPosition="above"  [matTooltip]="parsedText(assetViewList.maintenanceMemo)"></span>\r\n                                        </p>\r\n                                        \r\n                                    </div>\r\n                                    <div class="col-sm-4 asset_border"  style="padding:6px;">\r\n                                \r\n                                        <p>\r\n                                        <input type="checkbox" disabled [ngModelOptions]="{standalone: true}" [(ngModel)]="assetViewList.isWarrantyRequired">\r\n                                            Warranty Required\r\n                                        </p >\r\n                                            <p *ngIf="assetViewList && assetViewList.isWarrantyRequired">\r\n                                            <span class="label"><b>Warranty Company: </b></span><span class="value">{{assetViewList.warrantyCompany}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.isWarrantyRequired">\r\n                                            <span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.warrantyVendor}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.isWarrantyRequired">\r\n                                            <span class="label"><b>GL Account: <span class="text-danger" *ngIf="assetViewList.isWarrantyRequired">*</span> </b></span><span class="value">{{assetViewList.warrantyGlACoount}}</span>\r\n                                        </p>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                        (click)="dismissModel()">\r\n                    Close\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    <div class="modal fade" id="downloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-sm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n                    <h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n                </div>\r\n                <div class="modal-body" *ngIf="targetData">\r\n                    <strong>\r\n                        <span>\r\n                            You are attempting to export {{targetData.totalRecords}} of records. \r\n                        </span> \r\n                    </strong>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary" (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):exportCSV(targetData); closeDeleteModal();">Confirm</button>\r\n                    <button type="button" class="btn btn-danger" (click)="closeDeleteModal()">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    <ng-template #content let-c="close" let-d="dismiss">\r\n        <div class="modal-header">\r\n            \r\n            <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n    \r\n            \r\n            </button>\r\n          \r\n        </div>\r\n\r\n        <div class="modal-body">\r\n            <strong>\r\n                Asset Name:\r\n                <span class="new-label">{{assetService.listCollection.name}}</span>\r\n            </strong>\r\n        </div>\r\n \r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-primary" (click)="removeAsset()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n\r\n\r\n    </ng-template>\r\n    <ng-template #history let-c="close" let-d="dismiss">\r\n        <div class="modal-header">\r\n            <h4 class="modal-title">History of Asset </h4>\r\n            <button type="button" class="close" aria-label="Close" (click)="dismissHistoryModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n        </div>\r\n        <div class="modal-body">\r\n            <div class="text-center">\r\n                <img src="../../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                <h4 style="color: #ff5663;">No History Found </h4>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class="modal-footer">\r\n\r\n            <button type="button" class="btn btn-danger" (click)="dismissHistoryModel()">Close</button>\r\n        </div>\r\n\r\n    </ng-template>\r\n\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Asset Name:\r\n            <span class="new-label">{{restorerecord.name}}</span>\r\n        </strong>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n            <div class="preloader" *ngIf="isSpinnerVisible">\r\n                <div class="loading">\r\n                    <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                </div>\r\n            </div>\r\n'},"6Aim":function(t,e,n){"use strict";n.r(e),e.default='.btn-adjhist-cstm i.fa-history {\n  color: #333333;\n}\n\nlabel {\n  text-align: left;\n  width: 100%;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.card-stock {\n  margin-top: 20px;\n  margin-bottom: 10px;\n}\n\n.card-stock .card-header {\n  padding: 10px 12px;\n}\n\n.card-stock .card-header h5 {\n  margin-bottom: 0;\n  font-size: 12px;\n}\n\n.card-stock .card-body {\n  padding: 12px 12px 4px;\n}\n\n.text_editor_box {\n  padding: 10px 3px !important;\n  width: 100%;\n}\n\n.fs12 {\n  display: inline-flex !important;\n}\n\n.card-tolerance .form-group {\n  margin-bottom: 4px;\n}\n\n.header-h5 {\n  line-height: normal !important;\n  color: initial !important;\n}\n\n#invView .modal-body div.form-group label {\n  float: none;\n}\n\n.border-box-cstm {\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 0 10px;\n}\n\n.m-t-5 {\n  margin-top: 5px;\n}\n\n.assetInv-audit table th {\n  padding: 2px;\n  text-align: center;\n  min-width: 130px;\n}\n\n.assetInv-audit table td {\n  padding: 0px 2px;\n}\n\n.min-w-100 {\n  min-width: 100px;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n\n  .col-md-6-cstm {\n    max-width: 44%;\n    margin-right: 30px;\n  }\n}\n\n.container {\n  width: 6em;\n  margin: 2em auto;\n  text-align: center;\n}\n\n.container .ball {\n  width: 1em;\n  height: 1em;\n  margin: 0 auto;\n  border-radius: 1em;\n  background: #848484;\n  -webkit-animation: load 2000ms linear infinite;\n  animation: load 2000ms linear infinite;\n}\n\n.container span {\n  display: block;\n  margin: 0.5em 0 0 0;\n  color: #848484;\n  text-transform: uppercase;\n  font-family: "Roboto", sans-serif;\n  -webkit-animation: pulse 2000ms linear infinite;\n  animation: pulse 2000ms linear infinite;\n}\n\n@-webkit-keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.25;\n  }\n}\n\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.25;\n  }\n}\n\n@-webkit-keyframes load {\n  0%, 100% {\n    transform: scale(1) translateX(0);\n  }\n  25% {\n    transform: scale(0.25) translateX(-6.5em);\n  }\n  50% {\n    transform: scale(0.15) translateX(0);\n  }\n  75% {\n    transform: scale(0.25) translateX(6.5em);\n  }\n}\n\n@keyframes load {\n  0%, 100% {\n    transform: scale(1) translateX(0);\n  }\n  25% {\n    transform: scale(0.25) translateX(-6.5em);\n  }\n  50% {\n    transform: scale(0.15) translateX(0);\n  }\n  75% {\n    transform: scale(0.25) translateX(6.5em);\n  }\n}\n\n.font_adjust {\n  font-size: 13px !important;\n  margin: 0px !important;\n}'},"9bet":function(t,e,n){"use strict";n.d(e,"a",(function(){return s}));class s{constructor(t,e,n,s,a,r,i,o,l,c,d,u){this.assetAcquisitionTypeId=e,this.code=n,this.name=s,this.memo=a,this.masterCompanyId=r,this.createdBy=i,this.updatedBy=o,this.createdDate=l,this.updatedDate=c,this.isDelete=d,this.isActive=u}}},ACB3:function(t,e,n){"use strict";n.r(e),e.default='\x3c!--<div style="border: 1px solid red">Asset-Steps Component</div>--\x3e\r\n\r\n\r\n        <div class="md-stepper-horizontal orange" *ngIf="showComponentPTab">\r\n            <ng-container *ngFor="let item of items">\r\n                <div class="md-step"\r\n                    [ngClass]="{active: activeIndex >= item.index, editable: activeIndex === item.index}"\r\n                    [class.isDisabled]="!isDisabledSteps"\r\n                    (click)="item.command(item)"\r\n                  >\r\n                    <div class="md-step-circle"><span>{{ item.step }}</span></div>\r\n                    <div class="md-step-title">{{ item.label }}</div>\r\n                    <div class="md-step-bar-left"></div>\r\n                    <div class="md-step-bar-right"></div>\r\n                </div>\r\n\r\n            </ng-container>\r\n         \r\n      \r\n         \r\n      </div>\r\n      \r\n\r\n\r\n'},Ag15:function(t,e,n){"use strict";n.r(e),e.default='<div class="modal-body viewform">\r\n    <div id="adminsearchlocationajax" class="table-responsive default-bg clear">\r\n        <div class="panel-group" id="accordion">\r\n            <div class="panel panel-default">\r\n                <div>\r\n                    <button type="button" class="btn btn-primary" data-toggle="collapse" (click)="openAllCollapse()">Open All</button>\r\n                    <button type="button" class="btn btn-primary collapsed" data-toggle="collapse" (click)="closeAllCollapse()">Close All</button>\r\n                    <hr />\r\n                </div>\r\n                <div class="panel-heading">\r\n                    <h4 class="panel-title">\r\n                        <a class="collapsed" data-toggle="collapse" href="#step1">General Information</a>\r\n                    </h4>\r\n                </div>\r\n                <div id="step1" class="panel-collapse collapse in">\r\n                    <div class="panel-body">\r\n                        <div class="col-sm-6">\r\n                            <p>\r\n                                <span class="label"><b>Entry Date: </b></span><span class="value">{{assetViewList.entryDate}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Asset ID: </b></span><span class="value">{{assetViewList.assetId}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Alt Asset ID: </b></span><span class="value">{{assetViewList.alternateAssetId}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Asset Name: </b></span><span class="value">\r\n                                    {{assetViewList.name}}\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Asset Description: </b></span><span class="value">{{assetViewList.description}}</span>\r\n                            </p>\r\n                            <div class="ms-block">\r\n                                <p>\r\n                                    <span class="label"><b>Management Structure: </b></span>\r\n                                </p>\r\n                                <p>\r\n                                    <span class="label"><b>Entity: </b></span><span class="value">\r\n                                        {{assetViewList.companyName}}\r\n                                    </span>\r\n                                </p>\r\n                                <p>\r\n                                    <span class="label"><b> </b></span><span class="value">\r\n                                        {{assetViewList.buName}}\r\n                                    </span>\r\n                                </p>\r\n                                <p>\r\n                                    <span class="label"><b> </b></span><span class="value">\r\n                                        {{assetViewList.deptName}}\r\n                                    </span>\r\n                                </p>\r\n                                <p>\r\n                                    <span class="label"><b> </b></span><span class="value">\r\n                                        {{assetViewList.divName}}\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                            <p>\r\n                                <span class="label"><b>Intangible/Depreciable: </b></span><span class="value">{{assetViewList.depreOrIntang}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Acquisition Type: </b></span><span class="value">{{assetViewList.assetAcquisitionTypeId}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Manufacturer: </b></span><span class="value">\r\n                                    {{assetViewList.manufacturerName}}\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Manufactured Date: </b></span><span class="value">{{assetViewList.manufacturedDate}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Model Num: </b></span><span class="value">{{assetViewList.model}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Serialized?: </b></span>\r\n                                <span class="value">{{assetViewList.isSerialized}}</span>\r\n                            </p>\r\n                            <p><span class="label"><b>UOM: </b></span><span class="value">{{assetViewList.unitOfMeasureId}}</span></p>\r\n                            <p><span class="label"><b>Currency: </b></span><span class="value">{{assetViewList.currencyId}}</span></p>\r\n                            <p>\r\n                                <span class="label"><b>Unit Cost: </b></span><span class="value">{{assetViewList.unitCost}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Expiration Date: </b></span><span class="value">{{assetViewList.expirationDate}}</span>\r\n                            </p>\r\n                        </div>\r\n                        <div class="col-sm-6">\r\n                            <p>\r\n                                <span class="label"><b>Asset Location: </b></span><span class="value">{{assetViewList.asset_Location}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Memo: </b></span><span class="value">{{assetViewList.memo}} </span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Asset Parent: </b></span><span class="value">{{assetViewList.assetParentId}}</span>\r\n                            </p>\r\n                            <p><span class="label"><b>Asset Class: </b></span><span class="value">{{assetViewList.assetTypeId}}</span></p>\r\n                            <p><span class="label"><b>Depreciation Method: </b></span><span class="value">{{assetViewList.depreciationMethodObj}}</span></p>\r\n                            <p><span class="label"><b>Residual %: </b></span><span class="value">{{assetViewList.residualPercentage}}</span></p>\r\n                            <p><span class="label"><b>Asset Life: </b></span><span class="value">{{assetViewList.assetLife}}</span></p>\r\n                            <p><span class="label"><b>Depr Frequency: </b></span><span class="value">{{assetViewList.depreciationFrequencyObj}}</span></p>\r\n                            <p><span class="label"><b>Acquired GL: </b></span><span class="value">{{assetViewList.acquiredGLAccountObj}}</span></p>\r\n                            <p><span class="label"><b>Depr Expense GL: </b></span><span class="value">{{assetViewList.deprExpenseGLAccountObj}}</span></p>\r\n                            <p><span class="label"><b>AD Depr GL: </b></span><span class="value">{{assetViewList.adDepsGLAccountId}}</span></p>\r\n                            <p><span class="label"><b>Sale GL: </b></span><span class="value">{{assetViewList.assetSaleObj}}</span></p>\r\n                            <p><span class="label"><b>Write Off GL: </b></span><span class="value">{{assetViewList.assetWriteOffObj}}</span></p>\r\n                            <p><span class="label"><b>Write Down GL: </b></span><span class="value">{{assetViewList.assetWriteDownObj}}</span></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="panel panel-default">\r\n                <div class="panel-heading">\r\n                    <h4 class="panel-title">\r\n                        <a class="collapsed" data-toggle="collapse" href="#step2">Capes</a>\r\n                    </h4>\r\n                </div>\r\n                <div id="step2" class="panel-collapse collapse">\r\n                    <div class="panel-body">\r\n                        <div class="col-sm-12">\r\n                            <div class="table-responsive">\r\n                                \x3c!--<table class="table table-bordered table-striped">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>S.no</th>\r\n                                            <th>PN</th>\r\n                                            <th>PN Description</th>\r\n                                            <th>Capability type</th>\r\n                                            <th>Aircraft maufacturer</th>\r\n                                            <th>Models</th>\r\n\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>{{assetViewList.assetTypeId}}</td>\r\n                                            <td>PN123</td>\r\n                                            <td>Engine toll</td>\r\n                                            <td>MFG</td>\r\n                                            <td>Airbus</td>\r\n                                            <td>AB123</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>2</td>\r\n                                            <td>PN123</td>\r\n                                            <td>Engine toll</td>\r\n                                            <td>Overhaul</td>\r\n                                            <td>Boeing</td>\r\n                                            <td>AB125</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>3</td>\r\n                                            <td>PN123</td>\r\n                                            <td>Engine toll</td>\r\n                                            <td>Exchange</td>\r\n                                            <td>Airbus</td>\r\n                                            <td>AB124</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>--\x3e\r\n                                <p-table>\r\n\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th>PN</th>\r\n                                            <th>PN Description</th>\r\n                                            <th>Capability type</th>\r\n                                            <th>Aircraft maufacturer</th>\r\n                                            <th>Models</th>\r\n                                            <th>Dash Number</th>\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n\r\n                                    <ng-template pTemplate="body" let-rowData let-columns="columns" let-asset>\r\n                                        <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n\r\n                                            <td style="width:auto" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                                {{rowData[col.field]}}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                </p-table>\r\n                                <p class="clr-red">Number of rows in the table are all the possible combinations of the PN, Capability Type, Aircraft Manufacturer and Model selected.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="panel panel-default">\r\n                <div class="panel-heading">\r\n                    <h4 class="panel-title">\r\n                        <a class="collapsed" data-toggle="collapse" href="#step3">Calibration</a>\r\n                    </h4>\r\n                </div>\r\n                <div id="step3" class="panel-collapse collapse">\r\n                    <div class="panel-body">\r\n                        <div class="col-sm-6" *ngIf="assetViewList.calibrationRequired">\r\n                            <p>\r\n                                <span class="label"><b>Calibration Frequency: </b></span><span class="value">{{assetViewList.calibrationFrequencyMonths}}Months{{assetViewList.calibrationFrequencyDays}}Days</span>\r\n                            </p>\r\n                            <p><span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.calibrationDefaultVendorId}} </span></p>\r\n                            <p>\r\n                                <span class="label"><b>Dafault Cost: </b></span><span class="value">{{assetViewList.calibrationDefaultCost}}</span>\r\n                            </p>\r\n                            <p><span class="label"><b>GL Account: </b></span><span class="value">{{assetViewList.calibrationGlAccountId}}</span></p>\r\n                            <p>\r\n                                <span class="label"><b>Calibration Memo: </b></span><span class="value">{{assetViewList.calibrationMemo}}</span>\r\n                            </p>\r\n                        </div>\r\n                        <div class="col-sm-6" *ngIf="assetViewList.certificationRequired">\r\n                            <p>\r\n                                <span class="label"><b>Certification Frequency: </b></span><span class="value">{{assetViewList.certificationFrequencyMonths}}Months{{assetViewList.certificationFrequencyDays}}Days</span>\r\n                            </p>\r\n                            <p><span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.certificationDefaultVendorId}} </span></p>\r\n                            <p>\r\n                                <span class="label"><b>Dafault Cost: </b></span><span class="value">{{assetViewList.certificationDefaultCost}}</span>\r\n                            </p>\r\n                            <p><span class="label"><b>GL Account: </b></span><span class="value">{{assetViewList.certificationGlAccountId}}</span></p>\r\n                            <p>\r\n                                <span class="label"><b>Certification Memo: </b></span><span class="value">{{assetViewList.certificationMemo}}</span>\r\n                            </p>\r\n                        </div>\r\n                        <div class="col-sm-6" *ngIf="assetViewList.inspectionRequired">\r\n                            <p>\r\n                                <span class="label"><b>Inspection Frequency: </b></span><span class="value">{{assetViewList.inspectionFrequencyMonths}}Months{{assetViewList.inspectionFrequencyDays}}Days</span>\r\n                            </p>\r\n                            <p><span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.inspectionDefaultVendorId}} </span></p>\r\n                            <p>\r\n                                <span class="label"><b>Dafault Cost: </b></span><span class="value">{{assetViewList.inspectionDefaultCost}}</span>\r\n                            </p>\r\n                            <p><span class="label"><b>GL Account: </b></span><span class="value">{{assetViewList.inspectionGlAccountId}}</span></p>\r\n                            <p>\r\n                                <span class="label"><b>Inspection Memo: </b></span><span class="value">{{assetViewList.inspectionMemo}}</span>\r\n                            </p>\r\n                        </div>\r\n                        <div class="col-sm-6" *ngIf="assetViewList.verificationRequired">\r\n                            <p>\r\n                                <span class="label"><b>Verification Frequency: </b></span><span class="value">{{assetViewList.verificationFrequencyMonths}}Months{{assetViewList.verificationFrequencyDays}}Days</span>\r\n                            </p>\r\n                            <p><span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.verificationDefaultVendorId}} </span></p>\r\n                            <p>\r\n                                <span class="label"><b>Dafault Cost: </b></span><span class="value">{{assetViewList.verificationDefaultCost}}</span>\r\n                            </p>\r\n                            <p><span class="label"><b>GL Account: </b></span><span class="value">{{assetViewList.verificationGlAccountId}}</span></p>\r\n                            <p>\r\n                                <span class="label"><b>Verification Memo: </b></span><span class="value">{{assetViewList.verificationMemo}}</span>\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="form-group col-sm-12 calibration-block w400" *ngIf="assetViewList.calibrationRequired || assetViewList.certificationRequired || assetViewList.inspectionRequired || assetViewList.verificationRequired">\r\n                                <div class="table-responsive">\r\n                                    <table class="table table-bordered table-striped">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th></th>\r\n                                                <th colspan="2">Tolerance</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Min</td>\r\n                                                <td>\r\n                                                    <span class="value">{{assetViewList.assetCalibrationMin}}</span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <span class="value">{{assetViewList.assetCalibrationMinTolerance}}</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Max</td>\r\n                                                <td>\r\n                                                    <span class="value">{{assetViewList.assetCalibratonMax}}</span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <span class="value">{{assetViewList.assetCalibrationMaxTolerance}}</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Expected</td>\r\n                                                <td>\r\n                                                    <span class="value">{{assetViewList.assetCalibrationExpected}}</span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <span class="value">{{assetViewList.assetCalibrationExpectedTolerance}}</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td></td>\r\n                                                <td colspan="2">\r\n                                                    <span class="value">{{assetViewList.assetCalibrationMemo}}</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="panel panel-default">\r\n                <div class="panel-heading">\r\n                    <h4 class="panel-title">\r\n                        <a class="collapsed" data-toggle="collapse" href="#step4">\r\n                            Maintenance &amp;\r\n                            Warranty\r\n                        </a>\r\n                    </h4>\r\n                </div>\r\n                <div id="step4" class="panel-collapse collapse">\r\n                    <div class="panel-body">\r\n                        <div class="col-sm-6">\r\n                            <p>\r\n                                <span class="label"><b>Maintenance Required: </b></span>\r\n                                <span class="value">{{assetViewList.assetIsMaintenanceReqd}}</span>\r\n                                \x3c!--<input type="checkbox"\r\n                                       [disabled]="true" [checked]="assetViewList.assetIsMaintenanceReqd" />--\x3e\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Maintenance Contract: </b></span>\r\n                                <span class="value">{{assetViewList.assetMaintenanceIsContract}}</span>\r\n                                \x3c!--<input type="checkbox"\r\n                                       [disabled]="true" [checked]="assetViewList.assetMaintenanceIsContract" />--\x3e\r\n                            </p>\r\n\r\n                            <p>\r\n                                <span class="label"><b>Maintenance Frequency: </b></span><span class="value">{{assetViewList.maintenanceFrequencyMonths}}Months</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.defaultVendorId}}</span>\r\n                            </p>\r\n                            <p><span class="label"><b>GL Account: </b></span><span class="value">{{assetViewList.glAccountId}}</span></p>\r\n                            <p>\r\n                                <span class="label"><b>Maintenance Memo: </b></span><span class="value">{{assetViewList.maintenanceMemo}}</span>\r\n                            </p>\r\n                        </div>\r\n                        <div class="col-sm-6">\r\n                            <p>\r\n                                <span class="label"><b>Warranty Required: </b></span>\r\n                                <span class="value">{{assetViewList.isWarrantyRequired}}</span>\r\n                                \x3c!--<input type="checkbox" [disabled]="true"\r\n                                       [checked]="assetViewList.isWarrantyRequired" />--\x3e\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},EQKf:function(t,e,n){"use strict";n.r(e),e.default='<div class="x_content">\r\n               \r\n    \x3c!-- <nav aria-label="breadcrumb">\r\n        <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n            <li class="breadcrumb-item active" aria-current="page">Asset Inventory</li>\r\n            <li class="breadcrumb-item" aria-current="page">Asset Inventory List</li>\r\n        </ol>\r\n    </nav> --\x3e\r\n    <p-breadcrumb [model]="breadcrumbs" [home]="home"></p-breadcrumb>\r\n              <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Asset Inventory List</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="navigateTogeneralInfo()"                                \r\n                                  >\r\n                                  Add Asset Inventory \r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="allAssetInfo"\r\n                                 [metaKeySelection]="true"\r\n                                 [(first)]="pageNumber"\r\n                                 [rows]="pageSize"\r\n                                 [paginator]="true"\r\n                                 [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]"\r\n                                 [columns]="selectedColumns"\r\n                                 selectionMode="multiple"\r\n                                 [(selection)]="selectedRows"\r\n                                 [metaKeySelection]="true"\r\n                                 [resizableColumns]="true"\r\n                                 [reorderableColumns]="true"\r\n                                 [scrollable]="true"\r\n                                 [totalRecords]="totalRecords"\r\n                                 scrollHeight="450px"\r\n                                 (onLazyLoad)="onDataLoad($event)" [lazy]="true">\r\n                            <ng-template pTemplate="caption">\r\n                         \r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                        <p-multiSelect [maxSelectedLabels]="2"\r\n                                                   [options]="cols"\r\n                                                   optionLabel="header"\r\n                                                   [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                                   selectedItemsLabel="{0} columns selected"\r\n                                                   defaultLabel="Choose Columns">\r\n                                    </p-multiSelect>\r\n                                </div>\r\n                                <div class="col">\r\n                                  <div\r\n                                    style="width: auto !important; float: right;"\r\n                                    class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                                  >\r\n                                    <i class="fa fa-search"></i>\r\n                                    <input type="text" pInputText size="50"\r\n                                     class="form-control"\r\n                                    (input)="dt.filterGlobal($event.target.value, \'contains\')"\r\n                                    placeholder="Filter" style="min-height: 28px;" />\r\n                                 </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="row">\r\n                              <div class="col">\r\n                                <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data" matTooltipPosition="above"\r\n                                pButton icon="fa-download" iconPos="left" label="Export All Data" style="padding: 5px 12px !important;"  data-toggle="modal"\r\n                                (click)="selectedOnly = false; targetData = dt;" \r\n                                data-target="#downloadConfirmation"></button>\r\n                                 <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data" matTooltipPosition="above" matTooltip="Download Selected Data" matTooltipPosition="above"\r\n                                pButton icon="fa-download" iconPos="left" style="padding: 5px 12px !important;"\r\n                                 label="Export Selected Data" (click)="dt.exportCSV({selectionOnly:true})"\r\n                                ></button>\r\n                                \x3c!-- data-toggle="modal"\r\n                                data-target="#downloadConfirmation"\r\n                                (click)="selectedOnly = true; targetData = dt;" --\x3e\r\n                               \r\n                               </div>\r\n                                <div class="col">\r\n                                    <div class="">\r\n                                      <div\r\n                                        class="col"\r\n                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                      >\r\n                                        <div class="form-group">\r\n                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                        <div\r\n                                            class="pull-left"\r\n                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                          >\r\n                                              <label class="radio-cstm wauto">\r\n                                              <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="geListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                              <span class="checkmark"></span>Active\r\n                                              </label>\r\n                                        </div>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="geListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                            <span class="checkmark"></span>In-active\r\n                                        </label>\r\n                                    </div>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" (click)="geListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                            <span class="checkmark"></span>All\r\n                                        </label>\r\n                                    </div>\r\n                                    <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                        <label style="width: auto !important;margin-top: 3px;">\r\n                                         \r\n                                          <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent"  (click)="getDeleteListByStatus($event.target.checked)"\r\n                                            />\r\n                                          <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                        Show  Deleted List \r\n                                        </label>\r\n                                    </div> \r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n                      </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                    <col *ngFor="let col of columns" style="width:140px">\r\n                                </colgroup>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns style="padding-top: 1% !important">\r\n                                <tr>\r\n                                    <ng-container *ngFor="let col of columns">\r\n                                        <th class="text-center" *ngIf="col.field!=\'companyName\' && col.field!=\'buName\' && col.field!=\'deptName\' && col.field!=\'divName\'" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                            {{col.header}}\r\n                                            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                        </th>\r\n                                        <th class="text-center" *ngIf="col.field==\'companyName\'" colspan="4" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                            Management Structure\r\n                                        </th>\r\n                                    </ng-container>\r\n                                    <th style="width:150px;position: sticky;" *ngIf="selectedColumns.length> 0">Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        \x3c!--  --\x3e\r\n                                        <input  *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'" style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                        <input type="date"   style="width:100%" class="hidePlaceHolder" *ngIf="col.field == \'createdDate\'"\r\n                                        name="createdDate"  (change)="dateFilterForTable($event.target.value, col.field)" />\r\n<input type="date" style="width:100%"  class="hidePlaceHolder" *ngIf="col.field == \'updatedDate\'"   name="updatedDate"\r\n                     (change)="dateFilterForTable($event.target.value,col.field)" />\r\n                                    </th>\r\n                                    <th style="width:150px;position: sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-asset let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="viewSelectedRowdbl(rowData)" >\r\n\r\n                                    <td style="width:auto" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle>\r\n\r\n                                          <ng-container *ngIf="col.field !=\'calibrationRequiredNew\'">\r\n                                            {{\r\n                                                col.field == \'createdDate\'\r\n                                                  ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                                  : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                  ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                                  : rowData[col.field] \r\n                                              }}\r\n                                        </ng-container> \r\n                                        <ng-container *ngIf="col.field ==\'calibrationRequiredNew\'">\r\n                                            <input type="checkbox" disabled [checked]="rowData[col.field] == \'Yes\'"\r\n                                                   style="margin: 0px auto; display: block;" />\r\n                                        </ng-container>\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:150px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                                           matTooltipPosition="above" (onChange)="toggleIsActive(rowData,$event)"></p-inputSwitch> \r\n                                                           <span ><a class="btn nobg btn-view-cstm" data-toggle="modal" data-target="#invView" (click)="openView(rowData)" matTooltip="View" matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                            <span><a class="btn nobg btn-edit-cstm" (click)="openAssetToEdit(rowData)" disabled matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-pencil"></i></a> </span>\r\n                                            <span><a class="btn nobg btn-edit-cstm" (click)="openAssetToAdjustment(rowData)" matTooltip="Asset Adjustment" matTooltipPosition="above"><i class="fa fa-adjust"></i></a> </span>\r\n                                            <span><a class="btn nobg btn-adjhist-cstm" matTooltip="Asset Adjustment History" matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n                                            <span data-toggle="modal" data-target="#assetInvAudit"><a class="btn nobg btn-delete-cstm" (click)="openHistory(rowData)" matTooltip="History" matTooltipPosition="above"><i class="fa fa-history"></i></a> </span>\r\n                                            <span><a class="btn nobg btn-delete-cstm" (click)="openDelete(content,rowData)" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n\r\n                                        </div>\r\n                                        <div *ngIf="currentDeletedstatus==true">\r\n                                            <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                            matTooltipPosition="above" (onChange)="toggleIsActive(rowData,$event)"></p-inputSwitch> \r\n                                            <span><a class="btn nobg btn-view-cstm" data-toggle="modal" data-target="#invView"  (click)="openView(rowData)" matTooltip="View" matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                            <span ><a class="btn nobg" (click)="restore(restoreId,rowData);"  matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                            <span data-toggle="modal" data-target="#assetInvAudit"><a class="btn nobg btn-delete-cstm" (click)="openHistory(rowData)" matTooltip="History" matTooltipPosition="above"><i class="fa fa-history"></i></a> </span>\r\n                                        </div>\r\n                                 </td> \r\n\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns>\r\n                                <tr>\r\n                                    <td colspan="21" style="color: red; font-weight: bold; text-align: start;padding-left: 21% !important;">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <div style="text-align: right;">\r\n                                    <label id="footer" class="footer">Total:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                    <label id="footer" class="footer1">Pages Count:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText type="text" />\r\n                                </div>\r\n                            </ng-template>\r\n                        </p-table>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <ng-template #content let-c="close" let-d="dismiss">\r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n        </div>\r\n        <div class="modal-body">\r\n<p>Asset Name : <span class="new-label">{{this.assetService.listCollection.name}} </span></p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-primary" (click)="removeAsset()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n    </ng-template>\r\n<div class="modal fade" id="invView" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xlg">\r\n        <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" (click)="onCloseView()">&times;</button>\r\n            <div class="col-md-10" >\r\n\r\n                <h4 class="modal-title">Details of Asset Inventory  <span *ngIf="currentAsset">"{{currentAsset.assetId}}" </span></h4> \x3c!--: <span *ngIf="currentAsset">"{{currentAsset.assetId}}"</span>--\x3e\r\n            </div>\r\n            <div class="form-row" style="width: 100%;">\r\n                <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-2">\r\n                        <p class="fs12">\r\n                            <span class="control-label labels-font-header">Asset ID : </span>\r\n                            <span class="span-header-red pl-1" style="text-transform: capitalize;">{{ currentAsset.assetId }}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="col-md-4">\r\n                        <p class="fs12">\r\n                            <span class="control-label labels-font-header">Asset Name : </span>\r\n                            <span class="span-header-red pl-1" style="text-transform: capitalize; ">{{ currentAsset.name }}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <p class="fs12">\r\n                            <span class="control-label labels-font-header">Alt Asset ID : </span>\r\n                            <span class="span-header-red pl-1" style="text-transform: capitalize">{{ currentAsset.alternateAssetRecord }}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <p class="fs12">\r\n                            <span class="control-label labels-font-header">Asset Class : </span>\r\n                            <span class="span-header-red pl-1" style="text-transform: capitalize" *ngIf="currentAsset.isTangible">{{ currentAsset.assetType }}</span>\r\n                            <span class="span-header-red pl-1" style="text-transform: capitalize" *ngIf="!currentAsset.isTangible">{{ currentAsset.assetIntangibleTypeName }}</span>\r\n                            \r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="col-md-12" style="text-align-last: end; padding-right: 2%;">\r\n                <button type="button" name="isActive" [ngClass]="currentAsset.isActive ? \'btn btn-success\' : \'btn btn-danger\'" disabled>\r\n                    <span class="value">{{currentAsset.isActive ? \'Active\' : \'In-Active\'}}</span>\r\n                 </button> \r\n            </div>\r\n        </div>\r\n        <div class="modal-body"> \r\n            <div class="preloader" *ngIf="isSpinnerVisibleHistory" style="    z-index: 1060;">\r\n                <div class="loading">\r\n                    <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                </div>\r\n            </div>\r\n            <form #generalForm="ngForm" >\r\n                <div class="form-row">\r\n                    <div class="col-md-4">\r\n                        <div class="form-group">\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm  wauto">\r\n                                    <input type="radio" name="assetRadio" class="form-control" value="1" disabled [checked]="currentAsset.isTangible">\r\n                                    <span class="checkmark"></span> Tangible\r\n                                </label>\r\n                            </div>\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm  wauto">\r\n                                    <input type="radio" name="assetRadio" class="form-control" value="2" disabled [checked]="currentAsset.isIntangible">\r\n                                    <span class="checkmark"></span> Intangible\r\n                                </label>\r\n                            </div>\r\n                        </div> \r\n\r\n\r\n                    </div>\r\n            \r\n                    <div class="col-md-3" *ngIf="currentAsset.isTangible">\r\n                        <div class="form-group">\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm  wauto">\r\n                                    <input type="radio" name="assetisDepreciable" class="form-control" value="1" disabled [checked]="currentAsset.isDepreciable">\r\n                                    <span class="checkmark"></span> Depreciable\r\n                                </label>\r\n                            </div>\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm  wauto">\r\n                                    <input type="radio" name="assetisDepreciable" class="form-control" value="2" disabled [checked]="currentAsset.isNonDepreciable">\r\n                                    <span class="checkmark"></span> Non-Depreciable\r\n                                </label>\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n            \r\n                    <div class="col-md-3" *ngIf="currentAsset.isIntangible">\r\n                        <div class="form-group">\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm  wautomodal-dialog modal-xlg">\r\n                                    <input type="radio" name="assetisAmortizable" class="form-control" value="1" disabled [checked]="currentAsset.isAmortizable">\r\n                                    <span class="checkmark"></span> Amortizable\r\n                                </label>\r\n                            </div>\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm  wautomodal-dialog modal-xlg">\r\n                                    <input type="radio" name="assetisAmortizable" class="form-control" value="2" disabled [checked]="currentAsset.isNonAmortizable">\r\n                                    <span class="checkmark"></span> Non-Amortizable\r\n                                </label>\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            \r\n                <div class="form-row m-t-10">\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Inventory Num</label>\r\n                            <input type="text" class="form-control" name="inventoryNumber" [(ngModel)]="currentAsset.inventoryNumber" disabled>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Entry Date <span class="clr-red">*</span></label>\r\n                            <p-calendar [showIcon]="true" name="entryDate" [(ngModel)]="currentAsset.entryDate" [disabled]="true"></p-calendar>\r\n                        </div>\r\n                       \r\n                        <div class="form-group">\r\n                            <label>Asset ID <span class="clr-red">*</span></label>\r\n                            <input type="text" class="form-control" name="assetId" [(ngModel)]="currentAsset.assetId" disabled>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Alt Asset ID</label>\r\n                            <input type="text" class="form-control" name="alternateAssetId" [(ngModel)]="currentAsset.alternateAssetRecord" disabled>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Asset Name <span class="clr-red">*</span></label>\r\n                            <input type="text" class="form-control" name="name" [(ngModel)]="currentAsset.name" disabled>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Asset Description</label>\r\n                            <input type="text" class="form-control" name="description" [(ngModel)]="currentAsset.description" disabled>\r\n                        </div>\r\n                       \r\n                        <ng-container *ngIf="currentAsset.isTangible">\r\n                            <div class="form-group">\r\n                                <label>Acquisition Type <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control" name="acquisitionType" [(ngModel)]="currentAsset.acquisitionType" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Model Number</label>\r\n                                <input type="text" class="form-control" name="model" [(ngModel)]="currentAsset.model" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Asset Parent</label>\r\n                                <input type="text" class="form-control" name="assetParentId" [(ngModel)]="currentAsset.assetParenRecord" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Manufacturer</label>\r\n                                <input type="text" class="form-control" name="manufacturerName" [(ngModel)]="currentAsset.manufacturerName" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Manufactured Date</label>\r\n                                <p-calendar [showIcon]="true" name="manufacturedDate" [(ngModel)]="currentAsset.manufacturedDate" [disabled]="true"></p-calendar>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                    <label>\r\n                                        <input type="checkbox" name="isSerialized" [(ngModel)]="currentAsset.isSerialized" disabled>\r\n                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                        Is Serialized\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class="form-group" *ngIf="currentAsset.isSerialized">\r\n                                <label>Serial No <span class="clr-red">*</span></label>\r\n                                <input class="form-control" type="text" name="serialNumber" [(ngModel)]="currentAsset.serialNo" disabled> \r\n                            </div>\r\n                        </ng-container>\r\n                        </div>\r\n                            <div class="col-md-3" *ngIf="currentAsset.isTangible">\r\n                                <ng-container *ngIf="currentAsset.isTangible">\r\n                            <div class="form-group">\r\n                                <label>Asset Status</label>\r\n                                <input type="text" class="form-control" name="assetStatus" [(ngModel)]="currentAsset.assetStatus" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Asset Inventory Status</label>\r\n                                <input type="text" class="form-control" name="inventoryStaus" [(ngModel)]="currentAsset.inventoryStaus" disabled>\r\n                            </div>\r\n                           \r\n                            \r\n                            <div class="form-group">\r\n                                <label>UOM <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control" name="unitOfMeasureName" [(ngModel)]="currentAsset.unitOfMeasureName" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Expiration Date</label>\r\n                                <p-calendar [showIcon]="true"  name="expirationDate" [(ngModel)]="currentAsset.expirationDate" [disabled]="true"></p-calendar>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Asset Location</label>\r\n                                <input type="text" class="form-control" name="asset_LocationName" [(ngModel)]="currentAsset.asset_LocationName" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control" name="currencyName" [(ngModel)]="currentAsset.currencyName" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Unit Cost <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control text-right" name="unitCost" [(ngModel)]="currentAsset.unitCost" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Installation Cost</label>\r\n                                <input type="text" class="form-control text-right" name="installationCost" [(ngModel)]="currentAsset.installationCost" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Freight</label>\r\n                                <input type="text" class="form-control text-right" name="freight" [(ngModel)]="currentAsset.freight" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Insurance</label>\r\n                                <input type="text" class="form-control text-right" name="insurance" [(ngModel)]="currentAsset.insurance" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Taxes</label>\r\n                                <input type="text" class="form-control text-right" name="taxes" [(ngModel)]="currentAsset.taxes" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Total Cost</label>\r\n                                <input type="text" class="form-control text-right" name="totalCost" [(ngModel)]="currentAsset.totalCost" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <a style="color:#3498db" (click)="openCapes()" data-toggle="modal" data-target="#capesData">\r\n                                    <u>Link to Capes</u>\r\n                                </a>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n\r\n                    <div class="col-md-3">\r\n                        <ng-container *ngIf="currentAsset.isTangible">\r\n                          \r\n                            <div class="form-group">\r\n                                <label>Asset Class/Attribute <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control" name="assetTypeName" [(ngModel)]="currentAsset.assetType" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Depreciation Method</label>\r\n                                <input type="text" class="form-control" name="depreciationMethod" [(ngModel)]="currentAsset.depreciationMethod" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Residual %</label>\r\n                                <input type="text" class="form-control" name="residualPercentage" [(ngModel)]="currentAsset.residualPercentage" disabled>\r\n                            </div>\r\n                            \x3c!-- <div class="form-group">\r\n                                <label>Residual Value</label>\r\n                                <input type="text" class="form-control" name="residualValue" [(ngModel)]="currentAsset.residualValue" disabled>\r\n                            </div> --\x3e\r\n                            <div class="form-group">\r\n                                <label>Asset Life</label>\r\n                                <input type="number" class="form-control" name="assetLife" [(ngModel)]="currentAsset.assetLife" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Depr Frequency</label>\r\n                                <input type="text" class="form-control" name="depreciationFrequency" [(ngModel)]="currentAsset.depreciationFrequency" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Acquired GL Account</label>\r\n                                <input type="text" class="form-control" name="acquiredGLAccount" [(ngModel)]="currentAsset.acquiredGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Depr Expense GL Account</label>\r\n                                <input type="text" class="form-control" name="deprExpenseGLAccount" [(ngModel)]="currentAsset.deprExpenseGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Accum Depr GL Account</label>\r\n                                <input type="text" class="form-control" name="adDepsGLAccount" [(ngModel)]="currentAsset.adDepsGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Sale GL Account</label>\r\n                                <input type="text" class="form-control" name="assetSale" [(ngModel)]="currentAsset.assetSale" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Write Off GL Account</label>\r\n                                <input type="text" class="form-control" name="assetWriteOff" [(ngModel)]="currentAsset.assetWriteOff" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Write Down GL Account</label>\r\n                                <input type="text" class="form-control" name="assetWriteDown" [(ngModel)]="currentAsset.assetWriteDown" disabled>\r\n                            </div>\r\n                        </ng-container>\r\n                        <ng-container *ngIf="currentAsset.isIntangible">\r\n                            <div class="form-group">\r\n                                <label>Intangible Class <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control" name="assetIntangibleTypeName" [(ngModel)]="currentAsset.assetIntangibleTypeName" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Amortization Method</label>\r\n                                <input type="text" class="form-control" name="amortizationMethod" [(ngModel)]="currentAsset.amortizationMethod" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Intangible Life</label>\r\n                                <input type="text" class="form-control" name="intangibleLife" [(ngModel)]="currentAsset.intangibleLife" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Amortization Frequency</label>\r\n                                <input type="text" class="form-control" name="amortizationFrequency" [(ngModel)]="currentAsset.amortizationFrequency" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Intangible GL Account</label>\r\n                                <input type="text" class="form-control" name="intangibleGLAccount" [(ngModel)]="currentAsset.intangibleGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Amort Expense GL Account</label>\r\n                                <input type="text" class="form-control" name="amortExpenseGLAccount" [(ngModel)]="currentAsset.amortExpenseGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Acc Amort Depr GL Account</label>\r\n                                <input type="text" class="form-control" name="accAmortDeprGLAccount" [(ngModel)]="currentAsset.accAmortDeprGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Intangible Write Down GL Account</label>\r\n                                <input type="text" class="form-control" name="intangibleWriteDownGLAccount" [(ngModel)]="currentAsset.intangibleWriteDownGLAccount" disabled>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5 class="header-h5">Management Structure <span class="text-danger">*</span></h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group" style="margin-bottom: 4px;">\r\n                                    <input class="form-control" type="text" name="companyName"\r\n                                        [(ngModel)]="currentAsset.companyName" disabled>\r\n                                </div>\r\n                                <div class="form-group" style="margin-bottom: 4px;">\r\n                                    <input class="form-control" type="text" name="BUName"\r\n                                        [(ngModel)]="currentAsset.buName" disabled>\r\n                                </div>\r\n                                <div class="form-group" style="margin-bottom: 4px;">\r\n                                    <input class="form-control" type="text" name="divisionName"\r\n                                        [(ngModel)]="currentAsset.divName" disabled>\r\n                                </div>\r\n                                <div class="form-group" style="margin-bottom: 4px;">\r\n                                    <input class="form-control" type="text" name="deptName"\r\n                                        [(ngModel)]="currentAsset.deptName" disabled>\r\n                                </div>                    \r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group memo-popup-cstm">\r\n                            <label style="float: inherit;">Memo</label>\r\n                            <span matTooltipPosition="above"   [matTooltip]="parsedText(currentAsset.memo)">\r\n                                <div [innerHTML]="currentAsset.memo" class="form-control" class="p_editor_box"></div></span>\r\n                        </div>\r\n                      \r\n                    </div>\r\n                </div>\r\n<div class="form-row" *ngIf="currentAsset.isTangible">\r\n    <div class="col-md-3-custm1"  >\r\n        <div [ngClass]="(currentAsset.calibrationRequired) ? \'border-box-cstm\' : \'\'">\r\n            <div class="form-group">\r\n                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                    <label>\r\n                        <input type="checkbox" name="calibrationRequired" [(ngModel)]="currentAsset.calibrationRequired" disabled>\r\n                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                        Calibration Required\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf="currentAsset.calibrationRequired">\r\n                <div class="form-group">\r\n                    <label>Calibration Frequency <span class="clr-red">*</span></label>\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Months</label>\r\n                                <input type="number" class="form-control" name="calibrationFrequencyMonths" [(ngModel)]="currentAsset.calibrationFrequencyMonths" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Days</label>\r\n                                <input type="number" class="form-control" name="calibrationFrequencyDays" [(ngModel)]="currentAsset.calibrationFrequencyDays" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>Default Vendor</label>\r\n                    <input type="text" class="form-control" name="calibrationDefaultVendorName" [(ngModel)]="currentAsset.calibrationDefaultVendorName" disabled>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Default Cost</label>\r\n                                <input type="text" class="form-control text-right" name="calibrationDefaultCost" [(ngModel)]="currentAsset.calibrationDefaultCost" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red" *ngIf="currentAsset.calibrationDefaultCost !=0">*</span></label>\r\n                                <input type="text" class="form-control" name="calibrationCurrencyName" [(ngModel)]="currentAsset.calibrationCurrencyName" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>GL Account</label>\r\n                    <input type="text" class="form-control" name="calibrationGlAccountName" [(ngModel)]="currentAsset.calibrationGlAccountName" disabled>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                    <label style="float: inherit;">Calibration Memo</label>\r\n                    <span matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.calibrationMemo)"  >\r\n                        <div [innerHTML]="currentAsset.calibrationMemo" class="form-control" class="p_editor_box"></div>\r\n                    </span>\r\n                </div>\r\n                <div class="card card-stock card-tolerance">\r\n                    <div class="card-header">\r\n                        <h5 class="header-h5">Tolerance</h5>\r\n                    </div>\r\n                    <div class="card-body">\r\n                        <div class="form-row">\r\n                            <label style="width: 100%; margin-left: 6px;">Min</label>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">                                                \r\n                                    <input type="number" class="form-control" name="assetCalibrationMin" [(ngModel)]="currentAsset.assetCalibrationMin" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibrationMinTolerance" [(ngModel)]="currentAsset.assetCalibrationMinTolerance" disabled>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-row">\r\n                            <label style="width: 100%; margin-left: 6px;">Max</label>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibratonMax" [(ngModel)]="currentAsset.assetCalibratonMax" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibrationMaxTolerance" [(ngModel)]="currentAsset.assetCalibrationMaxTolerance" disabled>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-row">\r\n                            <label style="width: 100%; margin-left: 6px;">Expected</label>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibrationExpected" [(ngModel)]="currentAsset.assetCalibrationExpected" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibrationExpectedTolerance" [(ngModel)]="currentAsset.assetCalibrationExpectedTolerance" disabled>\r\n                                </div>\r\n                            </div>\r\n                        </div>                                    \r\n                    </div>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                    <label style="float: inherit;">Memo</label>\r\n                    <span matTooltipPosition="above"   [matTooltip]="parsedText(currentAsset.assetCalibrationMemo)"  >\r\n                        <div [innerHTML]="currentAsset.assetCalibrationMemo" class="form-control" class="p_editor_box"></div>\r\n                    </span>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n        <div class="col-md-3-custm1" >\r\n        <div [ngClass]="(currentAsset.certificationRequired) ? \'border-box-cstm m-t-5\' : \'\'">\r\n            <div class="form-group">\r\n                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                    <label>\r\n                        <input type="checkbox" name="certificationRequired" [(ngModel)]="currentAsset.certificationRequired" disabled>\r\n                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                        Certification Required\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf="currentAsset.certificationRequired">\r\n                <div class="form-group">\r\n                    <label>Certification Frequency <span class="clr-red">*</span></label>\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Months</label>\r\n                                <input type="number" class="form-control" name="certificationFrequencyMonths" [(ngModel)]="currentAsset.certificationFrequencyMonths" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Days</label>\r\n                                <input type="number" class="form-control" name="certificationFrequencyDays" [(ngModel)]="currentAsset.certificationFrequencyDays" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>Default Vendor</label>\r\n                    <input type="text" class="form-control" name="certificationDefaultVendorName" [(ngModel)]="currentAsset.certificationDefaultVendorName" disabled>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Default Cost</label>\r\n                                <input type="text" class="form-control text-right" name="certificationDefaultCost" [(ngModel)]="currentAsset.certificationDefaultCost" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red" *ngIf="currentAsset.calibrationDefaultCost !=0">*</span></label>\r\n                                <input type="text" class="form-control" name="certificationCurrencyName" [(ngModel)]="currentAsset.certificationCurrencyName" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>GL Account</label>\r\n                    <input type="text" class="form-control" name="certificationGlAccountName" [(ngModel)]="currentAsset.certificationGlAccountName" disabled>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                    <label style="float: inherit;">Certification Memo</label>\r\n                    <span matTooltipPosition="above"   [matTooltip]="parsedText(currentAsset.certificationMemo)" >\r\n                        <div [innerHTML]="currentAsset.certificationMemo" class="form-control" class="p_editor_box"></div>\r\n                    </span>\r\n                </div>\r\n            </ng-container>\r\n        </div>                        \r\n    </div>\r\n    <div class="col-md-3-custm1" >\r\n        <div [ngClass]="(currentAsset.inspectionRequired) ? \'border-box-cstm m-t-5\' : \'\'">\r\n            <div class="form-group">\r\n                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                    <label>\r\n                        <input type="checkbox" name="inspectionRequired" [(ngModel)]="currentAsset.inspectionRequired" disabled>\r\n                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                        Inspection Required\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf="currentAsset.inspectionRequired">\r\n                <div class="form-group">\r\n                    <label>Inspection Frequency <span class="clr-red">*</span></label>\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Months</label>\r\n                                <input type="number" class="form-control" name="inspectionFrequencyMonths" [(ngModel)]="currentAsset.inspectionFrequencyMonths" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Days</label>\r\n                                <input type="number" class="form-control" name="inspectionFrequencyDays" [(ngModel)]="currentAsset.inspectionFrequencyDays" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>Default Vendor</label>\r\n                    <input type="text" class="form-control" name="inspectionDefaultVendorName" [(ngModel)]="currentAsset.inspectionDefaultVendorName" disabled>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Default Cost</label>\r\n                                <input type="text" class="form-control text-right" name="inspectionDefaultCost" [(ngModel)]="currentAsset.inspectionDefaultCost" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red" *ngIf="currentAsset.calibrationDefaultCost !=0">*</span></label>\r\n                                <input type="text" class="form-control" name="inspectionCurrencyName" [(ngModel)]="currentAsset.inspectionCurrencyName" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>GL Account</label>\r\n                    <input type="text" class="form-control" name="inspectionGlaAccountName" [(ngModel)]="currentAsset.inspectionGlaAccountName" disabled>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                    <label style="float: inherit;">Inspection Memo</label>\r\n                    <span matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.inspectionMemo)">\r\n                        <div [innerHTML]="currentAsset.inspectionMemo" class="form-control" class="p_editor_box"></div>\r\n                    </span>\r\n                </div>\r\n            </ng-container>\r\n        </div>                        \r\n    </div>\r\n    <div class="col-md-3-custm1" >\r\n        <div [ngClass]="(currentAsset.verificationRequired) ? \'border-box-cstm m-t-5\' : \'\'">\r\n            <div class="form-group">\r\n                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                    <label>\r\n                        <input type="checkbox" name="verificationRequired" [(ngModel)]="currentAsset.verificationRequired" disabled>\r\n                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                        Verification Required\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf="currentAsset.verificationRequired">\r\n                <div class="form-group">\r\n                    <label>Verification Frequency <span class="clr-red">*</span></label>\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Months</label>\r\n                                <input type="number" class="form-control" name="verificationFrequencyMonths" [(ngModel)]="currentAsset.verificationFrequencyMonths" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Days</label>\r\n                                <input type="number" class="form-control" name="verificationFrequencyDays" [(ngModel)]="currentAsset.verificationFrequencyDays" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>Default Vendor</label>\r\n                    <input type="text" class="form-control" name="verificationDefaultVendorName" [(ngModel)]="currentAsset.verificationDefaultVendorName" disabled>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Default Cost</label>\r\n                                <input type="text" class="form-control text-right" name="verificationDefaultCost" [(ngModel)]="currentAsset.verificationDefaultCost" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red" *ngIf="currentAsset.calibrationDefaultCost !=0">*</span></label>\r\n                                <input type="text" class="form-control" name="verificationCurrencyName" [(ngModel)]="currentAsset.verificationCurrencyName" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>GL Account</label>\r\n                    <input type="text" class="form-control" name="verificationGlAccountName" [(ngModel)]="currentAsset.verificationGlAccountName" disabled>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                    <label style="float: inherit;">Verification Memo</label>\r\n                    <span matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.verificationMemo)">\r\n                        <div [innerHTML]="currentAsset.verificationMemo" class="form-control" class="p_editor_box"></div>\r\n                    </span>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>\r\n                <div class="form-row" *ngIf="currentAsset.isTangible">\r\n                    <div class="col-md-6 col-md-6-cstm1" style="margin-right: 1%;" [ngClass]="(currentAsset.assetIsMaintenanceReqd) ? \'border-box-cstm m-t-5\' : \'\'">\r\n                       \r\n                        <div class="form-row">\r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="assetIsMaintenanceReqd" [(ngModel)]="currentAsset.assetIsMaintenanceReqd" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Maintenance Required\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-6" *ngIf="currentAsset.assetIsMaintenanceReqd">\r\n                                <ng-container >\r\n                                    <div class="form-group">\r\n                                        <label>Maintenance Frequency <span class="clr-red">*</span></label>\r\n                                        <div class="form-row">\r\n                                            <div class="col-md-6">\r\n                                                <div class="form-group">\r\n                                                    <label>Months</label>\r\n                                                    <input type="number" class="form-control" name="maintenanceFrequencyMonths" [(ngModel)]="currentAsset.maintenanceFrequencyMonths" disabled>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="col-md-6">\r\n                                                <div class="form-group">\r\n                                                    <label>Days</label>\r\n                                                    <input type="number" class="form-control" name="maintenanceFrequencyDays" [(ngModel)]="currentAsset.maintenanceFrequencyDays" disabled>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        <label>Default Vendor</label>\r\n                                        <input type="text" class="form-control" name="defaultVendorName" [(ngModel)]="currentAsset.defaultVendorName" disabled>\r\n                                    </div>\r\n                                   \r\n                                </ng-container>\r\n                            </div>\r\n                            <div class="col-md-6"  *ngIf="currentAsset.assetIsMaintenanceReqd" style="padding-top: 17px;">\r\n                                <div class="form-group">\r\n                                    <label>GL Account</label>\r\n                                    <input type="text" class="form-control" name="glAccountName" [(ngModel)]="currentAsset.glAccountName" disabled>\r\n                                </div>\r\n                                <div class="form-group memo-popup-cstm">\r\n                                    <label style="float: inherit;margin-top: 10px;">Maintenance Memo</label>\r\n                                    <span matTooltipPosition="above" [matTooltip]="parsedText(currentAsset.maintenanceMemo)">\r\n                                        <div [innerHTML]="currentAsset.maintenanceMemo" class="form-control" class="p_editor_box"></div>\r\n                                    </span>\r\n                                </div>\r\n                                </div>\r\n                        </div>\r\n                        <div class="form-row" *ngIf="currentAsset.assetIsMaintenanceReqd">\r\n                            <div class="w-100" style="padding-top: 24px;">\r\n                                        <div>\r\n                                            <h6 class="panel-title alignb" style="padding-left: 6px;">Attachment Details</h6>\r\n                                          </div>\r\n                                    <div class="checkbox-cstm setDelts" >\r\n                                        <label style="width: auto !important;margin-top: 3px;">\r\n                                         \r\n                                          <input type="checkbox" [(ngModel)]="maitananceeletedList" name="cparent1" id="cparent1"  (click)="getDeleteListByStatusAttachments($event.target.checked,1)"\r\n                                            />\r\n                                          <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                        Show  Deleted List \r\n                                        </label>\r\n                                    </div> \r\n                                <p-table #table4 class="rro-table-cstm lastcol-fix ptable-attach"\r\n                                         [columns]="selectedColumnsDoc"\r\n                                         [value]="sourceViewforDocumentList"\r\n                                         [paginator]="true"\r\n                                         [rows]="3"\r\n                                         [rowsPerPageOptions]="[3, 6, 9, 15]" [scrollable]="true" scrollHeight="500px">\r\n                                        \r\n                                    <ng-template pTemplate="colgroup" let-columns>\r\n                                        <colgroup>\r\n                                            <col *ngFor="let col of columns" style="width:100px" />\r\n                                        </colgroup>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                                                [pSortableColumn]="col.field">\r\n                                                {{ col.header }}\r\n                                                <p-sortIcon [field]="col.field">\r\n                                                </p-sortIcon>\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky">Actions</th>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                                \x3c!--  --\x3e\r\n                                                <input type="text" *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'"\r\n                                                       (input)="table4.filter($event.target.value, col.field,\'contains\') "\r\n                                                      \r\n                                                       style="width:100%;" pInputText>\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'createdDate\'" name="createdDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableNew($event.target.value, col.field )">\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'updatedDate\'" name="updatedDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableNew($event.target.value, col.field )">\r\n                                            </th>\r\n\r\n                                            <th style="width:70px;position:sticky"></th>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="body"\r\n                                                 let-rowData\r\n                                                 let-columns="columns"\r\n                                                 let-rowIndex="rowIndex">\r\n                                        <tr [pSelectableRow]="rowData">\r\n                                            <ng-container *ngFor="let col of columns">\r\n                                                <td *ngIf="col.field != \'fileName\' && col.field != \'docMemo\'"\r\n                                                    class="ui-resizable-column"\r\n                                                    pReorderableRowHandle>\r\n                                                    {{\r\n                                                    col.field == \'createdDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\')\r\n                                                        : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\')\r\n                                                        : rowData[col.field]\r\n                                                    }}\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'fileName\'">\r\n                                                    <a class="filelink" (click)="downloadFileUpload(rowData)">\r\n                                                        {{ rowData[col.field] }}\r\n                                                    </a>\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'docMemo\'">\r\n                                                    <p class="m-0 p-0" [innerHTML]="rowData[col.field]"></p>\r\n                                                </td>\r\n                                            </ng-container>\r\n\r\n                                            <td style="width: 70px;">\r\n                                                <button class="btn-edit set_proper_align set_position"\r\n                                                        mat-icon-button (click)="openHistoryDoc(contentAuditHist,rowData)"\r\n                                                        matTooltip="History" matTooltipPosition="above">\r\n                                                    <i class="fa fa-history"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="emptymessage"\r\n                                                 let-columns>\r\n                                        <tr>\r\n                                            <td [attr.colspan]="10"\r\n                                                style="color: red; font-weight: bold; text-align: left; padding-left: 30% !important;">\r\n                                                No records found\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    </ng-template> \r\n\r\n                                    <ng-template pTemplate="summary" id="footer1">\r\n                                        <label id="footer" class="footer">Total:</label> \r\n                                        \x3c!-- [(ngModel)]="table4._totalRecords"   [(ngModel)]="totalRecords" --\x3e\r\n                                        <input style="width: 5%;"  [(ngModel)]="table4._totalRecords"  name="mainTotalRecords" disabled\r\n                                               pInputText type="text" />\r\n                                        &nbsp;&nbsp;\r\n                                        <label id="footer" class="footer1">Pages Count:</label>\r\n                                        \x3c!-- [ngModel]="getPageCount(table4._totalRecords, pageSizeNew)"      [(ngModel)]="totalPages"  --\x3e\r\n                                        <input style="width: 5%;"\r\n                                               name="mainpagecount" [ngModel]="getPageCount(table4._totalRecords, pageSizeNew)" disabled pInputText type="text" />\r\n                                    </ng-template>\r\n\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-6 col-md-6-cstm1" [ngClass]="(currentAsset.assetIsMaintenanceReqd) ? \'border-box-cstm m-t-5\' : \'\'">\r\n                        <div class="form-row">\r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="warrantyRequired" [(ngModel)]="currentAsset.isWarrantyRequired" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Warranty Required\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-6" *ngIf="currentAsset.isWarrantyRequired">\r\n                             \r\n                                <ng-container >\r\n                                    <div class="form-group">\r\n                                        <label>Warranty Company</label>\r\n                                        <input type="text" class="form-control" name="warrantyCompanySelectName" [(ngModel)]="currentAsset.warrantyCompany" disabled>\r\n                                    </div>\r\n                                    <div class="form-group" *ngIf="currentAsset.warrantyCompanySelectId == 2">\r\n                                        <input type="text" class="form-control" name="warrantyCompanyVendorName" [(ngModel)]="currentAsset.warrantyCompanyVendorName" disabled>\r\n                                    </div>\r\n                                    <div class="form-group" *ngIf="currentAsset.warrantyCompanySelectId == 4">\r\n                                        <input type="text" class="form-control" name="warrantyCompanyName" [(ngModel)]="currentAsset.warrantyCompanyName">\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        <label>Warranty GL Account</label>\r\n                                        <input type="text" class="form-control" name="warrantyGlAccountName" [(ngModel)]="currentAsset.warrantyGlAccountName" disabled>\r\n                                    </div>\r\n                                  \r\n                                    <div class="form-group memo-popup-cstm">\r\n                                        <label style="float: inherit;">Warranty Memo</label>\r\n                                        <span matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.warrantyMemo)" >\r\n                                            <div [innerHTML]="currentAsset.warrantyMemo" class="form-control p_editor_box" ></div>\r\n                                        </span>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </div>\r\n                            <div class="col-md-6" *ngIf="currentAsset.isWarrantyRequired">\r\n                                <div class="form-group">\r\n                                    <label>Warranty Start Date</label>\r\n                                    <p-calendar [showIcon]="true" name="warrantyStartDate" [(ngModel)]="currentAsset.warrantyStartDate" [disabled]="true"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Warranty End Date</label>\r\n                                    <p-calendar [showIcon]="true" name="warrantyEndDate" [(ngModel)]="currentAsset.warrantyEndDate" [disabled]="true"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Warranty Status</label>\r\n                                    <input type="text" class="form-control" name="warrantyStatusName" [(ngModel)]="currentAsset.warrantyStatusName" disabled>\r\n                                </div>\r\n                                </div>\r\n                        </div>\r\n                        <div class="form-row" *ngIf="currentAsset.isWarrantyRequired">\r\n                            <div class="w-100">\r\n                                        <h6 class="panel-title alignb" style="padding-left: 6px;">Attachment Details</h6>\r\n                                <div class="checkbox-cstm setDelts">\r\n                                    <label style="width: auto !important;margin-top: 3px;">\r\n                                     \r\n                                      <input type="checkbox" [(ngModel)]="warrentyDeletedList" name="cparent2" id="cparent2"  (click)="getDeleteListByStatusAttachments($event.target.checked,2)"\r\n                                        />\r\n                                      <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                    Show  Deleted List \r\n                                    </label>\r\n                                </div>\r\n                                <p-table #table5 class="rro-table-cstm lastcol-fix ptable-attach"\r\n                                         [columns]="selectedColumnsDoc"\r\n                                         [value]="sourceViewforDocumentListWarranty"\r\n                                         [paginator]="true"\r\n                                         [rows]="3"\r\n                                         [rowsPerPageOptions]="[3, 6, 9, 15]" [scrollable]="true" scrollHeight="500px">\r\n\r\n                                    <ng-template pTemplate="colgroup" let-columns>\r\n                                        <colgroup>\r\n                                            <col *ngFor="let col of columns" style="width:100px" />\r\n                                        </colgroup>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                                                [pSortableColumn]="col.field">\r\n                                                {{ col.header }}\r\n                                                <p-sortIcon [field]="col.field">\r\n                                                </p-sortIcon>\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky">Actions</th>\r\n\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                                \x3c!--  --\x3e\r\n                                                <input type="text" *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'"\r\n                                                       (input)="table5.filter($event.target.value, col.field,\'contains\') "\r\n                                                      \r\n                                                       style="width:100%;" pInputText>\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'createdDate\'" name="createdDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableWarranty($event.target.value, col.field )">\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'updatedDate\'" name="updatedDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableWarranty($event.target.value, col.field )">\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky"></th>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="body"\r\n                                                 let-rowData\r\n                                                 let-columns="columns"\r\n                                                 let-rowIndex="rowIndex">\r\n                                        <tr [pSelectableRow]="rowData">\r\n                                            <ng-container *ngFor="let col of columns">\r\n                                                <td *ngIf="col.field != \'fileName\' && col.field != \'docMemo\'"\r\n                                                    class="ui-resizable-column"\r\n                                                    pReorderableRowHandle>\r\n                                                    {{\r\n                                                    col.field == \'createdDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\')\r\n                                                        : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\')\r\n                                                        : rowData[col.field]\r\n                                                    }}\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'fileName\'">\r\n                                                    <a class="filelink" (click)="downloadFileUpload(rowData)">\r\n                                                        {{ rowData[col.field] }}\r\n                                                    </a>\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'docMemo\'">\r\n                                                    <p class="m-0 p-0" [innerHTML]="rowData[col.field]"></p>\r\n                                                </td>\r\n                                            </ng-container>\r\n\r\n                                            <td style="width: 70px;">\r\n                                                <button class="btn-edit set_proper_align set_position"\r\n                                                        mat-icon-button (click)="openHistoryDoc(contentAuditHist,rowData)"\r\n                                                        matTooltip="History" matTooltipPosition="above">\r\n                                                    <i class="fa fa-history"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="emptymessage"\r\n                                    let-columns\r\n                                   >\r\n                           <tr>\r\n                               <td [attr.colspan]="10"\r\n                                   style="color: red; font-weight: bold; text-align: left; padding-left: 30% !important;">\r\n                                   No records found\r\n                               </td>\r\n\r\n                           </tr>\r\n                       </ng-template> \r\n                                    <ng-template pTemplate="summary" id="footer1">\r\n                                        <label id="footer" class="footer">Total:</label>\r\n                                        <input style="width: 5%;" [(ngModel)]="table5._totalRecords" name="warrTotalRecords" disabled\r\n                                               pInputText type="text" />\r\n                                        &nbsp;&nbsp;\r\n                                        <label id="footer" class="footer1">Pages Count:</label>\r\n                                        <input style="width: 5%;" [ngModel]="getPageCount(table5._totalRecords, pageSizeNew)"\r\n                                               name="warrpagecount" disabled pInputText type="text" />\r\n                                    </ng-template>\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-row" *ngIf="currentAsset.isIntangible">\r\n                    <div class="col-md-12">\r\n                        <div class="form-row">\r\n                            <div>\r\n                                        <h6 class="panel-title alignb" style="padding-left: 6px;">Attachment Details</h6>\r\n                                <div class="checkbox-cstm setDelts">\r\n                                    <label style="width: auto !important;margin-top: 3px;">\r\n                                     \r\n                                      <input type="checkbox" [(ngModel)]="intangibleDeletedList" name="cparent3" id="cparent3"  (click)="getDeleteListByStatusAttachments($event.target.checked,3)"\r\n                                        />\r\n                                      <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                    Show  Deleted List \r\n                                    </label>\r\n                                </div> \r\n                                <p-table #intUpload class="rpo-table-cstm lastcol-fix ptable-attach"\r\n                                         [columns]="selectedColumnsDoc"\r\n                                         [value]="sourceViewforDocumentListInt"\r\n                                         [paginator]="true"\r\n                                         [rows]="3"\r\n                                         [rowsPerPageOptions]="[3, 6, 9, 15]">\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                                                [pSortableColumn]="col.field">\r\n                                                {{ col.header }}\r\n                                                <p-sortIcon [field]="col.field">\r\n                                                </p-sortIcon>\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky">Actions</th>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                                \x3c!-- --\x3e\r\n                                                <input type="text"  *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'"\r\n                                                       (input)="intUpload.filter($event.target.value, col.field,\'contains\') "\r\n                                                 \r\n                                                       style="width:100%;" pInputText>\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'createdDate\'" name="createdDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableInt($event.target.value, col.field )">\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'updatedDate\'" name="updatedDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableInt($event.target.value, col.field )">\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky"></th>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="body"\r\n                                                 let-rowData\r\n                                                 let-columns="columns"\r\n                                                 let-rowIndex="rowIndex">\r\n                                        <tr [pSelectableRow]="rowData">\r\n                                            <ng-container *ngFor="let col of columns">\r\n                                                <td *ngIf="col.field != \'fileName\' && col.field != \'docMemo\'"\r\n                                                    class="ui-resizable-column"\r\n                                                    pReorderableRowHandle>\r\n                                                    {{\r\n                                                    col.field == \'createdDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\')\r\n                                                        : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\')\r\n                                                        : rowData[col.field]\r\n                                                    }}\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'fileName\'">\r\n                                                    <a class="filelink" (click)="downloadFileUpload(rowData)">\r\n                                                        {{ rowData[col.field] }}\r\n                                                    </a>\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'docMemo\'">\r\n                                                    <p class="m-0 p-0" [innerHTML]="rowData[col.field]"></p>\r\n                                                </td>\r\n                                            </ng-container>\r\n\r\n                                            <td style="width: 70px;">\r\n                                                <button class="btn-edit set_proper_align set_position"\r\n                                                        mat-icon-button (click)="openHistoryDoc(contentAuditHist,rowData)"\r\n                                                        matTooltip="History" matTooltipPosition="above">\r\n                                                    <i class="fa fa-history"\r\n                                                       [ngClass]="{ grayColor: !rowData.isFileFromServer }"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="emptymessage"\r\n                                                 let-columns\r\n                                                 >\r\n                                        <tr>\r\n                                            <td [attr.colspan]="10"\r\n                                                style="color: red; font-weight: bold; text-align: center;">\r\n                                                No records found\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="summary" id="footer1">\r\n                                        <label id="footer" class="footer">Total:</label>\r\n                                        <input style="width: 5%;" [(ngModel)]="intUpload._totalRecords" name="intTotalRecords" disabled\r\n                                               pInputText type="text" />\r\n                                        &nbsp;&nbsp;\r\n                                        <label id="footer" class="footer1">Pages Count:</label>\r\n                                        <input style="width: 5%;" [ngModel]="getPageCount(intUpload._totalRecords, pageSizeNew)"\r\n                                               name="intpagecount" disabled pInputText type="text" />\r\n                                    </ng-template>\r\n\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-danger" (click)="onCloseView()">Close</button>\r\n        </div>\r\n        </div>\r\n    </div>\r\n\x3c!-- </ng-template> --\x3e\r\n</div>\r\n\r\n<div class="modal fade" id="downloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t<div class="modal-dialog modal-sm">\r\n\t\t<div class="modal-content">\r\n\t\t\t<div class="modal-header">\r\n\t\t\t\t<button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n\t\t\t\t<h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-body" *ngIf="targetData">\r\n\t\t\t\t<strong>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\tYou are attempting to export {{targetData.totalRecords}} of records. \r\n\t\t\t\t\t</span> \r\n\t\t\t\t</strong>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button type="button" class="btn btn-primary" (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):exportCSV(targetData); closeDeleteModal();">Confirm</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="closeDeleteModal()">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<ng-template #contentAuditHist\r\n             let-c="close"\r\n             let-d="dismiss"\r\n             style="width:auto"\r\n             data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">History of  Documents</h4>\r\n        <button type="button"\r\n                class="close"\r\n                aria-label="Close"\r\n                (click)="dismissModelNew()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="table-responsive">\r\n            <table class="table table-bordered">\r\n                <thead>\r\n                    <tr>\r\n                        <th> Name</th>\r\n                        <th>Description</th>\r\n                        <th>Memo</th>\r\n                        <th>File Name</th>\r\n                        <th>File Size</th>\r\n                        <th>Is Active</th>\r\n                        <th>Is Deleted</th>\r\n                        <th>Created Date</th>\r\n                        <th>Created By</th>\r\n                        <th>Updated Date</th>\r\n                        <th>Updated By</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor="let audit of sourceViewforDocumentAudit"></tr>\r\n                    <tr *ngFor="let audit of sourceViewforDocumentAudit; let i = index">\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistoryMain(i, \'docName\', audit.docName)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                            {{ audit.docName }}\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistoryMain(\r\n                  i,\r\n                  \'docDescription\',\r\n                  audit.docDescription\r\n                )\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                            {{ audit.docDescription }}\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistoryMain(i, \'docMemo\', audit.docMemo)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n              <p class="m-0 p-0" [innerHTML]="audit.docMemo"></p>\r\n                            \x3c!-- {{ audit.docMemo }} --\x3e\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistoryMain(i, \'fileName\', audit.fileName)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                            {{ audit.fileName }}\r\n                        </td>\r\n                        <td>{{ audit.fileSize }}</td>\r\n                        <td>\r\n                            <input type="checkbox" disabled [checked]="audit.isActive == true"\r\n                            style="margin: 0px auto; display: block;" />  \r\n                        </td>\r\n                        <td>\r\n                            <input type="checkbox" disabled [checked]="audit.isDeleted == true"\r\n                            style="margin: 0px auto; display: block;" />  \r\n                        </td>\r\n                        <td>{{ audit.createdDate | date: \'MM/dd/yyyy h:mm:ss a\' }}</td>\r\n                        <td>{{ audit.createdBy }}</td>\r\n                        <td>{{ audit.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\' }}</td>\r\n                        <td>{{ audit.updatedBy }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModelNew()">\r\n            Close\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n\r\n<div class="modal fade" id="capesData" role="dialog">\r\n    <div class="modal-dialog modal-xl">\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n          <h4 class="modal-title">Capes</h4>\r\n        </div>\r\n        <div class="modal-body"> \r\n            <app-asset-capes *ngIf="currentAsset && currentAsset.assetRecordId"  [isView]="true" [viewassetRecordId]="currentAsset.assetRecordId"></app-asset-capes>\r\n        </div>\r\n        <div class="modal-footer">\r\n          <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n        </div>\r\n      </div>      \r\n    </div>\r\n</div>\r\n\r\n<div id="assetInvAudit" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n  <div class="modal-dialog modal-xlg">\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title">History of Asset Inventory</h4>\r\n      </div>\r\n      <div class="modal-body">\r\n        <div class="preloader" *ngIf="isSpinnerVisibleHistory" style="    z-index: 1060;">\r\n            <div class="loading">\r\n                <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n            </div>\r\n        </div>\r\n        <div class="table-responsive assetInv-audit">\r\n          <table class="table table-bordered"  *ngIf="showhistorylist">\r\n              <ng-container *ngIf="!isIntangible">\r\n                <thead>\r\n                    <tr>\r\n                      <th rowspan="2">Entry Date <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Asset ID <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Alt Asset ID</th>\r\n                      <th rowspan="2">Asset Name <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Asset Description</th>\r\n                      <th rowspan="2">Acquisition Type <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Model Number</th>\r\n                      <th rowspan="2">Is Serialized</th>\r\n                      <th rowspan="2">Serial No <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Asset Status</th>\r\n                      <th rowspan="2">Inventory Status</th>\r\n                      <th rowspan="2">Asset Parent</th>\r\n                      <th rowspan="2">Manufacturer</th>\r\n                      <th rowspan="2">Manufactured Date</th>\r\n                      <th rowspan="2">UOM <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Expiration Date</th>\r\n                      <th rowspan="2">Asset Location</th>\r\n                      <th rowspan="2">Currency <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Unit Cost <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Installation Cost</th>\r\n                      <th rowspan="2">Freight</th>\r\n                      <th rowspan="2">Insurance</th>\r\n                      <th rowspan="2">Taxes</th>\r\n                      <th rowspan="2">Total Cost</th>\r\n                      <th rowspan="2">Asset Class</th>\r\n                      <th rowspan="2">Depreciation Method</th>\r\n                      <th rowspan="2">Residual %</th>\r\n                      \x3c!-- <th rowspan="2">Residual Value</th> --\x3e\r\n                      <th rowspan="2">Asset Life</th>\r\n                      <th rowspan="2">Depr Frequency</th>\r\n                      <th rowspan="2">Acquired GL Account</th>\r\n                      <th rowspan="2">Depr Expense GL Account</th>\r\n                      <th rowspan="2">Accum  Depr GL Account</th>\r\n                      <th rowspan="2">Sale GL Account</th>\r\n                      <th rowspan="2">Write Off GL Account</th>\r\n                      <th rowspan="2">Write Down GL Account</th>\r\n                      <th rowspan="2">Calibration Required</th>\r\n                      <th colspan="2">Calibration Frequency <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Default Vendor</th>\r\n                      <th rowspan="2">Default Cost </th>\r\n                      <th rowspan="2">Currency</th>\r\n                      <th rowspan="2">GL Account</th>\r\n                      <th colspan="6">Tolerance</th>\r\n                      <th rowspan="2">Calibration Memo</th>\r\n                      <th rowspan="2">Certification Required</th>\r\n                      <th colspan="2">Certification Frequency <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Default Vendor</th>\r\n                      <th rowspan="2">Default Cost</th>\r\n                      <th rowspan="2">Currency</th>\r\n                      <th rowspan="2">GL Account</th>\r\n                      <th rowspan="2">Certification Memo</th>\r\n                      <th rowspan="2">Inspection Required</th>\r\n                      <th colspan="2">Inspection Frequency</th>\r\n                      <th rowspan="2">Default Vendor</th>\r\n                      <th rowspan="2">Default Cost</th>\r\n                      <th rowspan="2">Currency</th>\r\n                      <th rowspan="2">GL Account</th>\r\n                      <th rowspan="2">Inspection Memo</th>\r\n                      <th rowspan="2">Verification Required</th>\r\n                      <th colspan="2">Verification Frequency <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Default Vendor</th>\r\n                      <th rowspan="2">Default Cost </th>\r\n                      <th rowspan="2">Currency</th>\r\n                      <th rowspan="2">GL Account</th>\r\n                      <th rowspan="2">Verification Memo</th>\r\n                      <th rowspan="2">Maintenance Required</th>\r\n                      <th colspan="2">Maintenance Frequency <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Default Vendor</th>\r\n                      <th rowspan="2">GL Account</th>\r\n                      <th rowspan="2">Maintenance Memo</th>\r\n                      <th rowspan="2">Warranty Required</th>\r\n                      <th rowspan="2">Warranty Company</th>\r\n                      <th rowspan="2">Warranty Vendor Name</th>\r\n                      <th rowspan="2">Warranty GL Account</th>\r\n                      <th rowspan="2">Warranty Start Date</th>\r\n                      <th rowspan="2">Warranty End Date</th>\r\n                      <th rowspan="2">Warranty Status</th>\r\n                      <th rowspan="2">Warranty Memo</th>\r\n                      <th colspan="4" rowspan="2">Management Structure <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Memo</th>\r\n                      <th rowspan="2">Is Active</th>\r\n                      <th rowspan="2">Is Deleted</th>\r\n                      <th rowspan="2">Created Date</th>\r\n                      <th rowspan="2">Created By</th>\r\n                      <th rowspan="2">Updated Date</th>\r\n                      <th rowspan="2">Updated By</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Months</th>\r\n                      <th>Days</th>\r\n                      <th colspan="2">Min</th>\r\n                      <th colspan="2">Max</th>\r\n                      <th colspan="2">Expected</th>\r\n                      <th>Months</th>\r\n                      <th>Days</th>\r\n                      <th>Months</th>\r\n                      <th>Days</th>\r\n                      <th>Months</th>\r\n                      <th>Days</th>\r\n                      <th>Months</th>\r\n                      <th>Days</th>\r\n                      \x3c!-- <th>Months</th>\r\n                      <th>Days</th> --\x3e\r\n                  </tr>\r\n                </thead>\r\n                <tbody *ngIf="auditHistory.length > 0">\r\n                <tr *ngFor="let audit of auditHistory; let i = index">\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'entryDate\', audit.entryDate) ? \'black\' : \'red\'}">{{ audit.entryDate | date: \'MM/dd/yyyy\' }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetId\', audit.assetId) ? \'black\' : \'red\'}">{{ audit.assetId }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'alternateAssetRecordId\', audit.alternateAssetRecordId) ? \'black\' : \'red\'}">{{ audit.alternateAssetRecordId }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'name\', audit.name) ? \'black\' : \'red\'}">{{ audit.name }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'description\', audit.description) ? \'black\' : \'red\'}">{{ audit.description }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'acquisitionType\', audit.acquisitionType) ? \'black\' : \'red\'}">{{ audit.acquisitionType }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'model\', audit.model) ? \'black\' : \'red\'}">{{ audit.model }}</td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'isSerialized\', audit.isSerialized) ? \'black\' : \'red\'}">{{ audit.isSerialized }}</td> --\x3e\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.isSerialized == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td> \r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'serialNo\', audit.serialNo) ? \'black\' : \'red\'}">{{ audit.serialNo }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetStatus\', audit.assetStatus) ? \'black\' : \'red\'}">{{ audit.assetStatus }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'inventoryStaus\', audit.inventoryStaus) ? \'black\' : \'red\'}">{{ audit.inventoryStaus }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetParentRecordId\', audit.assetParentRecordId) ? \'black\' : \'red\'}">{{ audit.assetParentRecordId }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'manufacturerName\', audit.manufacturerName) ? \'black\' : \'red\'}">{{ audit.manufacturerName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'manufacturedDate\', audit.manufacturedDate) ? \'black\' : \'red\'}">{{ audit.manufacturedDate | date: \'MM/dd/yyyy\' }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'unitOfMeasureName\', audit.unitOfMeasureName) ? \'black\' : \'red\'}">{{ audit.unitOfMeasureName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'expirationDate\', audit.expirationDate) ? \'black\' : \'red\'}">{{ audit.expirationDate | date: \'MM/dd/yyyy\' }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'asset_LocationName\', audit.asset_LocationName) ? \'black\' : \'red\'}">{{ audit.asset_LocationName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'currencyName\', audit.currencyName) ? \'black\' : \'red\'}">{{ audit.currencyName }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'unitCost\', audit.unitCost) ? \'black\' : \'red\'}">{{ audit.unitCost }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'installationCost\', audit.installationCost) ? \'black\' : \'red\'}">{{ audit.installationCost }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'freight\', audit.freight) ? \'black\' : \'red\'}">{{ audit.freight }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'insurance\', audit.insurance) ? \'black\' : \'red\'}">{{ audit.insurance }}</td>\r\n                    <td class="text-right" class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'taxes\', audit.taxes) ? \'black\' : \'red\'}">{{ audit.taxes }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'totalCost\', audit.totalCost) ? \'black\' : \'red\'}">{{ audit.totalCost }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetType\', audit.assetType) ? \'black\' : \'red\'}">{{ audit.assetType }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'depreciationMethod\', audit.depreciationMethod) ? \'black\' : \'red\'}">{{ audit.depreciationMethod }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'residualPercentage\', audit.residualPercentage) ? \'black\' : \'red\'}">{{ audit.residualPercentage }}</td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'residualValue\', audit.residualValue) ? \'black\' : \'red\'}">{{ audit.residualValue }}</td> --\x3e\r\n                    <td  class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'assetLife\', audit.assetLife) ? \'black\' : \'red\'}">{{ audit.assetLife }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'depreciationFrequency\', audit.depreciationFrequency) ? \'black\' : \'red\'}">{{ audit.depreciationFrequency }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'acquiredGLAccount\', audit.acquiredGLAccount) ? \'black\' : \'red\'}">{{ audit.acquiredGLAccount }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'deprExpenseGLAccount\', audit.deprExpenseGLAccount) ? \'black\' : \'red\'}">{{ audit.deprExpenseGLAccount }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'adDepsGLAccount\', audit.adDepsGLAccount) ? \'black\' : \'red\'}">{{ audit.adDepsGLAccount }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetSale\', audit.assetSale) ? \'black\' : \'red\'}">{{ audit.assetSale }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetWriteOff\', audit.assetWriteOff) ? \'black\' : \'red\'}">{{ audit.assetWriteOff }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetWriteDown\', audit.assetWriteDown) ? \'black\' : \'red\'}">{{ audit.assetWriteDown }}</td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'calibrationRequired\', audit.calibrationRequired) ? \'black\' : \'red\'}">{{ audit.calibrationRequired }}</td> --\x3e\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.calibrationRequired == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'calibrationFrequencyMonths\', audit.calibrationFrequencyMonths) ? \'black\' : \'red\'}">{{ audit.calibrationFrequencyMonths }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'calibrationFrequencyDays\', audit.calibrationFrequencyDays) ? \'black\' : \'red\'}">{{ audit.calibrationFrequencyDays }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'calibrationDefaultVendorName\', audit.calibrationDefaultVendorName) ? \'black\' : \'red\'}">{{ audit.calibrationDefaultVendorName }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'calibrationDefaultCost\', audit.calibrationDefaultCost) ? \'black\' : \'red\'}">{{ audit.calibrationDefaultCost }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'calibrationCurrencyName\', audit.calibrationCurrencyName) ? \'black\' : \'red\'}">{{ audit.calibrationCurrencyName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'calibrationGlAccountName\', audit.calibrationGlAccountName) ? \'black\' : \'red\'}">{{ audit.calibrationGlAccountName }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'assetCalibrationMin\', audit.assetCalibrationMin) ? \'black\' : \'red\'}">{{ audit.assetCalibrationMin }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'assetCalibrationMinTolerance\', audit.assetCalibrationMinTolerance) ? \'black\' : \'red\'}">{{ audit.assetCalibrationMinTolerance }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'assetCalibratonMax\', audit.assetCalibratonMax) ? \'black\' : \'red\'}">{{ audit.assetCalibratonMax }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'assetCalibrationMaxTolerance\', audit.assetCalibrationMaxTolerance) ? \'black\' : \'red\'}">{{ audit.assetCalibrationMaxTolerance }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'assetCalibrationExpected\', audit.assetCalibrationExpected) ? \'black\' : \'red\'}">{{ audit.assetCalibrationExpected }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'assetCalibrationExpectedTolerance\', audit.assetCalibrationExpectedTolerance) ? \'black\' : \'red\'}">{{ audit.assetCalibrationExpectedTolerance }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'calibrationMemo\', audit.calibrationMemo) ? \'black\' : \'red\'}">\r\n                        <p class="p_editor" [innerHTML]="audit.calibrationMemo"></p>\r\n                    </td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'certificationRequired\', audit.certificationRequired) ? \'black\' : \'red\'}">{{ audit.certificationRequired }}</td> --\x3e\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.certificationRequired == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'certificationFrequencyMonths\', audit.certificationFrequencyMonths) ? \'black\' : \'red\'}">{{ audit.certificationFrequencyMonths }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'certificationFrequencyDays\', audit.certificationFrequencyDays) ? \'black\' : \'red\'}">{{ audit.certificationFrequencyDays }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'certificationDefaultVendorName\', audit.certificationDefaultVendorName) ? \'black\' : \'red\'}">{{ audit.certificationDefaultVendorName }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'certificationDefaultCost\', audit.certificationDefaultCost) ? \'black\' : \'red\'}">{{ audit.certificationDefaultCost }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'certificationCurrencyName\', audit.certificationCurrencyName) ? \'black\' : \'red\'}">{{ audit.certificationCurrencyName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'certificationGlAccountName\', audit.certificationGlAccountName) ? \'black\' : \'red\'}">{{ audit.certificationGlAccountName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'certificationMemo\', audit.certificationMemo) ? \'black\' : \'red\'}">\r\n                        <p class="p_editor" [innerHTML]="audit.certificationMemo"></p>\r\n                    </td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionRequired\', audit.inspectionRequired) ? \'black\' : \'red\'}">{{ audit.inspectionRequired }}</td> --\x3e\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.inspectionRequired == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionFrequencyMonths\', audit.inspectionFrequencyMonths) ? \'black\' : \'red\'}">{{ audit.inspectionFrequencyMonths }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionFrequencyDays\', audit.inspectionFrequencyDays) ? \'black\' : \'red\'}">{{ audit.inspectionFrequencyDays }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionDefaultVendorName\', audit.inspectionDefaultVendorName) ? \'black\' : \'red\'}">{{ audit.inspectionDefaultVendorName }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionDefaultCost\', audit.inspectionDefaultCost) ? \'black\' : \'red\'}">{{ audit.inspectionDefaultCost }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionCurrencyName\', audit.inspectionCurrencyName) ? \'black\' : \'red\'}">{{ audit.inspectionCurrencyName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionGlaAccountName\', audit.inspectionGlaAccountName) ? \'black\' : \'red\'}">{{ audit.inspectionGlaAccountName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionMemo\', audit.inspectionMemo) ? \'black\' : \'red\'}">\r\n                        <p class="p_editor" [innerHTML]="audit.inspectionMemo"></p>\r\n                    </td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'verificationRequired\', audit.verificationRequired) ? \'black\' : \'red\'}">{{ audit.verificationRequired }}</td> --\x3e\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.verificationRequired == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'verificationFrequencyMonths\', audit.verificationFrequencyMonths) ? \'black\' : \'red\'}">{{ audit.verificationFrequencyMonths }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'verificationFrequencyDays\', audit.verificationFrequencyDays) ? \'black\' : \'red\'}">{{ audit.verificationFrequencyDays }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'verificationDefaultVendorName\', audit.verificationDefaultVendorName) ? \'black\' : \'red\'}">{{ audit.verificationDefaultVendorName }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'verificationDefaultCost\', audit.verificationDefaultCost) ? \'black\' : \'red\'}">{{ audit.verificationDefaultCost }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'verificationCurrencyName\', audit.verificationCurrencyName) ? \'black\' : \'red\'}">{{ audit.verificationCurrencyName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'verificationGlAccountName\', audit.verificationGlAccountName) ? \'black\' : \'red\'}">{{ audit.verificationGlAccountName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'verificationMemo\', audit.verificationMemo) ? \'black\' : \'red\'}">\r\n                        <p class="p_editor" [innerHTML]="audit.verificationMemo"></p>\r\n                    </td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetIsMaintenanceReqd\', audit.assetIsMaintenanceReqd) ? \'black\' : \'red\'}">{{ audit.assetIsMaintenanceReqd }}</td> --\x3e\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.assetIsMaintenanceReqd == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'maintenanceFrequencyMonths\', audit.maintenanceFrequencyMonths) ? \'black\' : \'red\'}">{{ audit.maintenanceFrequencyMonths }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'maintenanceFrequencyDays\', audit.maintenanceFrequencyDays) ? \'black\' : \'red\'}">{{ audit.maintenanceFrequencyDays }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'defaultVendorName\', audit.defaultVendorName) ? \'black\' : \'red\'}">{{ audit.defaultVendorName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'glAccountName\', audit.glAccountName) ? \'black\' : \'red\'}">{{ audit.glAccountName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'maintenanceMemo\', audit.maintenanceMemo) ? \'black\' : \'red\'}">\r\n                        <p class="p_editor" [innerHTML]="audit.maintenanceMemo"></p>\r\n                    </td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'isWarrantyRequired\', audit.isWarrantyRequired) ? \'black\' : \'red\'}">{{ audit.isWarrantyRequired }}</td> --\x3e\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.isWarrantyRequired == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td>\r\n                    \r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'warrantyCompanySelectName\', audit.warrantyCompanySelectName) ? \'black\' : \'red\'}">{{ audit.warrantyCompanySelectName }}</td> --\x3e\r\n  <td [ngStyle]="{color: getColorCodeForHistory(i, \'warrantyCompany\', audit.warrantyCompany) ? \'black\' : \'red\'}">{{ audit.warrantyCompany }}</td>\r\n                   <td [ngStyle]="{color: getColorCodeForHistory(i, \'warrantyDefaultVendorName\', audit.warrantyDefaultVendorName) ? \'black\' : \'red\'}">{{ audit.warrantyDefaultVendorName }}</td>\r\n                    \x3c!-- <ng-container *ngIf="!audit.warrantyCompanyVendorName && !audit.warrantyCompanyName"><td></td></ng-container> --\x3e\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'warrantyGlAccountName\', audit.warrantyGlAccountName) ? \'black\' : \'red\'}">{{ audit.warrantyGlAccountName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'warrantyStartDate\', audit.warrantyStartDate) ? \'black\' : \'red\'}">{{ audit.warrantyStartDate | date: \'MM/dd/yyyy\' }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'warrantyEndDate\', audit.warrantyEndDate) ? \'black\' : \'red\'}">{{ audit.warrantyEndDate | date: \'MM/dd/yyyy\' }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'warrantyStatusName\', audit.warrantyStatusName) ? \'black\' : \'red\'}">{{ audit.warrantyStatusName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'warrantyMemo\', audit.warrantyMemo) ? \'black\' : \'red\'}">\r\n                        <p class="p_editor" [innerHTML]="audit.warrantyMemo"></p>\r\n                    </td>\r\n                    <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'companyName\', audit.companyName) ? \'black\' : \'red\'}">{{ audit.companyName }}</td>\r\n                    <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'buName\', audit.buName) ? \'black\' : \'red\'}">{{ audit.buName }}</td>\r\n                    <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'divName\', audit.divName) ? \'black\' : \'red\'}">{{ audit.divName }}</td>\r\n                    <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'deptName\', audit.deptName) ? \'black\' : \'red\'}">{{ audit.deptName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'memo\', audit.memo) ? \'black\' : \'red\'}">\r\n                        <p class="p_editor" [innerHTML]="audit.memo"></p>\r\n                    </td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'isActive\', audit.isActive) ? \'black\' : \'red\'}">{{ audit.isActive }}</td> --\x3e\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.isActive == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td>\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.isDeleted == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td>\r\n                    <td>{{ audit.createdDate | date: \'MM/dd/yyyy h:mm:ss a\' }}</td>\r\n                    <td>{{ audit.createdBy }}</td>\r\n                    <td>{{ audit.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\' }}</td>\r\n                    <td>{{ audit.updatedBy }}</td>\r\n                </tr>\r\n                </tbody>\r\n              </ng-container>\r\n\r\n              <ng-container *ngIf="isIntangible">\r\n                <thead>\r\n                    <tr>\r\n                      <th rowspan="2">Entry Date <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Asset ID <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Alt Asset ID</th>\r\n                      <th rowspan="2">Asset Name <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Asset Description</th>\r\n                      <th rowspan="2">Intangible Class <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Amortization Method</th>\r\n                      <th rowspan="2">Intangible Life</th>\r\n                      <th rowspan="2">Amortization Frequency</th>\r\n                      <th rowspan="2">Intangible GL Account</th>\r\n                      <th rowspan="2">Amort Expense GL Account</th>\r\n                      <th rowspan="2">Acc Amort Depr GL Account</th>\r\n                      <th rowspan="2">Intangible Write Down GL Account</th>\r\n                      <th colspan="4" rowspan="2">Management Structure <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Memo</th>\r\n                      <th rowspan="2">Is Active</th>\r\n                      <th rowspan="2">Is Deleted</th>\r\n                      <th rowspan="2">Created Date</th>\r\n                      <th rowspan="2">Created By</th>\r\n                      <th rowspan="2">Updated Date</th>\r\n                      <th rowspan="2">Updated By</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf="auditHistory.length > 0">\r\n                    <tr *ngFor="let audit of auditHistory; let i = index">\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'entryDate\', audit.entryDate) ? \'black\' : \'red\'}">{{ audit.entryDate | date: \'MM/dd/yyyy\' }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetId\', audit.assetId) ? \'black\' : \'red\'}">{{ audit.assetId }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'alternateAssetId\', audit.alternateAssetId) ? \'black\' : \'red\'}">{{ audit.alternateAssetId }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'name\', audit.name) ? \'black\' : \'red\'}">{{ audit.name }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'description\', audit.description) ? \'black\' : \'red\'}">{{ audit.description }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetIntangibleTypeName\', audit.assetIntangibleTypeName) ? \'black\' : \'red\'}">{{ audit.assetIntangibleTypeName }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'amortizationMethod\', audit.amortizationMethod) ? \'black\' : \'red\'}">{{ audit.amortizationMethod }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'intangibleLife\', audit.intangibleLife) ? \'black\' : \'red\'}">{{ audit.intangibleLife }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'amortizationFrequency\', audit.amortizationFrequency) ? \'black\' : \'red\'}">{{ audit.amortizationFrequency }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'intangibleGLAccount\', audit.intangibleGLAccount) ? \'black\' : \'red\'}">{{ audit.intangibleGLAccount }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'amortExpenseGLAccount\', audit.amortExpenseGLAccount) ? \'black\' : \'red\'}">{{ audit.amortExpenseGLAccount }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'accAmortDeprGLAccount\', audit.accAmortDeprGLAccount) ? \'black\' : \'red\'}">{{ audit.accAmortDeprGLAccount }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'intangibleWriteDownGLAccount\', audit.intangibleWriteDownGLAccount) ? \'black\' : \'red\'}">{{ audit.intangibleWriteDownGLAccount }}</td>\r\n                        <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'companyName\', audit.companyName) ? \'black\' : \'red\'}">{{ audit.companyName }}</td>\r\n                        <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'buName\', audit.buName) ? \'black\' : \'red\'}">{{ audit.buName }}</td>\r\n                        <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'divName\', audit.divName) ? \'black\' : \'red\'}">{{ audit.divName }}</td>\r\n                        <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'deptName\', audit.deptName) ? \'black\' : \'red\'}">{{ audit.deptName }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'memo\', audit.memo) ? \'black\' : \'red\'}">\r\n                            <p class="p_editor" [innerHTML]="audit.memo"></p>\r\n                        </td>\r\n                        \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'isActive\', audit.isActive) ? \'black\' : \'red\'}">{{ audit.isActive }}</td> --\x3e\r\n                        <td >\r\n                            <input type="checkbox" disabled [checked]="audit.isActive == true"\r\n                                   style="margin: 0px auto; display: block;" />\r\n                        </td>\r\n                        <td >\r\n                            <input type="checkbox" disabled [checked]="audit.isDeleted == true"\r\n                                   style="margin: 0px auto; display: block;" />\r\n                        </td>\r\n                        <td>{{ audit.createdDate | date: \'MM/dd/yyyy h:mm:ss a\' }}</td>\r\n                        <td>{{ audit.createdBy }}</td>\r\n                        <td>{{ audit.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\' }}</td>\r\n                        <td>{{ audit.updatedBy }}</td>\r\n                    </tr>\r\n                    </tbody>\r\n              </ng-container>\r\n            \r\n          </table>\r\n          <ng-template *ngIf="!showhistorylist">\r\n            <div class="text-center">\r\n                <div class="text-center">\r\n                    <img src="../../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                    <h4 style="color: #ff5663;">No History Found </h4>\r\n                </div>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal">\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Asset Name:\r\n            <span class="new-label">{{restorerecord.name}}</span>\r\n        </strong>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible" style="    z-index: 1060;">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>\r\n\r\n\r\n'},GCBe:function(t,e,n){"use strict";n.r(e),e.default=""},JaF0:function(t,e,n){"use strict";n.r(e),e.default='\r\n\r\n\x3c!-- <div class="x_content"> --\x3e\r\n    \x3c!-- <div class="card">\r\n        <div class="card-header">\r\n            <nav aria-label="breadcrumb">\r\n                <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n                    <li class="breadcrumb-item active" aria-current="page">{{isEditMode ? \'Edit\' : \'Create\'}} Asset Inventory</li>\r\n                </ol>\r\n            </nav>\r\n        </div> --\x3e\r\n        <div class="x_content">\r\n               \r\n            \x3c!-- <nav aria-label="breadcrumb">\r\n                <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n                    <li class="breadcrumb-item active" aria-current="page">Asset Inventory</li>\r\n                    <li class="breadcrumb-item" aria-current="page">{{isEditMode ? \'Edit\' : \'Create\'}} Asset Inventory</li>\r\n                </ol>\r\n            </nav> --\x3e\r\n            <p-breadcrumb [model]="breadcrumbs" [home]="home"></p-breadcrumb>\r\n    <div class="card new-card">\r\n    <div class="card-header bg-primary">\r\n      <div class="row">\r\n        <div class="col">\r\n          <h4 class="new-card-heading">\r\n              {{isEditMode ? \'Edit\' : \'Create\' }} Asset Inventory</h4>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type="button"\r\n            class="btn-sm new-btn-primary"\r\n            [routerLink]="[\r\n            \'/assetmodule/assetpages/app-asset-inventory-listing\'\r\n            ]"\r\n          >\r\n            Asset Inventory List\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n        <div class="card-body new-card-body" style="padding: 16px;">\r\n            <form #generalForm="ngForm">\r\n                <div class="form-row">\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            \x3c!-- <label class="radiobtn-label">Status:</label> --\x3e\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm wauto">\r\n                                    <input type="radio" name="assetRadio" class="form-control" value="1" disabled [checked]="currentAsset.isTangible">\r\n                                    <span class="checkmark"></span> Tangible\r\n                                </label>\r\n                            </div>\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm wauto">\r\n                                    <input type="radio" name="assetRadio" class="form-control" value="2" disabled [checked]="currentAsset.isIntangible">\r\n                                    <span class="checkmark"></span> Intangible\r\n                                </label>\r\n                            </div>\r\n\r\n                        </div> \r\n                    </div>\r\n            \r\n                    <div class="col-md-4" *ngIf="currentAsset.isTangible">\r\n                        <div class="form-group">\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm wauto">\r\n                                    <input type="radio" name="assetisDepreciable" class="form-control" value="1" disabled [checked]="currentAsset.isDepreciable">\r\n                                    <span class="checkmark"></span> Depreciable\r\n                                </label>\r\n                            </div>\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm wauto">\r\n                                    <input type="radio" name="assetisDepreciable" class="form-control" value="2" disabled [checked]="currentAsset.isNonDepreciable">\r\n                                    <span class="checkmark"></span> Non-Depreciable\r\n                                </label>\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n            \r\n                    <div class="col-md-4" *ngIf="currentAsset.isIntangible">\r\n                        <div class="form-group">\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm wauto">\r\n                                    <input type="radio" name="assetisAmortizable" class="form-control" value="1" disabled [checked]="currentAsset.isAmortizable">\r\n                                    <span class="checkmark"></span> Amortizable\r\n                                </label>\r\n                            </div>\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm wauto">\r\n                                    <input type="radio" name="assetisAmortizable" class="form-control" value="2" disabled [checked]="currentAsset.isNonAmortizable">\r\n                                    <span class="checkmark"></span> Non-Amortizable\r\n                                </label>\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n             \r\n                <div class="form-row m-t-10"> \r\n                    <div class="col-md-3"> \r\n                        <div class="form-group">\r\n                            <label>Inventory Num </label>\r\n                            <input type="text" class="form-control" required name="inventoryNumber" [(ngModel)]="currentAsset.inventoryNumber" disabled>\r\n                        </div>\r\n                        <div class="form-group" *ngIf="currentAsset.isIntangible">\r\n                            <label>Asset Status</label>\r\n                            <p-dropdown  [showClear]="true" class="p-dropdown-100"  (ngModelChange)="getmemo($event)"  (input)="onFilterAssetStatus($event.target.value)"  [options]="assetStatusList" filter="true" [(ngModel)]="currentAsset.assetStatusId" name="assetStatusId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                        </div>\r\n                        <div class="form-group" *ngIf="currentAsset.isIntangible">\r\n                            <label>Asset Inventory Status</label>\r\n                            <p-dropdown  [showClear]="true" class="p-dropdown-100" disabled  (ngModelChange)="getmemo($event)"  [options]="assetInventoryStatusList" filter="true" [(ngModel)]="currentAsset.inventoryStatusId" name="inventoryStatusId" [resetFilterOnHide]="true" ></p-dropdown>\r\n                        </div>\r\n                        <div class="form-group"> \r\n                            <label>Entry Date <span class="clr-red">*</span></label>\r\n                            <p-calendar [showIcon]="true" [maxDate]="currentDate" \r\n                            [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                            name="entryDate" (ngModelChange)="getmemo($event)"\r\n                             [(ngModel)]="currentAsset.entryDate" required></p-calendar>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Asset ID <span class="clr-red">*</span></label>\r\n                            <p-autoComplete field="label" class="pautocomp-cstm" (ngModelChange)="getmemo($event)" (onSelect)="onAssetIdselection($event,\'fromHtml\')"  [(ngModel)]="currentAsset.assetRecordId" name="assetRecordId" [suggestions]="assetListFilter" (completeMethod)="filterAssetList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true" required></p-autoComplete>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Alt Asset ID</label>\r\n                            <input type="text" class="form-control" name="alternateAssetId" [(ngModel)]="currentAsset.alternateAssetId" disabled>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Asset Name <span class="clr-red">*</span></label>\r\n                            <input type="text" class="form-control" name="name" [(ngModel)]="currentAsset.name" disabled required>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Asset Description</label>\r\n                            <input type="text" class="form-control" name="description" [(ngModel)]="currentAsset.description" disabled>\r\n                        </div>\r\n                        <ng-container *ngIf="currentAsset.isTangible">\r\n                            <div class="form-group">\r\n                                <label>Acquisition Type <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control" name="acquisitionType" [(ngModel)]="currentAsset.acquisitionType" disabled required>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Model Number</label>\r\n                                <input type="text" class="form-control" name="model" [(ngModel)]="currentAsset.model" disabled>\r\n                            </div>\r\n                     \r\n                            <div class="form-group">\r\n                                <label>Asset Parent</label>\r\n                                <input type="text" class="form-control" name="assetParentId" [(ngModel)]="currentAsset.assetParentId" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Manufacturer</label>\r\n                                <input type="text" class="form-control" name="manufacturerName" [(ngModel)]="currentAsset.manufacturerName" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Manufactured Date</label>\r\n                                <p-calendar [showIcon]="true" (ngModelChange)="getmemo($event)"\r\n                                [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [maxDate]="currentAsset.entryDate" name="manufacturedDate" [(ngModel)]="currentAsset.manufacturedDate" [disabled]="!currentAsset.entryDate"></p-calendar>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                    <label>\r\n                                        <input type="checkbox" name="isSerialized" [(ngModel)]="currentAsset.isSerialized" disabled>\r\n                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                        Is Serialized\r\n                                    </label>\r\n                                </div> \r\n                            </div>\r\n                            <div class="form-group" *ngIf="currentAsset.isSerialized">\r\n                                <label>Serial No <span class="clr-red">*</span></label>\r\n                                <input class="form-control" type="text" name="serialNumber" (ngModelChange)="getmemo($event)" [(ngModel)]="currentAsset.serialNo" required> \r\n                            </div>\r\n                        </ng-container>\r\n                        </div>\r\n                        <div class="col-md-3" *ngIf="currentAsset.isTangible">\r\n                            \x3c!-- <div class="form-group">\r\n                                <label>Asset Status</label>\r\n                                <select class="form-control" disabled (ngModelChange)="getmemo($event)" [(ngModel)]="currentAsset.inventoryStatusId" name="inventoryStatusId">\r\n                                    <option value="0">-- Select --</option>\r\n                                    <option *ngFor="let item of assetStatusList" [ngValue]="item.value">{{item.label}}</option>\r\n                                </select>\r\n                            </div> --\x3e\r\n                            <div class="form-group" >\r\n                                <label>Asset Status</label>\r\n                                <p-dropdown  [showClear]="true" class="p-dropdown-100"  (input)="onFilterAssetStatus($event.target.value)"  (ngModelChange)="getmemo($event)"  [options]="assetStatusList" filter="true" [(ngModel)]="currentAsset.assetStatusId" name="assetStatusId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                            </div>\r\n                            <div class="form-group" >\r\n                                <label>Asset Inventory Status</label>\r\n                                <p-dropdown  [showClear]="true" class="p-dropdown-100" disabled  (ngModelChange)="getmemo($event)"  [options]="assetInventoryStatusList" filter="true" [(ngModel)]="currentAsset.inventoryStatusId" name="inventoryStatusId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>UOM <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control" required name="unitOfMeasureName" [(ngModel)]="currentAsset.unitOfMeasureName" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Expiration Date</label>\r\n                                <p-calendar [showIcon]="true" (ngModelChange)="getmemo($event)"\r\n                                [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [minDate]="currentAsset.manufacturedDate" name="expirationDate" [(ngModel)]="currentAsset.expirationDate" [disabled]="!currentAsset.manufacturedDate"></p-calendar>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Asset Location</label>\r\n                                \x3c!-- <select class="form-control" (ngModelChange)="getmemo($event)" [(ngModel)]="currentAsset.assetLocationId" name="assetLocationId">\r\n                                    <option value="0">-- Select --</option>\r\n                                    <option *ngFor="let item of allLocationList" [ngValue]="item.assetLocationId">{{item.name}}</option>\r\n                                </select> --\x3e\r\n                                <p-dropdown  [showClear]="true" class="p-dropdown-100"  (ngModelChange)="getmemo($event)"  [options]="allLocationList" filter="true" [(ngModel)]="currentAsset.assetLocationId" name="assetLocationId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control"  required name="currencyName" [(ngModel)]="currentAsset.currencyName" disabled>\r\n                           \r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Unit Cost <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" required pKeyFilter="money" name="unitCost" [(ngModel)]="currentAsset.unitCost" (change)="onChangeUnitCost(); getTotalCost();">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Installation Cost</label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" pKeyFilter="money" name="installationCost" [(ngModel)]="currentAsset.installationCost"  (change)="onChangeInstallCost(); getTotalCost();">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Freight</label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" pKeyFilter="money" name="freight" [(ngModel)]="currentAsset.freight" (change)="onChangeFreight(); getTotalCost();">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Insurance</label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" pKeyFilter="money" name="insurance" [(ngModel)]="currentAsset.insurance" (change)="onChangeInsurance(); getTotalCost();">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Taxes</label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" pKeyFilter="money" name="taxes" [(ngModel)]="currentAsset.taxes" (change)="onChangeTaxes(); getTotalCost();">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Total Cost</label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" name="totalCost" [(ngModel)]="currentAsset.totalCost" disabled>\r\n                            </div>\r\n                        \x3c!-- </ng-container> --\x3e\r\n                        <div class="form-group">\r\n                            <a style="color:#3498db" (click)="openCapes()"  data-toggle="modal" data-target="#capesData">\r\n                                <u>Link to Capes</u>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="col-md-3">\r\n                        <ng-container *ngIf="currentAsset.isTangible">\r\n                            \x3c!-- <div class="form-group">\r\n                                <a style="color:#3498db" (click)="openCapes()" data-toggle="modal" data-target="#capesData">\r\n                                    <u>Link to Capes</u>\r\n                                </a>\r\n                            </div> --\x3e\r\n                            <div class="form-group">\r\n                                <label>Asset Class/Attribute <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control" name="assetTypeName" required [(ngModel)]="currentAsset.assetType" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Depreciation Method</label>\r\n                                <input type="text" class="form-control" name="depreciationMethod" [(ngModel)]="currentAsset.depreciationMethod" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Residual %</label>\r\n                                <input type="text" class="form-control" name="residualPercentage" [(ngModel)]="currentAsset.residualPercentage" disabled style="text-align: end !important;">\r\n                            </div>\r\n                            \x3c!-- <div class="form-group">\r\n                                <label>Residual Value</label>\r\n                                <input type="text" class="form-control" name="residualValue"  [(ngModel)]="currentAsset.residualValue" disabled>\r\n                            </div> --\x3e\r\n                            <div class="form-group">\r\n                                <label>Asset Life</label>\r\n                                <input type="number" class="form-control" (ngModelChange)="getmemo($event)" name="assetLife" [(ngModel)]="currentAsset.assetLife">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Depr Frequency</label>\r\n                                <input type="text" class="form-control" name="depreciationFrequency" [(ngModel)]="currentAsset.depreciationFrequency" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Acquired GL Account</label>\r\n                                <input type="text" class="form-control" name="acquiredGLAccount" [(ngModel)]="currentAsset.acquiredGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Depr Expense GL Account</label>\r\n                                <input type="text" class="form-control" name="deprExpenseGLAccount" [(ngModel)]="currentAsset.deprExpenseGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Accum Depr GL Account</label>\r\n                                <input type="text" class="form-control" name="adDepsGLAccount" [(ngModel)]="currentAsset.adDepsGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Sale GL Account</label>\r\n                                <input type="text" class="form-control" name="assetSale" [(ngModel)]="currentAsset.assetSale" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Write Off GL Account</label>\r\n                                <input type="text" class="form-control" name="assetWriteOff" [(ngModel)]="currentAsset.assetWriteOff" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Write Down GL Account</label>\r\n                                <input type="text" class="form-control" name="assetWriteDown" [(ngModel)]="currentAsset.assetWriteDown" disabled>\r\n                            </div>\r\n                        </ng-container>\r\n                        <ng-container *ngIf="currentAsset.isIntangible">\r\n                            <div class="form-group">\r\n                                <label>Intangible Class</label>\r\n                                <input type="text" class="form-control" name="assetIntangibleTypeName" [(ngModel)]="currentAsset.assetIntangibleTypeName" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Amortization Method</label>\r\n                                <input type="text" class="form-control" name="amortizationMethod" [(ngModel)]="currentAsset.amortizationMethod" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Intangible Life</label>\r\n                                <input type="text" class="form-control" name="intangibleLife" [(ngModel)]="currentAsset.intangibleLife" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Amortization Frequency</label>\r\n                                <input type="text" class="form-control" name="amortizationFrequency" [(ngModel)]="currentAsset.amortizationFrequency" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Intangible GL Account</label>\r\n                                <input type="text" class="form-control" name="intangibleGLAccount" [(ngModel)]="currentAsset.intangibleGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Amort Expense GL Account</label>\r\n                                <input type="text" class="form-control" name="amortExpenseGLAccount" [(ngModel)]="currentAsset.amortExpenseGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Acc Amort Depr GL Account</label>\r\n                                <input type="text" class="form-control" name="accAmortDeprGLAccount" [(ngModel)]="currentAsset.accAmortDeprGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Intangible Write Down GL Account</label>\r\n                                <input type="text" class="form-control" name="intangibleWriteDownGLAccount" [(ngModel)]="currentAsset.intangibleWriteDownGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Intangible Write Off GL Account</label>\r\n                                <input type="text" class="form-control" name="intangibleWriteGLAccount" [(ngModel)]="currentAsset.intangibleWriteOffGLAccount" disabled>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div class="col-md-3">\r\n                        <div class="card card-stock" style="margin-top: 0;">\r\n                            <div class="card-header">\r\n                                <h5>Management Structure <span class="clr-red">*</span></h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="col-md-12">\r\n                                    <div class="form-group">\r\n                                        \x3c!-- <select class="form-control" name="company" (ngModelChange)="getmemo($event)" [(ngModel)]="managementStructure.companyId" \r\n                                        (change)="selectedLegalEntity(managementStructure.companyId);" #companyName="ngModel" required>\r\n                                            <option value="0">Select Legal Entity</option>\r\n                                            <option *ngFor="let name of legalEntityList" [ngValue]="name.value">{{name.label}}</option>\r\n                                        </select> --\x3e\r\n                                        <p-dropdown  [showClear]="true" class="p-dropdown-100"  (onChange)="selectedLegalEntity(managementStructure.companyId)" required  (ngModelChange)="getmemo($event)"  [options]="legalEntityList" filter="true" [(ngModel)]="managementStructure.companyId" name="company"   placeholder="Select" ></p-dropdown>\r\n                                        \x3c!-- <div *ngIf="companyName.invalid && (companyName.dirty || companyName.touched)" class="alert alert-danger alert-danger-cstm">\r\n                                                <div *ngIf="companyName.errors.required">\r\n                                                    <small> Legal Entity Name is required </small>\r\n                                                </div>\r\n                                        </div>         --\x3e\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        \x3c!-- <select class="form-control" (ngModelChange)="getmemo($event)" [(ngModel)]="managementStructure.buId" name="buId" (change)="selectedBusinessUnit(managementStructure.buId)">\r\n                                            <option value="0">-- Select --</option>\r\n                                            <option *ngFor="let name of businessUnitList" [ngValue]="name.value">{{name.label}}</option>\r\n                                        </select> --\x3e\r\n                                        <p-dropdown  [showClear]="true" class="p-dropdown-100" (onChange)="selectedBusinessUnit(managementStructure.buId)"  (ngModelChange)="getmemo($event)"  [options]="businessUnitList" filter="true" [(ngModel)]="managementStructure.buId" name="buId"  placeholder="Select" ></p-dropdown>\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        \x3c!-- <select class="form-control" (ngModelChange)="getmemo($event)" [(ngModel)]="managementStructure.divisionId" name="divisionId" (change)="selectedDivision(managementStructure.divisionId)">\r\n                                            <option value="0">-- Select --</option>\r\n                                            <option *ngFor="let name of divisionList" [ngValue]="name.value">{{name.label}}</option>\r\n                                        </select> --\x3e\r\n                                        <p-dropdown  [showClear]="true" class="p-dropdown-100"  (onChange)="selectedDivision(managementStructure.divisionId)" (ngModelChange)="getmemo($event)"  [options]="divisionList" filter="true" [(ngModel)]="managementStructure.divisionId" name="divisionId"  placeholder="Select" ></p-dropdown>\r\n   \r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        \x3c!-- <select class="form-control" (ngModelChange)="getmemo($event)" [(ngModel)]="managementStructure.departmentId" name="departmentId" (change)="selectedDepartment(managementStructure.departmentId)">\r\n                                            <option value="0">-- Select --</option>\r\n                                            <option *ngFor="let name of departmentList" [ngValue]="name.value">{{name.label}}</option>\r\n                                        </select> --\x3e\r\n                                        <p-dropdown  [showClear]="true" class="p-dropdown-100"  (onChange)="selectedDepartment(managementStructure.departmentId)"   (ngModelChange)="getmemo($event)"  [options]="departmentList" filter="true" [(ngModel)]="managementStructure.departmentId"  name="departmentId"  placeholder="Select" ></p-dropdown>\r\n                                          \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group memo-popup-cstm">\r\n                            \x3c!-- <label>Memo <i class="fa fa-pencil contoel_v" (ngModelChange)="getmemo($event)" data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddMemo(\'Memo\')"></i></label>\r\n                            <span>\r\n                                <div [innerHTML]="currentAsset.memo" matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.memo)" class="form-control" class="p_editor_box"></div></span> --\x3e\r\n                                <label>Memo</label>\r\n                                <div class="align_adh">\r\n                                    <div [innerHTML]="currentAsset.memo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.memo)"\r\n                                        class="p_editor_box" style="width: 100% !important;"></div>\r\n                                    <i class="fa fa-pencil contoel_v"\r\n                                        (ngModelChange)="getmemo($event)"\r\n                                        data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Memo"\r\n                                        (click)="onAddMemo(\'Memo\')"></i>\r\n                                </div>\r\n                      \r\n                      \r\n                            </div>\r\n                        \x3c!-- <div  *ngIf="currentAsset.isTangible">\r\n                            <div>\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="calibrationRequired" [(ngModel)]="currentAsset.calibrationRequired" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Calibration Required\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>                        \r\n    \r\n                            <div>\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="certificationRequired" [(ngModel)]="currentAsset.certificationRequired" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Certification Required\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <div >\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="inspectionRequired" [(ngModel)]="currentAsset.inspectionRequired" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Inspection Required\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>                        \r\n    \r\n                            <div>\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="verificationRequired" [(ngModel)]="currentAsset.verificationRequired" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Verification Required\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>                        \r\n                        </div> --\x3e\r\n                    </div> \r\n                </div>\r\n\x3c!-- // calibration  , certification , inspection , verification --\x3e\r\n\r\n<div class="form-row m-t-10" *ngIf="currentAsset.isTangible">\r\n        <div class="col-md-3" [ngClass]="(currentAsset.calibrationRequired) ? \'border-box-cstm\' : \'\'" *ngIf="currentAsset.calibrationRequired" style="margin-top: 4px;">\r\n            <div class="form-group">\r\n                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                    <label>\r\n                        <input type="checkbox" name="calibrationRequired" [(ngModel)]="currentAsset.calibrationRequired" disabled>\r\n                        <span class="cr"><i class="cr-icon pi pi-check"> </i></span>\r\n                      <span class="font_adjust1">  Calibration Required</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf="currentAsset.calibrationRequired">\r\n                <div class="form-group">\r\n                    <label>Calibration Frequency <span class="clr-red">*</span></label>\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Months</label>\r\n                                <input type="number" class="form-control" name="calibrationFrequencyMonths" [(ngModel)]="currentAsset.calibrationFrequencyMonths" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Days</label>\r\n                                <input type="number" class="form-control" name="calibrationFrequencyDays" [(ngModel)]="currentAsset.calibrationFrequencyDays" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>Default Vendor</label>\r\n                    <p-autoComplete field="label" class="pautocomp-cstm" (ngModelChange)="getmemo($event)"  [(ngModel)]="currentAsset.calibrationDefaultVendorId" name="calibrationDefaultVendorId" [suggestions]="vendorListFilter" (completeMethod)="filterVendorList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"></p-autoComplete>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Default Cost</label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" pKeyFilter="money" name="calibrationDefaultCost" [(ngModel)]="currentAsset.calibrationDefaultCost" (change)="onChangeCalDefaultCost()">\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red" *ngIf="currentAsset.calibrationDefaultCost !=0">*</span></label>\r\n                                <p-dropdown  [showClear]="true" [required]="currentAsset.calibrationDefaultCost !=0" class="p-dropdown-100"  (input)="onFilterAssetCurrency($event.target.value)" (ngModelChange)="getmemo($event)"  [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentAsset.calibrationCurrencyId" name="calibrationCurrencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>GL Account <span class="clr-red">*</span></label>\r\n                    <input type="text" class="form-control" (ngModelChange)="getmemo($event)" name="calibrationGlAccountName" [(ngModel)]="currentAsset.calibrationGlAccountName" disabled>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                    <label>Memo</label>\r\n                    <div class="align_adh">\r\n                        <div [innerHTML]="currentAsset.calibrationMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.calibrationMemo)"\r\n                            class="p_editor_box" style="width: 100% !important;"></div>\r\n                        <i class="fa fa-pencil contoel_v"\r\n                            data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above"  matTooltip="Add Calibration Memo" (click)="onAddMemo(\'Calibration Memo\')"></i>\r\n                    </div>\r\n                </div>\r\n                <div class="card card-stock card-tolerance">\r\n                    <div class="card-header">\r\n                        <h5>Tolerance</h5>\r\n                    </div>\r\n                    <div class="card-body">\r\n                        <div class="form-row">\r\n                            <label style="width: 100%; margin-left: 6px;">Min</label>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">                                                \r\n                                    <input type="number" class="form-control" name="assetCalibrationMin" [(ngModel)]="currentAsset.assetCalibrationMin" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibrationMinTolerance" [(ngModel)]="currentAsset.assetCalibrationMinTolerance" disabled>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-row">\r\n                            <label style="width: 100%; margin-left: 6px;">Max</label>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibratonMax" [(ngModel)]="currentAsset.assetCalibratonMax" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibrationMaxTolerance" [(ngModel)]="currentAsset.assetCalibrationMaxTolerance" disabled>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-row">\r\n                            <label style="width: 100%; margin-left: 6px;">Expected</label>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibrationExpected" [(ngModel)]="currentAsset.assetCalibrationExpected" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibrationExpectedTolerance" [(ngModel)]="currentAsset.assetCalibrationExpectedTolerance" disabled>\r\n                                </div>\r\n                            </div>\r\n                        </div>  \r\n                        <div class="form-group memo-popup-cstm">\r\n                            \x3c!-- <label>Memo <i class="fa fa-info-circle fa-lg" data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Tolerance Memo" (click)="onAddMemo(\'Calibration Memo\')"></i></label>\r\n                            <span>\r\n                                <div [innerHTML]="currentAsset.assetCalibrationMemo" class="form-control" class="p_editor_box"></div>\r\n                            </span> --\x3e\r\n                            <label>Memo</label>\r\n                            <div class="align_adh">\r\n                                <div [innerHTML]="currentAsset.assetCalibrationMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.assetCalibrationMemo)"\r\n                                    class="p_editor_box" style="width: 100% !important;"></div>\r\n                                <i class="fa fa-pencil contoel_v"\r\n                                    data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above"  matTooltip="Add Tolerance Memo" (click)="onAddMemo(\'Tolerance Memo\')"></i>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>                                  \r\n                    </div>\r\n                </div>\r\n               \r\n            </ng-container>\r\n        </div>                        \r\n\r\n        <div class="col-md-3" [ngClass]="(currentAsset.certificationRequired) ? \'border-box-cstm m-t-5\' : \'\'" *ngIf="currentAsset.certificationRequired">\r\n            <div class="form-group">\r\n                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                    <label>\r\n                        <input type="checkbox" name="certificationRequired" [(ngModel)]="currentAsset.certificationRequired" disabled>\r\n                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                        <span class="font_adjust1">  Certification Required</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf="currentAsset.certificationRequired">\r\n                <div class="form-group">\r\n                    <label>Certification Frequency <span class="clr-red">*</span></label>\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Months</label>\r\n                                <input type="number" class="form-control" name="certificationFrequencyMonths" [(ngModel)]="currentAsset.certificationFrequencyMonths" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Days</label>\r\n                                <input type="number" class="form-control" name="certificationFrequencyDays" [(ngModel)]="currentAsset.certificationFrequencyDays" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>Default Vendor</label>\r\n                    <p-autoComplete field="label" class="pautocomp-cstm"  (ngModelChange)="getmemo($event)" [(ngModel)]="currentAsset.certificationDefaultVendorId" name="certificationDefaultVendorId" [suggestions]="vendorListFilter" (completeMethod)="filterVendorList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"></p-autoComplete>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Default Cost</label>\r\n                                <input type="text" (ngModelChange)="getmemo($event)" class="form-control text-right" pKeyFilter="money" name="certificationDefaultCost" [(ngModel)]="currentAsset.certificationDefaultCost" (change)="onChangeCertDefaultCost()">\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red" *ngIf="currentAsset.certificationDefaultCost !=0">*</span></label>\r\n                                <p-dropdown  [showClear]="true" [required]="currentAsset.certificationDefaultCost !=0" class="p-dropdown-100"  (input)="onFilterAssetCurrency($event.target.value)" (ngModelChange)="getmemo($event)"  [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentAsset.certificationCurrencyId" name="certificationCurrencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>GL Account <span class="clr-red">*</span></label>\r\n                    <input type="text" class="form-control" name="certificationGlAccountName" [(ngModel)]="currentAsset.certificationGlAccountName" disabled>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                  \r\n\r\n                    <label>Certification Memo</label>\r\n                    <div class="align_adh">\r\n                        <div [innerHTML]="currentAsset.certificationMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.certificationMemo)"\r\n                            class="p_editor_box" style="width: 100% !important;"></div>\r\n                        <i class="fa fa-pencil contoel_v"\r\n                            data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above"  matTooltip="Add Certification Memo" (click)="onAddMemo(\'Certification Memo\')"></i>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n\r\n        <div  class="col-md-3" [ngClass]="(currentAsset.inspectionRequired) ? \'border-box-cstm m-t-5\' : \'\'" *ngIf="currentAsset.inspectionRequired">\r\n            <div class="form-group">\r\n                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                    <label>\r\n                        <input type="checkbox" name="inspectionRequired" [(ngModel)]="currentAsset.inspectionRequired" disabled>\r\n                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                        <span class="font_adjust1"> Inspection Required</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf="currentAsset.inspectionRequired">\r\n                <div class="form-group">\r\n                    <label>Inspection Frequency <span class="clr-red">*</span></label>\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Months</label>\r\n                                <input type="number" class="form-control" name="inspectionFrequencyMonths" [(ngModel)]="currentAsset.inspectionFrequencyMonths" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Days</label>\r\n                                <input type="number" class="form-control" name="inspectionFrequencyDays" [(ngModel)]="currentAsset.inspectionFrequencyDays" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>Default Vendor</label>\r\n                    <p-autoComplete field="label" (ngModelChange)="getmemo($event)" class="pautocomp-cstm" [(ngModel)]="currentAsset.inspectionDefaultVendorId" name="inspectionDefaultVendorId" [suggestions]="vendorListFilter" (completeMethod)="filterVendorList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"></p-autoComplete>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Default Cost</label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" pKeyFilter="money" name="inspectionDefaultCost" [(ngModel)]="currentAsset.inspectionDefaultCost" (change)="onChangeInspDefaultCost()">\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red" *ngIf="currentAsset.inspectionDefaultCost !=0">*</span></label>\r\n\r\n                                <p-dropdown [required]="currentAsset.inspectionDefaultCost !=0" [showClear]="true" class="p-dropdown-100"  (input)="onFilterAssetCurrency($event.target.value)" (ngModelChange)="getmemo($event)"  [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentAsset.inspectionCurrencyId" name="inspectionCurrencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>GL Account <span class="clr-red">*</span></label>\r\n                    <input type="text" class="form-control" name="inspectionGlaAccountName" [(ngModel)]="currentAsset.inspectionGlaAccountName" disabled>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                    \x3c!-- <label>Inspection Memo <i class="fa fa-info-circle fa-lg" data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Inspection Memo" (click)="onAddMemo(\'Inspection Memo\')"></i></label>\r\n                    <span>\r\n                        <div [innerHTML]="currentAsset.inspectionMemo" class="form-control" class="p_editor_box"></div>\r\n                    </span> --\x3e\r\n\r\n                    <label>Inspection Memo </label>\r\n                    <div class="align_adh">\r\n                        <div [innerHTML]="currentAsset.inspectionMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.inspectionMemo)"\r\n                            class="p_editor_box" style="width: 100% !important;"></div>\r\n                        <i class="fa fa-pencil contoel_v"\r\n                            data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above"  matTooltip="Add Inspection Memo" (click)="onAddMemo(\'Inspection Memo\')"></i>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>                        \r\n\r\n        <div class="col-md-3" [ngClass]="(currentAsset.verificationRequired) ? \'border-box-cstm m-t-5\' : \'\'" *ngIf="currentAsset.verificationRequired">\r\n            <div class="form-group">\r\n                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                    <label>\r\n                        <input type="checkbox" name="verificationRequired" [(ngModel)]="currentAsset.verificationRequired" disabled>\r\n                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                        <span class="font_adjust1"> Verification Required</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf="currentAsset.verificationRequired">\r\n                <div class="form-group">\r\n                    <label>Verification Frequency <span class="clr-red">*</span></label>\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Months</label>\r\n                                <input type="number" class="form-control" name="verificationFrequencyMonths" [(ngModel)]="currentAsset.verificationFrequencyMonths" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Days</label>\r\n                                <input type="number" class="form-control" name="verificationFrequencyDays" [(ngModel)]="currentAsset.verificationFrequencyDays" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>Default Vendor</label>\r\n                    <p-autoComplete field="label"  class="pautocomp-cstm" (ngModelChange)="getmemo($event)" [(ngModel)]="currentAsset.verificationDefaultVendorId" name="verificationDefaultVendorId" [suggestions]="vendorListFilter" (completeMethod)="filterVendorList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"></p-autoComplete>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Default Cost</label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" pKeyFilter="money" name="verificationDefaultCost" [(ngModel)]="currentAsset.verificationDefaultCost" (change)="onChangeVerDefaultCost()">\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red" *ngIf="currentAsset.verificationDefaultCost !=0">*</span></label>\r\n                                \r\n                                <p-dropdown [required]="currentAsset.verificationDefaultCost !=0" [showClear]="true" class="p-dropdown-100"  (input)="onFilterAssetCurrency($event.target.value)" (ngModelChange)="getmemo($event)"  [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentAsset.verificationCurrencyId" name="verificationCurrencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>GL Account <span class="clr-red">*</span></label>\r\n                    <input type="text" class="form-control" name="verificationGlAccountName" [(ngModel)]="currentAsset.verificationGlAccountName" disabled>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                    \x3c!-- <label>Verification Memo <i class="fa fa-info-circle fa-lg" data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Verification Memo" (click)="onAddMemo(\'Verification Memo\')"></i></label>\r\n                    <span>\r\n                        <div [innerHTML]="currentAsset.verificationMemo" class="form-control" class="p_editor_box"></div>\r\n                    </span> --\x3e\r\n                    <label>Verification Memo </label>\r\n                    <div class="align_adh">\r\n                        <div [innerHTML]="currentAsset.verificationMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.verificationMemo)"\r\n                            class="p_editor_box" style="width: 100% !important;"></div>\r\n                        <i class="fa fa-pencil contoel_v"\r\n                            data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above"  matTooltip="Add Verification Memo" (click)="onAddMemo(\'Verification Memo\')"></i>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>      \r\n</div>\r\n                <div class="form-row inad" *ngIf="currentAsset.isTangible">\r\n                    <div class="col-md-6 col-md-6-cstm22" [ngClass]="(currentAsset.assetIsMaintenanceReqd) ? \'border-box-cstm m-t-5\' : \'\'">\r\n                        <div class="form-row">\r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="assetIsMaintenanceReqd" [(ngModel)]="currentAsset.assetIsMaintenanceReqd" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Maintenance Required \r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <ng-container *ngIf="currentAsset.assetIsMaintenanceReqd">\r\n                                    \x3c!-- <div class="form-group"> --\x3e\r\n                                        <label>Maintenance Frequency <span class="clr-red">*</span></label>\r\n                                        <div class="form-row">\r\n                                            <div class="col-md-6">\r\n                                        <div class="form-row">\r\n                                            <div class="col-md-6">\r\n                                                <div class="form-group">\r\n                                                    <label>Months</label>\r\n                                                    <input type="number" (ngModelChange)="getmemo($event)" class="form-control" name="maintenanceFrequencyMonths" [(ngModel)]="currentAsset.maintenanceFrequencyMonths">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="col-md-6">\r\n                                                <div class="form-group">\r\n                                                    <label>Days</label>\r\n                                                    <input type="number" (ngModelChange)="getmemo($event)" class="form-control" name="maintenanceFrequencyDays" [(ngModel)]="currentAsset.maintenanceFrequencyDays">\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    \x3c!-- </div> --\x3e\r\n                                    <div class="form-group">\r\n                                        <label>Default Vendor</label>\r\n                                        <p-autoComplete field="label"  (ngModelChange)="getmemo($event)" class="pautocomp-cstm" [(ngModel)]="currentAsset.maintenanceDefaultVendorId" name="maintenanceDefaultVendorId" [suggestions]="vendorListFilter" (completeMethod)="filterVendorList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"></p-autoComplete>\r\n                                    </div>\r\n                                    </div>\r\n                                    <div class="col-md-6">\r\n                                    <div class="form-group">\r\n                                        <label>GL Account</label>\r\n                                        <input type="text" class="form-control" name="glAccountName" [(ngModel)]="currentAsset.glAccountName" disabled>\r\n                                    </div>\r\n                                    <div class="form-group memo-popup-cstm">\r\n                                        \x3c!-- <label>Maintenance Memo <i class="fa fa-info-circle fa-lg" (ngModelChange)="getmemo($event)" data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Maintenance Memo" (click)="onAddMemo(\'Maintenance Memo\')"></i></label>\r\n                                        <span >\r\n                                            <div [innerHTML]="currentAsset.maintenanceMemo" class="form-control" class="p_editor_box"></div>\r\n                                        </span> --\x3e\r\n                                        <label>Maintenance Memo</label>\r\n                                        <div class="align_adh">\r\n                                            <div [innerHTML]="currentAsset.maintenanceMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.maintenanceMemo)"\r\n                                                class="p_editor_box" style="width: 100% !important;"></div>\r\n                                            <i class="fa fa-pencil contoel_v"\r\n                                                data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above"  matTooltip="Add Maintenance Memo" (click)="onAddMemo(\'Maintenance Memo\')"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                                </ng-container>\r\n                            </div>\r\n                        </div> \r\n                        <div class="form-row" *ngIf="currentAsset.assetIsMaintenanceReqd" style="margin-top:84px;">\r\n                            <div class="form-group" style="margin-left: 6px;">\r\n                                <label>Documents List \r\n                                    <a class="plusicon-cstm" data-toggle="modal"\r\n                                       data-target="#addDocumentDetails" (ngModelChange)="getmemo($event)"  (click)="addDocumentDetails()" style="margin-left: 3px;">\r\n                                        <i class="fa fa-plus-circle fa-lg" \r\n                                           matTooltip="Create Documents" matTooltipPosition="above"></i>\r\n                                    </a>\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div class="w-100">\r\n                                <h6 class="panel-title alignb" style="padding-left: 6px;">Attachment Details</h6>\r\n                                <div class="checkbox-cstm setDelts" >\r\n                                    <label style="width: auto !important;margin-top: 3px;">\r\n                                     \r\n                                      <input type="checkbox" [(ngModel)]="maitananceeletedList" name="cparent1" id="cparent1"  (click)="getDeleteListByStatus($event.target.checked,1)"\r\n                                        />\r\n                                      <span class="cr"><i class="cr-icon pi pi-check"></i></span> \r\n                                    Show  Deleted List \r\n                                    </label>\r\n                                </div> \r\n                                <p-table #table4 class="rro-table-cstm lastcol-fix ptable-attach"\r\n                                         [columns]="selectedColumnsDoc"\r\n                                         [value]="sourceViewforDocumentList"\r\n                                         [paginator]="true"\r\n                                         [rows]="3"\r\n                                         [rowsPerPageOptions]="[3, 6, 9, 15]" [scrollable]="true" scrollHeight="500px">\r\n                                       \r\n                                    <ng-template pTemplate="colgroup" let-columns>\r\n                                        <colgroup>\r\n                                            <col *ngFor="let col of columns" style="width:100px" />\r\n                                        </colgroup>\r\n                                    </ng-template>\r\n                                    \x3c!-- <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" style="width: 100px;">\r\n                                                {{ col.header }}\r\n                                            </th>\r\n                                            <th style="width: 100px;">Action</th>\r\n                                        </tr>\r\n                                    </ng-template> --\x3e\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                                                [pSortableColumn]="col.field">\r\n                                                {{ col.header }}\r\n                                                <p-sortIcon [field]="col.field">\r\n                                                </p-sortIcon>\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky">Actions</th>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                                \x3c!-- *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'" --\x3e\r\n                                                <input type="text"\r\n                                                       (input)="table4.filter($event.target.value, col.field,\'contains\') "\r\n                                                      \r\n                                                       style="width:100%;" pInputText>\r\n                                                \x3c!-- <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'createdDate\'" name="createdDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableNew($event.target.value, col.field )">\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'updatedDate\'" name="updatedDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableNew($event.target.value, col.field )"> --\x3e\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky"></th>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="body"\r\n                                                 let-rowData\r\n                                                 let-columns="columns"\r\n                                                 let-rowIndex="rowIndex">\r\n                                        <tr [pSelectableRow]="rowData">\r\n                                            <ng-container *ngFor="let col of columns">\r\n                                                <td *ngIf="col.field != \'fileName\' && col.field != \'docMemo\'"\r\n                                                    class="ui-resizable-column"\r\n                                                    pReorderableRowHandle>\r\n                                                    {{\r\n                                                    col.field == \'createdDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                                        : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                                        : rowData[col.field]\r\n                                                    }}\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'fileName\'">\r\n                                                    <a class="filelink" *ngIf="rowData.isFileFromServer == true" (click)="downloadFileUpload(rowData)">\r\n                                                        {{ rowData[col.field] }}\r\n                                                    </a>\r\n                                                    <a *ngIf="rowData.isFileFromServer == false"\r\n                                                       [href]="rowData.link"\r\n                                                       download="{{rowData.fileName}}"\r\n                                                       matTooltip="Download" matTooltipPosition="above"\r\n                                                       class="filelink">\r\n                                                        {{ rowData[col.field] }}\r\n\r\n                                                    </a>\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'docMemo\'">\r\n                                                    <p class="m-0 p-0" [innerHTML]="rowData[col.field]"></p>\r\n                                                </td>\r\n                                            </ng-container>\r\n\r\n                                            <td style="width: 70px;">\r\n                                                <span data-toggle="modal" *ngIf="maitananceeletedList==false"\r\n                                                      data-target="#addDocumentDetails">\r\n                                                    <a class="btn nobg"\r\n                                                       (click)="editCustomerDocument(rowData,rowIndex)" matTooltip="Edit"\r\n                                                       matTooltipPosition="above"><i class="fa fa-pencil"></i></a>\r\n                                                </span>\r\n\r\n                                                <a *ngIf="maitananceeletedList==false" class="btn btn-danger nobg" (click)="deleteAttachmentRow(rowData, rowIndex,deleteContent)"\r\n                                                   matTooltip="Delete" matTooltipPosition="above"> \x3c!--data-target="#delete" data-toggle="modal"--\x3e\r\n                                                    <i class="fa fa-trash"></i>\r\n                                                </a>\r\n                                                <span *ngIf="maitananceeletedList==true"><a class="btn nobg postio_top" (click)="restore(restoreId,rowData,1);"  matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                                <button  [disabled]="!rowData.isFileFromServer && !isEditMode" class="btn-edit set_proper_align set_position"\r\n                                                        mat-icon-button (click)="openHistory(contentAuditHist,rowData)"\r\n                                                        matTooltip="History" matTooltipPosition="above">\r\n                                                    <i class="fa fa-history" \r\n                                                       [ngClass]="{ grayColor: !rowData.isFileFromServer && !isEditMode }"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="emptymessage"\r\n                                                 let-columns\r\n                                                 *ngIf="sourceViewforDocumentList.length == 0">\r\n                                        <tr>\r\n                                            <td [attr.colspan]="10"\r\n                                                style="color: red; font-weight: bold; text-align: left; padding-left: 30% !important;">\r\n                                                No records found\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="summary" id="footer1">\r\n                                        <label id="footer" class="footer">Total:</label>\r\n                                        <input style="width: 5%;" [(ngModel)]="table4._totalRecords" name="mainTotalRecords" disabled\r\n                                               pInputText type="text" />\r\n                                        &nbsp;&nbsp;\r\n                                        <label id="footer" class="footer1">Pages Count:</label>\r\n                                        <input style="width: 5%;" [ngModel]="getPageCount(table4._totalRecords, pageSizeNew)"\r\n                                               name="mainPageCount" disabled pInputText type="text" />\r\n                                    </ng-template>\r\n\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-6 col-md-6-cstm22" [ngClass]="(currentAsset.isWarrantyRequired) ? \'border-box-cstm m-t-5\' : \'\'">\r\n                        <div class="form-row">\r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="warrantyRequired" [(ngModel)]="currentAsset.isWarrantyRequired" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Warranty Required\r\n                                        </label>\r\n                                    </div>\r\n                                </div> \r\n                           \r\n                           \r\n                                <ng-container *ngIf="currentAsset.isWarrantyRequired">\r\n                                    <div class="form-row">\r\n                                        <div class="col-md-6">\r\n\r\n                                            <div class="form-group">\r\n                                                <label>Warranty Company</label>\r\n                                                <input type="text" class="form-control" (ngModelChange)="getmemo($event)" name="warrantyName" [(ngModel)]="currentAsset.warrantyCompany" disabled> \r\n                                                \x3c!-- <select class="form-control" [(ngModel)]="currentAsset.warrantyCompanySelectId" name="warrantyCompanySelectId">\r\n                <option value="0">-- Select --</option>\r\n                <option *ngFor="let item of warrantyCompanySelectList" [ngValue]="item.moduleId">{{item.moduleName}}</option>\r\n            </select> --\x3e\r\n                                            </div>\r\n                                            \x3c!-- <div class="form-group" *ngIf="currentAsset.warrantyCompanySelectId == 2">\r\n            <p-autoComplete field="label" class="pautocomp-cstm" [(ngModel)]="currentAsset.warrantyCompanyId" name="warrantyCompanyId" [suggestions]="vendorListFilter" (completeMethod)="filterVendorList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"></p-autoComplete>\r\n        </div> --\x3e\r\n                                            \x3c!-- <div class="form-group" *ngIf="currentAsset.warrantyCompanySelectId == 4">\r\n            <input type="text" class="form-control" name="warrantyCompanyName" [(ngModel)]="currentAsset.warrantyCompanyName">\r\n        </div> --\x3e\r\n                                            <div class="form-group">\r\n                                                <label>Default Vendor</label>\r\n                                                <p-autoComplete field="label" (ngModelChange)="getmemo($event)" class="pautocomp-cstm" [(ngModel)]="currentAsset.warrantyDefaultVendorId" name="warrantyDefaultVendorId" [suggestions]="vendorListFilter" (completeMethod)="filterVendorList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"></p-autoComplete>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>\r\n                                                    Warranty GL Account\r\n                                                    \x3c!-- <span class="clr-red">*</span> --\x3e\r\n                                                </label>\r\n                                                <input type="text" class="form-control" name="warrantyGlAccountName" [(ngModel)]="currentAsset.warrantyGlAccountName" disabled>\r\n                                            </div>\r\n\r\n                                            <div class="form-group memo-popup-cstm">\r\n                                                \x3c!-- <label>Warranty Memo <i class="fa fa-info-circle fa-lg" (ngModelChange)="getmemo($event)" data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Warranty Memo" (click)="onAddMemo(\'Warranty Memo\')"></i></label>\r\n                                                <span matTooltipPosition="above" matTooltip="Warranty Memo">\r\n                                                    <div [innerHTML]="currentAsset.warrantyMemo" class="form-control" class="p_editor_box"></div>\r\n                                                </span> --\x3e\r\n                                                <label>Warranty Memo </label>\r\n                                                <div class="align_adh">\r\n                                                    <div [innerHTML]="currentAsset.warrantyMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.warrantyMemo)"\r\n                                                        class="p_editor_box" style="width: 100% !important;"></div>\r\n                                                    <i class="fa fa-pencil contoel_v"\r\n                                                        data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above"  matTooltip="Add Warranty Memo" (click)="onAddMemo(\'Warranty Memo\')"></i>\r\n                                                </div>\r\n                                            </div>\r\n                                            </div>\r\n                                         <div class="col-md-6">\r\n                                                <div class="form-group">\r\n                                                    <label>Warranty Start Date  <span *ngIf="currentAsset.isWarrantyRequired==true" class="clr-red">*</span></label>\r\n                                                    <p-calendar [showIcon]="true" \r\n                                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [required]="currentAsset.isWarrantyRequired==true" (ngModelChange)="getmemo($event)" [minDate]="todaysDate" [maxDate]="currentAsset.warrantyEndDate" name="warrantyStartDate" [(ngModel)]="currentAsset.warrantyStartDate"></p-calendar>\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Warranty End Date  <span *ngIf="currentAsset.isWarrantyRequired==true" class="clr-red">*</span></label>\r\n                                                    <p-calendar [showIcon]="true" [required]="currentAsset.isWarrantyRequired==true" \r\n                                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" (ngModelChange)="getmemo($event)" [minDate]="currentAsset.warrantyStartDate ? currentAsset.warrantyStartDate :todaysDate" name="warrantyEndDate" [(ngModel)]="currentAsset.warrantyEndDate" (onSelect)="onChangeWarrantyEndDate()"></p-calendar>\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Warranty Status</label>\r\n                                                    <select class="form-control" [(ngModel)]="currentAsset.warrantyStatusId" name="warrantyStatusId" disabled>\r\n                                                        <option value="0">-- Select --</option>\r\n                                                        <option *ngFor="let item of allWarrantyStatusList" [ngValue]="item.value">{{item.label}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                </ng-container>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        <div class="form-row" *ngIf="currentAsset.isWarrantyRequired">\r\n                            <div class="form-group" style="margin-left: 6px;margin-top: 10px;">\r\n                                <label>\r\n                                    Documents List\r\n                                    <a class="plusicon-cstm" data-toggle="modal"\r\n                                       data-target="#addDocumentDetailsWarranty" (click)="addDocumentDetails()" style="margin-left: 3px;">\r\n                                        <i class="fa fa-plus-circle fa-lg"\r\n                                           matTooltip="Create Documents" matTooltipPosition="above"></i>\r\n                                    </a>\r\n                                </label>\r\n                            </div>\r\n                            <div class="w-100">\r\n                                <h6 class="panel-title alignb" style="padding-left: 6px;">Attachment Details</h6>\r\n                                <div class="checkbox-cstm setDelts" >\r\n                                    <label style="width: auto !important;margin-top: 3px;">\r\n                                     \r\n                                      <input type="checkbox" [(ngModel)]="warrentyDeletedList" name="cparent2" id="cparent2"  (click)="getDeleteListByStatus($event.target.checked,2)"\r\n                                        />\r\n                                      <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                    Show  Deleted List \r\n                                    </label>\r\n                                </div> \r\n                                <p-table #table5 class="rro-table-cstm lastcol-fix ptable-attach"\r\n                                         [columns]="selectedColumnsDoc"\r\n                                         [value]="sourceViewforDocumentListWarranty"\r\n                                         [paginator]="true"\r\n                                         [rows]="3"\r\n                                         [rowsPerPageOptions]="[3, 6, 9, 15]" [scrollable]="true" scrollHeight="500px">\r\n                                       \r\n                                    <ng-template pTemplate="colgroup" let-columns>\r\n                                        <colgroup>\r\n                                            <col *ngFor="let col of columns" style="width:100px" />\r\n                                        </colgroup>\r\n                                    </ng-template>\r\n                                    \x3c!-- <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" style="width: 100px;">\r\n                                                {{ col.header }}\r\n                                            </th>\r\n                                            <th style="width: 100px;">Action</th>\r\n                                        </tr>\r\n\r\n                                    </ng-template> --\x3e\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                                                [pSortableColumn]="col.field">\r\n                                                {{ col.header }}\r\n                                                <p-sortIcon [field]="col.field">\r\n                                                </p-sortIcon>\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky">Actions</th>\r\n\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                                \x3c!-- *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'" --\x3e\r\n                                                <input type="text"\r\n                                                       (input)="table5.filter($event.target.value, col.field,\'contains\') "\r\n                                                       \r\n                                                       style="width:100%;" pInputText>\r\n                                                \x3c!-- <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'createdDate\'" name="createdDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableWarranty($event.target.value, col.field )">\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'updatedDate\'" name="updatedDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableWarranty($event.target.value, col.field )"> --\x3e\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky"></th>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="body"\r\n                                                 let-rowData\r\n                                                 let-columns="columns"\r\n                                                 let-rowIndex="rowIndex">\r\n                                        <tr [pSelectableRow]="rowData">\r\n                                            <ng-container *ngFor="let col of columns">\r\n                                                <td *ngIf="col.field != \'fileName\' && col.field != \'docMemo\'"\r\n                                                    class="ui-resizable-column"\r\n                                                    pReorderableRowHandle>\r\n                                                    {{\r\n                                                    col.field == \'createdDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                                        : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                                        : rowData[col.field]\r\n                                                    }}\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'fileName\'">\r\n                                                    <a class="filelink" *ngIf="rowData.isFileFromServer == true" (click)="downloadFileUpload(rowData)">\r\n                                                        {{ rowData[col.field] }}\r\n                                                    </a>\r\n                                                    <a *ngIf="rowData.isFileFromServer == false"\r\n                                                       [href]="rowData.link"\r\n                                                       download="{{rowData.fileName}}"\r\n                                                       matTooltip="Download" matTooltipPosition="above"\r\n                                                       class="filelink">\r\n                                                        {{ rowData[col.field] }}\r\n\r\n                                                    </a>\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'docMemo\'">\r\n                                                    <p class="m-0 p-0" [innerHTML]="rowData[col.field]"></p>\r\n                                                </td>\r\n                                            </ng-container>\r\n\r\n                                            <td style="width: 70px;">\r\n                                                <span data-toggle="modal"  *ngIf="warrentyDeletedList==false"\r\n                                                      data-target="#addDocumentDetailsWarranty">\r\n                                                    <a class="btn nobg"\r\n                                                       (click)="editCustomerDocumentWarranty(rowData,rowIndex)" matTooltip="Edit"\r\n                                                       matTooltipPosition="above"><i class="fa fa-pencil"></i></a>\r\n                                                </span>\r\n\r\n                                                <a *ngIf="warrentyDeletedList==false" class="btn btn-danger nobg" (click)="deleteAttachmentRowWarranty(rowData, rowIndex,deleteContentWarranty)" matTooltip="Delete" matTooltipPosition="above">\r\n                                                    <i class="fa fa-trash"></i>\r\n                                                </a>\r\n                                                <span *ngIf="warrentyDeletedList==true"><a class="btn nobg postio_top" (click)="restore(restoreId,rowData,2);"  matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                                <button [disabled]="!rowData.isFileFromServer && !isEditMode" class="btn-edit set_proper_align set_position"\r\n                                                        mat-icon-button (click)="openHistory(contentAuditHist,rowData)"\r\n                                                        matTooltip="History" matTooltipPosition="above">\r\n                                                    <i class="fa fa-history" \r\n                                                       [ngClass]="{ grayColor: !rowData.isFileFromServer && !isEditMode }"></i>\r\n                                                </button>\r\n\r\n\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    </ng-template>\r\n                                    \x3c!-- *ngIf="sourceViewforDocumentListWarranty.length == 0" --\x3e\r\n                                    <ng-template pTemplate="emptymessage"\r\n                                                 let-columns\r\n                                                 >\r\n                                        <tr>\r\n                                            <td [attr.colspan]="10"\r\n                                            style="color: red; font-weight: bold; text-align: left; padding-left: 30% !important;">\r\n                                                No records found\r\n                                            </td>\r\n                                           \r\n                                        </tr>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="summary" id="footer1" >\r\n                                        <label id="footer" class="footer">Total:</label>\r\n                                        <input style="width: 5%;" [(ngModel)]="table5._totalRecords" name="warrTotalRecords" disabled\r\n                                               pInputText type="text" />\r\n                                        &nbsp;&nbsp;\r\n                                        <label id="footer" class="footer1">Pages Count:</label>\r\n                                        <input style="width: 5%;" [ngModel]="getPageCount(table5._totalRecords, pageSizeNew)"\r\n                                               name="warrPageCount" disabled pInputText type="text" />\r\n                                    </ng-template>\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-row" *ngIf="currentAsset.isIntangible">\r\n                    <div class="col-md-12">\r\n                        <div class="form-row">\r\n                            <div class="form-group" style="margin-left: 6px;">\r\n                                <label>Documents List \r\n                                    <a class="plusicon-cstm" data-toggle="modal"\r\n                                       data-target="#addDocumentDetailsIntangible" (ngModelChange)="getmemo($event)" (click)="addDocumentDetails()" style="margin-left: 3px;">\r\n                                        <i class="fa fa-plus-circle fa-lg"\r\n                                           matTooltip="Create Documents" matTooltipPosition="above"></i>\r\n                                    </a>\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h6 class="panel-title alignb" style="padding-left: 6px;">Attachment Details</h6>\r\n                                <div class="checkbox-cstm setDelts">\r\n                                    <label style="width: auto !important;margin-top: 3px;">\r\n                                     \r\n                                      <input type="checkbox" [(ngModel)]="intangibleDeletedList" name="cparent3" id="cparent3"  (click)="getDeleteListByStatus($event.target.checked,3)"\r\n                                        />\r\n                                      <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                    Show  Deleted List \r\n                                    </label>\r\n                                </div> \r\n                                <p-table #intUpload class="rpo-table-cstm lastcol-fix ptable-attach"\r\n                                         [columns]="selectedColumnsDoc"\r\n                                         [value]="sourceViewforDocumentListInt"\r\n                                         [paginator]="true"\r\n                                         [rows]="3"\r\n                                         [rowsPerPageOptions]="[3, 6, 9, 15]">\r\n                                     \r\n                                    \x3c!-- <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" style="width: 100px;">\r\n                                                {{ col.header }}\r\n                                            </th>\r\n                                            <th style="width: 100px;">Action</th>\r\n                                        </tr>\r\n\r\n                                    </ng-template> --\x3e\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                                                [pSortableColumn]="col.field">\r\n                                                {{ col.header }}\r\n                                                <p-sortIcon [field]="col.field">\r\n                                                </p-sortIcon>\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky">Actions</th>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                                \x3c!-- *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'" --\x3e\r\n                                                <input type="text"\r\n                                                       (input)="intUpload.filter($event.target.value, col.field,\'contains\') "\r\n                                                     \r\n                                                       style="width:100%;" pInputText>\r\n                                                \x3c!-- <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'createdDate\'" name="createdDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableInt($event.target.value, col.field )">\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'updatedDate\'" name="updatedDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableInt($event.target.value, col.field )"> --\x3e\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky"></th>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="body"\r\n                                                 let-rowData\r\n                                                 let-columns="columns"\r\n                                                 let-rowIndex="rowIndex">\r\n                                        <tr [pSelectableRow]="rowData">\r\n                                            <ng-container *ngFor="let col of columns">\r\n                                                <td *ngIf="col.field != \'fileName\' && col.field != \'docMemo\'"\r\n                                                    class="ui-resizable-column"\r\n                                                    pReorderableRowHandle>\r\n                                                    {{\r\n                                                    col.field == \'createdDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                                        : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                                        : rowData[col.field]\r\n                                                    }}\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'fileName\'">\r\n                                                    <a class="filelink" *ngIf="rowData.isFileFromServer == true" (click)="downloadFileUpload(rowData)">\r\n                                                        {{ rowData[col.field] }}\r\n                                                    </a>\r\n                                                    <a *ngIf="rowData.isFileFromServer == false"\r\n                                                       [href]="rowData.link"\r\n                                                       download="{{rowData.fileName}}"\r\n                                                       matTooltip="Download" matTooltipPosition="above"\r\n                                                       class="filelink">\r\n                                                        {{ rowData[col.field] }}\r\n\r\n                                                    </a>\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'docMemo\'">\r\n                                                    <p class="m-0 p-0" [innerHTML]="rowData[col.field]"></p>\r\n                                                </td>\r\n                                            </ng-container>\r\n\r\n                                            <td style="width: 70px;">\r\n                                                <span data-toggle="modal" *ngIf="intangibleDeletedList==false"\r\n                                                      data-target="#addDocumentDetailsIntangible">\r\n                                                    <a  class="btn nobg"\r\n                                                       (click)="editCustomerDocumentInt(rowData,rowIndex)" matTooltip="Edit"\r\n                                                       matTooltipPosition="above"><i class="fa fa-pencil"></i></a>\r\n                                                </span>\r\n\r\n                                                <a *ngIf="intangibleDeletedList==false" class="btn btn-danger nobg" (click)="deleteAttachmentRowInt(rowData, rowIndex,deleteDocInt)"\r\n                                                   matTooltip="Delete" matTooltipPosition="above"> \x3c!--data-target="#delete" data-toggle="modal"--\x3e\r\n                                                    <i class="fa fa-trash"></i>\r\n                                                </a>\r\n                                                <span *ngIf="intangibleDeletedList==true"><a class="btn nobg postio_top" (click)="restore(restoreId,rowData,3);"  matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                                <button [disabled]="!rowData.isFileFromServer && !isEditMode" class="btn-edit set_proper_align set_position"\r\n                                                        mat-icon-button (click)="openHistory(contentAuditHist,rowData)"\r\n                                                        matTooltip="History" matTooltipPosition="above">\r\n                                                    <i class="fa fa-history" \r\n                                                       [ngClass]="{ grayColor: !rowData.isFileFromServer && !isEditMode }"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="emptymessage"\r\n                                                 let-columns\r\n                                                 *ngIf="sourceViewforDocumentListInt.length == 0">\r\n                                        <tr>\r\n                                            <td [attr.colspan]="10"\r\n                                                style="color: red; font-weight: bold; text-align: center;padding-left: 30% !important;">\r\n                                                No records found\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="summary" id="footer1">\r\n                                        <label id="footer" class="footer">Total:</label>\r\n                                        <input style="width: 5%;" [(ngModel)]="intUpload._totalRecords" name="intTotalRecords" disabled\r\n                                               pInputText type="text" />\r\n                                        &nbsp;&nbsp;\r\n                                        <label id="footer" class="footer1">Pages Count:</label>\r\n                                        <input style="width: 5%;" [ngModel]="getPageCount(intUpload._totalRecords, pageSizeNew)"\r\n                                               name="intPageCount" disabled pInputText type="text" />\r\n                                    </ng-template>\r\n\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-row pull-right"> \r\n                   \r\n                    <button type="submit" class="btn btn-primary" style="margin-bottom: 20px;margin-right: 20px;" (click)="onSaveAssetInventory()" [disabled]="!generalForm.valid || disableSaveForEdit">{{isEditMode ? \'Update\' : \'Save\'}}</button>\r\n                    <button\r\n                                            \r\n                    type="submit" class="btn btn-primary pull-right submit-btn add_newAd" \r\n                    (click)="addNew()" *ngIf="isEditMode==true">\r\n                   Add New\r\n                </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    </div>\r\n\x3c!-- </div> --\x3e\r\n\r\n<div class="modal fade" id="capesData" role="dialog">\r\n    <div class="modal-dialog modal-xl">\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close"  (click)="closeCpes()" data-dismiss="modal">&times;</button>\r\n          <h4 class="modal-title">Capes </h4>\r\n        </div>\r\n        <div class="modal-body"> \r\n            <app-asset-capes  *ngIf="openCapesModel" [isView]="true" [viewassetRecordId]="assetRecordIdForCapes"></app-asset-capes>\r\n        </div>\r\n        <div class="modal-footer">\r\n          <button type="button" (click)="closeCpes()" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n        </div>\r\n      </div>      \r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade"\r\n     id="addDocumentDetails"\r\n     role="dialog"\r\n     data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button"\r\n                        class="close"\r\n                        (click)="closeMyModel(\'#addDocumentDetails\')">\r\n                    &times;\r\n                </button>\r\n                <h4 class="modal-title">Add Document Details</h4> \r\n            </div>\r\n            <form #addDocumentForm="ngForm" class="form-horizontal">\r\n                <div class="modal-body">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Name <span class="clr-red">*</span></label>\r\n                                <input class="form-control"\r\n                                       type="text"\r\n                                       name="name" (ngModelChange)="getmemoInfo($event)"\r\n                                       [(ngModel)]="documentInformation.docName"\r\n                                       required />\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Description </label>\r\n                                <textarea class="form-control"\r\n                                          name="description"  (ngModelChange)="getmemoInfo($event)"\r\n                                          [(ngModel)]="documentInformation.docDescription"\r\n                                          ></textarea>\r\n                            </div>\r\n                            \x3c!-- <div class="form-group">\r\n                                <label>Memo </label>\r\n                                <textarea class="form-control"\r\n                                          name="memo"\r\n                                          [(ngModel)]="documentInformation.docMemo"></textarea>\r\n                            </div> --\x3e\r\n                            <div class="form-group memo-popup-cstm">\r\n                                \x3c!-- <label style="float: none">Memo <i class="fa fa-info-circle fa-lg"  data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddMemo(\'Document Memo\')"></i></label>\r\n                                <span >\r\n                                    <div [innerHTML]="documentInformation.docMemo" class="form-control" class="p_editor_box"></div></span> --\x3e\r\n                                    <label>Memo</label>\r\n                                    <div class="align_adh">\r\n                                        <div [innerHTML]="documentInformation.docMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(documentInformation.docMemo)"\r\n                                            class="p_editor_box" style="width: 100% !important;"></div>\r\n                                        <i class="fa fa-pencil contoel_v"\r\n                                            (ngModelChange)="getmemo($event)"\r\n                                            data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddMemo(\'Document Memo\')"></i>\r\n                                    </div>\r\n                           \r\n                                </div>\r\n                        </div>\r\n\r\n                        <div class="col-md-12">\r\n                            <div class="form-group">\r\n                                <label style="float: none;">Attachments <span class="clr-red">*</span></label>\r\n                                <p-fileUpload #fileUploadInput\r\n                                              name="fileupload[]"\r\n                                              multiple="multiple"\r\n                                              [showCancelButton]="false"\r\n                                              [showUploadButton]="false"\r\n                                              customUpload="true"\r\n                                              (onSelect)="fileUpload($event)"\r\n                                              (onRemove)="removeFileMain($event)"></p-fileUpload>\r\n                            </div>\r\n                        </div>\r\n                        <div class="table-responsive table-overflow"\r\n                             *ngIf="isEditButton">\r\n                            <h6 class="panel-title" style="padding-left: 10px;">\r\n                                Attachment Details:\r\n                            </h6>\r\n\r\n                            <table class="table-responsive ptable-cus-pma" style="padding-left: 10px;">\r\n                                <tr>\r\n                                    <th>File Name</th>\r\n                                    <th>Download</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{{sourceViewforDocument.fileName}}</td>\r\n                                    <td style="text-align: center;">\r\n                                        <a *ngIf="sourceViewforDocument.attachmentDetailId > 0" (click)="downloadFileUpload(sourceViewforDocument)"\r\n                                           matTooltip="Download" matTooltipPosition="above"\r\n                                           class="btn nobg btn-cstm">\r\n                                            <span><i class="fa fa-download"></i></span>\r\n                                        </a>\r\n                                        <a *ngIf="sourceViewforDocument.attachmentDetailId==0"\r\n                                           [href]="sourceViewforDocument.link"\r\n                                           download="{{sourceViewforDocument.fileName}}"\r\n                                           matTooltip="Download" matTooltipPosition="above"\r\n                                           class="filelink">\r\n                                            <span><i class="fa fa-download"></i></span>\r\n\r\n                                        </a>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            </table>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button"\r\n                            *ngIf="!isEditButton"\r\n                            class="btn btn-primary pull-right submit-btn"\r\n                            style="text-align:center" (ngModelChange)="getmemo($event)"\r\n                            (click)="addDocumentInformation(\'#addDocumentDetails\',documentInformation)"\r\n                            [disabled]="!addDocumentForm.valid ||  !disableFileAttachmentSubmit">\r\n                        Add \r\n                    </button>\r\n                    <button type="button"\r\n                            *ngIf="isEditButton"\r\n                            class="btn btn-primary pull-right submit-btn"\r\n                            style="text-align:center" (ngModelChange)="getmemo($event)"\r\n                            (click)="addDocumentInformation(\'#addDocumentDetails\',documentInformation)"\r\n                            [disabled]="!addDocumentForm.valid ||  disleUpdate">\r\n                        Update \r\n                    </button>\r\n                    <button type="button"\r\n                            class="btn btn-danger"\r\n                            (click)="dismissDocumentPopupModelNew(\'#addDocumentDetails\'); closeMyModel(\'#addDocumentDetails\')">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #deleteContent\r\n             let-c="close"\r\n             let-d="dismiss"\r\n             data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button"\r\n                class="close"\r\n                aria-label="Close"\r\n                (click)="dismissModelNew()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-body">\r\n      \r\n        <div class="form-row" >\r\n            <div class="col-md-4" style="margin-right: 0px !important;">\r\n                <label class="fs12">  Document Name: </label>\r\n                <span class="new-label"> {{selectedRowForDelete.docName}}</span>\r\n            </div>\r\n            <div class="col-md-8" style="margin-right: 0px !important;">\r\n                <label class="fs12">File Name  : </label>\r\n                <span class="new-label"> {{selectedRowForDelete.fileName}}</span>\r\n\r\n            </div>\r\n            </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button"\r\n        class="btn btn-primary"\r\n                (click)="deleteItemAndCloseModelNew()">\r\n            Yes\r\n        </button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModelNew()">\r\n            No\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #contentAuditHist\r\n             let-c="close"\r\n             let-d="dismiss"\r\n             style="width:auto"\r\n             data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">History of  Documents</h4>\r\n        <button type="button"\r\n                class="close"\r\n                aria-label="Close"\r\n                (click)="dismissModelNew()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="table-responsive">\r\n            <table class="table table-bordered">\r\n                <thead>\r\n                    <tr>\r\n                        <th> Name</th>\r\n                        <th>Description</th>\r\n                        <th>Memo</th>\r\n                        <th>File Name</th>\r\n                        <th>File Size</th>\r\n                        <th>Is Active</th>\r\n                        <th>Is Deleted</th>\r\n                        <th>Created Date</th>\r\n                        <th>Created By</th>\r\n                        <th>Updated Date</th>\r\n                        <th>Updated By</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor="let audit of sourceViewforDocumentAudit"></tr>\r\n                    <tr *ngFor="let audit of sourceViewforDocumentAudit; let i = index">\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistory(i, \'docName\', audit.docName)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                            {{ audit.docName }}\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistory(\r\n                  i,\r\n                  \'docDescription\',\r\n                  audit.docDescription\r\n                )\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                            {{ audit.docDescription }}\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistory(i, \'docMemo\', audit.docMemo)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n              <p class="m-0 p-0" [innerHTML]="audit.docMemo"></p>\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistory(i, \'fileName\', audit.fileName)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                            {{ audit.fileName }}\r\n                        </td>\r\n                        <td>{{ audit.fileSize }}</td>\r\n                        <td>\r\n                            <input type="checkbox" disabled [checked]="audit.isActive == true"\r\n                            style="margin: 0px auto; display: block;" />  \r\n                        </td>\r\n                        <td>\r\n                            <input type="checkbox" disabled [checked]="audit.isDeleted == true"\r\n                            style="margin: 0px auto; display: block;" />  \r\n                        </td>\r\n                        <td>{{ audit.createdDate | date: \'MM/dd-yyyy\' }}</td>\r\n                        <td>{{ audit.createdBy }}</td>\r\n                        <td>{{ audit.updatedDate | date: \'MM/dd/yyyy\' }}</td>\r\n                        <td>{{ audit.updatedBy }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModelNew()">\r\n            Close\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n\r\n<div class="modal fade"\r\n     id="addDocumentDetailsWarranty"\r\n     role="dialog"\r\n     data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button"\r\n                        class="close"\r\n                        (click)="closeMyModel(\'#addDocumentDetailsWarranty\')">\r\n                    &times;\r\n                </button>\r\n                <h4 class="modal-title">Add Document Details</h4>\r\n            </div>\r\n            <form #addDocumentFormWarranty="ngForm" class="form-horizontal">\r\n                <div class="modal-body">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Name <span class="clr-red">*</span></label>\r\n                                <input class="form-control"\r\n                                       type="text"\r\n                                       name="name"  (ngModelChange)="getmemoInfo($event)"\r\n                                       [(ngModel)]="documentInformation.docName"\r\n                                       required />\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Description </label>\r\n                                <textarea class="form-control"  (ngModelChange)="getmemoInfo($event)"\r\n                                          name="description"\r\n                                          [(ngModel)]="documentInformation.docDescription"\r\n                                          ></textarea>\r\n                            </div>\r\n                            \x3c!-- <div class="form-group">\r\n                                <label>Memo </label>\r\n                                <textarea class="form-control"\r\n                                          name="memo"\r\n                                          [(ngModel)]="documentInformation.docMemo"></textarea>\r\n                            </div> --\x3e\r\n                            <div class="form-group memo-popup-cstm">\r\n                                \x3c!-- <label style="float: none">Memo <i class="fa fa-info-circle fa-lg" (ngModelChange)="getmemo($event)" data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddMemo(\'Document Memo\')"></i></label>\r\n                                <span >\r\n                                    <div [innerHTML]="documentInformation.docMemo" class="form-control" class="p_editor_box"></div></span> --\x3e\r\n                                    <label>Memo</label>\r\n                                    <div class="align_adh">\r\n                                        <div [innerHTML]="documentInformation.docMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(documentInformation.docMemo)"\r\n                                            class="p_editor_box" style="width: 100% !important;"></div>\r\n                                        <i class="fa fa-pencil contoel_v"\r\n                                            (ngModelChange)="getmemo($event)"\r\n                                            data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddMemo(\'Document Memo\')"></i>\r\n                                    </div>\r\n                         \r\n                                </div>\r\n                        </div>\r\n\r\n                        <div class="col-md-12">\r\n                            <div class="form-group">\r\n                                <label style="float: none;">Attachments <span class="clr-red">*</span></label>\r\n                                <p-fileUpload #fileUploadInputWarranty\r\n                                              name="fileuploadWarranty[]"\r\n                                              multiple="multiple"\r\n                                              [showCancelButton]="false"\r\n                                              [showUploadButton]="false"\r\n                                              customUpload="true"\r\n                                              (onSelect)="fileUploadWarranty($event)"\r\n                                              (onRemove)="removeFileWarr($event)"></p-fileUpload>\r\n                            </div> \r\n                        </div>\r\n                        <div class="table-responsive table-overflow"\r\n                             *ngIf="isEditButton">\r\n                            <h6 class="panel-title" style="padding-left: 10px;">\r\n                                Attachment Details:\r\n                            </h6>\r\n\r\n                            <table class="table-responsive ptable-cus-pma" style="padding-left: 10px;">\r\n                                <tr>\r\n                                    <th>File Name</th>\r\n                                    <th>Download</th> \r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{{sourceViewforDocumentWarranty.fileName}}</td>\r\n                                    <td style="text-align: center;">\r\n                                        <a *ngIf="sourceViewforDocumentWarranty.attachmentDetailId > 0" (click)="downloadFileUpload(sourceViewforDocumentWarranty)"\r\n                                           matTooltip="Download" matTooltipPosition="above"\r\n                                           class="btn nobg btn-cstm">\r\n                                            <span><i class="fa fa-download"></i></span>\r\n                                        </a>\r\n                                        <a *ngIf="sourceViewforDocumentWarranty.attachmentDetailId==0"\r\n                                           [href]="sourceViewforDocumentWarranty.link"\r\n                                           download="{{sourceViewforDocument.fileName}}"\r\n                                           matTooltip="Download" matTooltipPosition="above"\r\n                                           class="filelink">\r\n                                            <span><i class="fa fa-download"></i></span>\r\n\r\n                                        </a>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            </table>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button"\r\n                            *ngIf="!isEditButton"\r\n                            class="btn btn-primary pull-right submit-btn"\r\n                            style="text-align:center" (ngModelChange)="getmemo($event)"\r\n                            (click)="addDocumentInformationWarranty(\'#addDocumentDetailsWarranty\',documentInformation)"\r\n                            [disabled]="!addDocumentFormWarranty.valid ||  disableFileAttachmentSubmitWarranty">\r\n                        Add \r\n                    </button>\r\n                    <button type="button"\r\n                            *ngIf="isEditButton"\r\n                            class="btn btn-primary pull-right submit-btn"\r\n                            style="text-align:center" (ngModelChange)="getmemo($event)"\r\n                            (click)="addDocumentInformationWarranty(\'#addDocumentDetailsWarranty\',documentInformation)"\r\n                            [disabled]="!addDocumentFormWarranty.valid ||  disleUpdate">\r\n                        Update\r\n                    </button>\r\n                    <button type="button"\r\n                            class="btn btn-danger"\r\n                            (click)="dismissDocumentPopupModelNew(\'#addDocumentDetailsWarranty\'); closeMyModel(\'#addDocumentDetailsWarranty\')">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #deleteContentWarranty\r\n             let-c="close"\r\n             let-d="dismiss"\r\n             data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button"\r\n                class="close"\r\n                aria-label="Close"\r\n                (click)="dismissModelNew()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-body">\r\n\r\n        <div class="form-row" >\r\n            <div class="col-md-4" style="margin-right: 0px !important;">\r\n                <label class="fs12">  Document Name: </label>\r\n                <span class="new-label"> {{selectedRowForDeleteWarranty.docName}}</span>\r\n            </div>\r\n            <div class="col-md-8" style="margin-right: 0px !important;">\r\n                <label class="fs12">File Name  : </label>\r\n                <span class="new-label"> {{selectedRowForDeleteWarranty.fileName}}</span>\r\n\r\n            </div>\r\n            </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button"\r\n        class="btn btn-primary"\r\n                (click)="deleteItemAndCloseModelWarranty()">\r\n            Yes\r\n        </button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModelNew()">\r\n            No\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n\r\n<div class="modal fade"\r\n     id="addDocumentDetailsIntangible"\r\n     role="dialog"\r\n     data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button"\r\n                        class="close"\r\n                        (click)="closeMyModel(\'#addDocumentDetailsIntangible\')">\r\n                    &times;\r\n                </button>\r\n                <h4 class="modal-title">Add Document Details</h4>\r\n            </div>\r\n            <form #addDocumentForm="ngForm" class="form-horizontal">\r\n                <div class="modal-body">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Name <span class="clr-red">*</span></label>\r\n                                <input class="form-control"\r\n                                       type="text" (ngModelChange)="getmemoInfo($event)"\r\n                                       name="name"\r\n                                       [(ngModel)]="documentInformation.docName"\r\n                                       required />\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Description </label>\r\n                                <textarea class="form-control" (ngModelChange)="getmemoInfo($event)"\r\n                                          name="description"\r\n                                          [(ngModel)]="documentInformation.docDescription"\r\n                                          ></textarea>\r\n                            </div>\r\n                            \x3c!-- <div class="form-group">\r\n                                <label>Memo </label>\r\n                                <textarea class="form-control"\r\n                                          name="memo"\r\n                                          [(ngModel)]="documentInformation.docMemo"></textarea>\r\n                            </div> --\x3e\r\n                            <div class="form-group memo-popup-cstm">\r\n                                \x3c!-- <label style="float: none">Memo <i class="fa fa-info-circle fa-lg" (ngModelChange)="getmemo($event)" data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddMemo(\'Document Memo\')"></i></label>\r\n                                <span >\r\n                                    <div [innerHTML]="documentInformation.docMemo" class="form-control" class="p_editor_box"></div></span> --\x3e\r\n                                    <label>Memo</label>\r\n                                    <div class="align_adh">\r\n                                        <div [innerHTML]="documentInformation.docMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(documentInformation.docMemo)"\r\n                                            class="p_editor_box" style="width: 100% !important;"></div>\r\n                                        <i class="fa fa-pencil contoel_v"\r\n                                            (ngModelChange)="getmemo($event)"\r\n                                            data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddMemo(\'Document Memo\')"></i>\r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n\r\n                        <div class="col-md-12">\r\n                            <div class="form-group">\r\n                                <label style="float: none;">Attachments <span class="clr-red">*</span></label>\r\n                                <p-fileUpload #fileUploadInputInt\r\n                                              name="fileuploadInt[]"\r\n                                              multiple="multiple"\r\n                                              [showCancelButton]="false"\r\n                                              [showUploadButton]="false"\r\n                                              customUpload="true"\r\n                                              (onSelect)="fileUploadInt($event)"\r\n                                              (onRemove)="removeFileInt($event)"></p-fileUpload>\r\n                            </div>\r\n                        </div>\r\n                        <div class="table-responsive table-overflow"\r\n                             *ngIf="isEditButton">\r\n                            <h6 class="panel-title" style="padding-left: 10px;">\r\n                                Attachment Details:\r\n                            </h6>\r\n\r\n                            <table class="table-responsive ptable-cus-pma" style="padding-left: 10px;">\r\n                                <tr>\r\n                                    <th>File Name</th>\r\n                                    <th>Download</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{{sourceViewforDocumentInt.fileName}}</td>\r\n                                    <td style="text-align: center;">\r\n                                        <a *ngIf="sourceViewforDocumentInt.attachmentDetailId > 0" (click)="downloadFileUpload(sourceViewforDocumentInt)"\r\n                                           matTooltip="Download" matTooltipPosition="above"\r\n                                           class="btn nobg btn-cstm">\r\n                                            <span><i class="fa fa-download"></i></span>\r\n                                        </a>\r\n                                        <a *ngIf="sourceViewforDocumentInt.attachmentDetailId==0"\r\n                                           [href]="sourceViewforDocumentInt.link"\r\n                                           download="{{sourceViewforDocumentInt.fileName}}"\r\n                                           matTooltip="Download" matTooltipPosition="above"\r\n                                           class="filelink">\r\n                                            <span><i class="fa fa-download"></i></span>\r\n\r\n                                        </a>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            </table>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button"\r\n                            *ngIf="!isEditButton"\r\n                            class="btn btn-primary pull-right submit-btn"\r\n                            style="text-align:center" (ngModelChange)="getmemo($event)"\r\n                            (click)="addDocumentInformationInt(\'#addDocumentDetailsIntangible\',documentInformation)"\r\n                            [disabled]="!addDocumentForm.valid ||  disableFileAttachmentSubmitInt">\r\n                        Add \r\n                    </button>\r\n                    <button type="button"\r\n                            *ngIf="isEditButton"\r\n                            class="btn btn-primary pull-right submit-btn"\r\n                            style="text-align:center" (ngModelChange)="getmemo($event)"\r\n                            (click)="addDocumentInformationInt(\'#addDocumentDetailsIntangible\',documentInformation)"\r\n                            [disabled]="!addDocumentForm.valid || disleUpdate">\r\n                        Update \r\n                    </button>\r\n                    <button type="button"\r\n                            class="btn btn-danger"\r\n                            (click)="dismissDocumentPopupModelNew(\'#addDocumentDetailsIntangible\'); closeMyModel(\'#addDocumentDetailsIntangible\')">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #deleteDocInt\r\n             let-c="close"\r\n             let-d="dismiss"\r\n             data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button"\r\n                class="close"\r\n                aria-label="Close"\r\n                (click)="dismissModelNew()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-body">\r\n        <div class="form-row" >\r\n            <div class="col-md-4" style="margin-right: 0px !important;">\r\n                <label class="fs12">  Document Name: </label>\r\n                <span class="new-label"> {{selectedRowForDeleteInt.docName}}</span>\r\n            </div>\r\n            <div class="col-md-8" style="margin-right: 0px !important;">\r\n                <label class="fs12">File Name  : </label>\r\n                <span class="new-label"> {{selectedRowForDeleteInt.fileName}}</span>\r\n\r\n            </div>\r\n            </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button"\r\n        class="btn btn-primary"\r\n                (click)="deleteItemAndCloseModelInt()">\r\n            Yes\r\n        </button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModelNew()">\r\n            No\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n\r\n<div class="modal fade" id="cpo-memo" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Edit {{ memoLabel }}</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                        <th style="color: #fff;">{{ memoLabel }}</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <p-editor [(ngModel)]="headerMemo" (ngModelChange)="editorgetmemo($event)" [style]="{\'height\':\'320px\'}" name="headerMemo" required></p-editor>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody> \r\n                </table>\r\n                <div style="float:right">\r\n                    <button type="button" class="btn btn-primary" style="margin-top: 10px;"\r\n                    data-dismiss="modal" (click)="onSaveMemo()" (ngModelChange)="getmemo($event)" [disabled]="disableEditor">Save</button>\r\n                    <button type="button" class="btn btn-danger" style="margin-top: 10px;"\r\n                     data-dismiss="modal">Close</button>\r\n               </div> \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        \x3c!-- <strong>\r\n            Asset Name:\r\n            <span class="new-label">{{restorerecord.docName}}</span>\r\n        </strong> --\x3e\r\n        <div class="form-row" >\r\n            <div class="col-md-4" style="margin-right: 0px !important;">\r\n                <label class="fs12">  Document Name: </label>\r\n                <span class="new-label"> {{restorerecord.docName}}</span>\r\n            </div>\r\n            <div class="col-md-8" style="margin-right: 0px !important;">\r\n                <label class="fs12">File Name  : </label>\r\n                <span class="new-label"> {{restorerecord.fileName}}</span>\r\n\r\n            </div>\r\n            </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> '},LvS0:function(t,e,n){"use strict";n.r(e),e.default=""},P7yI:function(t,e,n){"use strict";n.r(e),e.default='<div class="x_content">\r\n    <p-breadcrumb [model]="breadcrumbs" [home]="home"></p-breadcrumb>\r\n<div class="card new-card">\r\n    <div class="card-header bg-primary">\r\n        <div class="row">\r\n            <div class="col">\r\n                <h4 class="new-card-heading">\r\n                   {{ assetService.isEditMode == true ? \'Edit\'  : \'Create\'}} Asset</h4>\r\n            </div>\r\n            <div>\r\n                <button type="button" class="btn-sm new-btn-primary"\r\n                    [routerLink]="[\'/assetmodule/assetpages/app-asset-listing\']">\r\n                    Asset List\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="card-body new-card-body">\r\n        <div class="md-stepper-horizontal orange new-stepper-align">\r\n            <div class="md-step" *ngIf="active0" [ngClass]="{ active: activeIndex >= 0 , editable : activeIndex === 0}"\r\n                (click)="changeOfTab(\'General\')">\r\n                <div class="md-step-circle"><span>1</span></div>\r\n                <div class="md-step-title">General Information</div>\r\n                <div class="md-step-bar-left"></div>\r\n                <div class="md-step-bar-right"></div>\r\n            </div>\r\n            <div class="md-step" *ngIf="active1" [ngClass]="{ active: activeIndex >= 1, editable : activeIndex === 1 }"\r\n                (click)="changeOfTab(\'Capes\')">\r\n                <div class="md-step-circle"><span>2</span></div>\r\n                <div class="md-step-title">Capes</div>\r\n                <div class="md-step-bar-left"></div>\r\n                <div class="md-step-bar-right"></div>\r\n            </div>\r\n            <div class="md-step" *ngIf="active2" [ngClass]="{ active: activeIndex >= 2 , editable : activeIndex === 2 }"\r\n                (click)="changeOfTab(\'Calibration\')">\r\n                <div class="md-step-circle"><span>3</span></div>\r\n                <div class="md-step-title">Calibration</div>\r\n                <div class="md-step-bar-left"></div>\r\n                <div class="md-step-bar-right"></div>\r\n            </div>\r\n            <div class="md-step" *ngIf="active3" [ngClass]="{ active: activeIndex >= 3 , editable : activeIndex === 3 }"\r\n                (click)="changeOfTab(\'Maintenance\')">\r\n                <div class="md-step-circle"><span>4</span></div>\r\n                <div class="md-step-title">Maintenance & Warranty</div>\r\n                <div class="md-step-bar-left"></div>\r\n                <div class="md-step-bar-right"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<form #generalForm="ngForm" #formData="ngForm" method="post" id="" name="" class="form-horizontal add-custustomer">\r\n    <div class="form-row">\r\n        <div class="col-md-12">\r\n            <div class="card new-card">\r\n                <div class="card-header bg-primary">\r\n                    <h4 class="new-card-heading"> General Information</h4>\r\n                </div>\r\n                <div class="card-body">\r\n                    <div class="col-md-12">\r\n                        <div class="col-md-4">\r\n                            <label class="radio-inline" [ngClass]="{ pointerEv: isEditMode==true}">\r\n                                <input type="radio" value="1" name="assetRadio" class="form-check-inline"\r\n                                    [checked]="currentAsset.isTangible == true" [disabled]="isEditMode==true"\r\n                                    (change)="onDepreciable(\'html\')">\r\n                                Tangible\r\n                            </label>\r\n                            <label class="radio-inline" [ngClass]="{ pointerEv: isEditMode==true}">\r\n                                <input type="radio" value="2" name="assetRadio" (change)="onIntangible(\'html\')" [disabled]="isEditMode==true"\r\n                                    [checked]="currentAsset.isIntangible == true">\r\n                                Intangible\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-md-4" *ngIf="currentAsset && currentAsset.isTangible == true">\r\n                            <label class="radio-inline" [ngClass]="{ pointerEv: isEditMode==true}">\r\n                                <input type="radio" value="1" name="assetisDepreciable" [disabled]="isEditMode==true"\r\n                                    [checked]="currentAsset.isdepreciable == true" class="form-check-inline"\r\n                                    (change)="onIsDepreciable()">\r\n                                Depreciable\r\n                            </label>\r\n                            <label class="radio-inline" [ngClass]="{ pointerEv: isEditMode==true}">\r\n                                <input type="radio" value="2" name="assetisDepreciable" [disabled]="isEditMode==true"\r\n                                    [checked]="currentAsset.isNonDepreciable == true" (change)="onIsNonDepreciable()">\r\n                                Non-Depreciable\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-md-4" *ngIf="currentAsset && currentAsset.isIntangible == true">\r\n                            <label class="radio-inline" [ngClass]="{ pointerEv: isEditMode==true}">\r\n                                <input type="radio" value="1" name="assetisAmortizable" class="form-check-inline" [disabled]="isEditMode==true"\r\n                                    (change)="onIsAmortizable()" [checked]="currentAsset.isAmortizable == true">\r\n                                Amortizable\r\n                            </label>\r\n                            <label class="radio-inline" [ngClass]="{ pointerEv: isEditMode==true}">\r\n                                <input type="radio" value="2" name="assetisAmortizable" (change)="onIsNonAmortizable()" [disabled]="isEditMode==true"\r\n                                    [checked]="currentAsset.isNonAmortizable == true">\r\n                                Non-Amortizable\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-12">\r\n                        <div class="form-row">\r\n                            <div class="col-sm-4">\r\n                                <div class="form-group">\r\n                                    <label>Entry Date</label>\r\n                                    <p-calendar [showIcon]="true" [ngModelOptions]="{standalone: true}"\r\n                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                        [maxDate]="currentDate" (ngModelChange)="getmemo($event)"\r\n                                        [(ngModel)]="currentAsset.entryDate"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group"> \r\n                                    <label>Asset Id <span class="clr-red">*</span></label>\r\n                                    <p-autoComplete field="label" class="pautocomp-cstm" (ngModelChange)="getmemo($event)" (onKeyUp)=assetIdHandler($event)\r\n                                    (onSelect)="onAssetIdselection($event)"  [(ngModel)]="currentAsset.assetId" name="assetIdl"\r\n                                     [suggestions]="localCollection" (completeMethod)="filterAssetId($event)" [size]="30" [minLength]="1"\r\n                                      [dropdown]="true" errorMessage="Records not found"  required></p-autoComplete>\r\n           \r\n                                   <div *ngIf="showExistMsg" class="clr-red">Already Exists</div>\r\n                              \r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Asset Name <span class="clr-red">*</span></label>\r\n                                    <input type="text"  (ngModelChange)="getmemo($event)"\r\n                                        [ngModelOptions]="{standalone: true}" required [(ngModel)]="currentAsset.name">\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Asset Description</label>\r\n                                    <textarea class="text-item" style="height: 50px !important;resize: none"\r\n                                        [ngModelOptions]="{standalone: true}" (ngModelChange)="getmemo($event)"\r\n                                        [(ngModel)]="currentAsset.description"></textarea>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Alternate Asset ID</label>\r\n                                    <p-autoComplete (ngModelChange)="getmemo($event)" class="p-autoComplete-ctsm"\r\n                                        field="assetId" name="Inspe" [dropdown]="true" errorMessage="Records not found"\r\n                                        [suggestions]="localCollectionExcAlter" emptyMessage="No Records Found" (onSelect)="onAssetParentAlt($event,1)"\r\n                                        (completeMethod)="filterExcAltAssetId($event)" [size]="30" [minLength]="1"\r\n                                        [forceSelection]="true" [(ngModel)]="currentAsset.alternateAssetRecordId"\r\n                                        #prellRevInsp3="ngModel" (onClear)="onClearAltId()">\r\n                                    </p-autoComplete>\r\n                                    <div *ngIf="showExistMsgForAsset" class="clr-red">Asset Parent and Alternate Asset can\'t be same</div>\r\n                                </div>\r\n                                <div>\r\n                                    <div class="card" style="margin-top: 20px;">\r\n                                        <div class="card-header" style="padding: 10px 12px;">\r\n                                            <h5 style="margin-bottom: 0; font-size: 12px;">\r\n                                                Management Structure<span class="clr-red">*</span>\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                            <div class="form-group">\r\n                                                <p-dropdown  [showClear]="true" class="p-dropdown-100"  (onChange)="selectedLegalEntity(currentAsset.companyId);" required  (ngModelChange)="getmemo($event)"  [options]="maincompanylist" filter="true" [(ngModel)]="currentAsset.companyId" name="companyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <p-dropdown  [showClear]="true" class="p-dropdown-100" (onChange)="selectedBusinessUnit(currentAsset.buisinessUnitId)"  (ngModelChange)="getmemo($event)"  [options]="bulist" filter="true" [(ngModel)]="currentAsset.buisinessUnitId" name="buisinessUnitId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <p-dropdown  [showClear]="true" class="p-dropdown-100"  (onChange)="selectedDivision(currentAsset.divisionId)" (ngModelChange)="getmemo($event)"  [options]="divisionlist" filter="true" [(ngModel)]="currentAsset.divisionId" name="divisionId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <p-dropdown  [showClear]="true" class="p-dropdown-100"  (onChange)="selectedDepartment(currentAsset.departmentId )"  (ngModelChange)="getmemo($event)"  [options]="departmentList" filter="true" [(ngModel)]="currentAsset.departmentId" name="departmentId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-4">\r\n                                <div *ngIf="currentAsset && currentAsset.isTangible " class="depreciation-block">\r\n                                    <div class="form-group">\r\n                                        <label>\r\n                                            Acquisition Type <span class="clr-red">*</span> <span\r\n                                                style="margin-left:3px;cursor:pointer;">\r\n                                            </span>\r\n                                        </label>\r\n                                    \r\n                                        <p-dropdown  [showClear]="true" class="p-dropdown-100"  (ngModelChange)="getmemo($event)" (input)="onFilterAcqution($event.target.value)" required [options]="AssetAcquisitionTypeList" filter="true" [(ngModel)]="currentAsset.assetAcquisitionTypeId" name="assetAcquisitionTypeId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        <label>\r\n                                            Manufacturer\r\n                                        </label>\r\n                                     \r\n                                        <p-dropdown  [showClear]="true" class="p-dropdown-100" (input)="onFilterManufacturer($event.target.value)"  (ngModelChange)="getmemo($event)"  [options]="allManufacturerInfo" filter="true" [(ngModel)]="currentAsset.manufacturerId" name="manufacturerId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        <label>Manufactured Date</label>\r\n                                        <p-calendar [showIcon]="true" [ngModelOptions]="{standalone: true}"\r\n                                            (ngModelChange)="getmemo($event)" [maxDate]="currentDate"\r\n                                            [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                            [(ngModel)]="currentAsset.manufacturedDate"></p-calendar>\r\n                                    </div> \r\n                                    <div class="form-group">\r\n                                        <label>Expiration Date</label>\r\n                                       <p-calendar [showIcon]="true" (ngModelChange)="getmemo($event)"\r\n                                            [ngModelOptions]="{standalone: true}" [minDate]="currentDate"\r\n                                            [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                            [(ngModel)]="currentAsset.expirationDate"\r\n                                            [disabled]="!currentAsset.manufacturedDate"></p-calendar>\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        <label>Model Number</label>\r\n                                        <input class="form-control" type="text" (ngModelChange)="getmemo($event)"\r\n                                            [ngModelOptions]="{standalone: true}" (keypress)="omit_special_char($event)" [(ngModel)]="currentAsset.model">\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                            <label>\r\n                                                <input type="checkbox" [ngModelOptions]="{standalone: true}"\r\n                                                    (ngModelChange)="getmemo($event)"\r\n                                                    [(ngModel)]="currentAsset.isSerialized">\r\n                                                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                Serialized?\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div class="depreciation-block" *ngIf="currentAsset && currentAsset.isTangible  ">\r\n                                    \r\n                                        <div class="form-group">\r\n                                            <label>UOM <span class="clr-red">*</span></label>\r\n                                         \r\n                                            <p-dropdown  [showClear]="true" class="p-dropdown-100" (input)="onFilterUom($event.target.value)" (ngModelChange)="getmemo($event)" required [options]="allUnitOfMeasureinfo" filter="true" [(ngModel)]="currentAsset.unitOfMeasureId" name="unitOfMeasureId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                        </div>\r\n                                        <div class="form-group ">\r\n                                            <label>Currency<span class="clr-red">*</span></label>\r\n                                         \r\n                                            <p-dropdown  [showClear]="true" class="p-dropdown-100"  (input)="onFilterCurrency($event.target.value)" (ngModelChange)="getmemo($event)" required [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentAsset.currencyId" name="currencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Unit Cost</label>\r\n                                            <input class="form-control text-right" type="text" (ngModelChange)="getmemo($event)"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                (change)="formatToGlobal(currentAsset)"\r\n                                                [(ngModel)]="currentAsset.unitCost" >\r\n                                        </div>\r\n                                        \r\n                                        <div class="form-group">\r\n                                            <label>\r\n                                                Asset Location <span style="margin-left:3px;cursor:pointer;">\r\n                                                </span>\r\n                                            </label>\r\n                                         \r\n                                            <p-dropdown  [showClear]="true" class="p-dropdown-100"  (input)="onFilterLocation($event.target.value)" (ngModelChange)="getmemo($event)"  [options]="allAssetLocations" filter="true" [(ngModel)]="currentAsset.assetLocationId" name="assetLocationId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                        </div>\r\n                                        <div class="form-group memo-popup-cstm mat_emo">\r\n                                            <label>\r\n                                                Memo\r\n                                            </label>\r\n                                            <div class="align_adh">\r\n                                                <div [innerHTML]="currentAsset.memo" class="text_editor_box"  [matTooltip]="parsedText(currentAsset.memo)"\r\n                                                    style="width: 100% !important;"></div>\r\n                                                <i class="fa  fa fa-pencil contoel_v" data-toggle="modal"   matTooltipPosition="above"\r\n                                                    data-target="#textarea-popup" matTooltip="Memo"\r\n                                                    matTooltipPosition="above"\r\n                                                    (click)="onAddTextAreaInfo(currentAsset)"></i> \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class="card" style="margin-top: 20px;"\r\n                                    *ngIf="currentAsset && currentAsset.isIntangible">\r\n                                    <div>\r\n                                        <div *ngIf="currentAsset && currentAsset.isIntangible" class="intangible-block">\r\n\r\n                                            <div class="card-header" style="padding: 10px 12px;">\r\n                                                <div class="form-group">\r\n                                                    <label>Intangible Class <span class="clr-red">*</span></label>\r\n                                                   \r\n                                                    <p-dropdown  [showClear]="true" class="p-dropdown-100" (input)="onFilterIntangible($event.target.value)" (onChange)="showItemEdit(currentAsset.assetIntangibleTypeId)"  (ngModelChange)="getmemo($event)" required [options]="allIntangibleInfo" filter="true" [(ngModel)]="currentAsset.assetIntangibleTypeId" name="assetIntangibleTypeId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="clear"></div>\r\n                                        </div>\r\n                                        <div *ngIf="currentAsset && currentAsset.isIntangible"\r\n                                            class="intangible-block block-bg2">\r\n                                            <div class="form-group">\r\n                                            </div>\r\n                                            <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                                <div class="form-group">\r\n                                                    <label>Depreciation Method </label>\r\n                                                    <input disabled class="form-control" type="text"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedIntangibleAssetType.amortizationMethod">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Intangible Life  </label>\r\n                                                    <input disabled class="form-control amount" type="text"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedIntangibleAssetType.intangibleLife"> \r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Amort Frequency</label>\r\n                                                    <input disabled class="form-control" type="text"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedIntangibleAssetType.amortFrequency"\r\n                                                        [ngModelOptions]="{standalone: true}">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Amort Expense GL Account</label>\r\n                                                    <input disabled class="form-control" type="text"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedIntangibleAssetType.amortExpenseGL">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Acc Amort Depr GL Account</label>\r\n                                                    <input disabled class="form-control" type="text"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedIntangibleAssetType.accAmortDeprGL">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Intangible GL Account</label>\r\n                                                    <input disabled class="form-control" type="text"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedIntangibleAssetType.intangibleGL">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Intangible Write Off GL Account </label>  \r\n                                                    <input disabled class="form-control" type="text"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedIntangibleAssetType.intangibleWriteOffGL"> \r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Intangible Write Down GL Account</label>\r\n                                                    <input disabled class="form-control" type="text"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedIntangibleAssetType.intangibleWriteDownGL">\r\n                                                </div>\r\n                                               \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="clear"></div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-4" *ngIf="currentAsset && currentAsset.isTangible ">\r\n                                <div class="form-group">\r\n                                    <label>Asset Parent</label>\r\n                                    <p-autoComplete (ngModelChange)="getmemo($event)" class="p-autoComplete-ctsm"\r\n                                        field="assetId" name="assetId" [dropdown]="true"\r\n                                        errorMessage="Records not found" [suggestions]="localCollectionExcParent"\r\n                                        emptyMessage="No Records Found" [forceSelection]="true"  (onSelect)="onAssetParentAlt($event,2)"\r\n                                        (completeMethod)="filterExcParentAssetId($event)" [size]="30" [minLength]="1"\r\n                                        (onKeyUp)=assetIdHandler($event) [(ngModel)]="currentAsset.assetParentRecordId"\r\n                                        #pre1llRevInsp3="ngModel" (onClear)="onClearParentId()">\r\n                                    </p-autoComplete>\r\n                                    <div *ngIf="showExistMsgForAssetParent" class="clr-red">Asset Parent and Alternate Asset can\'t be same</div>\r\n                                </div>\r\n                                <div>\r\n                                    <div class="card" style="margin-top: 20px;">\r\n                                        <div class="card-header" style="padding: 10px 12px;">\r\n                                            <div class="form-group">\r\n                                                <label>Asset Class/Attribute <span class="clr-red">*</span></label>\r\n                                    \r\n                                                <p-dropdown  [showClear]="true" class="p-dropdown-100" (input)="onFilterTangible($event)" (onChange)="showItemEdit(currentAsset.tangibleClassId)"  (ngModelChange)="getmemo($event)" required [options]="allAssetTypeInfo" filter="true" [(ngModel)]="currentAsset.tangibleClassId" name="tangibleClassId" [resetFilterOnHide]="true" placeholder="Select"></p-dropdown>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="depreciation-asset-block block-bg1">\r\n                                            <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                                <div class="form-group">\r\n                                                    <label>Depreciation Method</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.depreciationMethodName">\r\n                                                </div>\r\n                                                <div class="form-group"> \r\n                                                    <label>Residual %</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.residualPercentage">\r\n                                                </div>\r\n                                                 <div class="form-group">\r\n                                                    <label>Asset Life</label>\r\n                                                    <input class="form-control amount" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.assetLife">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Depr Frequency</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.deprFrequency">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Acquired GL Account</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.acquiredGL">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Depr Expense GL Account</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.deprExpenseGL">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Accum Depr GL Account</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.adDeprGL">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Sale GL Account</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.saleGL">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Write Off GL Account</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.writeOffGL">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Write Down GL Account</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.writeDownGL">\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="clear"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-12" style="margin-bottom: 20px;padding-right: 16px;">\r\n                    <div class="margintop">\r\n                        <button\r\n                        *ngIf="currentAsset && currentAsset.isTangible != true && isEditMode==true"          \r\n                        type="submit" class="btn btn-primary pull-right submit-btn"\r\n                        (click)="addNew()">\r\n                       Add New\r\n                    </button> \r\n                        <button type="button" [disabled]="!allowNextTab"\r\n                            *ngIf="currentAsset && currentAsset.isTangible == true"\r\n                            class="btn btn-primary pull-right submit-btn" (click)="nextClick(\'Next\')">Next</button>\r\n                       \r\n                            <button type="submit" class="btn btn-primary pull-right submit-btn" *ngIf="isEditMode==false && currentAsset.isTangible"\r\n                            [disabled]="!currentAsset.assetId || !currentAsset.name || !currentAsset.assetAcquisitionTypeId || !currentAsset.tangibleClassId || !currentAsset.unitOfMeasureId || !currentAsset.currencyId || !currentAsset.companyId || showExistMsg || showExistMsgForAsset ||  showExistMsgForAssetParent" (click)="saveAsset()">\r\n                            Save\r\n                        </button>\r\n                        <button type="submit" class="btn btn-primary pull-right submit-btn" *ngIf="isEditMode==false && !currentAsset.isTangible"\r\n                        [disabled]=" !currentAsset.assetId || !currentAsset.name  || !currentAsset.assetIntangibleTypeId || showExistMsg" (click)="saveAsset()">\r\n                        Save\r\n                    </button>\r\n                        <button type="submit" class="btn btn-primary pull-right submit-btn" *ngIf="isEditMode==true && currentAsset.isTangible"\r\n                            [disabled]="!currentAsset.assetId || !currentAsset.name || !currentAsset.assetAcquisitionTypeId || !currentAsset.tangibleClassId || !currentAsset.unitOfMeasureId || !currentAsset.currencyId || !currentAsset.companyId || !generalForm.valid || disableSaveForEdit || showExistMsg || showExistMsgForAsset ||  showExistMsgForAssetParent" (click)="saveAsset()">\r\n                           Update\r\n                         </button>\r\n                         <button type="submit" class="btn btn-primary pull-right submit-btn" *ngIf="isEditMode==true && !currentAsset.isTangible"\r\n                         [disabled]=" !currentAsset.assetId || !currentAsset.name  || !currentAsset.assetIntangibleTypeId || !currentAsset.companyId || !generalForm.valid || disableSaveForEdit || showExistMsg || showExistMsgForAsset ||  showExistMsgForAssetParent" (click)="saveAsset()">\r\n                        Update\r\n                      </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n<ng-template #tabRedirectConfirmationModal let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">&times;</button>\r\n        <h4 class="modal-title">Confirmation</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <h6 >\r\n            Do you want to Save changes and Continue ?\r\n        </h6>\r\n    </div>\r\n    <div class="modal-footer">\r\n\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModelRedirect()">No</button>\r\n        <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="redirectToTab()">Yes</button>\r\n    </div>\r\n</ng-template>\r\n<div class="modal fade" id="textarea-popup" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm" style="max-width: 500px !important;">\r\n       \r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="onCloseTextAreaInfo()">&times;</button>\r\n                <h4 class="modal-title">Edit Memo</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                        <th style="color: #fff;">Memo</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <p-editor [(ngModel)]="textAreaInfo" (ngModelChange)="editorgetmemo($event)" [style]="{\'height\':\'320px\'}" name="textAreaInfo" required></p-editor>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody> \r\n                </table>\r\n                <div style="float:right;margin-top: 15px;">\r\n                    <button type="button" class="btn btn-primary" (ngModelChange)="getmemo($event)" (click)="onSaveTextAreaInfo(textAreaInfo)" [disabled]="disableEditor">Save</button>\r\n                    <button type="button" class="btn btn-danger" (click)="onCloseTextAreaInfo()">Close</button>\r\n               </div> \r\n            </div>\r\n        </div>        \r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerEnable">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},PNNn:function(t,e,n){"use strict";n.r(e),e.default="label {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: 400;\n}\n\n.span-header-red {\n  color: red;\n  font-weight: bold;\n}\n\ninput[type=text],\ninput[type=number],\ninput[type=email],\nselect,\ntextarea {\n  height: 24px !important;\n  width: 100% !important;\n  border-radius: 5px !important;\n}\n\n.cal_cds {\n  padding: 12px 20px;\n  margin-bottom: 19px;\n  border-bottom: 1px solid #f3e9e9;\n}\n\n.po-head {\n  font-weight: 700;\n  font-size: 16px !important;\n  color: #295d92 !important;\n}\n\n.fa-plus-circle.fa-lg {\n  color: green !important;\n}\n\n.rro-table-cstm .ui-table {\n  padding-bottom: 100px !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}\n\n.btn-tbl-file-download {\n  line-height: 7px !important;\n  width: 85px !important;\n  height: 19px;\n  border: 0;\n  color: #ffffff !important;\n  background: #337ab7;\n}"},Q6uY:function(t,e,n){"use strict";n.r(e),e.default='\x3c!--<div style="border: 1px solid red">assetmanagement Component</div>--\x3e\r\n\r\n\x3c!--<p-breadcrumb [model]="items" [home]="home"></p-breadcrumb>--\x3e\r\n\x3c!--<app-asset-steps></app-asset-steps>--\x3e\r\n<router-outlet></router-outlet>'},UW3U:function(t,e,n){"use strict";n.r(e),e.default='<div class="bg-white">\r\n\t\x3c!-- <div class="card">\r\n\t\t<div class="card-header">\r\n            <nav aria-label="breadcrumb">\r\n                <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n                    <li class="breadcrumb-item active" aria-current="page">Asset Adjustment</li>\r\n                </ol>\r\n            </nav>\r\n\t\t</div> --\x3e\r\n\t\t<div class="card new-card">\r\n            <div class="card-header bg-primary new-card-header">\r\n              <div class="row">\r\n                <div class="col">\r\n                  <h4 class="new-card-heading">Asset Adjustment</h4>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    type="button"\r\n                    class="btn-sm new-btn-primary"\r\n                    [routerLink]="[\'/assetmodule/assetpages/app-asset-inventory-listing\']"\r\n                  >\r\n                    Asset Inventory List\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class="card-body new-card-body">\r\n\t\t\t<form #assetAdjForm="ngForm">\r\n\t\t\t\t<div class="form-row">\r\n\t\t\t\t\t<div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">Asset ID:</b> {{assetAdjustmentSetup.assetId}}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">Asset Description:</b> {{assetAdjustmentSetup.description}}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">Alt Asset ID:</b> {{assetAdjustmentSetup.alternateAssetId}}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">In Service Date:</b> {{assetAdjustmentSetup.expirationDate | date: \'MM/dd/yyyy\'}}</span>\r\n                    </div>\r\n                    <div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">Updated Cost:</b> {{assetAdjustmentSetup.unitCost}}</span>\r\n                    </div>\r\n                    <div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">Existing Book Value:</b> {{assetAdjustmentSetup.unitCost}}</span>\r\n\t\t\t\t\t</div>\r\n                </div>\r\n                <div class="form-row" style="margin-top: 8px;">\r\n                    <div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">Serial Num:</b> {{assetAdjustmentSetup.serialNo}}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">Control Num:</b> </span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">Asset Life:</b> {{assetAdjustmentSetup.assetLife}}</span>\r\n\t\t\t\t\t</div>\r\n                </div>\r\n\t\t\t\t<div class="table-responsive mtop10" id="smovement">\r\n\t\t\t\t\t<table class="table table-bordered">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t\t<th>Field Name</th>\r\n\t\t\t\t\t\t\t\t<th>Existing Value</th>\r\n\t\t\t\t\t\t\t\t<th>New Value</th>\r\n\t\t\t\t\t\t\t\t<th>Adjustment Reason</th>\r\n\t\t\t\t\t\t\t\t<th>Memo</th>\r\n\t\t\t\t\t\t\t\t<th>Documents</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<ng-container *ngFor="let item of assetAdjustmentData">\r\n\t\t\t\t\t\t\t\t<ng-container *ngIf="item.adjustmentDataTypeId == 1">\r\n\t\t\t\t\t\t\t\t\t\x3c!-- <tr>\r\n\t\t\t\t\t\t\t\t\t\t<td colspan="7" class="text-center bg-blue" style="color: #fff;"><strong>Organization</strong></td>\r\n\t\t\t\t\t\t\t\t\t</tr> --\x3e\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="isCompanyEnable" [(ngModel)]="companyAllow" (change)="isCompanyEnable(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <td>Management Structure</td> --\x3e\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.assetInventoryAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t{{existingMgmentStuc.level1 ? existingMgmentStuc.level1 : \'\'}}\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="showCompany" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" name="companyId" [(ngModel)]="managementStructure.companyId" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(change)="selectedLegalEntity(managementStructure.companyId, item);" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">Select Legal Entity</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of legalEntityList" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td rowspan="4" style="vertical-align: top;">\r\n                                            \x3c!-- <textarea *ngIf="companyAllow || businessAllow || divisionAllow || deptAllow" class="form-control" [(ngModel)]="item.adjustmentReason" name="MgmtStructureReason" required></textarea> --\x3e\r\n                                            <div *ngIf="companyAllow || businessAllow || divisionAllow || deptAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" name="mgmtStructureAdjReason" [(ngModel)]="item.adjustmentReasonId" (change)="onChangeMgmtStrucAdjReason(item.adjustmentReasonId)" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of allAdjReasonInfo" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td rowspan="4" style="vertical-align: top;">\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="companyAllow || businessAllow || divisionAllow || deptAllow" class="form-control" [(ngModel)]="item.adjustmentMemo" name="ManagementStructureMemo"></textarea>\r\n                                        </td>\r\n                                        <td rowspan="4"></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="isBusinessEnable" [(ngModel)]="businessAllow" [disabled]="!existingMgmentStuc.level2 || companyAllow" (change)="isBusinessEnable(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t{{existingMgmentStuc.level2 ? existingMgmentStuc.level2 : \'\'}}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="showBusiness" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" [(ngModel)]="managementStructure.buId" name="buId" (change)="selectedBusinessUnit(managementStructure.buId, item)">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of businessUnitList" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                        </td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="isDivisionEnable" [(ngModel)]="divisionAllow" [disabled]="!existingMgmentStuc.level3 || businessAllow" (change)="isDivisionEnable(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t{{existingMgmentStuc.level3 ? existingMgmentStuc.level3 : \'\'}}\t\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="showDivision" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" [(ngModel)]="managementStructure.divisionId" name="divisionId" (change)="selectedDivision(managementStructure.divisionId, item)">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of divisionList" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                        </td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="isDeptEnable" [(ngModel)]="deptAllow" [disabled]="!existingMgmentStuc.level4 || divisionAllow" (change)="isDeptEnable(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t{{existingMgmentStuc.level4 ? existingMgmentStuc.level4 : \'\'}}\t\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="showDepartment" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" [(ngModel)]="managementStructure.departmentId" name="departmentId" (change)="selectedDepartment(managementStructure.departmentId, item)">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of departmentList" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                        </td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n                                </ng-container>\r\n\r\n                                <ng-container *ngIf="item.adjustmentDataTypeId == 2">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.assetInventoryAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n                                </ng-container>\r\n\r\n                                <ng-container *ngIf="item.adjustmentDataTypeId == 3">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="usefulLifeAllow" [(ngModel)]="usefulLifeAllow" (change)="onChangeUsefulLife(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.assetInventoryAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{assetAdjustmentSetup.assetLife ? assetAdjustmentSetup.assetLife : \'\'}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="usefulLifeAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type="number" class="form-control" name="usefulLife" [(ngModel)]="item.afterValue" required />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n                                        <td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="usefulLifeAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" name="usefulLifeAdjustmentReason" [(ngModel)]="item.adjustmentReasonId" (change)="onChangeUsefulLifeAdjReason(item.adjustmentReasonId)" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of allAdjReasonInfo" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="usefulLifeAllow" class="form-control" [(ngModel)]="item.adjustmentMemo" name="usefulLifeAdjustmentMemo"></textarea>\r\n                                        </td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n                                </ng-container>\r\n                                \r\n                                <ng-container *ngIf="item.adjustmentDataTypeId == 4">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="assetIdAllow" [(ngModel)]="assetIdAllow" (change)="onChangeAssetId(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.assetInventoryAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{assetAdjustmentSetup.assetId ? assetAdjustmentSetup.assetId : \'\'}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="assetIdAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p-autoComplete field="label" class="pautocomp-cstm" [(ngModel)]="item.afterValue" name="assetId" [suggestions]="assetListFilter" (completeMethod)="filterAssetList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true" required></p-autoComplete>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n                                        <td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="assetIdAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" name="assetIdAdjustmentReason" [(ngModel)]="item.adjustmentReasonId" (change)="onChangeAssetIdAdjReason(item.adjustmentReasonId)" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of allAdjReasonInfo" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="assetIdAllow" class="form-control" [(ngModel)]="item.adjustmentMemo" name="assetIdAdjustmentMemo"></textarea>\r\n                                        </td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n                                </ng-container>\r\n                                \r\n                                <ng-container *ngIf="item.adjustmentDataTypeId == 5">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="locationAllow" [(ngModel)]="locationAllow" (change)="onChangeLocation(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.assetInventoryAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{assetAdjustmentSetup.asset_LocationName ? assetAdjustmentSetup.asset_LocationName : \'\'}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n                                            <div *ngIf="locationAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select [(ngModel)]="item.afterValue" name="location" (change)="onChangeLocationSelect(item.afterValue)" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let itemType of allLocationList" [ngValue]="itemType.assetLocationId">{{itemType.name}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n                                        <td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="locationAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" name="locationAdjustmentReason" [(ngModel)]="item.adjustmentReasonId" (change)="onChangeLocationAdjReason(item.adjustmentReasonId)" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of allAdjReasonInfo" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="locationAllow" class="form-control" [(ngModel)]="item.adjustmentMemo" name="locationAdjustmentMemo"></textarea>\r\n                                        </td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n                                </ng-container>\t\r\n                                \r\n                                <ng-container *ngIf="item.adjustmentDataTypeId == 6">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.assetInventoryAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n                                </ng-container>\r\n\r\n                                <ng-container *ngIf="item.adjustmentDataTypeId == 7">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.assetInventoryAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n                                </ng-container>\r\n\t\t\t\t\t\t\t</ng-container>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t<br>\r\n\t\t\t\t<button class="btn btn-primary pull-right" (click)="onSaveAssetAdj()" [disabled]="!assetAdjForm.valid || disableLevel1 || disableLevel2 || disableLevel3 || disableLevel4 || disableMgmtStrucAdj || disableUsefulLifeAdj || disableAssetIdAdj || disableLocation || disableLocationAdj">Save</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>\r\n\r\n\x3c!-- <form #generalForm="ngForm" method="post" id="" name="" class="form-horizontal add-custustomer">\r\n        <div class="form-row">\r\n            \r\n            <div class="col-md-12">\r\n    \r\n                <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="col-md-2">\r\n                            <label class="fs12">Asset ID : </label>\r\n                            <span class="span-header-red"> {{local?.assetId}}</span>\r\n                        </div>\r\n                        <div class="col-md-2">\r\n                                <label class="fs12">Asset Description : </label>\r\n                                <span class="span-header-red"> {{local?.description}}</span>\r\n                                \r\n                        </div>\r\n                        <div class="col-md-2">\r\n                            <label class="fs12">Alt Asset ID : </label>\r\n                            <span class="span-header-red"> {{local?.alternateAssetId}}</span>\r\n                        </div>\r\n                        <div class="col-md-2">\r\n                                <label class="fs12">In Service Date : </label>\r\n                                <span class="span-header-red"> {{local?.expirationDate| date: \'MM/dd/yyyy\' }}</span>\r\n                            </div>\r\n                            <div class="col-md-2">\r\n                                    <label class="fs12">Updated Cost : </label>\r\n                                    <span class="span-header-red"> {{local?.unitCost}}</span>\r\n                                    \r\n                            </div>\r\n                            <div class="col-md-2">\r\n                                <label class="fs12">Existing Book Vaue : </label>\r\n                                <span class="span-header-red"> {{local?.unitCost}}</span>\r\n                            </div>\r\n                            <div class="col-md-2">\r\n                                    <label class="fs12">Serial Num : </label>\r\n                                    <span class="span-header-red"> {{local?.assetId}}</span>\r\n                                </div>\r\n                                <div class="col-md-2">\r\n                                        <label class="fs12">Control Num : </label>\r\n                                        <span class="span-header-red"> {{local?.alternateAssetId}}</span>\r\n                                        \r\n                                </div>\r\n                                <div class="col-md-2">\r\n                                    <label class="fs12">Asset Life : </label>\r\n                                    <span class="span-header-red"> 0</span>\r\n                                </div>\r\n                        \r\n                        <div class="clear"></div>\r\n                        <hr />\r\n                        <div class="clear"></div>\r\n                        \r\n    \r\n                        <div class="col-md-12">\r\n                            <div class="form-row">\r\n\r\n                            <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                                [value]="data"\r\n                                [columns]="cols">\r\n                           \r\n                           <ng-template pTemplate="colgroup" let-columns>\r\n                               <colgroup>\r\n                                    <col style="width:20px">\r\n                                   <col *ngFor="let col of columns" [ngStyle]="{\'width\': col.width}">\r\n                               </colgroup>\r\n                           </ng-template>\r\n                           <ng-template pTemplate="header" let-columns>\r\n                               <tr>\r\n                                   <th></th>\r\n                                   <th *ngFor="let col of columns">\r\n                                       {{col.header}}\r\n                                      \r\n                                   </th>\r\n                                  \r\n                               </tr>\r\n                              \r\n                           </ng-template>\r\n                           <ng-template pTemplate="body" let-rowData let-columns="columns" let-asset>\r\n                               <tr>\r\n                                   <td><input type="checkbox" [ngModelOptions]="{standalone: true}" [(ngModel)]="rowData.selected"></td>\r\n                                   <td>{{ rowData.fieldName}}</td>\r\n                                   <td>{{ rowData.existingValue}}</td>\r\n                                   <td>\r\n                                       <span *ngIf="!rowData.selected">{{ rowData.changeValueTo}}</span>\r\n                                       <ng-container *ngIf="rowData.selected">\r\n\r\n                                                        <div class="form-group" *ngIf="rowData.field==\'company\'">\r\n                                                                <select [(ngModel)]="rowData.changeValueTo" [ngModelOptions]="{standalone: true}" (change)="getBUList(rowData.changeValueTo)">\r\n                                                                    <option>--Select--</option>\r\n                                                                    <option *ngFor="let managementStructure of maincompanylist" [ngValue]="managementStructure.managementStructureId">{{managementStructure.code}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group"  *ngIf="rowData.field==\'bu\'">\r\n                                                               \r\n                                                                <select [(ngModel)]="rowData.changeValueTo" [ngModelOptions]="{standalone: true}" (change)="getDepartmentlist(rowData.changeValueTo)">\r\n                                                                    <option>--Select--</option>\r\n                                                                    <option *ngFor="let managementStructure of bulist" [ngValue]="managementStructure.managementStructureId">{{managementStructure.code}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group"  *ngIf="rowData.field==\'dept\'">\r\n                                                               \r\n                                                                <select [(ngModel)]="rowData.changeValueTo" [ngModelOptions]="{standalone: true}" (change)="getDivisionlist(rowData.changeValueTo)">\r\n                                                                    <option>--Select--</option>\r\n                                                                    <option *ngFor="let managementStructure of departmentList " [ngValue]="managementStructure.managementStructureId">{{managementStructure.code}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group"  *ngIf="rowData.field==\'div\'">\r\n                                                                <select [(ngModel)]="rowData.changeValueTo" [ngModelOptions]="{standalone: true}" (change)="divisionChange(rowData.changeValueTo)">\r\n                                                                    <option>--Select--</option>\r\n                                                                    <option *ngFor="let managementStructure of divisionlist " [ngValue]="managementStructure.managementStructureId">{{managementStructure.code}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group" *ngIf="rowData.field==\'revaluation\'">\r\n                                                                    <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="rowData.changeValueTo">\r\n                                                            </div>\r\n                                                            <div class="form-group" *ngIf="rowData.field==\'usefulLife\'">\r\n                                                                    <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="rowData.changeValueTo">\r\n                                                            </div>\r\n                                                            <div class="form-group" *ngIf="rowData.field==\'assetId\'">\r\n                                                                    <p-autoComplete class="pautocomp-cstm asset-adjustment-autoComplete" sstyle="font-size: 1px" (onSelect)="onAssetIdselection($event)" (onKeyUp)=assetIdHandler($event) [(ngModel)]="rowData.changeValueTo" [ngModelOptions]="{standalone: true}" [suggestions]="localCollection" (completeMethod)="filterAssetId($event)" [size]="30"\r\n                                                                [minLength]="1" [dropdown]="true">\r\n                                                                    <ng-template let-assetId pTemplate="item">\r\n                                                                        <div class="ui-helper-clearfix">{{assetId}}</div>\r\n                                                                    </ng-template>\r\n                                                                </p-autoComplete>\r\n                                                            </div>\r\n                                                            <div class="form-group" *ngIf="rowData.field==\'location\'">\r\n                                                                    <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="rowData.changeValueTo">\r\n                                                            </div>\r\n                                                            <div class="form-group" *ngIf="rowData.field==\'depreciationExpense\'">\r\n                                                                    <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="rowData.changeValueTo">\r\n                                                            </div>\r\n                                                            <div class="form-group" *ngIf="rowData.field==\'accumulatedDepreciation\'">\r\n                                                                    <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="rowData.changeValueTo">\r\n                                                            </div>\r\n                                       </ng-container>\r\n                                    </td>\r\n                                   <td>\r\n                                        <span *ngIf="!rowData.selected">{{ rowData.adjustmentReason}}</span>\r\n                                        <textarea *ngIf="rowData.selected"  [(ngModel)]="rowData.adjustmentReason" [ngModelOptions]="{standalone: true}"></textarea>\r\n                                       \r\n                                    </td>\r\n                                   <td>\r\n                                        <span *ngIf="!rowData.selected">{{ rowData.documents}}</span>\r\n                                        <div class="form-group" *ngIf="rowData.selected">\r\n                                                <p-fileUpload name="fileupload[]" #createUploader multiple="multiple" [showCancelButton]="false" [showUploadButton]="false" customUpload="true" styleClass="asset-adjustment-upload"  (onSelect)="fileUpload($event)">\r\n                                                        <ng-template let-file pTemplate="file">\r\n                                                                <div class="ui-fileupload-row">\r\n                                                                    <div>{{file.name}}</div>\r\n                                                                    <div>\r\n                                                                        <button icon="fa-close" pButton type="button" label="Remove" (click)="removeFile(file,createUploader)"></button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                              </ng-template>\r\n                                                </p-fileUpload>\r\n                                        </div>\r\n                                    </td>\r\n                                  \r\n                               </tr>\r\n                            </ng-template>\r\n                            </p-table>\r\n                            \r\n                                       \r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-12">\r\n                                <div class="margintop">\r\n                                        <button type="submit" class="btn btn-danger pull-right submit-btn" (click)="backClick()">Close</button>\r\n                                        <button type="submit" class="btn btn-primary pull-right submit-btn" (click)="saveAssetAdjustment()">Save</button> \r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n --\x3e\r\n'},a8Oy:function(t,e,n){"use strict";n.r(e);var s=n("mrSG"),a=n("8Y7J"),r=n("u9T3"),i=n("s7LF"),o=n("TSSN"),l=n("1+r1"),c=n("SVse"),d=n("8YFm"),u=n("MCl+"),p=n("CYTX"),m=n("bv+N"),h=n("Jfay"),b=n("I0ai"),v=n("3/N/"),g=n("sa3O"),f=n("1zQ3"),y=n("a4ce"),I=n("AkAD"),A=n("ByPc"),D=n("1bHX"),M=n("NGzr"),w=n("FfGd");let C=class{constructor(){}};C=s.b([Object(a.Component)({selector:"app-assetmanagement",template:s.c(n("Q6uY")).default,styles:[s.c(n("LvS0")).default]})],C);var x=n("/LxO"),S=n("iInd"),L=n("G0yt"),T=n("sYxu"),F=n("3LUQ"),V=n("yKWY"),k=n("5Q4f"),N=n("h55p"),E=n("17al"),R=n("zmE7"),q=n("FmpV"),O=n("OlR4"),j=n("Skqz"),P=n("t4m1"),H=n("EVdn"),G=n("7+Ft"),z=n("Hocb"),U=n("lGQG"),W=n("wd/R");let B=class{constructor(t,e,n,s,a,r,i,o,l,c,d,u,p,m,h,b){this.alertService=t,this.assetService=e,this._route=n,this.modalService=s,this.glAccountService=a,this.assetattrService1=r,this.vendorService=i,this.assetIntangibleService=o,this.vendorEndpointService=l,this.depriciationMethodService=c,this.commonservice=d,this.legalEntityServices=u,this.datePipe=p,this.assetLocationService=m,this.authService=h,this.unitService=b,this.isWorkOrder=!1,this.currentDeletedstatus=!1,this.currentstatus="Active",this.selectedRows=[],this.assetViewList={},this.currentAsset={},this.isDeleteMode=!1,this.isEditMode=!1,this.pageIndex=0,this.pageSize=10,this.pageIndex1=0,this.pageSize1=10,this.updateMode=!1,this.allManagemtninfo=[],this.bulist=[],this.departmentList=[],this.divisionlist=[],this.maincompanylist=[],this.allManufacturerInfo=[],this.managementStructureData=[],this.depriciationMethodList=[],this.depreciationFrequencyList=[],this.assetAcquisitionTypeList=[],this.GLAccountList=[],this.allCapesInfo=[],this.allVendorInfo=[],this.historyCols=[],this.historyData=[],this.allAssetLocationInfo=[],this.allAssetLocations=[],this.assetwarrantystatusList=[],this.allUnitOfMeasureinfo=[],this.selectedOnly=!1,this.pageNumber=0,this.auditHisory=[],this.auditHistory=[],this.status="active",this.allAssetInfo=[],this.allAssetInfoNew=[],this.cols=[{field:"name",header:"Asset Name",colspan:"1"},{field:"assetId",header:"Asset ID",colspan:"1"},{field:"alternateAssetId",header:"Alt Asset ID",colspan:"1"},{field:"manufacturerName",header:"Manufacturer",colspan:"1"},{field:"isSerializedNew",header:"Serialized",colspan:"1"},{field:"calibrationRequiredNew",header:"Calibrated",colspan:"1"},{field:"assetClass",header:"Asset Category",colspan:"1"},{field:"companyName",header:"Level 01",colspan:"1"},{field:"buName",header:"Level 02",colspan:"1"},{field:"deptName",header:"Level 03",colspan:"1"},{field:"divName",header:"Level 04",colspan:"1"},{field:"assetType",header:"Asset Class",colspan:"1"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"Created By"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"Updated By"}],this.cols1=[{field:"partNumber",header:"PN"},{field:"partDescription",header:"PN Description"},{field:"captypedescription",header:"Capability Type"},{field:"manufacturer",header:"Aircraft Manufacturer"},{field:"modelname",header:"Models"},{field:"dashnumber",header:"Dash Number"}],this.restorerecord={},this.isSpinnerVisibleView=!1,this.submittedAlready=!1,this.allAssetInfoOriginal=[],this.dateObject={},this.assetService.isEditMode=!1,this.assetService.listCollection=null}ngOnInit(){this.breadcrumbs=[{label:"Asset"},{label:"Asset List"}],this.isSpinnerVisible=!0,this.selectedColumns=this.cols,this.activeIndex=0,this.assetService.ShowPtab=!1,this.assetService.alertObj.next(this.assetService.ShowPtab),this.assetService.indexObj.next(this.activeIndex),this.isWorkOrder&&this.assetService.getAssetsById(this.assetsId).subscribe(t=>{this.openView("",t[0])},t=>{const e=t;this.errorMessageHandler(e)})}loadEventData(t){this.lazyLoadEventData=t;const e=parseInt(t.first)/t.rows;this.pageIndex=e,this.pageSize=t.rows,t.first=e,t.first<1&&(t.first=0)}closeDeleteModal(){H("#downloadConfirmation").modal("hide")}getList(t){return s.a(this,void 0,void 0,(function*(){const e=Object.assign({},t,{filters:Object(z.j)(t.filters)});this.assetService.getAssetCapesAll(e,this.assetRecordId).subscribe(t=>{this.data=t,this.allCapesInfo=this.data,this.totalRecords1=this.data.length,this.totalPages1=Math.ceil(this.totalRecords1/this.pageSize)},t=>{const e=t;this.errorMessageHandler(e)})}))}geListByStatus(t){this.selectedRows=[],this.status=t,this.currentstatus=t,this.pageNumber=0,this.lazyLoadEventDataInput.first=0,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters);const e=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(e)}getDeleteListByStatus(t){this.selectedRows=[],this.currentDeletedstatus=!0,this.pageNumber=0;const e=parseInt(this.lazyLoadEventDataInput.first)/this.lazyLoadEventDataInput.rows;if(this.pageIndex=e,this.pageSize=this.lazyLoadEventDataInput.rows,this.lazyLoadEventDataInput.first=e,1==t){this.currentstatus=this.currentstatus,this.status=this.status,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters);const t=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(t)}else{this.currentDeletedstatus=!1,this.currentstatus=this.currentstatus,this.status=this.status,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters);const t=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(t)}}publicationPagination(t){this.loadData(t)}restore(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}restoreRecord(){this.commonservice.updatedeletedrecords("Asset","AssetRecordId",this.restorerecord.assetRecordId).subscribe(t=>{this.modal.close(),this.getDeleteListByStatus(!0),this.alertService.showMessage("Success","Successfully Updated Status",F.d.success)},t=>{const e=t;this.errorMessageHandler(e)})}loadData(t){this.pageIndex=parseInt(t.first)/t.rows,this.pageSize=t.rows,this.pageIndex<1&&(this.pageIndex=10*this.pageIndex),t.first=this.pageIndex,this.lazyLoadEventDataInput=t;const e=!!this.currentDeletedstatus;t.filters.isDeleted=e,t.filters.status=this.status?this.status:"Active";const n=Object.assign({},t,{filters:Object(z.j)(t.filters)});this.isSpinnerVisible=!0,this.assetService.getAssetNewList(n).subscribe(t=>{this.onDataLoadSuccessful(t),this.totalRecords=t.totalRecordsCount,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)},t=>{const e=t;this.errorMessageHandler(e)}),this.historyCols=[{field:"overview",header:"Changes Overview",width:"150px"},{field:"updatedBy",header:"Last Updated By",width:"100px"},{field:"updatedDate",header:"Last Updated Time",width:"100px"}]}filterGlobal(t,e){this.globalFilterValue=t,this.isSpinnerVisible=!0,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters);const n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)}),s=!!this.currentDeletedstatus;n.filters.isDeleted=s,n.filters.status=this.status?this.status:"Active",n.filters.global=t,n.globalFilter=t,this.assetService.getAssetListGlobalFilter(n).subscribe(t=>{this.onDataLoadSuccessful(t)},t=>this.onDataLoadFailed(t))}onDataLoadSuccessful(t){this.isSpinnerVisible=!1,this.allAssetInfo=[],this.allAssetInfo=t.results,this.allAssetInfoOriginal=t.results,this.lazyLoadEventDataInput.first=t.first}onDataLoadFailed(t){this.isSpinnerVisible=!1}navigateTogeneralInfo(){this.assetService.isEditMode=!1,this.assetService.enableExternal=!1,this._route.navigateByUrl("assetmodule/assetpages/app-create-asset")}getInsecGLAccName(){this.assetViewList&&this.assetViewList.inspectionGlaAccountId&&this.glAccountService.getById(this.assetViewList.inspectionGlaAccountId).subscribe(t=>{this.onGlAccountLoad(t[0])},t=>{const e=t;this.errorMessageHandler(e)})}onGlAccountLoad(t){t&&null!=t[0]&&(this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.assetViewList.inspectionGlaAccountName=t[0].accountName)}getAuditHistoryById(t){this.assetService.getAssetCapesAudit(t.assetCapesId).subscribe(t=>{this.auditHistory=t},t=>{const e=t;this.errorMessageHandler(e)})}getColorCodeForHistory(t,e,n){const s=this.auditHistory,a=s.length;if(t>=0&&t<=a)return t+1===a||s[t+1][e]===n}openAssetToEdit(t){this.assetService.isEditMode=!0,this.isSaving=!0,this.assetService.listCollection=t;const{assetId:e}=t;this._route.navigateByUrl("assetmodule/assetpages/app-edit-asset/"+t.assetRecordId)}openAssetToAdjustment(t){this.assetService.listCollection=t;const{assetId:e}=t;this._route.navigateByUrl("assetmodule/assetpages/app-asset-adjustment/"+t.assetRecordId)}dismissModel(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}removeAsset(){this.assetService.remove(this.assetService.listCollection.assetRecordId).subscribe(t=>{this.alertService.showMessage("Success","Asset removed successfully.",F.d.success),this.modal.close();const e=this.lazyLoadEventDataInput;this.loadData(Object.assign({},e,{filters:Object.assign({},e.filters,{status:this.status})}))},t=>{const e=t;this.errorMessageHandler(e)})}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}toggleIsActive(t,e){0==e.checked?(this.assetTypeToUpdate=t,this.Active="In Active",this.assetTypeToUpdate.isActive,this.assetService.updateAssetListing(t.assetRecordId,this.Active,this.userName).subscribe(t=>{this.alertService.showMessage("Success","Successfully Updated Status",F.d.success);const e=parseInt(this.lazyLoadEventDataInput.first);this.pageIndex=e,this.pageSize=this.lazyLoadEventDataInput.rows,this.lazyLoadEventDataInput.first=e>=1?e:0,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:this.status,isDeleted:this.currentDeletedstatus});const n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.lazyLoadEventDataInput;this.loadData(n)},t=>{const e=t;this.errorMessageHandler(e)})):(this.assetTypeToUpdate=t,this.Active="Active",this.assetTypeToUpdate.isActive,this.assetService.updateAssetListing(t.assetRecordId,this.Active,this.userName).subscribe(t=>{this.alertService.showMessage("Success","Successfully Updated Status",F.d.success);const e=this.lazyLoadEventDataInput;this.loadData(Object.assign({},e,{filters:Object.assign({},e.filters,{status:this.status})}))},t=>{const e=t;this.errorMessageHandler(e)}))}openDelete(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.assetService.listCollection=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}openHistory(t,e){this.assetService.listCollection=e,this.selectedAsset=e.assetId,this.historyData=[{overview:"Asset Description, Manufacturer",updatedBy:"Shabbir",updatedTime:"02-01-2019 10:20:50"},{overview:"UOM, Asset Location",updatedBy:"Roger A",updatedTime:"02-01-2019 10:20:50"}],this.historyModal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.historyModal.result.then(()=>{},()=>{})}dismissHistoryModel(){this.historyModal.close()}loadDepricationMethod(){this.depriciationMethodService.getAll().subscribe(t=>{this.depriciationMethodList=t[0].columnData},t=>{const e=t;this.errorMessageHandler(e)})}getDefaultVendorName(t){for(let e=0;e<this.allVendorInfo.length;e++)if(t==this.allVendorInfo[e].vendorId)return this.allVendorInfo[e].vendorName}getwarrantystatus(t){for(let e=0;e<this.assetwarrantystatusList.length;e++)if(t==this.assetwarrantystatusList[e].value)return this.assetwarrantystatusList[e].label}openViewData(t,e){this.assetViewList=e,this.assetViewList.depreOrIntang=1==e.isDepreciable?"Tangible":"Intangible",this.assetViewList.manufacturerName=e.manufacturer?e.manufacturer.name:"",this.assetViewList.isSerialized=1==e.isSerialized?"Yes":"No",this.assetViewList.currencyId=e.currency?e.currency.code:"",this.assetViewList.calibrationDefaultCost=e.calibrationDefaultCost?Object(z.b)(e.calibrationDefaultCost,2):"",this.assetViewList.certificationDefaultCost=e.certificationDefaultCost?Object(z.b)(e.certificationDefaultCost,2):"",this.assetViewList.inspectionDefaultCost=e.inspectionDefaultCost?Object(z.b)(e.inspectionDefaultCost,2):"",this.assetViewList.verificationDefaultCost=e.verificationDefaultCost?Object(z.b)(e.verificationDefaultCost,2):"",this.assetViewList.residualPer=e.residualPer?Object(z.b)(e.residualPer,2):"",this.assetViewList.isSerialized=1==e.isSerialized?"Yes":"No",this.assetViewList.unitOfMeasureId=this.getUOMName(e.unitOfMeasureId),this.assetViewList.assetTypeId=e.assetType?e.assetType.assetTypeName:"",this.assetRecordId=e.assetRecordId,this.selectedCol=this.cols1,this.assetViewList.unitCost=e.unitCost?Object(z.b)(e.unitCost,2):"",this.isWorkOrder||(this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1,windowClass:"assetMange"}))}openView(t,e){if(this.submittedAlready)return!1;this.submittedAlready=!0,this.isSpinnerVisibleView=!0,this.assetService.getByAssetId(e.assetRecordId).subscribe(e=>{setTimeout(()=>{this.submittedAlready=!1,this.isSpinnerVisibleView=!1},1500),this.openViewData(t,Object.assign({},...e))},t=>{this.isSpinnerVisibleView=!1;const e=t;this.errorMessageHandler(e)})}onCapesLoaded(t){this.allCapesInfo=t,this.totalRecords1=this.allCapesInfo.length,this.totalPages1=Math.ceil(this.totalRecords1/this.pageSize1)}getDeprFrequencyName(t){for(let e=0;e<this.depreciationFrequencyList.length;e++)if(t==this.depreciationFrequencyList[e].value)return this.depreciationFrequencyList[e].label}getUOMName(t){for(let e=0;e<this.allUnitOfMeasureinfo.length;e++)if(t==this.allUnitOfMeasureinfo[e].unitOfMeasureId)return this.allUnitOfMeasureinfo[e].shortName}getGLAccountName(t){for(let e=0;e<this.GLAccountList.length;e++)if(t==this.GLAccountList[e].glAccountId)return this.GLAccountList[e].accountName}getGLAccountCode(t){for(let e=0;e<this.GLAccountList.length;e++)if(t==this.GLAccountList[e].glAccountId)return this.GLAccountList[e].accountCode}onSuccessfulAssetType(t){t&&t[0]&&(this.assetViewList.assetAttributeTypeId=t[0].assetAttributeTypeId,this.assetViewList.assetAttributeTypeName=t[0].assetAttributeTypeName,this.assetViewList.conventionType=t[0].conventionType,this.assetViewList.depreciationMethod=t[0].depreciationMethod,this.assetViewList.residualPercentage=t[0].residualPercentage?Object(z.b)(t[0].residualPercentage,2):"",this.assetViewList.residualValue=t[0].residualValue,this.assetViewList.assetLife=t[0].assetLife,this.assetViewList.depreciationFrequencyId=t[0].depreciationFrequencyId,this.assetViewList.acquiredGLAccountId=t[0].acquiredGLAccountId,this.assetViewList.deprExpenseGLAccountId=t[0].deprExpenseGLAccountId,this.assetViewList.adDepsGLAccountId=t[0].adDepsGLAccountId,this.assetViewList.assetSale=t[0].assetSale,this.assetViewList.assetWriteOff=t[0].assetWriteOff,this.assetViewList.assetWriteDown=t[0].assetWriteDown,this.assetViewList.createdBy=t[0].createdBy,this.assetViewList.updatedBy=t[0].updatedBy,this.assetViewList.createdDate=t[0].createdDate,this.assetViewList.updatedDate=t[0].updatedDate,this.assetViewList.isDelete=t[0].isDelete,this.assetViewList.isActive=t[0].isActive)}openAllCollapse(){H("#step1").collapse("show"),H("#step2").collapse("show"),H("#step3").collapse("show"),H("#step4").collapse("show")}closeAllCollapse(){H("#step1").collapse("hide"),H("#step2").collapse("hide"),H("#step3").collapse("hide"),H("#step4").collapse("hide")}getAssetAcquisitionTypeList(){this.commonservice.smartDropDownList("AssetAcquisitionType","AssetAcquisitionTypeId","Name").subscribe(t=>{this.assetAcquisitionTypeList=t},t=>{const e=t;this.errorMessageHandler(e)})}getDepreciationFrequencyList(){this.commonservice.smartDropDownList("AssetDepreciationFrequency","AssetDepreciationFrequencyId","Name").subscribe(t=>{this.depreciationFrequencyList=t},t=>{const e=t;this.errorMessageHandler(e)})}selectColumns(t,e){}selectAssetclass(t,e){}exportCSV(t){this.isSpinnerVisible=!0;const e=!!this.currentDeletedstatus;let n={first:0,rows:t.totalRecords,sortOrder:1,filters:{status:this.currentstatus,isDeleted:e},globalFilter:""};n.globalFilter=this.globalFilterValue?this.globalFilterValue:"",Object.keys(t.filters).forEach(e=>{n.filters[e]=t.filters[e].value}),this.assetService.downloadAllAssetList(n).subscribe(e=>{this.loadingIndicator=!1,t._value=e.results.map(t=>Object.assign({},t,{createdDate:t.createdDate?this.datePipe.transform(t.createdDate,"MMM-dd-yyyy hh:mm a"):"",updatedDate:t.updatedDate?this.datePipe.transform(t.updatedDate,"MMM-dd-yyyy hh:mm a"):""})),t.exportCSV(),t.value=this.allAssetInfo,this.isSpinnerVisible=!1},t=>{const e=t;this.errorMessageHandler(e)})}errorMessageHandler(t){this.isSpinnerVisible=!1,this.alertService.showMessage("Error",t,F.d.error)}parsedText(t){if(t){return(new DOMParser).parseFromString("<!doctype html><body>"+t,"text/html").body.textContent}}dateFilterForTable(t,e){if(this.dateObject={},t=W(t).format("MM/DD/YYYY"),W(t).format("MM/DD/YY"),""!=t&&W(t,"MM/DD/YYYY",!0).isValid()){"createdDate"==e?this.dateObject={createdDate:t}:"updatedDate"==e&&(this.dateObject={updatedDate:t}),this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject);const n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(n)}else{this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject),this.lazyLoadEventDataInput.filters&&this.lazyLoadEventDataInput.filters.createdDate&&delete this.lazyLoadEventDataInput.filters.createdDate,this.lazyLoadEventDataInput.filters&&this.lazyLoadEventDataInput.filters.updatedDate&&delete this.lazyLoadEventDataInput.filters.updatedDate,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject);const t=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(t)}}changeStatus(t){}};B.ctorParameters=()=>[{type:F.b},{type:x.a},{type:S.Router},{type:L.c},{type:V.a},{type:E.a},{type:j.a},{type:R.a},{type:k.a},{type:q.a},{type:O.a},{type:N.a},{type:c.DatePipe},{type:P.a},{type:U.a},{type:G.a}],s.b([Object(a.Input)()],B.prototype,"isWorkOrder",void 0),s.b([Object(a.Input)()],B.prototype,"assetsId",void 0),B=s.b([Object(a.Component)({selector:"app-asset-listing",template:s.c(n("27c/")).default,animations:[T.a],providers:[c.DatePipe],styles:[s.c(n("kd5I")).default]})],B);let $=class{constructor(t,e,n,s,a,r){this.alertService=t,this.assetService=e,this._route=n,this.modalService=s,this.commonservice=a,this.legalEntityServices=r,this.assetViewList={},this.currentAsset={},this.isDeleteMode=!1,this.isEditMode=!1,this.pageIndex=0,this.pageSize=10,this.pageIndex1=0,this.pageSize1=10,this.updateMode=!1,this.allManagemtninfo=[],this.bulist=[],this.departmentList=[],this.divisionlist=[],this.maincompanylist=[],this.allManufacturerInfo=[],this.managementStructureData=[],this.allAssetInfo=[],this.allAssetInfoNew=[],this.assetService.isEditMode=!1,this.assetService.listCollection=null}ngOnInit(){this.loadData(),this.activeIndex=0,this.assetService.ShowPtab=!1,this.assetService.alertObj.next(this.assetService.ShowPtab),this.assetService.indexObj.next(this.activeIndex)}changePage(t){const e=t.first/t.rows;this.pageIndex=e,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}onDataLoadSuccessful(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allAssetInfo=t,console.log(this.allAssetInfo),this.totalRecords=this.allAssetInfo.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize),this.loadManagementdata()}loadData(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.assetService.getAssetList().subscribe(t=>this.onDataLoadSuccessful(t[0]),t=>this.onDataLoadFailed(t)),this.cols=[{field:"name",header:"Asset Name",colspan:"1"},{field:"assetId",header:"Asset ID",colspan:"1"},{field:"alternateAssetId",header:"Alt Asset ID",colspan:"1"},{field:"manufacturer",header:"Manufacturer",colspan:"1"},{field:"isSerializedNew",header:"Serial Num",colspan:"1"},{field:"companyName",header:"Level 01",colspan:"1"},{field:"buName",header:"Level 02",colspan:"1"},{field:"deptName",header:"Level 03",colspan:"1"},{field:"divName",header:"Level 04",colspan:"1"},{field:"assetStatus",header:"Status",colspan:"1"},{field:"",header:"Updated Cost",colspan:"1"},{field:"",header:"Existing Book Value",colspan:"1"},{field:"",header:"Last Depr Date",colspan:"1"}],this.selectedColumns=this.cols}onDataLoadFailed(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}loadManagementdata(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.legalEntityServices.getManagemententity().subscribe(t=>this.onManagemtntdataLoad(t[0]),t=>this.onDataLoadFailed(t))}onManagemtntdataLoad(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allManagemtninfo=t;for(let e=0;e<this.allManagemtninfo.length;e++)null==this.allManagemtninfo[e].parentId&&this.maincompanylist.push(this.allManagemtninfo[e]);for(let e=0;e<this.allAssetInfo.length;e++){this.currentAsset=Object.assign({},this.allAssetInfo[e]);let t="",n="",s="",a="",r="",i="";this.setManagementStrucureData(this.currentAsset),this.currentAsset.companyId&&(t=this.getNameById(this.currentAsset.companyId),i=t),this.currentAsset.buisinessUnitId&&(n=this.getNameById(this.currentAsset.buisinessUnitId),i=i+", "+n),this.currentAsset.departmentId&&(s=this.getNameById(this.currentAsset.departmentId),i=i+", "+s),this.currentAsset.divisionId&&(a=this.getNameById(this.currentAsset.divisionId),i=i+", "+a),this.currentAsset.manufacturer&&(r=this.currentAsset.manufacturer.name),this.currentAsset.isDepreciable,this.currentAsset=Object.assign({},this.currentAsset,{companyName:t,buName:n,deptName:s,divName:a,manufacturerName:r,isSerializedNew:1==this.currentAsset.isSerialized?"Yes":"No",calibrationRequiredNew:1==this.currentAsset.calibrationRequired?"Yes":"No",assetClass:1==this.currentAsset.isDepreciable?"Tangible":"Intangible",assetType:this.currentAsset.assetType.assetTypeName,assetStatus:1==this.currentAsset.isActive?"Active":"In Active",managementStrName:i}),this.allAssetInfoNew.push(this.currentAsset)}console.log(this.allManagemtninfo),console.log(this.allAssetInfoNew)}checkMSParents(t){this.managementStructureData.push(t);for(let e=0;e<this.allManagemtninfo.length;e++)if(this.allManagemtninfo[e].managementStructureId==t&&this.allManagemtninfo[e].parentId){this.checkMSParents(this.allManagemtninfo[e].parentId);break}}setManagementStrucureData(t){this.managementStructureData=[],this.checkMSParents(t.managementStructureId),console.log(this.managementStructureData.length),4==this.managementStructureData.length&&(this.currentAsset.companyId=this.managementStructureData[3],this.currentAsset.buisinessUnitId=this.managementStructureData[2],this.currentAsset.departmentId=this.managementStructureData[1],this.currentAsset.divisionId=this.managementStructureData[0]),3==this.managementStructureData.length&&(this.currentAsset.companyId=this.managementStructureData[2],this.currentAsset.buisinessUnitId=this.managementStructureData[1],this.currentAsset.departmentId=this.managementStructureData[0],this.getBUList(this.currentAsset.companyId),this.getDepartmentlist(this.currentAsset.buisinessUnitId)),2==this.managementStructureData.length&&(this.currentAsset.companyId=this.managementStructureData[1],this.currentAsset.buisinessUnitId=this.managementStructureData[0],this.getBUList(this.currentAsset.companyId)),1==this.managementStructureData.length&&(this.currentAsset.companyId=this.managementStructureData[0])}getBUList(t){if(0==this.updateMode){this.currentAsset.buisinessUnitId="",this.currentAsset.departmentId="",this.currentAsset.divisionId="",this.currentAsset.managementStructureId=t,this.departmentList=[],this.divisionlist=[],this.bulist=[];for(let e=0;e<this.allManagemtninfo.length;e++)this.allManagemtninfo[e].parentId==t&&this.bulist.push(this.allManagemtninfo[e])}else{this.departmentList=[],this.divisionlist=[],this.bulist=[];for(let e=0;e<this.allManagemtninfo.length;e++)this.allManagemtninfo[e].parentId==t&&this.bulist.push(this.allManagemtninfo[e])}}getDepartmentlist(t){if(0==this.updateMode){this.currentAsset.departmentId="",this.currentAsset.divisionId="",this.currentAsset.managementStructureId=t,this.departmentList=[],this.divisionlist=[];for(let e=0;e<this.allManagemtninfo.length;e++)this.allManagemtninfo[e].parentId==t&&this.departmentList.push(this.allManagemtninfo[e])}else{this.departmentList=[],this.divisionlist=[];for(let e=0;e<this.allManagemtninfo.length;e++)this.allManagemtninfo[e].parentId==t&&this.departmentList.push(this.allManagemtninfo[e])}}getDivisionlist(t){if(0==this.updateMode){this.currentAsset.divisionId="",this.currentAsset.managementStructureId=t,this.divisionlist=[];for(let e=0;e<this.allManagemtninfo.length;e++)this.allManagemtninfo[e].parentId==t&&this.divisionlist.push(this.allManagemtninfo[e])}else{this.divisionlist=[];for(let e=0;e<this.allManagemtninfo.length;e++)this.allManagemtninfo[e].parentId==t&&this.divisionlist.push(this.allManagemtninfo[e])}}getNameById(t){for(let e=0;e<this.allManagemtninfo.length;e++)if(this.allManagemtninfo[e].managementStructureId==t)return this.allManagemtninfo[e].code;return""}openHistory(t,e){this.historyModal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.historyModal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}toggleIsActive(t,e){}openSaleHistory(t){}openView(t){}};$.ctorParameters=()=>[{type:F.b},{type:x.a},{type:S.Router},{type:L.c},{type:O.a},{type:N.a}],s.b([Object(a.Input)()],$.prototype,"assetsId",void 0),$=s.b([Object(a.Component)({selector:"app-asset-disposal-sale",template:s.c(n("vB/z")).default,animations:[T.a],styles:[s.c(n("0leF")).default]})],$);var _=n("JPLv");let Y=class{constructor(t,e,n,s,a,r,i,o,l){this.alertService=t,this.authService=e,this.datePipe=n,this.commonService=s,this.assetService=a,this._route=r,this.modalService=i,this.commonservice=o,this.configurations=l,this.isWorkOrder=!1,this.allDocumentsListColumns=[{field:"docName",header:"Name"},{field:"docDescription",header:"Description"},{field:"docMemo",header:"Memo"},{field:"fileName",header:"File Name"},{field:"fileSize",header:"File Size"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"CreatedBy"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"UpdatedBy"},{field:"download",header:"Actions"}],this.allDocumentsList=[],this.allDocumentsListWarranty=[],this.sourceViewforDocumentAudit=[],this.assetViewList={},this.currentAsset={},this.isDeleteMode=!1,this.isEditMode=!1,this.selectedRows=[],this.pageIndex=0,this.pageSize=10,this.pageIndex1=0,this.pageSize1=10,this.updateMode=!1,this.allManagemtninfo=[],this.bulist=[],this.departmentList=[],this.divisionlist=[],this.maincompanylist=[],this.allManufacturerInfo=[],this.managementStructureData=[],this.depriciationMethodList=[],this.depreciationFrequencyList=[],this.assetAcquisitionTypeList=[],this.GLAccountList=[],this.allCapesInfo=[],this.allVendorInfo=[],this.historyData=[],this.allAssetLocationInfo=[],this.allAssetLocations=[],this.assetwarrantystatusList=[],this.allUnitOfMeasureinfo=[],this.pageNumber=0,this.auditHistory=[],this.status="active",this.currentDeletedstatus=!1,this.currentstatus="Active",this.selectedOnly=!1,this.cols=[{field:"inventoryNumber",header:"Inventory Num",colspan:"1"},{field:"name",header:"Asset Name",colspan:"1"},{field:"assetId",header:"Asset ID",colspan:"1"},{field:"alternateAssetId",header:"Alt Asset ID",colspan:"1"},{field:"manufacturerName",header:"Manufacturer",colspan:"1"},{field:"serialNumber",header:"Serial Num",colspan:"1"},{field:"calibrationRequiredNew",header:"Calibrated",colspan:"1"},{field:"assetStatus",header:"Asset Status",colspan:"1"},{field:"inventoryStatus",header:"Inventory Status",colspan:"1"},{field:"companyName",header:"Level 01",colspan:"1"},{field:"buName",header:"Level 02",colspan:"1"},{field:"deptName",header:"Level 03",colspan:"1"},{field:"divName",header:"Level 04",colspan:"1"},{field:"assetClass",header:"Asset Category",colspan:"1"},{field:"assetType",header:"Asset Class",colspan:"1"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"Created By"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"Updated By"}],this.historyCols=[{field:"overview",header:"Changes Overview",width:"150px"},{field:"updatedBy",header:"Last Updated By",width:"100px"},{field:"updatedTime",header:"Last Updated Time",width:"100px"}],this.allAssetInfo=[],this.allAssetInfoNew=[],this.managementStructure={},this.isSpinnerVisible=!0,this.customerDocumentsColumns=[{field:"docName",header:"Name"},{field:"docDescription",header:"Description"},{field:"docMemo",header:"Memo"},{field:"fileName",header:"File Name"},{field:"fileSize",header:"File Size"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"Created By"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"Updated By"}],this.selectedColumnsDoc=this.customerDocumentsColumns,this.pageSizeNew=3,this.sourceViewforDocumentList=[],this.allDocumentListOriginal=[],this.sourceViewforDocumentListWarranty=[],this.allDocumentListOriginalWarranty=[],this.sourceViewforDocumentListInt=[],this.allDocumentListOriginalInt=[],this.capesCols=[{field:"partNumber",header:"PN"},{field:"partDescription",header:"PN Description"},{field:"captypedescription",header:"Capability Type"},{field:"manufacturer",header:"Aircraft Manufacturer"},{field:"modelname",header:"Models"},{field:"dashnumber",header:"Dash Number"}],this.capesSelectedColumns=this.capesCols,this.allAssetInfoOriginal=[],this.dateObject={},this.isSpinnerVisibleHistory=!1,this.showhistorylist=!1,this.restorerecord={},this.isDeletedDocumentlist=!1,this.warrentyDeletedList=!1,this.intangibleDeletedList=!1,this.maitananceeletedList=!1}ngOnInit(){this.breadcrumbs=[{label:"Asset Inventory"},{label:"Asset Inventory List"}],this.activeIndex=0,this.assetService.ShowPtab=!1,this.assetService.alertObj.next(this.assetService.ShowPtab),this.assetService.indexObj.next(this.activeIndex),this.selectedColumns=this.cols}changePage(t){const e=t.first/t.rows;this.pageIndex=e,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}onDataLoadSuccessful(t){this.isSpinnerVisible=!1,this.allAssetInfo=t.results,this.allAssetInfoOriginal=t.results,this.totalPages=Math.ceil(this.totalRecords/this.pageSize),this.totalRecords=t.totalRecordsCount,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}closeDeleteModal(){H("#downloadConfirmation").modal("hide")}geListByStatus(t){this.status=t,this.selectedRows=[],this.pageNumber=0,this.pageIndex=0,this.lazyLoadEventDataInput.first=this.pageIndex,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:t,pageIndex:1}),this.loadData(this.lazyLoadEventDataInput)}getDeleteListByStatus(t){this.selectedRows=[],this.currentDeletedstatus=!0;const e=parseInt(this.lazyLoadEventDataInput.first)/this.lazyLoadEventDataInput.rows;if(this.pageIndex=e,this.pageSize=this.lazyLoadEventDataInput.rows,this.lazyLoadEventDataInput.first=e,this.status=status,1==t){this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters);const t=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(t)}else{this.currentDeletedstatus=!1,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters);const t=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(t)}}onDataLoad(t){const e=parseInt(t.first)/t.rows;this.pageIndex=e,this.pageSize=t.rows,t.first=e,this.currentstatus=this.currentstatus?this.currentstatus:"Active",this.loadData(t)}loadData(t){this.lazyLoadEventDataInput=t;const e=!!this.currentDeletedstatus;t.filters.isDeleted=e,t.filters.status=this.status?this.status:"Active",t.globalFilter=t.globalFilter?t.globalFilter:"";const n=Object.assign({},t,{filters:Object(z.j)(t.filters)});this.isSpinnerVisible=!0,this.assetService.getAssetInventoryList(n).subscribe(t=>{this.onDataLoadSuccessful(t[0])},t=>{this.isSpinnerVisible=!1;const e=t;this.errorMessageHandler(e)})}dateFilterForTable(t,e){if(this.dateObject={},t=W(t).format("MM/DD/YYYY"),W(t).format("MM/DD/YY"),console.log("date",t,e),""!=t&&W(t,"MM/DD/YYYY",!0).isValid()){"createdDate"==e?this.dateObject={createdDate:t}:"updatedDate"==e&&(this.dateObject={updatedDate:t}),this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject);const n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(n),console.log("date 111",t)}else{this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject),this.lazyLoadEventDataInput.filters&&this.lazyLoadEventDataInput.filters.createdDate&&delete this.lazyLoadEventDataInput.filters.createdDate,this.lazyLoadEventDataInput.filters&&this.lazyLoadEventDataInput.filters.updatedDate&&delete this.lazyLoadEventDataInput.filters.updatedDate;const t=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(t)}}navigateTogeneralInfo(){this.assetService.isEditMode=!1,this.assetService.enableExternal=!1,this._route.navigateByUrl("assetmodule/assetpages/app-create-asset-inventory")}openAssetToEdit(t){this.assetService.isEditMode=!0,this.isSaving=!0,this.assetService.listCollection=t;const{assetId:e}=t;this._route.navigateByUrl("assetmodule/assetpages/app-edit-asset-inventory/"+t.assetInventoryId)}openAssetToAdjustment(t){this.assetService.listCollection=t;const{assetId:e}=t;this._route.navigateByUrl("assetmodule/assetpages/app-asset-adjustment/"+t.assetInventoryId)}dismissModel(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}removeAsset(){this.pageNumber=0,this.assetService.listCollection&&null!=this.assetService.listCollection.assetInventoryId&&this.assetService.removeAssetInventory(this.assetService.listCollection.assetInventoryId).subscribe(t=>{this.alertService.showMessage("Success","Asset Inventory removed successfully.",F.d.success),this.modal.close(),this.status=this.status,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters);const e=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(e)},t=>{this.isSpinnerVisible=!1;const e=t;this.errorMessageHandler(e)})}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}toggleIsActive(t,e){this.pageNumber=0,0==e.checked?(this.assetTypeToUpdate=t,this.Active="In Active",this.assetTypeToUpdate.isActive,t&&null!=t.assetInventoryId&&this.assetService.updateAssetInventoryListing(t.assetInventoryId,this.Active,this.userName).subscribe(t=>{this.alertService.showMessage("Success","Asset Inventory Type updated successfully.",F.d.success),this.status=this.status,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters);const e=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(e)},t=>{this.isSpinnerVisible=!1;const e=t;this.errorMessageHandler(e)})):(this.assetTypeToUpdate=t,this.Active="Active",this.assetTypeToUpdate.isActive,t&&null!=t.assetInventoryId&&this.assetService.updateAssetInventoryListing(t.assetInventoryId,this.Active,this.userName).subscribe(t=>{this.alertService.showMessage("Success","Asset Inventory Type updated successfully.",F.d.success),this.status=this.status,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters);const e=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(e)},t=>{this.isSpinnerVisible=!1;const e=t;this.errorMessageHandler(e)}))}openDelete(t,e){this.pageNumber=0,this.isEditMode=!1,this.isDeleteMode=!0,this.assetService.listCollection=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then(()=>{},()=>{})}openHistory(t){this.isIntangible=null,t&&null!=t.assetInventoryId&&(this.isSpinnerVisibleHistory=!0,this.assetService.getAuditDataByInventoryId(t.assetInventoryId).subscribe(t=>{t&&0!=t.length?(this.showhistorylist=!0,this.auditHistory=t.map(t=>Object.assign({},t,{unitCost:t.unitCost?Object(z.b)(t.unitCost,2):"",residualPercentage:t.residualPercentage?Object(z.b)(t.residualPercentage,2):"",installationCost:t.installationCost?Object(z.b)(t.installationCost,2):"",freight:t.freight?Object(z.b)(t.freight,2):"",insurance:t.insurance?Object(z.b)(t.insurance,2):"",taxes:t.taxes?Object(z.b)(t.taxes,2):"",totalCost:t.totalCost?Object(z.b)(t.totalCost,2):"",calibrationDefaultCost:t.calibrationDefaultCost?Object(z.b)(t.calibrationDefaultCost,2):"",certificationDefaultCost:t.certificationDefaultCost?Object(z.b)(t.certificationDefaultCost,2):"",inspectionDefaultCost:t.inspectionDefaultCost?Object(z.b)(t.inspectionDefaultCost,2):"",verificationDefaultCost:t.verificationDefaultCost?Object(z.b)(t.verificationDefaultCost,2):""})),this.isIntangible=this.auditHistory[0].isIntangible):this.showhistorylist=!1,this.isSpinnerVisibleHistory=!1},t=>{this.isSpinnerVisibleHistory=!1,this.isSpinnerVisible=!1,this.showhistorylist=!1;const e=t;this.errorMessageHandler(e)}))}getColorCodeForHistory(t,e,n){const s=this.auditHistory,a=s.length;if(t>=0&&t<=a)return t+1===a||s[t+1][e]===n}viewSelectedRowdbl(t){this.openView(t),H("#invView").modal("show")}openView(t){this.isSpinnerVisibleHistory=!0,t&&null!=t.assetInventoryId&&this.assetService.getByInventoryId(t.assetInventoryId).subscribe(e=>{e&&(this.currentAsset=Object.assign({},e,{isTangible:!e.isIntangible,entryDate:e.entryDate?new Date(e.entryDate):null,manufacturedDate:e.manufacturedDate?new Date(e.manufacturedDate):null,expirationDate:e.expirationDate?new Date(e.expirationDate):null,unitCost:e.unitCost?Object(z.b)(e.unitCost,2):"",installationCost:e.installationCost?Object(z.b)(e.installationCost,2):"",freight:e.freight?Object(z.b)(e.freight,2):"",insurance:e.insurance?Object(z.b)(e.insurance,2):"",taxes:e.taxes?Object(z.b)(e.taxes,2):"",totalCost:e.totalCost?Object(z.b)(e.totalCost,2):"",calibrationDefaultCost:e.calibrationDefaultCost?Object(z.b)(e.calibrationDefaultCost,2):"",certificationDefaultCost:e.certificationDefaultCost?Object(z.b)(e.certificationDefaultCost,2):"",inspectionDefaultCost:e.inspectionDefaultCost?Object(z.b)(e.inspectionDefaultCost,2):"",verificationDefaultCost:e.verificationDefaultCost?Object(z.b)(e.verificationDefaultCost,2):"",warrantyStartDate:e.warrantyStartDate?new Date(e.warrantyStartDate):null,warrantyEndDate:e.warrantyEndDate?new Date(e.warrantyEndDate):null})),1==this.currentAsset.isTangible?(this.toGetDocumentsListNew(t.assetInventoryId),this.toGetDocumentsListWarranty(t.assetInventoryId)):this.toGetDocumentsListInt(t.assetInventoryId),this.assetInventoryId=t.assetInventoryId,setTimeout(()=>{this.isSpinnerVisibleHistory=!1},1e3)},t=>{this.isSpinnerVisibleHistory=!1;const e=t;this.errorMessageHandler(e)})}getManagementStructureCodes(t){t&&this.commonService.getManagementStructureCodes(t).subscribe(t=>{t.Level1?this.managementStructure.level1=t.Level1:this.managementStructure.level1="-",t.Level2?this.managementStructure.level2=t.Level2:this.managementStructure.level2="-",t.Level3?this.managementStructure.level3=t.Level3:this.managementStructure.level3="-",t.Level4?this.managementStructure.level4=t.Level4:this.managementStructure.level4="-",this.isSpinnerVisible=!1},t=>{const e=t;this.errorMessageHandler(e)})}toGetDocumentsListNew(t){t&&this.commonService.GetDocumentsListNewAsset(t,54,this.maitananceeletedList).subscribe(t=>{this.sourceViewforDocumentList=t||[],this.allDocumentListOriginal=t},t=>{const e=t;this.errorMessageHandler(e)})}toGetDocumentsListWarranty(t){t&&this.commonService.GetDocumentsListNewAsset(t,55,this.warrentyDeletedList).subscribe(t=>{this.sourceViewforDocumentListWarranty=t||[],this.allDocumentListOriginalWarranty=t},t=>{const e=t;this.errorMessageHandler(e)})}toGetDocumentsListInt(t){t&&this.commonService.GetDocumentsListNewAsset(t,56,this.intangibleDeletedList).subscribe(t=>{this.sourceViewforDocumentListInt=t||[],this.allDocumentListOriginalInt=t},t=>{const e=t;this.errorMessageHandler(e)})}dateFilterForTableNew(t,e){if(""!=t&&null!=t||(this.sourceViewforDocumentList=this.allDocumentListOriginal),this.sourceViewforDocumentList=this.allDocumentListOriginal,""!==t&&W(t).format("MMMM DD YYYY")){const n=[...this.sourceViewforDocumentList.filter(n=>W(n.createdDate).format("MMMM DD YYYY")===W(t).format("MMMM DD YYYY")&&"createdDate"===e||W(n.updatedDate).format("MMMM DD YYYY")===W(t).format("MMMM DD YYYY")&&"updatedDate"===e?n:void 0)];this.sourceViewforDocumentList=n}else this.sourceViewforDocumentList=this.allDocumentListOriginal}dateFilterForTableWarranty(t,e){if(""!=t&&null!=t||(this.sourceViewforDocumentListWarranty=this.allDocumentListOriginalWarranty),this.sourceViewforDocumentListWarranty=this.allDocumentListOriginalWarranty,""!==t&&W(t).format("MMMM DD YYYY")){const n=[...this.sourceViewforDocumentListWarranty.filter(n=>W(n.createdDate).format("MMMM DD YYYY")===W(t).format("MMMM DD YYYY")&&"createdDate"===e||W(n.updatedDate).format("MMMM DD YYYY")===W(t).format("MMMM DD YYYY")&&"updatedDate"===e?n:void 0)];this.sourceViewforDocumentListWarranty=n}else this.sourceViewforDocumentListWarranty=this.allDocumentListOriginalWarranty}dateFilterForTableInt(t,e){if(""!=t&&null!=t||(this.sourceViewforDocumentListInt=this.allDocumentListOriginalInt),this.sourceViewforDocumentList=this.allDocumentListOriginalInt,""!==t&&W(t).format("MMMM DD YYYY")){const n=[...this.sourceViewforDocumentListInt.filter(n=>W(n.createdDate).format("MMMM DD YYYY")===W(t).format("MMMM DD YYYY")&&"createdDate"===e||W(n.updatedDate).format("MMMM DD YYYY")===W(t).format("MMMM DD YYYY")&&"updatedDate"===e?n:void 0)];this.sourceViewforDocumentListInt=n}else this.sourceViewforDocumentListInt=this.allDocumentListOriginalInt}openHistoryDoc(t,e){this.alertService.startLoadingMessage(),e&&null!=e.attachmentDetailId&&this.commonService.GetAttachmentAudit(e.attachmentDetailId).subscribe(e=>{this.onAuditHistoryLoadSuccessful(e,t)},t=>{const e=t;this.errorMessageHandler(e)})}onAuditHistoryLoadSuccessful(t,e){this.alertService.stopLoadingMessage(),this.sourceViewforDocumentAudit=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then(()=>{},()=>{})}getColorCodeForHistoryMain(t,e,n){const s=this.sourceViewforDocumentAudit,a=s.length;if(t>=0&&t<=a)return t+1===a||s[t+1][e]===n}dismissModelNew(){this.isDeleteMode=!1,this.modal.close()}openCapes(){this.currentAsset.assetRecordId&&this.assetService.getcapabilityListData(this.currentAsset.assetRecordId).subscribe(t=>{this.allCapesInfo=t[0]},t=>{const e=t;this.errorMessageHandler(e)})}getPageCount(t,e){return Math.ceil(t/e)}downloadFileUpload(t){const e=`${this.configurations.baseUrl}/api/FileUpload/downloadattachedfile?filePath=${t.link}`;window.location.assign(e)}onCloseView(){H("#invView").modal("hide")}restore(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then(()=>{},()=>{})}restoreRecord(){this.restorerecord&&null!=this.restorerecord.assetInventoryId&&this.commonService.updatedeletedrecords("AssetInventory","AssetInventoryId",this.restorerecord.assetInventoryId).subscribe(t=>{this.getDeleteListByStatus(!0),this.alertService.showMessage("Success","Successfully Updated Status",F.d.success),this.modal.close()},t=>{const e=t;this.errorMessageHandler(e)})}exportCSV(t){this.isSpinnerVisible=!0;const e=!!this.currentDeletedstatus;let n={first:0,rows:t.totalRecords,sortOrder:1,filters:{status:this.currentstatus,isDeleted:e},globalFilter:""};this.assetService.downloadAllAssetInventoryList(n).subscribe(e=>{this.loadingIndicator=!1,t._value=e.results.map(t=>Object.assign({},t,{createdDate:t.createdDate?this.datePipe.transform(t.createdDate,"MMM-dd-yyyy hh:mm a"):"",updatedDate:t.updatedDate?this.datePipe.transform(t.updatedDate,"MMM-dd-yyyy hh:mm a"):""})),t.exportCSV(),t.value=this.allAssetInfo,this.isSpinnerVisible=!1},t=>{const e=t;this.errorMessageHandler(e)})}parsedText(t){if(t){return(new DOMParser).parseFromString("<!doctype html><body>"+t,"text/html").body.textContent}}errorMessageHandler(t){this.alertService.showMessage("Error",t,F.d.error)}getDeleteListByStatusAttachments(t,e){console.log("check",t),1==e?(this.maitananceeletedList=t,this.toGetDocumentsListNew(this.assetInventoryId)):2==e?(this.warrentyDeletedList=t,this.toGetDocumentsListWarranty(this.assetInventoryId)):(this.intangibleDeletedList=t,this.toGetDocumentsListInt(this.assetInventoryId))}};Y.ctorParameters=()=>[{type:F.b},{type:U.a},{type:c.DatePipe},{type:O.a},{type:x.a},{type:S.Router},{type:L.c},{type:O.a},{type:_.a}],s.b([Object(a.Input)()],Y.prototype,"isWorkOrder",void 0),Y=s.b([Object(a.Component)({selector:"app-asset-inventory-listing",template:s.c(n("EQKf")).default,animations:[T.a],providers:[c.DatePipe],styles:[s.c(n("6Aim")).default]})],Y);var K=n("6c3z");let X=class{constructor(t,e,n,s,a,r,i,o,l,c){this.router=t,this.assetService=e,this.vendorService=n,this.alertService=s,this.authService=a,this.commonService=r,this.modalService=i,this.glAccountService=o,this.route=l,this.currencyService=c,this.allGlInfo=[],this.allVendorInfo=[],this.currentCalibration={},this.disableSaveForEdit=!1,this.isSpinnerVisible=!1,this.arrayVendlsit=[],this.setEditArray=[],this.finalData={},this.datadissmiss=!1,this.allVendorInfoFilter=[],this.allGlInfoFilter=[],this.currentData={},this.disableEditor=!0,this.AssetId=this.router.snapshot.params.id,this.activeIndex=2}ngOnInit(){0==this.assetService.isEditMode?this.breadcrumbs=[{label:"Asset"},{label:"Create Asset"}]:this.breadcrumbs=[{label:"Asset"},{label:"Edit Asset"}],this.AssetId=this.router.snapshot.params.id,this.disableSaveForEdit=!0,this.GetAssetData(this.AssetId),this.assetService.bredcrumbObj.next(this.assetService.currentUrl)}GetAssetData(t){this.isSpinnerVisible=!0,null!=t&&this.assetService.getByAssetId(t).subscribe(t=>{this.onassetdataSuccessful(t)},t=>{const e=t;this.errorMessageHandler(e)})}onassetdataSuccessful(t){this.activeIndex=2,this.assetService.indexObj.next(this.activeIndex),this.assetService.listCollection=t[0],this.localCollection=this.assetService.listCollection,this.currentCalibration=t[t.length-1],this.isSpinnerVisible=!1,1==this.currentCalibration.assetCal&&(this.assetService.isEditMode=!0),this.currentCalibration.assetRecordId=t[0].assetRecordId,this.vendorList(""),this.setAutocompleteOnLoad(this.currentCalibration),this.currentCalibration.verificationDefaultCost=this.currentCalibration.verificationDefaultCost?Object(z.b)(this.currentCalibration.verificationDefaultCost,2):"0.00",this.currentCalibration.calibrationDefaultCost=this.currentCalibration.calibrationDefaultCost?Object(z.b)(this.currentCalibration.calibrationDefaultCost,2):"0.00",this.currentCalibration.certificationDefaultCost=this.currentCalibration.certificationDefaultCost?Object(z.b)(this.currentCalibration.certificationDefaultCost,2):"0.00",this.currentCalibration.inspectionDefaultCost=this.currentCalibration.inspectionDefaultCost?Object(z.b)(this.currentCalibration.inspectionDefaultCost,2):"0.00",0==this.currentCalibration.calibrationRequired&&(this.currentCalibration.calibrationDefaultCost="0.00"),0==this.currentCalibration.certificationRequired&&(this.currentCalibration.certificationDefaultCost="0.00"),0==this.currentCalibration.inspectionRequired&&(this.currentCalibration.inspectionDefaultCost="0.00"),0==this.currentCalibration.verificationRequired&&(this.currentCalibration.verificationDefaultCost="0.00"),this.glList(""),this.CurrencyData()}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}setvaliDate(t){this.disableSaveForEdit=!1}vendorList(t){this.arrayVendlsit.push(0),this.vendorService.getVendorNameCodeListwithFilter(t,20,this.arrayVendlsit.join()).subscribe(t=>{this.allVendorInfo=t.map(t=>({vendorId:t.vendorId,name:t.vendorName})),this.allVendorInfoFilter=this.allVendorInfo},t=>{const e=t;this.errorMessageHandler(e)})}glList(t){this.setEditArray=[],1==this.assetService.isEditMode?this.setEditArray.push(this.currentCalibration.calibrationGlAccountId?this.currentCalibration.calibrationGlAccountId.glAccountId:0,this.currentCalibration.certificationGlAccountId?this.currentCalibration.certificationGlAccountId.glAccountId:0,this.currentCalibration.inspectionGlaAccountId?this.currentCalibration.inspectionGlaAccountId.glAccountId:0,this.currentCalibration.verificationGlAccountId?this.currentCalibration.verificationGlAccountId.glAccountId:0):this.setEditArray.push(0);const e=t||"";this.commonService.getAutoCompleteDropDownsByCodeWithName("GLAccount","GLAccountId","AccountName","AccountCode",e,20,this.setEditArray.join()).subscribe(t=>{this.allGlInfo=t.map(t=>({glAccountId:t.value,name:t.label})),this.allGlInfoFilter=this.allGlInfo},t=>{const e=t;this.errorMessageHandler(e)})}changeOfTab(t){const{assetId:e}=this.AssetId;1==this.assetService.isEditMode&&("General"===t?(this.activeIndex=0,this.route.navigateByUrl("assetmodule/assetpages/app-edit-asset/"+this.AssetId)):"Capes"===t?(this.activeIndex=1,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/"+this.AssetId)):"Calibration"===t?(this.activeIndex=2,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration/"+this.AssetId)):"Maintenance"==t&&(this.activeIndex=3,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-maintenance-warranty/"+this.AssetId)))}CurrencyData(){this.setEditArray=[],1==this.assetService.isEditMode?this.setEditArray.push(this.currentCalibration.certificationCurrencyId,this.currentCalibration.inspectionCurrencyId,this.currentCalibration.calibrationCurrencyId,this.currentCalibration.verificationCurrencyId):this.setEditArray.push(0);this.commonService.autoSuggestionSmartDropDownList("Currency","CurrencyId","Code","",!0,20,this.setEditArray.join()).subscribe(t=>{this.allCurrencyInfo=t},t=>{const e=t;this.errorMessageHandler(e)})}saveCalibration(){this.finalData={},this.currentCalibration.createdBy=this.userName,this.currentCalibration.updatedBy=this.userName,this.currentCalibration.masterCompanyId=this.authService.currentUser.masterCompanyId,0==this.currentCalibration.calibrationRequired?(this.currentCalibration.calibrationDefaultVendorId=null,this.currentCalibration.calibrationDefaultCost="0.00",this.currentCalibration.calibrationCurrencyId=null,this.currentCalibration.calibrationGlAccountId=null,this.currentCalibration.calibrationMemo=null):0==this.currentCalibration.certificationRequired?(this.currentCalibration.certificationDefaultVendorId=null,this.currentCalibration.certificationDefaultCost="0.00",this.currentCalibration.certificationCurrencyId=null,this.currentCalibration.certificationGlAccountId=null,this.currentCalibration.certificationMemo=null):0==this.currentCalibration.inspectionRequired?(this.currentCalibration.inspectionDefaultVendorId=null,this.currentCalibration.inspectionDefaultCost="0.00",this.currentCalibration.inspectionCurrencyId=null,this.currentCalibration.inspectionGlaAccountId=null,this.currentCalibration.inspectionMemo=null):0==this.currentCalibration.verificationRequired&&(this.currentCalibration.verificationDefaultVendorId=null,this.currentCalibration.verificationDefaultCost="0.00",this.currentCalibration.verificationCurrencyId=null,this.currentCalibration.verificationGlAccountId=null,this.currentCalibration.verificationMemo=null),this.currentCalibration.verificationFrequencyMonths=this.currentCalibration.verificationFrequencyMonths?this.currentCalibration.verificationFrequencyMonths:0,this.currentCalibration.verificationFrequencyDays=this.currentCalibration.verificationFrequencyDays?this.currentCalibration.verificationFrequencyDays:0,this.currentCalibration.inspectionFrequencyMonths=this.currentCalibration.inspectionFrequencyMonths?this.currentCalibration.inspectionFrequencyMonths:0,this.currentCalibration.inspectionFrequencyDays=this.currentCalibration.inspectionFrequencyDays?this.currentCalibration.inspectionFrequencyDays:0,this.currentCalibration.certificationFrequencyMonths=this.currentCalibration.certificationFrequencyMonths?this.currentCalibration.certificationFrequencyMonths:0,this.currentCalibration.certificationFrequencyDays=this.currentCalibration.certificationFrequencyDays?this.currentCalibration.certificationFrequencyDays:0,this.currentCalibration.calibrationFrequencyMonths=this.currentCalibration.calibrationFrequencyMonths?this.currentCalibration.calibrationFrequencyMonths:0,this.currentCalibration.calibrationFrequencyDays=this.currentCalibration.calibrationFrequencyDays?this.currentCalibration.calibrationFrequencyDays:0,1!=this.currentCalibration.calibrationRequired||0!=this.currentCalibration.calibrationFrequencyMonths||0!=this.currentCalibration.calibrationFrequencyDays?1!=this.currentCalibration.certificationRequired||0!=this.currentCalibration.certificationFrequencyMonths||0!=this.currentCalibration.certificationFrequencyDays?1!=this.currentCalibration.inspectionRequired||0!=this.currentCalibration.inspectionFrequencyMonths||0!=this.currentCalibration.inspectionFrequencyDays?1!=this.currentCalibration.verificationRequired||0!=this.currentCalibration.verificationFrequencyMonths||0!=this.currentCalibration.verificationFrequencyDays?(this.currentCalibration.updatedBy=this.userName,this.currentCalibration.masterCompanyId=this.authService.currentUser.masterCompanyId,this.currentCalibration.calibrationCurrencyId=0==this.currentCalibration.calibrationCurrencyId?null:this.currentCalibration.calibrationCurrencyId,this.currentCalibration.inspectionCurrencyId=0==this.currentCalibration.inspectionCurrencyId?null:this.currentCalibration.inspectionCurrencyId,this.currentCalibration.certificationCurrencyId=0==this.currentCalibration.certificationCurrencyId?null:this.currentCalibration.certificationCurrencyId,this.currentCalibration.verificationCurrencyId=0==this.currentCalibration.verificationCurrencyId?null:this.currentCalibration.verificationCurrencyId,this.currentCalibration.assetRecordId=this.assetService.listCollection.assetRecordId,this.currentCalibration.assetCalibrationMin=""==this.currentCalibration.assetCalibrationMin?null:this.currentCalibration.assetCalibrationMin,this.currentCalibration.assetCalibrationMinTolerance=this.currentCalibration.assetCalibrationMinTolerance=this.currentCalibration.assetCalibrationMinTolerance,this.currentCalibration.assetCalibratonMax=this.currentCalibration.assetCalibratonMax=this.currentCalibration.assetCalibratonMax,this.currentCalibration.assetCalibrationMaxTolerance=this.currentCalibration.assetCalibrationMaxTolerance=this.currentCalibration.assetCalibrationMaxTolerance,this.currentCalibration.assetCalibrationExpected=this.currentCalibration.assetCalibrationExpected=this.currentCalibration.assetCalibrationExpected,this.currentCalibration.assetCalibrationExpectedTolerance=this.currentCalibration.assetCalibrationExpectedTolerance=this.currentCalibration.assetCalibrationExpectedTolerance,this.finalData=Object.assign({},this.currentCalibration),1==this.currentCalibration.assetCal?(this.finalData.calibrationDefaultVendorId=this.finalData.calibrationDefaultVendorId?this.finalData.calibrationDefaultVendorId.vendorId:null,this.finalData.certificationDefaultVendorId=this.finalData.certificationDefaultVendorId?this.finalData.certificationDefaultVendorId.vendorId:null,this.finalData.inspectionDefaultVendorId=this.finalData.inspectionDefaultVendorId?this.finalData.inspectionDefaultVendorId.vendorId:null,this.finalData.verificationDefaultVendorId=this.finalData.verificationDefaultVendorId?this.finalData.verificationDefaultVendorId.vendorId:null,this.finalData.calibrationGlAccountId=this.finalData.calibrationGlAccountId?this.finalData.calibrationGlAccountId.glAccountId:null,this.finalData.certificationGlAccountId=this.finalData.certificationGlAccountId?this.finalData.certificationGlAccountId.glAccountId:null,this.finalData.inspectionGlaAccountId=this.finalData.inspectionGlaAccountId?this.finalData.inspectionGlaAccountId.glAccountId:null,this.finalData.verificationGlAccountId=this.finalData.verificationGlAccountId?this.finalData.verificationGlAccountId.glAccountId:null,this.isSpinnerVisible=!0,this.assetService.updateAssetCalibration(this.finalData).subscribe(t=>{this.disableSaveForEdit=!0,this.currentCalibration.updatedBy=this.userName,this.currentCalibration.assetCal=!0,t.assetCal=!0,this.localCollection=t,setTimeout(()=>{this.isSpinnerVisible=!1},1200),this.alertService.showMessage("Success","Asset calibration updated successfully.",F.d.success)},t=>{const e=t;this.isSpinnerVisible=!1,this.errorMessageHandler(e)})):(this.finalData.calibrationDefaultVendorId=this.finalData.calibrationDefaultVendorId?this.finalData.calibrationDefaultVendorId.vendorId:null,this.finalData.certificationDefaultVendorId=this.finalData.certificationDefaultVendorId?this.finalData.certificationDefaultVendorId.vendorId:null,this.finalData.inspectionDefaultVendorId=this.finalData.inspectionDefaultVendorId?this.finalData.inspectionDefaultVendorId.vendorId:null,this.finalData.verificationDefaultVendorId=this.finalData.verificationDefaultVendorId?this.finalData.verificationDefaultVendorId.vendorId:null,this.finalData.calibrationGlAccountId=this.finalData.calibrationGlAccountId?this.finalData.calibrationGlAccountId.glAccountId:null,this.finalData.certificationGlAccountId=this.finalData.certificationGlAccountId?this.finalData.certificationGlAccountId.glAccountId:null,this.finalData.inspectionGlaAccountId=this.finalData.inspectionGlaAccountId?this.finalData.inspectionGlaAccountId.glAccountId:null,this.finalData.verificationGlAccountId=this.finalData.verificationGlAccountId?this.finalData.verificationGlAccountId.glAccountId:null,this.isSpinnerVisible=!0,this.assetService.addAssetCalibration(this.finalData).subscribe(t=>{this.disableSaveForEdit=!0,setTimeout(()=>{this.isSpinnerVisible=!1},1200),this.alertService.showMessage("Success","Asset Calibration  created successfully",F.d.success),this.currentCalibration.updatedBy=this.userName,this.currentCalibration.assetCal=!0,t.assetCal=!0,this.assetService.isEditMode=!0,this.localCollection=t},t=>{this.isSpinnerVisible=!1;const e=t;this.errorMessageHandler(e)}))):this.alertService.showMessage("Warning"," Verification Months & Days Cant be Zero",F.d.warn):this.alertService.showMessage("Warning","Inspection Months & Days Cant be Zero",F.d.warn):this.alertService.showMessage("Warning","Certification Months & Days Cant be Zero",F.d.warn):this.alertService.showMessage("Warning","Calibration Months & Days Cant be Zero",F.d.warn)}validateDates(t,e,n){t&&(t<0||t>31)&&(t="",1==n?(e.calibrationFrequencyDays=null,this.alertService.showMessage("Warning","Calibration Days Cant greater than 31 days",F.d.warn)):2==n?(e.certificationFrequencyDays=null,this.alertService.showMessage("Warning","Certification Days Cant greater than 31 days",F.d.warn)):3==n?(e.inspectionFrequencyDays=null,this.alertService.showMessage("Warning","Inspection Days Cant greater than 31 days",F.d.warn)):4==n&&(e.verificationFrequencyDays=null,this.alertService.showMessage("Warning","Verification Days Cant greater than 31 days",F.d.warn)))}formatToGlobal(t){t.verificationDefaultCost=t.verificationDefaultCost?Object(z.b)(t.verificationDefaultCost,2):"0.00",t.calibrationDefaultCost=t.calibrationDefaultCost?Object(z.b)(t.calibrationDefaultCost,2):"0.00",t.certificationDefaultCost=t.certificationDefaultCost?Object(z.b)(t.certificationDefaultCost,2):"0.00",t.inspectionDefaultCost=t.inspectionDefaultCost?Object(z.b)(t.inspectionDefaultCost,2):"0.00"}nextClick(t){this.nextOrPreviousTab=t;let e=this.tabRedirectConfirmationModal3;this.modal=this.modalService.open(e,{size:"sm"})}dismissModel(){this.modal.close()}redirectdismissModel(){this.datadissmiss=!0,this.redirectToTab()}redirectToTab(){this.disableSaveForEdit||this.datadissmiss||this.saveCalibration(),this.dismissModel(),"Next"==this.nextOrPreviousTab?(this.activeIndex=3,this.assetService.indexObj.next(this.activeIndex),this.route.navigateByUrl("/assetmodule/assetpages/app-asset-maintenance-warranty/"+this.localCollection.assetRecordId)):(this.activeIndex=1,this.assetService.indexObj.next(this.activeIndex),this.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/"+this.localCollection.assetRecordId)),this.datadissmiss=!1}filterWarentyVendor(t){this.allVendorInfoFilter=this.allVendorInfo,void 0!==t.query&&null!==t.query?this.vendorList(t.query):this.vendorList("");const e=[...this.allVendorInfo.filter(e=>e.name.toLowerCase().includes(t.query.toLowerCase()))];this.allVendorInfoFilter=e}filterWarentyGl(t){this.allGlInfoFilter=this.allGlInfo,void 0!==t.query&&null!==t.query?this.glList(t.query):this.glList("");const e=[...this.allGlInfo.filter(e=>e.name.toLowerCase().includes(t.query.toLowerCase()))];this.allGlInfoFilter=e}filterWarentyVendor2(t){this.allVendorInfoFilter=this.allVendorInfo,void 0!==t.query&&null!==t.query?this.vendorList(t.query):this.vendorList("");const e=[...this.allVendorInfo.filter(e=>e.name.toLowerCase().includes(t.query.toLowerCase()))];this.allVendorInfoFilter=e}filterWarentyGl2(t){this.allGlInfoFilter=this.allGlInfo,void 0!==t.query&&null!==t.query?this.glList(t.query):this.glList("");const e=[...this.allGlInfo.filter(e=>e.name.toLowerCase().includes(t.query.toLowerCase()))];this.allGlInfoFilter=e}filterWarentyVendor3(t){this.allVendorInfoFilter=this.allVendorInfo,void 0!==t.query&&null!==t.query?this.vendorList(t.query):this.vendorList("");const e=[...this.allVendorInfo.filter(e=>e.name.toLowerCase().includes(t.query.toLowerCase()))];this.allVendorInfoFilter=e}filterWarentyGl3(t){this.allGlInfoFilter=this.allGlInfo,void 0!==t.query&&null!==t.query?this.glList(t.query):this.glList("");const e=[...this.allGlInfo.filter(e=>e.name.toLowerCase().includes(t.query.toLowerCase()))];this.allGlInfoFilter=e}filterWarentyVendor4(t){this.allVendorInfoFilter=this.allVendorInfo,void 0!==t.query&&null!==t.query?this.vendorList(t.query):this.vendorList("");const e=[...this.allVendorInfo.filter(e=>e.name.toLowerCase().includes(t.query.toLowerCase()))];this.allVendorInfoFilter=e}filterWarentyGl4(t){this.allGlInfoFilter=this.allGlInfo,void 0!==t.query&&null!==t.query?this.glList(t.query):this.glList("");const e=[...this.allGlInfo.filter(e=>e.name.toLowerCase().includes(t.query.toLowerCase()))];this.allGlInfoFilter=e}setAutocompleteOnLoad(t){t.calibrationGlAccountId=0==t.calibrationGlAccountId?null:{glAccountId:t.calibrationGlAccountId,name:t.calibrationGlAccount},t.certificationGlAccountId=0==t.certificationGlAccountId?null:{glAccountId:t.certificationGlAccountId,name:t.certificationGlAccount},t.inspectionGlaAccountId=0==t.inspectionGlaAccountId?null:{glAccountId:t.inspectionGlaAccountId,name:t.inspectionGlAccount},t.verificationGlAccountId=0==t.verificationGlAccountId?null:{glAccountId:t.verificationGlAccountId,name:t.verificationGlAccount},t.calibrationDefaultVendorId=0==t.calibrationDefaultVendorId?null:{vendorId:t.calibrationDefaultVendorId,name:t.calibrationVendor},t.certificationDefaultVendorId=0==t.certificationDefaultVendorId?null:{vendorId:t.certificationDefaultVendorId,name:t.certificationVendor},t.inspectionDefaultVendorId=0==t.inspectionDefaultVendorId?null:{vendorId:t.inspectionDefaultVendorId,name:t.inspectionVendor},t.verificationDefaultVendorId=0==t.verificationDefaultVendorId?null:{vendorId:t.verificationDefaultVendorId,name:t.verificationVendor}}onAddTextAreaInfo(t,e){this.disableEditor=!0,this.textAreaInfo=t,this.memoType=e}editorgetmemo(t){this.disableEditor=!1}onSaveTextAreaInfo(t){this.disableSaveForEdit=!1,t&&(this.textAreaInfo=t,1==this.memoType?this.currentCalibration.calibrationMemo=t:2==this.memoType?this.currentCalibration.certificationMemo=t:3==this.memoType?this.currentCalibration.inspectionMemo=t:4==this.memoType?this.currentCalibration.verificationMemo=t:5==this.memoType&&(this.currentCalibration.assetCalibrationMemo=t)),H("#textarea-popup").modal("hide")}onCloseTextAreaInfo(){H("#textarea-popup").modal("hide")}verificationMethod(){this.currentCalibration.verificationFrequencyMonths=0,this.currentCalibration.verificationFrequencyDays=0,this.currentCalibration.verificationDefaultVendorId=null,this.currentCalibration.verificationDefaultCost="0.00",this.currentCalibration.verificationCurrencyId=null,this.currentCalibration.verificationGlAccountId=null,this.currentCalibration.verificationMemo=""}inspectionMethod(){this.currentCalibration.inspectionFrequencyMonths=0,this.currentCalibration.inspectionFrequencyDays=0,this.currentCalibration.inspectionDefaultVendorId=null,this.currentCalibration.inspectionDefaultCost="0.00",this.currentCalibration.inspectionCurrencyId=null,this.currentCalibration.inspectionGlaAccountId=null,this.currentCalibration.inspectionMemo=""}ceretificationMethod(){this.currentCalibration.certificationFrequencyMonths=0,this.currentCalibration.certificationFrequencyDays=0,this.currentCalibration.certificationDefaultVendorId=null,this.currentCalibration.certificationDefaultCost="0.00",this.currentCalibration.certificationCurrencyId=null,this.currentCalibration.certificationGlAccountId=null,this.currentCalibration.certificationMemo=""}calibrationMethod(){this.currentCalibration.calibrationFrequencyMonths=0,this.currentCalibration.calibrationFrequencyDays=0,this.currentCalibration.calibrationDefaultVendorId=null,this.currentCalibration.calibrationDefaultCost="0.00",this.currentCalibration.calibrationCurrencyId=null,this.currentCalibration.calibrationGlAccountId=null,this.currentCalibration.calibrationMemo="",this.currentCalibration.assetCalibrationMin="",this.currentCalibration.assetCalibrationMinTolerance="",this.currentCalibration.assetCalibratonMax="",this.currentCalibration.assetCalibrationMaxTolerance="",this.currentCalibration.assetCalibrationExpected="",this.currentCalibration.assetCalibrationExpectedTolerance="",this.currentCalibration.assetCalibrationMemo=""}errorMessageHandler(t){this.isSpinnerVisible=!1,this.alertService.showMessage("Error",t,F.d.error)}parsedText(t){if(t){return(new DOMParser).parseFromString("<!doctype html><body>"+t,"text/html").body.textContent}}};X.ctorParameters=()=>[{type:S.ActivatedRoute},{type:x.a},{type:j.a},{type:F.b},{type:U.a},{type:O.a},{type:L.c},{type:V.a},{type:S.Router},{type:K.a}],s.b([Object(a.ViewChild)("tabRedirectConfirmationModal3",{static:!1})],X.prototype,"tabRedirectConfirmationModal3",void 0),X=s.b([Object(a.Component)({selector:"app-asset-calibration",template:s.c(n("bcEE")).default,styles:[s.c(n("v+D9")).default]})],X);var J=n("Ph3x"),Z=n("DDJF"),Q=n("jasi"),tt=n("3fSc"),et=n("wNWc");let nt=class{constructor(t,e,n,s,a,r,i,o,l,c,d,u,p,m){this.router=t,this.modalService=e,this.alertService=n,this.itemMasterService=s,this.route=a,this.assetServices=r,this.dashnumberservices=i,this.authService=o,this.formBuilder=l,this.commonservice=c,this.aircraftManufacturerService=d,this.aircraftModelService=u,this.configurations=p,this.datePipe=m,this.isView=!1,this.sourceItemMasterCap={},this.descriptionbyPart=[],this.allManagemtninfo=[],this.maincompanylist=[],this.auditHisory=[],this.auditHistory=[],this.manufacturerData=[],this.formData=new FormData,this.selectedAircraftDataModels=[],this.enablePopupData=!1,this.currentVendorModels=[],this.selectedModels=[],this.assetRecordId=0,this.disableSaveForEdit=!1,this.selectedModel=[],this.capabilityEditCollection=[],this.isEditMode=!1,this.isDeleteMode=!1,this.allAssets=[],this.pageNumber=0,this.selectedOnly=!1,this.allCapesInfo=[],this.currentCapes={},this.dashNumberList=[],this.viewTable=!1,this.aircraftdata=[],this.newDashnumValue=[],this.selectAircraftManfacturer=[],this.selectedAircraftModel=[],this.selectedDashNumbers=[],this.selectedATAchapter=[],this.modelUnknown=!1,this.dashNumberUnknown=!1,this.LoadValues=[],this.totalRecords=0,this.totalRecords1=0,this.pageIndex=0,this.pageSize=10,this.pageSize1=10,this.totalPages=0,this.totalPages1=0,this.searchAircraftParams="",this.aircraftTypeId=0,this.partNumber="",this.capabilityid=0,this.aircraftmodelId=0,this.aircraftdashId=0,this.status="Active",this.currentstatus2="Active",this.currentDeletedstatus=!1,this.assetCapesId=0,this.aircraftDataEdit={},this.actionHide=!1,this.filterText="",this.selectedRows=[],this.capabilityForm={selectedCap:"",CapabilityTypeId:0,selectedPartId:[],selectedAircraftDataModels:[],selectedAircraftModelTypes:[],selectedAircraftTypes:[],selectedManufacturer:[],selectedModel:[],selectedDashNumbers:[],selectedDashNumbers2:[],modelUnknown:!1},this.setEditArray=[],this.colaircraft=[{field:"CapibilityType",header:"Capability Type",star:!0},{field:"PartNumber",header:"PN",star:!0},{field:"AircraftType",header:"Aircraft Manufacturer",star:!0},{field:"AircraftModel",header:"Model",star:!1},{field:"DashNumber",header:"Dash Number",star:!1}],this.isSpinnerVisibleView=!1,this.arrayItemMasterlist=[],this.dateObject={},this.restorerecord={},this.managementStructureData=[],this.disableCapesSave=!1,this.isSpinnerVisible=!1,this.exportData=[],this.cols=[{field:"partNumber",header:"PN",star:!0},{field:"partDescription",header:"PN Description",star:!1},{field:"captypedescription",header:"Capability Type",star:!0},{field:"manufacturer",header:"Aircraft Manufacturer",star:!0},{field:"modelname",header:"Model",star:!1},{field:"dashnumber",header:"Dash Number",star:!1},{field:"createdDate",header:"Created Date",star:!1},{field:"createdBy",header:"Created By",star:!1},{field:"updatedDate",header:"Updated Date",star:!1},{field:"updatedBy",header:"Updated By",star:!1}],this.selectedColumns=this.cols,this.AssetId=this.router.snapshot.params.id,this.activeIndex=1,null!=this.assetServices.listCollection&&1==this.assetServices.isEditMode?(this.showLable=!0,this.currentAsset=this.assetServices.listCollection,this.assetServices.listCollection&&(this.local=this.assetServices.listCollection),0==this.isView&&this.aircraftManfacturerData("")):null!=this.assetServices.generalCollection&&(this.showLable=!0,this.currentAsset=this.assetServices.generalCollection,this.assetServices.generalCollection&&(this.local=this.assetServices.generalCollection,this.currentCapes=this.local),0==this.isView&&this.aircraftManfacturerData(""))}ngOnInit(){0==this.assetServices.isEditMode?this.breadcrumbs=[{label:"Asset"},{label:"Create Asset"}]:this.breadcrumbs=[{label:"Asset"},{label:"Edit Asset"}],this.capabilitiesForm=this.formBuilder.group({mfgForm:this.formBuilder.array([]),overhaulForm:this.formBuilder.array([]),distributionForm:this.formBuilder.array([]),certificationForm:this.formBuilder.array([]),repairForm:this.formBuilder.array([]),exchangeForm:this.formBuilder.array([])}),this.AssetId=this.router.snapshot.params.id,0==this.isView&&(this.GetAssetData(this.AssetId),this.ptnumberlistdata(""),this.aircraftManfacturerData(""),this.getCapabilityTypeData(""))}ngOnChanges(t){this.viewassetRecordId=this.viewassetRecordId}getmemo(t){this.disableAdd=!1}onFilterCapability(t){this.getCapabilityTypeData(t)}getCapabilityTypeData(t){this.setEditArray=[],1==this.assetServices.isCapsEditMode?this.setEditArray.push(this.AssetCapesId?this.AssetCapesId:0):this.setEditArray.push(0);const e=t||"";this.commonservice.autoSuggestionSmartDropDownList("CapabilityType","CapabilityTypeId","Description",e,!0,20,this.setEditArray.join()).subscribe(t=>{this.capabilityTypeData=t},t=>{const e=t;this.errorMessageHandler(e)})}GetAssetData(t){this.assetServices.getByAssetId(t).subscribe(t=>{this.onassetdataSuccessful(t[0])},t=>{const e=t;this.errorMessageHandler(e)})}onassetdataSuccessful(t){this.assetServices.isEditMode=!0,this.activeIndex=1,this.assetServices.indexObj.next(this.activeIndex),this.assetServices.listCollection=t,null!=this.assetServices.listCollection?(this.showLable=!0,this.currentAsset=this.assetServices.listCollection,this.assetServices.listCollection&&(this.local=this.assetServices.listCollection)):null!=this.assetServices.generalCollection&&(this.showLable=!0,this.currentAsset=this.assetServices.generalCollection,this.assetServices.generalCollection&&(this.local=this.assetServices.generalCollection,this.currentCapes=this.local))}getAuditHistoryById(t){this.isSpinnerVisibleView=!0,this.assetServices.getAssetCapesAudit(t.assetCapesId).subscribe(t=>{this.auditHistory=t,setTimeout(()=>{this.isSpinnerVisibleView=!1},1200)},t=>{this.isSpinnerVisibleView=!1;const e=t;this.errorMessageHandler(e)})}getColorCodeForHistory(t,e,n){const s=this.auditHistory,a=s.length;if(t>=0&&t<=a)return t+1===a||s[t+1][e]===n}sampleExcelDownloadForCapes(){const t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=AssetCapes&fileName=AssetCapes.xlsx";window.location.assign(t)}CapesExcelUpload(t){const e=t.target.files;if(e.length>0){this.formData.append("file",e[0]),this.formData.append("masterCompanyId",this.authService.currentUser.masterCompanyId.toString()),this.formData.append("createdBy",this.userName),this.formData.append("updatedBy",this.userName),this.formData.append("isActive","true"),this.formData.append("isDeleted","false");const n={masterCompanyId:this.authService.currentUser.masterCompanyId,createdBy:this.userName,updatedBy:this.userName,isActive:!0,isDeleted:!1};this.assetServices.CapesUpload(this.formData,this.currentAsset.assetRecordId,n).subscribe(e=>{t.target.value="",this.formData=new FormData,this.getList(this.lazyLoadEventData),this.alertService.showMessage("Success","Successfully Uploaded  ",F.d.success)},t=>{const e=t;this.errorMessageHandler(e)})}}ptnumberlistdata(t=""){this.arrayItemMasterlist=[],1==this.assetServices.isCapsEditMode?this.arrayItemMasterlist.push(this.aircraftDataEdit.partNumber?this.aircraftDataEdit.partNumber:0):this.arrayItemMasterlist.push(0),this.commonservice.autoSuggestionSmartDropDownList("ItemMaster","ItemMasterId","PartNumber",t,!0,20,this.arrayItemMasterlist.join()).subscribe(t=>{this.allPartnumbersInfo=t.map(t=>({partNumber:t.label,itemMasterId:t.value})),this.partCollection=this.allPartnumbersInfo},t=>{const e=t;this.errorMessageHandler(e)})}loadData(t){this.lazyLoadEventData=t;const e=parseInt(t.first)/t.rows;this.pageIndex=e,this.pageSize=t.rows,t.first=e,this.lazyLoadEventDataInput=t,this.lazyLoadEventDataInput.globalFilter=this.filterText,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:this.status?this.status:"Active"});const n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.getList(n)}getList(t){return s.a(this,void 0,void 0,(function*(){const e=!!this.currentDeletedstatus;t.filters.isDeleted=e;const n=Object.assign({},t,{filters:Object(z.j)(t.filters)});0==this.isView?this.recordId=this.currentAsset?this.currentAsset.assetRecordId:this.AssetId:this.recordId=this.viewassetRecordId,null!=this.recordId&&(this.isSpinnerVisible=!0,this.assetServices.getAssetCapesAll(n,this.recordId).subscribe(t=>{this.data=t.results,this.allCapesInfo=this.data,this.totalRecords=t.totalRecordsCount,this.totalPages=Math.ceil(this.totalRecords/this.pageSize),this.isSpinnerVisible=!1},t=>{this.isSpinnerVisible=!1;const e=t;this.errorMessageHandler(e)}))}))}dateFilterForTable(t,e){if(this.dateObject={},t=W(t).format("MM/DD/YYYY"),W(t).format("MM/DD/YY"),""!=t&&W(t,"MM/DD/YYYY",!0).isValid()){"createdDate"==e?this.dateObject={createdDate:t}:"updatedDate"==e&&(this.dateObject={updatedDate:t}),this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject);const n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.getList(n)}else{this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject),this.lazyLoadEventDataInput.filters&&this.lazyLoadEventDataInput.filters.createdDate&&delete this.lazyLoadEventDataInput.filters.createdDate,this.lazyLoadEventDataInput.filters&&this.lazyLoadEventDataInput.filters.updatedDate&&delete this.lazyLoadEventDataInput.filters.updatedDate,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject);const t=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.getList(t)}}getCapesListByStatus(t){this.currentstatus2=t,this.selectedRows=[],this.pageNumber=0;const e=parseInt(this.lazyLoadEventDataInput.first)/this.lazyLoadEventDataInput.rows;this.pageIndex=e,this.pageSize=this.lazyLoadEventDataInput.rows,this.lazyLoadEventDataInput.first=e,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:t});const n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});n.first=0,this.getList(n)}getDeleteListByStatus(t){this.pageNumber=0,this.selectedRows=[],this.currentDeletedstatus=!0;const e=parseInt(this.lazyLoadEventDataInput.first)/this.lazyLoadEventDataInput.rows;if(this.pageIndex=e,this.pageSize=this.lazyLoadEventDataInput.rows,this.lazyLoadEventDataInput.first=e,this.status=status,1==t){this.currentstatus2=this.currentstatus2,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:this.currentstatus2});const t=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.getList(t)}else{this.currentDeletedstatus=!1,this.currentstatus2=this.currentstatus2,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:this.currentstatus2});const t=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.getList(t)}}globalSearch(t){const e=parseInt(this.lazyLoadEventDataInput.first)/this.lazyLoadEventDataInput.rows;this.pageIndex=e,this.pageSize=this.lazyLoadEventDataInput.rows,this.lazyLoadEventDataInput.first=e,this.lazyLoadEventDataInput.globalFilter=t,this.filterText=t,this.status=this.currentstatus2,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:this.currentstatus2});const n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters),globalFilter:t});this.getList(n)}restoreRecord(){this.commonservice.updatedeletedrecords("AssetCapes","AssetCapesId",this.restorerecord.assetCapesId).subscribe(t=>{this.getDeleteListByStatus(!0),this.modal.close(),this.alertService.showMessage("Success","Successfully Updated Status",F.d.success)},t=>{const e=t;this.errorMessageHandler(e)})}restore(t,e){this.restorerecord=e,this.assetCapesId=e.assetCapesId,this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1,windowClass:"assetMangecls"})}get mfgFormArray(){return this.capabilitiesForm.get("mfgForm")}get overhaulFormArray(){return this.capabilitiesForm.get("overhaulForm")}get distributionFormArray(){return this.capabilitiesForm.get("distributionForm")}get certificationFormArray(){return this.capabilitiesForm.get("certificationForm")}get repairFormArray(){return this.capabilitiesForm.get("repairForm")}get exchangeFormArray(){return this.capabilitiesForm.get("exchangeForm")}changeOfTab(t){const{assetId:e}=this.AssetId;this.AssetId=this.AssetId?this.AssetId:this.assetServices.listCollection.assetRecordId,1==this.assetServices.isEditMode&&("General"===t?(this.activeIndex=0,this.route.navigateByUrl("assetmodule/assetpages/app-edit-asset/"+this.AssetId)):"Capes"===t?(this.activeIndex=1,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/"+this.AssetId)):"Calibration"===t?(this.activeIndex=2,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration/"+this.AssetId)):"Maintenance"==t&&(this.activeIndex=3,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-maintenance-warranty/"+this.AssetId)))}partEventHandler(t){if(t&&""!=t.target.value){let e=t.target.value.toLowerCase();this.onSelectedId&&(e==this.onSelectedId.toLowerCase()?this.disableSave=!0:this.disableSave=!1)}}partPNentHandler(t){if(""!=t.target.value){let e=t.target.value.toLowerCase();this.selectedActionName&&(e==this.selectedActionName.toLowerCase()?this.disableSavepartNumber=!0:(this.disableSavepartNumber=!1,this.sourceItemMasterCap.partDescription="",this.disableSavepartDescription=!1))}this.ptnumberlistdata(t.target.value)}onCapabilityTypeSelection(t){if(this.capabilityid=t.value,this.capabilityTypeData)for(let e=0;e<this.capabilityTypeData.length;e++)t.value==this.capabilityTypeData[e].value&&(this.capabilityForm.selectedCap=this.capabilityTypeData[e].label)}partnmId(t){this.sourceItemMasterCap.partId=t.itemMasterId,this.itemMasterId=t.itemMasterId,this.disableSavepartNumber=!0,this.selectedActionName=t.partNumber,this.disableSavepartDescription=!0}filterPNpartItems(t){this.partCollection=this.allPartnumbersInfo,void 0!==t.query&&null!==t.query?this.ptnumberlistdata(t.query):this.ptnumberlistdata("");const e=[...this.allPartnumbersInfo.filter(e=>e.partNumber.toLowerCase().includes(t.query.toLowerCase()))];this.partCollection=e}onAssetIdselection(t){if(this.allAssets)for(let e=0;e<this.allAssets.length;e++)t==this.allAssets[e][0].assetId&&(this.currentAsset.assetRecordId=this.allAssets[e][0].assetRecordId,this.disableSave=!0,this.onSelectedId=t)}onFilteManufacturer(t){this.aircraftManfacturerData(t)}aircraftManfacturerData(t){this.setEditArray=[],1==this.assetServices.isCapsEditMode?this.setEditArray.push(this.aircraftDataEdit.selectedAircraftTypes?this.aircraftDataEdit.assetAcquisitionTypeId:0):this.setEditArray.push(0);const e=t||"";this.commonservice.autoSuggestionSmartDropDownList("AircraftType","AircraftTypeId","Description",e,!0,20,this.setEditArray.join()).subscribe(t=>{this.manufacturerData=t,this.loadingIndicator=!1},t=>{const e=t;this.errorMessageHandler(e)})}loadModalsForExistingRecords(t){t.selectedAircraftTypes&&this.commonservice.smartDropDownList("AircraftModel","AircraftModelId","ModelName","AircraftTypeId",t.selectedAircraftTypes).subscribe(e=>{const n=e.map(t=>Object.assign({},t,{aircraftModelId:t.value,modelName:t.label}));this.onDataLoadaircrafttypeSuccessfulForExisting(n,t)},t=>{const e=t;this.errorMessageHandler(e)})}loadModalsForExistingRecords_1(t,e){e&&this.commonservice.smartDropDownList("AircraftModel","AircraftModelId","ModelName","AircraftTypeId",e).subscribe(e=>{const n=e.map(t=>Object.assign({},t,{aircraftModelId:t.value,modelName:t.label}));this.onDataLoadaircrafttypeSuccessfulForExisting(n,t)},t=>{const e=t;this.errorMessageHandler(e)})}onDataLoadaircrafttypeSuccessfulForExisting(t,e){t&&0!=t.length?(e.selectedAircraftDataModels=[],t.forEach(t=>{if(e.selectedAircraftModelTypes&&0!=e.selectedAircraftModelTypes.length)for(let n=0;n<e.selectedAircraftModelTypes.length;n++)t.aircraftModelId==e.selectedAircraftModelTypes[n]&&e.selectedModel.push({value:t.aircraftModelId,label:t.modelName,aircraftTypeId:e.selectedAircraftTypes});e.selectedAircraftDataModels.push({value:t.aircraftModelId,label:t.modelName,aircraftTypeId:e.selectedAircraftTypes})}),this.displayModalNames(e)):(e.selectedAircraftDataModels=[],e.search_AircraftDashNumberList=[])}displayModalNames(t){switch(t.formArrayName){case"mfgForm":this.mfgFormArray.controls.forEach(e=>{e.controls.aircraftModelName.setValue(this.getAirCraftModalName(t.selectedAircraftDataModels,e.controls.aircraftModelId.value)),this.mfgFormArray.updateValueAndValidity()});break;case"overhaulForm":this.overhaulFormArray.controls.forEach(e=>{e.controls.aircraftModelName.setValue(this.getAirCraftModalName(t.selectedAircraftDataModels,e.controls.aircraftModelId.value))});break;case"distributionForm":this.distributionFormArray.controls.forEach(e=>{e.controls.aircraftModelName.setValue(this.getAirCraftModalName(t.selectedAircraftDataModels,e.controls.aircraftModelId.value))});break;case"certificationForm":this.certificationFormArray.controls.forEach(e=>{e.controls.aircraftModelName.setValue(this.getAirCraftModalName(t.selectedAircraftDataModels,e.controls.aircraftModelId.value))});break;case"repairForm":this.repairFormArray.controls.forEach(e=>{e.controls.aircraftModelName.setValue(this.getAirCraftModalName(t.selectedAircraftDataModels,e.controls.aircraftModelId.value))});break;case"exchangeForm":this.exchangeFormArray.controls.forEach(e=>{e.controls.aircraftModelName.setValue(this.getAirCraftModalName(t.selectedAircraftDataModels,e.controls.aircraftModelId.value))})}}openModelPopups(t){0==this.itemMasterService.isEditMode&&(t.selectedAircraftTypes?this.commonservice.smartDropDownList("AircraftModel","AircraftModelId","ModelName","AircraftTypeId",t.selectedAircraftTypes).subscribe(e=>{const n=e.map(t=>Object.assign({},t,{aircraftModelId:t.value,modelName:t.label}));this.onDataLoadaircrafttypeSuccessful(n,t)}):this.allAircraftinfo=[])}onDataLoadaircrafttypeSuccessful(t,e){e.selectedAircraftDataModels=[],t.forEach(t=>{e.selectedAircraftDataModels.push({value:t.aircraftModelId,label:t.modelName,aircraftTypeId:t.aircraftTypeId})})}ondashnumberSuccessful(t){this.allDashnumberInfo=t}getAircraftDashNumber(t){let e=t.target.value;e&&(e=e.split(":")[1],this.aircraftdashId=e),this.dashnumberservices.getByModelId(this.aircraftdashId).subscribe(t=>{this.ondashnumberSuccessful(t)},t=>{const e=t;this.errorMessageHandler(e)})}aircraftModalChange_1(t,e,n){let s=t;"edit"!=n&&(s=t.target.value,s&&(s=s.split(":")[1])),""!=s&&null!=s&&null!=s?this.dashnumberservices.getCapesDashNumberByModelTypeId(s,e).subscribe(t=>{if(t&&0!=t.length){const e=t.reduce((t,e)=>t.find(t=>t.dashNumberId===e.dashNumberId)?t:t.concat([e]),[]);this.search_AircraftDashNumberList=e.map(t=>({label:t.modelName+"-"+t.dashNumber,value:t.dashNumberId,modelId:t.aircraftModelId}))}},t=>{const e=t;this.errorMessageHandler(e)}):this.search_AircraftDashNumberList=[],this.aircraftDataEdit.aircraftDashNumberId=null}cunstructItemMastars(){this.capabilityEditCollection.forEach(t=>{let e=t.capability;if(1!=e.isDelete){this.currentAsset.assetRecordId=e.assetRecordId;let t=e.capabilityTypeId-1,n=this.capabilityTypeData[t];-1==n.selectedAircraftTypes.indexOf(e.aircraftTypeId)&&(n.selectedAircraftTypes.push(e.aircraftTypeId),n.selectedManufacturer.push({value:e.aircraftTypeId,label:this.getAircraftTypeName(e.aircraftTypeId)})),n.selectedAircraftModelTypes.push(e.aircraftModelId),this.addExistingData(n,e)}}),this.capabilityTypeData.forEach(t=>{t&&t.selectedAircraftModelTypes&&t.selectedAircraftModelTypes.length>0&&this.loadModalsForExistingRecords(t)})}getAircraftTypeName(t){let e="";for(let n=0;n<this.manufacturerData.length;n++)if(this.manufacturerData[n].value==t){e=this.manufacturerData[n].label;break}return e}getAirCraftModalName(t,e){let n="";for(let s=0;s<t.length;s++)if(t[s].value==e){n=t[s].label;break}return n}getExistingRowBuList(t,e){for(let n=0;n<this.allManagemtninfo.length;n++)this.allManagemtninfo[n].parentId==t&&e.buList.push(this.allManagemtninfo[n])}getExistingRowDepartmentlist(t,e){for(let n=0;n<this.allManagemtninfo.length;n++)this.allManagemtninfo[n].parentId==t&&e.departmentList.push(this.allManagemtninfo[n])}getExistingRowDivisionlist(t,e){for(let n=0;n<this.allManagemtninfo.length;n++)this.allManagemtninfo[n].parentId==t&&e.divisionlist.push(this.allManagemtninfo[n])}setManagementStrucureData(t){this.managementStructureData=[],this.checkMSParents(t.managementStructureId),4==this.managementStructureData.length&&(t.companyId=this.managementStructureData[3],t.buisinessUnitId=this.managementStructureData[2],t.departmentId=this.managementStructureData[1],t.divisionId=this.managementStructureData[0]),3==this.managementStructureData.length&&(t.companyId=this.managementStructureData[2],t.buisinessUnitId=this.managementStructureData[1],t.departmentId=this.managementStructureData[0]),2==this.managementStructureData.length&&(t.companyId=this.managementStructureData[1],t.buisinessUnitId=this.managementStructureData[0]),1==this.managementStructureData.length&&(t.companyId=this.managementStructureData[0])}checkMSParents(t){this.managementStructureData.push(t);for(let e=0;e<this.allManagemtninfo.length;e++)if(this.allManagemtninfo[e].managementStructureId==t&&this.allManagemtninfo[e].parentId){this.checkMSParents(this.allManagemtninfo[e].parentId);break}}addExistingData(t,e){let n=e;n.aircraftTypeName=this.getAircraftTypeName(e.aircraftTypeId),n.aircraftModelName="",n.entryDate=new Date,n.isVerified=!1,n.isActive=!0,n.verifiedBy="",n.aircraftManufacturer=this.getAircraftTypeName(e.aircraftTypeId),n.dateVerified=new Date,this.setManagementStrucureData(n);let s=this.formBuilder.group(n);switch(t.formArrayName){case"mfgForm":this.mfgFormArray.push(s);this.mfgFormArray.controls.length;break;case"overhaulForm":this.overhaulFormArray.push(s);this.overhaulFormArray.controls.length;break;case"distributionForm":this.distributionFormArray.push(s);this.distributionFormArray.controls.length;break;case"certificationForm":this.certificationFormArray.push(s);this.certificationFormArray.controls.length;break;case"repairForm":this.repairFormArray.push(s);this.repairFormArray.controls.length;break;case"exchangeForm":this.exchangeFormArray.push(s);this.exchangeFormArray.controls.length}}checkIsExisted(t,e,n,s,a){let r=!1;return s.controls.forEach(s=>{if(s.controls.capabilityTypeId.value==t&&s.controls.aircraftTypeId.value==e&&s.controls.aircraftModelId.value==n)r=!0,s.controls.isDelete.setValue(!1);else{s.controls.aircraftTypeId.value,a.selectedAircraftTypes;let t=s.controls.aircraftModelId.value;a.selectedAircraftModelTypes.indexOf(t)}}),r}dismissModel(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}dismissModelWithAlert(){if(this.aircraftData&&this.aircraftData.length>0){this.nextOrPreviousTab="Close";let t=this.tabRedirectConfirmationModal2;this.modal=this.modalService.open(t,{size:"sm"})}else this.isDeleteMode=!1,this.isEditMode=!1,H("#addShippingInfo").modal("hide")}closeHistory(){H("#contentHist").modal("hide")}redirectToTab(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close(),this.totalRecords1=0,this.totalPages1=0,H("#addShippingInfo").modal("hide")}addModels(t){let e=new Z.a;t.selectedManufacturer.forEach(n=>{if(e.assetRecordId=this.currentAsset.assetRecordId,e.aircraftTypeId=n.value,e.aircraftTypeName=n.label,e.capabilityTypeId=t.CapabilityTypeId,e.capabilityTypeName=t.selectedCap,e.aircraftManufacturer=n.label,e.PartId=t.selectedPartId,e.itemMasterId=this.itemMasterId,e.AssetCapesId=this.AssetCapesId,e.aircraftModelName="Undefined",e.DashNumber="Undefined",0==t.selectedModel.length){let t=this.formBuilder.group(e);this.mfgFormArray.push(t);let n=this.mfgFormArray.controls.length-1;this.mfgFormArray.controls[n].buList=[],this.mfgFormArray.controls[n].departmentList=[],this.mfgFormArray.controls[n].divisionlist=[]}t.selectedModel.forEach(s=>{if(s.aircraftTypeId==n.value){if(e.aircraftModelName=s.label,e.aircraftModelId=s.value,0==t.selectedDashNumbers2.length){let a=this.formBuilder.group(e);if(0==this.checkIsExisted(t.CapabilityTypeId,n.value,s.value,this.mfgFormArray,t)){this.mfgFormArray.push(a);let t=this.mfgFormArray.controls.length-1;this.mfgFormArray.controls[t].buList=[],this.mfgFormArray.controls[t].departmentList=[],this.mfgFormArray.controls[t].divisionlist=[]}}t.selectedDashNumbers2.forEach(a=>{if(a.modelId==s.value){e.DashNumber=a.label,e.AircraftDashNumberId=a.value;t.CapabilityTypeId;let r=this.formBuilder.group(e);if(0==this.checkIsExisted(t.CapabilityTypeId,n.value,s.value,this.mfgFormArray,t)){this.mfgFormArray.push(r);let t=this.mfgFormArray.controls.length-1;this.mfgFormArray.controls[t].buList=[],this.mfgFormArray.controls[t].departmentList=[],this.mfgFormArray.controls[t].divisionlist=[]}else{this.mfgFormArray.push(r);this.mfgFormArray.controls.length}}else{let a=this.formBuilder.group(e);if(0==this.checkIsExisted(t.CapabilityTypeId,n.value,s.value,this.mfgFormArray,t)){this.mfgFormArray.push(a);let t=this.mfgFormArray.controls.length-1;this.mfgFormArray.controls[t].buList=[],this.mfgFormArray.controls[t].departmentList=[],this.mfgFormArray.controls[t].divisionlist=[]}else{this.mfgFormArray.push(a);this.mfgFormArray.controls.length}}})}})})}aircraftModalChange(t,e){t.value;e.selectedModel=[],e.selectedDashNumbers=[],this.search_AircraftDashNumberList=[],0==this.modelUnknown&&e.selectedAircraftModelTypes&&0!=e.selectedAircraftModelTypes.length&&1==this.dashNumberUnknown?this.disableCapesSave=!1:this.disableCapesSave=!0,e.selectedAircraftModelTypes&&0!=e.selectedAircraftModelTypes.length&&this.dashnumberservices.getDashNumberByModelTypeId(e.selectedAircraftModelTypes,e.selectedAircraftTypes).subscribe(t=>{const e=t;this.search_AircraftDashNumberList=e.map(t=>({label:t.dashNumber,value:t.dashNumberId,modelId:t.aircraftModelId}))},t=>{const e=t;this.errorMessageHandler(e)})}dashNumberChange(t,e){let n=t.value;0==this.modelUnknown&&e.selectedAircraftModelTypes&&0!=e.selectedAircraftModelTypes.length&&0==this.dashNumberUnknown&&n?this.disableCapesSave=!1:this.disableCapesSave=!0,e.selectedDashNumbers2=[],n.forEach(t=>{this.search_AircraftDashNumberList.forEach(n=>{t==n.value&&e.selectedDashNumbers2.push(n)})})}cunstructFormForEdit(){this.manufacturerData.length>0&&this.cunstructItemMastars()}resetAircraftModelsorDashNumbers(t,e){this.disableSaveForEdit=!1,this.modelUnknown&&(this.disableCapesSave=!1,this.selectedModelId=void 0,this.selectedDashnumber=void 0,this.capabilityForm.selectedAircraftDataModels=void 0,this.capabilityForm.selectedAircraftModelTypes=void 0,this.capabilityForm.selectedModel=void 0,this.capabilityForm.selectedDashNumbers=void 0,this.capabilityForm.selectedDashNumbers2=void 0),1==e&&0==t.target.checked&&0==this.assetServices.isCapsEditMode&&(this.disableCapesSave=!0),1==e&&1==t.target.checked&&0==this.assetServices.isCapsEditMode&&(this.disableCapesSave=!1),2==e&&0==t.target.checked&&0==this.assetServices.isCapsEditMode&&(this.disableCapesSave=!0),2==e&&1==t.target.checked&&0==this.assetServices.isCapsEditMode&&(this.disableCapesSave=!1),1==e&&0==t.target.checked&&1==this.assetServices.isCapsEditMode&&(this.disableSaveForEdit=!0),2==e&&0==t.target.checked&&1==this.assetServices.isCapsEditMode&&(this.disableSaveForEdit=!0),this.dashNumberUnknown&&(0==this.modelUnknown&&this.capabilityForm.selectedAircraftModelTypes&&0!=this.capabilityForm.selectedAircraftModelTypes.length&&this.dashNumberUnknown&&(this.disableCapesSave=!1),0==this.modelUnknown&&this.aircraftDataEdit.aircraftModelId&&this.dashNumberUnknown&&(this.disableSaveForEdit=!1),this.selectedDashnumber=void 0,this.capabilityForm.selectedDashNumbers=void 0,this.capabilityForm.selectedDashNumbers2=void 0),1==e&&0==t.target.checked&&1==this.assetServices.isCapsEditMode&&(this.loadModalsForExistingRecords_1(this.capabilityForm,this.aircraftDataEdit.aircraftTypeId),this.aircraftDataEdit.aircraftModelId="",this.aircraftDataEdit.aircraftDashNumberId="",this.dashNumberUnknown=!0),1==e&&1==t.target.checked&&1==this.assetServices.isCapsEditMode&&(this.aircraftDataEdit.aircraftModelId="",this.aircraftDataEdit.aircraftDashNumberId=""),2==e&&0==t.target.checked&&1==this.assetServices.isCapsEditMode&&(this.aircraftModalChange_1(this.aircraftDataEdit.aircraftModelId,this.aircraftDataEdit.aircraftTypeId,"edit"),this.aircraftDataEdit.aircraftDashNumberId=""),2==e&&1==t.target.checked&&1==this.assetServices.isCapsEditMode&&(this.aircraftDataEdit.aircraftDashNumberId="")}openDelete(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.assetServices.CapeslistCollection=e,this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1,windowClass:"assetMangecls"})}removeAsset(){this.assetServices.removeCapesById(this.assetServices.CapeslistCollection.assetCapesId).subscribe(t=>{this.alertService.showMessage("Success","Asset Capes removed successfully.",F.d.success),this.getList(this.lazyLoadEventData),this.modal.close()},t=>{const e=t;this.errorMessageHandler(e)})}resetFormArray(t){switch(t.formArrayName){case"mfgForm":this.mfgFormArray.controls=[];break;case"overhaulForm":this.overhaulFormArray.controls=[];break;case"distributionForm":this.distributionFormArray.controls=[];break;case"certificationForm":this.certificationFormArray.controls=[];break;case"repairForm":this.repairFormArray.controls=[];break;case"exchangeForm":this.exchangeFormArray.controls=[]}}getAircraftModelByManfacturer(t){this.newValue=t.target.value,this.newValue&&(this.aircraftModelService.getAircraftModelListByManufactureId(this.selectedAircraftId).subscribe(t=>{const e=t[0];this.LoadValues=e.map(t=>({label:t.modelName,value:t}))},t=>{const e=t;this.errorMessageHandler(e)}),this.selectedModelId=void 0,this.selectedDashnumber=void 0)}manufacturerChange(t,e){this.capabilityForm.selectedAircraftModelTypes="",this.capabilityForm.selectedAircraftDataModels="";let n=t.value;e.selectedManufacturer=[],e.selectedAircraftDataModels=[],this.search_AircraftDashNumberList=[],this.selectedAircraftId=n,this.aircraftTypeId=n,1==this.assetServices.isCapsEditMode&&this.loadModalsForExistingRecords_1(e,this.selectedAircraftId),this.manufacturerData.forEach(t=>{n==t.value&&(e.selectedManufacturer.push(t),this.newValue=t.label)}),this.aircraftDataEdit.aircraftModelId=null,this.aircraftDataEdit.aircraftDashNumberId=null}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}openCapess(){this.aircraftData=[],this.capabilityForm={},this.modelUnknown=!0,this.assetServices.isCapsEditMode=!1,this.disableAdd=!0,this.actionHide=!0,this.dashNumberUnknown=!0}mapAircraftInformation(t){const e=Object.assign({},t);e.selectedDashNumbers&&0==e.selectedDashNumbers.length&&(this.dashNumberUnknown=!0),this.viewTable=!0,this.assetServices.isCapsEditMode||(this.assetServices.isCapsEditMode=!1),this.searchAircraftParams=`CapabilityId=${e.CapabilityTypeId}&PartId=${this.itemMasterId}&AircraftTypeId=${e.selectedAircraftTypes}&AircraftModelId=${e.selectedAircraftModelTypes}&DashNumberId=${e.selectedDashNumbers?e.selectedDashNumbers:void 0}`,this.assetServices.GetAssetCapesRecordCheck(this.currentAsset.assetRecordId,this.searchAircraftParams).subscribe(t=>{this.actionHide=!1;t[0];if(null==t[0]){if(0==this.assetServices.isCapsEditMode)void 0!==e.selectedAircraftTypes&&void 0!==e.selectedAircraftModelTypes&&void 0!==e.selectedDashNumbers&&this.dashnumberservices.getAllDashModels(e.selectedAircraftModelTypes,e.selectedAircraftTypes,e.selectedDashNumbers).subscribe(t=>{const n=t;this.aircraftData=n.map(t=>({AircraftType:t.aircraft,AircraftModel:t.model,DashNumber:t.dashNumber,AircraftModelId:t.modelid,DashNumberId:t.dashNumberId,CapibilityType:e.selectedCap,PartNumber:e.selectedPartId.partNumber,CapabilityId:e.CapabilityTypeId,ItemMasterId:this.itemMasterId,AircraftTypeId:e.selectedAircraftTypes,AircraftDashNumberId:t.dashNumberId,AssetRecordId:this.currentAsset.assetRecordId,MasterCompanyId:this.authService.currentUser.masterCompanyId,CreatedBy:this.userName,UpdatedBy:this.userName,CreatedDate:new Date,UpdatedDate:new Date,isActive:!0,isDelete:!1}))}),void 0!==this.selectedAircraftId&&this.modelUnknown&&(this.aircraftData=[{AircraftType:this.newValue,AircraftModel:null,DashNumber:null,AircraftModelId:"",DashNumberId:"",CapibilityType:e.selectedCap,PartNumber:e.selectedPartId.partNumber,CapabilityId:e.CapabilityTypeId,ItemMasterId:this.itemMasterId,AircraftTypeId:e.selectedAircraftTypes,AircraftDashNumberId:null,AssetRecordId:this.currentAsset.assetRecordId,MasterCompanyId:this.authService.currentUser.masterCompanyId,CreatedBy:this.userName,UpdatedBy:this.userName,CreatedDate:new Date,UpdatedDate:new Date,isActive:!0,isDelete:!1}]),void 0!==e.selectedAircraftTypes&&void 0!==e.selectedAircraftModelTypes&&(this.dashNumberUnknown||e.selectedDashNumbers&&0==e.selectedDashNumbers.length)&&e.selectedAircraftModelTypes&&0!=e.selectedAircraftModelTypes.length&&(this.aircraftData=e.selectedAircraftModelTypes.map(t=>({AircraftType:this.newValue,AircraftModel:t?Object(z.g)("label","value",t,e.selectedAircraftDataModels):null,DashNumber:null,AircraftModelId:t,DashNumberId:"",CapibilityType:e.selectedCap,PartNumber:e.selectedPartId.partNumber,CapabilityId:e.CapabilityTypeId,ItemMasterId:this.itemMasterId,AircraftTypeId:e.selectedAircraftTypes,AircraftDashNumberId:null,AssetRecordId:this.currentAsset.assetRecordId,MasterCompanyId:this.authService.currentUser.masterCompanyId,CreatedBy:this.userName,UpdatedBy:this.userName,CreatedDate:new Date,UpdatedDate:new Date,isActive:!0,isDelete:!1})));else{if(e.selectedAircraftModelTypes&&e.selectedAircraftModelTypes.length>1||e.selectedDashNumbers&&e.selectedDashNumbers.length>1)return void this.alertService.showMessage("","Multiple Records cannot be added in edit",F.d.error);void 0!==e.selectedAircraftTypes&&void 0!==e.selectedAircraftModelTypes&&void 0!==e.selectedDashNumbers&&this.dashnumberservices.getAllDashModels(e.selectedAircraftModelTypes,e.selectedAircraftTypes,e.selectedDashNumbers).subscribe(t=>{const n=t;this.aircraftData=n.map(t=>({AssetCapesId:this.AssetCapesId,AircraftType:t.aircraft,AircraftModel:t.model,DashNumber:t.dashNumber,AircraftModelId:t.modelid,DashNumberId:t.dashNumberId,CapibilityType:e.selectedCap,PartNumber:e.selectedPartId.partNumber,CapabilityId:e.CapabilityTypeId,ItemMasterId:this.itemMasterId,AircraftTypeId:e.selectedAircraftTypes,AircraftDashNumberId:t.dashNumberId,AssetRecordId:this.currentAsset.assetRecordId,MasterCompanyId:this.authService.currentUser.masterCompanyId,CreatedBy:this.userName,UpdatedBy:this.userName,CreatedDate:new Date,UpdatedDate:new Date,isActive:!0,isDelete:!1}))}),void 0!==this.selectedAircraftId&&this.modelUnknown&&(this.aircraftData=[{AssetCapesId:this.AssetCapesId,AircraftType:this.newValue,AircraftModel:null,DashNumber:null,AircraftModelId:"",DashNumberId:"",CapibilityType:e.selectedCap,PartNumber:e.selectedPartId.partNumber,CapabilityId:e.CapabilityTypeId,ItemMasterId:this.itemMasterId,AircraftTypeId:e.selectedAircraftTypes,AircraftDashNumberId:null,AssetRecordId:this.currentAsset.assetRecordId,MasterCompanyId:this.authService.currentUser.masterCompanyId,CreatedBy:this.userName,UpdatedBy:this.userName,CreatedDate:new Date,UpdatedDate:new Date,isActive:!0,isDelete:!1}]),void 0!==this.selectedAircraftId&&void 0!==e.selectedModel&&this.dashNumberUnknown&&(console.log("dash nu,ber unknown",e),this.aircraftData=e.selectedModel.map(t=>({AssetCapesId:this.AssetCapesId,AircraftType:this.newValue,AircraftModel:t.label,DashNumber:null,AircraftModelId:t.value,DashNumberId:"",CapibilityType:e.selectedCap,PartNumber:e.selectedPartId.partNumber,CapabilityId:e.CapabilityTypeId,ItemMasterId:this.itemMasterId,AircraftTypeId:e.selectedAircraftTypes,AircraftDashNumberId:null,AssetRecordId:this.currentAsset.assetRecordId,MasterCompanyId:this.authService.currentUser.masterCompanyId,CreatedBy:this.userName,UpdatedBy:this.userName,CreatedDate:new Date,UpdatedDate:new Date,isActive:!0,isDelete:!1})))}this.totalRecords1=this.aircraftData.length?this.aircraftData.length:0,console.log("event2",this.totalRecords1,this.pageSize1),this.totalPages1=Math.ceil(this.totalRecords1/this.pageSize1),console.log("event2",this.pageSize1),this.capabilityForm.selectedDashNumbers="",this.dashNumberUnknown=!0,this.capabilityForm.selectedAircraftModelTypes="",this.modelUnknown=!0,this.capabilityForm.selectedAircraftTypes="",this.capabilityForm.selectedPartId="",this.capabilityForm.CapabilityTypeId=""}else this.alertService.showMessage("","Same Record Already Exists",F.d.error)},t=>{const e=t;this.errorMessageHandler(e)})}loadData2(t){const e=parseInt(t.first)/t.rows;this.pageIndex=e,this.pageSize1=e,t.first=e,console.log("event",this.pageSize1)}saveCapabilities(t,e){const n=this.aircraftData;if(0==this.assetServices.isCapsEditMode)this.assetServices.saveManfacturerinforcapes(n,e).subscribe(t=>{this.alertService.showMessage("Success","Asset capes saved successfully.",F.d.success);this.capabilityForm={selectedCap:"",CapabilityTypeId:0,selectedPartId:[],selectedAircraftDataModels:[],selectedAircraftModelTypes:[],selectedAircraftTypes:[],selectedManufacturer:[],selectedModel:[],selectedDashNumbers:[],selectedDashNumbers2:[]},this.getList(this.lazyLoadEventData),this.totalRecords1=0,this.totalPages1=0},t=>{const e=t;this.errorMessageHandler(e)}),this.mfgFormArray.controls=[];else{this.allPartnumbersInfo.forEach(t=>{t.partNumber==this.aircraftDataEdit.partNumber&&(this.aircraftDataEdit.itemMasterId=t.itemMasterId)}),this.aircraftDataEdit.itemMasterId=this.aircraftDataEdit.partNumber.itemMasterId,this.aircraftDataEdit.partNumber=this.aircraftDataEdit.partNumber.partNumber;const t=[Object.assign({},this.aircraftDataEdit,{assetRecordId:this.AssetId,masterCompanyId:this.authService.currentUser.masterCompanyId,createdBy:this.userName,updatedBy:this.userName})];this.assetServices.saveManfacturerinforcapes(t,e).subscribe(t=>{this.alertService.showMessage("Success","Asset capes updated successfully.",F.d.success);this.capabilityForm={selectedCap:"",CapabilityTypeId:0,selectedPartId:[],selectedAircraftDataModels:[],selectedAircraftModelTypes:[],selectedAircraftTypes:[],selectedManufacturer:[],selectedModel:[],selectedDashNumbers:[],selectedDashNumbers2:[]},this.getList(this.lazyLoadEventData)},t=>{const e=t;this.errorMessageHandler(e)}),this.mfgFormArray.controls=[]}"add"==e?H("#addShippingInfo").modal("hide"):this.modal.close()}addBtnTitle(t){let e="";return e=this.currentAsset.assetRecordId<1?"Please Select PN":0==t.selectedAircraftTypes.length?"Please Select Aircraft Type":0==t.selectedAircraftModelTypes.length?"Please Select Aircraft Modal":"Add "+t.Description,e}validateForm(t,e){let n="";return t.get(e).valid||(n="form-validation-error"),n}openCapes(t){this.isEditMode=!1,this.assetServices.isCapsEditMode=!1,this.isDeleteMode=!0,this.mfgFormArray.controls=[],this.aircraftData=[],this.capabilityForm={selectedCap:"",CapabilityTypeId:0,selectedPartId:[],selectedAircraftDataModels:[],selectedAircraftModelTypes:[],selectedAircraftTypes:[],selectedManufacturer:[],selectedModel:[],selectedDashNumbers:[],selectedDashNumbers2:[],modelUnknown:!1},this.modelUnknown=!1,this.dashNumberUnknown=!1,this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1})}onCapesLoaded(t){this.allCapesInfo=t}loadCapesData(){this.currentAsset&&this.assetServices.getcapabilityListData(this.currentAsset.assetRecordId).subscribe(t=>{this.onCapesLoaded(t[0])},t=>{const e=t;this.errorMessageHandler(e)})}getmemo2(t){this.disableSaveForEdit=!1}opencapesToEdit(t,e){this.disableSaveForEdit=!0,this.aircraftDataEdit={},this.mfgFormArray.controls=[],this.overhaulFormArray.controls=[],this.distributionFormArray.controls=[],this.certificationFormArray.controls=[],this.repairFormArray.controls=[],this.exchangeFormArray.controls=[],this.capabilityEditCollection=[];let n=[];this.assetServices.isCapsEditMode=!0,this.isSaving=!0,this.AssetCapesId=e.assetCapesId,this.loadModalsForExistingRecords_1(this.capabilityForm,e.aircraftTypeId),this.aircraftModalChange_1(e.aircraftModelId,e.aircraftTypeId,"edit"),this.assetServices.getAssetCapabilityData(e.assetCapesId).subscribe(t=>{n=t,this.aircraftDataEdit=t[0],this.aircraftDataEdit.partNumber={partNumber:t[0].partNumber,itemMasterId:t[0].itemMasterId},n&&(this.capabilityid=t[0].capabilityId,this.partNumber=t[0].partNumber,this.itemMasterId=t[0].itemMasterId,this.aircraftTypeId=t[0].aircraftTypeId,this.aircraftmodelId=t[0].aircraftModelId,this.aircraftdashId=t[0].aircraftDashNumberId),this.aircraftDataEdit.aircraftModelId?this.modelUnknown=!1:this.modelUnknown=!0,this.aircraftDataEdit.aircraftDashNumberId?this.dashNumberUnknown=!1:this.dashNumberUnknown=!0},t=>{const e=t;this.errorMessageHandler(e)}),this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1})}saveCapes(){this.assetServices.listCollection=this.local,this.activeIndex=2,this.assetServices.indexObj.next(this.activeIndex);const{assetId:t}=this.local;this.alertService.showMessage("Success","Asset capes saved successfully.",F.d.success),this.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration/"+this.local.assetRecordId)}backClick(){this.assetServices.listCollection=this.local,this.activeIndex=0,this.assetServices.indexObj.next(this.activeIndex),this.assetServices.isEditMode=!0,this.isSaving=!0;const{assetId:t}=this.local;this.route.navigateByUrl("/assetmodule/assetpages/app-edit-asset/"+this.local.assetRecordId)}toggleActiveStatus(t){this.assetServices.updateCapes({assetCapesId:t.assetCapesId,isActive:t.isActive},this.userName).subscribe(t=>{this.alertService.showMessage("Success","Asset capes updated successfully.",F.d.success),this.getList(this.lazyLoadEventData)},t=>{const e=t;this.errorMessageHandler(e)})}onCapesDataSuccessful(t,e){Object.assign({},t,{isActive:e});this.alertService.showMessage("Success","Asset capes saved successfully.",F.d.success)}onCapesDataFail(t){}nextClick(){this.currentAsset=this.assetServices.listCollection,this.activeIndex=2,this.assetServices.indexObj.next(this.activeIndex);const{assetRecordId:t}=this.currentAsset;this.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration/"+t)}closeDeleteModal(){H("#downloadConfirmation").modal("hide")}exportCSV(t){this.exportData=[],this.isSpinnerVisible=!0;const e=!!this.currentDeletedstatus,{assetRecordId:n}=this.currentAsset;let s={first:0,rows:t.totalRecords,sortOrder:1,filters:{status:this.currentstatus2,isDeleted:e},globalFilter:""};this.assetServices.downloadAllAssetCapsList(s,n).subscribe(e=>{this.loadingIndicator=!1,t._value=e.results.map(t=>Object.assign({},t,{createdDate:t.createdDate?this.datePipe.transform(t.createdDate,"MMM-dd-yyyy hh:mm a"):"",updatedDate:t.updatedDate?this.datePipe.transform(t.updatedDate,"MMM-dd-yyyy hh:mm a"):""})),t.exportCSV(),t.value=this.allCapesInfo,this.isSpinnerVisible=!1},t=>{const e=t;this.errorMessageHandler(e)})}errorMessageHandler(t){this.isSpinnerVisible=!1,this.alertService.showMessage("Error",t,F.d.error)}changeStatus(t){}};nt.ctorParameters=()=>[{type:S.ActivatedRoute},{type:L.c},{type:F.b},{type:J.a},{type:S.Router},{type:x.a},{type:Q.a},{type:U.a},{type:i.FormBuilder},{type:O.a},{type:et.a},{type:tt.a},{type:_.a},{type:c.DatePipe}],s.b([Object(a.ViewChild)("tabRedirectConfirmationModal2",{static:!1})],nt.prototype,"tabRedirectConfirmationModal2",void 0),s.b([Object(a.Input)()],nt.prototype,"isView",void 0),s.b([Object(a.Input)()],nt.prototype,"viewassetRecordId",void 0),nt=s.b([Object(a.Component)({selector:"app-asset-capes",template:s.c(n("1tnc")).default,animations:[T.a],providers:[c.DatePipe],styles:[s.c(n("PNNn")).default]})],nt);let st=class{constructor(t){this.assetService=t}ngAfterViewInit(){throw new Error("Method not implemented.")}ngOnInit(){this.assetService.currentUrl="/assetmodule/assetpages/app-asset-general-information",this.assetService.bredcrumbObj.next(this.assetService.currentUrl),this.assetService.ShowPtab=!0,this.assetService.alertObj.next(this.assetService.ShowPtab),this.activeIndex=0}};st.ctorParameters=()=>[{type:x.a}],st=s.b([Object(a.Component)({selector:"app-asset-general-information",template:s.c(n("k+MB")).default,styles:[s.c(n("nFeV")).default]})],st);let at=class{constructor(t,e,n,s,a,r,i,o,l){this.router=t,this.assetService=e,this.vendorService=n,this.route=s,this.authService=a,this.modalService=r,this.alertService=i,this.glAccountService=o,this.commonservice=l,this.currentMaintenance={},this.disableSaveForEdit=!1,this.isSpinnerVisible=!1,this.allGlInfo=[],this.allVendorInfo=[],this.formData=new FormData,this.warrantyCompanySelectList=[],this.isShowVendorDropDown=!1,this.isShowOtherTextBox=!1,this.finalData={},this.setEditArray=[],this.arrayVendlsit=[],this.datadissmiss=!1,this.allVendorInfoFilter=[],this.allGlInfoFilter=[],this.disableEditor=!0,this.AssetId=this.router.snapshot.params.id,this.activeIndex=3}ngOnInit(){0==this.assetService.isEditMode?this.breadcrumbs=[{label:"Asset"},{label:"Create Asset"}]:this.breadcrumbs=[{label:"Asset"},{label:"Edit Asset"}],this.getModuleListForVendorOther(),this.AssetId=this.router.snapshot.params.id,this.AssetId&&this.GetAssetData(this.AssetId),this.disableSaveForEdit=!0,this.activeIndex=3,this.glList(""),this.vendorList("")}GetAssetData(t){this.isSpinnerVisible=!0,null!=t&&this.assetService.getByAssetId(t).subscribe(t=>{this.onassetdataSuccessful(t)},t=>{const e=t;this.errorMessageHandler(e)})}onassetdataSuccessful(t){this.activeIndex=3,this.assetService.indexObj.next(this.activeIndex),this.assetService.listCollection=t[0],this.currentMaintenance=t[t.length-1],this.isSpinnerVisible=!1,this.currentMaintenance.assetRecordId=t[0].assetRecordId,1==this.assetService.listCollection.assetMain&&(this.assetService.isEditMode=!0),this.assetService.listCollection.assetRecordId=t[0].assetRecordId,this.setAutocompleteOnLoad(this.currentMaintenance),0!=this.currentMaintenance.warrantyDefaultVendorId||null!=this.currentMaintenance.warrantyDefaultVendorId?this.warrantyCompanySelectList.forEach(t=>{"Vendor"==t.moduleName&&(this.currentMaintenance.warrantyCompanySelectId=t.moduleId,this.setWarrenty(t.moduleId))}):this.warrantyCompanySelectList.forEach(t=>{"Other"==t.moduleName&&(this.currentMaintenance.warrantyCompanySelectId=t.moduleId,this.setWarrenty(t.moduleId))}),this.glList("")}getmemo(t){this.disableSaveForEdit=!1}getModuleListForVendorOther(){this.commonservice.getModuleListForVendorOther().subscribe(t=>{this.warrantyCompanySelectList=t},t=>{const e=t;this.errorMessageHandler(e)})}setWarrenty(t){this.currentMaintenance.warrantyCompanySelectId=t,this.currentValue="",this.warrantyCompanySelectList.forEach(e=>{e.moduleId==t&&(this.currentValue=e.moduleName)}),"Vendor"==this.currentValue?(this.isShowVendorDropDown=!0,this.isShowOtherTextBox=!1):"Others"==this.currentValue&&(this.isShowOtherTextBox=!0,this.isShowVendorDropDown=!1)}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}removeFile(t){this.formData.delete(t.file.name)}saveWarrenty(){if(this.finalData={},this.currentMaintenance.createdBy=this.userName,this.currentMaintenance.updatedBy=this.userName,this.currentMaintenance.masterCompanyId=this.authService.currentUser.masterCompanyId,1==this.currentMaintenance.assetMain){if(this.currentMaintenance.updatedBy=this.userName,this.currentMaintenance.masterCompanyId=this.authService.currentUser.masterCompanyId,this.isSaving=!0,0!=this.currentMaintenance.assetIsMaintenanceReqd&&0!=this.currentMaintenance.isDepreciable||(this.currentMaintenance.assetMaintenanceIsContract=!1,this.currentMaintenance.assetMaintenanceContractFile="",this.currentMaintenance.maintenanceFrequencyMonths=0,this.currentMaintenance.maintenanceFrequencyDays=0,this.currentMaintenance.maintenanceMemo="",this.currentMaintenance.maintenanceDefaultVendorId=null,this.currentMaintenance.maintenanceGLAccountid=null),this.currentMaintenance.maintenanceFrequencyMonths=this.currentMaintenance.maintenanceFrequencyMonths?this.currentMaintenance.maintenanceFrequencyMonths:0,this.currentMaintenance.maintenanceFrequencyDays=this.currentMaintenance.maintenanceFrequencyDa?this.currentMaintenance.maintenanceFrequencyDa:0,0!=this.currentMaintenance.isWarrantyRequired&&0!=this.currentMaintenance.isDepreciable||(this.currentMaintenance.warranty="",this.currentMaintenance.warrantyCompany="",this.currentMaintenance.warrantyStatus="",this.currentMaintenance.warrantyDefaultVendorId=null,this.currentMaintenance.warrantyGLAccountId=null),1==this.currentMaintenance.assetIsMaintenanceReqd&&0==this.currentMaintenance.maintenanceFrequencyMonths&&0==this.currentMaintenance.maintenanceFrequencyDays)return void this.alertService.showMessage("Warning","Maintenance Months & Days Cant be Zero",F.d.warn);this.finalData=Object.assign({},this.currentMaintenance),this.finalData.maintenanceFrequencyDays=null!=this.finalData.maintenanceFrequencyDays?this.finalData.maintenanceFrequencyDays:0,this.finalData.maintenanceFrequencyMonths=null!=this.finalData.maintenanceFrequencyMonths?this.finalData.maintenanceFrequencyMonths:0,this.finalData.warrantyDefaultVendorId=this.finalData.warrantyDefaultVendorId?this.finalData.warrantyDefaultVendorId.vendorId:null,this.finalData.warrantyGLAccountId=this.finalData.warrantyGLAccountId?this.finalData.warrantyGLAccountId.glAccountId:null,this.finalData.maintenanceGLAccountId=this.finalData.maintenanceGLAccountId?this.finalData.maintenanceGLAccountId.glAccountId:null,this.finalData.maintenanceDefaultVendorId=this.finalData.maintenanceDefaultVendorId?this.finalData.maintenanceDefaultVendorId.vendorId:null,this.isSpinnerVisible=!0,this.assetService.updateAssetMaintance(this.finalData).subscribe(t=>{this.disableSaveForEdit=!0,this.currentMaintenance.updatedBy=this.userName,setTimeout(()=>{this.isSpinnerVisible=!1},1200),this.alertService.showMessage("Success","Asset Maintenance updated successfully.",F.d.success)},t=>{this.isSpinnerVisible=!1;const e=t;this.errorMessageHandler(e)})}else{if(this.finalData=Object.assign({},this.currentMaintenance),this.finalData.warrantyDefaultVendorId=this.finalData.warrantyDefaultVendorId?this.finalData.warrantyDefaultVendorId.vendorId:null,this.finalData.warrantyGLAccountId=this.finalData.warrantyGLAccountId?this.finalData.warrantyGLAccountId.glAccountId:null,this.finalData.maintenanceGLAccountId=this.finalData.maintenanceGLAccountId?this.finalData.maintenanceGLAccountId.glAccountId:null,this.finalData.maintenanceDefaultVendorId=this.finalData.maintenanceDefaultVendorId?this.finalData.maintenanceDefaultVendorId.vendorId:null,this.finalData.maintenanceFrequencyDays=null!=this.finalData.maintenanceFrequencyDays?this.finalData.maintenanceFrequencyDays:0,this.finalData.maintenanceFrequencyMonths=null!=this.finalData.maintenanceFrequencyMonths?this.finalData.maintenanceFrequencyMonths:0,1==this.finalData.assetIsMaintenanceReqd&&0==this.finalData.maintenanceFrequencyMonths&&0==this.finalData.maintenanceFrequencyDays)return void this.alertService.showMessage("Warning","Maintenance Months & Days Cant be Zero",F.d.warn);this.isSpinnerVisible=!0,this.assetService.addAssetMaintance(this.finalData).subscribe(t=>{this.currentMaintenance.assetMain=!0,setTimeout(()=>{this.isSpinnerVisible=!1},1200),this.alertService.showMessage("Success","Asset Maintanance & Warrenty created successfully",F.d.success),this.currentMaintenance.updatedBy=this.userName,this.activeIndex=3},t=>{this.isSpinnerVisible=!1;const e=t;this.errorMessageHandler(e)})}}addNew(){this.route.navigateByUrl("assetmodule/assetpages/app-create-asset"),this.assetService.listCollection={},this.assetService.isEditMode=!1}validateDates(t,e){t&&(t<0||t>31)&&(t="",e.maintenanceFrequencyDays=null,this.alertService.showMessage("Warning","Maintanance Days Cant greater than 31 days",F.d.warn))}changeOfTab(t){1!=this.assetService.isEditMode&&1!=this.currentMaintenance.assetMain||("General"===t?(this.activeIndex=0,this.route.navigateByUrl("assetmodule/assetpages/app-edit-asset/"+this.AssetId)):"Capes"===t?(this.activeIndex=1,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/"+this.AssetId)):"Calibration"===t?(this.activeIndex=2,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration/"+this.AssetId)):"Maintenance"==t&&(this.activeIndex=3,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-maintenance-warranty/"+this.AssetId)))}glList(t){this.setEditArray=[],1==this.assetService.isEditMode?this.setEditArray.push(null!=this.currentMaintenance.warrantyGLAccountId?this.currentMaintenance.warrantyGLAccountId.glAccountId:0,null!=this.currentMaintenance.maintenanceGLAccountId?this.currentMaintenance.maintenanceGLAccountId.glAccountId:0):this.setEditArray.push(0);const e=t||"";this.commonservice.getAutoCompleteDropDownsByCodeWithName("GLAccount","GLAccountId","AccountName","AccountCode",e,20,this.setEditArray.join()).subscribe(t=>{this.allGlInfo=t.map(t=>({glAccountId:t.value,name:t.label})),this.allGlInfoFilter=this.allGlInfo},t=>{const e=t;this.errorMessageHandler(e)})}vendorList(t){this.arrayVendlsit.push(),this.vendorService.getVendorNameCodeListwithFilter(t,20,this.arrayVendlsit.join()).subscribe(t=>{this.allVendorInfo=t.map(t=>({vendorId:t.vendorId,name:t.vendorName})),this.allVendorInfoFilter=this.allVendorInfo},t=>{const e=t;this.errorMessageHandler(e)})}backClick(t){this.nextOrPreviousTab=t;let e=this.tabRedirectConfirmationModal4;this.modal=this.modalService.open(e,{size:"sm"})}dismissModel(){this.modal.close()}redirectdismissModel(){this.datadissmiss=!0,this.redirectToTab()}redirectToTab(){this.disableSaveForEdit||this.datadissmiss||this.saveWarrenty(),this.dismissModel(),this.activeIndex=2,this.assetService.indexObj.next(this.activeIndex),this.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration/"+this.assetService.listCollection.assetRecordId),this.datadissmiss=!1}filterWarentyVendor(t){this.allVendorInfoFilter=this.allVendorInfo,void 0!==t.query&&null!==t.query?this.vendorList(t.query):this.vendorList("");const e=[...this.allVendorInfo.filter(e=>e.name.toLowerCase().includes(t.query.toLowerCase()))];this.allVendorInfoFilter=e}filterWarentyGl(t){this.allGlInfoFilter=this.allGlInfo,void 0!==t.query&&null!==t.query?this.glList(t.query):this.glList("");const e=[...this.allGlInfo.filter(e=>e.name.toLowerCase().includes(t.query.toLowerCase()))];this.allGlInfoFilter=e}filterWarentyVendor2(t){this.allVendorInfoFilter=this.allVendorInfo,void 0!==t.query&&null!==t.query?this.vendorList(t.query):this.vendorList("");const e=[...this.allVendorInfo.filter(e=>e.name.toLowerCase().includes(t.query.toLowerCase()))];this.allVendorInfoFilter=e}filterWarentyGl2(t){this.allGlInfoFilter=this.allGlInfo,void 0!==t.query&&null!==t.query?this.glList(t.query):this.glList("");const e=[...this.allGlInfo.filter(e=>e.name.toLowerCase().includes(t.query.toLowerCase()))];this.allGlInfoFilter=e}setAutocompleteOnLoad(t){t.warrantyDefaultVendorId=0==t.warrantyDefaultVendorId?null:{vendorId:t.warrantyDefaultVendorId,name:t.warrantyVendor},t.maintenanceDefaultVendorId=0==t.maintenanceDefaultVendorId?null:{vendorId:t.maintenanceDefaultVendorId,name:t.maintenanceVendor},t.maintenanceGLAccountId=0==t.maintenanceGLAccountId?null:{glAccountId:t.maintenanceGLAccountId,name:t.maintenanceGlAccount},t.warrantyGLAccountId=0==t.warrantyGLAccountId?null:{glAccountId:t.warrantyGLAccountId,name:t.warrantyGlACoount}}onAddTextAreaInfo(t){this.textAreaInfo=t,this.disableEditor=!0}editorgetmemo(t){this.disableEditor=!1}onSaveTextAreaInfo(t){this.disableSaveForEdit=!1,t&&(this.textAreaInfo=t,this.currentMaintenance.maintenanceMemo=t),H("#textarea-popup").modal("hide")}onCloseTextAreaInfo(){H("#textarea-popup").modal("hide")}warrentyCheckBoxHndl(t){this.currentMaintenance.warrantyCompany="",this.currentMaintenance.warrantyDefaultVendorId=null,this.currentMaintenance.warrantyGLAccountId=null,0==t&&(this.disableSaveForEdit=!1)}maintannaceCheckBoxHndl(t){this.currentMaintenance.maintenanceFrequencyMonths=0,this.currentMaintenance.maintenanceFrequencyDays=0,this.currentMaintenance.maintenanceDefaultVendorId=null,this.currentMaintenance.maintenanceGLAccountId=null,this.currentMaintenance.maintenanceMemo="",0==t&&(this.disableSaveForEdit=!1)}errorMessageHandler(t){this.isSpinnerVisible=!1,this.alertService.showMessage("Error",t,F.d.error)}parsedText(t){if(t){return(new DOMParser).parseFromString("<!doctype html><body>"+t,"text/html").body.textContent}}};at.ctorParameters=()=>[{type:S.ActivatedRoute},{type:x.a},{type:j.a},{type:S.Router},{type:U.a},{type:L.c},{type:F.b},{type:V.a},{type:O.a}],s.b([Object(a.ViewChild)("tabRedirectConfirmationModal4",{static:!1})],at.prototype,"tabRedirectConfirmationModal4",void 0),s.b([Object(a.ViewChild)("fileUploadInput",{static:!1})],at.prototype,"fileUploadInput",void 0),at=s.b([Object(a.Component)({selector:"app-asset-maintenance-warranty",template:s.c(n("qUTz")).default,styles:[s.c(n("vk6m")).default]})],at);var rt=n("+rfH"),it=n("9bet"),ot=n("4P69"),lt=n("hOPT"),ct=n("55Bf"),dt=n("++Ae");let ut=class{constructor(t,e,n,s,a,r,i,o,l,c,d,u,p,m,h,b,v,g,f,y,I,A,D,M){this.router=t,this.glAccountService=e,this.modalService=n,this.activeModal=s,this.intangibleTypeService=a,this.route=r,this.assetService=i,this.legalEntityServices=o,this.alertService=l,this.itemMasterservice=c,this.unitService=d,this.datePipe=u,this.commonService=p,this.location=m,this.currencyService=h,this.assetTypeService=b,this.depriciationMethodService=v,this.authService=g,this.assetattrService1=f,this.assetIntangibleService=y,this.commonservice=I,this.assetLocationService=A,this.AssetAcquisitionTypeService=D,this.manufacturerService=M,this.userData={},this.currentAsset={},this.allManagemtninfo=[],this.departmentList=[],this.divisionlist=[],this.assetLocationList=[],this.allreasn=[],this.acqallreasn=[],this.currentDate=new Date,this.maincompanylist=[],this.allManufacturerInfo=[],this.allUnitOfMeasureinfo=[],this.allCurrencyInfo=[],this.allAssetAttrInfo=[],this.allAssetIntanAttrInfo=[],this.allAssetLocations=[],this.allAssetAcquisitions=[],this.allAssetTypeInfo=[],this.allIntangibleInfo=[],this.allAssetLocationInfo=[],this.display=!1,this.isDepreciable=!0,this.AssetAcquisitionTypeList=[],this.listCollection={},this.recordExists=!1,this.recordlocExists=!1,this.recordacqExists=!1,this.allAlternateAssetInfo=[],this.allAssetParentInfo=[],this.managementStructureData=[],this.updateMode=!1,this.currentSelectedIntangibleAssetType={},this.currentSelectedLocation={},this.currentSelectedAssetType={},this.currentSelectedAssetAttributeType={},this.depriciationMethodList=[],this.allAssets=[],this.amortizationFrequencyList=[],this.depreciationFrequencyList=[],this.assetAcquisitionTypeList=[],this.GLAccountList=[],this.codeName="",this.code="",this.name="",this.memo="",this.assetLocationId=0,this.isDelete=!1,this.isEditMode=!1,this.disableSaveForEdit=!1,this.newManufacturer={name:"",masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,isDelete:!1,comments:""},this.addnewManufacturer=Object.assign({},this.newManufacturer),this.disableSaveForShortName=!1,this.disableSaveForUOM=!1,this.allowNextTab=!1,this.disableSaveDataAdd=!1,this.isSpinnerEnable=!1,this.disableEditor=!0,this.originalAssetTypes=[],this.allAssetList=[],this.localCollectionExcAlter=[],this.localCollectionExcParent=[],this.showExistMsg=!1,this.setEditArray=[],this.showExistMsgForAsset=!1,this.showExistMsgForAssetParent=!1,this.sourceAction=new rt.a,this.currentAsset.expirationDate&&(this.currentAsset.expirationDate=new Date(this.currentAsset.expirationDate).toLocaleDateString()),this.currentAsset.manufacturedDate&&(this.currentAsset.manufacturedDate=new Date(this.currentAsset.manufacturedDate).toLocaleDateString()),this.currentAsset.entryDate?this.currentAsset.entryDate=new Date(this.currentAsset.entryDate).toLocaleDateString():this.currentAsset.entryDate=new Date((new Date).getFullYear(),(new Date).getMonth(),(new Date).getDate()).toLocaleDateString()}ngOnInit(){0==this.assetService.isEditMode?this.breadcrumbs=[{label:"Asset"},{label:"Create Asset"}]:this.breadcrumbs=[{label:"Asset"},{label:"Edit Asset"}],this.activeIndex=0;let t=this.assetService.listCollection?this.assetService.listCollection.assetRecordId:null;this.AssetId=this.router.snapshot.params.id?this.router.snapshot.params.id:t,this.getAssetListForAssetId(""),this.getAssetsList(1),this.AssetId?(this.disableSaveForEdit=!0,this.GetAssetData(this.AssetId),this.allowNextTab=!0,this.DisabledMode=!0,this.isEditMode=!0,this.assetService.currentUrl="/assetmodule/assetpages/app-edit-asset"):(this.AssetAttData(""),this.manufacturerdata(""),this.unitOfMeasureList(""),this.assetLocationData(""),this.AcquisitionloadData(""),this.CurrencyData(""),this.disableSaveDataAdd=!0,this.DisabledMode=!1,this.isEditMode=!1,this.assetService.listCollection=null,this.assetService.currentUrl="/assetmodule/assetpages/app-create-asset",this.currentAsset.unitCost="0.00",this.getManagementStructureDetails(this.authService.currentUser?this.authService.currentUser.managementStructureId:null,this.authService.currentUser?this.authService.currentUser.employeeId:0)),1==this.currentAsset.isIntangible?(this.currentAsset.isTangible=!1,this.currentAsset.isdepreciable=!1,this.currentAsset.isAmortizable=!0,this.AssetIntanAttData("")):(this.currentAsset.isTangible=!0,this.currentAsset.isdepreciable=!0,this.currentAsset.isAmortizable=!1),null!=this.assetService.listCollection&&1==this.isEditMode?(this.showLable=!0,this.currentAsset=this.assetService.listCollection,this.updateMode=!0,this.disableSaveForEdit=!0,1==this.currentAsset.isIntangible?(this.currentAsset.isTangible=!1,this.currentAsset.isIntangible=!0,this.active0=!0,this.active1=!1,this.active2=!1,this.active3=!1):(this.currentAsset.isTangible=!0,this.currentAsset.isIntangible=!1,this.active0=!0,this.active1=!0,this.active2=!0,this.active3=!0)):(this.active0=!0,this.active1=!0,this.active2=!0,this.active3=!0,this.onDepreciable("onload")),this.assetService.bredcrumbObj.next(this.assetService.currentUrl),this.assetService.ShowPtab=!0,this.assetService.alertObj.next(this.assetService.ShowPtab)}onAddTextAreaInfo(t){this.disableEditor=!0,this.textAreaInfo=t.memo}editorgetmemo(t){this.disableEditor=!1}onSaveTextAreaInfo(t){this.disableSaveForEdit=!1,t&&(this.textAreaInfo=t,this.currentAsset.memo=t),H("#textarea-popup").modal("hide")}onCloseTextAreaInfo(){H("#textarea-popup").modal("hide")}GetAssetData(t){return s.a(this,void 0,void 0,(function*(){null==t&&(t=this.assetService.listCollection.assetRecordId),this.isSpinnerEnable=!0,null!=t&&this.assetService.getByAssetId(t).subscribe(t=>{this.onassetdataSuccessful(Object.assign({},t[0],t[1]))},t=>{const e=t;this.errorMessageHandler(e)})}))}onassetdataSuccessful(t){return s.a(this,void 0,void 0,(function*(){t.alternateAssetRecordId={assetRecordId:t.alternateAssetRecordId,assetId:t.alternateAssetName},t.assetParentRecordId={assetRecordId:t.assetParentRecordId,assetId:t.assetParentName},t.assetId={label:t.assetId,value:t.assetRecordId},t.entryDate=null!=t.entryDate?new Date(t.entryDate):null,t.manufacturedDate=null!=t.manufacturedDate?new Date(t.manufacturedDate):null,t.expirationDate=null!=t.expirationDate?new Date(t.expirationDate):null,this.getManagementStructureDetails(t?t.managementStructureId:null,this.authService.currentUser?this.authService.currentUser.employeeId:0),this.allowNextTab=!0,setTimeout(()=>{this.isSpinnerEnable=!1},1200),this.isEditMode=!0,this.activeIndex=0,this.assetService.indexObj.next(this.activeIndex),this.assetService.listCollection=t,this.showLable=!0,this.currentAsset=this.assetService.listCollection,this.currentAsset.unitCost=this.currentAsset.unitCost?Object(z.b)(this.currentAsset.unitCost,2):"0.00",this.updateMode=!0,1==this.currentAsset.isIntangible?(this.active0=!0,this.active1=!1,this.active2=!1,this.active3=!1,this.currentAsset.isTangible=!1,this.currentAsset.isIntangible=!0,this.getAssetsList(2),this.AssetIntanAttData(""),this.showItemEdit(this.currentAsset.assetIntangibleTypeId)):(this.getAssetsList(1),this.active0=!0,this.active1=!0,this.active2=!0,this.active3=!0,this.currentAsset.isTangible=!0,this.currentAsset.isIntangible=!1,this.showItemEdit(this.currentAsset.tangibleClassId),this.AssetAttData(""),this.manufacturerdata(""),this.unitOfMeasureList(""),this.assetLocationData(""),this.AcquisitionloadData(""),this.CurrencyData("")),this.assetService.bredcrumbObj.next(this.assetService.currentUrl),this.assetService.ShowPtab=!0,this.assetService.alertObj.next(this.assetService.ShowPtab),this.activeIndex=0}))}onFilterTangible(t){this.AssetAttData(t)}AssetAttData(t){this.setEditArray=[],1==this.isEditMode?this.setEditArray.push(this.currentAsset.tangibleClassId?this.currentAsset.tangibleClassId:0):this.setEditArray.push(0);const e=t||"";this.commonService.autoSuggestionSmartDropDownList("AssetAttributeType","TangibleClassId","AssetAttributeTypeName",e,!0,20,this.setEditArray.join()).subscribe(t=>{t&&0!=t.length&&(this.allAssetTypeInfo=t.map(t=>Object.assign({},t,{tangibleClassId:t.value,name:t.label}),t=>{const e=t;this.errorMessageHandler(e)}),this.originalAssetTypes=this.allAssetTypeInfo)}),this.selectedColumns=this.cols}onFilterIntangible(t){this.AssetIntanAttData(t)}AssetIntanAttData(t){this.setEditArray=[],1==this.isEditMode?this.setEditArray.push(this.currentAsset.tangibleClassId?this.currentAsset.tangibleClassId:0):this.setEditArray.push(0);const e=t||"";this.commonService.getAutoCompleteDropDownsByTwoTables("AssetIntangibleAttributeType","AssetIntangibleType","AssetIntangibleTypeId","AssetIntangibleName",e,20,this.setEditArray.join()).subscribe(t=>{t&&0!=t.length&&(this.allIntangibleInfo=t.map(t=>Object.assign({},t,{assetIntangibleTypeId:t.value,assetIntangibleName:t.label})))},t=>{const e=t;this.errorMessageHandler(e)})}getAssetListForAssetId(t){this.setEditArray=[],null!=this.AssetId&&null!=this.AssetId?this.setEditArray.push(this.AssetId?this.AssetId:0):this.setEditArray.push(0);const e=t||"";this.commonService.autoSuggestionSmartDropDownList("Asset","AssetRecordId","AssetId",e,!0,20,this.setEditArray.join()).subscribe(e=>{this.allAssetList=e,t&&this.allAssetList.forEach(e=>{e.label==t?this.showExistMsg=!0:this.showExistMsg=!1})},t=>{const e=t;this.errorMessageHandler(e)})}assetIdHandler(t){t&&""!=t.target.value&&(this.showExistMsg=!1,this.disableSaveForEdit=!1)}filterAssetId(t){if(this.localCollection=this.allAssetList,void 0!==t.query&&null!==t.query){this.getAssetListForAssetId(t.query);const e=[...this.allAssetList.filter(e=>e.label.toLowerCase().includes(t.query.toLowerCase()))];this.localCollection=e}this.showExistMsg=!1}getAssetsList(t){this.tableColumnName=1==t?"IsTangible":"IsIntangible",this.selectedColumns=this.cols}filterAssetIdInEdit(t,e){if(this.setEditArray=[],1==this.isEditMode){let t=this.currentAsset.alternateAssetRecordId?this.currentAsset.alternateAssetRecordId:0,e=this.currentAsset.assetParentRecordId?this.currentAsset.assetParentRecordId:0;this.setEditArray.push(t,e)}else this.setEditArray.push(0);const n=t||"";this.commonservice.getAssetListBasedOnType("Asset","AssetRecordId","AssetId",n,this.tableColumnName,1,20,this.setEditArray.join()).subscribe(t=>{const e=t.map(t=>Object.assign({},t,{assetRecordId:t.value,assetId:t.label}));if(this.allAlternateAssetInfo=e,this.allAssetParentInfo=e,this.localCollectionExcAlter=this.allAlternateAssetInfo,this.localCollectionExcParent=this.allAssetParentInfo,null!=this.allAssetParentInfo&&null!=this.allAssetParentInfo)for(let n=0;n<this.allAssetParentInfo.length;n++)this.allAssetParentInfo[n].assetId.toLowerCase()==this.AssetId&&this.allAssetParentInfo.splice(n,1);if(null!=this.currentAsset.alternateAssetRecordId&&null!=this.currentAsset.alternateAssetRecordId&&""!=this.currentAsset.alternateAssetRecordId){for(let t=0;t<this.allAssetParentInfo.length;t++)this.allAssetParentInfo[t].assetRecordId==this.currentAsset.alternateAssetRecordId.assetRecordId&&this.allAssetParentInfo.splice(t,1);this.localCollectionExcParent=this.allAssetParentInfo}if(null!=this.currentAsset.assetParentRecordId&&null!=this.currentAsset.assetParentRecordId&&""!=this.currentAsset.assetParentRecordId){for(let t=0;t<this.allAlternateAssetInfo.length;t++)this.allAlternateAssetInfo[t].assetRecordId==this.currentAsset.assetParentRecordId.assetRecordId&&this.allAlternateAssetInfo.splice(t,1);this.localCollectionExcAlter=this.allAlternateAssetInfo}},t=>{const e=t;this.errorMessageHandler(e)})}filterExcAltAssetId(t){this.localCollectionExc=this.allAlternateAssetInfo,void 0!==t.query&&null!==t.query?this.filterAssetIdInEdit(t.query,1):this.filterAssetIdInEdit("",1)}filterExcParentAssetId(t){this.localCollectionExc=this.allAssetParentInfo,void 0!==t.query&&null!==t.query?this.filterAssetIdInEdit(t.query,2):this.filterAssetIdInEdit("",2)}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}onAssetIdselection(t){this.showExistMsg=!0,this.disableSaveForEdit=!1}showItemEdit(t){0==this.currentAsset.isIntangible||null==this.currentAsset.isIntangible?(this.currentSelectedAssetAttributeType={},this.currentRow=t,null!=t&&this.assetattrService1.getByAssetTypeId(t).subscribe(t=>{this.currentSelectedAssetAttributeType=t[0],this.currentSelectedAssetAttributeType.residualPercentage=this.currentSelectedAssetAttributeType.residualPercentage?Object(z.b)(this.currentSelectedAssetAttributeType.residualPercentage,2):"0.00"},t=>{const e=t;this.errorMessageHandler(e)})):(this.currentSelectedIntangibleAssetType={},this.currentIntangibleRow=t,null!=t&&this.assetIntangibleService.getById(t).subscribe(t=>{this.currentSelectedIntangibleAssetType=t[0][0]},t=>{const e=t;this.errorMessageHandler(e)}))}open(t){this.recordlocExists=!1,this.disablelocSave=!0,this.isSaving=!0,this.sourceAction=new rt.a,this.sourceAction.isActive=!0,this.code="",this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}openacquisition(t){this.recordacqExists=!1,this.disableAcquisitionSave=!0,this.isSaving=!0,this.acqsourceAction=new it.a,this.acqsourceAction.isActive=!0,this.codeName="",this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}acqpartnmId(t){for(let e=0;e<this.acqallreasn.length;e++){if(t==this.acqallreasn[e][0].codeName){this.selectedreason=t,this.recordacqExists=!0,this.disableAcquisitionSave=!0,this.selAssetAcquisitionTypeId=this.acqallreasn[e][0].AssetAcquisitionTypeId,this.selectedreason=t;break}this.recordacqExists=!1,this.disableAcquisitionSave=!1}}eventHandler(t){let e=t.target.value.toLowerCase();this.selectedreason&&(e==this.selectedreason.toLowerCase()?(this.disableSave=!0,this.recordExists=!0):(this.disableSave=!1,this.recordExists=!1))}dismissModel(){this.modal.close()}onFilterAcqution(t){this.AcquisitionloadData(t)}AcquisitionloadData(t){this.setEditArray=[],1==this.isEditMode?this.setEditArray.push(this.currentAsset.assetAcquisitionTypeId?this.currentAsset.assetAcquisitionTypeId:0):this.setEditArray.push(0);const e=t||"";this.commonService.autoSuggestionSmartDropDownList("AssetAcquisitionType","AssetAcquisitionTypeId","Name",e,!0,20,this.setEditArray.join()).subscribe(t=>{this.AssetAcquisitionTypeList=t.map(t=>Object.assign({},t,{assetAcquisitionTypeId:t.value,name:t.label}))},t=>{const e=t;this.errorMessageHandler(e)})}getLegalEntity(){this.commonService.getLegalEntityList().subscribe(t=>{this.legalEntityList=t},t=>{const e=t;this.errorMessageHandler(e)})}get employeeId(){return this.authService.currentUser?this.authService.currentUser.employeeId:0}getManagementStructureDetails(t,e=0,n=0){e=0==e?this.employeeId:e,n=this.isEditMode?n=t:0,this.commonService.getManagmentStrctureData(t,e,n).subscribe(t=>{if(t){const e=t;e[0]&&"Level1"==e[0].level?(this.maincompanylist=e[0].lstManagmentStrcture,this.currentAsset.companyId=e[0].managementStructureId,this.currentAsset.managementStructureId=e[0].managementStructureId,this.currentAsset.buisinessUnitId=0,this.currentAsset.divisionId=0,this.currentAsset.departmentId=0,this.bulist=[],this.divisionlist=[],this.departmentList=[]):(this.currentAsset.companyId=0,this.currentAsset.buisinessUnitId=0,this.currentAsset.divisionId=0,this.currentAsset.departmentId=0,this.maincompanylist=[],this.bulist=[],this.divisionlist=[],this.departmentList=[]),e[1]&&"Level2"==e[1].level?(this.bulist=e[1].lstManagmentStrcture,this.currentAsset.buisinessUnitId=e[1].managementStructureId,this.currentAsset.managementStructureId=e[1].managementStructureId,this.currentAsset.divisionId=0,this.currentAsset.departmentId=0,this.divisionlist=[],this.departmentList=[]):(e[1]&&"NEXT"==e[1].level&&(this.bulist=e[1].lstManagmentStrcture),this.currentAsset.buisinessUnitId=0,this.currentAsset.divisionId=0,this.currentAsset.departmentId=0,this.divisionlist=[],this.departmentList=[]),e[2]&&"Level3"==e[2].level?(this.divisionlist=e[2].lstManagmentStrcture,this.currentAsset.divisionId=e[2].managementStructureId,this.currentAsset.managementStructureId=e[2].managementStructureId,this.currentAsset.departmentId=0,this.departmentList=[]):(e[2]&&"NEXT"==e[2].level&&(this.divisionlist=e[2].lstManagmentStrcture),this.currentAsset.divisionId=0,this.currentAsset.departmentId=0,this.departmentList=[]),e[3]&&"Level4"==e[3].level?(this.departmentList=e[3].lstManagmentStrcture,this.currentAsset.departmentId=e[3].managementStructureId,this.currentAsset.managementStructureId=e[3].managementStructureId):(this.currentAsset.departmentId=0,e[3]&&"NEXT"==e[3].level&&(this.departmentList=e[3].lstManagmentStrcture))}},t=>{const e=t;this.errorMessageHandler(e)})}selectedLegalEntity(t){t&&(this.currentAsset.companyId=t,this.currentAsset.managementStructureId=t,this.commonService.getManagementStructurelevelWithEmployee(t,this.employeeId).subscribe(t=>{this.bulist=t,this.currentAsset.buisinessUnitId=0,this.currentAsset.divisionId=0,this.currentAsset.departmentId=0},t=>{const e=t;this.errorMessageHandler(e)}))}selectedBusinessUnit(t){t&&(this.currentAsset.buisinessUnitId=t,this.currentAsset.managementStructureId=t,this.commonService.getManagementStructurelevelWithEmployee(t,this.employeeId).subscribe(t=>{this.divisionlist=t,this.currentAsset.divisionId=0,this.currentAsset.departmentId=0},t=>{const e=t;this.errorMessageHandler(e)}))}selectedDivision(t){t&&(this.currentAsset.divisionId=t,this.currentAsset.managementStructureId=t,this.commonService.getManagementStructurelevelWithEmployee(t,this.employeeId).subscribe(t=>{this.departmentList=t,this.currentAsset.departmentId=0},t=>{const e=t;this.errorMessageHandler(e)}))}selectedDepartment(t){t&&(this.currentAsset.departmentId=t,this.currentAsset.managementStructureId=t)}onFilterManufacturer(t){this.manufacturerdata(t)}manufacturerdata(t){this.setEditArray=[],1==this.isEditMode?this.setEditArray.push(this.currentAsset.manufacturerId?this.currentAsset.manufacturerId:0):this.setEditArray.push(0);const e=t||"";this.commonService.autoSuggestionSmartDropDownList("Manufacturer ","ManufacturerId","Name",e,!0,20,this.setEditArray.join()).subscribe(t=>{this.allManufacturerInfo=t,this.ManufactureData=t},t=>{const e=t;this.errorMessageHandler(e)})}onFilterUom(t){this.unitOfMeasureList(t)}unitOfMeasureList(t){1==this.isEditMode?this.setEditArray.push(this.currentAsset.unitOfMeasureId?this.currentAsset.unitOfMeasureId:0):(this.setEditArray.push(0),"/assetmodule/assetpages/app-create-asset"==this.assetService.currentUrl&&(this.currentAsset.unitOfMeasureId=this.getuom("Eaches")));const e=t||"";this.commonService.autoSuggestionSmartDropDownList("UnitOfMeasure","UnitOfMeasureId","shortName",e,!0,20,this.setEditArray.join()).subscribe(t=>{this.allUnitOfMeasureinfo=t},t=>{const e=t;this.errorMessageHandler(e)})}onFilterCurrency(t){this.unitOfMeasureList(t)}CurrencyData(t){this.setEditArray=[],1==this.isEditMode?this.setEditArray.push(this.currentAsset.currencyId?this.currentAsset.currencyId:0):this.setEditArray.push(0);const e=t||"";this.commonService.autoSuggestionSmartDropDownList("Currency","CurrencyId","Code",e,!0,20,this.setEditArray.join()).subscribe(t=>{this.allCurrencyInfo=t},t=>{const e=t;this.errorMessageHandler(e)})}onFilterLocation(t){this.assetLocationData(t)}assetLocationData(t){this.setEditArray=[],1==this.isEditMode?this.setEditArray.push(this.currentAsset.assetLocationId?this.currentAsset.assetLocationId:0):this.setEditArray.push(0);const e=t||"";this.commonService.getAutoCompleteDropDownsByCodeWithName("AssetLocation","AssetLocationId","Name","Code",e,20,this.setEditArray.join()).subscribe(t=>{this.allAssetLocations=t},t=>{const e=t;this.errorMessageHandler(e)})}changeOfTab(t){this.AssetId=this.assetService.listCollection?this.assetService.listCollection.assetRecordId:this.AssetId,1==this.isEditMode&&(this.DisabledMode=!0,"General"===t?(this.activeIndex=0,this.route.navigateByUrl("assetmodule/assetpages/app-edit-asset/"+this.AssetId)):"Capes"===t?(this.activeIndex=1,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/"+this.AssetId)):"Calibration"===t?(this.activeIndex=2,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration/"+this.AssetId)):"Maintenance"==t&&(this.activeIndex=3,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-maintenance-warranty/"+this.AssetId)))}getAmortizationFrequencyList(){this.commonservice.smartDropDownList("AssetAmortizationInterval","AssetAmortizationIntervalId","AssetAmortizationIntervalCode").subscribe(t=>{this.amortizationFrequencyList=t},t=>{const e=t;this.errorMessageHandler(e)})}getDepreciationFrequencyList(){this.commonservice.smartDropDownList("AssetDepreciationFrequency","AssetDepreciationFrequencyId","Name").subscribe(t=>{this.depreciationFrequencyList=t},t=>{const e=t;this.errorMessageHandler(e)})}onIsDepreciable(){this.currentAsset.isdepreciable=!0}onIsNonDepreciable(){this.currentAsset.isNonDepreciable=!0}onIsAmortizable(){this.currentAsset.isAmortizable=!0}onIsNonAmortizable(){this.currentAsset.isNonAmortizable=!0}onDepreciable(t){"html"==t&&(this.AssetAttData(""),this.getAssetsList(1),this.currentAsset.assetIntangibleTypeId=null,this.currentSelectedIntangibleAssetType.amortizationMethod="",this.currentSelectedIntangibleAssetType.intangibleLife="",this.currentSelectedIntangibleAssetType.amortFrequency="",this.currentSelectedIntangibleAssetType.amortExpenseGL="",this.currentSelectedIntangibleAssetType.accAmortDeprGL="",this.currentSelectedIntangibleAssetType.intangibleGL="",this.currentSelectedIntangibleAssetType.intangibleWriteDownGL="",this.currentSelectedIntangibleAssetType.intangibleWriteOffGL="",this.currentAsset.isAmortizable=!1,this.currentAsset.isNonAmortizable=!1,this.currentAsset.isdepreciable=!0),this.active0=!0,this.active1=!0,this.active2=!0,this.active3=!0,this.currentAsset.isTangible=!0,this.currentAsset.isIntangible=!1}onIntangible(t){this.getAssetsList(2),this.active0=!0,this.active1=!1,this.active2=!1,this.active3=!1,this.currentAsset.isIntangible=!0,this.currentAsset.isTangible=!1,this.currentAsset.isAmortizable=!0,this.currentAsset.assetParentRecordId=null,this.currentAsset.assetLocationId="",this.currentAsset.manufacturerId="",this.currentAsset.isSerialized=!1,this.currentAsset.currencyId="",this.currentAsset.memo="",this.currentAsset.unitOfMeasureId=this.getuom("Eaches"),this.currentAsset.unitCost="",this.currentAsset.model="",this.currentAsset.assetAcquisitionTypeId="",this.currentAsset.manufacturedDate="",this.currentAsset.expirationDate="",this.currentAsset.isdepreciable=!1,this.currentAsset.isNonDepreciable=!1,this.currentAsset.isAmortizable=!0,this.currentAsset.asset_Location="",this.currentAsset.tangibleClassId=0,this.currentSelectedAssetType.selectedObj="",this.currentSelectedAssetAttributeType.depreciationMethodName="",this.currentSelectedAssetAttributeType.residualPercentage="",this.currentSelectedAssetAttributeType.assetLife="",this.currentSelectedAssetAttributeType.deprFrequency="",this.currentSelectedAssetAttributeType.acquiredGL="",this.currentSelectedAssetAttributeType.deprExpenseGL="",this.currentSelectedAssetAttributeType.adDeprGL="",this.currentSelectedAssetAttributeType.saleGL="",this.currentSelectedAssetAttributeType.writeOffGL="",this.currentSelectedAssetAttributeType.writeDownGL="",this.AssetIntanAttData(""),this.showItemEdit(this.currentAsset.assetIntangibleTypeId),this.AssetId?this.isEditMode=!0:this.isEditMode=!1}onClearAltId(){this.currentAsset.alternateAssetRecordId=void 0}onClearParentId(){this.currentAsset.assetParentRecordId=void 0}onAssetParentAlt(t,e){null!=this.currentAsset.alternateAssetRecordId&&null!=this.currentAsset.assetParentRecordId&&(this.currentAsset.alternateAssetRecordId.assetRecordId==this.currentAsset.assetParentRecordId.assetRecordId?1==e?this.showExistMsgForAsset=!0:this.showExistMsgForAssetParent=!0:(this.showExistMsgForAsset=!1,this.showExistMsgForAssetParent=!1))}saveAsset(){if(0==this.currentAsset.isIntangible&&null!=this.currentAsset.expirationDate&&this.currentAsset.expirationDate<W(this.currentDate).format("MM/DD/YYYY"))return this.isSaving=!1,void this.alertService.showMessage("","Expiration Date can't before current Date please Update.",F.d.error);if(0==this.currentAsset.isIntangible&&this.currentAsset.entryDate&&this.currentAsset.manufacturedDate&&this.currentAsset.entryDate<this.currentAsset.manufacturedDate&&W(this.currentAsset.entryDate).format("MM/DD/YYYY")<W(this.currentAsset.manufacturedDate).format("MM/DD/YYYY"))return this.isSaving=!1,void this.alertService.showMessage("","Manufatured date cannot be later than Entry date.",F.d.error);if(1==this.currentAsset.isDepreciable){if(null!=this.currentAsset.assetId&&null!=this.currentAsset.assetParentRecordId&&this.currentAsset.assetId==this.currentAsset.assetParentRecordId)return this.isSaving=!1,void this.alertService.showMessage("","Asset Parent cannot be equal to Asset ID.",F.d.error);if(null!=this.currentAsset.alternateAssetRecordId&&null!=this.currentAsset.assetParentRecordId&&this.currentAsset.alternateAssetRecordId==this.currentAsset.assetParentRecordId)return this.isSaving=!1,void this.alertService.showMessage("","Asset Parent and Alternate Asset can't be same.",F.d.error)}if(null!=this.currentAsset.alternateAssetRecordId&&null!=this.currentAsset.assetId&&this.currentAsset.alternateAssetRecordId==this.currentAsset.assetId)return this.isSaving=!1,void this.alertService.showMessage("","Asset Id and Alternate Asset Id can't be same.",F.d.error);if(1==this.currentAsset.isDepreciable&&(this.currentAsset.assetId&&this.currentAsset.name&&this.currentAsset.unitOfMeasureId&&this.currentAsset.currencyId&&this.currentAsset.tangibleClassId&&this.currentAsset.assetAcquisitionTypeId&&this.currentAsset.companyId||(this.display=!0,this.modelValue=!0,this.alertService.showMessage("Warning","Please Enter (*) Mandatory Fields  ",F.d.warn))),this.currentAsset.assetId&&this.currentAsset.name&&this.currentAsset.assetIntangibleTypeId||this.currentAsset.assetId&&this.currentAsset.name&&this.currentAsset.unitOfMeasureId&&this.currentAsset.currencyId&&this.currentAsset.tangibleClassId&&this.currentAsset.assetAcquisitionTypeId&&this.currentAsset.companyId)if(this.isSaving=!0,this.currentAsset.assetRecordId)if(this.currentAsset.updatedBy=this.userName,this.currentAsset.masterCompanyId=this.authService.currentUser.masterCompanyId,1==this.currentAsset.isIntangible&&(this.currentAsset.isTangible=!1,this.currentAsset.isSerialized=!1,this.currentAsset.assetLocationId="",this.currentAsset.manufacturerId="",this.currentAsset.isSerialized=!1,this.currentAsset.currencyId="",this.currentAsset.memo="",this.currentAsset.unitOfMeasureId="",this.currentAsset.unitCost="",this.currentAsset.model="",this.currentAsset.assetAcquisitionTypeId="",this.currentAsset.manufacturedDate="",this.currentAsset.expirationDate="",this.currentAsset.isdepreciable=!1,this.currentAsset.isNonDepreciable=!1,this.currentAsset.asset_Location="",this.currentAsset.tangibleClassId=0,this.currentSelectedAssetType.selectedObj="",delete this.currentAsset.assetType,delete this.currentAsset.currency,delete this.currentAsset.manufacturer,delete this.currentAsset.unitOfMeasure),1==this.currentAsset.isTangible&&(this.currentAsset.isIntangible=!1,this.currentAsset.isAmortizable=!1,this.currentAsset.isNonAmortizable=!1,this.currentSelectedIntangibleAssetType.selectedAssetObj={},this.currentAsset.assetIntangibleTypeId="",delete this.currentAsset.assetType,delete this.currentAsset.currency,delete this.currentAsset.manufacturer,delete this.currentAsset.unitOfMeasure),0==this.currentAsset.isIntangible){(t=new Date(this.currentAsset.entryDate)).setMinutes(t.getMinutes()+480),this.currentAsset.entryDate=t;const e=Object.assign({},this.currentAsset);e.alternateAssetRecordId=e.alternateAssetRecordId?e.alternateAssetRecordId.assetRecordId:0,e.assetParentRecordId=e.assetParentRecordId?e.assetParentRecordId.assetRecordId:0,"string"==typeof e.assetId||e.assetId instanceof String?e.assetId=e.assetId?e.assetId:"":e.assetId=e.assetId?e.assetId.label:"",this.isSpinnerEnable=!0,this.assetService.updateAsset(e).subscribe(t=>{this.isSpinnerEnable=!1,this.currentAsset.updatedBy=this.userName,this.listCollection=t,this.disableSaveForEdit=!0,this.assetService.listCollection=this.listCollection,this.assetService.generalCollection=this.listCollection,this.alertService.showMessage("Success","Asset Updated successfully.",F.d.success);const{assetId:e}=this.listCollection},t=>{const e=t;this.errorMessageHandler(e)})}else{(t=new Date(this.currentAsset.entryDate)).setMinutes(t.getMinutes()+480),this.currentAsset.entryDate=t;const e=Object.assign({},this.currentAsset);e.alternateAssetRecordId=e.alternateAssetRecordId?e.alternateAssetRecordId.assetRecordId:0,"string"==typeof e.assetId||e.assetId instanceof String?e.assetId=e.assetId?e.assetId:"":e.assetId=e.assetId?e.assetId.label:"",this.assetService.updateAssetIntangible(e).subscribe(t=>{this.currentAsset.updatedBy=this.userName,this.listCollection=t,this.assetService.generalCollection=this.listCollection,this.alertService.showMessage("Success","Asset Updated successfully.",F.d.success),this.currentAsset=this.assetService.listCollection;const{assetId:e}=this.listCollection},t=>{const e=t;this.errorMessageHandler(e)})}else{var t;this.currentAsset.createdBy=this.userName,this.currentAsset.updatedBy=this.userName,this.currentAsset.masterCompanyId=this.authService.currentUser.masterCompanyId,this.currentAsset.isActive=!0,1==this.currentAsset.isIntangible&&(this.currentAsset.isTangible=!1,this.currentAsset.isSerialized=!1,this.currentAsset.isdepreciable=!1,this.currentAsset.isNonDepreciable=!1,delete this.currentAsset.assetType,delete this.currentAsset.currency,delete this.currentAsset.manufacturer,delete this.currentAsset.unitOfMeasure,delete this.currentAsset.assetLocationId),1==this.currentAsset.isTangible&&(this.currentAsset.isAmortizable=!1,this.currentAsset.isNonAmortizable=!1,this.currentAsset.isIntangible=!1,this.currentSelectedIntangibleAssetType.selectedAssetObj={},this.currentAsset.assetIntangibleTypeId=""),(t=new Date(this.currentAsset.entryDate)).setMinutes(t.getMinutes()+480),this.currentAsset.entryDate=t;const e=new Date(this.currentAsset.expirationDate);e.setMinutes(e.getMinutes()+480),this.currentAsset.expirationDate=e;const n=new Date(this.currentAsset.manufacturedDate);if(n.setMinutes(n.getMinutes()+480),this.currentAsset.manufacturedDate=n,this.currentAsset&&0==this.currentAsset.isIntangible){const t=Object.assign({},this.currentAsset);t.alternateAssetRecordId=t.alternateAssetRecordId?t.alternateAssetRecordId.assetRecordId:0,t.assetParentRecordId=t.assetParentRecordId?t.assetParentRecordId.assetRecordId:0,this.isSpinnerEnable=!0,this.assetService.addAsset(t).subscribe(t=>{this.isSpinnerEnable=!1,this.isEditMode=!0,this.disableSaveForEdit=!0,this.currentAsset.alternateAssetRecordId={assetRecordId:t.alternateAssetRecordId,assetId:t.alternateAssetName},this.currentAsset.assetParentRecordId={assetRecordId:t.assetParentRecordId,assetId:t.assetParentName},this.currentAsset.assetRecordId=t.assetRecordId,this.allowNextTab=!0,this.currentAsset.updatedBy=this.userName,this.listCollection=t,this.assetService.generalCollection=this.listCollection,this.assetService.listCollection=t,this.alertService.showMessage("Success","Asset Created successfully.",F.d.success);const{assetId:e}=t;1==this.currentAsset.isIntangible?(this.activeIndex=1,this.assetService.indexObj.next(this.activeIndex)):this.location.replaceState("assetmodule/assetpages/app-edit-asset/"+t.assetRecordId)},t=>{this.currentAsset.manufacturedDate=this.currentAsset.manufacturedDate?this.currentAsset.manufacturedDate:null,this.currentAsset.expirationDate=this.currentAsset.expirationDate?this.currentAsset.expirationDate:null;const e=t;this.errorMessageHandler(e)})}else if(this.currentAsset){const t=Object.assign({},this.currentAsset);t.alternateAssetRecordId=t.alternateAssetRecordId?t.alternateAssetRecordId.assetRecordId:0,this.assetService.addAssetIntangible(t).subscribe(t=>{this.allowNextTab=!0,this.currentAsset.updatedBy=this.userName,this.listCollection=t,this.assetService.generalCollection=this.listCollection,this.assetService.listCollection=t,this.alertService.showMessage("Success","Asset Created successfully.",F.d.success);const{assetId:e}=t;1==this.currentAsset.isIntangible&&(this.activeIndex=1,this.assetService.indexObj.next(this.activeIndex),this.route.navigateByUrl("/assetmodule/assetpages/app-asset-listing"))},t=>{const e=t;this.errorMessageHandler(e)})}}}getSelectedLocation(t){this.currentSelectedLocation=Object.assign({},this.allAssetLocations.filter((function(e){return e.assetLocationId==t}))[0])}getSelectedAssetType(t){this.currentSelectedAssetType=Object.assign({},this.allAssetTypeInfo.filter((function(e){return e.tangibleClassId==t}))[0])}nextClick(t){this.nextOrPreviousTab=t;let e=this.tabRedirectConfirmationModal;this.modal=this.modalService.open(e,{size:"sm"})}dismissModelRedirect(){this.currentAsset=this.assetService.listCollection,this.activeIndex=1,this.assetService.indexObj.next(this.activeIndex);const{assetRecordId:t}=this.currentAsset;this.dismissModel(),this.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/"+t)}redirectToTab(){this.dismissModel(),this.currentAsset=this.assetService.listCollection,this.activeIndex=1,this.assetService.indexObj.next(this.activeIndex);const{assetRecordId:t}=this.currentAsset;this.disableSaveForEdit||this.saveAsset(),this.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/"+t)}getmemo(t){this.disableSaveForEdit=!1,this.disableSaveForShortName=!1,this.disableSaveForUOM=!1}getuom(t){for(let e=0;e<this.allUnitOfMeasureinfo.length;e++)if(t==this.allUnitOfMeasureinfo[e].label)return this.allUnitOfMeasureinfo[e].value}formatToGlobal(t){t.unitCost=t.unitCost?Object(z.b)(t.unitCost,2):"0.00"}errorMessageHandler(t){this.isSpinnerEnable=!1,this.alertService.showMessage("Error",t,F.d.error)}parsedText(t){if(t){return(new DOMParser).parseFromString("<!doctype html><body>"+t,"text/html").body.textContent}}omit_special_char(t){var e;return(e=t.charCode)>64&&e<91||e>96&&e<123||8==e||32==e||e>=48&&e<=57||45==e||95==e}addNew(){this.route.navigateByUrl("/assetmodule/assetpages/app-create-asset"),this.assetService.listCollection={},this.assetService.isEditMode=!1}};ut.ctorParameters=()=>[{type:S.ActivatedRoute},{type:V.a},{type:L.c},{type:L.b},{type:lt.a},{type:S.Router},{type:x.a},{type:N.a},{type:F.b},{type:J.a},{type:G.a},{type:c.DatePipe},{type:O.a},{type:c.Location},{type:K.a},{type:ct.a},{type:q.a},{type:U.a},{type:E.a},{type:R.a},{type:O.a},{type:P.a},{type:ot.a},{type:dt.a}],s.b([Object(a.ViewChild)("tabRedirectConfirmationModal",{static:!1})],ut.prototype,"tabRedirectConfirmationModal",void 0),ut=s.b([Object(a.Component)({selector:"app-create-asset",template:s.c(n("P7yI")).default,providers:[c.DatePipe],styles:[s.c(n("bEiN")).default]})],ut);var pt=n("XNiG"),mt=n("1G5W");let ht=class{constructor(t,e,n,s,a,r,i,o,l,c,d,u){this.commonService=t,this.location=e,this.vendorService=n,this.assetService=s,this.assetLocationService=a,this.alertService=r,this.configurations=i,this.authService=o,this.modalService=l,this.route=c,this._actRoute=d,this.datePipe=u,this.todaysDate=new Date,this.disableSaveForEdit=!1,this.currentAsset={},this.isSpinnerVisible=!0,this.pageSize=10,this.isEditMode=!1,this.currentDate=new Date,this.onDestroy$=new pt.a,this.allAssetList=[],this.assetListFilter=[],this.allLocationList=[],this.allCapesInfo=[],this.allVendorsList=[],this.vendorListFilter=[],this.allCurrencyInfo=[],this.allWarrantyStatusList=[],this.cols=[{field:"partNumber",header:"PN"},{field:"partDescription",header:"PN Description"},{field:"captypedescription",header:"Capability Type"},{field:"manufacturer",header:"Aircraft Manufacturer"},{field:"modelname",header:"Models"},{field:"dashnumber",header:"Dash Number"}],this.selectedColumns=this.cols,this.managementStructure={companyId:0,buId:0,divisionId:0,departmentId:0},this.legalEntityList=[],this.businessUnitList=[],this.divisionList=[],this.departmentList=[],this.documentInformation={docName:"",docMemo:"",docDescription:"",attachmentDetailId:0},this.isEditButton=!1,this.sourceViewforDocument=[],this.sourceViewforDocumentWarranty=[],this.customerDocumentsColumns=[{field:"docName",header:"Name"},{field:"docDescription",header:"Description"},{field:"docMemo",header:"Memo"},{field:"fileName",header:"File Name"},{field:"fileSize",header:"File Size"},{field:"createdBy",header:"Created By"},{field:"updatedBy",header:"Updated By"},{field:"createdDate",header:"Created Date"},{field:"updatedDate",header:"Updated Date"}],this.selectedColumnsDoc=this.customerDocumentsColumns,this.sourceViewforDocumentList=[],this.sourceViewforDocumentListWarranty=[],this.sourceViewforDocumentAudit=[],this.disableDocumentSave=!1,this.disableFileAttachmentSubmit=!0,this.selectedFileAttachment=[],this.formDataMain=new FormData,this.formDataWarr=new FormData,this.formDataInt=new FormData,this.allDocumentListOriginal=[],this.pageSizeNew=3,this.allDocumentListOriginalWarranty=[],this.disableFileAttachmentSubmitWarranty=!0,this.selectedFileAttachmentWarranty=[],this.warrantyCompanySelectList=[],this.sourceViewforDocumentListInt=[],this.disableFileAttachmentSubmitInt=!0,this.selectedFileAttachmentInt=[],this.sourceViewforDocumentInt=[],this.arrayVendlsit=[],this.setEditArray=[],this.orignEditData={},this.openCapesModel=!1,this.updateDocuments=!1,this.disleUpdate=!0,this.disableEditor=!0,this.postData={},this.assetStatusList=[],this.assetInventoryStatusList=[],this.restorerecord={},this.isDeletedDocumentlist=!1,this.warrentyDeletedList=!1,this.intangibleDeletedList=!1,this.maitananceeletedList=!1,this.currentAsset.entryDate=this.currentDate,this.currentAsset.isTangible=1,this.currentAsset.assetLocationId=0,this.currentAsset.warrantyStatusId=0}ngOnInit(){0==this.assetService.isEditMode?this.breadcrumbs=[{label:"Asset Inventory"},{label:"Create Asset Inventory"}]:this.breadcrumbs=[{label:"Asset Inventory"},{label:"Edit Asset Inventory"}],this.currentAsset.installationCost="0.00",this.currentAsset.inventoryNumber="Generating",this.getAssetList(),this.loadCurrencyData(""),this.getLocationList(),this.getWarrantyStatusList(),this.assetInventoryId=this._actRoute.snapshot.params.id,this.assetInventoryId?(this.disableSaveForEdit=!0,this.isEditMode=!0,setTimeout(()=>{this.getAssetInventoryDataOnEdit(this.assetInventoryId)},1e3)):(this.getManagementStructureDetails(this.authService.currentUser?this.authService.currentUser.managementStructureId:null,this.authService.currentUser?this.authService.currentUser.employeeId:0),this.getManagementStructureLevelIds(this.authService.currentUser?this.authService.currentUser.managementStructureId:0),this.getAssetStatusList(""),this.getAssetInventoryStatusList(),this.isSpinnerVisible=!1)}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}get currentUserMasterCompanyId(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:null}getAssetList(){this.filterAssetIdInEdit("")}filterAssetIdInEdit(t){this.setEditArray=[],this.currentAsset&&null!=this.currentAsset.assetId&&null!=this.currentAsset.assetId?this.setEditArray.push(this.currentAsset.assetId):this.setEditArray.push(0);const e=t;this.commonService.autoSuggestionSmartDropDownList("Asset","AssetRecordId","AssetId",e,!0,20,this.setEditArray.join()).subscribe(t=>{this.allAssetList=t},t=>{const e=t;this.errorMessageHandler(e)})}loadVendorData(t){this.arrayVendlsit=[],this.arrayVendlsit.push(this.orignEditData.calibrationDefaultVendorId,this.orignEditData.certificationDefaultVendorId,this.orignEditData.inspectionDefaultVendorId,this.orignEditData.verificationDefaultVendorId,this.orignEditData.maintenanceDefaultVendorId,this.orignEditData.warrantyDefaultVendorId),this.vendorService.getVendorNameCodeListwithFilter(t,20,this.arrayVendlsit.join()).subscribe(t=>{this.allVendorsList=t.map(t=>({value:t.vendorId,label:t.vendorName})),this.vendorListFilter=this.allVendorsList},t=>{const e=t;this.errorMessageHandler(e)})}onFilterAssetCurrency(t){this.loadCurrencyData(t)}loadCurrencyData(t){1==this.isEditMode?(this.setEditArray=[],this.setEditArray.push(this.currentAsset.certificationCurrencyId,this.currentAsset.inspectionCurrencyId,this.currentAsset.calibrationCurrencyId,this.currentAsset.verificationCurrencyId)):this.setEditArray.push(0);const e=t;this.commonService.autoSuggestionSmartDropDownList("Currency","CurrencyId","Code",e,!0,20,this.setEditArray.join()).subscribe(t=>{this.allCurrencyInfo=t},t=>{const e=t;this.errorMessageHandler(e)})}getLocationList(){this.commonService.smartDropDownGetNamaWithCode("AssetLocation","AssetLocationId","Name").subscribe(t=>{this.allLocationList=t.map(t=>Object.assign({},t,{assetLocationId:t.value,name:t.label}))},t=>{const e=t;this.errorMessageHandler(e)})}getWarrantyStatusList(){this.commonService.smartDropDownList("AssetWarrantyStatus","AssetWarrantyStatusId","warrantyStatus").subscribe(t=>{this.allWarrantyStatusList=t},t=>{const e=t;this.errorMessageHandler(e)})}get employeeId(){return this.authService.currentUser?this.authService.currentUser.employeeId:0}getManagementStructureDetails(t,e=0,n=0){e=0==e?this.employeeId:e,n=this.isEditMode?n=t:0,this.commonService.getManagmentStrctureData(t,e,n).subscribe(t=>{if(1==this.isEditMode&&("fromHtml"==this.whereItComesFrom?setTimeout(()=>{this.isSpinnerVisible=!1},1500):this.isSpinnerVisible=!1),t){const e=t;e[0]&&"Level1"==e[0].level?(this.legalEntityList=e[0].lstManagmentStrcture,this.currentAsset.companyId=e[0].managementStructureId,this.currentAsset.managementStructureId=e[0].managementStructureId,this.currentAsset.buId=0,this.currentAsset.divisionId=0,this.currentAsset.departmentId=0,this.businessUnitList=[],this.divisionList=[],this.departmentList=[]):(this.currentAsset.companyId=0,this.currentAsset.buId=0,this.currentAsset.divisionId=0,this.currentAsset.departmentId=0,this.legalEntityList=[],this.businessUnitList=[],this.divisionList=[],this.departmentList=[]),e[1]&&"Level2"==e[1].level?(this.businessUnitList=e[1].lstManagmentStrcture,this.currentAsset.buId=e[1].managementStructureId,this.currentAsset.managementStructureId=e[1].managementStructureId,this.currentAsset.divisionId=0,this.currentAsset.departmentId=0,this.divisionList=[],this.departmentList=[]):(e[1]&&"NEXT"==e[1].level&&(this.businessUnitList=e[1].lstManagmentStrcture),this.currentAsset.buId=0,this.currentAsset.divisionId=0,this.currentAsset.departmentId=0,this.divisionList=[],this.departmentList=[]),e[2]&&"Level3"==e[2].level?(this.divisionList=e[2].lstManagmentStrcture,this.currentAsset.divisionId=e[2].managementStructureId,this.currentAsset.managementStructureId=e[2].managementStructureId,this.currentAsset.departmentId=0,this.departmentList=[]):(e[2]&&"NEXT"==e[2].level&&(this.divisionList=e[2].lstManagmentStrcture),this.currentAsset.divisionId=0,this.currentAsset.departmentId=0,this.departmentList=[]),e[3]&&"Level4"==e[3].level?(this.departmentList=e[3].lstManagmentStrcture,this.currentAsset.departmentId=e[3].managementStructureId,this.currentAsset.managementStructureId=e[3].managementStructureId):(this.currentAsset.departmentId=0,e[3]&&"NEXT"==e[3].level&&(this.departmentList=e[3].lstManagmentStrcture))}},t=>{this.isSpinnerVisible=!1;const e=t;this.errorMessageHandler(e)})}getManagementStructureLevelIds(t){t&&this.commonService.getManagementStructureData(this.authService.currentUser.masterCompanyId,t).subscribe(t=>{const e=t;null!=e&&(e&&e.levelId1&&(this.managementStructure.companyId=e.levelId1),e&&e.levelId2&&(this.managementStructure.buId=e.levelId2),e&&e.levelId3&&(this.managementStructure.divisionId=e.levelId3),e&&e.levelId4&&(this.managementStructure.departmentId=e.levelId4))},t=>{const e=t;this.errorMessageHandler(e)})}getAssetInventoryDataOnEdit(t){null!=t&&this.assetService.getByInventoryId(t).subscribe(t=>{this.orignEditData=t,this.assetRecordIdForCapes=t.assetRecordId,this.loadVendorData(""),this.onAssetIdselection({value:t.assetRecordId},"fromOnload"),this.currentAsset=Object.assign({},t,{memo:t.memo,isTangible:!t.isIntangible,assetRecordId:Object(z.d)("value",t.assetRecordId,this.allAssetList),entryDate:t.entryDate?new Date(t.entryDate):null,manufacturedDate:t.manufacturedDate?new Date(t.manufacturedDate):null,expirationDate:t.expirationDate?new Date(t.expirationDate):null,assetLocationId:t.assetLocationId?parseInt(t.assetLocationId):0,unitCost:t.unitCost?Object(z.b)(t.unitCost,2):"0.00",installationCost:t.installationCost?Object(z.b)(t.installationCost,2):"0.00",freight:t.freight?Object(z.b)(t.freight,2):"0.00",insurance:t.insurance?Object(z.b)(t.insurance,2):"0.00",taxes:t.taxes?Object(z.b)(t.taxes,2):"0.00",residualPercentage:t.residualPercentage?Object(z.b)(t.residualPercentage,2):"0.00",totalCost:t.totalCost?Object(z.b)(t.totalCost,2):"0.00",calibrationDefaultCost:t.calibrationDefaultCost?Object(z.b)(t.calibrationDefaultCost,2):"",certificationDefaultCost:t.certificationDefaultCost?Object(z.b)(t.certificationDefaultCost,2):"",inspectionDefaultCost:t.inspectionDefaultCost?Object(z.b)(t.inspectionDefaultCost,2):"",verificationDefaultCost:t.verificationDefaultCost?Object(z.b)(t.verificationDefaultCost,2):"",defaultVendorId:t.defaultVendorId?Object(z.d)("value",t.defaultVendorId,this.allVendorsList):null,warrantyCompanyId:t.warrantyCompanyId?Object(z.d)("value",t.warrantyCompanyId,this.allVendorsList):null,warrantyStartDate:t.warrantyStartDate?new Date(t.warrantyStartDate):null,warrantyEndDate:t.warrantyEndDate?new Date(t.warrantyEndDate):null}),this.originalAsset=this.currentAsset,this.getAssetStatusList(""),this.getAssetInventoryStatusList(),this.toGetDocumentsListNew(this.assetInventoryId),this.toGetDocumentsListWarranty(this.assetInventoryId),this.currentAsset.isTangible||this.toGetDocumentsListInt(this.assetInventoryId);this.currentAsset.isIntangible},t=>{this.isSpinnerVisible=!1;const e=t;this.errorMessageHandler(e)})}filterAssetList(t){if(this.assetListFilter=this.allAssetList,void 0!==t.query&&null!==t.query){this.filterAssetIdInEdit(t.query);const e=[...this.allAssetList.filter(e=>e.label.toLowerCase().includes(t.query.toLowerCase()))];this.assetListFilter=e}}filterVendorList(t){this.vendorListFilter=this.allVendorsList,void 0!==t.query&&null!==t.query?this.loadVendorData(t.query):this.loadVendorData("");const e=[...this.allVendorsList.filter(e=>e.label.toLowerCase().includes(t.query.toLowerCase()))];this.vendorListFilter=e}onAssetIdselection(t,e){t&&null!=t.value&&("fromHtml"==e&&(this.whereItComesFrom=e,this.isSpinnerVisible=!0),this.assetService.getAssetDataForInventoryById(t.value).subscribe(t=>{"fromHtml"==e&&(this.orignEditData=t,this.loadVendorData(""),this.getManagementStructureDetails(t?t.managementStructureId:null,this.authService.currentUser?this.authService.currentUser.employeeId:0),this.getManagementStructureLevelIds(t?t.managementStructureId:0)),this.assetRecordIdForCapes=this.assetRecordIdForCapes?this.assetRecordIdForCapes:t.assetRecordId,setTimeout(()=>{this.currentAsset=Object.assign({},t,{isTangible:!t.isIntangible,assetRecordId:{value:t.assetRecordId,label:t.assetId},entryDate:t.entryDate?new Date(t.entryDate):this.currentDate,manufacturedDate:t.manufacturedDate?new Date(t.manufacturedDate):null,expirationDate:t.expirationDate?new Date(t.expirationDate):null,unitCost:t.unitCost?Object(z.b)(t.unitCost,2):"0.00",installationCost:t.installationCost?Object(z.b)(t.installationCost,2):"0.00",freight:t.freight?Object(z.b)(t.freight,2):"0.00",insurance:t.insurance?Object(z.b)(t.insurance,2):"0.00",taxes:t.taxes?Object(z.b)(t.taxes,2):"0.00",residualPercentage:t.residualPercentage?Object(z.b)(t.residualPercentage,2):"0.00",calibrationDefaultCost:t.calibrationDefaultCost?Object(z.b)(t.calibrationDefaultCost,2):"",certificationDefaultCost:t.certificationDefaultCost?Object(z.b)(t.certificationDefaultCost,2):"",inspectionDefaultCost:t.inspectionDefaultCost?Object(z.b)(t.inspectionDefaultCost,2):"",verificationDefaultCost:t.verificationDefaultCost?Object(z.b)(t.verificationDefaultCost,2):"",calibrationDefaultVendorId:t.calibrationDefaultVendorId?Object(z.d)("value",t.calibrationDefaultVendorId,this.allVendorsList):null,certificationDefaultVendorId:t.certificationDefaultVendorId?Object(z.d)("value",t.certificationDefaultVendorId,this.allVendorsList):null,inspectionDefaultVendorId:t.inspectionDefaultVendorId?Object(z.d)("value",t.inspectionDefaultVendorId,this.allVendorsList):null,verificationDefaultVendorId:t.verificationDefaultVendorId?Object(z.d)("value",t.verificationDefaultVendorId,this.allVendorsList):null,maintenanceDefaultVendorId:t.maintenanceDefaultVendorId?Object(z.d)("value",t.maintenanceDefaultVendorId,this.allVendorsList):null,warrantyDefaultVendorId:t.warrantyDefaultVendorId?Object(z.d)("value",t.warrantyDefaultVendorId,this.allVendorsList):null,assetType:t.assetTypeName,isSerialized:!!t.isSerialized&&t.isSerialized,calibrationRequired:!!t.calibrationRequired&&t.calibrationRequired,certificationRequired:!!t.certificationRequired&&t.certificationRequired,inspectionRequired:!!t.inspectionRequired&&t.inspectionRequired,verificationRequired:!!t.verificationRequired&&t.verificationRequired,assetIsMaintenanceReqd:!!t.assetIsMaintenanceReqd&&t.assetIsMaintenanceReqd,isWarrantyRequired:!!t.isWarrantyRequired&&t.isWarrantyRequired,inventoryStatusId:this.basicValue?this.basicValue:1}),this.currentAsset.inventoryNumber=this.originalAsset?this.originalAsset.inventoryNumber:"Generating",this.currentAsset.inventoryNumber=this.originalAsset?this.originalAsset.inventoryNumber:"Generating","fromOnload"==e&&(this.currentAsset.entryDate=this.originalAsset.entryDate?this.originalAsset.entryDate:new Date(t.entryDate),this.currentAsset.manufacturedDate=this.originalAsset.manufacturedDate?this.originalAsset.manufacturedDate:new Date(t.manufacturedDate),this.currentAsset.expirationDate=this.originalAsset.expirationDate?this.originalAsset.expirationDate:new Date(t.expirationDate),this.currentAsset.unitCost=this.originalAsset.unitCost?this.originalAsset.unitCost:Object(z.b)(t.unitCost,2),this.currentAsset.installationCost=this.originalAsset.installationCost?this.originalAsset.installationCost:Object(z.b)(t.installationCost,2),this.currentAsset.freight=this.originalAsset.freight?this.originalAsset.freight:Object(z.b)(t.freight,2),this.currentAsset.insurance=this.originalAsset.insurance?this.originalAsset.insurance:Object(z.b)(t.insurance,2),this.currentAsset.taxes=this.originalAsset.taxes?this.originalAsset.taxes:Object(z.b)(t.taxes,2),this.currentAsset.residualPercentage=this.originalAsset.residualPercentage?this.originalAsset.residualPercentage:Object(z.b)(t.residualPercentage,2),this.currentAsset.calibrationDefaultCost=this.originalAsset.calibrationDefaultCost?this.originalAsset.calibrationDefaultCost:Object(z.b)(t.calibrationDefaultCost,2),this.currentAsset.certificationDefaultCost=this.originalAsset.certificationDefaultCost?this.originalAsset.certificationDefaultCost:Object(z.b)(t.certificationDefaultCost,2),this.currentAsset.inspectionDefaultCost=this.originalAsset.inspectionDefaultCost?this.originalAsset.inspectionDefaultCost:Object(z.b)(t.inspectionDefaultCost,2),this.currentAsset.verificationDefaultCost=this.originalAsset.verificationDefaultCost?this.originalAsset.verificationDefaultCost:Object(z.b)(t.verificationDefaultCost,2),this.currentAsset.assetLocationId=this.originalAsset.assetLocationId?this.originalAsset.assetLocationId:null,this.currentAsset.defaultVendorId=t.defaultVendorId?Object(z.d)("value",t.defaultVendorId,this.allVendorsList):null,this.currentAsset.calibrationDefaultVendorId=this.originalAsset.calibrationDefaultVendorId?Object(z.d)("value",this.originalAsset.calibrationDefaultVendorId,this.allVendorsList):null,this.currentAsset.certificationDefaultVendorId=this.originalAsset.certificationDefaultVendorId?Object(z.d)("value",this.originalAsset.certificationDefaultVendorId,this.allVendorsList):null,this.currentAsset.inspectionDefaultVendorId=this.originalAsset.inspectionDefaultVendorId?Object(z.d)("value",this.originalAsset.inspectionDefaultVendorId,this.allVendorsList):null,this.currentAsset.verificationDefaultVendorId=this.originalAsset.verificationDefaultVendorId?Object(z.d)("value",this.originalAsset.verificationDefaultVendorId,this.allVendorsList):null,this.currentAsset.maintenanceDefaultVendorId=this.originalAsset.maintenanceDefaultVendorId?Object(z.d)("value",this.originalAsset.maintenanceDefaultVendorId,this.allVendorsList):null,this.currentAsset.warrantyDefaultVendorId=this.originalAsset.warrantyDefaultVendorId?Object(z.d)("value",this.originalAsset.warrantyDefaultVendorId,this.allVendorsList):null,this.currentAsset.isSerialized=!!t.isSerialized&&t.isSerialized,this.currentAsset.calibrationRequired=!!t.calibrationRequired&&t.calibrationRequired,this.currentAsset.certificationRequired=!!t.certificationRequired&&t.certificationRequired,this.currentAsset.inspectionRequired=!!t.inspectionRequired&&t.inspectionRequired,this.currentAsset.verificationRequired=!!t.verificationRequired&&t.verificationRequired,this.currentAsset.assetIsMaintenanceReqd=!!t.assetIsMaintenanceReqd&&t.assetIsMaintenanceReqd,this.currentAsset.isWarrantyRequired=!!t.isWarrantyRequired&&t.isWarrantyRequired,this.currentAsset.warrantyStartDate=this.originalAsset.warrantyStartDate?this.originalAsset.warrantyStartDate:null,this.currentAsset.warrantyEndDate=this.originalAsset.warrantyEndDate?this.originalAsset.warrantyEndDate:null,this.currentAsset.maintenanceFrequencyMonths=this.originalAsset.maintenanceFrequencyMonths?this.originalAsset.maintenanceFrequencyMonths:t.maintenanceFrequencyMonths,this.currentAsset.maintenanceFrequencyDays=this.originalAsset.maintenanceFrequencyDays?this.originalAsset.maintenanceFrequencyDays:t.maintenanceFrequencyDays,this.currentAsset.assetLife=this.originalAsset.assetLife?this.originalAsset.assetLife:t.assetLife,this.currentAsset.calibrationCurrencyId=this.originalAsset.calibrationCurrencyId?this.originalAsset.calibrationCurrencyId:t.calibrationCurrencyId,this.currentAsset.certificationCurrencyId=this.originalAsset.certificationCurrencyId?this.originalAsset.certificationCurrencyId:t.certificationCurrencyId,this.currentAsset.inspectionCurrencyId=this.originalAsset.inspectionCurrencyId?this.originalAsset.inspectionCurrencyId:t.inspectionCurrencyId,this.currentAsset.verificationCurrencyId=this.originalAsset.verificationCurrencyId?this.originalAsset.verificationCurrencyId:t.verificationCurrencyId,this.currentAsset.inventoryNumber=this.originalAsset.inventoryNumber?this.originalAsset.inventoryNumber:"Generating",this.currentAsset.inventoryStatusId=this.originalAsset.inventoryStatusId?this.originalAsset.inventoryStatusId:t.inventoryStatusId,this.currentAsset.assetStatusId=this.originalAsset.assetStatusId?this.originalAsset.assetStatusId:t.assetStatusId,this.currentAsset.unitOfMeasureName=this.originalAsset.unitOfMeasureName?this.originalAsset.unitOfMeasureName:t.unitOfMeasureName,this.currentAsset.serialNo=this.originalAsset.serialNo,this.currentAsset.memo=this.originalAsset.memo,this.currentAsset.warrantyMemo=this.originalAsset.warrantyMemo?this.originalAsset.warrantyMemo:t.warrantyMemo,this.currentAsset.warrantyStatusId=this.originalAsset.warrantyStatusId?this.originalAsset.warrantyStatusId:t.warrantyStatusId,this.currentAsset.calibrationMemo=this.originalAsset.calibrationMemo?this.originalAsset.calibrationMemo:t.calibrationMemo,this.currentAsset.certificationMemo=this.originalAsset.certificationMemo?this.originalAsset.certificationMemo:t.certificationMemo,this.currentAsset.inspectionMemo=this.originalAsset.inspectionMemo?this.originalAsset.inspectionMemo:t.inspectionMemo,this.currentAsset.verificationMemo=this.originalAsset.verificationMemo?this.originalAsset.verificationMemo:t.verificationMemo,this.currentAsset.assetCalibrationMemo=this.originalAsset.assetCalibrationMemo?this.originalAsset.assetCalibrationMemo:t.assetCalibrationMemo,this.originalAsset.managementStructureId!=t.managementStructureId?this.currentAsset.managementStructureId=this.originalAsset.managementStructureId:this.currentAsset.managementStructureId=t.managementStructureId,this.getManagementStructureDetails(this.currentAsset?this.currentAsset.managementStructureId:null,this.authService.currentUser?this.authService.currentUser.employeeId:0),this.getManagementStructureLevelIds(this.currentAsset?this.currentAsset.managementStructureId:0)),this.getTotalCost(),"fromHtml"==e?setTimeout(()=>{this.isSpinnerVisible=!1},1e3):this.isSpinnerVisible=!0},2e3)},t=>{this.isSpinnerVisible=!1;const e=t;this.errorMessageHandler(e)}))}onChangeUnitCost(){this.currentAsset.unitCost=this.currentAsset.unitCost?Object(z.b)(this.currentAsset.unitCost,2):"0.00"}onChangeInstallCost(){this.currentAsset.installationCost=this.currentAsset.installationCost?Object(z.b)(this.currentAsset.installationCost,2):"0.00"}onChangeFreight(){this.currentAsset.freight=this.currentAsset.freight?Object(z.b)(this.currentAsset.freight,2):"0.00"}onChangeInsurance(){this.currentAsset.insurance=this.currentAsset.insurance?Object(z.b)(this.currentAsset.insurance,2):"0.00"}onChangeTaxes(){this.currentAsset.taxes=this.currentAsset.taxes?Object(z.b)(this.currentAsset.taxes,2):"0.00"}getTotalCost(){const t=(this.currentAsset.unitCost?parseFloat(this.currentAsset.unitCost.toString().replace(/\,/g,"")):0)+(this.currentAsset.installationCost?parseFloat(this.currentAsset.installationCost.toString().replace(/\,/g,"")):0)+(this.currentAsset.freight?parseFloat(this.currentAsset.freight.toString().replace(/\,/g,"")):0)+(this.currentAsset.insurance?parseFloat(this.currentAsset.insurance.toString().replace(/\,/g,"")):0)+(this.currentAsset.taxes?parseFloat(this.currentAsset.taxes.toString().replace(/\,/g,"")):0);this.currentAsset.totalCost=Object(z.b)(t,2)}onChangeCalDefaultCost(){this.currentAsset.calibrationDefaultCost=this.currentAsset.calibrationDefaultCost?Object(z.b)(this.currentAsset.calibrationDefaultCost,2):"0.00"}onChangeCertDefaultCost(){this.currentAsset.certificationDefaultCost=this.currentAsset.certificationDefaultCost?Object(z.b)(this.currentAsset.certificationDefaultCost,2):"0.00"}onChangeInspDefaultCost(){this.currentAsset.inspectionDefaultCost=this.currentAsset.inspectionDefaultCost?Object(z.b)(this.currentAsset.inspectionDefaultCost,2):"0.00"}onChangeVerDefaultCost(){this.currentAsset.verificationDefaultCost=this.currentAsset.verificationDefaultCost?Object(z.b)(this.currentAsset.verificationDefaultCost,2):"0.00"}getPageCount(t,e){return Math.ceil(t/e)}openCapes(){if(this.openCapesModel=!0,this.currentAsset.assetRecordId){const t=Object(z.h)("value",this.currentAsset.assetRecordId);this.assetService.getcapabilityListData(t).subscribe(t=>{this.allCapesInfo=t[0]},t=>{const e=t;this.errorMessageHandler(e)})}}closeCpes(){this.openCapesModel=!1}selectedLegalEntity(t){this.businessUnitList=[],this.divisionList=[],this.departmentList=[],this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=t&&null!=t&&null!=t&&(this.currentAsset.managementStructureId=t,this.commonService.getManagementStructurelevelWithEmployee(t,this.employeeId).pipe(Object(mt.a)(this.onDestroy$)).subscribe(t=>{this.businessUnitList=t},t=>{const e=t;this.errorMessageHandler(e)}))}selectedBusinessUnit(t){this.divisionList=[],this.departmentList=[],this.managementStructure.buId=t,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=t&&null!=t&&null!=t&&(this.currentAsset.managementStructureId=t,this.commonService.getManagementStructurelevelWithEmployee(t,this.employeeId).pipe(Object(mt.a)(this.onDestroy$)).subscribe(t=>{this.divisionList=t},t=>{const e=t;this.errorMessageHandler(e)}))}selectedDivision(t){this.departmentList=[],this.managementStructure.divisionId=t,this.managementStructure.departmentId=0,0!=t&&null!=t&&null!=t&&(this.currentAsset.managementStructureId=t,this.commonService.getManagementStructurelevelWithEmployee(t,this.employeeId).pipe(Object(mt.a)(this.onDestroy$)).subscribe(t=>{this.departmentList=t},t=>{const e=t;this.errorMessageHandler(e)}))}selectedDepartment(t){this.managementStructure.departmentId=t,0!=t&&null!=t&&null!=t&&(this.currentAsset.managementStructureId=t)}onAddMemo(t){this.disableEditor=!0,"Memo"==t&&(this.headerMemo=this.currentAsset.memo,this.memoLabel=t),"Tolerance Memo"==t&&(this.headerMemo=this.currentAsset.assetCalibrationMemo,this.memoLabel=t),"Calibration Memo"==t&&(this.headerMemo=this.currentAsset.calibrationMemo,this.memoLabel=t),"Certification Memo"==t&&(this.headerMemo=this.currentAsset.certificationMemo,this.memoLabel=t),"Inspection Memo"==t&&(this.headerMemo=this.currentAsset.inspectionMemo,this.memoLabel=t),"Verification Memo"==t&&(this.headerMemo=this.currentAsset.verificationMemo,this.memoLabel=t),"Maintenance Memo"==t&&(this.headerMemo=this.currentAsset.maintenanceMemo,this.memoLabel=t),"Warranty Memo"==t&&(this.headerMemo=this.currentAsset.warrantyMemo,this.memoLabel=t),"Document Memo"==t&&(this.headerMemo=this.documentInformation.docMemo,this.memoLabel=t)}onSaveMemo(){this.disleUpdate=!1,this.disableSaveForEdit=!1,"Memo"==this.memoLabel&&(this.currentAsset.memo=this.headerMemo),"Calibration Memo"==this.memoLabel&&(this.currentAsset.calibrationMemo=this.headerMemo),"Tolerance Memo"==this.memoLabel&&(this.currentAsset.assetCalibrationMemo=this.headerMemo),"Certification Memo"==this.memoLabel&&(this.currentAsset.certificationMemo=this.headerMemo),"Inspection Memo"==this.memoLabel&&(this.currentAsset.inspectionMemo=this.headerMemo),"Verification Memo"==this.memoLabel&&(this.currentAsset.verificationMemo=this.headerMemo),"Maintenance Memo"==this.memoLabel&&(this.currentAsset.maintenanceMemo=this.headerMemo),"Warranty Memo"==this.memoLabel&&(this.currentAsset.warrantyMemo=this.headerMemo),"Document Memo"==this.memoLabel&&(this.documentInformation.docMemo=this.headerMemo)}onChangeWarrantyEndDate(){this.currentAsset.warrantyEndDate&&(this.currentDate>this.currentAsset.warrantyEndDate?this.currentAsset.warrantyStatusId=2:this.currentAsset.warrantyStatusId=3)}closeMyModel(t){H(t).modal("hide"),this.disableDocumentSave=!0}fileUpload(t){0===t.files.length?this.disableFileAttachmentSubmit=!1:this.disableFileAttachmentSubmit=!0;const e=[];this.selectedFileAttachment=[];for(let a of t.files){for(var n=!1,s=0;s<this.sourceViewforDocumentList.length;s++)this.sourceViewforDocumentList[s].fileName==a.name&&1==this.sourceViewforDocumentList[s].typeId&&(n=!0,this.alertService.showMessage("Duplicate","Already Exists this file ",F.d.warn),this.disableFileAttachmentSubmit=!1,this.fileUploadInput&&this.fileUploadInput.clear());n||(e.push({link:a.objectURL,fileName:a.name,isFileFromServer:!1,fileSize:a.size}),this.formDataMain.append(a.name,a))}for(s=0;s<e.length;s++)this.selectedFileAttachment.push({docName:this.documentInformation.docName,docMemo:this.documentInformation.docMemo,docDescription:this.documentInformation.docDescription,createdBy:this.userName,updatedBy:this.userName,link:e[s].link,fileName:e[s].fileName,fileSize:e[s].fileSize,typeId:1,isFileFromServer:!1,attachmentDetailId:0})}removeFileMain(t){this.formDataMain.delete(t.file.name)}removeFileWarr(t){this.formDataWarr.delete(t.file.name)}removeFileInt(t){this.formDataInt.delete(t.file.name)}downloadFileUpload(t){const e=`${this.configurations.baseUrl}/api/FileUpload/downloadattachedfile?filePath=${t.link}`;window.location.assign(e)}addDocumentInformation(t,e){if(this.disleUpdate=!0,this.disableSaveForEdit=!1,this.selectedFileAttachment!=[])for(var n=0;n<this.selectedFileAttachment.length;n++)this.sourceViewforDocumentList.push({docName:e.docName,docMemo:e.docMemo,docDescription:e.docDescription,link:this.selectedFileAttachment[n].link,fileName:this.selectedFileAttachment[n].fileName,isFileFromServer:!1,attachmentDetailId:0,createdBy:this.userName,updatedBy:this.userName,createdDate:Date.now(),updatedDate:Date.now(),typeId:1,fileSize:(this.selectedFileAttachment[n].fileSize/1048576).toFixed(2)});if(e.attachmentDetailId>0||this.index>0){for(n=0;n<=this.sourceViewforDocumentList.length;n++)if(this.sourceViewforDocumentList[n].attachmentDetailId>0){if(this.sourceViewforDocumentList[n].attachmentDetailId==e.attachmentDetailId){this.sourceViewforDocumentList[n].docName=e.docName,this.sourceViewforDocumentList[n].docMemo=e.docMemo,this.sourceViewforDocumentList[n].docDescription=e.docDescription;break}}else if(n==this.index){this.sourceViewforDocumentList[n].docName=e.docName,this.sourceViewforDocumentList[n].docMemo=e.docMemo,this.sourceViewforDocumentList[n].docDescription=e.docDescription;break}this.index=0,this.isEditButton=!1,this.disableFileAttachmentSubmit,this.dismissDocumentPopupModelNew(t)}this.dismissDocumentPopupModelNew(t),this.sourceViewforDocumentList=[...this.sourceViewforDocumentList],this.index=0,this.isEditButton=!1,this.disableFileAttachmentSubmit,this.fileUploadInput&&this.fileUploadInput.clear(),this.isEditMode?this.onUploadDocumentListMain():1==this.updateDocuments?this.alertService.showMessage("Success","Updated Document Successfully.",F.d.success):this.alertService.showMessage("Success","Upload Documents Successfully.",F.d.success)}dismissDocumentPopupModelNew(t){this.fileUploadInput.clear(),this.fileUploadInputWarranty.clear(),this.closeMyModel(t)}dateFilterForTableNew(t,e){if(""!==t&&W(t).format("MMMM DD YYYY")){const n=[...this.sourceViewforDocumentList.filter(n=>W(n.createdDate).format("MMMM DD YYYY")===W(t).format("MMMM DD YYYY")&&"createdDate"===e||W(n.updatedDate).format("MMMM DD YYYY")===W(t).format("MMMM DD YYYY")&&"updatedDate"===e?n:void 0)];this.sourceViewforDocumentList=n}else this.sourceViewforDocumentList=this.allDocumentListOriginal}editCustomerDocument(t,e=0){this.updateDocuments=!0,this.disleUpdate=!0,this.selectedFileAttachment=[],this.isEditButton=!0,this.index=e,this.documentInformation=t,t.attachmentDetailId>0?this.toGetDocumentView(t.attachmentDetailId):this.sourceViewforDocument=t}deleteAttachmentRow(t,e,n){this.selectedRowForDelete=t,console.log("row",this.selectedRowForDelete),this.rowIndex=e,this.modal=this.modalService.open(n,{size:"sm"}),this.modal.result.then(()=>{},()=>{})}onAuditHistoryLoadSuccessful(t,e){this.alertService.stopLoadingMessage(),this.sourceViewforDocumentAudit=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then(()=>{},()=>{})}openHistory(t,e){this.alertService.startLoadingMessage(),this.commonService.GetAttachmentAudit(e.attachmentDetailId).subscribe(e=>{this.onAuditHistoryLoadSuccessful(e,t)},t=>{const e=t;this.errorMessageHandler(e)})}getColorCodeForHistory(t,e,n){const s=this.sourceViewforDocumentAudit,a=s.length;if(t>=0&&t<=a)return t+1===a||s[t+1][e]===n}dismissModelNew(){this.isDeleteMode=!1,this.modal.close()}deleteItemAndCloseModelNew(){let t=this.selectedRowForDelete.attachmentDetailId;t>0?this.commonService.GetAttachmentDeleteById(t,this.userName).subscribe(()=>{this.toGetDocumentsListNew(this.assetInventoryId),this.alertService.showMessage("Success","Deleted Attachment  Successfully",F.d.success),this.disableSaveForEdit=!1},t=>{const e=t;this.errorMessageHandler(e)}):(this.sourceViewforDocumentList.splice(this.rowIndex,1),this.sourceViewforDocumentList=[...this.sourceViewforDocumentList]),this.modal.close()}toGetDocumentView(t){this.commonService.GetAttachment(t).subscribe(t=>{this.sourceViewforDocument=t||[]})}toGetDocumentsListNew(t){this.commonService.GetDocumentsListNewAsset(t,54,this.maitananceeletedList).subscribe(t=>{this.sourceViewforDocumentList=t||[],this.allDocumentListOriginal=t,this.sourceViewforDocumentList.length>0&&this.sourceViewforDocumentList.forEach(t=>{t.isFileFromServer=!0})},t=>{const e=t;this.errorMessageHandler(e)})}saveFailedHelper(){}addDocumentDetails(){this.updateDocuments=!1,this.selectedFileAttachment=[],this.selectedFileAttachmentWarranty=[],this.index=0,this.disableFileAttachmentSubmit=!1,this.disableFileAttachmentSubmitWarranty=!0,this.isEditButton=!1,this.documentInformation={docName:"",docMemo:"",docDescription:"",attachmentDetailId:0}}dateFilterForTableWarranty(t,e){if(""!==t&&W(t).format("MMMM DD YYYY")){const n=[...this.sourceViewforDocumentListWarranty.filter(n=>W(n.createdDate).format("MMMM DD YYYY")===W(t).format("MMMM DD YYYY")&&"createdDate"===e||W(n.updatedDate).format("MMMM DD YYYY")===W(t).format("MMMM DD YYYY")&&"updatedDate"===e?n:void 0)];this.sourceViewforDocumentListWarranty=n}else this.sourceViewforDocumentListWarranty=this.allDocumentListOriginalWarranty}editCustomerDocumentWarranty(t,e=0){this.updateDocuments=!0,this.disleUpdate=!0,this.selectedFileAttachment=[],this.selectedFileAttachmentWarranty=[],this.isEditButton=!0,this.index=e,this.documentInformation=t,t.attachmentDetailId>0?this.toGetDocumentViewWarranty(t.attachmentDetailId):this.sourceViewforDocumentWarranty=t}deleteAttachmentRowWarranty(t,e,n){this.selectedRowForDeleteWarranty=t,this.rowIndex=e,this.modal=this.modalService.open(n,{size:"sm"}),this.modal.result.then(()=>{},()=>{})}toGetDocumentViewWarranty(t){this.commonService.GetAttachment(t).subscribe(t=>{this.sourceViewforDocumentWarranty=t||[]})}deleteItemAndCloseModelWarranty(){let t=this.selectedRowForDeleteWarranty.attachmentDetailId;t>0?this.commonService.GetAttachmentDeleteById(t,this.userName).subscribe(()=>{this.toGetDocumentsListWarranty(this.assetInventoryId),this.alertService.showMessage("Success","Deleted Attachment  Successfully",F.d.success),this.disableSaveForEdit=!1},t=>{const e=t;this.errorMessageHandler(e)}):(this.sourceViewforDocumentListWarranty.splice(this.rowIndex,1),this.sourceViewforDocumentListWarranty=[...this.sourceViewforDocumentListWarranty]),this.modal.close()}toGetDocumentsListWarranty(t){this.commonService.GetDocumentsListNewAsset(t,55,this.warrentyDeletedList).subscribe(t=>{this.sourceViewforDocumentListWarranty=t||[],this.allDocumentListOriginalWarranty=t,this.sourceViewforDocumentListWarranty.length>0&&this.sourceViewforDocumentListWarranty.forEach(t=>{t.isFileFromServer=!0})},t=>{const e=t;this.errorMessageHandler(e)})}fileUploadWarranty(t){0===t.files.length?this.disableFileAttachmentSubmitWarranty=!0:this.disableFileAttachmentSubmitWarranty=!1;const e=[];this.selectedFileAttachmentWarranty=[];for(let a of t.files){for(var n=!1,s=0;s<this.sourceViewforDocumentListWarranty.length;s++)this.sourceViewforDocumentListWarranty[s].fileName==a.name&&2==this.sourceViewforDocumentListWarranty[s].typeId&&(n=!0,this.alertService.showMessage("Duplicate","Already Exists this file ",F.d.warn),this.disableFileAttachmentSubmitWarranty=!0,this.fileUploadInputWarranty&&this.fileUploadInputWarranty.clear());n||(e.push({link:a.objectURL,fileName:a.name,isFileFromServer:!1,fileSize:a.size}),this.formDataWarr.append(a.name,a))}for(s=0;s<e.length;s++)this.selectedFileAttachmentWarranty.push({docName:this.documentInformation.docName,docMemo:this.documentInformation.docMemo,docDescription:this.documentInformation.docDescription,createdBy:this.userName,updatedBy:this.userName,link:e[s].link,fileName:e[s].fileName,fileSize:e[s].fileSize,typeId:2,isFileFromServer:!1,attachmentDetailId:0})}addDocumentInformationWarranty(t,e){if(this.disableSaveForEdit=!1,this.selectedFileAttachmentWarranty!=[])for(var n=0;n<this.selectedFileAttachmentWarranty.length;n++)this.sourceViewforDocumentListWarranty.push({docName:e.docName,docMemo:e.docMemo,docDescription:e.docDescription,link:this.selectedFileAttachmentWarranty[n].link,fileName:this.selectedFileAttachmentWarranty[n].fileName,isFileFromServer:!1,attachmentDetailId:0,createdBy:this.userName,updatedBy:this.userName,createdDate:Date.now(),updatedDate:Date.now(),typeId:2,fileSize:(this.selectedFileAttachmentWarranty[n].fileSize/1048576).toFixed(2)});if(e.attachmentDetailId>0||this.index>0){for(n=0;n<=this.sourceViewforDocumentListWarranty.length;n++)if(this.sourceViewforDocumentListWarranty[n].attachmentDetailId>0){if(this.sourceViewforDocumentListWarranty[n].attachmentDetailId==e.attachmentDetailId){this.sourceViewforDocumentListWarranty[n].docName=e.docName,this.sourceViewforDocumentListWarranty[n].docMemo=e.docMemo,this.sourceViewforDocumentListWarranty[n].docDescription=e.docDescription;break}}else if(n==this.index){this.sourceViewforDocumentListWarranty[n].docName=e.docName,this.sourceViewforDocumentListWarranty[n].docMemo=e.docMemo,this.sourceViewforDocumentListWarranty[n].docDescription=e.docDescription;break}this.index=0,this.isEditButton=!1,this.disableFileAttachmentSubmitWarranty,this.dismissDocumentPopupModelNew(t)}this.dismissDocumentPopupModelNew(t),this.sourceViewforDocumentListWarranty=[...this.sourceViewforDocumentListWarranty],this.index=0,this.isEditButton=!1,this.disableFileAttachmentSubmit,this.fileUploadInput&&this.fileUploadInput.clear(),this.isEditMode?this.onUploadDocumentListWarranty():1==this.updateDocuments?this.alertService.showMessage("Success","Updated Document Successfully.",F.d.success):this.alertService.showMessage("Success","Upload Documents Successfully.",F.d.success)}fileUploadInt(t){0===t.files.length?this.disableFileAttachmentSubmitInt=!0:this.disableFileAttachmentSubmitInt=!1;const e=[];this.selectedFileAttachmentInt=[];for(let a of t.files){for(var n=!1,s=0;s<this.sourceViewforDocumentListInt.length;s++)this.sourceViewforDocumentListInt[s].fileName==a.name&&(n=!0,this.alertService.showMessage("Duplicate","Already Exists this file ",F.d.warn),this.disableFileAttachmentSubmitInt=!0,this.fileUploadInputInt&&this.fileUploadInputInt.clear());n||(e.push({link:a.objectURL,fileName:a.name,isFileFromServer:!1,fileSize:a.size}),this.formDataInt.append(a.name,a))}for(s=0;s<e.length;s++)this.selectedFileAttachmentInt.push({docName:this.documentInformation.docName,docMemo:this.documentInformation.docMemo,docDescription:this.documentInformation.docDescription,createdBy:this.userName,updatedBy:this.userName,link:e[s].link,fileName:e[s].fileName,fileSize:e[s].fileSize,typeId:1,isFileFromServer:!1,attachmentDetailId:0})}addDocumentInformationInt(t,e){if(this.disableSaveForEdit=!1,this.selectedFileAttachmentInt!=[])for(var n=0;n<this.selectedFileAttachmentInt.length;n++)this.sourceViewforDocumentListInt.push({docName:e.docName,docMemo:e.docMemo,docDescription:e.docDescription,link:this.selectedFileAttachmentInt[n].link,fileName:this.selectedFileAttachmentInt[n].fileName,isFileFromServer:!1,attachmentDetailId:0,createdBy:this.userName,updatedBy:this.userName,createdDate:Date.now(),updatedDate:Date.now(),typeId:3,fileSize:(this.selectedFileAttachmentInt[n].fileSize/1048576).toFixed(2)});if(e.attachmentDetailId>0||this.index>0){for(n=0;n<=this.sourceViewforDocumentListInt.length;n++)if(this.sourceViewforDocumentListInt[n].attachmentDetailId>0){if(this.sourceViewforDocumentListInt[n].attachmentDetailId==e.attachmentDetailId){this.sourceViewforDocumentListInt[n].docName=e.docName,this.sourceViewforDocumentListInt[n].docMemo=e.docMemo,this.sourceViewforDocumentListInt[n].docDescription=e.docDescription;break}}else if(n==this.index){this.sourceViewforDocumentListInt[n].docName=e.docName,this.sourceViewforDocumentListInt[n].docMemo=e.docMemo,this.sourceViewforDocumentListInt[n].docDescription=e.docDescription;break}this.index=0,this.isEditButton=!1,this.disableFileAttachmentSubmitInt,this.dismissDocumentPopupModelNew(t)}this.dismissDocumentPopupModelNew(t),this.sourceViewforDocumentListInt=[...this.sourceViewforDocumentListInt],this.index=0,setTimeout(()=>{this.isEditButton=!1},1e3),this.disableFileAttachmentSubmitInt,this.fileUploadInputInt&&this.fileUploadInputInt.clear(),this.isEditMode?this.onUploadDocumentListInt():1==this.updateDocuments?this.alertService.showMessage("Success","Updated Document Successfully.",F.d.success):this.alertService.showMessage("Success","Upload Documents Successfully.",F.d.success)}deleteItemAndCloseModelInt(){let t=this.selectedRowForDeleteInt.attachmentDetailId;t>0?this.commonService.GetAttachmentDeleteById(t,this.userName).subscribe(()=>{this.toGetDocumentsListInt(this.assetInventoryId),this.alertService.showMessage("Success","Deleted Attachment  Successfully",F.d.success),this.disableSaveForEdit=!1},t=>{const e=t;this.errorMessageHandler(e)}):(this.sourceViewforDocumentListInt.splice(this.rowIndex,1),this.sourceViewforDocumentListInt=[...this.sourceViewforDocumentListInt]),this.modal.close()}toGetDocumentsListInt(t){this.commonService.GetDocumentsListNewAsset(t,56,this.intangibleDeletedList).subscribe(t=>{this.sourceViewforDocumentListInt=t||[],this.allDocumentListOriginal=t,this.sourceViewforDocumentListInt.length>0&&this.sourceViewforDocumentListInt.forEach(t=>{t.isFileFromServer=!0})},t=>{const e=t;this.errorMessageHandler(e)})}dateFilterForTableInt(t,e){if(""!==t&&W(t).format("MMMM DD YYYY")){const n=[...this.sourceViewforDocumentListInt.filter(n=>W(n.createdDate).format("MMMM DD YYYY")===W(t).format("MMMM DD YYYY")&&"createdDate"===e||W(n.updatedDate).format("MMMM DD YYYY")===W(t).format("MMMM DD YYYY")&&"updatedDate"===e?n:void 0)];this.sourceViewforDocumentListInt=n}else this.sourceViewforDocumentListInt=this.allDocumentListOriginal}editCustomerDocumentInt(t,e=0){this.updateDocuments=!0,this.disleUpdate=!0,this.selectedFileAttachmentInt=[],this.isEditButton=!0,this.index=e,this.documentInformation=t,t.attachmentDetailId>0?this.toGetDocumentViewInt(t.attachmentDetailId):this.sourceViewforDocumentInt=t}toGetDocumentViewInt(t){this.commonService.GetAttachment(t).subscribe(t=>{this.sourceViewforDocumentInt=t||[]})}deleteAttachmentRowInt(t,e,n){this.selectedRowForDeleteInt=t,this.rowIndex=e,this.modal=this.modalService.open(n,{size:"sm"}),this.modal.result.then(()=>{},()=>{})}onUploadDocumentListMain(){const t={referenceId:this.assetInventoryId,masterCompanyId:this.currentUserMasterCompanyId,createdBy:this.userName,updatedBy:this.userName,moduleId:54};for(var e in t)this.formDataMain.append(e,t[e]);if(this.sourceViewforDocumentList.length>0){const t=[];for(var n=0;n<this.sourceViewforDocumentList.length;n++)t.push({docName:this.sourceViewforDocumentList[n].docName,docMemo:this.sourceViewforDocumentList[n].docMemo,docDescription:this.sourceViewforDocumentList[n].docDescription,link:this.sourceViewforDocumentList[n].link,fileName:this.sourceViewforDocumentList[n].fileName,isFileFromServer:!1,attachmentDetailId:this.sourceViewforDocumentList[n].attachmentDetailId,createdBy:this.sourceViewforDocumentList[n].createdBy,updatedBy:this.sourceViewforDocumentList[n].updatedBy,createdDate:this.sourceViewforDocumentList[n].createdDate,updatedDate:this.sourceViewforDocumentList[n].updatedDate,fileSize:this.sourceViewforDocumentList[n].fileSize,moduleId:this.sourceViewforDocumentList[n].moduleId,typeId:this.sourceViewforDocumentList[n].typeId});this.formDataMain.append("attachmentdetais",JSON.stringify(t)),this.commonService.uploadDocumentsEndpoint(this.formDataMain).subscribe(()=>{this.isEditMode&&(1==this.updateDocuments?this.alertService.showMessage("Success","Updated Document Successfully.",F.d.success):this.alertService.showMessage("Success","Upload Documents Successfully.",F.d.success)),this.formDataMain=new FormData,this.toGetDocumentsListNew(this.assetInventoryId)},t=>{const e=t;this.errorMessageHandler(e)})}}onUploadDocumentListWarranty(){const t={referenceId:this.assetInventoryId,masterCompanyId:this.currentUserMasterCompanyId,createdBy:this.userName,updatedBy:this.userName,moduleId:55};for(var e in t)this.formDataWarr.append(e,t[e]);if(this.sourceViewforDocumentListWarranty.length>0){const t=[];for(var n=0;n<this.sourceViewforDocumentListWarranty.length;n++)t.push({docName:this.sourceViewforDocumentListWarranty[n].docName,docMemo:this.sourceViewforDocumentListWarranty[n].docMemo,docDescription:this.sourceViewforDocumentListWarranty[n].docDescription,link:this.sourceViewforDocumentListWarranty[n].link,fileName:this.sourceViewforDocumentListWarranty[n].fileName,isFileFromServer:!1,attachmentDetailId:this.sourceViewforDocumentListWarranty[n].attachmentDetailId,createdBy:this.sourceViewforDocumentListWarranty[n].createdBy,updatedBy:this.sourceViewforDocumentListWarranty[n].updatedBy,createdDate:this.sourceViewforDocumentListWarranty[n].createdDate,updatedDate:this.sourceViewforDocumentListWarranty[n].updatedDate,fileSize:this.sourceViewforDocumentListWarranty[n].fileSize,moduleId:this.sourceViewforDocumentListWarranty[n].moduleId,typeId:this.sourceViewforDocumentListWarranty[n].typeId});this.formDataWarr.append("attachmentdetais",JSON.stringify(t)),this.commonService.uploadDocumentsEndpoint(this.formDataWarr).subscribe(()=>{this.isEditMode&&(1==this.updateDocuments?this.alertService.showMessage("Success","Updated Document Successfully.",F.d.success):this.alertService.showMessage("Success","Upload Documents Successfully.",F.d.success)),this.formDataWarr=new FormData,this.toGetDocumentsListWarranty(this.assetInventoryId)},t=>{const e=t;this.errorMessageHandler(e)})}}onUploadDocumentListInt(){const t={referenceId:this.assetInventoryId,masterCompanyId:this.currentUserMasterCompanyId,createdBy:this.userName,updatedBy:this.userName,moduleId:56};for(var e in t)this.formDataInt.append(e,t[e]);if(this.sourceViewforDocumentListInt.length>0){const t=[];for(var n=0;n<this.sourceViewforDocumentListInt.length;n++)t.push({docName:this.sourceViewforDocumentListInt[n].docName,docMemo:this.sourceViewforDocumentListInt[n].docMemo,docDescription:this.sourceViewforDocumentListInt[n].docDescription,link:this.sourceViewforDocumentListInt[n].link,fileName:this.sourceViewforDocumentListInt[n].fileName,isFileFromServer:!1,attachmentDetailId:this.sourceViewforDocumentListInt[n].attachmentDetailId,createdBy:this.sourceViewforDocumentListInt[n].createdBy,updatedBy:this.sourceViewforDocumentListInt[n].updatedBy,createdDate:this.sourceViewforDocumentListInt[n].createdDate,updatedDate:this.sourceViewforDocumentListInt[n].updatedDate,fileSize:this.sourceViewforDocumentListInt[n].fileSize,moduleId:this.sourceViewforDocumentListInt[n].moduleId,typeId:this.sourceViewforDocumentListInt[n].typeId});this.formDataInt.append("attachmentdetais",JSON.stringify(t)),this.commonService.uploadDocumentsEndpoint(this.formDataInt).subscribe(()=>{this.isEditMode&&(1==this.updateDocuments?this.alertService.showMessage("Success","Updated Document Successfully.",F.d.success):this.alertService.showMessage("Success","Upload Documents Successfully.",F.d.success)),this.formDataInt=new FormData,this.toGetDocumentsListInt(this.assetInventoryId)},t=>{const e=t;this.errorMessageHandler(e)})}}getmemo(t){this.disableSaveForEdit=!1}getmemoInfo(t){this.disleUpdate=!1}editorgetmemo(t){this.disableEditor=!1}onSaveAssetInventory(){if(this.postData={},1==this.currentAsset.isTangible){if(1==this.currentAsset.calibrationRequired&&0==this.currentAsset.calibrationFrequencyMonths&&0==this.currentAsset.calibrationFrequencyDays)return void this.alertService.showMessage("Warning","Months & Days Cant be Zero",F.d.warn);if(1==this.currentAsset.certificationRequired&&0==this.currentAsset.certificationFrequencyMonths&&0==this.currentAsset.certificationFrequencyDays)return void this.alertService.showMessage("Warning","Months & Days Cant be Zero",F.d.warn);if(1==this.currentAsset.inspectionRequired&&0==this.currentAsset.inspectionFrequencyMonths&&0==this.currentAsset.inspectionFrequencyDays)return void this.alertService.showMessage("Warning","Months & Days Cant be Zero",F.d.warn);if(1==this.currentAsset.verificationRequired&&0==this.currentAsset.verificationFrequencyMonths&&0==this.currentAsset.verificationFrequencyDays)return void this.alertService.showMessage("Warning","Months & Days Cant be Zero",F.d.warn);if(1==this.currentAsset.assetIsMaintenanceReqd&&0==this.currentAsset.maintenanceFrequencyMonths&&0==this.currentAsset.maintenanceFrequencyDays)return void this.alertService.showMessage("Warning","Months & Days Cant be Zero",F.d.warn);this.postData=Object.assign({},this.currentAsset,{assetInventoryId:this.assetInventoryId,assetRecordId:Object(z.h)("value",this.currentAsset.assetRecordId),entryDate:this.currentAsset.entryDate?this.datePipe.transform(this.currentAsset.entryDate,"MM/dd/yyyy"):null,manufacturedDate:this.currentAsset.manufacturedDate?this.datePipe.transform(this.currentAsset.manufacturedDate,"MM/dd/yyyy"):null,expirationDate:this.currentAsset.expirationDate?this.datePipe.transform(this.currentAsset.expirationDate,"MM/dd/yyyy"):null,unitCost:this.currentAsset.unitCost?parseFloat(this.currentAsset.unitCost.toString().replace(/\,/g,"")):"0.00",installationCost:this.currentAsset.installationCost?parseFloat(this.currentAsset.installationCost.toString().replace(/\,/g,"")):"0.00",freight:this.currentAsset.freight?parseFloat(this.currentAsset.freight.toString().replace(/\,/g,"")):"0.00",insurance:this.currentAsset.insurance?parseFloat(this.currentAsset.insurance.toString().replace(/\,/g,"")):"0.00",taxes:this.currentAsset.taxes?parseFloat(this.currentAsset.taxes.toString().replace(/\,/g,"")):"0.00",totalCost:this.currentAsset.totalCost?parseFloat(this.currentAsset.totalCost.toString().replace(/\,/g,"")):"0.00",calibrationDefaultCost:this.currentAsset.calibrationDefaultCost?this.currentAsset.calibrationDefaultCost.toString().replace(/\,/g,""):"0.00",certificationDefaultCost:this.currentAsset.certificationDefaultCost?this.currentAsset.certificationDefaultCost.toString().replace(/\,/g,""):"0.00",inspectionDefaultCost:this.currentAsset.inspectionDefaultCost?this.currentAsset.inspectionDefaultCost.toString().replace(/\,/g,""):"0.00",verificationDefaultCost:this.currentAsset.verificationDefaultCost?this.currentAsset.verificationDefaultCost.toString().replace(/\,/g,""):"0.00",warrantyCompanyId:this.currentAsset.warrantyCompanyId?Object(z.h)("value",this.currentAsset.warrantyCompanyId):null,warrantyStartDate:this.currentAsset.warrantyStartDate?this.datePipe.transform(this.currentAsset.warrantyStartDate,"MM/dd/yyyy"):null,warrantyEndDate:this.currentAsset.warrantyEndDate?this.datePipe.transform(this.currentAsset.warrantyEndDate,"MM/dd/yyyy"):null,calibrationDefaultVendorId:this.currentAsset.calibrationDefaultVendorId?Object(z.h)("value",this.currentAsset.calibrationDefaultVendorId):null,certificationDefaultVendorId:this.currentAsset.certificationDefaultVendorId?Object(z.h)("value",this.currentAsset.certificationDefaultVendorId):null,inspectionDefaultVendorId:this.currentAsset.inspectionDefaultVendorId?Object(z.h)("value",this.currentAsset.inspectionDefaultVendorId):null,verificationDefaultVendorId:this.currentAsset.verificationDefaultVendorId?Object(z.h)("value",this.currentAsset.verificationDefaultVendorId):null,maintenanceDefaultVendorId:this.currentAsset.maintenanceDefaultVendorId?Object(z.h)("value",this.currentAsset.maintenanceDefaultVendorId):null,warrantyDefaultVendorId:this.currentAsset.warrantyDefaultVendorId?Object(z.h)("value",this.currentAsset.warrantyDefaultVendorId):null})}else this.postData=Object.assign({},this.currentAsset,{assetInventoryId:this.assetInventoryId,assetRecordId:Object(z.h)("value",this.currentAsset.assetRecordId),entryDate:this.currentAsset.entryDate?this.datePipe.transform(this.currentAsset.entryDate,"MM/dd/yyyy"):null});this.isEditMode?this.assetService.updateAssetInventory(this.postData).subscribe(t=>{t?(this.disableSaveForEdit=!0,this.currentAsset.updatedBy=this.userName,this.assetInventoryId=t.assetInventoryId,this.alertService.showMessage("Success","Asset Inventory Updated Successfully.",F.d.success)):this.alertService.showMessage("Failed","Asset Inventory not Updated Successfully.",F.d.error)},t=>{const e=t;this.errorMessageHandler(e)}):this.assetService.addAssetInventory(this.postData).subscribe(t=>{t?(this.currentAsset.updatedBy=this.userName,this.assetInventoryId=t.assetInventoryId,this.onUploadDocumentListMain(),this.onUploadDocumentListWarranty(),this.onUploadDocumentListInt(),this.alertService.showMessage("Success","Asset Inventory Created Successfully.",F.d.success),this.route.navigateByUrl("/assetmodule/assetpages/app-asset-inventory-listing")):this.alertService.showMessage("Failed","Asset Inventory not created successfully.",F.d.error)},t=>{const e=t;this.errorMessageHandler(e)})}onFilterAssetStatus(t){this.getAssetStatusList(t)}getAssetStatusList(t){this.setEditArray=[],1==this.isEditMode&&this.currentAsset.assetStatusId?this.setEditArray.push(this.currentAsset.assetStatusId):this.setEditArray.push(0);const e=t;this.commonService.autoSuggestionSmartDropDownList("AssetStatus","AssetStatusId","Name",e,!0,20,this.setEditArray.join()).subscribe(t=>{this.assetStatusList=t.map(t=>Object.assign({},t,{assetStatusId:t.value,name:t.label}))},t=>{const e=t;this.errorMessageHandler(e)})}getAssetInventoryStatusList(){if(1==this.isEditMode){this.setEditArray=[],this.setEditArray.push(this.currentAsset.inventoryStatusId);const t="";this.commonService.autoSuggestionSmartDropDownList("AssetInventoryStatus","AssetInventoryStatusId","Status",t,!0,200,this.setEditArray.join()).subscribe(t=>{this.assetInventoryStatusList=t},t=>{const e=t;this.errorMessageHandler(e)})}else this.commonService.smartDropDownList("AssetInventoryStatus","AssetInventoryStatusId","Status").subscribe(t=>{this.assetInventoryStatusList=t},t=>{const e=t;this.errorMessageHandler(e)});this.currentAsset.inventoryStatusId?this.currentAsset.inventoryStatusId=this.currentAsset.inventoryStatusId:this.assetInventoryStatusList.forEach(t=>{"Available"==t.label&&(this.currentAsset.inventoryStatusId=t.value,this.basicValue=t.value)})}errorMessageHandler(t){this.isSpinnerVisible=!1,this.alertService.showMessage("Error",t,F.d.error)}parsedText(t){if(t){return(new DOMParser).parseFromString("<!doctype html><body>"+t,"text/html").body.textContent}}restore(t,e,n){this.restorerecord=e,this.documentType=n,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then(()=>{},()=>{})}restoreRecord(){this.restorerecord&&null!=this.restorerecord.attachmentDetailId&&this.commonService.updatedeletedrecords("AttachmentDetails","AttachmentDetailId",this.restorerecord.attachmentDetailId).subscribe(t=>{this.getDeleteListByStatus(!0,this.documentType),this.disableSaveForEdit=!1,this.alertService.showMessage("Success","Successfully Updated Status",F.d.success),this.modal.close()},t=>{const e=t;this.errorMessageHandler(e)})}dismissModel(){this.modal.close()}getDeleteListByStatus(t,e){this.isSpinnerVisible=!0,1==e?(this.maitananceeletedList=t,this.toGetDocumentsListNew(this.assetInventoryId)):2==e?(this.warrentyDeletedList=t,this.toGetDocumentsListWarranty(this.assetInventoryId)):(this.intangibleDeletedList=t,this.toGetDocumentsListInt(this.assetInventoryId)),setTimeout(()=>{this.isSpinnerVisible=!1},1e3)}addNew(){this.route.navigateByUrl("/assetmodule/assetpages/app-create-asset-inventory"),this.assetService.listCollection={},this.assetService.isEditMode=!1}};ht.ctorParameters=()=>[{type:O.a},{type:c.Location},{type:j.a},{type:x.a},{type:P.a},{type:F.b},{type:_.a},{type:U.a},{type:L.c},{type:S.Router},{type:S.ActivatedRoute},{type:c.DatePipe}],s.b([Object(a.ViewChild)("fileUploadInput",{static:!1})],ht.prototype,"fileUploadInput",void 0),s.b([Object(a.ViewChild)("fileUploadInputWarranty",{static:!1})],ht.prototype,"fileUploadInputWarranty",void 0),s.b([Object(a.ViewChild)("fileUploadInputInt",{static:!1})],ht.prototype,"fileUploadInputInt",void 0),ht=s.b([Object(a.Component)({selector:"app-create-asset-inventory",template:s.c(n("JaF0")).default,providers:[c.DatePipe],styles:[s.c(n("jewU")).default]})],ht);var bt=n("MKys");let vt=class{constructor(t,e){this.alertService=t,this._route=e}ngOnInit(){}openAllCollapse(){H("#step1").collapse("show"),H("#step2").collapse("show"),H("#step3").collapse("show"),H("#step4").collapse("show")}closeAllCollapse(){H("#step1").collapse("hide"),H("#step2").collapse("hide"),H("#step3").collapse("hide"),H("#step4").collapse("hide")}};vt.ctorParameters=()=>[{type:F.b},{type:S.Router}],s.b([Object(a.Input)()],vt.prototype,"assetViewList",void 0),vt=s.b([Object(a.Component)({selector:"app-view-asset",template:s.c(n("Ag15")).default,animations:[T.a],styles:[s.c(n("GCBe")).default]})],vt);let gt=class{constructor(t,e,n,s,a,r,i){this.commonService=t,this._actRoute=e,this.assetService=n,this.assetLocationService=s,this.authService=a,this.alertService=r,this.router=i,this.onDestroy$=new pt.a,this.assetAdjustmentSetup={},this.assetAdjustmentData=[],this.allAdjReasonInfo=[],this.allAssetList=[],this.assetListFilter=[],this.allLocationList=[],this.tempAssetData=[],this.isSpinnerVisible=!0,this.existingMgmentStuc={level1:"",level2:"",level3:"",level4:""},this.managementStructure={companyId:0,buId:0,divisionId:0,departmentId:0},this.managementStructureOnLoad={companyId:0,buId:0,divisionId:0,departmentId:0},this.companyAllow=!1,this.businessAllow=!1,this.divisionAllow=!1,this.deptAllow=!1,this.showCompany=!1,this.showBusiness=!1,this.showDivision=!1,this.showDepartment=!1,this.disableLevel1=!1,this.disableLevel2=!1,this.disableLevel3=!1,this.disableLevel4=!1,this.disableMgmtStrucAdj=!1,this.usefulLifeAllow=!1,this.disableUsefulLifeAdj=!1,this.assetIdAllow=!1,this.disableAssetIdAdj=!1,this.locationAllow=!1,this.disableLocationAdj=!1,this.disableLocation=!1}ngOnInit(){this.getAssetAdjustmentDataType(),this.getAdjReasonData(),this.assetInventoryId=this._actRoute.snapshot.params.id,this.assetInventoryId&&this.getAssetAdjDetailsById(this.assetInventoryId)}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}get currentUserMasterCompanyId(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:null}getLegalEntity(){this.commonService.getLegalEntityList().pipe(Object(mt.a)(this.onDestroy$)).subscribe(t=>{this.legalEntityList=t})}getAssetList(){this.commonService.smartDropDownList("Asset","AssetRecordId","AssetId").pipe(Object(mt.a)(this.onDestroy$)).subscribe(t=>{this.allAssetList=t})}getLocationList(){this.assetLocationService.getAssetLocationsList().pipe(Object(mt.a)(this.onDestroy$)).subscribe(t=>{this.allLocationList=t})}getAdjReasonData(){this.commonService.smartDropDownList("StocklineAdjustmentReason","AdjustmentReasonId","Description").subscribe(t=>{this.allAdjReasonInfo=t})}getAssetAdjustmentDataType(){this.commonService.smartDropDownList("AssetInventoryAdjustmentDataType","AssetInventoryAdjustmentDataTypeId","Description").pipe(Object(mt.a)(this.onDestroy$)).subscribe(t=>{this.assetAdjustmentData=t.map(t=>({adjustmentDataTypeId:t.value,assetInventoryAdjustmentDataType:t.label})),this.assetAdjustmentData=this.assetAdjustmentData.sort((t,e)=>t.adjustmentDataTypeId>e.adjustmentDataTypeId?1:e.adjustmentDataTypeId>t.adjustmentDataTypeId?-1:0),this.assetAdjustmentData.map(t=>{t.adjustmentReasonId=0,this.isSpinnerVisible=!1})})}getAssetAdjDetailsById(t){this.assetService.getAdjustmentByAssetInventoryId(t).subscribe(t=>{console.log(t),this.assetAdjustmentSetup=Object.assign({},t,{unitCost:t.unitCost?Object(z.b)(t.unitCost,2):""}),this.assetAdjustmentData.map(t=>{1==t.adjustmentDataTypeId&&(t.beforeValue=this.assetAdjustmentSetup.managementStructureId),3==t.adjustmentDataTypeId&&(t.beforeValue=this.assetAdjustmentSetup.assetLife?this.assetAdjustmentSetup.assetLife:null),4==t.adjustmentDataTypeId&&(t.beforeValue=this.assetAdjustmentSetup.assetRecordId?this.assetAdjustmentSetup.assetRecordId:null),5==t.adjustmentDataTypeId&&(t.beforeValue=this.assetAdjustmentSetup.asset_Location?this.assetAdjustmentSetup.asset_Location:null)}),this.getManagementStructureCodes(this.assetAdjustmentSetup.managementStructureId)})}getManagementStructureCodes(t){this.commonService.getManagementStructureNamesAndCodes(t).subscribe(t=>{t.Level1Code?this.existingMgmentStuc.level1=t.Level1Code:this.existingMgmentStuc.level1="",t.Level2Code?this.existingMgmentStuc.level2=t.Level2Code:this.existingMgmentStuc.level2="",t.Level3Code?this.existingMgmentStuc.level3=t.Level3Code:this.existingMgmentStuc.level3="",t.Level4Code?this.existingMgmentStuc.level4=t.Level4Code:this.existingMgmentStuc.level4="",this.managementStructureOnLoad={companyId:void 0!==t.Level1?t.Level1:0,buId:void 0!==t.Level2?t.Level2:0,divisionId:void 0!==t.Level3?t.Level3:0,departmentId:void 0!==t.Level4?t.Level4:0}})}isCompanyEnable(t){this.companyAllow?(this.getLegalEntity(),this.showCompany=!0,this.showBusiness=!0,this.showDivision=!0,this.showDepartment=!0,this.businessAllow=!0,this.divisionAllow=!0,this.deptAllow=!0,t.checkedItem=!0,this.disableLevel1=!0,this.disableMgmtStrucAdj=!0):(this.showCompany=!1,this.showBusiness=!1,this.showDivision=!1,this.showDepartment=!1,this.businessAllow=!1,this.divisionAllow=!1,this.deptAllow=!1,t.checkedItem=!1,this.disableLevel1=!1,this.disableMgmtStrucAdj=!1),this.managementStructure.companyId=0,this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,this.businessUnitList=[],this.divisionList=[],this.departmentList=[],t.adjustmentReasonId=0}isBusinessEnable(t){this.businessAllow?(this.showBusiness=!0,this.showDivision=!0,this.showDepartment=!0,this.divisionAllow=!0,this.deptAllow=!0,t.checkedItem=!0,this.disableLevel2=!0):(this.showBusiness=!1,this.showDivision=!1,this.showDepartment=!1,this.divisionAllow=!1,this.deptAllow=!1,t.checkedItem=!1,this.disableLevel2=!1),this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,this.divisionList=[],this.departmentList=[],this.managementStructureOnLoad.companyId&&this.commonService.getBusinessUnitListByLegalEntityId(this.managementStructureOnLoad.companyId).pipe(Object(mt.a)(this.onDestroy$)).subscribe(t=>{this.businessUnitList=t}),this.companyAllow||this.businessAllow||this.divisionAllow||this.deptAllow?(t.checkedItem=!0,this.disableMgmtStrucAdj=!0):(t.checkedItem=!1,this.disableMgmtStrucAdj=!1),t.adjustmentReasonId=0}isDivisionEnable(t){this.divisionAllow?(this.showDivision=!0,this.showDepartment=!0,this.deptAllow=!0,t.checkedItem=!0,this.disableLevel3=!0):(this.showDivision=!1,this.showDepartment=!1,this.deptAllow=!1,t.checkedItem=!1,this.disableLevel3=!1),this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,this.departmentList=[],this.managementStructureOnLoad.buId&&this.commonService.getDivisionListByBU(this.managementStructureOnLoad.buId).pipe(Object(mt.a)(this.onDestroy$)).subscribe(t=>{this.divisionList=t}),this.companyAllow||this.businessAllow||this.divisionAllow||this.deptAllow?(t.checkedItem=!0,this.disableMgmtStrucAdj=!0):(t.checkedItem=!1,this.disableMgmtStrucAdj=!1),t.adjustmentReasonId=0}isDeptEnable(t){this.deptAllow?(this.showDepartment=!0,t.checkedItem=!0,this.disableLevel4=!0):(this.showDepartment=!1,t.checkedItem=!1,this.disableLevel4=!1),this.managementStructure.departmentId=0,this.managementStructureOnLoad.divisionId&&this.commonService.getDepartmentListByDivisionId(this.managementStructureOnLoad.divisionId).pipe(Object(mt.a)(this.onDestroy$)).subscribe(t=>{this.departmentList=t}),this.companyAllow||this.businessAllow||this.divisionAllow||this.deptAllow?(t.checkedItem=!0,this.disableMgmtStrucAdj=!0):(t.checkedItem=!1,this.disableMgmtStrucAdj=!1),t.adjustmentReasonId=0}selectedLegalEntity(t,e){this.businessUnitList=[],this.divisionList=[],this.departmentList=[],this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=t&&null!=t&&null!=t&&(e.afterValue=t,this.commonService.getBusinessUnitListByLegalEntityId(t).pipe(Object(mt.a)(this.onDestroy$)).subscribe(t=>{this.businessUnitList=t})),this.disableLevel1="0"==t||0==t}selectedBusinessUnit(t,e){this.divisionList=[],this.departmentList=[],this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=t&&null!=t&&null!=t&&(e.afterValue=t,this.commonService.getDivisionListByBU(t).pipe(Object(mt.a)(this.onDestroy$)).subscribe(t=>{this.divisionList=t})),this.disableLevel2="0"==t||0==t}selectedDivision(t,e){this.departmentList=[],this.managementStructure.departmentId=0,0!=t&&null!=t&&null!=t&&(e.afterValue=t,this.commonService.getDepartmentListByDivisionId(t).pipe(Object(mt.a)(this.onDestroy$)).subscribe(t=>{this.departmentList=t})),this.disableLevel3="0"==t||0==t}selectedDepartment(t,e){0!=t&&null!=t&&null!=t&&(e.afterValue=t),this.disableLevel4="0"==t||0==t}onChangeMgmtStrucAdjReason(t){this.disableMgmtStrucAdj="0"==t||0==t}onChangeUsefulLife(t){t.afterValue="",this.usefulLifeAllow?(t.checkedItem=!0,this.disableUsefulLifeAdj=!0):(t.checkedItem=!1,this.disableUsefulLifeAdj=!1)}onChangeUsefulLifeAdjReason(t){this.disableUsefulLifeAdj="0"==t||0==t}filterAssetList(t){if(this.assetListFilter=this.allAssetList,void 0!==t.query&&null!==t.query){const e=[...this.allAssetList.filter(e=>e.label.toLowerCase().includes(t.query.toLowerCase()))];this.assetListFilter=e}}onChangeAssetId(t){t.afterValue="",this.assetIdAllow?(this.getAssetList(),t.checkedItem=!0,this.disableAssetIdAdj=!0):(t.checkedItem=!1,this.disableAssetIdAdj=!1)}onChangeAssetIdAdjReason(t){this.disableAssetIdAdj="0"==t||0==t}onChangeLocation(t){t.afterValue=0,this.locationAllow?(this.getLocationList(),t.checkedItem=!0,this.disableLocationAdj=!0,this.disableLocation=!0):(t.checkedItem=!1,this.disableLocationAdj=!1,this.disableLocation=!1)}onChangeLocationSelect(t){this.disableLocation="0"==t||0==t}onChangeLocationAdjReason(t){this.disableLocationAdj="0"==t||0==t}onSaveAssetAdj(){console.log(this.assetAdjustmentData),this.tempAssetData=[],this.assetAdjustmentData.map(t=>{if(4==t.adjustmentDataTypeId&&(t.afterValue=t.afterValue?Object(z.h)("value",t.afterValue):null),t.adjustmentDataTypeId&&(t.adjustmentReason=t.adjustmentReasonId?Object(z.g)("label","value",t.adjustmentReasonId,this.allAdjReasonInfo):""),t.checkedItem){const e=Object.assign({},t,{assetInventoryId:this.assetInventoryId,masterCompanyId:this.currentUserMasterCompanyId,createdBy:this.userName});this.tempAssetData.push(e)}}),this.assetService.assetAdjustmentPost(this.tempAssetData).subscribe(t=>{console.log(t),this.alertService.showMessage("Success","Saved Asset Adjustment Sucessfully ",F.d.success),this.router.navigateByUrl("/assetmodule/assetpages/app-asset-inventory-listing")})}};gt.ctorParameters=()=>[{type:O.a},{type:S.ActivatedRoute},{type:x.a},{type:P.a},{type:U.a},{type:F.b},{type:S.Router}],gt=s.b([Object(a.Component)({selector:"app-asset-adjustment",template:s.c(n("UW3U")).default,styles:[s.c(n("ubCa")).default]})],gt);const ft=[{path:"assetpages",component:C,children:[{path:"app-asset-inventory-listing",component:Y,data:{title:"Asset Inventory Listing"}},{path:"app-asset-disposal-sale",component:$,data:{title:"Disposal Sale"}},{path:"app-asset-listing",component:B,data:{title:"Asset List"}},{path:"app-asset-calibration/:id",component:X,data:{title:"Asset Calibration"}},{path:"app-asset-capes/:id",component:nt,data:{title:"Asset Capes"}},{path:"app-asset-general-information",component:st,data:{title:"Asset GeneralInformation"}},{path:"app-asset-maintenance-warranty/:id",component:at,data:{title:"Asset Maintenance-Warranty"}},{path:"app-create-asset",component:ut,data:{title:"Asset Create"}},{path:"app-create-asset-inventory",component:ht,data:{title:"Asset Create Inventory"}},{path:"app-edit-asset-inventory/:id",component:ht,data:{title:"Asset Edit Inventory"}},{path:"app-edit-asset/:id",component:ut,data:{title:"Asset Edit"}},{path:"app-view-asset",component:vt,data:{title:"Asset View"}},{path:"app-asset-adjustment/:id",component:gt,data:{title:"Asset Adjustment"}}]}];let yt=class{};yt=s.b([Object(a.NgModule)({imports:[S.RouterModule.forChild(ft)],exports:[S.RouterModule],providers:[U.a,bt.a]})],yt);var It=n("tB1I");let At=class{constructor(t,e,n){this.router=t,this.route=e,this.assetService=n,this.readonly=!0,this.read=!1,this.msgs=[],this.activeIndex=0,this.isDisabledSteps=!1,this.isEditMode=!1,this.currentUrl=this.route.url,this.assetService.alertChangeObject$.subscribe(t=>{this.showComponentPTab=t,this.currentUrl=this.route.url}),this.assetService.indexObjChangeObject$.subscribe(t=>{this.activeIndex=t})}ngOnInit(){this.AssetId=this.router.snapshot.params.id,console.log(this.AssetId),this.AssetId?(this.isDisabledSteps=!1,this.isEditMode=!0,this.assetService.isEditMode=!0):(this.isDisabledSteps=!0,this.isEditMode=!1,this.assetService.isEditMode=!1,this.assetService.listCollection=null),this.showComponentPTab=this.assetService.ShowPtab,this.currentUrl=this.route.url,null!=this.assetService.listCollection&&1==this.assetService.isEditMode&&(this.isEditMode=!0),"/assetmodule/assetpages/app-asset-listing"==this.currentUrl?(this.showComponentPTab=!1,this.activeIndex=0):"/assetmodule/assetpages/app-create-asset"==this.currentUrl&&(this.activeIndex=0,this.showComponentPTab=!0,console.log(this.showComponentPTab),this.isEditMode||(this.isDisabledSteps=!0)),"/assetmodule/assetpages/app-edit-asset"==this.currentUrl&&(this.activeIndex=0,this.showComponentPTab=!0,this.isDisabledSteps=!1),"/assetmodule/assetpages/app-asset-inventory-listing"==this.currentUrl?(this.showComponentPTab=!1,this.activeIndex=0):"/assetmodule/assetpages/app-create-asset-inventory"==this.currentUrl&&(this.activeIndex=0,this.showComponentPTab=!0,console.log(this.showComponentPTab),this.isEditMode||(this.isDisabledSteps=!0)),"/assetmodule/assetpages/app-edit-asset-inventory"==this.currentUrl?(this.activeIndex=0,this.showComponentPTab=!0,this.isDisabledSteps=!1):"/assetmodule/assetpages/app-asset-capes"==this.currentUrl?(this.activeIndex=1,this.showComponentPTab=!0):"/assetmodule/assetpages/app-asset-calibration"==this.currentUrl?(this.activeIndex=2,this.showComponentPTab=!0):"/assetmodule/assetpages/app-asset-maintenance-warranty"==this.currentUrl&&(this.activeIndex=3,this.showComponentPTab=!0),this.items=[{label:"General Information",step:1,index:0,command:t=>{this.activeIndex=0,this.msgs.length=0,this.msgs.push({severity:"info",summary:"Create Asset",detail:t.label});const{assetId:e}=this.AssetId;this.isEditMode?this.route.navigateByUrl("assetmodule/assetpages/app-edit-asset/"+e):this.route.navigateByUrl("/assetmodule/assetpages/app-create-asset")}},{label:"Capes",step:2,index:1,command:t=>{if(!this.isDisabledSteps){this.assetService.financial=!0,this.activeIndex=1,this.msgs.length=0,this.msgs.push({severity:"info",summary:"Capes",detail:t.label});const{assetId:e}=this.AssetId;this.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/"+e)}}},{label:"Calibration",step:3,index:2,command:t=>{this.isDisabledSteps||(this.activeIndex=2,this.msgs.length=0,this.msgs.push({severity:"info",summary:"Calibration",detail:t.label}),this.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration"))}},{label:"Maintenance & Warranty",step:4,index:3,command:t=>{this.isDisabledSteps||(this.activeIndex=3,this.msgs.length=0,this.msgs.push({severity:"info",summary:"Maintenance & Warranty",detail:t.label}),this.route.navigateByUrl("/assetmodule/assetpages/app-asset-maintenance-warranty"))}}]}changeTab(t){console.log(t),this.AssetId=this.router.snapshot.params.id,(t.index=0)?(this.activeIndex=0,this.route.navigateByUrl("/assetmodule/assetpages/app-edit-asset/as220")):(t.index=1)?(this.activeIndex=1,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/as220")):(t.index=2)?(this.activeIndex=2,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration/as220")):(t.index=3)&&(this.activeIndex=3,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-maintenance-warranty/as220"))}};At.ctorParameters=()=>[{type:S.ActivatedRoute},{type:S.Router},{type:x.a}],At=s.b([Object(a.Component)({selector:"app-asset-steps",template:s.c(n("ACB3")).default,styles:[s.c(n("vJmB")).default]})],At);var Dt=n("p8Qr"),Mt=n("eNCC"),wt=n("DgWh"),Ct=n("agHx"),xt=n("dLo5");n.d(e,"AssetmanagementModule",(function(){return St}));let St=class{};St=s.b([Object(a.NgModule)({imports:[r.a,i.FormsModule,i.ReactiveFormsModule,l.a,o.b,c.CommonModule,d.TableModule,u.ButtonModule,p.SelectButtonModule,xt.DropdownModule,m.InputTextModule,h.MultiSelectModule,yt,b.InputSwitchModule,v.CheckboxModule,g.AutoCompleteModule,A.GMapModule,w.RadioButtonModule,M.FileUploadModule,D.CalendarModule,f.StepsModule,I.BreadcrumbModule,y.DialogModule,Mt.a,wt.EditorModule,Ct.KeyFilterModule,L.e],declarations:[C,B,$,Y,X,nt,st,at,ut,At,vt,gt,ht],providers:[x.a,Dt.a,O.a,L.b,It.a],schemas:[a.CUSTOM_ELEMENTS_SCHEMA],exports:[B],entryComponents:[ut]})],St)},bEiN:function(t,e,n){"use strict";n.r(e),e.default="block-bg2 {\n  border: 1px solid lightgray;\n  margin: 2px;\n}\n\ncontrol-label-pad-30 {\n  margin-top: 10px;\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n  padding-left: 30px;\n}\n\nlabel {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: 400;\n}\n\n.span-header-red {\n  color: red;\n  font-weight: bold;\n}\n\ninput[type=text],\ninput[type=number],\ninput[type=email],\nselect,\ntextarea {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.po-head {\n  font-weight: 700;\n  font-size: 16px !important;\n  color: #295d92 !important;\n}\n\n.fa-plus-circle.fa-lg {\n  color: green !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}\n\n.btn-tbl-file-download {\n  line-height: 7px !important;\n  width: 85px !important;\n  height: 19px;\n  border: 0;\n  color: #ffffff !important;\n  background: #337ab7;\n}"},bcEE:function(t,e,n){"use strict";n.r(e),e.default='<p-breadcrumb [model]="breadcrumbs" [home]="home"></p-breadcrumb>\r\n<div class="card new-card">\r\n    <div class="card-header bg-primary">\r\n      <div class="row">\r\n        <div class="col">\r\n          <h4 class="new-card-heading">  {{ assetService.isEditMode == true ? \'Edit\'  : \'Create\'}} Asset Calibration</h4>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type="button"\r\n            class="btn-sm new-btn-primary"\r\n            [routerLink]="[\'/assetmodule/assetpages/app-asset-listing\']">\r\n            Asset List\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class="card-body new-card-body">\r\n<div class="md-stepper-horizontal orange new-stepper-align">\r\n    <div class="md-step"\r\n         [ngClass]="{ active: activeIndex >= 0 , editable : activeIndex === 0}" (click)="changeOfTab(\'General\')">\r\n        <div class="md-step-circle"><span>1</span></div>\r\n        <div class="md-step-title">General Information</div>\r\n        <div class="md-step-bar-left"></div>\r\n        <div class="md-step-bar-right"></div>\r\n    </div>\r\n    <div class="md-step"\r\n         [ngClass]="{ active: activeIndex >= 1, editable : activeIndex === 1 }"\r\n         (click)="changeOfTab(\'Capes\')">\r\n        <div class="md-step-circle"><span>2</span></div>\r\n        <div class="md-step-title">Capes</div>\r\n        <div class="md-step-bar-left"></div>\r\n        <div class="md-step-bar-right"></div>\r\n    </div>\r\n    <div class="md-step"\r\n         [ngClass]="{ active: activeIndex >= 2 , editable : activeIndex === 2 }"\r\n         (click)="changeOfTab(\'Calibration\')">\r\n        <div class="md-step-circle"><span>3</span></div>\r\n        <div class="md-step-title">Calibration</div>\r\n        <div class="md-step-bar-left"></div>\r\n        <div class="md-step-bar-right"></div>\r\n    </div>\r\n    <div class="md-step"\r\n         [ngClass]="{ active: activeIndex >= 3 , editable : activeIndex === 3 }"\r\n         (click)="changeOfTab(\'Maintenance\')">\r\n        <div class="md-step-circle"><span>4</span></div>\r\n        <div class="md-step-title">Maintenance & Warranty</div>\r\n        <div class="md-step-bar-left"></div>\r\n        <div class="md-step-bar-right"></div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<form #generalForm="ngForm" method="post" id="" name="" class="form-horizontal add-custustomer">\r\n        <div class="form-row">\r\n            \r\n            <div class="col-md-12">\r\n    \r\n                <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="col-md-3">\r\n                            <label class="fs12">Asset ID : </label>\r\n                            <span class="span-header-red"> {{assetService.listCollection?.assetId}}</span>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <label class="fs12">Asset Name : </label>\r\n                            <span class="span-header-red"> {{assetService.listCollection?.name}}</span>\r\n\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <label class="fs12">Alt Asset ID : </label>\r\n                            <span class="span-header-red">{{assetService.listCollection?.alternateAssetName}}</span>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <label class="fs12">Asset Class/Attribute : </label>\r\n                            <span class="span-header-red"> {{assetService.listCollection?.assetAttributeType}}</span> \r\n                        </div>\r\n                        <div class="clear"></div>\r\n                        <hr />\r\n                        <div class="clear"></div>\r\n                        <div class="form-row">\r\n                            <div class="col-md-12">\r\n                                <div class="card new-card">\r\n                           \r\n                                    <div class="card-header bg-primary">\r\n                                        <h4 class="new-card-heading"> Calibration</h4>\r\n                                    </div>\r\n                                    </div>\r\n                                    </div>\r\n</div>\r\n                        <div class="col-md-12">\r\n                            <div class="form-row">\r\n                                <div class="col-sm-3 asset_border">\r\n                                    <div class="form-group">\r\n                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                            <label>\r\n                                                <input type="checkbox" (change)="calibrationMethod()" (ngModelChange)="setvaliDate($event)" [ngModelOptions]="{standalone: true}" [(ngModel)]="currentCalibration.calibrationRequired">\r\n                                                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                Calibration Required\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div *ngIf="currentCalibration.calibrationRequired">\r\n                                        <div class="form-group">\r\n                                            <label >Calibration Frequency  <span class="clr-red">*</span></label>\r\n                                            <div class="col-md-12">\r\n                                                <div class="col-sm-6">\r\n                                                    <label >Months</label>\r\n                                                    <input type="number" (ngModelChange)="setvaliDate($event)" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="currentCalibration.calibrationFrequencyMonths" min="0" max="12">\r\n\r\n                                                </div>\r\n                                                <div class="col-sm-6">\r\n                                                    <label > Days</label>\r\n                                                    <input type="number" (ngModelChange)="setvaliDate($event)" (input)="validateDates($event.target.value,currentCalibration,1)" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="currentCalibration.calibrationFrequencyDays" min="0" max="31">\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                     \r\n                                        <div style="padding: 8px;">\r\n                                            <label class="mr-tp-10">Default Vendor</label>\r\n                                            <p-autoComplete (ngModelChange)="setvaliDate($event)"  class="p-autoComplete-ctsm" field="name" name="vendorName" [dropdown]="true"\r\n                                            errorMessage="Records not found"  [suggestions]="allVendorInfoFilter" emptyMessage="No Records Found"\r\n                                            (completeMethod)="filterWarentyVendor($event)"  [size]="30" [minLength]="1"\r\n                                            [(ngModel)]="currentCalibration.calibrationDefaultVendorId"  #prellRevInsp="ngModel" >\r\n                                        </p-autoComplete>\r\n                                        </div>\r\n                                    \r\n                                        <div class="form-group">\r\n\r\n                                            <div class="col-md-12">\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Default Cost</label>\r\n                                                    <input class="form-control amount text-right"  (ngModelChange)="setvaliDate($event)" type="text" [ngModelOptions]="{standalone: true}" \r\n                                                           [(ngModel)]="currentCalibration.calibrationDefaultCost" (change)="formatToGlobal(currentCalibration)">\r\n\r\n                                                </div>\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Currency <span class="clr-red" *ngIf="currentCalibration.calibrationDefaultCost !=0">*</span></label>\r\n                                             \r\n                                                    <p-dropdown [required]="currentCalibration.calibrationDefaultCost !=0" [showClear]="true" class="p-dropdown-100" (ngModelChange)="setvaliDate($event)"   [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentCalibration.calibrationCurrencyId" name="calibrationCurrencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                       \r\n                                        <div style="padding: 8px;">\r\n                                            \r\n                                            <label class="mr-tp-10">GL Account <span class="clr-red" *ngIf="currentCalibration.calibrationRequired">*</span></label>\r\n                            <p-autoComplete (ngModelChange)="setvaliDate($event)"  class="p-autoComplete-ctsm" field="name" name="Inspector1" [dropdown]="true"\r\n                            errorMessage="Records not found"  [suggestions]="allGlInfoFilter" emptyMessage="No Records Found"\r\n                            (completeMethod)="filterWarentyGl($event)"  [size]="30" [minLength]="1"\r\n                            [(ngModel)]="currentCalibration.calibrationGlAccountId" [required]="currentCalibration.calibrationRequired"  #prellRevInsp3="ngModel" >\r\n                        </p-autoComplete> \r\n    \r\n    \r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Calibration Memo</label>\r\n                                          <div class="align_adh">\r\n                                                        <div [innerHTML]="currentCalibration.calibrationMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentCalibration.calibrationMemo)" class="text_editor_box"\r\n                                                            style="width: 96% !important;"></div>\r\n                                                        <i class="fa fa-pencil contoel_v" data-toggle="modal"\r\n                                                            data-target="#textarea-popup" matTooltip="Memo"\r\n                                                            matTooltipPosition="above"\r\n                                                            (click)="onAddTextAreaInfo(currentCalibration.calibrationMemo,1)"></i>\r\n                                                    </div>\r\n                                        </div>\r\n                                        <div class="clear"></div>\r\n                                    </div>\r\n                                    <div class="form-group col-sm-12 calibration-block w400" *ngIf="currentCalibration.calibrationRequired ">\r\n                                        <div>\r\n                                            <table class="table table-bordered table-striped">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th></th>\r\n                                                        <th colspan="2" class="tol_cld">Tolerance</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>Min</td>\r\n                                                        <td>\r\n                                                            <input (ngModelChange)="setvaliDate($event)" type="text" class="form-control mauto" [ngModelOptions]="{standalone: true}"\r\n                                                                   [(ngModel)]="currentCalibration.assetCalibrationMin">\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <input (ngModelChange)="setvaliDate($event)" type="text" class="form-control mauto" [ngModelOptions]="{standalone: true}"\r\n                                                                   [(ngModel)]="currentCalibration.assetCalibrationMinTolerance">\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Max</td>\r\n                                                        <td>\r\n                                                            <input (ngModelChange)="setvaliDate($event)" type="text" class="form-control mauto" [ngModelOptions]="{standalone: true}"\r\n                                                                   [(ngModel)]="currentCalibration.assetCalibratonMax">\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <input type="text" class="form-control mauto" (ngModelChange)="setvaliDate($event)" [ngModelOptions]="{standalone: true}"\r\n                                                                   [(ngModel)]="currentCalibration.assetCalibrationMaxTolerance">\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Expected</td>\r\n                                                        <td>\r\n                                                            <input (ngModelChange)="setvaliDate($event)" type="text" class="form-control mauto" [ngModelOptions]="{standalone: true}"\r\n                                                                   [(ngModel)]="currentCalibration.assetCalibrationExpected">\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <input (ngModelChange)="setvaliDate($event)" type="text" class="form-control mauto" [ngModelOptions]="{standalone: true}"\r\n                                                                   [(ngModel)]="currentCalibration.assetCalibrationExpectedTolerance">\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Memo</td>\r\n                                                        <td colspan="2">\r\n                                                          <div class="align_adh">\r\n                                                                        <div [innerHTML]="currentCalibration.assetCalibrationMemo"  matTooltipPosition="above" [matTooltip]="parsedText(currentCalibration.assetCalibrationMemo)" class="text_editor_box"\r\n                                                                            style="width: 96% !important;"></div>\r\n                                                                        <i class="fa fa-pencil contoel_v" data-toggle="modal"\r\n                                                                            data-target="#textarea-popup" matTooltip="Memo"\r\n                                                                            matTooltipPosition="above"\r\n                                                                            (click)="onAddTextAreaInfo(currentCalibration.assetCalibrationMemo,5)"></i>\r\n                                                                    </div>\r\n                                                       </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class="col-sm-3 asset_border">\r\n                                    <div class="form-group">\r\n                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                            <label>\r\n                                                <input (change)="ceretificationMethod()" (ngModelChange)="setvaliDate($event)" type="checkbox" [ngModelOptions]="{standalone: true}" [(ngModel)]="currentCalibration.certificationRequired">\r\n                                                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                Certification Required\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div *ngIf="currentCalibration.certificationRequired">\r\n                                        <div class="form-group">\r\n                                            <label>Certification Frequency  <span class="clr-red">*</span></label>\r\n                                            <div class="col-md-12">\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Months</label>\r\n                                                    <input (ngModelChange)="setvaliDate($event)" type="number" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="currentCalibration.certificationFrequencyMonths" min="0" max="12">\r\n\r\n                                                </div>\r\n                                                <div class="col-sm-6">\r\n                                                    <label> Days</label>\r\n                                                    <input (ngModelChange)="setvaliDate($event)" type="number" (input)="validateDates($event.target.value,currentCalibration,2)" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="currentCalibration.certificationFrequencyDays" min="0" max="31">\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                     \r\n                                        <div style="padding: 8px;">\r\n                                            <label class="mr-tp-10">Default Vendor</label>\r\n                                            <p-autoComplete (ngModelChange)="setvaliDate($event)"  class="p-autoComplete-ctsm" field="name" name="vendorName2" [dropdown]="true"\r\n                                            errorMessage="Records not found"  [suggestions]="allVendorInfoFilter" emptyMessage="No Records Found"\r\n                                            (completeMethod)="filterWarentyVendor2($event)"  [size]="30" [minLength]="1"\r\n                                            [(ngModel)]="currentCalibration.certificationDefaultVendorId"  #prellRevInsp="ngModel" >\r\n                                        </p-autoComplete>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n\r\n                                            <div class="col-md-12">\r\n                                                <div class="col-sm-6">\r\n                                                    <label >Default Cost </label>\r\n                                                    <input class="form-control amount text-right" (ngModelChange)="setvaliDate($event)" [ngModelOptions]="{standalone: true}" (change)="formatToGlobal(currentCalibration)"\r\n                                                           [(ngModel)]="currentCalibration.certificationDefaultCost" type="text">\r\n                                                </div>\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Currency <span class="clr-red" *ngIf="currentCalibration.certificationDefaultCost !=0">*</span> </label>\r\n                                                  \r\n                                                    <p-dropdown [required]="currentCalibration.certificationDefaultCost !=0" [showClear]="true" class="p-dropdown-100"  (ngModelChange)="setvaliDate($event)"  [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentCalibration.certificationCurrencyId" name="certificationCurrencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                      \r\n                                        <div style="padding: 8px;">\r\n                                            <label class="mr-tp-10">GL Account <span class="clr-red" *ngIf="currentCalibration.certificationRequired">*</span></label>\r\n                            <p-autoComplete  (ngModelChange)="setvaliDate($event)" class="p-autoComplete-ctsm" field="name" name="Inspector2" [dropdown]="true"\r\n                            errorMessage="Records not found"  [suggestions]="allGlInfoFilter" emptyMessage="No Records Found"\r\n                            (completeMethod)="filterWarentyGl2($event)"  [size]="30" [minLength]="1"\r\n                            [(ngModel)]="currentCalibration.certificationGlAccountId"  [required]="currentCalibration.certificationRequired" #prellRevInsp3="ngModel" >\r\n                        </p-autoComplete> \r\n    \r\n    \r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Certification Memo</label>\r\n                                            \x3c!-- <textarea (ngModelChange)="setvaliDate($event)" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                      [(ngModel)]="currentCalibration.certificationMemo"></textarea> --\x3e\r\n                                                      <div class="align_adh">\r\n                                                        <div [innerHTML]="currentCalibration.certificationMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentCalibration.certificationMemo)" class="text_editor_box"\r\n                                                            style="width: 96% !important;"></div>\r\n                                                        <i class="fa fa-pencil contoel_v" data-toggle="modal"\r\n                                                            data-target="#textarea-popup" matTooltip="Memo"\r\n                                                            matTooltipPosition="above"\r\n                                                            (click)="onAddTextAreaInfo(currentCalibration.certificationMemo,2)"></i>\r\n                                                    </div>\r\n                                      \r\n                                                    </div>\r\n                                        <div class="clear"></div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class="col-sm-3 asset_border">\r\n                                    <div class="form-group">\r\n                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                            <label>\r\n                                                <input (ngModelChange)="setvaliDate($event)" (change)="inspectionMethod()" type="checkbox" [ngModelOptions]="{standalone: true}" [(ngModel)]="currentCalibration.inspectionRequired">\r\n                                                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                Inspection Required\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div *ngIf="currentCalibration.inspectionRequired">\r\n                                        <div class="form-group">\r\n                                            <label>Inspection Frequency  <span class="clr-red">*</span></label>\r\n                                            <div class="col-md-12">\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Months</label>\r\n                                                    <input  (ngModelChange)="setvaliDate($event)" type="number" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="currentCalibration.inspectionFrequencyMonths" min="0" max="12">\r\n\r\n                                                </div>\r\n                                                <div class="col-sm-6">\r\n                                                    <label> Days</label>\r\n                                                    <input (ngModelChange)="setvaliDate($event)" type="number" (input)="validateDates($event.target.value,currentCalibration,3)" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="currentCalibration.inspectionFrequencyDays" min="0" max="31">\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div style="padding: 8px;">\r\n                                            <label class="mr-tp-10">Default Vendor</label>\r\n                                            <p-autoComplete (ngModelChange)="setvaliDate($event)" class="p-autoComplete-ctsm" field="name" name="vendorName3" [dropdown]="true"\r\n                                            errorMessage="Records not found"  [suggestions]="allVendorInfoFilter" emptyMessage="No Records Found"\r\n                                            (completeMethod)="filterWarentyVendor3($event)"  [size]="30" [minLength]="1"\r\n                                            [(ngModel)]="currentCalibration.inspectionDefaultVendorId"  #prellRevInsp="ngModel" >\r\n                                        </p-autoComplete>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n\r\n                                            <div class="col-md-12">\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Default Cost</label>\r\n                                                    <input (ngModelChange)="setvaliDate($event)" class="form-control amount text-right" type="text" [ngModelOptions]="{standalone: true}" (change)="formatToGlobal(currentCalibration)"\r\n                                                           [(ngModel)]="currentCalibration.inspectionDefaultCost">\r\n                                                </div>\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Currency <span class="clr-red" *ngIf="currentCalibration.inspectionDefaultCost !=0">*</span></label>\r\n                                                \r\n                                                    <p-dropdown [required]="currentCalibration.inspectionDefaultCost !=0"  [showClear]="true" class="p-dropdown-100" (ngModelChange)="setvaliDate($event)"   [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentCalibration.inspectionCurrencyId" name="inspectionCurrencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                     \r\n                                        <div style="padding: 8px;">\r\n                                            <label class="mr-tp-10">GL Account <span *ngIf="currentCalibration.inspectionRequired">*</span></label>\r\n                            <p-autoComplete (ngModelChange)="setvaliDate($event)" class="p-autoComplete-ctsm" field="name" name="Inspector3" [dropdown]="true"\r\n                            errorMessage="Records not found"  [suggestions]="allGlInfoFilter" emptyMessage="No Records Found"\r\n                            (completeMethod)="filterWarentyGl3($event)"  [size]="30" [minLength]="1" [required]="currentCalibration.inspectionRequired"\r\n                            [(ngModel)]="currentCalibration.inspectionGlaAccountId"  #prellRevInsp3="ngModel" >\r\n                        </p-autoComplete> \r\n    \r\n    \r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Inspection Memo</label>\r\n                                            \x3c!-- <textarea  (ngModelChange)="setvaliDate($event)" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                      [(ngModel)]="currentCalibration.inspectionMemo"></textarea> --\x3e\r\n                                                      <div class="align_adh">\r\n                                                        <div [innerHTML]="currentCalibration.inspectionMemo"  matTooltipPosition="above" [matTooltip]="parsedText(currentCalibration.inspectionMemo)" class="text_editor_box"\r\n                                                            style="width: 96% !important;"></div>\r\n                                                        <i class="fa fa-pencil contoel_v" data-toggle="modal"\r\n                                                            data-target="#textarea-popup" matTooltip="Memo"\r\n                                                            matTooltipPosition="above"\r\n                                                            (click)="onAddTextAreaInfo(currentCalibration.inspectionMemo,3)"></i>\r\n                                                    </div>\r\n                                                    </div>\r\n                                        <div class="clear"></div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class="col-sm-3 asset_border">\r\n                                    <div class="form-group">\r\n                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                            <label>\r\n                                                <input (ngModelChange)="setvaliDate($event)" (change)="verificationMethod()" type="checkbox" [ngModelOptions]="{standalone: true}" [(ngModel)]="currentCalibration.verificationRequired">\r\n                                                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                Verification Required\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div *ngIf="currentCalibration.verificationRequired">\r\n                                        <div class="form-group">\r\n                                            <label>Verification Frequency <span class="clr-red">*</span></label>\r\n                                            <div class="col-md-12">\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Months</label>\r\n                                                    <input (ngModelChange)="setvaliDate($event)" type="number" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="currentCalibration.verificationFrequencyMonths" min="0" max="12">\r\n\r\n                                                </div>\r\n                                                <div class="col-sm-6">\r\n                                                    <label> Days</label>\r\n                                                    <input (ngModelChange)="setvaliDate($event)" type="number" (input)="validateDates($event.target.value,currentCalibration,4)" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="currentCalibration.verificationFrequencyDays" min="0" max="31">\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div style="padding: 8px;">\r\n                                            <label class="mr-tp-10">Default Vendor</label>\r\n                                            <p-autoComplete  (ngModelChange)="setvaliDate($event)" class="p-autoComplete-ctsm" field="name" name="vendorName4" [dropdown]="true"\r\n                                            errorMessage="Records not found"  [suggestions]="allVendorInfoFilter" emptyMessage="No Records Found"\r\n                                            (completeMethod)="filterWarentyVendor4($event)"  [size]="30" [minLength]="1"\r\n                                            [(ngModel)]="currentCalibration.verificationDefaultVendorId"  #prellRevInsp="ngModel" >\r\n                                        </p-autoComplete>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n\r\n                                            <div class="col-md-12">\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Default Cost</label>\r\n                                                    <input (ngModelChange)="setvaliDate($event)" class="form-control amount text-right" [ngModelOptions]="{standalone: true}" (change)="formatToGlobal(currentCalibration)"\r\n                                                           [(ngModel)]="currentCalibration.verificationDefaultCost" type="text">\r\n                                                </div>\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Currency <span class="clr-red" *ngIf="currentCalibration.verificationDefaultCost !=0">*</span></label>\r\n            \r\n                                                    <p-dropdown [required]="currentCalibration.verificationDefaultCost !=0"  [showClear]="true" class="p-dropdown-100" (ngModelChange)="setvaliDate($event)"    [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentCalibration.verificationCurrencyId" name="verificationCurrencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div style="padding: 8px;">\r\n                                            <label class="mr-tp-10">GL Account <span *ngIf="currentCalibration.verificationRequired">*</span></label>\r\n                            <p-autoComplete  (ngModelChange)="setvaliDate($event)" class="p-autoComplete-ctsm" field="name" name="Inspector4" [dropdown]="true"\r\n                            errorMessage="Records not found"  [suggestions]="allGlInfoFilter" emptyMessage="No Records Found"\r\n                            (completeMethod)="filterWarentyGl4($event)"  [size]="30" [minLength]="1" [required]="currentCalibration.verificationRequired"\r\n                            [(ngModel)]="currentCalibration.verificationGlAccountId"  #prellRevInsp3="ngModel" >\r\n                        </p-autoComplete> \r\n    \r\n    \r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Verification Memo</label>\r\n                                            \x3c!-- <textarea (ngModelChange)="setvaliDate($event)" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                      [(ngModel)]="currentCalibration.verificationMemo"></textarea> --\x3e\r\n                                                      <div class="align_adh">\r\n                                                        <div [innerHTML]="currentCalibration.verificationMemo"  matTooltipPosition="above" [matTooltip]="parsedText(currentCalibration.verificationMemo)" class="text_editor_box"\r\n                                                            style="width: 96% !important;"></div>\r\n                                                        <i class="fa fa-pencil contoel_v" data-toggle="modal"\r\n                                                            data-target="#textarea-popup" matTooltip="Memo"\r\n                                                            matTooltipPosition="above"\r\n                                                            (click)="onAddTextAreaInfo(currentCalibration.verificationMemo,4)"></i>\r\n                                                    </div>\r\n                                        </div>\r\n                                        <div class="clear"></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-12">\r\n                                    <div class="margintop">\r\n                                        <button type="button" class="btn btn-primary pull-right submit-btn" (click)="nextClick(\'Next\')">Next</button>\r\n                                        <button  [disabled]="!generalForm.valid ||  disableSaveForEdit" type="submit" class="btn btn-primary pull-right submit-btn"\r\n                                                (click)="saveCalibration()">\r\n                                             {{currentCalibration.assetCal==true ? \'Update\' : \'Save\'}}\r\n                                        </button>\r\n                                      <button type="button" class="btn btn-primary pull-right submit-btn" (click)="nextClick(\'Previous\')">Previous</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                </form>\r\n\r\n\r\n                <ng-template #tabRedirectConfirmationModal3 let-c="close" let-d="dismiss">\r\n                    <div class="modal-header">\r\n                      <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">&times;</button>\r\n                      <h4 class="modal-title">Confirmation</h4>\r\n                    </div>\r\n                    <div class="modal-body">\r\n                      <h6 >\r\n                        Do you want to Save changes and Continue ?\r\n                      </h6>\r\n                    </div>\r\n                    <div class="modal-footer">\r\n                  \r\n                      <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="redirectdismissModel()">No</button>\r\n                      <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="redirectToTab()">Yes</button>\r\n                    </div>\r\n                  </ng-template>\r\n\r\n                  <div class="modal fade" id="textarea-popup" role="dialog" data-backdrop="static" data-keyboard="false">\r\n                    <div class="modal-dialog modal-sm" style="max-width: 500px !important;">\r\n                  <div class="modal-content">\r\n                            <div class="modal-header">\r\n                                <button type="button" class="close" (click)="onCloseTextAreaInfo()">&times;</button>\r\n                                <h4 class="modal-title">Edit Memo</h4>\r\n                            </div>\r\n                            <div class="modal-body">\r\n                                <table class="table table-bordered table-fixed workflow-table-material">\r\n                                    <thead>\r\n                                        <th style="color: #fff;">Memo</th>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <p-editor [(ngModel)]="textAreaInfo"  [style]="{\'height\':\'320px\'}" (ngModelChange)="editorgetmemo($event)"\r\n                                                name="textAreaInfo" required></p-editor>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody> \r\n                                </table>\r\n                                <div style="float:right;margin-top: 12px;">\r\n                                    <button type="button" class="btn btn-primary" (ngModelChange)="setvaliDate($event)" (click)="onSaveTextAreaInfo(textAreaInfo)" [disabled]="disableEditor">Save</button>\r\n                                <button type="button" class="btn btn-danger" (click)="onCloseTextAreaInfo()">Close</button>\r\n                               </div> \r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>   \r\n                </div>\r\n\r\n                <div class="preloader" *ngIf="isSpinnerVisible">\r\n                    <div class="loading">\r\n                        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                    </div>\r\n                </div>'},jewU:function(t,e,n){"use strict";n.r(e),e.default="label {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.card-stock {\n  margin-top: 20px;\n  margin-bottom: 10px;\n}\n\n.card-stock .card-header {\n  padding: 10px 12px;\n}\n\n.card-stock .card-header h5 {\n  margin-bottom: 0;\n  font-size: 12px;\n}\n\n.card-stock .card-body {\n  padding: 12px 12px 4px;\n}\n\n.text_editor_box {\n  width: 100%;\n}\n\n.card-tolerance .form-group {\n  margin-bottom: 4px;\n}\n\n.add_newAd {\n  height: 22px;\n  position: relative;\n  left: -13px;\n  top: -1px;\n}\n\n.border-box-cstm {\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 0 10px;\n}\n\n.m-t-5 {\n  margin-top: 5px;\n}\n\n.font_adjust {\n  font-size: 14px !important;\n  margin: 0px;\n  padding: 0px !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n\n  .col-md-6-cstm {\n    max-width: 44%;\n    margin-right: 30px;\n  }\n}"},"k+MB":function(t,e,n){"use strict";n.r(e),e.default='<div style="border: 1px solid red">asset-general-information Component</div>'},kd5I:function(t,e,n){"use strict";n.r(e),e.default=".ms-block {\n  padding: 5px;\n  box-shadow: 1px 1px 5px #bbb;\n  background: #fff;\n  width: 300px;\n  text-align: center;\n}\n\n.atv_cv {\n  margin-bottom: 22px;\n  margin-left: 4px;\n}\n\n.fs12 {\n  display: inline-flex !important;\n}"},nFeV:function(t,e,n){"use strict";n.r(e),e.default=""},qUTz:function(t,e,n){"use strict";n.r(e),e.default='<p-breadcrumb [model]="breadcrumbs" [home]="home"></p-breadcrumb>\r\n<div class="card new-card">\r\n    <div class="card-header bg-primary">\r\n        <div class="row">\r\n            <div class="col">\r\n                <h4 class="new-card-heading">{{ assetService.isEditMode == true ? \'Edit\'  : \'Create\'}} Asset Maintenance\r\n                    & Warranty</h4>\r\n            </div>\r\n            <div>\r\n                <button type="button" class="btn-sm new-btn-primary"\r\n                    [routerLink]="[\'/assetmodule/assetpages/app-asset-listing\']">\r\n                    Asset List\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="card-body new-card-body">\r\n        <div class="md-stepper-horizontal orange new-stepper-align">\r\n            <div class="md-step" [ngClass]="{ active: activeIndex >= 0 , editable : activeIndex === 0}"\r\n                (click)="changeOfTab(\'General\')">\r\n                <div class="md-step-circle"><span>1</span></div>\r\n                <div class="md-step-title">General Information</div>\r\n                <div class="md-step-bar-left"></div>\r\n                <div class="md-step-bar-right"></div>\r\n            </div>\r\n            <div class="md-step" [ngClass]="{ active: activeIndex >= 1, editable : activeIndex === 1 }"\r\n                (click)="changeOfTab(\'Capes\')">\r\n                <div class="md-step-circle"><span>2</span></div>\r\n                <div class="md-step-title">Capes</div>\r\n                <div class="md-step-bar-left"></div>\r\n                <div class="md-step-bar-right"></div>\r\n            </div>\r\n            <div class="md-step" [ngClass]="{ active: activeIndex >= 2 , editable : activeIndex === 2 }"\r\n                (click)="changeOfTab(\'Calibration\')">\r\n                <div class="md-step-circle"><span>3</span></div>\r\n                <div class="md-step-title">Calibration</div>\r\n                <div class="md-step-bar-left"></div>\r\n                <div class="md-step-bar-right"></div>\r\n            </div>\r\n            <div class="md-step" [ngClass]="{ active: activeIndex >= 3 , editable : activeIndex === 3 }"\r\n                (click)="changeOfTab(\'Maintenance\')">\r\n                <div class="md-step-circle"><span>4</span></div>\r\n                <div class="md-step-title">Maintenance & Warranty</div>\r\n                <div class="md-step-bar-left"></div>\r\n                <div class="md-step-bar-right"></div>\r\n            </div>\r\n        </div>\r\n        <div class="form-row">\r\n            <div class="col-md-12">\r\n                <div class="card new-card">\r\n\r\n                    <div class="card-header bg-primary">\r\n                        <h4 class="new-card-heading"> Maintenance & Warranty</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <form #generalForm="ngForm" method="post" id="" name="" class="form-horizontal add-custustomer">\r\n            <div class="form-row">\r\n                <div class="col-md-12">\r\n                    <div class="card">\r\n                        <div class="card-body">\r\n                            <div class="col-md-3">\r\n                                <label class="fs12">Asset ID : </label>\r\n                                <span class="span-header-red"> {{assetService.listCollection?.assetId}}</span>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <label class="fs12">Asset Name : </label>\r\n                                <span class="span-header-red"> {{assetService.listCollection?.name}}</span>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <label class="fs12">Alt Asset ID : </label>\r\n                                <span class="span-header-red">\r\n                                    {{assetService.listCollection?.alternateAssetName}}</span>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <label class="fs12">Asset Class/Attribute : </label>\r\n                                <span class="span-header-red">\r\n                                    {{assetService.listCollection?.assetAttributeType}}</span>\r\n                            </div>\r\n                            <div class="clear"></div>\r\n                            <hr />\r\n                            <div class="clear"></div>\r\n                            <div class="col-md-12">\r\n                                <div class="form-row">\r\n                                    <div class="col-sm-3 asset_border">\r\n                                        \x3c!-- <div class="col-sm-12">\r\n                                            <h5 class="heading">Maintenance</h5>\r\n                                        </div> --\x3e\r\n                                        <div class="form-group">\r\n                                            <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                <label>\r\n                                                    <input (ngModelChange)="getmemo($event)" type="checkbox"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (change)="maintannaceCheckBoxHndl(currentMaintenance.assetIsMaintenanceReqd)"\r\n                                                        [(ngModel)]="currentMaintenance.assetIsMaintenanceReqd">\r\n                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                    Maintenance Required\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="maintenance-block"\r\n                                            *ngIf="currentMaintenance.assetIsMaintenanceReqd">\r\n                                            <div class="form-group">\r\n                                                <div class="checkbox-cstm" style="margin-left: 0;display:none;">\r\n                                                    <label>\r\n                                                        <input type="checkbox"\r\n                                                            (change)="maintannaceCheckBoxHndl(currentMaintenance.assetMaintenanceIsContract)"\r\n                                                            (ngModelChange)="getmemo($event)"\r\n                                                            [ngModelOptions]="{standalone: true}"\r\n                                                            [(ngModel)]="currentMaintenance.assetMaintenanceIsContract">\r\n                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                        Maintenance Contract\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Maintenance Frequency  <span class="clr-red">*</span></label>\r\n                                                <div class="col-md-12">\r\n                                                    <div class="col-sm-6">\r\n                                                        <label>Mths</label>\r\n                                                        <input type="number" class="form-control"\r\n                                                            (ngModelChange)="getmemo($event)"\r\n                                                            [ngModelOptions]="{standalone: true}"\r\n                                                            [(ngModel)]="currentMaintenance.maintenanceFrequencyMonths"\r\n                                                            min="0" max="12">\r\n                                                    </div>\r\n                                                    <div class="col-sm-6">\r\n                                                        <label> Days</label>\r\n                                                        <input type="number" class="form-control"\r\n                                                            [ngModelOptions]="{standalone: true}"\r\n                                                            (input)="validateDates($event.target.value,currentMaintenance)"\r\n                                                            (ngModelChange)="getmemo($event)"\r\n                                                            [(ngModel)]="currentMaintenance.maintenanceFrequencyDays"\r\n                                                            min="0" max="31">\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div style="padding: 8px;">\r\n                                                <label style="    margin-top: 12px;">Default Vendor</label>\r\n                                                <p-autoComplete (ngModelChange)="getmemo($event)"\r\n                                                    class="p-autoComplete-ctsm" field="name" name="vendorName2"\r\n                                                    [dropdown]="true" errorMessage="Records not found"\r\n                                                    [suggestions]="allVendorInfoFilter" emptyMessage="No Records Found"\r\n                                                    (completeMethod)="filterWarentyVendor2($event)" [size]="30"\r\n                                                    [minLength]="1"\r\n                                                    [(ngModel)]="currentMaintenance.maintenanceDefaultVendorId"\r\n                                                    #prellRevInsp="ngModel">\r\n                                                </p-autoComplete>\r\n                                            </div>\r\n                                            <div style="padding: 8px;">\r\n                                                <label>GL Account <span\r\n                                                        *ngIf="currentMaintenance.assetIsMaintenanceReqd">*</span></label>\r\n                                                <p-autoComplete class="p-autoComplete-ctsm"\r\n                                                    (ngModelChange)="getmemo($event)" field="name" name="Inspector2"\r\n                                                    [dropdown]="true" errorMessage="Records not found"\r\n                                                    [suggestions]="allGlInfoFilter" emptyMessage="No Records Found"\r\n                                                    (completeMethod)="filterWarentyGl2($event)" [size]="30"\r\n                                                    [minLength]="1" required\r\n                                                    [(ngModel)]="currentMaintenance.maintenanceGLAccountId"\r\n                                                    #prellRevInsp367="ngModel">\r\n                                                </p-autoComplete>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Maintenance Memo</label>\r\n                                                <div class="align_adh">\r\n                                                    <div [innerHTML]="currentMaintenance.maintenanceMemo"\r\n                                                        matTooltipPosition="above"\r\n                                                        [matTooltip]="parsedText(currentMaintenance.maintenanceMemo)"\r\n                                                        class="text_editor_box" style="width: 100% !important;"></div>\r\n                                                    <i class="fa fa-pencil contoel_v" data-toggle="modal"\r\n                                                        data-target="#textarea-popup" matTooltip="Memo"\r\n                                                        matTooltipPosition="above"\r\n                                                        (click)="onAddTextAreaInfo(currentMaintenance.maintenanceMemo)"></i>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="clear"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-sm-3 asset_border" style="margin-left: 1%;">\r\n                                        <div class="form-group">\r\n                                            <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                <label>\r\n                                                    <input type="checkbox" [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentMaintenance.isWarrantyRequired"\r\n                                                        (change)="warrentyCheckBoxHndl(currentMaintenance.isWarrantyRequired)">\r\n                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                    Warranty Required\r\n                                                </label>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div class="warranty-block" *ngIf="currentMaintenance.isWarrantyRequired">\r\n\r\n                                            <div class="form-group">\r\n                                                <label>Warranty Company</label>\r\n                                                <div>\r\n                                                    <div\r\n                                                        class="inner-addon right-addon autosuggesions-add inline-block">\r\n                                                        <input (ngModelChange)="getmemo($event)" type="text"\r\n                                                            class="form-control names ui-autocomplete-input"\r\n                                                            [ngModelOptions]="{standalone: true}"\r\n                                                            [(ngModel)]="currentMaintenance.warrantyCompany">\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div style="padding: 8px;">\r\n                                                <label>Default Vendor</label>\r\n                                                <p-autoComplete (ngModelChange)="getmemo($event)"\r\n                                                    class="p-autoComplete-ctsm" field="name" name="vendorName"\r\n                                                    [dropdown]="true" errorMessage="Records not found"\r\n                                                    [suggestions]="allVendorInfoFilter" emptyMessage="No Records Found"\r\n                                                    (completeMethod)="filterWarentyVendor($event)" [size]="30"\r\n                                                    [minLength]="1"\r\n                                                    [(ngModel)]="currentMaintenance.warrantyDefaultVendorId"\r\n                                                    #prellRevInsp="ngModel">\r\n                                                </p-autoComplete>\r\n                                            </div>\r\n                                            <div style="padding: 8px;">\r\n                                                <label>GL Account <span\r\n                                                        *ngIf="currentMaintenance.isWarrantyRequired">*</span></label>\r\n                                                <p-autoComplete class="p-autoComplete-ctsm"\r\n                                                    (ngModelChange)="getmemo($event)" field="name" name="Inspector12"\r\n                                                    [dropdown]="true" errorMessage="Records not found"\r\n                                                    [suggestions]="allGlInfoFilter" emptyMessage="No Records Found"\r\n                                                    (completeMethod)="filterWarentyGl($event)" [size]="30"\r\n                                                    [minLength]="1" [required]="currentMaintenance.isWarrantyRequired"\r\n                                                    [(ngModel)]="currentMaintenance.warrantyGLAccountId"\r\n                                                    #prellRevInsp3="ngModel">\r\n                                                </p-autoComplete>\r\n                                            </div>\r\n                                            <div class="clear"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-12">\r\n                                        <div class="margintop">\r\n                                            <button type="submit" class="btn btn-primary pull-right submit-btn"\r\n                                                (click)="addNew()">\r\n                                                Add New\r\n                                            </button>\r\n                                            <button\r\n                                                [disabled]="!generalForm.valid || currentMaintenance.isIntangible || disableSaveForEdit "\r\n                                                type="submit" class="btn btn-primary pull-right submit-btn"\r\n                                                (click)="saveWarrenty()">\r\n                                                {{currentMaintenance.assetMain==true ? \'Update\' : \'Save\'}}\r\n                                            </button>\r\n                                            <button type="button" class="btn btn-primary pull-right submit-btn"\r\n                                                (click)="backClick(\'Previous\')">\r\n                                                Previous\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <ng-template #tabRedirectConfirmationModal4 let-c="close" let-d="dismiss">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">&times;</button>\r\n                <h4 class="modal-title">Confirmation</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <h6>\r\n                    Do you want to Save changes and Continue ?\r\n                </h6>\r\n            </div>\r\n            <div class="modal-footer">\r\n\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="redirectdismissModel()">No</button>\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                    (click)="redirectToTab()">Yes</button>\r\n            </div>\r\n        </ng-template>\r\n        <div class="modal fade" id="textarea-popup" role="dialog" data-backdrop="static" data-keyboard="false">\r\n            <div class="modal-dialog modal-sm" style="max-width: 500px !important;">\r\n\r\n                <div class="modal-content">\r\n                    <div class="modal-header">\r\n                        <button type="button" class="close" (click)="onCloseTextAreaInfo()">&times;</button>\r\n                        <h4 class="modal-title">Edit Memo</h4>\r\n                    </div>\r\n                    <div class="modal-body">\r\n                        <table class="table table-bordered table-fixed workflow-table-material">\r\n                            <thead>\r\n                                <th style="color: #fff;">Memo</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <p-editor [(ngModel)]="textAreaInfo" [style]="{\'height\':\'320px\'}"\r\n                                            (ngModelChange)="editorgetmemo($event)" name="textAreaInfo" required>\r\n                                        </p-editor>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div style="float:right;margin-top: 12px;">\r\n                            <button type="button" class="btn btn-primary" (ngModelChange)="getmemo($event)"\r\n                                (click)="onSaveTextAreaInfo(textAreaInfo)" [disabled]="disableEditor">Save</button>\r\n                            <button type="button" class="btn btn-danger" (click)="onCloseTextAreaInfo()">Close</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="preloader" *ngIf="isSpinnerVisible">\r\n        <div class="loading">\r\n            <div class="lds-roller">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    </div>'},ubCa:function(t,e,n){"use strict";n.r(e),e.default=".bg-white {\n  background-color: #fff;\n}\n\nlabel {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\ntable th {\n  padding: 4px;\n  text-align: center;\n}\n\ntable td {\n  padding: 4px;\n}\n\n.display-tble {\n  display: table;\n}\n\nselect {\n  max-width: 200px;\n  min-width: 150px;\n}\n\n.pull-right {\n  float: right !important;\n}"},"v+D9":function(t,e,n){"use strict";n.r(e),e.default="label {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: 400;\n}\n\n.span-header-red {\n  color: red;\n  font-weight: bold;\n}\n\ninput[type=text],\ninput[type=number],\ninput[type=email],\nselect,\ntextarea {\n  height: 24px !important;\n  width: 100% !important;\n  border-radius: 5px !important;\n}\n\n.po-head {\n  font-weight: 700;\n  font-size: 16px !important;\n  color: #295d92 !important;\n}\n\n.fa-plus-circle.fa-lg {\n  color: green !important;\n}\n\n.tol_cld {\n  text-align: center;\n  padding: 4px;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}\n\n.btn-tbl-file-download {\n  line-height: 7px !important;\n  width: 85px !important;\n  height: 19px;\n  border: 0;\n  color: #ffffff !important;\n  background: #337ab7;\n}"},"vB/z":function(t,e,n){"use strict";n.r(e),e.default='<div>\r\n    <div [@fadeInOut] class="page-content">\r\n        <div class="right_col" role="main">\r\n            <div class="x_panel">\r\n                <div class="card">\r\n                    <div class="card-body">\r\n                        \x3c!--header--\x3e\r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="allAssetInfoNew"\r\n                                 [metaKeySelection]="true"\r\n                                 [first]="pageIndex"\r\n                                 [rows]="pageSize"\r\n                                 [paginator]="true"\r\n                                 [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]"\r\n                                 [columns]="selectedColumns"\r\n                                 selectionMode="multiple"\r\n                                 [metaKeySelection]="true"\r\n                                 [resizableColumns]="true"\r\n                                 [reorderableColumns]="true"\r\n                                 [scrollable]="true"\r\n                                 [totalRecords]="totalRecords"\r\n                                 scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                \x3c!-- <div style="text-align: right; margin-left: -6px !important;">\r\n                                    <p-multiSelect [maxSelectedLabels]="2"\r\n                                                   [options]="cols"\r\n                                                   optionLabel="header"\r\n                                                   [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                                   selectedItemsLabel="{0} columns selected"\r\n                                                   defaultLabel="Choose Columns">\r\n                                    </p-multiSelect>\r\n                                    <div class="inner-addon right-addon w50 inline-block  g-filter-search-cstm">\r\n                                        <i class="fa fa-search"></i>\r\n                                        <input type="text" pInputText size="50" class="form-control ui-autocomplete-input"\r\n                                               (input)="dt.filterGlobal($event.target.value, \'contains\')"\r\n                                               placeholder="Filter">\r\n                                    </div>\r\n                                    <button type="button" class="btn btn-primary" matTooltip="Download Data" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" style="padding: 5px 12px !important;" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary" matTooltip="Download Selected Data" matTooltipPosition="above" matTooltip="Download Selected Data" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" style="padding: 5px 12px !important;" label="Export Selected Data" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                </div> --\x3e\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                        <p-multiSelect [maxSelectedLabels]="2"\r\n                                        [options]="cols"\r\n                                        optionLabel="header"\r\n                                        [(ngModel)]="selectedColumns"\r\n                                        [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                        selectedItemsLabel="{0} columns selected"\r\n                                        defaultLabel="Choose Columns">\r\n                                      </p-multiSelect>\r\n                                    </div>\r\n                                    <div class="col">\r\n                                    <div style="width: auto !important; float: right;"\r\n                                     class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                                    >\r\n                                   <i class="fa fa-search"></i>\r\n                                   <input type="text" pInputText size="50"\r\n                                    class="form-control"\r\n                                   (input)="dt.filterGlobal($event.target.value, \'contains\')"\r\n                                   placeholder="Filter" />\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                        <div class="row">\r\n                            <div class="col">\r\n\r\n                                <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data" matTooltipPosition="above"\r\n                                pButton icon="fa-download" iconPos="left" style="padding: 5px 12px !important;" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                        <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data" matTooltipPosition="above" matTooltip="Download Selected Data" matTooltipPosition="above"\r\n                                pButton icon="fa-download" iconPos="left" style="padding: 5px 12px !important;" label="Export Selected Data" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                                <div style="padding-bottom: 1%"><br></div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                    <col *ngFor="let col of columns" style="width:140px">\r\n                                </colgroup>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns style="padding-top: 1% !important">\r\n                                <tr>\r\n                                    <ng-container *ngFor="let col of columns">\r\n                                        <th class="text-center" *ngIf="col.field!=\'companyName\' && col.field!=\'buName\' && col.field!=\'deptName\' && col.field!=\'divName\'" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                            {{col.header}}\r\n                                            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                        </th>\r\n                                        <th class="text-center" *ngIf="col.field==\'companyName\'" \r\n                                        colspan="4" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                            Management Structure\r\n                                        </th>\r\n                                    </ng-container>\r\n                                    <th style="width:150px;position: sticky;" *ngIf="selectedColumns.length> 0">Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:150px;position: sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-asset>\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openView(rowData)">\r\n\r\n                                    <td style="width:auto" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle>\r\n                                        {{rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:150px" *ngIf="selectedColumns.length> 0">\r\n                                        <div>\r\n                                            <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on"\r\n                                                           offLabel="off" (onChange)="toggleIsActive(rowData,$event)"\r\n                                                           [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                            <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on"\r\n                                                           offLabel="off" (onChange)="toggleIsActive(rowData,$event)"\r\n                                                           [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                            <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on"\r\n                                                           offLabel="off" (onChange)="toggleIsActive(rowData,$event)"\r\n                                                           [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                            \r\n                                                           <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg"\r\n                                                            (click)="openSaleHistory(rowData)"\r\n                                                             matTooltip="Sale"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n                                            \r\n                                            \r\n                                                           \x3c!-- <button class="btn-history" mat-icon-button matTooltip="Sale" matTooltipPosition="above"\r\n                                                    data-target="#contentHist" data-toggle="modal"\r\n                                                    (click)="openSaleHistory(history,rowData)">\r\n                                                <mat-icon color="green">history</mat-icon>\r\n                                            </button> --\x3e\r\n                                           \r\n                                           \r\n                                            <span  data-target="#contentWriteOffHist" data-toggle="modal"><a class="btn nobg"\r\n                                                (click)="openSaleHistory(rowData)"\r\n                                                 matTooltip="Write Off"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n                                           \r\n                                            \x3c!-- <button class="btn-history" mat-icon-button matTooltip="Write Off" matTooltipPosition="above"\r\n                                                    data-target="#contentWriteOffHist" data-toggle="modal"\r\n                                                    (click)="openSaleHistory(history,rowData)">\r\n                                                <mat-icon color="green">history</mat-icon>\r\n                                            </button> --\x3e\r\n\r\n                                            <span  data-target="#contentWriteDownHist" data-toggle="modal"><a class="btn nobg"\r\n                                                (click)="openSaleHistory(rowData)"\r\n                                                 matTooltip="Write Down"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                            \x3c!-- <button class="btn-history" mat-icon-button matTooltip="Write Down" matTooltipPosition="above"\r\n                                                    data-target="#contentWriteDownHist" data-toggle="modal"\r\n                                                    (click)="openSaleHistory(history,rowData)">\r\n                                                <mat-icon color="green">history</mat-icon>\r\n                                            </button> --\x3e\r\n                                            \r\n                                        </div>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <div style="text-align: right;">\r\n                                    <label id="footer" class="footer">Total:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                    <label id="footer" class="footer1">Pages Count:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText type="text" />\r\n                                </div>\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <div id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-xl">\r\n\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">\r\n                        Disposal Type: Sale\r\n                    </h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="table-responsive rro-table-cstm">\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Asset ID: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Alt Asset ID: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Existing Cost: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Asset Name: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>AD: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>In service Date: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Existing Book Value: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Last Depr Date: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Control Num: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                        <hr>\r\n\r\n                        <div class="col-sm-6">\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Type</label>\r\n                                <div class="col-sm-7">\r\n                                    <select class="form-control" disabled="">\r\n                                        <option>Sale</option>\r\n                                        <option>Write Off</option>\r\n                                        <option>Write Down</option>\r\n                                    </select>\r\n                                  \r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Select Customer</label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="inner-addon right-addon inline-block">\r\n                                        <i class="fa fa-pencil"></i>\r\n                                        <input type="text" class="form-control names ui-autocomplete-input" id="" name="" value="" autocomplete="off">\r\n                                    </div>\r\n\r\n                                \r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Currency</label>\r\n                                <div class="col-sm-7">\r\n                                    <select>\r\n                                        <option>-- Select --</option>\r\n                                    </select>\r\n                                \r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Proceeds</label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control" id="" name="" value="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Sales Tax</label>\r\n                               \r\n\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" autocomplete="off" class="autosuggest es-input">\r\n                                    \r\n                                </div>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Taxes Other</label>\r\n                               \r\n\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" autocomplete="off" class="autosuggest es-input">\r\n                                    \r\n                                </div>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Effective Date </label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control datepicker hasDatepicker" id="" name="">\r\n                                  \r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Accounting Period  </label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n                                  \r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class="col-sm-6">\r\n\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Upload Documents</label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="upload">\r\n                                       \r\n                                    </div>\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Memo</label>\r\n                                <div class="col-sm-7">\r\n                                    <textarea class="form-control h50"></textarea>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-info" data-dismiss="modal" id="" name="">Process</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="">Cancel</button>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div id="contentWriteOffHist" #contentWriteOffHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-xl">\r\n\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">\r\n                        Disposal Type: Write Off\r\n                    </h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="table-responsive rro-table-cstm">\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Asset ID: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Alt Asset ID: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Existing Cost: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Asset Name: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>AD: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>In service Date: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Existing Book Value: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Last Depr Date: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Control Num: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                        <hr>\r\n\r\n                        <div class="col-sm-6">\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Type</label>\r\n                                <div class="col-sm-7">\r\n                                    <select class="form-control" disabled="">\r\n                                        <option>Sale</option>\r\n                                        <option>Write Off</option>\r\n                                        <option>Write Down</option>\r\n                                    </select>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Select Customer</label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="inner-addon right-addon inline-block">\r\n                                        <i class="fa fa-pencil"></i>\r\n                                        <input type="text" class="form-control names ui-autocomplete-input" id="" name="" value="" autocomplete="off">\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Currency</label>\r\n                                <div class="col-sm-7">\r\n                                    <select>\r\n                                        <option>-- Select --</option>\r\n                                    </select>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Proceeds</label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control" id="" name="" value="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Sales Tax</label>\r\n\r\n\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" autocomplete="off" class="autosuggest es-input">\r\n\r\n                                </div>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Taxes Other</label>\r\n\r\n\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" autocomplete="off" class="autosuggest es-input">\r\n\r\n                                </div>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Effective Date </label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control datepicker hasDatepicker" id="" name="">\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Accounting Period  </label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class="col-sm-6">\r\n\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Upload Documents</label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="upload">\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Memo</label>\r\n                                <div class="col-sm-7">\r\n                                    <textarea class="form-control h50"></textarea>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-info" data-dismiss="modal" id="" name="">Process</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="">Cancel</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div id="contentWriteDownHist" #contentWriteDownHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-xl">\r\n\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">\r\n                        Disposal Type: Write Down\r\n                    </h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="table-responsive rro-table-cstm">\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Asset ID: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Alt Asset ID: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Existing Cost: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Asset Name: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>AD: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>In service Date: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Existing Book Value: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Last Depr Date: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Control Num: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                        <hr>\r\n\r\n                        <div class="col-sm-6">\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Type</label>\r\n                                <div class="col-sm-7">\r\n                                    <select class="form-control" disabled="">\r\n                                        <option>Sale</option>\r\n                                        <option>Write Off</option>\r\n                                        <option>Write Down</option>\r\n                                    </select>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Select Customer</label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="inner-addon right-addon inline-block">\r\n                                        <i class="fa fa-pencil"></i>\r\n                                        <input type="text" class="form-control names ui-autocomplete-input" id="" name="" value="" autocomplete="off">\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Currency</label>\r\n                                <div class="col-sm-7">\r\n                                    <select>\r\n                                        <option>-- Select --</option>\r\n                                    </select>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Proceeds</label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control" id="" name="" value="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Sales Tax</label>\r\n\r\n\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" autocomplete="off" class="autosuggest es-input">\r\n\r\n                                </div>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Taxes Other</label>\r\n\r\n\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" autocomplete="off" class="autosuggest es-input">\r\n\r\n                                </div>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Effective Date </label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control datepicker hasDatepicker" id="" name="">\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Accounting Period  </label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class="col-sm-6">\r\n\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Upload Documents</label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="upload">\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Memo</label>\r\n                                <div class="col-sm-7">\r\n                                    <textarea class="form-control h50"></textarea>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-info" data-dismiss="modal" id="" name="">Process</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="">Cancel</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\x3c!--<div *ngIf="isWorkOrder">\r\n    <app-view-asset [assetViewList]="assetViewList"></app-view-asset>\r\n</div>--\x3e\r\n\x3c!--code for asset creation audit\r\n            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                </div>\r\n            </ng-template>--\x3e\r\n'},vJmB:function(t,e,n){"use strict";n.r(e),e.default=""},vk6m:function(t,e,n){"use strict";n.r(e),e.default="label {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: 400;\n}\n\n.span-header-red {\n  color: red;\n  font-weight: bold;\n}\n\ninput[type=text],\ninput[type=number],\ninput[type=email],\nselect,\ntextarea {\n  height: 24px !important;\n  width: 100% !important;\n  border-radius: 5px !important;\n}\n\n.po-head {\n  font-weight: 700;\n  font-size: 16px !important;\n  color: #295d92 !important;\n}\n\n.fa-plus-circle.fa-lg {\n  color: green !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}\n\n.btn-tbl-file-download {\n  line-height: 7px !important;\n  width: 85px !important;\n  height: 19px;\n  border: 0;\n  color: #ffffff !important;\n  background: #337ab7;\n}"}}]);