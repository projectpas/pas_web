function _createForOfIteratorHelper(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var i=0,r=function(){};return{s:r,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,s=!0,o=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return s=e.done,e},e:function(e){o=!0,a=e},f:function(){try{s||null==n.return||n.return()}finally{if(o)throw a}}}}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}(window.webpackJsonp=window.webpackJsonp||[]).push([[23,32],{"0c0F":function(e,t,n){"use strict";n.r(t),t.default='<div class="card new-card" *ngIf="showComponentPTab">\r\n\t<div class="card-header bg-primary">\r\n\t\t<div class="row">\r\n\t\t\t<div class="col">\r\n\t\t\t\t<h4 class="new-card-heading">\r\n\t\t\t\t\t{{ employeeService.isEditMode ? \'Edit\' : \'Create\' }} Employee\r\n\t\t\t\t</h4>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button type="button"\r\n\t\t\t\t\t\tclass="btn-sm new-btn-primary"\r\n\t\t\t\t\t\t[routerLink]="[\'/employeesmodule/employeepages/app-employees-list\']">\r\n\t\t\t\t\tEmployee List\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n        <div class="md-stepper-horizontal orange new-stepper-align" *ngIf="showComponentPTab">\r\n\t\t\t\t<ng-container *ngFor="let item of items;">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclass="md-step"\r\n\t\t\t\t\t\t[ngClass]="{\r\n\t\t\t\t\t\t  active: activeIndex >= item.index,\r\n\t\t\t\t\t\t  editable: activeIndex === item.index\r\n\t\t\t\t\t\t}"\r\n\t\t\t\t\t\t[class.isDisabled]="!employeeService.isDisbaleTabs"\r\n\t\t\t\t\t\t(click)="item.command(item)"\r\n\t\t\t\t\t  >\r\n\t\t\t\t\t\t<div class="md-step-circle"><span>{{ item.step }}</span></div>\r\n\t\t\t\t\t\t<div class="md-step-title">{{ item.label }}</div>\r\n\t\t\t\t\t\t<div class="md-step-bar-left"></div>\r\n\t\t\t\t\t\t<div class="md-step-bar-right"></div>\r\n\t\t\t\t\t</div>\r\n\t\r\n\t\t\t\t</ng-container>\r\n\t\t\t \r\n\t\t  \r\n\t\t\t \r\n\t\t  </div>'},"1kis":function(e,t,n){"use strict";n.r(t),t.default='@charset "UTF-8";\n.tree,\n.tree ul {\n  margin: 0;\n  padding: 0;\n  list-style: none;\n}\n.tree ul {\n  margin-left: 0.4em;\n  position: relative;\n}\n.tree ul ul {\n  margin-left: 0.3em;\n}\n.tree ul:before {\n  content: "";\n  display: block;\n  width: 0;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  border-left: 1px solid;\n}\n.tree li {\n  margin: 0;\n  padding: 0 0.8em;\n  line-height: 2em;\n  color: #555;\n  font-weight: 700;\n  position: relative;\n}\n.tree ul li:before {\n  content: "";\n  display: block;\n  width: 10px;\n  height: 0;\n  border-top: 1px solid;\n  margin-top: -1px;\n  position: absolute;\n  top: 1em;\n  left: 0;\n}\n.tree ul li:last-child:before {\n  background: #fff;\n  height: auto;\n  top: 1em;\n  bottom: 0;\n}\n.tree li a {\n  text-decoration: none;\n  color: #555;\n}\n.tree ul,\n.tree li {\n  cursor: pointer;\n}\n.caret {\n  cursor: pointer;\n  -webkit-user-select: none;\n  /* Safari 3.1+ */\n  -moz-user-select: none;\n  /* Firefox 2+ */\n  -ms-user-select: none;\n  /* IE 10+ */\n  user-select: none;\n}\n.caret::before {\n  content: "\u25b6";\n  color: black;\n  display: inline-block;\n  margin-right: 6px;\n  top: 10px;\n}\n.caret-down::before {\n  /* IE 9 */\n  /* Safari */\n  transform: rotate(90deg);\n}\n.nested {\n  display: none;\n}\n.active {\n  display: block;\n}'},"4vtf":function(e,t,n){"use strict";n.r(t),t.default=".isDisabled {\n  pointer-events: none;\n}"},"69Xx":function(e,t,n){"use strict";n.r(t),t.default='\ufeff\ufeff<div class="card new-card">\r\n  <div class="card-header bg-primary new-card-header">\r\n    <div class="row">\r\n      <div class="col">\r\n        <h4 class="new-card-heading">Employee List</h4>\r\n      </div>\r\n      <div>\r\n        <button\r\n          type="button"\r\n          class="btn-sm new-btn-primary"\r\n          (click)="navigateTogeneralInfo()">\r\n          Add Employee\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class="card-body new-card-body">\r\n      <p-table\r\n               #dt\r\n               class="rpo-table-cstm rro-table-cstm"\r\n               [value]="allEmployeesList"\r\n               [first]="0"\r\n               [totalRecords]="totalRecords"\r\n               [rows]="pageSize"\r\n               [paginator]="true"\r\n               (onLazyLoad)="loadEmployeePages($event)"\r\n               [lazy]="true"\r\n               [pageLinks]="3"\r\n               [rowsPerPageOptions]="[10, 20, 50, 100, totalRecords]"\r\n               [columns]="selectedColumns"\r\n               [metaKeySelection]="true"\r\n               selectionMode="multiple"\r\n               [(selection)]="selectedColumn"\r\n               [resizableColumns]="true"\r\n               [scrollable]="true"\r\n               [reorderableColumns]="true"\r\n               scrollHeight="450px">\r\n          <ng-template pTemplate="caption">            \r\n              <div class="row">\r\n                  <div class="col">\r\n                      <p-multiSelect\r\n                                     [options]="headers"\r\n                                     [(ngModel)]="selectedColumns"\r\n                                     optionLabel="header"\r\n                                     selectedItemsLabel="{0} columns selected"\r\n                                     [style]="{ minWidth: \'200px\' }"\r\n                                     defaultLabel="Choose Columns"\r\n                                     style="float: left;"\r\n                                     ></p-multiSelect>\r\n                  </div>\r\n                  <div class="col">\r\n                      <div\r\n                           style="width: auto !important; float: right;"\r\n                           class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                           >\r\n                          <i class="fa fa-search"></i>\r\n                          <input\r\n                                 type="text"\r\n                                 pInputText\r\n                                 size="50"\r\n                                 class="form-control"\r\n                                 (input)="globalSearch($event.target.value)"\r\n                                 placeholder="Filter"\r\n                                 />\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div class="row">\r\n                  <div class="col">\r\n                      <button\r\n                              type="button"\r\n                              class="btn btn-primary new-table-button"\r\n                              matTooltip="Download Data"\r\n                              matTooltipPosition="above"\r\n                              pButton\r\n                              icon="fa-download"\r\n                              iconPos="left"\r\n                              label="Export Data"\r\n                              data-toggle="modal" (click)="selectedOnly = false; targetData = dt;" data-target="#downloadConfirmation"\r\n                              ></button>\r\n                      <button\r\n                              type="button"\r\n                              class="btn btn-primary new-table-button"\r\n                              matTooltip="Download Selected Data"\r\n                              matTooltipPosition="above"\r\n                              pButton\r\n                              icon="fa-download"\r\n                              iconPos="left"\r\n                              label="Export Selected Data"\r\n                              (click)="dt.exportCSV({selectionOnly:true})"\r\n                             \r\n                              ></button>\r\n                              \x3c!-- data-toggle="modal"\r\n                              data-target="#downloadConfirmation"\r\n                              (click)="selectedOnly = true; targetData = dt;" --\x3e\r\n                  </div>\r\n                  <div class="col">\r\n                      <div class="">\r\n                          <div\r\n                               class="col"\r\n                               style="width: 370px; float: right; padding-top: 3px;"\r\n                               >\r\n                              <div class="form-group">\r\n                                  <div\r\n                                       class="pull-left"\r\n                                       style="margin-top: 4px; margin-right: 15px;"\r\n                                       >\r\n                                      <label class="radio-cstm wauto">\r\n                                          <input\r\n                                                 type="radio"\r\n                                                 name="EmpStatus"\r\n                                                 class="form-control"\r\n                                                 value="Active"\r\n                                                 (click)="geEmpListByStatus(\'Active\')"\r\n                                                 [(ngModel)]="currentstatus"\r\n                                               \r\n                                               \r\n                                                 />\r\n                                          <span class="checkmark"></span>Active\r\n                                      </label>\r\n                                  </div>\r\n                                  <div\r\n                                       class="pull-left"\r\n                                       style="margin-top: 4px; margin-right: 15px;"\r\n                                       >\r\n                                      <label class="radio-cstm wauto">\r\n                                          <input\r\n                                                 type="radio"\r\n                                                 name="EmpStatus"\r\n                                                 class="form-control"\r\n                                                 value="InActive"\r\n                                                 (click)="geEmpListByStatus(\'InActive\')"\r\n                                                 [(ngModel)]="currentstatus"\r\n                                            \r\n                                                \r\n                                                 />\r\n                                          <span class="checkmark"></span>In-active\r\n                                      </label>\r\n                                  </div>\r\n                                  <div\r\n                                       class="pull-left"\r\n                                       style="margin-top: 4px; margin-right: 15px;"\r\n                                       >\r\n                                      <label class="radio-cstm wauto">\r\n                                          <input\r\n                                                 type="radio"\r\n                                                 name="EmpStatus"\r\n                                                 class="form-control"\r\n                                                 value="ALL"\r\n                                                 (click)="geEmpListByStatus(\'ALL\')"\r\n                                                 [(ngModel)]="currentstatus"\r\n                                              \r\n                                                 />\r\n                                          <span class="checkmark"></span>All\r\n                                      </label>\r\n                                  </div>\r\n                                  <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                      <label style="width: auto !important; margin-top: 3px;">\r\n                                          <input\r\n                                                 type="checkbox"\r\n                                                 [(ngModel)]="currentDeletedstatus"\r\n                                                 name="cparent"\r\n                                                 id="cparent"\r\n                                                 (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                 />\r\n                                          <span class="cr"\r\n                                                ><i class="cr-icon pi pi-check"></i\r\n                                        ></span>\r\n                                          Show Deleted\r\n                                      </label>\r\n                                  </div>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n          </ng-template>\r\n\r\n          <ng-template pTemplate="colgroup" let-columns>\r\n              <colgroup>\r\n                  <col *ngFor="let col of columns" style="width:140px"> />\r\n              </colgroup>\r\n          </ng-template>\r\n\r\n          <ng-template pTemplate="header" let-columns style="padding-top: 1% !important">\r\n              <tr>\r\n                <ng-container *ngFor="let col of columns">\r\n                  <th style="width:150px;"                     \r\n                      pResizableColumn\r\n                      pReorderableColumn\r\n                      [pSortableColumn]="col.field">\r\n                      {{ col.header }}\r\n                      <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                  </th>\r\n                </ng-container>\r\n                  <th style="width:150px; position: sticky !important;" *ngIf="selectedColumns.length > 0">\r\n                    Actions\r\n                 </th>\r\n              </tr>\r\n\r\n              <tr>\r\n                  \x3c!--(keyup)="dt.filter($event.target.value, col.field, \'contains\')"--\x3e\r\n                  <th *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                      \x3c!-- <input style="width: 100%;"\r\n                             pInputText\r\n                             type="text"\r\n                             *ngIf="col.field !== \'startDate\' && col.field !== \'createdDate\' && col.field !== \'updatedDate\'"\r\n                             (input)="dt.filter($event.target.value, col.field, \'contains\'); activeStatus($event.target.value)" />\r\n                     <input type="date" class="hidePlaceHolder" *ngIf="col.field == \'startDate\'" name="startDate" \r\n                         style="width:100%;"  (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                     <input type="date" class="hidePlaceHolder" *ngIf="col.field == \'createdDate\'" name="createdDate" \r\n                         style="width:100%;"  (change)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                     <input type="date" class="hidePlaceHolder" *ngIf="col.field == \'updatedDate\'" name="updatedDate" \r\n                         style="width:100%;"  (change)="dt.filter($event.target.value, col.field, \'contains\')"> --\x3e\r\n                     <input style="width: 100%;"\r\n                             pInputText  *ngIf="col.field !== \'startDate\' && col.field !== \'createdDate\' && col.field !== \'updatedDate\'"\r\n                             type="text"\r\n                             (input)="dt.filter($event.target.value, col.field, \'contains\'); activeStatus($event.target.value)" />\r\n                             \r\n                             <input type="date"   style="width:100%" class="hidePlaceHolder" *ngIf="col.field == \'createdDate\'"\r\n                             name="createdDate"  (change)="dateFilterForTable($event.target.value, col.field)" />\r\n<input type="date" style="width:100%"  class="hidePlaceHolder" *ngIf="col.field == \'updatedDate\'"   name="updatedDate"\r\n          (change)="dateFilterForTable($event.target.value,col.field)" />\r\n          <input type="date" style="width:100%" \r\n           class="hidePlaceHolder" *ngIf="col.field == \'startDate\'"\r\n              name="startDate"\r\n          (change)="dateFilterForTable($event.target.value,col.field)" />\r\n\t\t\t\t\t       \r\n                  </th>\r\n                  <th  style="width:150px; position: sticky !important;"></th>\r\n              </tr>\r\n          </ng-template>\r\n\r\n          <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n              <tr\r\n                  [pSelectableRow]="rowData"\r\n                  pReorderableRowHandle\r\n                  (dblclick)="openEdit(rowData)"\r\n                  >\r\n                  <td\r\n                      *ngFor="let col of columns"\r\n                      class="ui-resizable-column"\r\n                      pReorderableRowHandle\r\n                      [matTooltip]="mouseOverData(col.field, rowData)"\r\n                      >\r\n                      <ng-container *ngIf="col.field !=\'shopEmployee\'">\r\n                          {{\r\n                            col.field == \'startDate\'\r\n                              ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                              : (col.field == \'createdDate\' || col.field == \'updatedDate\')\r\n                              ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                              : rowData[col.field] \r\n                          }}\r\n                      </ng-container>\r\n                    <ng-container *ngIf="col.field ==\'shopEmployee\'">\r\n                        <input type="checkbox" disabled [checked]="rowData[col.field] == \'Yes\'"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </ng-container>\r\n                     \r\n                  </td>\r\n\r\n                  <td style="width: 150px; position: sticky !important;" >\r\n                      <div *ngIf="currentDeletedstatus == false">\r\n                          \x3c!-- <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                  <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                  <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch> --\x3e\r\n                          <p-inputSwitch\r\n                                         [(ngModel)]="rowData[\'isActive\']"\r\n                                         name="isActive{{ rowIndex }}"\r\n                                         matTooltip="{{ rowData[\'isActive\'] ? \'Active\' : \'In Active\' }}"\r\n                                         matTooltipPosition="above"\r\n                                         (onChange)="handleChange(rowData, $event)"\r\n                                         ></p-inputSwitch>\r\n                          <span data-toggle="modal" data-target="#view">\r\n                              <a\r\n                                 class="btn btn-info boxed-float-btn nobg"\r\n                                 data-toggle="tooltip"\r\n                                 (click)="openView(rowData)"\r\n                                 matTooltip="View"\r\n                                 ><i class="fa fa-eye"></i\r\n                              ></a>\r\n                          </span>\r\n                          <span><a class="btn nobg"\r\n                                 (click)="openEdit(rowData)"\r\n                                 matTooltip="Edit"\r\n                                 matTooltipPosition="above"\r\n                                 ><i class="fa fa-pencil"> </i></a>\r\n                          </span>\r\n                          \x3c!-- <button class="btn-edit" mat-icon-button\r\n                                      (click)="openEdit(rowData)" matTooltip="Edit">\r\n                                          <mat-icon>edit</mat-icon>\r\n                                      </button> --\x3e\r\n                          <span>\r\n                              <a\r\n                                 class="btn nobg"\r\n                                 (click)="openDelete(content, rowData)"\r\n                                 matTooltip="Delete"\r\n                                 matTooltipPosition="above"\r\n                                 >\r\n                                  <i class="fa fa-trash"></i\r\n></a>\r\n                          </span>\r\n                          \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete"\r\n                                  (click)="openDelete(content,rowData)">\r\n                                      <mat-icon color="warn">delete</mat-icon>\r\n                                  </button> --\x3e\r\n\r\n                                  \r\n                          <span data-target="#employeeHistory" data-toggle="modal"\r\n                                ><a\r\n                                 class="btn nobg"\r\n                                 (click)="getAuditHistoryById(rowData)"\r\n                                 matTooltip="History"\r\n                                 matTooltipPosition="above">\r\n                                  <i class="fa fa-history"></i></a\r\n></span>\r\n                          \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                       data-target="#employeeHistory" data-toggle="modal"\r\n                                       (click)="getAuditHistoryById(rowData)">\r\n                                          <mat-icon color="green">history</mat-icon>\r\n                                      </button> --\x3e\r\n                      </div>\r\n                      <div *ngIf="currentDeletedstatus == true">\r\n                          <p-inputSwitch\r\n                                         [(ngModel)]="rowData[\'isActive\']"\r\n                                         [disabled]="true"\r\n                                         name="isActive{{ rowIndex }}"\r\n                                         matTooltip="{{ rowData[\'isActive\'] ? \'Active\' : \'In Active\' }}"\r\n                                         matTooltipPosition="above"\r\n                                         (onChange)="changeStatus(rowData)"\r\n                                         ></p-inputSwitch>\r\n                          <span data-toggle="modal" data-target="#view">\r\n                              <a\r\n                                 class="btn btn-info boxed-float-btn nobg"\r\n                                 data-toggle="tooltip"\r\n                                 (click)="openView(rowData)"\r\n                                 matTooltip="View"\r\n                                 ><i class="fa fa-eye"></i\r\n></a>\r\n                          </span>\r\n                          <span\r\n                                ><a\r\n                                 class="btn nobg"\r\n                                 (click)="restore(restoreId,rowData)"\r\n                                 matTooltip="Restore Record"\r\n                                 matTooltipPosition="above"\r\n                                 ><i class="fa fa-undo" aria-hidden="true"></i\r\n></a>\r\n                          </span>\r\n                          <span data-target="#employeeHistory" data-toggle="modal"\r\n                                ><a\r\n                                 class="btn nobg"\r\n                                 (click)="getAuditHistoryById(rowData)"\r\n                                 matTooltip="History"\r\n                                 matTooltipPosition="above">\r\n                                  <i class="fa fa-history"></i></a\r\n></span>\r\n                      </div>\r\n                  </td>\r\n              </tr>\r\n          </ng-template>\r\n          <ng-template pTemplate="emptymessage" let-columns>\r\n            <tr>\r\n              <td [attr.colspan]="15"   class="no-records-cstm" style="color: red; font-weight: bold; text-align: center">\r\n                No records found\r\n              </td>\t\r\n            </tr>\r\n          </ng-template>\r\n\r\n          <ng-template pTemplate="summary" id="footer">\r\n              <label id="footer" class="footer">Total:</label>\r\n              <input\r\n                     style="width: 5%;"\r\n                     [(ngModel)]="totalRecords"\r\n                     [disabled]="true"\r\n                     pInputText\r\n                     type="text"\r\n                     />\r\n              &nbsp;&nbsp;\r\n              <label id="footer" class="footer1">Pages Count:</label>\r\n              <input\r\n                     style="width: 5%;"\r\n                     [(ngModel)]="totalPages"\r\n                     [disabled]="true"\r\n                     pInputText\r\n                     type="text"\r\n                     />\r\n          </ng-template>\r\n      </p-table>\r\n\r\n      <ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n          <div class="modal-header">\r\n              <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n              <button\r\n                      type="button"\r\n                      class="close"\r\n                      aria-label="Close"\r\n                      (click)="dismissModel()"\r\n                      >\r\n                  <span aria-hidden="true">&times;</span>\r\n              </button>\r\n          </div>\r\n          <div class="modal-body">\r\n              <strong>\r\n                  Employee Name:\r\n                  <span class="new-label">{{deleteEmployeeName}}</span>\r\n              </strong>\r\n          </div>\r\n\r\n          <div class="modal-footer">\r\n              <button\r\n                      type="button"\r\n                      class="btn btn-primary"\r\n                      (click)="deleteItemAndCloseModel()"\r\n                      >\r\n                  Yes\r\n              </button>\r\n              <button type="button" class="btn btn-danger" (click)="dismissModel()">\r\n                  No\r\n              </button>\r\n          </div>\r\n      </ng-template>\r\n\r\n      <ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n          <div class="modal-header">\r\n              <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n\r\n              <button type="button"\r\n                      class="close"\r\n                      aria-label="Close"\r\n                      (click)="dismissModel()">\r\n                  <span aria-hidden="true">&times;</span>\r\n              </button>\r\n          </div>\r\n          <div class="modal-body">\r\n              <strong>\r\n                  Employee Name:\r\n                  <span class="new-label">{{restoreRecordData.firstName}}</span>\r\n              </strong>\r\n          </div>\r\n\r\n          <div class="modal-footer">\r\n              <button type="button" class="btn btn-success" (click)="restoreRecord()">\r\n                  Yes\r\n              </button>\r\n              <button type="button" class="btn btn-danger" (click)="dismissModel()">\r\n                  No\r\n              </button>\r\n          </div>\r\n\r\n          <div class="preloader" style="z-index: 10000;" *ngIf="isSpinnerVisible">\r\n              <div class="loading">\r\n                  <div class="lds-roller">\r\n                      <div>\r\n                      </div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <app-spinner *ngIf="isSpinnerVisible"></app-spinner>\r\n      </ng-template>\r\n  </div>\r\n</div>\r\n\r\n<div class="preloader" style="z-index: 10000;" *ngIf="isSpinnerVisible">\r\n  <div class="loading">\r\n    <div class="lds-roller"><div>\t\t\t\r\n    </div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n  </div>\r\n</div>\r\n<app-spinner  *ngIf="isSpinnerVisible"></app-spinner>\r\n\r\n<div\r\n  id="view"\r\n  class="modal fade"\r\n  role="dialog"\r\n  data-backdrop="static"\r\n  data-keyboard="false"\r\n>\r\n  <div class="modal-dialog modal-xl">\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal">\xd7</button>\r\n        <h4 class="modal-title">Employee Details</h4>\r\n      </div>\r\n      <div class="modal-body modal-body-cstm">\r\n        <div class="table-responsive default-bg clear">\r\n          \x3c!--<a href="#" class="btn btn-primary openall">open all</a> <a href="#" class="btn btn-warning closeall">close all</a>--\x3e\r\n          <div class="panel-group" id="accordion">\r\n            <div class="panel panel-default">\r\n                <div>\r\n                    <button type="button"\r\n                            class="btn btn-primary"\r\n                            data-toggle="collapse"\r\n                            (click)="ExpandAllEmployeeDetailsModel()">\r\n                        Expand All\r\n                    </button>\r\n                    <button type="button"\r\n                            class="btn btn-primary collapsed"\r\n                            data-toggle="collapse"\r\n                            (click)="CloseAllEmployeerDetailsModel()">\r\n                        Collapse All\r\n                    </button>\r\n\r\n                    \r\n                        <button type="button"  [ngClass]="empstatus ? \'btn btn-success pull-right\' : \'btn btn-danger pull-right\'">\r\n                            <span class="value">{{empstatus ? \'Active\' : \'In-Active\'}}</span>\r\n                        </button>\r\n                      \r\n\r\n\r\n                        <hr />\r\n                    </div>\r\n              <div class="panel-heading">\r\n                <h4 class="panel-title">\r\n                  <a class="collapsed" data-toggle="collapse" href="#step1"\r\n                    >General Information</a\r\n                  >\r\n                </h4>\r\n              </div>\r\n              <div\r\n                id="step1"\r\n                class="panel-collapse collapse"\r\n                *ngIf="allEmployeelist"\r\n              >\r\n                <div class="panel-body">\r\n                  <div class="card">\r\n                    <div class="card-body">\r\n                      <div>\r\n                          <div class="table-responsive default-bg clear">\r\n                              <div class=" col-sm-12">\r\n                                  <div class="col-sm-3">\r\n                                      <p>\r\n                                          <span class="label"><b>First Name: <span class="clr-red">*</span></b></span><span class="value">\r\n                                              {{\r\n                                allEmployeelist.firstName\r\n                                  ? allEmployeelist.firstName\r\n                                  : \'-\'\r\n                                              }}\r\n                                          </span>\r\n                                      </p>\r\n                                      <p>\r\n                                          <span class="label"><b>Middle Name: </b></span><span class="value">\r\n                                              {{\r\n                                allEmployeelist.middleName\r\n                                  ? allEmployeelist.middleName\r\n                                  : \'-\'\r\n                                              }}\r\n                                          </span>\r\n                                      </p>\r\n                                      <p>\r\n                                          <span class="label"><b>Last Name: <span class="clr-red">*</span></b></span><span class="value">\r\n                                              {{\r\n                                allEmployeelist.lastName\r\n                                  ? allEmployeelist.lastName\r\n                                  : \'-\'\r\n                                              }}\r\n                                          </span>\r\n                                      </p>\r\n                                      <p>\r\n                                          <span class="label"><b>Employee Id: <span class="clr-red">*</span></b></span><span class="value">\r\n                                              {{\r\n                                allEmployeelist.employeeId\r\n                                  ? allEmployeelist.employeeId\r\n                                  : \'-\'\r\n                                              }}\r\n                                          </span>\r\n                                      </p>\r\n                                      <p>\r\n                                          <span class="label"><b>Employee Id (per Payroll): </b></span><span class="value">\r\n                                              {{\r\n                                allEmployeelist.employeeIdAsPerPayroll\r\n                                  ? allEmployeelist.employeeIdAsPerPayroll\r\n                                  : \'-\'\r\n                                              }}\r\n                                          </span>\r\n                                      </p>\r\n                                  </div>\r\n\r\n                                  <div class="col-sm-3">\r\n                                      <p>\r\n                                          <span class="label"><b>Job Title: <span class="clr-red">*</span></b></span><span class="value">\r\n                                              {{\r\n                                jobTitleName ? jobTitleName : \'-\'\r\n                                              }}\r\n                                          </span>\r\n                                      </p>\r\n                                      <p>\r\n                                          <span class="label"><b>Emp Expertise:<span class="clr-red">*</span></b></span><span class="value">\r\n                                              {{\r\n                                empExpertiseName ? empExpertiseName : \'-\'\r\n                                              }}\r\n                                          </span>\r\n                                      </p>\r\n\r\n                                      <p>\r\n                                          <span class="label"><b>Station ID: </b></span><span class="value">\r\n                                              {{\r\n                                stationName ? stationName : \'-\'\r\n                                              }}\r\n                                          </span>\r\n                                      </p>\r\n                                  </div>\r\n\r\n                                  <div class="col-sm-3">\r\n                                      \x3c!--<p>\r\n              <span class="label"><b>Management Structure: <span class="clr-red">*</span></b></span><span class="value">\r\n                  {{\r\n    compmanagmentLegalEntityName\r\n      ? compmanagmentLegalEntityName\r\n      : \'-\'\r\n                  }}\r\n              </span>\r\n          </p>\r\n          <p>\r\n              <span class="label"><b>BU: </b></span><span class="value">\r\n                  {{\r\n    biumanagmentLegalEntityName\r\n      ? biumanagmentLegalEntityName\r\n      : \'-\'\r\n                  }}\r\n              </span>\r\n          </p>\r\n          <p>\r\n              <span class="label"><b>Division: </b></span><span class="value">\r\n                  {{\r\n    divmanagmentLegalEntityName\r\n      ? divmanagmentLegalEntityName\r\n      : \'-\'\r\n                  }}\r\n              </span>\r\n          </p>\r\n          <p>\r\n              <span class="label"><b>Dept: </b></span><span class="value">\r\n                  {{\r\n    managmentLegalEntityName\r\n      ? managmentLegalEntityName\r\n      : \'-\'\r\n                  }}\r\n              </span>\r\n          </p>--\x3e\r\n                                      <div class="form-row">\r\n                                          <div class="col-sm-12">\r\n                                            <div class="card" style="margin-top: 6px;">\r\n                                              <div class="card-header" style="padding: 0 10px;">\r\n                                                <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure <span class="text-danger">*</span></h5>\r\n                                              </div>\r\n                                              <div class="card-body" style="padding: 8px 12px 6px;">\r\n                                                <div class="form-group" style="margin-bottom: 4px;">\r\n                                                  <input class="form-control" type="text" name="companyName" \r\n                                                       [(ngModel)]="headerManagementStructureWithName.level1" disabled>\r\n                                                </div>\r\n                                                <div class="form-group" style="margin-bottom: 4px;">\r\n                                                  <input class="form-control" type="text" name="BUName"\r\n                                                       [(ngModel)]="headerManagementStructureWithName.level2" disabled>\r\n                                                </div>\r\n                                                <div class="form-group" style="margin-bottom: 4px;">\r\n                                                  <input class="form-control" type="text" name="divisionName"\r\n                                                       [(ngModel)]="headerManagementStructureWithName.level3" disabled>\r\n                                                </div>\r\n                                                <div class="form-group" style="margin-bottom: 4px;">\r\n                                                  <input class="form-control" type="text" name="deptName"\r\n                                                       [(ngModel)]="headerManagementStructureWithName.level4" disabled>\r\n                                                </div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                      </div>\r\n                                  </div>\r\n                              </div>\r\n                              <div class=" card"> </div>\r\n\r\n\r\n                              <div class=" col-sm-12">\r\n                                  <div class="col-sm-3">\r\n                                      <p>\r\n                                          <span class="label"><b>Date of Birth: </b></span><span class="value">\r\n    {{\r\n                                allEmployeelist.dateOfBirth | date: \'MM/dd/yyyy\'\r\n    }}\r\n</span>\r\n                                      </p>\r\n                                      \x3c!--<p><span class="label"><b>Country of Origin: </b></span><span class="value">{{originatingCountryName ? originatingCountryName : \'-\'}}</span></p>--\x3e\r\n                                      <p>\r\n                                          <span class="label"><b>Start Date: <span class="clr-red">*</span></b></span><span class="value">\r\n    {{\r\n                                allEmployeelist.startDate | date: \'MM/dd/yyyy\'\r\n    }}\r\n</span>\r\n                                      </p>\r\n                                      <p>\r\n                                          <span class="label"><b>Cell: </b></span><span class="value">\r\n                                              {{\r\n                                allEmployeelist.mobilePhone\r\n                                  ? allEmployeelist.mobilePhone\r\n                                  : \'-\'\r\n                                              }}\r\n                                          </span>\r\n                                      </p>\r\n                                  </div>\r\n\r\n                                  <div class="col-sm-3">\r\n                                      <p>\r\n                                          <span class="label"><b>Business Phone: </b></span><span class="value">\r\n                                              {{\r\n                                allEmployeelist.workPhone\r\n                                  ? allEmployeelist.workPhone\r\n                                  : \'-\'\r\n                                              }}\r\n                                          </span>\r\n                                      </p>\r\n                                      <p>\r\n                                          <span class="label"><b>Fax: </b></span><span class="value">\r\n                                              {{\r\n                                allEmployeelist.fax ? allEmployeelist.fax : \'-\'\r\n                                              }}\r\n                                          </span>\r\n                                      </p>\r\n                                      <p>\r\n                                          <span class="label"><b>Email: </b></span><span class="value">\r\n                                              {{\r\n                                allEmployeelist.email\r\n                                  ? allEmployeelist.email\r\n                                  : \'-\'\r\n                                              }}\r\n                                          </span>\r\n                                      </p>\r\n                                      <p>\r\n                                          <span class="label"><b>SS#: </b></span><span class="value">\r\n                                              {{\r\n                                allEmployeelist.ssn ? allEmployeelist.ssn : \'-\'\r\n                                              }}\r\n                                          </span>\r\n                                      </p>\r\n                                  </div>\r\n\r\n                                  <div class="col-sm-3">\r\n                                      <p>\r\n                                          <span class="label"><b>Shift: </b></span>\r\n                                          <span class="value"\r\n                                                *ngIf="allEmployeelist.inMultipleShifts == true">Multiple Shift</span>\r\n                                          <span class="value"\r\n                                                *ngIf="allEmployeelist.inMultipleShifts == false && shiftNames">Single Shift</span>\r\n                                      </p>\r\n                                      <p   *ngIf="allEmployeelist.inMultipleShifts == true || (allEmployeelist.inMultipleShifts == false && shiftNames)" >\r\n                                          \x3c!--{{empShiftType}}{{shiftNames ? shiftNames : \'-\'}}--\x3e\r\n                                          <span class="label"><b>Shift Type: </b></span><span class="value">\r\n                                              <span class="value">\r\n                                                  {{ shiftNames ? shiftNames : \'-\' }}\r\n                                              </span>\r\n                                              \x3c!-- <div *ngFor="let shift of shiftMapArray">\r\n                <span class="value">{{shift.shiftId}}</span>\r\n            </div> --\x3e\r\n                                          </span>\r\n                                      </p>\r\n                                      \x3c!-- <p><span class="label"><b>Extra Hours: </b></span><span class="value"></span></p> --\x3e\r\n\r\n\r\n                                \r\n                                          <p>\r\n                                              <span class="label"><b>Extra Hours: </b></span>\r\n                                            </p>\r\n\r\n                                          <p>\r\n                                              <span class="label"><b>Allow Overtime: </b></span><span class="value">\r\n                                                  <input type="checkbox"\r\n                                                         name="isallowOvertime"\r\n                                                         [(ngModel)]="allEmployeelist.allowOvertime"\r\n                                                         disabled />\r\n                                              </span>\r\n                                          </p>\r\n                                          <p>\r\n                                              <span class="label"><b>Allow Double-Time: </b></span><span class="value">\r\n                                                  <input type="checkbox"\r\n                                                         name="isallowDoubleTime"\r\n                                                         [(ngModel)]="allEmployeelist.allowDoubleTime"\r\n                                                         disabled />\r\n                                              </span>\r\n                                          </p>\r\n\r\n                                   \r\n                                              <p>\r\n                                                  <span class="label"><b>Pay Type: </b></span>\r\n                                                  <span class="value"\r\n                                                        *ngIf="allEmployeelist.isHourly == true">Hourly Pay</span>\r\n                                                  <span class="value"\r\n                                                        *ngIf="\r\n                                  allEmployeelist.isHourly == false\r\n                                ">Monthly Pay</span>\r\n                                              </p>\r\n                                              <p>\r\n                                                  <span *ngIf="allEmployeelist.isHourly == true"\r\n                                                        class="label"><b>Hourly Pay: <span class="clr-red">*</span></b></span>\r\n                                                  <span *ngIf="allEmployeelist.isHourly == false"\r\n                                                        class="label"><b>Monthly Pay: <span class="clr-red">*</span></b></span>\r\n                                                  \x3c!-- <span *ngIf="!allEmployeelist.isHourly" class="label"><b>Pay: </b></span> --\x3e\r\n                                                  <span class="value">\r\n                                                      {{\r\n                                allEmployeelist.hourlyPay\r\n                                  ? allEmployeelist.hourlyPay\r\n                                  : \'-\'\r\n                                                      }}\r\n                                                  </span>\r\n                                              </p>\r\n                                          </div>\r\n\r\n                                          <div class=" col-sm-3">\r\n                                              <p>\r\n                                                  <span class="label"><b>Currency: <span class="clr-red">*</span></b></span><span class="value">\r\n                                                      {{\r\n                                currencyName ? currencyName : \'-\'\r\n                                                      }}\r\n                                                  </span>\r\n                                              </p>\r\n                                              <p>\r\n                                                  <span class="label"><b>Leave Type: </b></span><span class="value">\r\n                                                      \x3c!--<span class="value">{{empleaveType? empleaveType: \'-\'}}</span>--\x3e\r\n                                                      <span class="value">\r\n                                                          {{\r\n                                                          empleaveType ? empleaveType : \'-\'\r\n                                                          }}\r\n                                                      </span>\r\n                                                      \x3c!-- <div *ngFor="let leave of leaveMapArray">\r\n                    <span class="value">{{leave.employeeLeaveTypeId}}</span>\r\n                </div> --\x3e\r\n                                                  </span>\r\n                                              </p>\r\n                                              <p>\r\n                                                  <span class="label" style="width: initial;"><b>Emp Certifying staff:</b></span><span>\r\n                                                      <input type="checkbox"\r\n                                                             name="isemployeeCertifyingStaff"\r\n                                                             [(ngModel)]="\r\n                                    allEmployeelist.employeeCertifyingStaff\r\n                                  "\r\n                                                             disabled />\r\n                                                  </span>\r\n                                              </p>\r\n                                              <p>\r\n                                                <span class="label"><b>Supervisor Name: </b></span><span class="value">\r\n                                                  \r\n                                                  {{\r\n                            supervisorname ? supervisorname : \'-\'\r\n                                                  }}\r\n                                              </span>\r\n                                              </p>\r\n\r\n                                          </div>\r\n                                      </div>\r\n\r\n\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="panel panel-default">\r\n                <div class="panel-heading">\r\n                  <h4 class="panel-title">\r\n                    <a class="collapsed" data-toggle="collapse" href="#step2"\r\n                      >Certification</a\r\n                    >\r\n                  </h4>\r\n                </div>\r\n                <div id="step2" class="panel-collapse collapse">\r\n                  <div class="panel-body">\r\n                    <div class="card">\r\n                      <div class="card-body">\r\n                        <div>\r\n                          <div\r\n                            class="table-responsive default-bg clear"\r\n                            *ngIf="allEmployeelist.employeeCertification"\r\n                          >\r\n                            <div class="col-sm-4">\r\n                              <p>\r\n                                <span class="label"\r\n                                  ><b>Certification #: </b></span\r\n                                ><span class="value">{{\r\n                                  allEmployeelist.employeeCertification[0]\r\n                                    ?.certificationNumber\r\n                                }}</span>\r\n                              </p>\r\n                              <p>\r\n                                <span class="label"\r\n                                  ><b> Certification Type: </b></span\r\n                                ><span class="value">{{\r\n                                  allEmployeelist.employeeCertificationtype[0]\r\n                                    ?.description\r\n                                }}</span>\r\n                              </p>\r\n                              <p>\r\n                                <span class="label"\r\n                                  ><b>Certifying Institution: </b></span\r\n                                ><span class="value">{{\r\n                                  allEmployeelist.employeeCertification[0]\r\n                                    ?.certifyingInstitution\r\n                                }}</span>\r\n                              </p>\r\n                            </div>\r\n                            \x3c!-- <div class="col-sm-4">\r\n                                    as\r\n                                </div> --\x3e\r\n                            <div class="col-sm-4">\r\n                              <p>\r\n                                <span class="label"\r\n                                  ><b>Certification Date: </b></span\r\n                                ><span class="value">\r\n    {{\r\n                                  allEmployeelist.employeeCertification[0]\r\n                                    ?.certificationDate | date: \'MM/dd/yyyy\'\r\n    }}\r\n</span>\r\n                              </p>\r\n                              <p  *ngIf="allEmployeelist.employeeCertification[0]?.isCertificationInForce">\r\n                                <span class="label"\r\n                                  ><b>Certification In Force? </b></span\r\n                                >\r\n                                <span class="value" >\r\n                                  <input type="checkbox" name="resale"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t             checked="true" disabled>\r\n                                </span>                                \r\n                              </p>\r\n                              <p  *ngIf="!allEmployeelist.employeeCertification[0]?.isCertificationInForce">\r\n                                <span class="label"\r\n                                  ><b>Certification In Force? </b></span\r\n                                >\r\n                                <span class="value" >\r\n                                  <input type="checkbox" name="resale"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t             disabled>\r\n                                </span>\r\n                                \r\n                              </p>\r\n\r\n                              <p  *ngIf="allEmployeelist.employeeCertification[0]?.isExpirationDate">\r\n                                <span class="label"\r\n                                  ><b>Expiration Date</b></span\r\n                                >\r\n                                <span class="value" >\r\n                                  <input type="checkbox" name="resale"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t             checked="true" disabled>\r\n                                </span>                                \r\n                              </p>\r\n                              <p  *ngIf="!allEmployeelist.employeeCertification[0]?.isExpirationDate">\r\n                                <span class="label"\r\n                                  ><b>Expiration Date</b></span\r\n                                >\r\n                                <span class="value" >\r\n                                  <input type="checkbox" name="resale"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t             disabled>\r\n                                </span>\r\n                                \r\n                              </p>                             \r\n                              <p *ngIf="allEmployeelist.employeeCertification[0]?.isExpirationDate"> \r\n                                <span class="label"\r\n                                  ><b>Certification Expiration Date: </b></span\r\n                                ><span class="value">\r\n    {{\r\n                                  allEmployeelist.employeeCertification[0]\r\n                                    ?.expirationDate | date: \'MM/dd/yyyy\'\r\n    }}\r\n</span>\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="panel panel-default">\r\n                <div class="panel-heading">\r\n                  <h4 class="panel-title">\r\n                    <a class="collapsed" data-toggle="collapse" href="#step3"\r\n                      >Training</a\r\n                    >\r\n                  </h4>\r\n                </div>\r\n                <div id="step3" class="panel-collapse collapse">\r\n                  <div class="panel-body">\r\n                    <div class="card">\r\n                      <div class="card-body">\r\n                        <div>\r\n                          <div\r\n                            class="table-responsive default-bg clear"\r\n                            *ngIf="allEmployeelist.employeeTraining"\r\n                          >\r\n                            <div class="col-sm-4">\r\n                              <p>\r\n                                <span class="label"\r\n                                  ><b>Aircraft Manfacturer: </b></span\r\n                                ><span class="value">{{\r\n                                  allEmployeelist.employeeTraining[0]\r\n                                    ?.aircraftManufacturerName\r\n                                }}</span>\r\n                              </p>\r\n                              <p>\r\n                                <span class="label"\r\n                                  ><b>Aircraft Model: </b></span\r\n                                ><span class="value">{{\r\n                                  allEmployeelist.aircraftModelIds\r\n                                }}</span>\r\n                              </p>\r\n                              <p>\r\n                                <span class="label"><b>Provider: </b></span\r\n                                ><span class="value">{{\r\n                                  allEmployeelist.employeeTraining[0]?.provider\r\n                                }}</span>\r\n                              </p>\r\n                              <p>\r\n                                <span class="label"><b>Industry Code: </b></span\r\n                                ><span class="value">{{\r\n                                  allEmployeelist.employeeTraining[0]?.industryCode\r\n                                }}</span>\r\n                              </p>\r\n                            </div>\r\n                            <div class="col-sm-4">\r\n                              <p>\r\n                                <span class="label"><b>Training Type: <span class="clr-red">*</span></b></span\r\n                                ><span class="value">\r\n                                    {{\r\n                                  allEmployeelist.employeeTraining[0]?.employeeTrainingTypeName\r\n                                    \r\n                                 }}\r\n                                </span>\r\n                              </p>\r\n                              <p>\r\n                                <span class="label"\r\n                                  ><b>Frequency of Training: </b></span\r\n                                ><span class="value">{{\r\n                                  allEmployeelist.employeeTraining[0]\r\n                                    ?.frequencyOfTrainingName\r\n                                }}</span>\r\n                              </p>\r\n                              <p>\r\n                                <span class="label"><b>Cost: </b></span\r\n                                ><span class="value">{{\r\n                                  allEmployeelist.employeeTraining[0]?.cost | number : \'1.2-2\'\r\n                                }}</span>\r\n                              </p>\r\n                              <p>\r\n                                <span class="label"><b>Duration: </b></span\r\n                                ><span class="value">{{\r\n                                  allEmployeelist.employeeTraining[0]?.duration\r\n                                }} {{durationType}}</span>\r\n                              </p>\r\n                            </div>\r\n                            <div class="col-sm-4">\r\n                              <p>\r\n                                <span class="label"><b>Schedule Date: </b></span\r\n                                ><span class="value">\r\n                                {{\r\n                                  allEmployeelist.employeeTraining[0]\r\n                                    ?.scheduleDate | date: \'MM/dd/yyyy\'\r\n                                }}\r\n                            </span>\r\n                              </p>\r\n                              <p>\r\n                                <span class="label"\r\n                                  ><b>Completion Date: </b></span\r\n                                ><span class="value">\r\n                                        {{\r\n                                  allEmployeelist.employeeTraining[0]\r\n                                    ?.completionDate | date: \'MM/dd/yyyy\'\r\n    }}\r\n</span>\r\n                              </p>\r\n                              <p>\r\n                                <span class="label"\r\n                                  ><b>Expiration Date: </b></span\r\n                                ><span class="value">\r\n    {{\r\n                                  allEmployeelist.employeeTraining[0]\r\n                                    ?.expirationDate | date: \'MM/dd/yyyy\'\r\n    }}\r\n</span>\r\n                              </p>\r\n                            </div>\r\n                           \r\n                            <div class="col-md-10 tableview"\r\n                                 style="max-width: 100%;">\r\n                                <h4 class="panel-title">\r\n                                  Certification Received\r\n                                </h4>\r\n                                <div class="clear"></div>\r\n                                            <hr /> \r\n                                           <div class="checkbox-cstm setDelts" style="margin-bottom: 10px;" >\r\n                                                <label style="width: auto !important;margin-top: 3px;">\r\n                                                 \r\n                                                  <input type="checkbox" [(ngModel)]="currenDocDeletedstatus" name="cparent1" id="cparent1"  (click)="getDeleteDocumentListByStatus($event.target.checked,allEmployeelist.employeeId)"\r\n                                                    />\r\n                                                  <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                Show  Deleted List \r\n                                                </label>\r\n                                            </div>  \r\n                                            <div class="clear"></div>\r\n                                <p-table #count\r\n                                         class="ptable-custom lastcol-fix"\r\n                                         [paginator]="true"\r\n                                         allEmployeeTrainingDocumentsList.length="0"\r\n                                         [value]="allEmployeeTrainingDocumentsList"\r\n                                         [rows]="pageSize"\r\n                                         [pageLinks]="3"\r\n                                         [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n                                         [columns]="documentTableColumns"\r\n                                         [scrollable]="true"\r\n                                         scrollHeight="450px"\r\n                                         (onPage)="pageIndexChange($event)">\r\n                               \r\n\r\n                                       <ng-template pTemplate="colgroup" let-columns>\r\n                                            <colgroup>\r\n                                                <col *ngFor="let col of columns"\r\n                                                     style="width: 130px;" />\r\n                                            </colgroup>\r\n                                        </ng-template>\r\n                                        <ng-template pTemplate="header" let-columns>\r\n                                            <tr>\r\n                                                <th *ngFor="let col of columns"\r\n                                                    pResizableColumn\r\n                                                    pReorderableColumn\r\n                                                    [pSortableColumn]="col.field">\r\n                                                    <div>\r\n                                                        {{ col.header }}\r\n                                                        <p-sortIcon *ngIf="\r\n                                            col.field != \'download\' &&\r\n                                            col.field != \'delete\'\r\n                                          "\r\n                                                                    [field]="col.field">\r\n                                                        </p-sortIcon>\r\n                                                    </div>\r\n                                                </th>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <th *ngFor="let col of columns"\r\n                                                    [ngSwitch]="col.field">\r\n                                                    <input type="text"\r\n                                                           (input)="\r\n                                          table3.filter(\r\n                                            $event.target.value,\r\n                                            col.field,\r\n                                            \'contains\'\r\n                                          )\r\n                                        "\r\n                                                           *ngIf="\r\n                                          col.field != \'download\' &&\r\n                                          col.field != \'delete\' &&\r\n                                          col.field != \'createdDate\' &&\r\n                                          col.field != \'updatedDate\'\r\n                                        "\r\n                                                           pInputText />\r\n                                                    <input type="date"\r\n                                                           style="width:100%"\r\n                                                           class="hidePlaceHolder"\r\n                                                           *ngIf="col.field == \'createdDate\'"\r\n                                                           name="createdDate"\r\n                                                           (change)="\r\n                                          dateFilterForTable(\r\n                                            $event.target.value,\r\n                                            col.field\r\n                                          )\r\n                                        " />\r\n                                                    \x3c!--[ngModel]="currentdate | date:\'yyyy-MM-dd\'"--\x3e\r\n                                                    <input type="date"\r\n                                                           style="width:100%"\r\n                                                           class="hidePlaceHolder"\r\n                                                           *ngIf="col.field == \'updatedDate\'"\r\n                                                           name="updatedDate"\r\n                                                           (change)="\r\n                                          dateFilterForTable(\r\n                                            $event.target.value,\r\n                                            col.field\r\n                                          )\r\n                                        " />\r\n                                                </th>\r\n                                                \x3c!-- <th style="width:140px;position:sticky"></th> --\x3e\r\n                                                \x3c!-- <th></th> --\x3e\r\n                                            </tr>\r\n                                        </ng-template>\r\n                                        <ng-template pTemplate="body"\r\n                                                     let-rowData\r\n                                                     let-columns="columns"\r\n                                                     let-i="rowIndex">\r\n                                            <tr *ngIf="\r\n                                                allEmployeeTrainingDocumentsList.length>\r\n                                                0\r\n                                                "\r\n                                                >\r\n                                                <td *ngFor="let col of columns">\r\n                                                    \x3c!-- *ngIf="col.field == \'fileName\'   col.field == \'createdDate\' || col.field == \'createdBy\' || col.field == \'updatedDate\' || col.field == \'updatedBy\' " --\x3e\r\n                                                    \x3c!-- <ng-container > --\x3e\r\n                                                    <div *ngIf="col.field != \'download\' && col.field != \'docMemo\'">\r\n                                                        <span>\r\n                                                            {{\r\n                                            col.field == \'createdDate\'\r\n                                              ? (rowData[col.field]\r\n                                                | date: \'MM/dd/yyyy h:mm a\')\r\n                                              : rowData[col.field] &&\r\n                                                col.field == \'updatedDate\'\r\n                                              ? (rowData[col.field]\r\n                                                | date: \'MM/dd/yyyy h:mm a\')\r\n                                              : rowData[col.field]\r\n                                                            }}\r\n                                                        </span>\r\n                                                        \x3c!-- <span *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'">\r\n                        rowData[col.field]\r\n                        </span> --\x3e\r\n                                                    </div>\r\n                                                    <div *ngIf="col.field == \'docMemo\'">\r\n\r\n                                                    <p class="m-0 p-0" [innerHTML]="rowData[col.field]"></p>\r\n                                                  </div> \r\n                                                    <div *ngIf="col.field == \'download\'"\r\n                                                         class="align_center">\r\n                                                        <a (click)="downloadFileUpload(rowData)"\r\n                                                           matTooltip="Download"\r\n                                                           matTooltipPosition="above"\r\n                                                           class="btn nobg btn-cstm">\r\n                                                            <span>\r\n                                                                <i class="fa fa-download"></i>\r\n                                                            </span>\r\n                                                        </a>\r\n                                                        <span data-toggle="modal"\r\n                                                              data-target="#contentAuditHistDoc">\r\n                                                            <a class="btn nobg"\r\n                                                               (click)="openHistoryDoc(rowData)"\r\n                                                               matTooltip="History"\r\n                                                               matTooltipPosition="above">\r\n                                                                <i class="fa fa-history"></i>\r\n                                                            </a>\r\n                                                        </span>\r\n                                                    </div>\r\n\r\n                                                    \x3c!-- </ng-container> --\x3e\r\n                                                </td>\r\n                                            </tr>\r\n                                        </ng-template>\r\n                                        <ng-template pTemplate="emptymessage"\r\n                                                     let-columns\r\n                                                     *ngIf="\r\n                                    allEmployeeTrainingDocumentsList.length == 0\r\n                                  ">\r\n                                            <tr>\r\n                                                <td [attr.colspan]="10"\r\n                                                    style="\r\n                                        color: red;\r\n                                        font-weight: bold;\r\n                                        text-align: center;\r\n                                      ">\r\n                                                    No records found\r\n                                                </td>\r\n                                            </tr>\r\n                                        </ng-template>\r\n                                        &nbsp;&nbsp;\r\n                                        <ng-template pTemplate="summary" id="footer">\r\n                                            <label id="footer" class="footer">Total:</label>\r\n                                            <input style="width: 5%;"\r\n                                                   [(ngModel)]="count._totalRecords"\r\n                                                   [disabled]="true"\r\n                                                   pInputText\r\n                                                   type="text" />\r\n                                            &nbsp;&nbsp;\r\n                                            <label id="footer" class="footer1">Pages Count:</label>\r\n                                            <input style="width: 5%;"\r\n                                                   [(ngModel)]="count._totalRecords"\r\n                                                   [disabled]="true"\r\n                                                   pInputText\r\n                                                   type="text" />\r\n                                        </ng-template>\r\n\r\n                                    </p-table>\r\n\r\n\r\n</div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="panel panel-default">\r\n                <div class="panel-heading">\r\n                  <h4 class="panel-title">\r\n                    <a class="collapsed" data-toggle="collapse" href="#step4"\r\n                      >Management Structure</a\r\n                    >\r\n                  </h4>\r\n                </div>\r\n                <div id="step4" class="panel-collapse collapse">\r\n                  <div class="panel-body">\r\n                    <div class="card">\r\n                      <div class="card-body">\r\n                        <div>\r\n                          <div\r\n                            class="table-responsive default-bg clear"\r\n                            *ngIf="employeeRolesList"\r\n                          >\r\n                            <div class="col-sm-6">\r\n                              <p>\r\n                                <span class="label"><b>Roles : </b></span\r\n                                ><span class="value">{{\r\n                                  selectedRoleNames\r\n                                }}</span>\r\n                              </p>\r\n                              <p>\r\n                                <span class="label"><b>Memo :</b></span\r\n                                ><span class="value" style="vertical-align: middle;" [innerHTML]="allEmployeelist.memo\r\n                                    ? allEmployeelist.memo\r\n                                    : \'-\'">\r\n                                  \x3c!--{{\r\n                                  allEmployeelist.memo\r\n                                    ? allEmployeelist.memo\r\n                                    : \'-\'\r\n                                }}--\x3e\r\n                                  </span>\r\n                              </p>\r\n                            </div>\r\n                            <div class="col-sm-6">\r\n                              <p>\r\n                                <app-tree-structure\r\n                                  [gridData]="gridData"\r\n                                ></app-tree-structure>\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            \r\n              <div\r\n                class="modal popup-blur"\r\n                id="contentAuditHistDoc"\r\n                data-backdrop="static"\r\n              >\r\n                <div class="modal-dialog modal-xl">\r\n                  <div class="modal-content">\r\n                    <div class="modal-header">\r\n                      <h4 class="modal-title">History of Documents</h4>\r\n                      \x3c!--<button type="button" class="close" data-dismiss="modal">\r\n                                                &times;\r\n                                            </button>--\x3e\r\n                        \r\n                      <button\r\n                        type="button"\r\n                        class="close"\r\n                        (click)="\r\n                          dismissDocumentPopupModel(\'#contentAuditHistDoc\')\r\n                        "\r\n                      >\r\n                        &times;\r\n                      </button>\r\n                    </div>\r\n                    <div class="modal-body">\r\n                      <div class="table-responsive">\r\n                        <table class="table table-bordered">\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Name</th>\r\n                              <th>Description</th>\r\n                              <th>Memo</th>\r\n                              <th>File Name</th>\r\n                              <th>File Size</th>\r\n                              <th>Created Date</th>\r\n                              <th>Created By</th>\r\n                              <th>Updated Date</th>\r\n                              <th>Updated By</th>\r\n                              <th>Is Deleted</th>\r\n                           \r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr\r\n                              *ngFor="let audit of sourceViewforDocumentAudit"\r\n                            ></tr>\r\n                            <tr\r\n                              *ngFor="\r\n                                let audit of sourceViewforDocumentAudit;\r\n                                let i = index\r\n                              "\r\n                            >\r\n                              <td\r\n                                [ngStyle]="{\r\n                                  color: getColorCodeForHistoryDoc(\r\n                                    i,\r\n                                    \'docName\',\r\n                                    audit.docName\r\n                                  )\r\n                                    ? \'black\'\r\n                                    : \'red\'\r\n                                }"\r\n                              >\r\n                                {{ audit.docName }}\r\n                              </td>\r\n                              <td\r\n                                [ngStyle]="{\r\n                                  color: getColorCodeForHistoryDoc(\r\n                                    i,\r\n                                    \'docDescription\',\r\n                                    audit.docDescription\r\n                                  )\r\n                                    ? \'black\'\r\n                                    : \'red\'\r\n                                }"\r\n                              >\r\n                                {{ audit.docDescription }}\r\n                              </td>\r\n                              <td\r\n                                [ngStyle]="{\r\n                                  color: getColorCodeForHistoryDoc(\r\n                                    i,\r\n                                    \'docMemo\',\r\n                                    audit.docMemo\r\n                                  )\r\n                                    ? \'black\'\r\n                                    : \'red\'\r\n                                }"\r\n                              >\r\n                              <p class="m-0 p-0" [innerHTML]="audit.docMemo"></p> \r\n                              \r\n                              </td>\r\n                              <td\r\n                                [ngStyle]="{\r\n                                  color: getColorCodeForHistoryDoc(\r\n                                    i,\r\n                                    \'fileName\',\r\n                                    audit.fileName\r\n                                  )\r\n                                    ? \'black\'\r\n                                    : \'red\'\r\n                                }"\r\n                              >\r\n                                {{ audit.fileName }}\r\n                              </td>\r\n                              <td>{{ audit.fileSize }}</td>  \r\n                             \r\n                              <td>\r\n                                {{\r\n                                  audit.createdDate | date: \'MM/dd/yyyy h:mm a \'\r\n                                }}\r\n                              </td>\r\n                              <td>{{ audit.createdBy }}</td>\r\n                                                    \r\n                              <td>\r\n                                {{\r\n                                  audit.updatedDate | date: \'MM/dd/yyyy h:mm a \'\r\n                                }}\r\n                              </td>\r\n                              <td>{{ audit.updatedBy }}</td>     \r\n                             \r\n                              \r\n                              <td> <input type="checkbox"  name="isDeleted" [(ngModel)]=" audit.isDeleted" disabled></td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                    <div class="modal-footer">\r\n                      <button\r\n                        type="button"\r\n                        class="btn btn-danger"\r\n                        (click)="\r\n                          dismissDocumentPopupModel(\'#contentAuditHistDoc\')\r\n                        "\r\n                      >\r\n                        Close\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div class="preloader" style="z-index: 10000;" *ngIf="isSpinnerVisible">\r\n                    <div class="loading">\r\n                        <div class="lds-roller">\r\n                            <div>\r\n                            </div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <app-spinner *ngIf="isSpinnerVisible"></app-spinner>\r\n                </div>\r\n                <div class="preloader" style="z-index: 10000;" *ngIf="isSpinnerVisible">\r\n                  <div class="loading">\r\n                      <div class="lds-roller">\r\n                          <div>\r\n                          </div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <app-spinner *ngIf="isSpinnerVisible"></app-spinner>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal">\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class="modal fade" id="downloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n  <div class="modal-dialog modal-sm">\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n        <h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n      </div>\r\n      <div class="modal-body" *ngIf="targetData">\r\n        <strong>\r\n          <span>\r\n            You are attempting to export {{targetData.totalRecords}} of records. \r\n          </span> \r\n        </strong>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):exportCSV(targetData); closeDeleteModal();">Confirm</button>\r\n        <button type="button" class="btn btn-danger" (click)="closeDeleteModal()">Cancel</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div id="employeeHistory"\r\n  style="z-index: 10000 !important;"\r\n  class="modal fade"\r\n  role="dialog"\r\n  data-backdrop="static"\r\n  data-keyboard="false"\r\n  data-backdrop="static"\r\n>\r\n\r\n  <div class="modal-dialog modal-xl">\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title">History of Employee</h4>\r\n      </div>\r\n      <div class="modal-body">\r\n        <div class="table-responsive">\r\n          <table\r\n            class="table table-bordered"\r\n            *ngIf="auditHistory.length > 0; else noDatavailable"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>EmpID</th>\r\n                <th>Job Title</th>\r\n                <th>Emp Expertise</th>\r\n                \x3c!-- <th>Job Type</th> --\x3e\r\n                <th>Start Date</th>\r\n                <th>Company</th>\r\n                <th>Pay Type</th>\r\n                <th>Is Active</th>               \r\n                <th>Created Date</th>\r\n                <th>Created By</th>               \r\n                <th>Updated Date</th>\r\n                <th>Updated By</th>\r\n                <th>Is Deleted</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class="audithistory-cstm">\r\n              \x3c!--*ngIf="auditHistory.length> 0"--\x3e\r\n              <tr *ngFor="let audit of auditHistory; let i = index">\r\n                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(\r\n                      i,\r\n                      \'firstName\',\r\n                      audit.firstName\r\n                    )\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.firstName }}\r\n                </td>\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(i, \'lastName\', audit.lastName)\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.lastName }}\r\n                </td>\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(\r\n                      i,\r\n                      \'employeeId\',\r\n                      audit.employeeId\r\n                    )\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.employeeId }}\r\n                </td>\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(i, \'jobtitle\', audit.jobtitle)\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.jobtitle }}\r\n                </td>\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(\r\n                      i,\r\n                      \'employeeExpertise\',\r\n                      audit.employeeExpertise\r\n                    )\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.employeeExpertise }}\r\n                </td>\r\n                \x3c!-- <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'jobType\', audit.jobType)  ? \'black\' : \'red\'  }">{{audit.jobType}}</td> --\x3e\r\n              <td [ngStyle]="{\r\n                    color: getColorCodeForHistory(\r\n                      i,\r\n                      \'startDate\',\r\n                      audit.startDate\r\n                    )\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.startDate | date: \'MM/dd/yyyy\' }}\r\n                </td>\r\n                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'company\', audit.company)  ? \'black\' : \'red\'  }">{{audit.company}}</td>\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(i, \'payType\', audit.payType)\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.payType }}\r\n                </td>\r\n                <td style="text-align: center;"\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(i, \'isActive\', audit.isActive)\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                <input type="checkbox" name="isActive" [(ngModel)]=" audit.isActive" disabled>                \r\n                </td>\r\n                \r\n              <td\r\n              [ngStyle]="{\r\n                color: getColorCodeForHistory(i, \'createdDate\', audit.createdDate)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }"\r\n            >\r\n              {{ audit.createdDate | date: \'MM/dd/yyyy h:mm a\' }}\r\n            </td>\r\n            <td\r\n                [ngStyle]="{\r\n                  color: getColorCodeForHistory(i, \'createdBy\', audit.createdBy)\r\n                    ? \'black\'\r\n                    : \'red\'\r\n                }"\r\n              >\r\n                {{ audit.createdBy }}\r\n              </td>\r\n           \r\n            <td\r\n            [ngStyle]="{\r\n              color: getColorCodeForHistory(i, \'updatedDate\', audit.updatedDate)\r\n                ? \'black\'\r\n                : \'red\'\r\n            }"\r\n          >\r\n            {{ audit.updatedDate | date: \'MM/dd/yyyy h:mm a\' }}\r\n          </td>\r\n          <td\r\n          [ngStyle]="{\r\n            color: getColorCodeForHistory(i, \'updatedBy\', audit.updatedBy)\r\n              ? \'black\'\r\n              : \'red\'\r\n          }"\r\n        >\r\n          {{ audit.updatedBy }}\r\n        </td>\r\n          <td style="text-align: center;"\r\n          [ngStyle]="{\r\n            color: getColorCodeForHistory(i, \'isDeleted\', audit.isDeleted)\r\n              ? \'black\'\r\n              : \'red\'\r\n          }"\r\n        >\r\n        <input type="checkbox" style="color: green !important;" name="isDeleted" [(ngModel)]=" audit.isDeleted" disabled>\r\n        \r\n        </td>\r\n\r\n          \r\n               \r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <ng-template #noDatavailable>\r\n            <div class="text-center">\r\n              <img\r\n                src="../../../../assets/images/binoculars.png"\r\n                style="height: 100px; width: 100px;"\r\n              />\r\n              <h4 style="color: #ff5663;">No History Found</h4>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal">\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div class="preloader" style="z-index: 10000;" *ngIf="isSpinnerVisible">\r\n      <div class="loading">\r\n        <div class="lds-roller"><div>\t\t\t\r\n        </div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n      </div>\r\n    </div>\r\n    <app-spinner  *ngIf="isSpinnerVisible"></app-spinner>\r\n  </div>\r\n  <div class="preloader" style="z-index: 10000;" *ngIf="isSpinnerVisible">\r\n\t\t<div class="loading">\r\n\t\t\t<div class="lds-roller"><div>\t\t\t\r\n\t\t\t</div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n\t\t</div>\r\n\t</div>\r\n\t<app-spinner  *ngIf="isSpinnerVisible"></app-spinner>\r\n\r\n </div>\r\n\r\n\r\n<div class="preloader" style="z-index: 10000;" *ngIf="isSpinnerVisible">\r\n\t\t<div class="loading">\r\n\t\t\t<div class="lds-roller"><div>\t\t\t\r\n\t\t\t</div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n\t\t</div>\r\n\t</div>\r\n\t<app-spinner  *ngIf="isSpinnerVisible"></app-spinner>\r\n'},F2CC:function(e,t,n){"use strict";n.r(t),t.default='<div [@fadeInOut] class="page-content">\r\n  <div class="card padding-10">\r\n      <div class="right_col" role="main">\r\n          <div class="x_panel">\r\n              <div class="x_content">\r\n                  <div class="col-md-12 shadow-Box">\r\n                      <div class="col-md-4" >\r\n                          <p class="fs12">\r\n                              <label class="control-label labels-font-header" style="width: auto; ">Emp First Name: </label>\r\n                              <span class="span-header-red" style="text-transform: capitalize" *ngIf="firstName"> {{firstName }} </span> </p>\r\n                      </div>\r\n                      <div class="col-md-4">\r\n                          <p class="fs12">\r\n                              <label class="control-label labels-font-header" style="width: auto; ">Emp Last Name: </label>\r\n                              <span class="span-header-red" style="text-transform: capitalize" *ngIf="lastName"> {{lastName }} </span> </p>\r\n                      </div>\r\n                      <div  class="col-md-4">\r\n                          <p class="fs12">\r\n                              <label class="control-label labels-font-header" style="width: auto; ">Emp Id: </label>\r\n                              <span class="span-header-red" style="text-transform: capitalize" *ngIf="empId"> {{empcode}} </span></p>\r\n                      </div>\r\n                  </div>\r\n                  <form #empform="ngForm" class="form-horizontal add-custustomer" style="padding-bottom: 16px;">\r\n                      <div class="card">\r\n                          <div class="card-header">\r\n                              <div class="card-header bg-primary">\r\n                                  <h4 class="new-card-heading">                                    \r\n                                      Management Structure\r\n                                  </h4>\r\n                              </div>\r\n                              \r\n                          </div>\r\n                          <div class="card-body">\r\n                              <div class="employee-setup">\r\n\r\n                                  <div class="col-12 employer-block">\r\n\r\n                                      <div class="col-4">\r\n                                          <div class="tab-content" id="employee-block">\r\n                                              <div class="tab-pane step-data active" id="step3">\r\n                                                  <div class="tab-pane">\r\n                                                      <div class="form-group col-sm-12 display-flex">\r\n                                                          <label class="control-label col-sm-4">\r\n                                                              Roles\r\n                                                              <span style="margin-left:3px;cursor:pointer;"><a class="fa fa-plus-circle fa-lg" [routerLink]="[\'/rolesmodule/rolespages/app-roles-setup\']" target="_blank"></a></span>\r\n                                                          </label>\r\n                                                          <div class="inner-addon col-12 display-flex" style="margin-left: 5px;">\r\n                                                              \x3c!-- <select [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceEmployee">\r\n                                                                  <option *ngFor="let certificationtype of [\'allCertification\',\'jlkjsdf\']" [ngValue]="certificationtype">{{certificationtype}}</option>\r\n                                                              </select> --\x3e\r\n                                                              <ng-multiselect-dropdown  name ="selectedRoles" \r\n                                                                                       [data]="employeeRoleLabel"\r\n                                                                                       [(ngModel)]="selectedRoles"\r\n                                                                                       [settings]="dropdownSettings"\r\n                                                                                       (onSelect)="onItemSelect($event)"\r\n                                                                                       (onSelectAll)="onSelectAll($event)"\r\n                                                                                       >\r\n                                                              </ng-multiselect-dropdown>\r\n                                                               \x3c!-- <p-multiSelect [options]="shiftValues" \r\n                                                              name="multipleShiftType" [(ngModel)]="selectedRoles"\r\n                                                               (ngModelChange)="enableSave()" [panelStyle]="{minWidth:\'12em\'}">\r\n\r\n                                                              </p-multiSelect> --\x3e\r\n                                                              \x3c!-- <a href="#" data-toggle="modal" data-target="#addCertificationType" class="add-icon"><i class="fa fa-plus"></i></a> --\x3e\r\n                                                          </div>\r\n                                                      </div>\r\n                                                      \x3c!-- <div class="form-group col-sm-12 display-flex">\r\n                                                        <label class="control-label col-sm-4">\r\n                                                            Roles\r\n                                                            <span style="margin-left:3px;cursor:pointer;"><a class="fa fa-plus-circle fa-lg" [routerLink]="[\'/rolesmodule/rolespages/app-roles-setup\']" target="_blank"></a></span>\r\n                                                        </label>\r\n                                                        <div class="inner-addon col-12 display-flex">\r\n                                                                                                                     \r\n                                                            <p-multiSelect [options]="employeeRolesList" name="multipleShiftType"\r\n                                                             [(ngModel)]="employeeRoleLabel" \r\n                                                             (ngModelChange)="enableSave()" [panelStyle]="{minWidth:\'12em\'}"></p-multiSelect>\r\n                                                            </div>\r\n                                                    </div> --\x3e\r\n                                                      <div class="form-group col-sm-12 memo-popup-cstm display-flex">\r\n                                                          <label class="control-label col-sm-4">Memo</label>\r\n                                                          <div class="col-sm-12">\r\n                                                              <div class="col-sm-6">\r\n                                                                  <span>\r\n                                                                      <div class="form-group memo-popup-cstm mat_emo">\r\n                                                                          <div [innerHTML]="memoText"\r\n                                                                          [matTooltip]="parsedText(memoText)"\r\n                                                                          matTooltipPosition="above"\r\n                                                                               style="width: 100%;padding:0px !important;line-height: 2"\r\n                                                                               class="form-control text_editor_box"></div>\r\n                                                                      </div>\r\n                                                                  </span>\r\n                                                              </div>\r\n                                                              <div class="col-sm-1" style="margin-top:7px;">\r\n                                                                  <i class="fa fa-pencil"\r\n                                                                     data-toggle="modal"\r\n                                                                     data-target="#memo-popup"\r\n                                                                     matTooltipPosition="above"\r\n                                                                     matTooltip="Add Memo"\r\n                                                                     (click)="onClickMemo()"></i>\r\n                                                              </div>\r\n                                                          </div>\r\n                                                      </div>\r\n                                                  </div>\r\n                                              </div>\r\n                                          </div>\r\n                                      </div>\r\n                                      <div class="form-group col-8 management-structure">\r\n                                          <app-tree-structure [gridData]="gridData"></app-tree-structure> \r\n                                        </div>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                      </div>\r\n                      </form>\r\n                  \r\n              </div>\r\n          </div>\r\n\r\n          <button *ngIf ="!isEditContent" [disabled]="!employeeService.enableUpdateButton" type="button" class="btn btn-primary pull-right" (click)="saveManagementStructure()">Save</button>\r\n          <button *ngIf ="isEditContent"  [disabled]="!employeeService.enableUpdateButton"  type="button" class="btn btn-primary pull-right" (click)="saveManagementStructure()">Update</button>\r\n          <button type="button" class="btn btn-primary pull-right" (click)="nextClick(\'Previous\')">Previous</button>\r\n      </div>\r\n</div>\r\n</div>\r\n<div class="modal fade" id="memo-popup" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">\r\n                    &times;\r\n                </button>\r\n                <h4 class="modal-title">Edit Memo</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                    <th style="color: #fff;">Memo</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td style="white-space: inherit">\r\n                                <p-editor spellcheck="true"\r\n                                (ngModelChange)="editorgetmemo($event)"\r\n                                          [(ngModel)]="memoPopupContent"\r\n                                          [style]="{ height: \'320px\' }"\r\n                                          name="memoPopupContent"\r\n                                          required></p-editor>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div style="float: right;">\r\n                    <button type="button"\r\n                            class="btn btn-primary"\r\n                            style="padding: 6px 12px !important; margin-top: 10px;"\r\n                            data-dismiss="modal"\r\n                            [disabled]="disableEditor"\r\n                            (click)="onClickPopupSave()">\r\n                        Save\r\n                    </button>\r\n                    <button type="button"\r\n                            class="btn btn-danger"\r\n                            style="padding: 6px 12px !important; margin-top: 10px;"\r\n                            data-dismiss="modal">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #tabRedirectConfirmationModal4 let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n      <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">&times;</button>\r\n      <h4 class="modal-title">Confirmation</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <h6 style="text-align: left;">\r\n            Do you want to Save changes and Continue ?\r\n          </h6>\r\n    </div>\r\n    <div class="modal-footer">\r\n  \r\n      <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="redirectToTabWithoutSave()">No</button>\r\n      <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="redirectToTab()">Yes</button>\r\n    </div>\r\n  </ng-template>\r\n  <div class="preloader"  *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div>\t\t\t\r\n        </div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>\r\n<app-spinner  *ngIf="isSpinnerVisible"></app-spinner>'},JPD2:function(e,t,n){"use strict";n.r(t),t.default=".drp-certification-type {\n  width: 198px !important;\n}\n\n.labels-font-header {\n  font-size: 13px !important;\n  font-weight: normal !important;\n}\n\n.span-header-red {\n  color: red;\n  font-weight: bold;\n}\n\n.shadow-Box {\n  padding-bottom: 0px !important;\n}\n\nlabel {\n  text-align: left;\n  width: 150px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.inner-addon .ui-autocomplete-input {\n  width: 100% !important;\n}\n\n.po-head {\n  font-weight: bold;\n  font-size: 16px;\n  color: #295d92;\n}\n\n.partsList-table-tr th {\n  min-width: 80px;\n}\n\n.addpn-btn {\n  padding: 5px 10px !important;\n  font-size: 13px;\n}\n\na.fa.fa-plus-circle {\n  color: green !important;\n}\n\n.partsList-modal .form-group {\n  margin-bottom: 6px !important;\n}\n\n.rpo-table-cstm th {\n  padding: 8px 5px !important;\n}\n\n.child-add-icon {\n  cursor: pointer;\n  margin: 2px -12px;\n}\n\n.child-add-icon a:before, .child-add-icon i:before {\n  font-size: 16px;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}"},Kdgf:function(e,t,n){"use strict";n.r(t);var i=n("mrSG"),r=n("8Y7J"),a=n("u9T3"),s=n("s7LF"),o=n("TSSN"),l=n("1+r1"),c=n("iInd"),d=n("pjuo"),p=function(){function e(t,n,i){var r=this;_classCallCheck(this,e),this.router=t,this.route=n,this.employeeService=i,this.employeeService.bredcrumbObjChangeObject$.subscribe((function(e){r.otherurl=e,r.loadmethod(r.otherurl)}))}return _createClass(e,[{key:"ngOnInit",value:function(){this.currentUrl=this.route.url,this.loadmethod(this.currentUrl)}},{key:"loadmethod",value:function(e){this.currentUrl=e,this.currentUrl&&(this.currentUrl.includes("/employeesmodule/employeepages/app-employees-list")?this.items=[{label:"Employee"},{label:"Employee List"}]:this.currentUrl.includes("/employeesmodule/employeepages/app-employee-general-information-edit")||this.currentUrl.includes("/employeesmodule/employeepages/app-employee-certification-edit")||this.currentUrl.includes("/employeesmodule/employeepages/app-employee-training-edit")||this.currentUrl.includes("/employeesmodule/employeepages/app-employees-management-structure-edit")?this.items=[{label:"Employee"},{label:"Edit Employee"}]:(this.currentUrl.includes("/employeesmodule/employeepages/app-employee-general-information")||this.currentUrl.includes("/employeesmodule/employeepages/app-employee-certification")||this.currentUrl.includes("/employeesmodule/employeepages/app-employee-training")||this.currentUrl.includes("/employeesmodule/employeepages/app-employees-management-structure"))&&(this.items=[{label:"Employee"},{label:"Create Employee"}])),this.otherurl&&(this.currentUrl.includes("/employeesmodule/employeepages/app-employees-list")?this.items=[{label:"Employee"},{label:"Employee List"}]:this.currentUrl.includes("/employeesmodule/employeepages/app-employee-general-information-edit")||this.currentUrl.includes("/employeesmodule/employeepages/app-employee-certification-edit")||this.currentUrl.includes("/employeesmodule/employeepages/app-employee-training-edit")||this.currentUrl.includes("/employeesmodule/employeepages/app-employees-management-structure-edit")?this.items=[{label:"Employee"},{label:"Edit Employee"}]:(this.currentUrl.includes("/employeesmodule/employeepages/app-employee-general-information")||this.currentUrl.includes("/employeesmodule/employeepages/app-employee-certification")||this.currentUrl.includes("/employeesmodule/employeepages/app-employee-training")||this.currentUrl.includes("/employeesmodule/employeepages/app-employees-management-structure"))&&(this.items=[{label:"Employee"},{label:"Create Employee"}]))}}]),e}();p.ctorParameters=function(){return[{type:c.ActivatedRoute},{type:c.Router},{type:d.a}]},p=i.b([Object(r.Component)({selector:"quickapp-pro-employee",template:i.c(n("NWUP")).default})],p);var m=n("8rEH"),u=n("sYxu"),h=n("3LUQ"),y=n("lGQG"),v=n("G0yt"),f=n("1G5W"),g=n("XNiG"),b=n("8gm/"),S=n("EVdn"),E=n.n(S),I=n("wd/R"),D=n("OlR4"),M=n("Hocb"),x=n("JPLv"),C=n("6c3z"),w=n("h55p"),k=n("Ph3x"),N=n("SVse"),L=function(){function e(t,n,i,r,a,s,o,l,c,d,p,u){_classCallCheck(this,e),this.modalService=t,this.translationService=n,this.empService=i,this.router=r,this.authService=a,this.datePipe=s,this.alertService=o,this.commonService=l,this.configurations=c,this.currencyService=d,this.legalEntityService=p,this.itemser=u,this.isDeleteMode=!1,this.isEditMode=!1,this.viewactive=!1,this.viewinactive=!0,this.isSpinnerVisible=!1,this.exportData=[],this.allCapesInfo=[],this.viewempDetails={},this.viewTraining={},this.viewGeneralDetails={},this.allEmployeelist=[],this.EmployeeViewlist={},this.EmployeeEditlist={},this.pageSize=10,this.shiftMapArray=[],this.auditHistory=[],this.allEmployeeTrainingDocumentsList=[],this.allCurrencyData=[],this.allShiftData=[],this.allCustomerFinanceDocumentsListOriginal=[],this.pageIndex=0,this.onDestroy$=new g.a,this.showTitle="",this.headerManagementStructureWithName={},this.currenDocDeletedstatus=!1,this.selectedOnly=!1,this.headers=[{field:"firstName",header:"First Name"},{field:"lastName",header:"Last Name"},{field:"employeeCode",header:"Emp ID"},{field:"jobtitle",header:"Job Title"},{field:"employeeExpertise",header:"Emp Expertise"},{field:"startDate",header:"Start Date"},{field:"company",header:"Company"},{field:"shopEmployee",header:"Shop Employee"},{field:"paytype",header:"Pay Type"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"CreatedBy"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"UpdatedBy"}],this.customerDocumentsColumns=[{field:"docName",header:"Name"},{field:"docDescription",header:"Description"},{field:"docMemo",header:"Memo"},{field:"fileName",header:"File Name"},{field:"fileSize",header:"File Size"},{field:"createdBy",header:"Created By"},{field:"updatedBy",header:"Updated By"},{field:"createdDate",header:"Created Date"},{field:"updatedDate",header:"Updated Date"}],this.selectedColumnsDoc=this.customerDocumentsColumns,this.selectedColumns=this.headers,this.sourceEmployee={},this.Active="Active",this.employeeRoleLabel=[],this.tagNameCollection=[],this.selectedRoleNames="",this.gridData=[],this.status="Active",this.filterText=!1,this.currentstatus="Active",this.viewEmpID=0,this.viewType="mpn",this.empshifttype="",this.supervisorname="",this.empcreatedby="",this.compmanagmentLegalEntityName="",this.biumanagmentLegalEntityName="",this.divmanagmentLegalEntityName="",this.managmentLegalEntityName="",this.originatingCountryName="",this.shiftNames="",this.leavetypenames="",this.empcreatedDate="",this.empExpertiseName="",this.empleaveType="",this.empstatus="",this.durationType="",this.durationTypelist=[{id:1,type:"Days"},{id:2,type:"Weeks"},{id:3,type:"Months"},{id:3,type:"Years"}],this.sourceViewforDocumentAudit=[],this.documentTableColumns=[{field:"docName",header:"Name"},{field:"docDescription",header:"Description"},{field:"docMemo",header:"Memo"},{field:"fileName",header:"File Name"},{field:"fileSize",header:"File Size"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"CreatedBy"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"UpdatedBy"},{field:"download",header:"Actions"}],this.currentDeletedstatus=!1,this.dateObject={},this.dataSource=new m.a,this.translationService.closeCmpny=!1,this.activeIndex=0,this.empService.listCollection=null}return _createClass(e,[{key:"ngOnInit",value:function(){this.activeIndex=0,this.empService.currentUrl="/employeesmodule/employeepages/app-employees-list",this.empService.bredcrumbObj.next(this.empService.currentUrl),this.empService.ShowPtab=!1,this.empService.alertObj.next(this.empService.ShowPtab)}},{key:"ngOnDestroy",value:function(){this.onDestroy$.next()}},{key:"onDataLoadSuccessful",value:function(e){this.totalRecords=e.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize),this.dataSource.data=e,this.allEmployeesList=e,this.isSpinnerVisible=!1}},{key:"closeDeleteModal",value:function(){E()("#downloadConfirmation").modal("hide")}},{key:"onemployeeDataLoadSuccessful",value:function(e){null!=e[0].employeeLeaveTypeMapping&&(this.employeeLeaveType=e[0].employeeLeaveTypeMapping.employeeLeaveTypeId,this.shiftId=e[0].employeeShiftMapping.shiftId,this.leaveMapArray=e[0].employeeLeaveTypeMapping,this.shiftMapArray=e[0].employeeShiftMapping),this.dataSource.data=e,this.allEmployeelist=e[0],this.allEmployeelist.employeeTraining[0]&&this.allEmployeelist.employeeTraining[0].durationTypeId?this.durationType=Object(M.g)("type","id",this.allEmployeelist.employeeTraining[0].durationTypeId,this.durationTypelist):this.durationType="",this.allEmployeelist.hourlyPay=this.allEmployeelist.hourlyPay?Object(M.b)(this.allEmployeelist.hourlyPay,2):"0",this.isSpinnerVisible=!1}},{key:"navigateTogeneralInfo",value:function(){this.empService.isEditMode=!1,this.empService.isDisbaleTabs=!1,this.empService.ShowPtab=!0,this.router.navigateByUrl("/employeesmodule/employeepages/app-employee-general-information"),this.empService.currentUrl="/employeesmodule/employeepages/app-employee-general-information",this.empService.alertObj.next(this.empService.ShowPtab),this.empService.bredcrumbObj.next(this.empService.currentUrl),this.empService.listCollection=void 0}},{key:"getManagementStructureNameandCodes",value:function(e){var t=this;this.commonService.getManagementStructureNameandCodes(e).subscribe((function(e){e.Level1?t.headerManagementStructureWithName.level1=e.Level1:t.headerManagementStructureWithName.level1="-",e.Level2?t.headerManagementStructureWithName.level2=e.Level2:t.headerManagementStructureWithName.level2="-",e.Level3?t.headerManagementStructureWithName.level3=e.Level3:t.headerManagementStructureWithName.level3="-",e.Level4?t.headerManagementStructureWithName.level4=e.Level4:t.headerManagementStructureWithName.level4="-"}),(function(e){t.isSpinnerVisible=!1;var n=e;t.errorMessageHandler(n)}))}},{key:"openEdit",value:function(e){this.empService.isDisbaleTabs=!0,this.empService.isEditMode=!0,this.empService.employeeId,this.empService.listCollection=e;var t=e.employeeId;this.empService.employeeId=t,this.router.navigateByUrl("employeesmodule/employeepages/app-employee-general-information-edit/"+t)}},{key:"onDataLoadFailed",value:function(e){this.isSpinnerVisible=!1}},{key:"loadData",value:function(){var e=this;this.empService.getEmployeeList().subscribe((function(t){return e.onDataLoadSuccessful(t[0])}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"activeStatus",value:function(e){e&&1==this.currentDeletedstatus?this.filterText=!0:this.filterText=!1}},{key:"loadEmployeePages",value:function(e){this.isSpinnerVisible=!0,this.lazyLoadEventData=e;var t=parseInt(e.first)/e.rows;this.pageIndex=t,this.pageSize=e.rows,e.first=t,this.lazyLoadEventDataInput=e,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:this.status?this.status:"Active"}),1==this.filterText?this.lazyLoadEventDataInput.filters.isDeleted=!0:this.lazyLoadEventDataInput.filters.isDeleted=!1,this.getList(this.lazyLoadEventDataInput)}},{key:"geEmpListByStatus",value:function(e){this.isSpinnerVisible=!0,this.viewactive=!this.viewactive,this.viewinactive=!this.viewinactive,this.pageIndex=0,this.pageSize=this.lazyLoadEventDataInput.rows,this.lazyLoadEventDataInput.first=0,this.status=e,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:e});var t=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(M.j)(this.lazyLoadEventDataInput.filters)});this.getList(t)}},{key:"getDeleteListByStatus",value:function(e){if(this.isSpinnerVisible=!0,this.currentDeletedstatus=!0,this.pageIndex=0,this.pageSize=this.lazyLoadEventDataInput.rows,this.lazyLoadEventDataInput.first=0,this.status=status,1==e){this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:this.currentstatus});var t=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(M.j)(this.lazyLoadEventDataInput.filters)});this.getList(t)}else{this.currentDeletedstatus=!1,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:this.currentstatus});var n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(M.j)(this.lazyLoadEventDataInput.filters)});this.getList(n)}}},{key:"restore",value:function(e,t){this.restoreRecordData=t,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"restoreRecord",value:function(){var e=this;this.commonService.updatedeletedrecords("Employee","EmployeeId",this.restoreRecordData.employeeId).subscribe((function(t){e.modal.close(),e.getDeleteListByStatus(!0),e.alertService.showMessage("Success","Employee Restored Successfully.",h.d.success)}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}},{key:"globalSearch",value:function(e){this.isSpinnerVisible=!0;var t=parseInt(this.lazyLoadEventDataInput.first)/this.lazyLoadEventDataInput.rows;this.pageIndex=t,this.pageSize=this.lazyLoadEventDataInput.rows,this.lazyLoadEventDataInput.first=t,this.lazyLoadEventDataInput.globalFilter=e,this.status=this.currentstatus,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:this.status});var n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(M.j)(this.lazyLoadEventDataInput.filters)});this.getList(n)}},{key:"getList",value:function(e){var t=this;this.isSpinnerVisible=!0;var n=!!this.currentDeletedstatus;e.filters.isDeleted=n;var i=Object.assign({},e,{filters:Object(M.j)(e.filters)});this.empService.getAllEmployeeList(i).pipe(Object(f.a)(this.onDestroy$)).subscribe((function(e){t.data=e[0].results,t.allEmployeesList=t.data,t.allCapesInfo=t.data,t.allEmployeesList.length>0?(t.totalRecords=e[0].totalRecordsCount,t.totalPages=Math.ceil(t.totalRecords/t.pageSize)):(t.allEmployeesList=[],t.totalRecords=0,t.totalPages=0),t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1;var n=e;t.errorMessageHandler(n)}))}},{key:"exportCSV",value:function(e){var t=this;this.isSpinnerVisible=!0,this.exportData=[];var n=!!this.currentDeletedstatus,i={first:0,rows:e.totalRecords,sortOrder:1,filters:{status:this.currentstatus,isDeleted:n},globalFilter:""};this.empService.downloadAllEmployeeList(i).subscribe((function(n){var i=n.results.map((function(e){return Object.assign({},e,{startDate:e.startDate?t.datePipe.transform(e.startDate,"MMM-dd-yyyy"):"",createdDate:e.createdDate?t.datePipe.transform(e.createdDate,"MMM-dd-yyyy hh:mm a"):"",updatedDate:e.updatedDate?t.datePipe.transform(e.updatedDate,"MMM-dd-yyyy hh:mm a"):""})}));t.loadingIndicator=!1,e._value=i,e.exportCSV(),e.value=t.data,t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1;var n=e;t.errorMessageHandler(n)}))}},{key:"errorMessageHandler",value:function(e){"string"==typeof e.error?this.alertService.showMessage("Error",e.error,h.d.error):this.alertService.showMessage(e.error.message,"",h.d.error)}},{key:"mouseOverData",value:function(e,t){return"startDate"===e?I(t.startDate).format("MM/DD/YYYY"):"updatedDate"===e?I(t.updatedDate).format("MM/DD/YYYY"):"createdDate"===e?I(t.createdDate).format("MM/DD/YYYY"):void 0}},{key:"convertDate",value:function(e,t){return"startDate"===e?I(t.startDate).format("MM/DD/YYYY"):"updatedDate"===e?I(t.updatedDate).format("MM/DD/YYYY"):"createdDate"===e?I(t.createdDate).format("MM/DD/YYYY"):void 0}},{key:"getData",value:function(e,t){return"jobtitle"===t?e.jobtitle?e.jobtitle:"NA":"company"===t?null!=e.managmentLegalEntity&&null!=e.divmanagmentLegalEntity&&null!=e.biumanagmentLegalEntity&&null!=e.compmanagmentLegalEntity?e.compmanagmentLegalEntity.name:null!=e.biumanagmentLegalEntity&&null!=e.divmanagmentLegalEntity&&null!=e.managmentLegalEntity?e.biumanagmentLegalEntity.name:null!=e.divmanagmentLegalEntity&&null!=e.managmentLegalEntity?e.divmanagmentLegalEntity.name:null!=e.managementStructeInfo?e.managmentLegalEntity.name:"NA":"employeeExpertise"===t?e.employeeExpertise?e.employeeExpertise.description:"NA":"employeeId"===t?"EMP "+e[t]:"paytype"===t?e.isHourly?"Hourly":"Yearly":e[t]}},{key:"deleteItemAndCloseModel",value:function(){var e=this;this.isSaving=!0,this.isDeleteMode=!0,this.sourceEmployee.isdelete=!0,this.sourceEmployee.employeeId=this.deleteEmployeeId,this.sourceEmployee.updatedBy=this.userName,this.showTitle="Employee removed successfully.",this.empService.deleteEmployee(this.sourceEmployee).subscribe((function(t){e.alertService.showMessage("Success",e.showTitle,h.d.success),e.modal.close(),e.loadEmployeePages(e.lazyLoadEventData)}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}},{key:"openDelete",value:function(e,t){this.deleteEmployeeId=t.employeeId,this.deleteEmployeeName=t.firstName+" - "+t.employeeCode,this.isEditMode=!1,this.isDeleteMode=!0,this.sourceEmployee=t,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){}),(function(){}))}},{key:"saveCompleted",value:function(e){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Employee deleted successfully",h.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Employee Action edited successfully",h.d.success),this.loadEmployeePages(this.lazyLoadEventData)}},{key:"saveFailedHelper",value:function(e){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",h.d.error,e),this.alertService.showStickyMessage(e,null,h.d.error)}},{key:"openView",value:function(e){var t=this;this.isSpinnerVisible=!0,E()("#step1").collapse("show"),this.toGetEmployeeDetailsByEmpId(e.employeeId),this.toGetDocumentsListNew(e.employeeId),this.viewEmpID=e.employeeId,this.loadEmployeeRoles(e.employeeId),this.isSpinnerVisible=!1,this.empService.getEmployeeListforView(e.employeeId).subscribe((function(e){return t.onemployeeDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"handleChange",value:function(e,t){var n=this;if(0==t.checked)this.sourceEmployee=e,this.sourceEmployee.updatedBy=this.userName,this.sourceEmployee.IsActive=!1,(i=[]).push(this.sourceEmployee.employeeLeaveTypeId),this.sourceEmployee.employeeLeaveTypeId=i,this.Active="In Active",this.sourceEmployee.isActive=!1,this.empService.updateActionforActive(this.sourceEmployee).subscribe((function(e){return n.saveCompleted(n.sourceEmployee)}),(function(e){return n.saveFailedHelper(e)}));else{var i=[];this.sourceEmployee=e,i.push(this.sourceEmployee.employeeLeaveTypeId),this.sourceEmployee.employeeLeaveTypeId=i,this.sourceEmployee.updatedBy=this.userName,this.sourceEmployee.IsActive=!0,this.Active="Active",this.sourceEmployee.isActive,this.empService.updateActionforActive(this.sourceEmployee).subscribe((function(e){return n.saveCompleted(n.sourceEmployee)}),(function(e){return n.saveFailedHelper(e)}))}}},{key:"ExpandAllEmployeeDetailsModel",value:function(){E()("#step1").collapse("show"),E()("#step2").collapse("show"),E()("#step3").collapse("show"),E()("#step4").collapse("show")}},{key:"CloseAllEmployeerDetailsModel",value:function(){E()("#step1").collapse("hide"),E()("#step2").collapse("hide"),E()("#step3").collapse("hide"),E()("#step4").collapse("hide")}},{key:"dismissDocumentPopupModel",value:function(e){this.closeMyModel(e)}},{key:"closeMyModel",value:function(e){E()(e).modal("hide")}},{key:"getAuditHistoryById",value:function(e){var t=this;this.isSpinnerVisible=!0,this.empService.getEmployeeAuditDetails(e.employeeId).subscribe((function(e){t.auditHistory=e,t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1;var n=e;t.errorMessageHandler(n)}))}},{key:"getColorCodeForHistory",value:function(e,t,n){var i=this.auditHistory,r=i.length;if(e>=0&&e<=r)return e+1===r||i[e+1][t]===n}},{key:"getAllFrequencyTrainingData",value:function(){return i.a(this,void 0,void 0,regeneratorRuntime.mark((function e(){var t=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.commonService.smartDropDownList("FrequencyOfTraining","FrequencyOfTrainingId","FrequencyName").subscribe((function(e){t.getAllFrequencyTrainingInfodrpData=e}),(function(e){t.isSpinnerVisible=!1;var n=e;t.errorMessageHandler(n)}));case 2:case"end":return e.stop()}}),e,this)})))}},{key:"getDeleteDocumentListByStatus",value:function(e,t){this.currenDocDeletedstatus=!!e,this.toGetDocumentsListNew(t)}},{key:"toGetDocumentsListNew",value:function(e){var t=this;this.commonService.GetDocumentsListNew(e,4,this.currenDocDeletedstatus).subscribe((function(e){t.allEmployeeTrainingDocumentsList=e,t.allCustomerFinanceDocumentsListOriginal=e}),(function(e){t.isSpinnerVisible=!1;var n=e;t.errorMessageHandler(n)}))}},{key:"downloadFileUpload",value:function(e){var t="".concat(this.configurations.baseUrl,"/api/FileUpload/downloadattachedfile?filePath=").concat(e.link);window.location.assign(t)}},{key:"loadCurrencyData",value:function(){var e=this;this.currencyService.getCurrencyList().subscribe((function(t){e.allCurrencyData=t[0]}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}},{key:"getAllStationData",value:function(){return i.a(this,void 0,void 0,regeneratorRuntime.mark((function e(){var t=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.commonService.smartDropDownList("EmployeeStation","EmployeeStationId","StationName").subscribe((function(e){t.getAllAllStationInfodrpData=e}),(function(e){t.isSpinnerVisible=!1;var n=e;t.errorMessageHandler(n)}));case 2:case"end":return e.stop()}}),e,this)})))}},{key:"getManagementStructureData",value:function(e){var t=this;this.selectedRoleNames="",this.empService.getStoredEmployeeRoles(e).subscribe((function(e){null!=t.employeeRolesList&&(t.employeeRolesList.forEach((function(n){e.forEach((function(e){e.roleId==n.id&&(t.selectedRoleNames+=n.name+", ")}))})),t.selectedRoleNames&&t.selectedRoleNames.length>1&&(t.selectedRoleNames=t.removeLastComma(t.selectedRoleNames)))})),this.empService.getStoredEmployeeManagementStructure(e).subscribe((function(e){t.empService.legalEnityList=e}))}},{key:"removeLastComma",value:function(e){var t=e.lastIndexOf(",");return e.substring(0,t)}},{key:"loadEmployeeRoles",value:function(e){var t=this;this.empService.getAllRolesOfEmployee().subscribe((function(n){t.employeeRolesList=n,t.employeeRoleLabel=t.employeeRolesList.map((function(e){return e.name})),t.loadManagementStructure(e)}),(function(e){return console.log(e)}))}},{key:"loadManagementStructure",value:function(e){var t=this;this.legalEntityService.getManagemententity().subscribe((function(n){t.onManagemtntdataLoad(n[0]),t.getManagementStructureData(e)}),(function(e){console.log(e)}))}},{key:"onManagemtntdataLoad",value:function(e){this.allManagemtninfo=e;for(var t=0;t<this.allManagemtninfo.length;t++)null!=this.allManagemtninfo[t].tagName&&this.tagNameCollection.push(this.allManagemtninfo[t]);this.allManagemtninfo&&(this.gridData=[{data:{fullName:this.allManagemtninfo[0].companyName,isRoot:!0,managementStructureId:0},children:this.makeNestedObj(this.allManagemtninfo,null),isCheckboxNotDisable:!0}])}},{key:"makeNestedObj",value:function(e,t){var n=[];for(var i in e)if(e[i].parentId==t){var r=this.makeNestedObj(e,e[i].managementStructureId);e[i]={data:e[i]},e[i].isCheckboxNotDisable=!0,r.length&&(e[i].children=r),n.push(e[i])}return n}},{key:"toGetEmployeeDetailsByEmpId",value:function(e){var t=this;this.empService.toGetEmployeeDetailsByEmpId(e).subscribe((function(e){t.empDetailsData=e,t.empshifttype=t.empDetailsData.shiftnames,t.supervisorname=t.empDetailsData.supervisorName,t.empcreatedby=t.empDetailsData.createdBy,t.empcreatedDate=t.empDetailsData.createdDate,t.compmanagmentLegalEntityName=t.empDetailsData.compmanagmentLegalEntityName,t.biumanagmentLegalEntityName=t.empDetailsData.biumanagmentLegalEntityName,t.divmanagmentLegalEntityName=t.empDetailsData.divmanagmentLegalEntityName,t.managmentLegalEntityName=t.empDetailsData.managmentLegalEntityName,t.originatingCountryName=t.empDetailsData.originatingCountryName,t.shiftNames=t.empDetailsData.shiftNames,t.currencyName=t.empDetailsData.currencyName,t.leavetypenames=t.empDetailsData.leavetypenames,t.stationName=t.empDetailsData.stationName,t.jobTitleName=t.empDetailsData.jobTitle,t.empExpertiseName=t.empDetailsData.employeeExpertiseName,t.empleaveType=t.empDetailsData.leaveTypeNames,t.empstatus=t.empDetailsData.isActive,t.getManagementStructureNameandCodes(t.empDetailsData.managementStructureId)}),(function(e){t.isSpinnerVisible=!1;var n=e;t.errorMessageHandler(n)}))}},{key:"getAllAircraftManfacturer",value:function(){var e=this;this.itemser.getAircraft().subscribe((function(t){e.manufacturerData=t[0].map((function(e){return{value:e.aircraftTypeId,label:e.description}}))}))}},{key:"pageIndexChange",value:function(e){this.pageSize=e.rows}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"dateFilterForTable1",value:function(e,t){if(""!==e&&I(e).format("MMMM DD YYYY")){this.allEmployeeTrainingDocumentsList=this.allCustomerFinanceDocumentsListOriginal;var n=_toConsumableArray(this.allEmployeeTrainingDocumentsList.filter((function(n){return I(n.createdDate).format("MMMM DD YYYY")===I(e).format("MMMM DD YYYY")&&"createdDate"===t||I(n.updatedDate).format("MMMM DD YYYY")===I(e).format("MMMM DD YYYY")&&"updatedDate"===t?n:void 0})));this.allEmployeeTrainingDocumentsList=n}else this.allEmployeeTrainingDocumentsList=this.allCustomerFinanceDocumentsListOriginal}},{key:"dateFilterForTable",value:function(e,t){if(this.dateObject={},e=I(e).format("MM/DD/YYYY"),I(e).format("MM/DD/YY"),""!=e&&I(e,"MM/DD/YYYY",!0).isValid()){"createdDate"==t?this.dateObject={createdDate:e}:"updatedDate"==t?this.dateObject={updatedDate:e}:"startDate"==t&&(this.dateObject={startDate:e}),this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject);var n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(M.j)(this.lazyLoadEventDataInput.filters)});this.getList(n)}else{this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject),this.lazyLoadEventDataInput.filters&&this.lazyLoadEventDataInput.filters.createdDate&&delete this.lazyLoadEventDataInput.filters.createdDate,this.lazyLoadEventDataInput.filters&&this.lazyLoadEventDataInput.filters.updatedDate&&delete this.lazyLoadEventDataInput.filters.updatedDate,this.lazyLoadEventDataInput.filters&&this.lazyLoadEventDataInput.filters.startDate&&delete this.lazyLoadEventDataInput.filters.startDate,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject);var i=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(M.j)(this.lazyLoadEventDataInput.filters)});this.getList(i)}}},{key:"openHistoryDoc",value:function(e){var t=this;this.isSpinnerVisible=!0,this.commonService.GetAttachmentAudit(e.attachmentDetailId).subscribe((function(e){t.sourceViewforDocumentAudit=e,t.isSpinnerVisible=!1}),(function(e){t.isSpinnerVisible=!1;var n=e;t.errorMessageHandler(n)}))}},{key:"getColorCodeForHistoryDoc",value:function(e,t,n){var i=this.sourceViewforDocumentAudit,r=i.length;if(e>=0&&e<=r)return e+1===r||i[e+1][t]===n}},{key:"changeStatus",value:function(e){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();L.ctorParameters=function(){return[{type:v.c},{type:b.a},{type:d.a},{type:c.Router},{type:y.a},{type:N.DatePipe},{type:h.b},{type:D.a},{type:x.a},{type:C.a},{type:w.a},{type:k.a}]},i.b([Object(r.Input)()],L.prototype,"isEnablePOList",void 0),L=i.b([Object(r.Component)({selector:"app-employees-list",template:i.c(n("69Xx")).default,animations:[u.a],providers:[N.DatePipe],styles:[i.c(n("wdRQ")).default]})],L);var T=n("s6ns"),A=n("OIZN"),F=n("7kcP"),O=n("d8Wx"),V=function e(t,n,i,r,a,s,o,l,c,d,p){_classCallCheck(this,e),this.jobTitleId=n,this.description=i,this.masterCompanyId=r,this.createdBy=a,this.createdDate=s,this.updatedDate=o,this.updatedBy=l,this.masterCompany=t,this.isActive=c,this.memo=p,this.isDeleted=d},j=function e(t,n,i,r,a,s,o,l,c,d){_classCallCheck(this,e),this.jobTypeId=t,this.jobTypeName=n,this.jobTypeDescription=i,this.masterCompanyId=r,this.createdBy=a,this.createdDate=s,this.updatedDate=o,this.updatedBy=l,this.isActive=c,this.isDeleted=d},P=n("4BRc"),B=n("Pkv0"),U=n("E+Hz"),H=function e(t,n,i,r,a,s,o,l,c,d,p){_classCallCheck(this,e),this.employeeExpertiseId=n,this.description=i,this.masterCompanyId=r,this.createdBy=a,this.createdDate=s,this.updatedDate=o,this.updatedBy=l,this.masterCompany=t,this.isActive=c,this.memo=d,this.isWorksInShop=p},R=function e(t,n,i){_classCallCheck(this,e),this.employeeLeaveTypeId=t,this.description=n,this.isActive=i},z=n("QBlu"),_=n("IBlc"),q=n("ZtWP"),J=n("v6zA"),Y=function(){function e(t,n,i,a,o,l,c,d,p,u,h,y,v,f,b,S,E,I,D,M,x){var C=this;_classCallCheck(this,e),this.fb=t,this.Actroute=n,this.translationService=i,this.router=a,this.jobTypeService=o,this.jobTitleService=l,this.empservice=c,this.authService=d,this.modalService=p,this.activeModal=u,this._fb=h,this.route=y,this.alertService=v,this.employeeService=f,this.jobTitleService1=b,this.dialog=S,this.masterComapnyService=E,this.localStorage=I,this.companyService=D,this.currencyService=M,this.commonService=x,this.dateTime=new Date,this.phonePattern=Object(J.e)(),this.shiftValues=[],this.isEnableNext=!1,this.isSpinnerVisible=!1,this.leavemultiValues=[],this.allShiftValues=[],this.allleaveInfo=[],this.localleaveCollection=[],this.enableSaveBtn=!1,this.allMultipleLeaves=[],this.disableJobTitle=!0,this.disableJobType=!0,this.disableExpTitle=!0,this.display=!1,this.modelValue=!1,this.employeeIdTemp="Creating",this.displayedColumns=["employeeId","createdBy","updatedBy","updatedDate","createdDate"],this.allEmployeeinfo=[],this.allComapnies=[],this.sourceAction={},this.auditHisory=[],this.title="Create",this.localCollection=[],this.allManagemtninfo=[],this.alllegalEntityInfo=[],this.maincompanylist=[],this.isEditMode=!1,this.isDeleteMode=!1,this.desableJobTypeSave=!0,this.departmentList=[],this.bulist=[],this.divisionlist=[],this.Active="Active",this.allAircraftManufacturer=[],this.arrayExpertiselist=[],this.arrayAllStationlist=[],this.arraycurrencylist=[],this.arraymultileavelist=[],this.sourceEmployee={},this.updateMode=!1,this.showMsg=!1,this.nextOrPreviousTab="Next",this.supervisorId=0,this.allCurrencyData=[],this.radioItems=[],this.model={option:""},this.payTypeValid=!1,this.isWorksInShop=!1,this.empIsWorksInShop=!1,this.employeeDisplayView="Create Employee",this.empCreationForm=new s.FormGroup({firstname:new s.FormControl("firstName",s.Validators.minLength(1)),middleName:new s.FormControl("middleName",s.Validators.minLength(1)),lastName:new s.FormControl("lastName",s.Validators.minLength(1)),jobTitleId:new s.FormControl("jobTitleId",[s.Validators.required,s.Validators.minLength(1)]),employeeExpertiseId:new s.FormControl("employeeExpertiseId",s.Validators.minLength(1)),JobTypeId:new s.FormControl("JobTypeId",s.Validators.minLength(1)),companyId:new s.FormControl("companyId",[(s.Validators.required,s.Validators.minLength(1))]),startDate:new s.FormControl("startDate",s.Validators.minLength(1)),hourlyPay:new s.FormControl("hourlyPay",s.Validators.required)}),this.selectedLeaveValuesAssigned=[],this.managementStructure={companyId:0,buId:0,divisionId:0,departmentId:0},this.arrayjobtitlelist=[],this.disableMagmtStruct=!0,this.legalEntityList=[],this.currencyObject={},this.currentFirstName={},this.currentLastName={},this.currentMiddleName={},this.arrayContactlist=[],this.isEditContent=!1,this.tab=new r.EventEmitter,this.onDestroy$=new g.a,this.allWorkFlows=[],this.displayedColumns.push("action"),this.radioItems=["Hourly","Monthly"],this.empCreationForm=t.group({firstName:[null,s.Validators.compose([s.Validators.required,s.Validators.minLength(1),this.checkfirstNameExists("firstName")])],middleName:[null],lastName:[null,s.Validators.compose([s.Validators.required,s.Validators.minLength(1),this.checklasttNameExists("lastName")])],jobTitleId:[s.Validators.compose([s.Validators.required,s.Validators.minLength(1)])],employeeExpertiseId:[s.Validators.compose([s.Validators.required,s.Validators.minLength(1)])],JobTypeId:[0,s.Validators.compose([s.Validators.required,s.Validators.minLength(1)])],companyId:[0,s.Validators.compose([s.Validators.required,s.Validators.minLength(1)])],hourlyPay:[0,s.Validators.compose([s.Validators.required])],BusinessUnitId:[0],divisionId:[0],departmentId:[0],email:[null,s.Validators.compose([s.Validators.pattern("[a-zA-Z0-9.-]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{3,}")])]}),null!=this.employeeService.listCollection&&1==this.employeeService.isEditMode&&(this.employeeDisplayView="Edit Employee",this.loadingIndicator=!0);var w=this.localStorage.getDataObject(_.a.CURRENT_USER);this.userA=w.userName,new s.FormControl("1",s.Validators.pattern("[a-zA-Z ]*")),this.dataSource=new m.a,this.translationService.closeCmpny=!1,this.Actroute.queryParams.filter((function(e){return e.order})).subscribe((function(e){C.empId=e.order,C.firstName=e.firstname,C.lastName=e.lastname,null!=C.empId||C.empId}))}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;this.isSpinnerVisible=!0,this.employeeId=this.Actroute.snapshot.paramMap.get("id"),this.employeeId?(this.employeeService.employeeId=this.employeeId,this.isEditContent=!0,this.employeeService.isEditMode=!0,this.employeeService.isDisbaleTabs=!0,this.employeeService.currentUrl=this.employeeService.currentUrl="/employeesmodule/employeepages/app-employee-general-information-edit/"+this.employeeId):(this.employeeService.isEditMode=!1,this.employeeService.isDisbaleTabs=!1,this.employeeService.currentUrl="/employeesmodule/employeepages/app-employee-general-information"),this.employeeService.bredcrumbObj.next(this.employeeService.currentUrl),this.employeeService.ShowPtab=!0,this.employeeService.alertObj.next(this.employeeService.ShowPtab),this.activeIndex=0,this.employeeService.indexObj.next(this.activeIndex),this.shift(),this.loadData(),this.employeeid=this.employeeService.listCollection?this.employeeService.listCollection.employeeId:this.employeeId,this.employeeid&&null!=this.employeeid&&0!=this.employeeid?(this.isEnableNext=!0,setTimeout((function(){e.isSpinnerVisible=!0,e.loadEditData()}),1200)):(this.loadJobtitlesData(""),this.loademployeesexperties(""),this.getAllStationData(""),this.loadCurrencyData(""),this.multiLeavelist(""),this.sourceEmployee.jobTitleId=0,this.sourceEmployee.employeeExpertiseId=0,this.sourceEmployee.stationId=0,this.getManagementStructureDetails(this.currentUserManagementStructureId,this.loginempId),this.isSpinnerVisible=!1)}},{key:"getManagementStructureDetails",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;n=0==n?this.employeeId:n,i=this.isEditMode?i=e:0,this.commonService.getManagmentStrctureData(e,n,i).subscribe((function(e){if(e){var n=e;n[0]&&"Level1"==n[0].level?(t.maincompanylist=n[0].lstManagmentStrcture,t.managementStructure.companyId=n[0].managementStructureId,t.sourceEmployee.managementStructureId=n[0].managementStructureId,t.managementStructure.buId=0,t.managementStructure.divisionId=0,t.managementStructure.departmentId=0,t.bulist=[],t.divisionlist=[],t.departmentList=[]):(t.managementStructure.companyId=0,t.managementStructure.buId=0,t.managementStructure.divisionId=0,t.managementStructure.departmentId=0,t.maincompanylist=[],t.bulist=[],t.divisionlist=[],t.departmentList=[]),n[1]&&"Level2"==n[1].level?(t.bulist=n[1].lstManagmentStrcture,t.managementStructure.buId=n[1].managementStructureId,t.sourceEmployee.managementStructureId=n[1].managementStructureId,t.managementStructure.divisionId=0,t.managementStructure.departmentId=0,t.divisionlist=[],t.departmentList=[]):(n[1]&&"NEXT"==n[1].level&&(t.bulist=n[1].lstManagmentStrcture),t.managementStructure.buId=0,t.managementStructure.divisionId=0,t.managementStructure.departmentId=0,t.divisionlist=[],t.departmentList=[]),n[2]&&"Level3"==n[2].level?(t.divisionlist=n[2].lstManagmentStrcture,t.managementStructure.divisionId=n[2].managementStructureId,t.sourceEmployee.managementStructureId=n[2].managementStructureId,t.managementStructure.departmentId=0,t.departmentList=[]):(n[2]&&"NEXT"==n[2].level&&(t.divisionlist=n[2].lstManagmentStrcture),t.managementStructure.divisionId=0,t.managementStructure.departmentId=0,t.departmentList=[]),n[3]&&"Level4"==n[3].level?(t.departmentList=n[3].lstManagmentStrcture,t.managementStructure.departmentId=n[3].managementStructureId,t.sourceEmployee.managementStructureId=n[3].managementStructureId):(t.managementStructure.departmentId=0,n[3]&&"NEXT"==n[3].level&&(t.departmentList=n[3].lstManagmentStrcture)),t.isSpinnerVisible=!1}}),(function(e){t.isSpinnerVisible=!1;var n=e;t.errorMessageHandler(n)}))}},{key:"getBUList",value:function(e){var t=this;this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,this.bulist=[],this.divisionlist=[],this.departmentList=[],0!=e&&null!=e&&null!=e?(this.sourceEmployee.managementStructureId=e,this.managementStructure.companyId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.loginempId).subscribe((function(e){t.bulist=e}))):(this.sourceEmployee.managementStructureId=0,this.managementStructure.companyId=0)}},{key:"enableSave",value:function(){this.enableSaveBtn=!0}},{key:"getDivisionlist",value:function(e){var t=this;this.divisionlist=[],this.departmentList=[],this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e?(this.sourceEmployee.managementStructureId=e,this.managementStructure.buId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.loginempId).subscribe((function(e){t.divisionlist=e}))):this.sourceEmployee.managementStructureId=this.managementStructure.companyId}},{key:"getDepartmentlist",value:function(e){var t=this;this.managementStructure.departmentId=0,this.departmentList=[],0!=e&&null!=e&&null!=e?(this.managementStructure.divisionId=e,this.sourceEmployee.managementStructureId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.loginempId).subscribe((function(e){t.departmentList=e}))):(this.sourceEmployee.managementStructureId=this.managementStructure.buId,this.managementStructure.divisionId=0)}},{key:"getDepartmentId",value:function(e){0!=e&&null!=e&&null!=e?(this.sourceEmployee.managementStructureId=e,this.managementStructure.departmentId=e):(this.sourceEmployee.managementStructureId=this.managementStructure.divisionId,this.managementStructure.departmentId=0)}},{key:"getAllContactFirstNameSmartDropDown",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";0==this.arrayContactlist.length&&this.arrayContactlist.push(0),this.commonService.autoCompleteSmartDropDownEmployeeList("firstName",t,!0,this.arrayContactlist.join()).subscribe((function(t){for(var i=[],r=0;r<t.length;r++){for(var a=!1,s=0;s<i.length;s++)i[s].firstName.toLowerCase()==t[r].label.toLowerCase()&&(a=!0);a||i.push({firstName:t[r].label})}e.firstCollection=i,""!=n&&(e.sourceEmployee.firstName=Object(M.e)("firstName",n,e.firstCollection))}),(function(t){return e.saveFailedHelper(t)}))}},{key:"getAllContactMiddleNameSmartDropDown",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";0==this.arrayContactlist.length&&this.arrayContactlist.push(0),this.commonService.autoCompleteSmartDropDownEmployeeList("middlename",t,!0,this.arrayContactlist.join()).subscribe((function(t){for(var i=[],r=0;r<t.length;r++){for(var a=!1,s=0;s<i.length;s++)i[s].middleName.toLowerCase()==t[r].label.toLowerCase()&&(a=!0);a||i.push({middleName:t[r].label})}e.middleNameCollection=i,""!=n&&(e.sourceEmployee.middleName=Object(M.e)("middleName",n,e.middleNameCollection))}),(function(t){return e.saveFailedHelper(t)}))}},{key:"getAllContactLastNameSmartDropDown",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";0==this.arrayContactlist.length&&this.arrayContactlist.push(0),this.commonService.autoCompleteSmartDropDownEmployeeList("lastname",t,!0,this.arrayContactlist.join()).subscribe((function(t){for(var i=[],r=0;r<t.length;r++){for(var a=!1,s=0;s<i.length;s++)i[s].lastName.toLowerCase()==t[r].label.toLowerCase()&&(a=!0);a||i.push({lastName:t[r].label})}e.lastNameCollection=i,""!=n&&(e.sourceEmployee.lastName=Object(M.e)("lastName",n,e.lastNameCollection)),e.isSpinnerVisible=!1}),(function(t){return e.saveFailedHelper(t)}))}},{key:"getInactiveObjectOnEdit",value:function(e,t,n,i,r,a){var s=this;if(t){for(var o=0;o<n.length;o++)if(n[o][e]==t)return t;var l={};return this.commonService.smartDropDownGetObjectById(i,r,a,r,t).subscribe((function(e){l=e[0],"EmployeeExpertise"==i?s.allEmployeeExpertiseInfo=[].concat(_toConsumableArray(n),[l]):"JobTitle"==i&&(s.allJobTitlesinfo=[].concat(_toConsumableArray(n),[l]))}),(function(e){var t=e;s.errorMessageHandler(t)})),t}return null}},{key:"errorMessageHandler",value:function(e){this.isSpinnerVisible=!1;var t=e;if(t.error)this.alertService.showMessage("Validation Failed",t.error,h.d.error);else{var n="";if(t.message){if(t.error&&t.error.errors.length>0)for(var i=0;i<t.error.errors.length;i++)n=n+t.error.errors[i].message+"<br/>";this.alertService.showMessage(t.error.message,n,h.d.error)}else this.alertService.showMessage("Error",e.error,h.d.error)}}},{key:"getDetailsInactive",value:function(e){this.sourceEmployee.employeeExpertiseId=this.getInactiveObjectOnEdit("value",e.employeeExpertiseId,this.allEmployeeExpertiseInfo,"EmployeeExpertise","EmployeeExpertiseId","Description"),this.sourceEmployee.jobTitleId=this.getInactiveObjectOnEdit("value",e.jobTitleId,this.allJobTitlesinfo,"JobTitle","JobTitleId","Description")}},{key:"loadEditData",value:function(){var e=this;this.isSpinnerVisible=!0,this.employeeService.toGetEmployeeDetailsByEmpId(this.employeeid).subscribe((function(t){e.empEditdetailsdata=t,e.updateMode=!0,e.sourceEmployee=e.empEditdetailsdata,e.selectedLeaveValues=e.sourceEmployee.leaveTypeIds,e.getManagementStructureDetails(e.sourceEmployee.managementStructureId,e.loginempId,e.sourceEmployee.managementStructureId),e.sourceEmployee.employeeId&&(e.empId=e.sourceEmployee.employeeId),e.employeeIdTemp=e.sourceEmployee.employeeCode?e.sourceEmployee.employeeCode:"Creating",e.empCreationForm.controls.JobTypeId.setValue(e.sourceEmployee.jobTypeId),e.supervisorId=e.sourceEmployee.supervisorId,e.employeeId?e.sourceEmployee.startDate=new Date(e.sourceEmployee.startDate):e.sourceEmployee.startDate=new Date,e.sourceEmployee.dateOfBirth=e.sourceEmployee.dateOfBirth?new Date(e.sourceEmployee.dateOfBirth):"",e.local&&(e.employeeService.employeeCollection=e.local),e.sourceEmployee.isHourly,1==e.sourceEmployee.isHourly?(e.hourly=!0,e.yearly=!1,e.model={option:"Hourly"},e.sourceEmployee.hourlyPay=e.sourceEmployee.hourlyPay?Object(M.b)(e.sourceEmployee.hourlyPay,2):"",e.isMonthly=!1):(e.yearly=!0,e.hourly=!1,e.model={option:"Monthly"},e.sourceEmployee.hourlyPay=e.sourceEmployee.hourlyPay?Object(M.b)(e.sourceEmployee.hourlyPay,2):"",e.isMonthly=!0),1==e.sourceEmployee.inMultipleShifts?(e.sourceEmployee.multiShift="multiShift",e.showsingle=!1,e.showMultiple=!0):e.sourceEmployee.shiftIds&&e.sourceEmployee.shiftIds.length>0?(e.sourceEmployee.shiftId=e.sourceEmployee.shiftIds[0],e.sourceEmployee.singleShift="singleShift",e.showsingle=!0,e.showMultiple=!1):(e.showsingle=!1,e.showMultiple=!1,e.sourceEmployee.inMultipleShifts=null,e.sourceEmployee.multiShift="",e.sourceEmployee.singleShift=""),e.sourceEmployee.employeeCertifyingStaff=e.sourceEmployee.employeeCertifyingStaff,e.arrayContactlist.push(e.employeeId),e.getAllContactFirstNameSmartDropDown("",e.sourceEmployee.firstNameArray[0].firstName),e.getAllContactMiddleNameSmartDropDown("",e.sourceEmployee.middleNameArray[0].middleName),e.getAllContactLastNameSmartDropDown("",e.sourceEmployee.lastNameArray[0].lastName),e.sourceEmployee.currencyId=e.sourceEmployee.currency[0],e.loadingIndicator=!1,e.sourceEmployee.jobTitleId&&e.sourceEmployee.jobTitleId>0&&e.arrayjobtitlelist.push(e.sourceEmployee.jobTitleId),e.loadJobtitlesData(""),e.sourceEmployee.employeeExpertiseId&&e.sourceEmployee.employeeExpertiseId>0&&e.arrayExpertiselist.push(e.sourceEmployee.employeeExpertiseId),e.loademployeesexperties(""),e.sourceEmployee.stationId&&e.sourceEmployee.stationId>0&&e.arrayAllStationlist.push(e.sourceEmployee.stationId),e.getAllStationData(""),e.sourceEmployee.currencyId&&e.sourceEmployee.currencyId>0&&e.arraycurrencylist.push(e.sourceEmployee.currencyId),e.loadCurrencyData(""),e.sourceEmployee.leaveTypeIds&&e.arraymultileavelist.push(e.sourceEmployee.leaveTypeIds),e.multiLeavelist(""),e.isEnableNext=!0,e.isSpinnerVisible=!1}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"loadEditDataAfterUpdate",value:function(e){var t=this;this.isEnableNext=!0,this.empEditdetailsdata=e,this.updateMode=!0,this.sourceEmployee=this.empEditdetailsdata,this.selectedLeaveValues=this.sourceEmployee.leaveTypeIds,this.sourceEmployee.employeeId&&(this.empId=this.sourceEmployee.employeeId),this.employeeIdTemp=this.sourceEmployee.employeeCode?this.sourceEmployee.employeeCode:"Creating",this.empCreationForm.controls.JobTypeId.setValue(this.sourceEmployee.jobTypeId),this.supervisorId=this.sourceEmployee.supervisorId,this.employeeId?this.sourceEmployee.startDate=new Date(this.sourceEmployee.startDate):this.sourceEmployee.startDate=new Date,this.sourceEmployee.dateOfBirth=this.sourceEmployee.dateOfBirth?new Date(this.sourceEmployee.dateOfBirth):"",this.local&&(this.employeeService.employeeCollection=this.local),this.sourceEmployee.isHourly,1==this.sourceEmployee.isHourly?(this.hourly=!0,this.yearly=!1,this.model={option:"Hourly"},this.sourceEmployee.hourlyPay=this.sourceEmployee.hourlyPay?Object(M.b)(this.sourceEmployee.hourlyPay,2):"",this.isMonthly=!1):(this.yearly=!0,this.hourly=!1,this.model={option:"Monthly"},this.sourceEmployee.hourlyPay=this.sourceEmployee.hourlyPay?Object(M.b)(this.sourceEmployee.hourlyPay,2):"",this.isMonthly=!0),1==this.sourceEmployee.inMultipleShifts?(this.sourceEmployee.multiShift="multiShift",this.showsingle=!1,this.showMultiple=!0):this.sourceEmployee.shiftIds&&this.sourceEmployee.shiftIds.length>0?(this.sourceEmployee.shiftId=this.sourceEmployee.shiftIds[0],this.sourceEmployee.singleShift="singleShift",this.showsingle=!0,this.showMultiple=!1):(this.showsingle=!1,this.showMultiple=!1,this.sourceEmployee.inMultipleShifts=null,this.sourceEmployee.multiShift="",this.sourceEmployee.singleShift=""),this.arrayContactlist.push(this.employeeId),this.sourceEmployee.employeeCertifyingStaff=this.sourceEmployee.employeeCertifyingStaff,this.getAllContactFirstNameSmartDropDown("",this.sourceEmployee.firstNameArray[0].firstName),this.getAllContactMiddleNameSmartDropDown("",this.sourceEmployee.middleNameArray[0].middleName),this.getAllContactLastNameSmartDropDown("",this.sourceEmployee.lastNameArray[0].lastName),this.sourceEmployee.currencyId=this.sourceEmployee.currency[0],this.loadingIndicator=!1,setTimeout((function(){t.getDetailsInactive(e)}),1200),this.isSpinnerVisible=!1}},{key:"loadCurrencyData",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";0==this.arraycurrencylist.length&&this.arraycurrencylist.push(0),this.commonService.autoSuggestionSmartDropDownList("Currency","CurrencyId","Code",t,!0,2e4,this.arraycurrencylist.join()).subscribe((function(t){e.allCurrencyData=t.map((function(e){return{currencyId:e.value,code:e.label}}))}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"filterCurrencyList",value:function(e){if(this.currencyList=this.allCurrencyData,void 0!==e.query&&null!==e.query){var t=_toConsumableArray(this.allCurrencyData.filter((function(t){return t.code.toLowerCase().includes(e.query.toLowerCase())})));this.currencyList=t}}},{key:"onSelectMethod",value:function(e){var t=new Date(Date.parse(e));this.sourceEmployee.dateOfBirth="".concat(t.getMonth()+1,"/").concat(t.getDate(),"/").concat(t.getFullYear())}},{key:"checkfirstName",value:function(e){return this.allEmployeeinfo.find((function(t){return t.firstName===e}))}},{key:"checklastName",value:function(e){return this.allEmployeeinfo.find((function(t){return t.lastName===e}))}},{key:"checkfirstNameExists",value:function(e){var t=this;return function(e){if(t.allEmployeeinfo)return null==t.checkfirstName(e.value)?null:{notSame:!0}}}},{key:"checklasttNameExists",value:function(e){var t=this;return function(e){if(t.allEmployeeinfo)return null==t.checklastName(e.value)?null:{notSame:!0}}}},{key:"getEmpInfo",value:function(e){this.sourceEmployee=e[0][0],this.empCreationForm.patchValue({employeeExpertiseId:e[0][0].employeeExpertiseId,JobTypeId:e[0][0].jobTypeId,jobTitleId:e[0][0].jobTitleId,startDate:new Date(e[0][0].startDate)}),this.sourceEmployee.startDate=new Date(e[0][0].startDate),this.sourceEmpFirst.firstName=e[0][0].firstName,this.sourceEmpLast.lastName=e[0][0].lastName}},{key:"onSubmit2",value:function(){var e=this;return this.isSpinnerVisible=!0,this.enableSaveBtn=!1,this.supervisorId,this.sourceEmployee.firstName=Object(M.a)("firstName",this.sourceEmployee.firstName),this.sourceEmployee.lastName=Object(M.a)("lastName",this.sourceEmployee.lastName),this.sourceEmployee.middleName=Object(M.a)("middleName",this.sourceEmployee.middleName),this.sourceEmployee.currencyId=this.sourceEmployee.currencyId?this.sourceEmployee.currencyId.currencyId:null,0==this.sourceEmployee.jobTitleId?(this.alertService.showMessage("Validation Failed","Job Title is require",h.d.error),void(this.isSpinnerVisible=!1)):0==this.sourceEmployee.employeeExpertiseId?(this.alertService.showMessage("Validation Failed","Employee Expertise is require",h.d.error),void(this.isSpinnerVisible=!1)):0==this.sourceEmployee.currencyId||null==this.sourceEmployee.currencyId?(this.alertService.showMessage("Validation Failed","Currency is require",h.d.error),void(this.isSpinnerVisible=!1)):(this.sourceEmployee.jobTitleId=this.sourceEmployee.jobTitleId,this.sourceEmployee.employeeExpertiseId=this.sourceEmployee.employeeExpertiseId,this.sourceEmployee.hourlyPay=this.sourceEmployee.hourlyPay?this.sourceEmployee.hourlyPay:null,this.sourceEmployee.startDate=this.sourceEmployee.startDate,this.sourceEmployee.SupervisorId=this.supervisorId,this.sourceEmployee.stationId=0==this.sourceEmployee.stationId?null:this.sourceEmployee.stationId,1==this.sourceEmployee.inMultipleShifts?this.sourceEmployee.shiftId="":(this.sourceEmployee.shiftId&&this.sourceEmployee.shiftId>0?(this.sourceEmployee.shiftIds=[],this.sourceEmployee.shiftIds.push(this.sourceEmployee.shiftId)):this.sourceEmployee.shiftIds=[],this.sourceEmployee.inMultipleShifts=!1),this.sourceEmployee.masterCompanyId=this.currentUserMasterCompanyId,this.sourceEmployee.createdBy=this.userA,this.sourceEmployee.updatedBy=this.userA,null==this.sourceEmployee.dateOfBirth&&(this.sourceEmployee.dateOfBirth=null),void(this.sourceEmployee.employeeId?(1==this.sourceEmployee.isHourly?(this.model={option:"Hourly"},this.sourceEmployee.isHourly=!0,this.sourceEmployee.hourlyPay=this.sourceEmployee.hourlyPay):(this.model={option:"Monthly"},this.sourceEmployee.isHourly=!1,this.sourceEmployee.hourlyPay=this.sourceEmployee.hourlyPay),this.employeeService.updateEmployee(this.sourceEmployee).subscribe((function(t){t&&(e.employeeService.listCollection=t[0],e.loadEditDataAfterUpdate(t[1]),e.employeeService.employeeStored=t[0],e.empUpdate(e.sourceEmployee,t[0]),e.isSpinnerVisible=!1)}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))):(this.sourceEmployee.isHourly=this.sourceEmployee.isHourly,this.sourceEmployee.HourlyPay=this.sourceEmployee.hourlyPay,this.employeeService.newAddEmployee(this.sourceEmployee).subscribe((function(t){t&&(e.employeeService.isEditMode=!0,e.employeeService.isDisbaleTabs=!0,e.employeeService.employeeId=t.employeeId,e.showTitle="Employee Added Sucessfully",e.alertService.showMessage("Success",e.showTitle,h.d.success),e.router.navigateByUrl("employeesmodule/employeepages/app-employee-general-information-edit/"+t.employeeId))}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)})))))}},{key:"removeEmployeeLevaes",value:function(){for(var e=0;e<this.sessionLeaveValues.length;e++){var t=this.sessionLeaveValues[e];-1!==this.selectedLeaveValues.indexOf(t)||this.leaveTypeValueRemoved(t)}}},{key:"leaveTypeValueRemoved",value:function(e){var t=this;this.sourceEmployee.employeeId&&this.employeeService.updateEmployee(this.sourceEmployee).subscribe((function(n){t.empUpdate(t.sourceEmployee,n),t.sourceEmployee.LeaveTypeId=e,t.sourceEmployee.EmployeeId=t.sourceEmployee.employeeId,t.employeeService.employeeLeavetypeRemove(t.sourceEmployee).subscribe((function(e){}),(function(e){return t.onDataLoadFailed(e)}))}))}},{key:"shiftTypeValueRemoved",value:function(e){var t=this;this.sourceEmployee.ShiftTypeId=e,this.sourceEmployee.EmployeeId=this.sourceEmployee.employeeId,this.employeeService.employeeshifttypeRemove(this.sourceEmployee).subscribe((function(e){}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"removeEmployeeShiftValues",value:function(){for(var e=0;e<this.sessionShiftValues.length;e++){var t=this.sessionShiftValues[e];this.selectedshiftValues.indexOf(t)}}},{key:"employeeShifttypeUpdate",value:function(e){for(var t=0;t<this.selectedshiftValues.length;t++){var n=this.selectedshiftValues[t];this.sessionShiftValues.indexOf(n),0!=n&&this.newShiftValuetobeAdded(n)}}},{key:"newShiftValuetobeAdded",value:function(e){var t=this;null!=e&&(this.sourceEmployee.ShiftTypeId=e,this.sourceEmployee.EmployeeId=this.sourceEmployee.employeeId,this.employeeService.employeeShifttypeAdd(this.sourceEmployee).subscribe((function(e){}),(function(e){return t.onDataLoadFailed(e)})))}},{key:"employeeLeavetypeUpdate",value:function(e){this.selectedLeaveValues,this.removeEmployeeLevaes();for(var t=0;t<this.selectedLeaveValues.length;t++){var n=this.selectedLeaveValues[t];-1!==this.sessionLeaveValues.indexOf(n)||this.newValuetobeAdded(n)}this.sessionLeaveValues,this.selectedLeaveValues}},{key:"newValuetobeAdded",value:function(e){var t=this;this.sourceEmployee.LeaveTypeId=e,this.sourceEmployee.EmployeeId=this.sourceEmployee.employeeId,this.employeeService.employeeLeavetypeAdd(this.sourceEmployee).subscribe((function(e){}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"employeeShifttypeAdd",value:function(e){for(var t=this,n=0;n<this.selectedshiftValues.length;n++){var i=this.selectedshiftValues[n];null!=i&&""!=i&&(this.sourceEmployee.ShiftTypeId=i,this.sourceEmployee.EmployeeId=e,this.employeeService.employeeShifttypeAdd(this.sourceEmployee).subscribe((function(e){}),(function(e){return t.onDataLoadFailed(e)})))}}},{key:"employeeLeavetypeAdd",value:function(e){var t=this;this.selectedLeaveValues=this.selectedLeaveValues.filter((function(e,t,n){return t===n.indexOf(e)})),this.selectedLeaveValues;for(var n=0;n<this.selectedLeaveValues.length;n++){var i=this.selectedLeaveValues[n];this.sourceEmployee.LeaveTypeId=i,this.sourceEmployee.EmployeeId=e,this.employeeService.employeeLeavetypeAdd(this.sourceEmployee).subscribe((function(e){}),(function(e){return t.onDataLoadFailed(e)}))}}},{key:"empUpdate",value:function(e,t){this.showMsg=!0,this.empId=t.employeeId?t.employeeId:e.employeeId,this.firstName=t.firstName,this.lastName=t.lastName,this.showTitle="Employee Updated Sucessfully",this.alertService.showMessage("Success",this.showTitle,h.d.success),this.sourceEmpFirst=null}},{key:"empAdd",value:function(e,t){this.showMsg=!0,t.employeeId?(this.employeeService.listCollection=t,this.empId=t.employeeId,this.firstName=t.firstName,this.lastName=t.lastName,this.showTitle="Employee Added Sucessfully",this.alertService.showMessage("Success",this.showTitle,h.d.success),this.sourceEmpFirst=null):(this.showTitle="Some thing went wrong please try again later",this.alertService.showMessage("Failure",this.showTitle,h.d.success))}},{key:"singleClick",value:function(e){"single"==e&&(this.selectedshiftValues=[],this.showsingle=!0,this.showMultiple=!1,this.sourceEmployee.inMultipleShifts=!1),"multiple"==e&&(this.selectedshiftValues=[],this.showMultiple=!0,this.showsingle=!1,this.sourceEmployee.inMultipleShifts=!0)}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(){var e=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.employeeService.getEmployeeNamesList().subscribe((function(t){return e.onDataLoadSuccessful(t[0])}),(function(t){return e.onDataLoadFailed(t)})),this.selectedColumns=this.cols}},{key:"loadMasterCompanies",value:function(){var e=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(t){return e.onDataMasterCompaniesLoadSuccessful(t[0])}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"shift",value:function(){var e=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.commonService.autoSuggestionSmartDropDownList("shift","ShiftId","Description","",!0,1e4,"0").subscribe((function(t){e.shiftValues=t}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}},{key:"EmployeeTrainingType",value:function(){var e=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.employeeService.getEmployeeTrainingType().subscribe((function(t){return e.onDataLoadSuccessful(t[0])}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"EmployeeLeaveType",value:function(){var e=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.employeeService.getEmployeeLeaveType().subscribe((function(t){return e.onLeavedata(t[0])}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"multiLeavelist",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";0==this.arraymultileavelist.length&&this.arraymultileavelist.push(0),this.commonService.autoSuggestionSmartDropDownList("EmployeeLeaveType","employeeLeaveTypeId","leaveType",t,!0,2e4,this.arraymultileavelist.join()).subscribe((function(t){e.leavemultiValues=t,e.leavemultiValues=e.leavemultiValues.reduce((function(e,t){return e.some((function(e){return e.label===t.label}))||e.push(t),e}),[])}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"applyFilter",value:function(e){this.dataSource.filter=e}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onDataLoadSuccessful",value:function(e){this.alertService.stopLoadingMessage(),this.dataSource.data=e,this.allEmployeeinfo=e,this.loadingIndicator=!1}},{key:"onCountryloadsuccessfull",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.allCountries=e}},{key:"onshiftData",value:function(e){if(this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.allShiftdetails=e,this.allShiftdetails.length>0){this.shiftValues=[];for(var t=0;t<this.allShiftdetails.length;t++)this.shiftValues.push({value:this.allShiftdetails[t].shiftId,label:this.allShiftdetails[t].description})}}},{key:"onLeavedata",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.allLeaves=e}},{key:"onmultiLeavedata",value:function(e){if(this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.allLeaveDetails=e,this.allLeaveDetails.length>0)for(var t=0;t<this.allLeaveDetails.length;t++)this.leavemultiValues.push({value:this.allLeaveDetails[t].employeeLeaveTypeId,label:this.allLeaveDetails[t].leaveType});this.leavemultiValues=this.leavemultiValues.reduce((function(e,t){return e.some((function(e){return e.label===t.label}))||e.push(t),e}),[])}},{key:"getUnique",value:function(e){var t=[];for(var n in e)-1===t.indexOf(e[n])&&t.push(e[n]);return t}},{key:"patternMobilevalidationWithSpl",value:function(e){var t=String.fromCharCode(e.charCode);8==e.keyCode||/[0-9\+\-()\ ]/.test(t)||e.preventDefault()}},{key:"loadJobtitlesData",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";0==this.arrayjobtitlelist.length&&this.arrayjobtitlelist.push(0),this.commonService.autoSuggestionSmartDropDownList("JobTitle","JobTitleId","Description",t,!0,2e4,this.arrayjobtitlelist.join()).subscribe((function(t){e.allJobTitlesinfo=t}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}},{key:"loadjobtypesData",value:function(){var e=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.jobTypeService.getAllJobTypeList().subscribe((function(t){return e.onJobtypeDataLoadSuccessful(t[0])}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"onJobtypeDataLoadSuccessful",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allJobTypesinfo=e}},{key:"onJobtitlesDataLoadSuccessful",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.allJobTitlesinfo=e}},{key:"filterJobs",value:function(e){this.localCollection=[];for(var t=0;t<this.allJobTypesinfo.length;t++){var n=this.allJobTypesinfo[t].jobTypeName;0==n.toLowerCase().indexOf(e.query.toLowerCase())&&this.localCollection.push(n)}}},{key:"filterEMpExpertise",value:function(e){this.localCollection=[];for(var t=0;t<this.allEmployeeExpertiseInfo.length;t++){var n=this.allEmployeeExpertiseInfo[t].description;0==n.toLowerCase().indexOf(e.query.toLowerCase())&&this.localCollection.push(n)}}},{key:"filterJObTitles",value:function(e){this.localCollection=[];for(var t=0;t<this.allJobTitlesinfo.length;t++){var n=this.allJobTitlesinfo[t].description;0==n.toLowerCase().indexOf(e.query.toLowerCase())&&this.localCollection.push(n)}}},{key:"filterLeaves",value:function(e){this.localleaveCollection=[];for(var t=0;t<this.allLeaves.length;t++){var n=this.allLeaves[t].description;0==n.toLowerCase().indexOf(e.query.toLowerCase())&&this.localleaveCollection.push(n)}}},{key:"loademployeesexperties",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";0==this.arrayExpertiselist.length&&this.arrayExpertiselist.push(0),this.commonService.autoSuggestionSmartDropDownList("EmployeeExpertise","EmployeeExpertiseId","Description",t,!0,2e4,this.arrayExpertiselist.join()).subscribe((function(t){e.allEmployeeExpertiseInfo=t}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}},{key:"onEmpDataLoadSuccessful",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.allEmployeeExpertiseInfo=e}},{key:"filterEmployeeNames",value:function(e){this.localCollection=[];for(var t=0;t<this.allEmployeeExpertiseInfo.length;t++){var n=this.allEmployeeExpertiseInfo[t].description;0==n.toLowerCase().indexOf(e.query.toLowerCase())&&this.localCollection.push(n)}}},{key:"onHistoryLoadSuccessful",value:function(e,t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=e,this.modal=this.modalService.open(t,{size:"lg"}),this.modal.result.then((function(){}),(function(){}))}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=e}},{key:"onDataLoadFailed",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"handleChange",value:function(e,t){var n=this;0==t.checked?(this.sourceAction=e,this.sourceAction.updatedBy=this.userName,this.Active="In Active",this.sourceAction.isActive,this.employeeService.updateEmployee(this.sourceAction).subscribe((function(e){return n.saveCompleted(n.sourceAction)}),(function(e){return n.saveFailedHelper(e)}))):(this.sourceAction=e,this.sourceAction.updatedBy=this.userName,this.Active="Active",this.sourceAction.isActive,this.employeeService.updateEmployee(this.sourceAction).subscribe((function(e){return n.saveCompleted(n.sourceAction)}),(function(e){return n.saveFailedHelper(e)})))}},{key:"open",value:function(e){this.isEditMode=!1,this.isDeleteMode=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction.isActive=!0,this.employeeName="",this.modal=this.modalService.open(e,{size:"lg"}),this.modal.result.then((function(){}),(function(){}))}},{key:"openDelete",value:function(e,t){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceAction=t,this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"openjobtype",value:function(e){this.isEditMode=!1,this.isDeleteMode=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=new j,this.sourceAction.isActive=!0,this.jobName="",this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){}),(function(){}))}},{key:"openjobtitle",value:function(e){this.isEditMode=!1,this.isDeleteMode=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=new V,this.sourceAction.isActive=!0,this.jobName="",this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){}),(function(){}))}},{key:"openemployeeExpertise",value:function(e){this.isEditMode=!1,this.isDeleteMode=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=new H,this.sourceAction.isActive=!0,this.employeeName="",this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){}))}},{key:"openLeaveType",value:function(e){this.isEditMode=!1,this.isDeleteMode=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=new R,this.sourceAction.isActive=!0,this.description="",this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){}))}},{key:"openEdit",value:function(e,t){this.isEditMode=!0,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=t,this.employeeName=this.sourceAction.employeeName,this.loadMasterCompanies(),this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"openHelpText",value:function(e){this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"openHist",value:function(e,t){var n=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.sourceAction=t,this.employeeService.historyEmployee(this.sourceAction.employeeId).subscribe((function(t){return n.onHistoryLoadSuccessful(t[0],e)}),(function(e){return n.saveFailedHelper(e)}))}},{key:"editItemAndCloseModel",value:function(){var e=this;this.sourceEmployee.firstName&&this.sourceEmployee.middleName&&this.sourceEmployee.employeeIdAsPerPayroll&&this.sourceEmployee.stationId&&this.sourceEmployee.workPhone&&this.sourceEmployee.employeeCertifyingStaff&&this.sourceEmployee.mobilePhone||(this.display=!0,this.modelValue=!0),this.sourceEmployee.firstName&&this.sourceEmployee.middleName&&this.sourceEmployee.employeeIdAsPerPayroll&&this.sourceEmployee.stationId&&this.sourceEmployee.workPhone&&this.sourceEmployee.employeeCertifyingStaff&&this.sourceEmployee.mobilePhone&&(this.sourceEmployee.employeeId?(null!=this.selectedshiftValues&&(this.sourceEmployee.ShiftId=this.selectedshiftValues.toString().split(",")),null!=this.selectedLeaveValues&&(this.sourceEmployee.employeeLeaveTypeId=this.selectedLeaveValues.toString().split(",")),this.sourceEmployee.singleShift&&(this.sourceEmployee.inMultipleShifts=!1),this.sourceEmployee.multiShift&&(this.sourceEmployee.inMultipleShifts=!0),this.sourceEmployee.employeeShift&&delete this.sourceEmployee.employeeShift,this.sourceEmployee.updatedBy=this.userName,this.sourceEmployee.employeeName=this.employeeName,this.sourceEmployee.masterCompanyId=this.currentUserMasterCompanyId,this.employeeService.updateEmployeeDetails(this.sourceEmployee).subscribe((function(t){return e.saveCompleted(e.sourceEmployee)}),(function(t){return e.saveFailedHelper(t)})),this.activeIndex=0,this.employeeService.indexObj.next(this.activeIndex)):(this.sourceEmployee.createdBy=this.userName,this.sourceEmployee.updatedBy=this.userName,this.sourceEmployee.masterCompanyId=this.currentUserMasterCompanyId,this.sourceEmployee.employeeName=this.employeeName,this.sourceEmployee.isActive=!0,this.sourceEmployee.singleShift&&(this.sourceEmployee.inMultipleShifts=!1),this.sourceEmployee.multiShift&&(this.sourceEmployee.inMultipleShifts=!0),this.employeeService.newAddEmployee(this.sourceEmployee).subscribe((function(t){e.sourceEmployee.updatedBy=e.userName,e.localCollection=t,e.employeeService.generalCollection=e.localCollection,e.activeIndex=0})),null!=this.selectedshiftValues&&(this.sourceEmployee.ShiftId=this.selectedshiftValues.toString().split(",")),null!=this.selectedLeaveValues&&(this.sourceEmployee.employeeLeaveTypeId=this.selectedLeaveValues.toString().split(",")))),this.multiLeavelist("")}},{key:"saveJobTitle",value:function(){var e=this;this.sourceAction.createdBy=this.userA,this.sourceAction.updatedBy=this.userA,this.sourceAction.description=this.jobName,this.sourceAction.masterCompanyId=this.currentUserMasterCompanyId,this.sourceAction.description=this.jobName,this.jobTitleService.newJobTitle(this.sourceAction).subscribe((function(t){e.loadJobtitlesData(""),e.showTitle="job Title Added Sucessfully",e.alertService.showMessage("Success",e.showTitle,h.d.success)}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"saveJobType",value:function(){var e=this;this.jobTypeName?(this.sourceAction.createdBy=this.userA,this.sourceAction.updatedBy=this.userA,this.sourceAction.jobTypeName=this.jobTypeName,this.sourceAction.jobTypeDescription=this.jobTypeDescription,this.sourceAction.masterCompanyId=this.sourceAction.description=this.jobName,this.jobTypeService.newJobType(this.sourceAction).subscribe((function(t){e.loadJobtitlesData(""),e.showTitle="job Type Added Sucessfully",e.alertService.showMessage("Success",e.showTitle,h.d.success)}))):(this.showTitle="Job Title Required",this.alertService.showMessage("Failure",this.showTitle,h.d.error))}},{key:"editItemJobCloseModel",value:function(){var e=this;this.isSaving=!0,0==this.isEditMode?(this.sourceAction.createdBy=this.userName,this.sourceAction.updatedBy=this.userName,this.sourceAction.description=this.jobName,this.sourceAction.masterCompanyId=this.currentUserMasterCompanyId,this.sourceAction.jobTitleId=this.jobName,this.jobTitleService.newJobTitle(this.sourceAction).subscribe((function(t){e.loadJobtitlesData("")}))):(this.sourceAction.updatedBy=this.userName,this.sourceAction.description=this.jobName,this.sourceAction.masterCompanyId=this.currentUserMasterCompanyId,this.jobTitleService.updateAction(this.sourceAction).subscribe((function(t){return e.saveCompleted(e.sourceAction)}),(function(t){return e.saveFailedHelper(t)})))}},{key:"editItemLeaveCloseModel",value:function(){var e=this;this.isSaving=!0,""!=this.leaveType.toLowerCase().trim()?(0==this.isEditMode?(this.sourceAction.createdBy=this.userName,this.sourceAction.updatedBy=this.userName,this.sourceAction.leaveType=this.leaveType,this.sourceAction.description=this.descriptiontype,this.sourceAction.memo=this.memo,this.sourceAction.masterCompanyId=this.currentUserMasterCompanyId,this.employeeService.newActionforLeave(this.sourceAction).subscribe((function(t){e.saveCompleted(e.sourceAction),e.sourceEmployee.employeeLeaveTypeId=t.employeeLeaveTypeId,e.multiLeavelist("")}))):(this.sourceAction.updatedBy=this.userName,this.sourceAction.description=this.description,this.sourceAction.masterCompanyId=this.currentUserMasterCompanyId,this.employeeService.newActionforLeave(this.sourceAction).subscribe((function(t){e.saveCompleted(e.sourceAction),e.sourceEmployee.employeeLeaveTypeId=t.employeeLeaveTypeId,e.multiLeavelist("")}))),this.modal.close()):this.alertService.showMessage("Empty","Cannot Submit Empty",h.d.warn)}},{key:"saveEmpExpertise",value:function(){var e=this;this.sourceAction.createdBy=this.userName,this.sourceAction.updatedBy=this.userName,this.sourceAction.description=this.employeeName,this.sourceAction.masterCompanyId=this.currentUserMasterCompanyId,this.sourceAction.isWorksInShop=this.isWorksInShop,this.empservice.newAction(this.sourceAction).subscribe((function(t){e.showTitle="Employee Expertise Added Sucessfully",e.alertService.showMessage("Success",e.showTitle,h.d.success),e.loademployeesexperties("")}))}},{key:"editItemExpertiesCloseModel",value:function(){var e=this;this.isSaving=!0,0==this.isEditMode?(this.sourceAction.createdBy=this.userName,this.sourceAction.updatedBy=this.userName,this.sourceAction.description=this.employeeName,this.sourceAction.masterCompanyId=this.currentUserMasterCompanyId,this.empservice.newAction(this.sourceAction).subscribe((function(t){e.loademployeesexperties("")}))):(this.sourceAction.updatedBy=this.userName,this.sourceAction.description=this.employeeName,this.sourceAction.masterCompanyId=this.currentUserMasterCompanyId,this.jobTitleService.updateAction(this.sourceAction).subscribe((function(t){return e.saveCompleted(e.sourceAction)}),(function(t){return e.saveFailedHelper(t)})))}},{key:"filterfirstName",value:function(e){void 0!==e.query&&null!==e.query&&this.getAllContactFirstNameSmartDropDown(e.query)}},{key:"firstnameeventHandler",value:function(e){if(""!=e.firstName&&(e.firstName,this.firstCollection))for(var t in this.firstCollection)this.firstCollection[t].firstName==e.firstName&&(this.firstNameShow=!0,this.sourceEmployee.firstName="")}},{key:"firstNameSel",value:function(e){if(""!=e.firstName&&(e.firstName,this.firstCollection))for(var t in this.firstCollection)this.firstCollection[t].firstName==e.firstName&&(this.firstNameShow=!0,this.sourceEmployee.firstName="")}},{key:"filterlastName",value:function(e){void 0!==e.query&&null!==e.query&&this.getAllContactLastNameSmartDropDown(e.query)}},{key:"filtermiddleName",value:function(e){void 0!==e.query&&null!==e.query&&this.getAllContactMiddleNameSmartDropDown(e.query)}},{key:"filterempIdName",value:function(e){this.empIdCollection=[];for(var t=0;t<this.allEmployeeinfo.length;t++){var n=this.allEmployeeinfo[t].employeeId;n&&0==n.toLowerCase().indexOf(e.query.toLowerCase())&&this.empIdCollection.push(n)}}},{key:"deleteItemAndCloseModel",value:function(){var e=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.employeeService.deleteEmployee(this.sourceAction.employeeId).subscribe((function(t){return e.saveCompleted(e.sourceAction)}),(function(t){return e.saveFailedHelper(t)})),this.modal.close()}},{key:"filterEmployees",value:function(e){this.localCollection=[];for(var t=0;t<this.allEmployeeinfo.length;t++){var n=this.allEmployeeinfo[t].employeeName;0==n.toLowerCase().indexOf(e.query.toLowerCase())&&this.localCollection.push(n)}}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"saveCompleted",value:function(e){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",h.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",h.d.success),this.loadData()}},{key:"saveSuccessHelper",value:function(e){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",h.d.success),this.loadData()}},{key:"saveFailedHelper",value:function(e){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",h.d.error,e),this.alertService.showStickyMessage(e,null,h.d.error)}},{key:"getDismissReason",value:function(e){return e===v.a.ESC?"by pressing ESC":e===v.a.BACKDROP_CLICK?"by clicking on a backdrop":"with: "+e}},{key:"getBUList2",value:function(e){var t=e;if(0==this.updateMode){this.sourceEmployee.buisinessUnitId="",this.sourceEmployee.departmentId="",this.sourceEmployee.divisionId="",this.sourceEmployee.managementStructureId=t,this.departmentList=[],this.divisionlist=[],this.bulist=[];for(var n=0;n<this.allManagemtninfo.length;n++)this.allManagemtninfo[n].parentId==t&&this.bulist.push(this.allManagemtninfo[n])}else{this.bulist=[],this.departmentList=[],this.divisionlist=[];for(var i=0;i<this.allManagemtninfo.length;i++)this.allManagemtninfo[i].parentId==t&&this.bulist.push(this.allManagemtninfo[i]);this.empCreationForm.controls.BusinessUnitId.setValue(this.sourceEmployee.biumanagmentLegalEntityId)}}},{key:"getDepartmentlist2",value:function(e){if(0==this.updateMode){this.sourceEmployee.departmentId="",this.sourceEmployee.divisionId="",this.sourceEmployee.managementStructureId=e,this.departmentList=[],this.divisionlist=[];for(var t=0;t<this.allManagemtninfo.length;t++)this.allManagemtninfo[t].parentId==e&&this.departmentList.push(this.allManagemtninfo[t])}else{this.departmentList=[],this.divisionlist=[];for(var n=0;n<this.allManagemtninfo.length;n++)this.allManagemtninfo[n].parentId==e&&this.departmentList.push(this.allManagemtninfo[n]);this.empCreationForm.controls.divisionId.setValue(this.sourceEmployee.divmanagmentLegalEntityId)}}},{key:"divisionChange",value:function(e){this.sourceEmployee.managementStructureId=e}},{key:"AddLeavedata",value:function(e){for(var t=this,n=0;n<this.selectedLeaveValues.length;n++)e.employeeLeaveTypeId=this.selectedLeaveValues[n],this.employeeService.Addmultileaves(e).subscribe((function(e){t.localCollection=e}))}},{key:"AddShiftsdata",value:function(e){for(var t=this,n=0;n<this.selectedshiftValues.length;n++)e.employeeShiftId=this.selectedshiftValues[n],this.employeeService.AddShifts(e).subscribe((function(e){t.localCollection=e}))}},{key:"setManagementStrucureData",value:function(e){this.managementStructureData=[],this.checkMSParents(e.managementStructureId),this.sourceEmployee&&(this.getBUList2(this.sourceEmployee.compmanagmentLegalEntityId),this.getDepartmentlist2(this.sourceEmployee.biumanagmentLegalEntityId),this.getDivisionlist(this.sourceEmployee.managmentLegalEntityId))}},{key:"checkMSParents",value:function(e){this.managementStructureData.push(e);for(var t=0;t<this.allManagemtninfo.length;t++)if(this.allManagemtninfo[t].managementStructureId==e&&this.allManagemtninfo[t].parentId){this.checkMSParents(this.allManagemtninfo[t].parentId);break}}},{key:"onKeyUpFirstNames",value:function(e){if(""!=e.target.value){var t=e.target.value.toLowerCase();this.sourceEmployee.firstName=t,this.selectedFirstName&&(t==this.selectedFirstName.toLowerCase()?this.disableSaveFirstName=!0:this.disableSaveFirstName=!1)}}},{key:"handlePayType",value:function(e){this.sourceEmployee.hourlyPay="","Hourly"==e?(this.hourly=!0,this.yearly=!1,this.sourceEmployee.isHourly=!0):(this.yearly=!0,this.hourly=!1,this.sourceEmployee.isHourly=!1)}},{key:"onSelectFirstName",value:function(e){if(this.allEmployeeinfo)for(var t=0;t<this.allEmployeeinfo.length;t++)e==this.allEmployeeinfo[t].firstName&&(this.sourceEmployee.firstName=e,this.disableSaveFirstName=!0,this.selectedFirstName=e)}},{key:"onKeyUpMiddleNames",value:function(e){if(""!=e.target.value){var t=e.target.value.toLowerCase();this.disableSaveName&&(t==this.disableSaveName.toLowerCase()?this.disableSaveMiddleName=!0:this.disableSaveMiddleName=!1)}}},{key:"onSelectMiddleName",value:function(e){if(this.allEmployeeinfo)for(var t=0;t<this.allEmployeeinfo.length;t++)e==this.allEmployeeinfo[t].middleName&&(this.sourceEmployee.middleName=e,this.disableSaveMiddleName=!0,this.disableSaveName=e)}},{key:"onBlurLeaveName",value:function(e){if(""!=e.target.value){var t=e.target.value.toLowerCase();if(this.allLeaves)for(var n=0;n<this.allLeaves.length;n++)t==this.allLeaves[n].description&&(this.sourceEmployee.description=e,this.disableSaveLeaveName=!0,this.disableSaveName=e)}}},{key:"onSelectLeaveName",value:function(e){if(this.allLeaves)for(var t=0;t<this.allLeaves.length;t++)e==this.allLeaves[t].description&&(this.sourceEmployee.description=e,this.disableSaveLeaveName=!0,this.disableSaveName=e)}},{key:"onSelectJob",value:function(e){if(this.allJobTitlesinfo)for(var t=0;t<this.allJobTitlesinfo.length;t++)e==this.allJobTitlesinfo[t].description&&(this.sourceEmployee.jobName=e,this.disableJobTitle=!0,this.selectedActionName=e)}},{key:"onSelectEmpExpertise",value:function(e){if(this.allJobTitlesinfo)for(var t=0;t<this.allEmployeeExpertiseInfo.length;t++)e==this.allEmployeeExpertiseInfo[t].description&&(this.disableExpTitle=!0)}},{key:"onJobTypeKeyUP",value:function(){""!=this.jobTypeName?this.disableJobType=!1:this.disableJobType=!0}},{key:"onEmpExpertiseKeyUP",value:function(){""!=this.employeeName?this.disableExpTitle=!1:this.disableExpTitle=!0}},{key:"onKeyJob",value:function(e){if(""!=e.target.value){var t=e.target.value.toLowerCase();this.selectedActionName&&(t==this.selectedActionName.toLowerCase()?this.disableJobTitle=!0:this.disableJobTitle=!1)}}},{key:"onjobTitleKeyUP",value:function(){""!=this.jobName?this.disableJobTitle=!1:this.disableJobTitle=!0}},{key:"onKeyUpExp",value:function(e){if(""!=e.target.value){var t=e.target.value.toLowerCase();this.selectedActionName&&(t==this.selectedActionName.toLowerCase()?this.disableExpTitle=!0:this.disableExpTitle=!1)}}},{key:"onSelectExp",value:function(e){if(this.allEmployeeExpertiseInfo)for(var t=0;t<this.allEmployeeExpertiseInfo.length;t++)e==this.allEmployeeExpertiseInfo[t].description&&(this.sourceEmployee.employeeName=e,this.disableExpTitle=!0,this.selectedActionName=e)}},{key:"getAllStationData",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";0==this.arrayAllStationlist.length&&this.arrayAllStationlist.push(0),this.commonService.autoSuggestionSmartDropDownList("EmployeeStation","EmployeeStationId","StationName",t,!0,2e4,this.arrayAllStationlist.join()).subscribe((function(t){e.getAllAllStationInfodrpData=t}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}},{key:"onChangeemployeeExpertiseId",value:function(e){if(""!=e.target.value){var t=e.target.value;if(t=t.split(":"),this.allEmployeeExpertiseInfo)for(var n=0;n<this.allEmployeeExpertiseInfo.length;n++)t[1]==this.allEmployeeExpertiseInfo[n].employeeExpertiseId&&(this.empIsWorksInShop=this.allEmployeeExpertiseInfo[n].isWorksInShop)}}},{key:"onKeyUpLeaveNames",value:function(e){if(""!=e.target.value){var t=e.target.value.toLowerCase();this.disableSaveName&&(t==this.disableSaveName.toLowerCase()?this.disableSaveLeaveName=!0:this.disableSaveLeaveName=!1)}}},{key:"formateNumber",value:function(e){e.hourlyPay=e.hourlyPay?Object(M.b)(e.hourlyPay,2):""}},{key:"nextClick",value:function(e){if(1==this.enableSaveBtn){this.nextOrPreviousTab=e;var t=this.tabRedirectConfirmationModal;this.modal=this.modalService.open(t,{size:"sm"})}else this.router.navigate(["/employeesmodule/employeepages/app-employee-certification-edit/"+this.empId]),this.activeIndex=1,this.employeeService.indexObj.next(this.activeIndex)}},{key:"redirectToTab",value:function(){this.dismissModel(),this.onSubmit2(),1==this.employeeService.isEditMode?(this.router.navigate(["/employeesmodule/employeepages/app-employee-certification-edit/"+this.empId]),this.activeIndex=1,this.employeeService.indexObj.next(this.activeIndex)):this.gotoNext()}},{key:"redirectToTabWithoutSave",value:function(){this.dismissModel(),1==this.employeeService.isEditMode?(this.router.navigate(["/employeesmodule/employeepages/app-employee-certification-edit/"+this.empId]),this.activeIndex=1,this.employeeService.indexObj.next(this.activeIndex)):this.gotoNext()}},{key:"gotoNext",value:function(){this.activeIndex=1,this.employeeService.indexObj.next(this.activeIndex);var e={empId:this.empId,firstName:this.firstName,lastName:this.lastName};JSON.stringify(e),btoa(JSON.stringify(e)),this.route.navigate(["/employeesmodule/employeepages/app-employee-certification"],{queryParams:{order:this.empId,firstName:this.firstName,lastName:this.lastName},skipLocationChange:!0})}},{key:"currentUserManagementStructureId",get:function(){return this.authService.currentUser?this.authService.currentUser.managementStructureId:null}},{key:"currentUserMasterCompanyId",get:function(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:null}},{key:"loginempId",get:function(){return this.authService.currentUser?this.authService.currentUser.employeeId:0}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();Y.ctorParameters=function(){return[{type:s.FormBuilder},{type:c.ActivatedRoute},{type:b.a},{type:c.Router},{type:B.a},{type:P.a},{type:U.a},{type:y.a},{type:v.c},{type:v.b},{type:s.FormBuilder},{type:c.Router},{type:h.b},{type:d.a},{type:w.a},{type:T.b},{type:O.a},{type:z.a},{type:q.a},{type:C.a},{type:D.a}]},i.b([Object(r.ViewChild)("tabRedirectConfirmationModal",{static:!1})],Y.prototype,"tabRedirectConfirmationModal",void 0),i.b([Object(r.ViewChild)(A.a,{static:!1})],Y.prototype,"paginator",void 0),i.b([Object(r.ViewChild)(F.a,{static:!1})],Y.prototype,"sort",void 0),i.b([Object(r.ViewChild)("empform",{static:!1})],Y.prototype,"formdata",void 0),i.b([Object(r.Output)()],Y.prototype,"tab",void 0),Y=i.b([Object(r.Component)({selector:"app-employee-general-information",template:i.c(n("vx/s")).default,animations:[u.a],styles:[i.c(n("htDr")).default]})],Y);var $=n("Ldou"),W=function(){function e(t,n,i,r,a,s,o,l,c,d,p,u,h,y){_classCallCheck(this,e),this.route=t,this.translationService=n,this.datePipe=i,this.certificationser=r,this.router=a,this.authService=s,this.modalService=o,this.activeModal=l,this._fb=c,this.alertService=d,this.employeeService=p,this.dialog=u,this.masterComapnyService=h,this.commonService=y,this.isEnableNext=!1,this.isSpinnerVisible=!1,this.descriptioncolle=[],this.displayedColumns=["employeeId","createdBy","updatedBy","updatedDate","createdDate"],this.allEmployeeinfo=[],this.allComapnies=[],this.sourceAction={},this.auditHisory=[],this.title="Create",this.localCollection=[],this.nextbuttonEnable=!1,this.today=new Date,this.curcertificationDate=new Date,this.isEditMode=!1,this.isDeleteMode=!1,this.enableSaveBtn=!1,this.Active="Active",this.allWorkFlows=[],this.arrayCertificationlist=[],this.isEditContent=!1,this.sourceEmployee={},this.setExpireDate=new Date,this.displayedColumns.push("action"),this.dataSource=new m.a}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;this.loadDataforCertification(""),this.employeeId=this.route.snapshot.paramMap.get("id"),this.isSpinnerVisible=!0,this.employeeId?(this.employeeService.employeeId=this.employeeId,this.isEditContent=!0,this.employeeService.employeeId=this.employeeId,null!=this.empId&&null!=this.empId||this.employeeService.toGetEmployeeDetailsByEmpId(this.employeeId).subscribe((function(t){t&&(e.sourceEmployee=t,null==e.sourceEmployee.employeeCertificationTypeId&&(e.sourceEmployee.employeeCertificationTypeId=0),e.route.queryParams.filter((function(e){return e.order})).subscribe((function(t){e.empId=t.order,e.empId&&(e.nextbuttonEnable=!0),e.firstName=t.firstname,e.lastName=t.lastname}))),e.empId=e.sourceEmployee.employeeId,e.empcode=e.sourceEmployee.employeeCode,e.firstName=e.sourceEmployee.firstName,e.lastName=e.sourceEmployee.lastName,e.isEnableNext=!0,e.sourceEmployee.employeeId&&(e.nextbuttonEnable=!0),e.employeeService.bredcrumbObj.next(e.employeeService.currentUrl),e.employeeService.ShowPtab=!0,e.employeeService.alertObj.next(e.employeeService.ShowPtab),setTimeout((function(){e.isSpinnerVisible=!0,e.getwithemployeeLicensureId(),e.isSpinnerVisible=!1}),1200)})),this.employeeService.currentUrl=this.employeeService.currentUrl="/employeesmodule/employeepages/app-employee-certification-edit/"+this.employeeId):(this.loadDataforCertification(""),this.isSpinnerVisible=!1,this.employeeService.currentUrl="/employeesmodule/employeepages/app-employee-certification")}},{key:"ngAfterViewInit",value:function(){}},{key:"changeDateEv",value:function(e){this.curcertificationDate=e||new Date}},{key:"enableSave",value:function(){this.enableSaveBtn=!0}},{key:"loadCerertifcationByempId",value:function(){var e=this;this.isSpinnerVisible=!0,this.employeeService.getEmployeeCertifications(this.employeeId).subscribe((function(t){e.bindData(t[0]),e.isSpinnerVisible=!1}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}},{key:"errorMessageHandler",value:function(e){this.isSpinnerVisible=!1;var t=e;if(t.error)this.alertService.showMessage("Validation Failed",t.error,h.d.error);else{var n="";if(t.message){if(t.error&&t.error.errors.length>0)for(var i=0;i<t.error.errors.length;i++)n=n+t.error.errors[i].message+"<br/>";this.alertService.showMessage(t.error.message,n,h.d.error)}else this.alertService.showMessage("Error",e.error,h.d.error)}}},{key:"bindData",value:function(e){null==this.sourceEmployee.expirationDate?this.sourceEmployee.expirationDate="":this.sourceEmployee.expirationDate=this.datePipe.transform(e.t.expirationDate,"MM/dd/yyyy"),null==this.sourceEmployee.isExpirationDate?this.sourceEmployee.isExpirationDate=!1:this.sourceEmployee.isExpirationDate=e.t.isExpirationDate}},{key:"saveCertificateData",value:function(){var e=this;if(this.isSpinnerVisible=!0,null==this.sourceEmployee.isExpirationDate&&(this.sourceEmployee.isExpirationDate=!1),null==this.sourceEmployee.isCertificationInForce&&(this.sourceEmployee.isCertificationInForce=!1),this.isSaving=!0,this.sourceEmployee.expirationDate<this.setExpireDate?this.setExpireDate=new Date:this.setExpireDate=this.sourceEmployee.expirationDate,this.sourceEmployee.employeeCertificationId){this.sourceEmployee.updatedBy=this.userName,this.sourceEmployee.masterCompanyId=this.currentUserMasterCompanyId,this.sourceEmployee.expirationDateTemp=this.sourceEmployee.expirationDate,null!=this.sourceEmployee.certificationDate&&(this.sourceEmployee.certificationDate=new Date(this.sourceEmployee.certificationDate)),null!=this.sourceEmployee.expirationDate&&(this.sourceEmployee.expirationDate=new Date(this.sourceEmployee.expirationDate)),this.employeeService.updateCertificationDetails(this.sourceEmployee).subscribe((function(t){e.getwithemployeeLicensureId(),e.alertService.showMessage("Success","Employee Certification updated successfully.",h.d.success),e.employeeService.generalCollection=e.local,e.enableSaveBtn=!1,e.isSpinnerVisible=!1}));var t={empId:this.empId,firstName:this.firstName,lastName:this.lastName};JSON.stringify(t),btoa(JSON.stringify(t))}else this.sourceEmployee.createdBy=this.userName,this.sourceEmployee.updatedBy=this.userName,this.sourceEmployee.isActive=!0,this.sourceEmployee.masterCompanyId=this.currentUserMasterCompanyId,this.sourceEmployee.employeeId=this.empId,null!=this.sourceEmployee.certificationDate&&(this.sourceEmployee.certificationDate=new Date(this.sourceEmployee.certificationDate)),null!=this.sourceEmployee.expirationDate&&(this.sourceEmployee.expirationDate=new Date(this.sourceEmployee.expirationDate)),this.employeeService.newAddCertification(this.sourceEmployee).subscribe((function(t){e.getwithemployeeLicensureId(),e.isEnableNext=!0,e.isEditContent=!0,e.nextbuttonEnable=!0,e.alertService.showMessage("Success","Employee Certification Added Successfully.",h.d.success),t.employeeId&&(e.isEnableNext=!0),e.employeeService.generalCollection=e.local,e.enableSaveBtn=!1,e.isSpinnerVisible=!1}))}},{key:"getwithemployeeLicensureId",value:function(){var e=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.employeeService.getCertificationList(this.empId).subscribe((function(t){return e.onCertifywithEmpId(t[0])}),(function(t){return e.onDataLoadFailed(t)})),this.cols=[{field:"certificationNumber",header:"Certification"},{field:"employeeCertificationTypeId",header:"Certification Type"},{field:"certifyingInstitution",header:"Certification Institution"},{field:"certificationDate",header:"certification Date"},{field:"isCertificationInForce",header:"Certification In Force"},{field:"createdBy",header:"Created By"},{field:"updatedBy",header:"Updated By"},{field:"updatedDate",header:"Updated Date"},{field:"createdDate",header:"Created Date"}],this.selectedColumns=this.cols}},{key:"loadData",value:function(){var e=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.employeeService.getEmployeeList().subscribe((function(t){return e.onDataLoadSuccessful(t[0])}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"loadMasterCompanies",value:function(){var e=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(t){return e.onDataMasterCompaniesLoadSuccessful(t[0])}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"applyFilter",value:function(e){this.dataSource.filter=e}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onDataLoadSuccessful",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.allEmployeeinfo=e}},{key:"loadDataforCertification",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";this.alertService.startLoadingMessage(),this.loadingIndicator=!0,0==this.arrayCertificationlist.length&&this.arrayCertificationlist.push(0),this.commonService.autoSuggestionSmartDropDownList("EmployeeCertificationType","EmployeeCertificationTypeId","description",t,!0,2e4,this.arrayCertificationlist.join()).subscribe((function(t){e.alertService.stopLoadingMessage(),e.loadingIndicator=!1,e.allCertification=t}),(function(t){e.alertService.stopLoadingMessage(),e.loadingIndicator=!1,e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}},{key:"onDataLoadSuccessfulforCertification",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allCertification=e}},{key:"onCertifywithEmpId",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.data=e,this.data.length>0&&(this.sourceEmployee=this.data[0].t,null!=this.sourceEmployee.certificationDate&&(this.sourceEmployee.certificationDate=new Date(this.sourceEmployee.certificationDate)),null!=this.sourceEmployee.expirationDate&&(this.sourceEmployee.expirationDate=new Date(this.sourceEmployee.expirationDate)),this.sourceEmployee.employeeCertificationTypeId&&this.sourceEmployee.employeeCertificationTypeId>0&&this.arrayCertificationlist.push(this.sourceEmployee.employeeCertificationTypeId),this.loadDataforCertification(""))}},{key:"onHistoryLoadSuccessful",value:function(e,t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=e,this.modal=this.modalService.open(t,{size:"lg"}),this.modal.result.then((function(){}),(function(){}))}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=e}},{key:"onDataLoadFailed",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"handleChange",value:function(e,t){var n=this;0==t.checked?(this.sourceAction=e,this.sourceAction.updatedBy=this.userName,this.Active="In Active",this.sourceAction.isActive,this.employeeService.updateEmployee(this.sourceAction).subscribe((function(e){return n.saveCompleted(n.sourceAction)}),(function(e){return n.saveFailedHelper(e)}))):(this.sourceAction=e,this.sourceAction.updatedBy=this.userName,this.Active="Active",this.sourceAction.isActive,this.employeeService.updateEmployee(this.sourceAction).subscribe((function(e){return n.saveCompleted(n.sourceAction)}),(function(e){return n.saveFailedHelper(e)})))}},{key:"open",value:function(e){this.isEditMode=!1,this.isDeleteMode=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction.isActive=!0,this.employeeName="",this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"openDelete",value:function(e,t){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceAction=t,this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"openEdit",value:function(e,t){this.isEditMode=!0,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=t,this.employeeName=this.sourceAction.employeeName,this.loadMasterCompanies(),this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"openHelpText",value:function(e){this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"openHist",value:function(e,t){var n=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.sourceAction=t,this.employeeService.historyEmployee(this.sourceAction.employeeId).subscribe((function(t){return n.onHistoryLoadSuccessful(t[0],e)}),(function(e){return n.saveFailedHelper(e)}))}},{key:"editItemAndCloseModel",value:function(){var e=this;this.isSaving=!0,this.sourceEmployee.employeeCertificationId?(this.sourceEmployee.updatedBy=this.userName,this.sourceEmployee.masterCompanyId=this.currentUserMasterCompanyId,this.employeeService.updateCertificationDetails(this.sourceEmployee).subscribe((function(t){e.alertService.showMessage("Success","Employee Certification updated successfully.",h.d.success)})),this.activeIndex=1,this.employeeService.indexObj.next(this.activeIndex)):(this.sourceEmployee.createdBy=this.userName,this.sourceEmployee.updatedBy=this.userName,this.sourceEmployee.isActive=!0,this.sourceEmployee.masterCompanyId=this.currentUserMasterCompanyId,this.sourceEmployee.employeeId=this.local.employeeId,this.employeeService.newAddCertification(this.sourceEmployee).subscribe((function(t){e.alertService.showMessage("Employee Certification Added successfully."),e.localCollection=t})),this.activeIndex=1,this.employeeService.indexObj.next(this.activeIndex))}},{key:"deleteItemAndCloseModel",value:function(){var e=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.employeeService.deleteEmployee(this.sourceAction.employeeId).subscribe((function(t){return e.saveCompleted(e.sourceAction)}),(function(t){return e.saveFailedHelper(t)})),this.modal.close()}},{key:"filterEmployees",value:function(e){this.localCollection=[];for(var t=0;t<this.allEmployeeinfo.length;t++){var n=this.allEmployeeinfo[t].employeeName;0==n.toLowerCase().indexOf(e.query.toLowerCase())&&this.localCollection.push(n)}}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"saveCompleted",value:function(e){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",h.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",h.d.success),this.loadData()}},{key:"saveSuccessHelper",value:function(e){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",h.d.success),this.loadData()}},{key:"saveFailedHelper",value:function(e){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",h.d.error,e),this.alertService.showStickyMessage(e,null,h.d.error)}},{key:"getDismissReason",value:function(e){return e===v.a.ESC?"by pressing ESC":e===v.a.BACKDROP_CLICK?"by clicking on a backdrop":"with: "+e}},{key:"gotnextClick",value:function(){this.activeIndex=2,this.employeeService.indexObj.next(this.activeIndex),this.employeeId?this.router.navigateByUrl("/employeesmodule/employeepages/app-employee-training-edit/"+this.employeeId):this.router.navigate(["/employeesmodule/employeepages/app-employee-training"],{queryParams:{order:this.empId,firstName:this.firstName,lastName:this.lastName}})}},{key:"previousClick",value:function(){this.activeIndex=0,this.employeeService.indexObj.next(this.activeIndex),this.employeeId?this.router.navigateByUrl("employeesmodule/employeepages/app-employee-general-information-edit/"+this.employeeId):this.router.navigate(["/employeesmodule/employeepages/app-employee-general-information"],{queryParams:{order:this.empId,firstName:this.firstName,lastName:this.lastName}})}},{key:"certificationType",value:function(e){if(this.allCertification)for(var t=0;t<this.allCertification.length;t++)e==this.allCertification[t].description&&(this.disablesave=!0,this.selecteddescription=e)}},{key:"certificationHandlerHandler",value:function(e){if(""!=e.target.value){var t=e.target.value.toLowerCase();this.selecteddescription&&(t==this.selecteddescription.toLowerCase()?this.disablesave=!0:this.disablesave=!1)}}},{key:"filtercertificationType",value:function(e){this.certificationtypeCollection=[];for(var t=0;t<this.allCertification.length;t++){var n=this.allCertification[t].description;0==n.toLowerCase().indexOf(e.query.toLowerCase())&&(this.descriptioncolle.push([{employeeCertificationId:this.allCertification[t].employeeCertificationId,description:n}]),this.certificationtypeCollection.push(n))}}},{key:"saveCertification",value:function(){var e=this;this.isSaving=!0,0==this.isEditMode?(this.sourceEmployee.createdBy=this.userName,this.sourceEmployee.updatedBy=this.userName,this.sourceEmployee.description=this.description,this.sourceEmployee.masterCompanyId=this.currentUserMasterCompanyId,this.certificationser.newCertificationtype(this.sourceEmployee).subscribe((function(t){e.getwithemployeeLicensureId(),e.loadDataforCertification(""),e.isEnableNext=!0,e.nextbuttonEnable=!0,e.sourceEmployee.employeeCertificationId=t.employeeCertificationId}))):(this.sourceEmployee.updatedBy=this.userName,this.sourceEmployee.description=this.description,this.sourceEmployee.masterCompanyId=this.currentUserMasterCompanyId,this.certificationser.updateCertificationtype(this.sourceEmployee).subscribe((function(t){e.isEnableNext=!0,e.saveCompleted(e.sourceEmployee)}))),this.modal.close()}},{key:"openCertification",value:function(e){this.disablesave=!1,this.isEditMode=!1,this.isDeleteMode=!1,this.disablesave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.description="",this.sourceEmployee.isActive=!0,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){}),(function(){}))}},{key:"nextClick",value:function(e){if(this.nextOrPreviousTab=e,1==this.enableSaveBtn){var t=this.tabRedirectConfirmationModal2;this.modal=this.modalService.open(t,{size:"sm"})}else"Previous"==this.nextOrPreviousTab?this.previousClick():this.gotnextClick()}},{key:"redirectToTabWithoutSave",value:function(){this.dismissModel(),"Previous"==this.nextOrPreviousTab?this.previousClick():this.gotnextClick()}},{key:"redirectToTab",value:function(){this.saveCertificateData(),this.dismissModel(),"Previous"==this.nextOrPreviousTab?this.previousClick():this.gotnextClick()}},{key:"currentUserMasterCompanyId",get:function(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:null}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();W.ctorParameters=function(){return[{type:c.ActivatedRoute},{type:b.a},{type:N.DatePipe},{type:$.a},{type:c.Router},{type:y.a},{type:v.c},{type:v.b},{type:s.FormBuilder},{type:h.b},{type:d.a},{type:T.b},{type:O.a},{type:D.a}]},i.b([Object(r.ViewChild)("tabRedirectConfirmationModal2",{static:!1})],W.prototype,"tabRedirectConfirmationModal2",void 0),i.b([Object(r.ViewChild)("empform",{static:!1})],W.prototype,"formdata",void 0),i.b([Object(r.ViewChild)(A.a,{static:!1})],W.prototype,"paginator",void 0),i.b([Object(r.ViewChild)(F.a,{static:!1})],W.prototype,"sort",void 0),W=i.b([Object(r.Component)({selector:"app-employee-certification",template:i.c(n("fGjq")).default,animations:[u.a],providers:[N.DatePipe],styles:[i.c(n("JPD2")).default]})],W);var G=n("7+Ft"),K=n("3fSc"),X=function(){function e(t,n,i,r,a,s,o,l,c,d,p,u,h,y,v,f,g){_classCallCheck(this,e),this.route=t,this.aircraftModelService=n,this.itemser=i,this.translationService=r,this.unitService=a,this.authService=s,this.modalService=o,this.activeModal=l,this._fb=c,this.alertService=d,this.router=p,this.employeeService=u,this.dialog=h,this.masterComapnyService=y,this.localStorage=v,this.commonService=f,this.configurations=g,this.isSaving=!0,this.disableSaveMemo=!0,this.durationTypes=[{id:1,type:"Days"},{id:2,type:"Weeks"},{id:3,type:"Months"},{id:3,type:"Years"}],this.isEnableNext=!1,this.displayedColumns=["employeeId","createdBy","updatedBy","updatedDate","createdDate"],this.allEmployeeinfo=[],this.allComapnies=[],this.sourceAction={},this.auditHisory=[],this.isSpinnerVisible=!1,this.title="Create",this.localCollection=[],this.sourceEmployee={},this.allWorkFlows=[],this.nextbuttonEnable=!1,this.formData=new FormData,this.allEmployeeTrainingDocumentsList=[],this.isEditMode=!1,this.isDeleteMode=!1,this.Active="Active",this.isPopup=!1,this.disableFileAttachmentSubmit=!0,this.disableSave=!0,this.totalRecordNew=0,this.pageSizeNew=3,this.empModuleId=0,this.totalPagesNew=0,this.currentDeletedstatus=!1,this.pageSize=3,this.sourceViewforDocumentListColumns=[{field:"fileName",header:"File Name"}],this.customerDocumentsColumns=[{field:"docName",header:"Name"},{field:"docDescription",header:"Description"},{field:"docMemo",header:"Memo"},{field:"fileName",header:"File Name"},{field:"fileSize",header:"File Size"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"Created By"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"Updated By"}],this.selectedColumnsDoc=this.customerDocumentsColumns,this.sourceViewforDocumentList=[],this.sourceViewforDocument=[],this.sourceViewforDocumentAudit=[],this.isEditButton=!1,this.documentInformation={docName:"",docMemo:"",docDescription:"",attachmentDetailId:0},this.selectedFileAttachment=[],this.selectedFile=null,this.allDocumentListOriginal=[],this.isEditContent=!1,this.arrayAircraftManfacturerlist=[],this.arrayTrainingtypelist=[],this.arrayFrequencyTrainingInfolist=[],this.arrayaircraftmodelarraylist=[],this.setExpireDate=new Date,this.displayedColumns.push("action"),this.dataSource=new m.a,this.employeeService.generalCollection&&(this.local=this.employeeService.generalCollection);var b=this.localStorage.getDataObject(_.a.CURRENT_USER);this.userA=b.userName,this.translationService.closeCmpny=!1}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;this.isSpinnerVisible=!0,this.employeeId=this.route.snapshot.paramMap.get("id"),this.employeeId?(this.isEditContent=!0,this.employeeService.employeeId=this.employeeId,null!=this.empId&&null!=this.empId||this.employeeService.toGetEmployeeDetailsByEmpId(this.employeeId).subscribe((function(t){t&&(e.employeeService.employeeId=e.employeeId,e.sourceEmployee=t,e.empId=e.sourceEmployee.employeeId,e.empcode=e.sourceEmployee.employeeCode,e.firstName=e.sourceEmployee.firstName,e.lastName=e.sourceEmployee.lastName,e.sourceEmployee.aircraftManufacturerId=0,e.sourceEmployee.aircraftModelId=0,e.sourceEmployee.employeeTrainingTypeId=0,e.sourceEmployee.frequencyOfTrainingId=0,e.sourceEmployee.durationTypeId=0,e.isEnableNext=!0,e.sourceEmployee.employeeId&&(e.nextbuttonEnable=!0),setTimeout((function(){e.isSpinnerVisible=!0,e.loadData(),0==e.empModuleId||null==e.empModuleId||null==e.empModuleId?e.commonService.smartDropDownList("AttachmentModule","AttachmentModuleId","Name").subscribe((function(t){t&&(t.forEach((function(t){"EMPLOYEE"==t.label.toUpperCase()&&(e.empModuleId=t.value)})),e.toGetDocumentsListNew(e.employeeId,e.empModuleId))})):e.empModuleId>0&&e.toGetDocumentsListNew(e.employeeId,e.empModuleId),e.isSpinnerVisible=!1}),1200))}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)})),this.employeeService.currentUrl=this.employeeService.currentUrl="/employeesmodule/employeepages/app-employee-training-edit/"+this.employeeId):(this.isSpinnerVisible=!1,this.employeeService.currentUrl="/employeesmodule/employeepages/app-employee-training"),this.employeeService.bredcrumbObj.next(this.employeeService.currentUrl),this.employeeService.ShowPtab=!0,this.employeeService.alertObj.next(this.employeeService.ShowPtab),this.getAllAircraftManfacturer(""),this.getAllFrequencyTrainingData(""),this.loadTariningTypes("")}},{key:"ngAfterViewInit",value:function(){var e=this;this.route.queryParams.filter((function(e){return e.order})).subscribe((function(t){e.empId=t.order,e.empId=t.order,e.empId&&(e.nextbuttonEnable=!0),e.firstName=t.firstname,e.lastName=t.lastname})),this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(){var e=this;this.empId=this.employeeId,this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.employeeService.getTrainingList(this.empId).subscribe((function(t){return e.onDataLoadSuccessful(t[0])}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"loadTariningTypes",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";this.alertService.stopLoadingMessage(),this.loadingIndicator=!0,0==this.arrayTrainingtypelist.length&&this.arrayTrainingtypelist.push(0),this.commonService.autoSuggestionSmartDropDownList("EmployeeTrainingType","EmployeeTrainingTypeId","TrainingType",t,!0,2e4,this.arrayTrainingtypelist.join()).subscribe((function(t){e.dataSource.data=t,e.alltrainingTypes=t,e.alertService.stopLoadingMessage(),e.loadingIndicator=!1}),(function(t){e.alertService.stopLoadingMessage(),e.loadingIndicator=!1,e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}},{key:"parsedText",value:function(e){if(e)return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}},{key:"getDeleteListByStatus",value:function(e){this.currentDeletedstatus=!!e,this.toGetDocumentsListNew(this.empId,this.empModuleId)}},{key:"getAllAircraftManfacturer",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";0==this.arrayAircraftManfacturerlist.length&&this.arrayAircraftManfacturerlist.push(0),this.commonService.autoSuggestionSmartDropDownList("AircraftType","aircraftTypeId","description",t,!0,2e4,this.arrayAircraftManfacturerlist.join()).subscribe((function(t){e.manufacturerData=t}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}},{key:"onChangeManufacture",value:function(e,t){this.search_AircraftModelList=[],this.sourceEmployee.aircraftModelIds="",this.loadmodels(t)}},{key:"loadmodels",value:function(e){var t=this;0==this.arrayaircraftmodelarraylist.length&&this.arrayaircraftmodelarraylist.push(0),this.aircraftModelService.getAircraftModelListByManufactureId(e,this.arrayaircraftmodelarraylist.join()).subscribe((function(e){var n=e[0];n&&(t.search_AircraftModelList=n.map((function(e){return{label:e.modelName,value:e.aircraftModelId}})))}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"loadMasterCompanies",value:function(){var e=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(t){return e.onDataMasterCompaniesLoadSuccessful(t[0])}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"applyFilter",value:function(e){this.dataSource.filter=e}},{key:"changeDateEv",value:function(e){e&&e<this.setExpireDate?this.setExpireDate=new Date:this.setExpireDate=e}},{key:"onDataLoadSuccessful",value:function(e){if(this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.allEmployeeinfo=e,this.allEmployeeinfo.length>0){this.sourceEmployee=this.allEmployeeinfo[0].t,this.sourceEmployee.aircraftManufacturerId=null==this.sourceEmployee.aircraftManufacturerId?0:this.sourceEmployee.aircraftManufacturerId;for(var t=0;t<this.allEmployeeinfo.length;t++)this.sourceEmployee.aircraftModelIds=this.allEmployeeinfo[t].aircraftModelIds;this.sourceEmployee.durationTypeId=null==this.sourceEmployee.durationTypeId?0:this.sourceEmployee.durationTypeId,null!=this.sourceEmployee.scheduleDate&&(this.sourceEmployee.scheduleDate=new Date(this.sourceEmployee.scheduleDate)),null!=this.sourceEmployee.completionDate&&(this.sourceEmployee.completionDate=new Date(this.sourceEmployee.completionDate)),this.sourceEmployee.completionDate<this.setExpireDate?this.setExpireDate=new Date:this.setExpireDate=this.sourceEmployee.completionDate,null!=this.sourceEmployee.expirationDate&&(this.sourceEmployee.expirationDate=new Date(this.sourceEmployee.expirationDate)),this.sourceEmployee.cost=this.sourceEmployee.cost?Object(M.b)(this.sourceEmployee.cost,2):"0.00",this.sourceEmployee.aircraftManufacturerId&&this.sourceEmployee.aircraftManufacturerId>0&&this.arrayAircraftManfacturerlist.push(this.sourceEmployee.aircraftManufacturerId),this.getAllAircraftManfacturer(""),this.sourceEmployee.employeeTrainingTypeId&&this.sourceEmployee.employeeTrainingTypeId>0&&this.arrayTrainingtypelist.push(this.sourceEmployee.employeeTrainingTypeId),this.loadTariningTypes(""),this.sourceEmployee.frequencyOfTrainingId&&this.sourceEmployee.frequencyOfTrainingId>0&&this.arrayFrequencyTrainingInfolist.push(this.sourceEmployee.frequencyOfTrainingId),this.getAllFrequencyTrainingData(""),this.sourceEmployee.aircraftManufacturerId>0?this.sourceEmployee.aircraftModelIds&&this.loadmodels(this.sourceEmployee.aircraftManufacturerId):(this.sourceEmployee.aircraftManufacturerId=0,this.sourceEmployee.aircraftModelIds="")}}},{key:"pageIndexChange",value:function(e){this.pageSize=e.rows}},{key:"onTariningTypesData",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.alltrainingTypes=e}},{key:"onHistoryLoadSuccessful",value:function(e,t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=e,this.modal=this.modalService.open(t,{size:"lg"})}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=e}},{key:"onDataLoadFailed",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"handleChange",value:function(e,t){var n=this;0==t.checked?(this.sourceAction=e,this.sourceAction.updatedBy=this.userName,this.Active="In Active",this.sourceAction.isActive,this.employeeService.updateEmployee(this.sourceAction).subscribe((function(e){return n.saveCompleted(n.sourceAction)}),(function(e){return n.saveFailedHelper(e)}))):(this.sourceAction=e,this.sourceAction.updatedBy=this.userName,this.Active="Active",this.sourceAction.isActive,this.employeeService.updateEmployee(this.sourceAction).subscribe((function(e){return n.saveCompleted(n.sourceAction)}),(function(e){return n.saveFailedHelper(e)})))}},{key:"onDataPurchaseunitSuccessful",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allPurchaseUnitOfMeasureinfo=e}},{key:"Purchaseunitofmeasure",value:function(){var e=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.unitService.getUnitOfMeasureList().subscribe((function(t){return e.onDataPurchaseunitSuccessful(t[0])}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"filterPurchaseUnitOfMeasures",value:function(e){if(this.localunit=[],this.allPurchaseUnitOfMeasureinfo)for(var t=0;t<this.allPurchaseUnitOfMeasureinfo.length;t++){var n=this.allPurchaseUnitOfMeasureinfo[t].description;0==n.toLowerCase().indexOf(e.query.toLowerCase())&&this.localunit.push(n)}}},{key:"open",value:function(e){this.isEditMode=!1,this.isDeleteMode=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction.isActive=!0,this.employeeName="",this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"openDelete",value:function(e,t){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceAction=t,this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"openEdit",value:function(e,t){this.isEditMode=!0,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=t,this.employeeName=this.sourceAction.employeeName,this.loadMasterCompanies(),this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"openHelpText",value:function(e){this.modal=this.modalService.open(e,{size:"sm"})}},{key:"openHist",value:function(e,t){var n=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.sourceAction=t,this.employeeService.historyEmployee(this.sourceAction.employeeId).subscribe((function(t){return n.onHistoryLoadSuccessful(t[0],e)}),(function(e){return n.saveFailedHelper(e)}))}},{key:"savetrainigSection",value:function(){var e=this;this.sourceEmployee.employeeTrainingTypeId&&null!=this.sourceEmployee.employeeTrainingTypeId&&0!=this.sourceEmployee.employeeTrainingTypeId?(this.isSpinnerVisible=!0,this.sourceEmployee.employeeTrainingId?(this.sourceEmployee.updatedBy=this.userName,this.sourceEmployee.aircraftManufacturerId=0==this.sourceEmployee.aircraftManufacturerId?null:this.sourceEmployee.aircraftManufacturerId,this.sourceEmployee.aircraftModelId=0==this.sourceEmployee.aircraftModelId?null:this.sourceEmployee.aircraftModelId,this.sourceEmployee.masterCompanyId=this.currentUserMasterCompanyId,this.employeeService.updateTrainingDetails(this.sourceEmployee).subscribe((function(t){e.onUploadDocumentListNew(),e.isSpinnerVisible=!1,e.isSaving=!1,e.disableSave=!0,e.alertService.showMessage("Success","Training Information Updated Successfully",h.d.success),e.loadData()}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))):(this.sourceEmployee.aircraftManufacturerId=0==this.sourceEmployee.aircraftManufacturerId?null:this.sourceEmployee.aircraftManufacturerId,this.sourceEmployee.aircraftModelId=0==this.sourceEmployee.aircraftModelId?null:this.sourceEmployee.aircraftModelId,this.sourceEmployee.createdBy=this.userName,this.sourceEmployee.updatedBy=this.userName,this.sourceEmployee.masterCompanyId=this.currentUserMasterCompanyId,this.sourceEmployee.isActive=!0,this.sourceEmployee.employeeId=this.empId,this.sourceEmployee.createdBy=this.userA,this.sourceEmployee.updatedBy=this.userA,this.employeeService.newAddTraining(this.sourceEmployee).subscribe((function(t){e.isEnableNext=!0,e.isEditContent=!0,e.loadData(),e.onUploadDocumentListNew(),e.isSpinnerVisible=!1,e.isSaving=!1,e.alertService.showMessage("Success","Training Information Saved Successfully",h.d.success),e.loadData(),e.disableSave=!0}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)})))):this.alertService.showMessage("Failure","Training Type Required",h.d.success)}},{key:"deleteItemAndCloseModel",value:function(){var e=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.employeeService.deleteEmployee(this.sourceAction.employeeId).subscribe((function(t){return e.saveCompleted(e.sourceAction)}),(function(t){return e.saveFailedHelper(t)})),this.modal.close()}},{key:"dismissModelNew",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"saveCompleted",value:function(e){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted Successfully",h.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited Successfully",h.d.success),this.loadData()}},{key:"previousClick",value:function(){this.activeIndex=1,this.employeeService.indexObj.next(this.activeIndex),this.employeeId?this.router.navigateByUrl("/employeesmodule/employeepages/app-employee-certification-edit/"+this.employeeId):this.router.navigateByUrl("/employeesmodule/employeepages/app-employee-certification")}},{key:"getAllFrequencyTrainingData",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";0==this.arrayFrequencyTrainingInfolist.length&&this.arrayFrequencyTrainingInfolist.push(0),this.commonService.autoSuggestionSmartDropDownList("FrequencyOfTraining","FrequencyOfTrainingId","FrequencyName",t,!0,2e4,this.arrayFrequencyTrainingInfolist.join()).subscribe((function(t){e.getAllFrequencyTrainingInfodrpData=t}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}},{key:"errorMessageHandler",value:function(e){this.isSpinnerVisible=!1;var t=e;if(t.error)this.alertService.showMessage("Validation Failed",t.error,h.d.error);else{var n="";if(t.message){if(t.error&&t.error.errors.length>0)for(var i=0;i<t.error.errors.length;i++)n=n+t.error.errors[i].message+"<br/>";this.alertService.showMessage(t.error.message,n,h.d.error)}else this.alertService.showMessage("Error",e.error,h.d.error)}}},{key:"downloadFileUpload",value:function(e){var t="".concat(this.configurations.baseUrl,"/api/FileUpload/downloadattachedfile?filePath=").concat(e.link);window.location.assign(t)}},{key:"addDocumentDetails",value:function(){this.selectedFileAttachment=[],this.index=0,this.disableFileAttachmentSubmit=!1,this.isEditButton=!1,this.documentInformation={docName:"",docMemo:"",docDescription:"",attachmentDetailId:0}}},{key:"dismissDocumentPopupModel",value:function(e){this.fileUploadInput.clear(),this.closeMyModel(e)}},{key:"closeMyModel",value:function(e){S(e).modal("hide")}},{key:"downloadFileUploadNew",value:function(e){var t="".concat(this.configurations.baseUrl,"/api/FileUpload/downloadattachedfile?filePath=").concat(e);window.location.assign(t)}},{key:"fileUpload",value:function(e){0===e.files.length?this.disableFileAttachmentSubmit=!1:(this.disableFileAttachmentSubmit=!0,this.enableSave());var t=!1,n=[];this.selectedFileAttachment=[];var i,r=_createForOfIteratorHelper(e.files);try{for(r.s();!(i=r.n()).done;){for(var a=i.value,s=0;s<this.sourceViewforDocumentList.length;s++)this.sourceViewforDocumentList[s].fileName==a.name&&(t=!0,this.alertService.showMessage("Duplicate","Already Exists this file ",h.d.warn),this.disableFileAttachmentSubmit=!1,this.fileUploadInput&&this.fileUploadInput.clear());t||(n.push({link:a.objectURL,fileName:a.name,isFileFromServer:!1,fileSize:a.size}),this.formData.append(a.name,a))}}catch(o){r.e(o)}finally{r.f()}for(s=0;s<n.length;s++)this.selectedFileAttachment.push({docName:this.documentInformation.docName,docMemo:this.documentInformation.docMemo,docDescription:this.documentInformation.docDescription,createdBy:this.userName,updatedBy:this.userName,link:n[s].link,fileName:n[s].fileName,fileSize:n[s].fileSize,isFileFromServer:!1,attachmentDetailId:0})}},{key:"onFileChanged",value:function(e){this.selectedFile=e.target.files[0]}},{key:"addDocumentInformation",value:function(e,t){if(this.selectedFileAttachment!=[])for(var n=0;n<this.selectedFileAttachment.length;n++)this.sourceViewforDocumentList.push({docName:t.docName,docMemo:t.docMemo,docDescription:t.docDescription,link:this.selectedFileAttachment[n].link,fileName:this.selectedFileAttachment[n].fileName,isFileFromServer:!1,attachmentDetailId:0,createdBy:this.userName,updatedBy:this.userName,createdDate:Date.now(),updatedDate:Date.now(),fileSize:(this.selectedFileAttachment[n].fileSize/1048576).toFixed(2)});if(t.attachmentDetailId>0||this.index>0){for(n=0;n<=this.sourceViewforDocumentList.length;n++)if(this.sourceViewforDocumentList[n].attachmentDetailId>0){if(this.sourceViewforDocumentList[n].attachmentDetailId==t.attachmentDetailId){this.sourceViewforDocumentList[n].docName=t.docName,this.sourceViewforDocumentList[n].docMemo=t.docMemo,this.sourceViewforDocumentList[n].docDescription=t.docDescription;break}}else if(n==this.index){this.sourceViewforDocumentList[n].docName=t.docName,this.sourceViewforDocumentList[n].docMemo=t.docMemo,this.sourceViewforDocumentList[n].docDescription=t.docDescription;break}this.index=0,this.isEditButton=!1,this.disableFileAttachmentSubmit,this.dismissDocumentPopupModel(e)}this.dismissDocumentPopupModel(e),this.sourceViewforDocumentList=_toConsumableArray(this.sourceViewforDocumentList),this.sourceViewforDocumentList.length>0&&(this.totalRecordNew=this.sourceViewforDocumentList.length,this.totalPagesNew=Math.ceil(this.totalRecordNew/this.pageSizeNew)),this.alertService.showMessage("Success","Added Attachment  Successfully",h.d.success),this.index=0,this.isEditButton=!1,this.disableFileAttachmentSubmit,this.disableSave=!1,this.fileUploadInput&&this.fileUploadInput.clear()}},{key:"editCustomerDocument",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this.selectedFileAttachment=[],this.isEditButton=!0,this.index=t,this.documentInformation=e,e.attachmentDetailId>0?this.toGetDocumentView(e.attachmentDetailId):this.sourceViewforDocument=e}},{key:"deleteAttachmentRow",value:function(e,t,n){this.selectedRowForDelete=e,this.rowIndex=t,this.modal=this.modalService.open(n,{size:"sm"})}},{key:"restoreAttachmentRow",value:function(e,t,n){this.selectedRowForDelete=e,this.rowIndex=t,this.modal=this.modalService.open(n,{size:"sm"})}},{key:"deleteItemAndCloseModelNew",value:function(){var e=this,t=this.selectedRowForDelete.attachmentDetailId;t>0?this.commonService.GetAttachmentDeleteById(t,this.userName).subscribe((function(t){e.toGetDocumentsListNew(e.employeeId,e.empModuleId),e.alertService.showMessage("Success","Deleted Attachment  Successfully",h.d.success)})):(this.sourceViewforDocumentList.splice(this.rowIndex,1),this.totalRecordNew=this.sourceViewforDocumentList.length,this.totalPagesNew=Math.ceil(this.totalRecordNew/this.pageSizeNew)),this.modal.close()}},{key:"restoreItemAndCloseModel",value:function(){var e=this,t=this.selectedRowForDelete.attachmentDetailId;t>0?this.commonService.GetAttachmentRestoreById(t,this.userName).subscribe((function(t){e.toGetDocumentsListNew(e.employeeId,e.empModuleId),e.alertService.showMessage("Success","Restored Attachment  Successfully",h.d.success)})):(this.sourceViewforDocumentList.splice(this.rowIndex,1),this.totalRecordNew=this.sourceViewforDocumentList.length,this.totalPagesNew=Math.ceil(this.totalRecordNew/this.pageSizeNew)),this.modal.close()}},{key:"onUploadDocumentListNew",value:function(){var e=this,t={referenceId:this.employeeId,masterCompanyId:this.currentUserMasterCompanyId,createdBy:this.userName,updatedBy:this.userName,moduleId:this.empModuleId};for(var n in t)this.formData.append(n,t[n]);this.formData.append("attachmentdetais",JSON.stringify(this.sourceViewforDocumentList)),this.commonService.uploadDocumentsEndpoint(this.formData).subscribe((function(t){e.formData=new FormData,e.toGetDocumentsListNew(e.empId,e.empModuleId)}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}},{key:"toGetDocumentsListNew",value:function(e,t){var n=this;this.commonService.GetDocumentsListNew(e,t,this.currentDeletedstatus).subscribe((function(e){n.sourceViewforDocumentList=e||[],n.allDocumentListOriginal=e,n.sourceViewforDocumentList.length>0&&n.sourceViewforDocumentList.forEach((function(e){e.isFileFromServer=!0})),n.totalRecordNew=n.sourceViewforDocumentList.length,n.totalPagesNew=Math.ceil(n.totalRecordNew/n.pageSizeNew)}),(function(e){n.isSpinnerVisible=!1;var t=e;n.errorMessageHandler(t)}))}},{key:"toGetDocumentView",value:function(e){var t=this;this.commonService.GetAttachment(e).subscribe((function(e){t.sourceViewforDocument=e||[]}),(function(e){t.isSpinnerVisible=!1;var n=e;t.errorMessageHandler(n)}))}},{key:"dateFilterForTableNew",value:function(e,t){if(""!==e&&I(e).format("MMMM DD YYYY")){var n=_toConsumableArray(this.sourceViewforDocumentList.filter((function(n){return I(n.createdDate).format("MMMM DD YYYY")===I(e).format("MMMM DD YYYY")&&"createdDate"===t||I(n.updatedDate).format("MMMM DD YYYY")===I(e).format("MMMM DD YYYY")&&"updatedDate"===t?n:void 0})));this.sourceViewforDocumentList=n}else this.sourceViewforDocumentList=this.allDocumentListOriginal}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"onAuditHistoryLoadSuccessful",value:function(e,t){this.alertService.stopLoadingMessage(),this.sourceViewforDocumentAudit=e,this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1})}},{key:"saveFailedHelper",value:function(e){this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",h.d.error,e),this.alertService.showStickyMessage(e,null,h.d.error)}},{key:"openHistory",value:function(e,t){var n=this;this.alertService.startLoadingMessage(),this.commonService.GetAttachmentAudit(t.attachmentDetailId).subscribe((function(t){return n.onAuditHistoryLoadSuccessful(t,e)}),(function(e){return n.saveFailedHelper(e)}))}},{key:"getColorCodeForHistory",value:function(e,t,n){var i=this.sourceViewforDocumentAudit,r=i.length;if(e>=0&&e<=r)return e+1===r||i[e+1][t]===n}},{key:"removeFile",value:function(e){}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"formateNumber",value:function(e){e.cost=e.cost?Object(M.b)(e.cost,2):"0.00"}},{key:"nextClick",value:function(e){if(this.nextOrPreviousTab=e,0==this.disableSave){var t=this.tabRedirectConfirmationModal3;this.modal=this.modalService.open(t,{size:"sm"})}else if("Previous"==this.nextOrPreviousTab)this.previousClick();else{this.activeIndex=3,this.employeeService.indexObj.next(this.activeIndex);var n={empId:this.empId,firstName:this.firstName,lastName:this.lastName};JSON.stringify(n),btoa(JSON.stringify(n)),this.employeeId?this.router.navigateByUrl("/employeesmodule/employeepages/app-employees-management-structure-edit/"+this.empId):this.router.navigate(["/employeesmodule/employeepages/app-employees-management-structure"],{queryParams:{order:this.empId,firstName:this.firstName,lastName:this.lastName},skipLocationChange:!0})}}},{key:"redirectToTabWithoutSave",value:function(){if(this.dismissModel(),"Previous"==this.nextOrPreviousTab)this.previousClick();else{this.activeIndex=3,this.employeeService.indexObj.next(this.activeIndex),this.activeIndex=3,this.employeeService.indexObj.next(this.activeIndex);var e={empId:this.empId,firstName:this.firstName,lastName:this.lastName};JSON.stringify(e),btoa(JSON.stringify(e)),this.employeeId?this.router.navigateByUrl("/employeesmodule/employeepages/app-employees-management-structure-edit/"+this.empId):this.router.navigate(["/employeesmodule/employeepages/app-employees-management-structure"],{queryParams:{order:this.empId,firstName:this.firstName,lastName:this.lastName},skipLocationChange:!0})}}},{key:"enableSaveMemo",value:function(){this.disableSaveMemo=!1}},{key:"onClickMemo",value:function(){this.memoPopupContent=this.documentInformation.docMemo,this.disableSaveMemo=!0}},{key:"onClickPopupSave",value:function(){this.documentInformation.docMemo=this.memoPopupContent,this.memoPopupContent="",S("#memo-popup-Doc").modal("hide")}},{key:"closeMemoModel",value:function(){S("#memo-popup-Doc").modal("hide")}},{key:"redirectToTab",value:function(){if(this.dismissModel(),this.savetrainigSection(),"Previous"==this.nextOrPreviousTab)this.previousClick();else{this.activeIndex=3,this.employeeService.indexObj.next(this.activeIndex),this.activeIndex=3,this.employeeService.indexObj.next(this.activeIndex);var e={empId:this.empId,firstName:this.firstName,lastName:this.lastName};JSON.stringify(e),btoa(JSON.stringify(e)),this.employeeId?this.router.navigateByUrl("/employeesmodule/employeepages/app-employees-management-structure-edit/"+this.empId):this.router.navigate(["/employeesmodule/employeepages/app-employees-management-structure"],{queryParams:{order:this.empId,firstName:this.firstName,lastName:this.lastName},skipLocationChange:!0})}}},{key:"enableSave",value:function(){this.sourceViewforDocumentList&&this.sourceViewforDocumentList.length>0||this.isEditButton,this.disableSave=!1}},{key:"currentUserMasterCompanyId",get:function(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:null}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();X.ctorParameters=function(){return[{type:c.ActivatedRoute},{type:K.a},{type:k.a},{type:b.a},{type:G.a},{type:y.a},{type:v.c},{type:v.b},{type:s.FormBuilder},{type:h.b},{type:c.Router},{type:d.a},{type:T.b},{type:O.a},{type:z.a},{type:D.a},{type:x.a}]},i.b([Object(r.ViewChild)("tabRedirectConfirmationModal3",{static:!1})],X.prototype,"tabRedirectConfirmationModal3",void 0),i.b([Object(r.ViewChild)("fileUploadInput",{static:!1})],X.prototype,"fileUploadInput",void 0),i.b([Object(r.ViewChild)(A.a,{static:!1})],X.prototype,"paginator",void 0),i.b([Object(r.ViewChild)(F.a,{static:!1})],X.prototype,"sort",void 0),i.b([Object(r.ViewChild)("empform",{static:!1})],X.prototype,"formdata",void 0),X=i.b([Object(r.Component)({selector:"app-employee-training",template:i.c(n("S9w2")).default,animations:[u.a],styles:[i.c(n("NH+U")).default]})],X);var Z=function(){function e(t,n,i,r,a,s,o){_classCallCheck(this,e),this.router=t,this.route=n,this.modalService=i,this.authService=r,this.employeeService=a,this.legalEntityService=s,this.alertService=o,this.selectedRoles=[],this.employeeRoleLabel=[],this.tagNameCollection=[],this.isSpinnerVisible=!1,this.localCollection=[],this.sourceEmployee={},this.dropdownSettings={singleSelection:!1,selectAllText:"Select All",unSelectAllText:"UnSelect All",itemsShowLimit:1,allowSearchFilter:!1},this.gridData=[],this.isEditContent=!1,this.disableEditor=!0,this.employeeService.generalCollection&&(this.local=this.employeeService.generalCollection),this.employeeService.listCollection&&1==this.employeeService.isEditMode&&(this.sourceEmployee=this.employeeService.listCollection,this.employeeId=this.sourceEmployee.employeeId,this.firstName=this.employeeService.listCollection.firstName,this.lastName=this.employeeService.listCollection.lastName,this.local=this.employeeService.listCollection)}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;this.employeeId=this.route.snapshot.paramMap.get("id"),this.employeeId?(this.employeeService.employeeId=this.employeeId,this.employeeService.toGetEmployeeDetailsByEmpId(this.employeeId).subscribe((function(t){t&&(e.employeeService.enableUpdateButton=!1,e.sourceEmployee=t,e.empId=e.sourceEmployee.employeeId,e.empcode=e.sourceEmployee.employeeCode,e.firstName=e.sourceEmployee.firstName,e.lastName=e.sourceEmployee.lastName,e.employeeService.legalEnityList=[],e.employeeService.employeeId=e.employeeId)})),this.isEditContent=!0,this.employeeService.currentUrl="/employeesmodule/employeepages/app-employees-management-structure-edit/"+this.employeeId):this.employeeService.currentUrl="/employeesmodule/employeepages/app-employees-management-structure",this.employeeService.bredcrumbObj.next(this.employeeService.currentUrl),this.employeeService.ShowPtab=!0,this.employeeService.alertObj.next(this.employeeService.ShowPtab),this.structureInit(),this.loadEmployeeRoles(),null!=this.employeeService.listCollection&&1==this.employeeService.isEditMode&&this.employeeService.toGetEmployeeDetailsByEmpId(this.employeeId).subscribe((function(t){e.empDetailsData=t,e.empDetailsData.memo&&null!=e.empDetailsData.memo&&""!=e.empDetailsData.memo&&null!=e.empDetailsData.memo?e.memoText=e.empDetailsData.memo:e.memoText=""}))}},{key:"ngAfterViewInit",value:function(){var e=this;this.route.queryParams.filter((function(e){return e.order})).subscribe((function(t){e.empId=t.order,e.empId=t.order,e.firstName=t.firstname,e.lastName=t.lastname}))}},{key:"onClickMemo",value:function(){this.disableEditor=!0,this.memoPopupContent=this.memoText}},{key:"editorgetmemo",value:function(e){this.disableEditor=!1}},{key:"parsedText",value:function(e){if(e)return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}},{key:"onClickPopupSave",value:function(){this.employeeService.enableUpdateButton=!0,this.memoText=this.memoPopupContent}},{key:"onItemSelect",value:function(e){this.employeeService.enableUpdateButton=!0}},{key:"onSelectAll",value:function(e){this.employeeService.enableUpdateButton=!0}},{key:"onmsSelect",value:function(){this.employeeService.enableUpdateButton=!0}},{key:"getManagementStructureData",value:function(){var e=this;this.isSpinnerVisible=!0;var t=[];this.employeeService.getStoredEmployeeRoles(this.employeeId).subscribe((function(n){e.employeeRolesList.forEach((function(e){n.forEach((function(n){n.roleId==e.id&&t.push(e.name)}))})),e.selectedRoles=t,e.isSpinnerVisible=!1}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)})),this.isSpinnerVisible=!0,this.employeeService.getStoredEmployeeManagementStructure(this.employeeId).subscribe((function(t){e.isSpinnerVisible=!1,t&&t.length>0?(e.employeeService.legalEnityList=t,e.allManagemtninfo&&e.allManagemtninfo.length==t.length&&e.employeeService.legalEnityList.push({managementStructureId:0,isActive:!0,checked:!0,chldParent:"test",isDeleted:!1})):e.employeeService.legalEnityList=[]}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}},{key:"structureInit",value:function(){var e,t=document.getElementsByClassName("caret");for(e=0;e<t.length;e++)t[e].addEventListener("click",(function(){this.parentElement.querySelector(".nested").classList.toggle("active"),this.classList.toggle("caret-down")}))}},{key:"loadEmployeeRoles",value:function(){var e=this;this.isSpinnerVisible=!0,this.employeeService.getAllRolesOfEmployee().subscribe((function(t){e.employeeRolesList=t,e.employeeRoleLabel=e.employeeRolesList.map((function(e){return e.name})),e.loadManagementStructure(),e.isSpinnerVisible=!1}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}},{key:"loadManagementStructure",value:function(){var e=this;this.isSpinnerVisible=!0,this.legalEntityService.getManagemententity().subscribe((function(t){e.onManagemtntdataLoad(t[0]),e.getManagementStructureData(),e.isSpinnerVisible=!1}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}},{key:"errorMessageHandler",value:function(e){this.isSpinnerVisible=!1;var t=e;if(t.error)this.alertService.showMessage("Validation Failed",t.error,h.d.error);else{var n="";if(t.message){if(t.error&&t.error.errors.length>0)for(var i=0;i<t.error.errors.length;i++)n=n+t.error.errors[i].message+"<br/>";this.alertService.showMessage(t.error.message,n,h.d.error)}else this.alertService.showMessage("Error",e.error,h.d.error)}}},{key:"onManagemtntdataLoad",value:function(e){this.isSpinnerVisible=!0,this.allManagemtninfo=e;for(var t=0;t<this.allManagemtninfo.length;t++)null!=this.allManagemtninfo[t].tagName&&this.tagNameCollection.push(this.allManagemtninfo[t]);this.allManagemtninfo&&(this.gridData=[{data:{fullName:this.allManagemtninfo[0].companyName,isRoot:!0,managementStructureId:0},children:this.makeNestedObj(this.allManagemtninfo,null),isCheckboxNotDisable:!1}]),this.isSpinnerVisible=!1}},{key:"makeNestedObj",value:function(e,t){var n=[];for(var i in e)if(e[i].parentId==t){var r=this.makeNestedObj(e,e[i].managementStructureId);e[i]={data:e[i]},r.length&&(e[i].children=r),n.push(e[i])}return n}},{key:"saveManagementStructure",value:function(){var e=this;this.isSpinnerVisible=!0,this.employeeService.updateEmployeeMemo(this.employeeId,this.memoText).subscribe((function(t){e.employeeService.storeEmployeeRoles(e.getEmployeeRolesList()).subscribe((function(t){e.employeeService.storeEmployeeManagementStructure(e.getLegalEntityList()).subscribe((function(t){e.isSpinnerVisible=!1,e.employeeService.enableUpdateButton=!1,e.alertService.showMessage("Success","Management Strcture Updated Sucessfully",h.d.success)}),(function(e){}))}),(function(e){}))}))}},{key:"getEmployeeRolesList",value:function(){var e=this,t=[];return this.employeeRolesList.forEach((function(n){-1!=e.selectedRoles.indexOf(n.name)&&t.push({employeeId:e.employeeId,roleId:n.id,createdBy:"admin",updatedBy:"admin",isActive:n.isActive,isDeleted:n.isDeleted})})),t}},{key:"getLegalEntityList",value:function(){var e=this;this.employeeService.legalEnityList.forEach((function(t,n){e.employeeService.legalEnityList[n].isActive=!0,e.employeeService.legalEnityList[n].isDeleted=!1,e.employeeService.legalEnityList[n].employeeId=e.employeeId,e.employeeService.legalEnityList[n].masterCompanyId=e.currentUserMasterCompanyId,e.employeeService.legalEnityList[n].createdBy=e.userName,e.employeeService.legalEnityList[n].UpdatedBy=e.userName}));var t=-1;return this.employeeService.legalEnityList.forEach((function(e,n){0==e.managementStructureId&&(t=n)})),-1!=t&&this.employeeService.legalEnityList.splice(t,1),this.employeeService.legalEnityList}},{key:"previousClick",value:function(){this.employeeService.indexObj.next(2),1==this.employeeService.isEditMode?this.router.navigateByUrl("/employeesmodule/employeepages/app-employee-training-edit/"+this.employeeId):this.router.navigate(["/employeesmodule/employeepages/app-employee-training"],{queryParams:{order:this.employeeId,firstName:this.firstName,lastName:this.lastName}})}},{key:"nextClick",value:function(e){if(1==this.employeeService.enableUpdateButton){this.nextOrPreviousTab=e;var t=this.tabRedirectConfirmationModal4;this.modal=this.modalService.open(t,{size:"sm"})}else this.previousClick()}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"redirectToTabWithoutSave",value:function(){this.dismissModel(),this.previousClick()}},{key:"redirectToTab",value:function(){this.dismissModel(),this.saveManagementStructure(),"Previous"==this.nextOrPreviousTab&&this.previousClick()}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"currentUserMasterCompanyId",get:function(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:null}}]),e}();Z.ctorParameters=function(){return[{type:c.Router},{type:c.ActivatedRoute},{type:v.c},{type:y.a},{type:d.a},{type:w.a},{type:h.b}]},i.b([Object(r.ViewChild)("tabRedirectConfirmationModal4",{static:!1})],Z.prototype,"tabRedirectConfirmationModal4",void 0),Z=i.b([Object(r.Component)({selector:"app-employees-management-structure",template:i.c(n("F2CC")).default,animations:[u.a],styles:[i.c(n("rhMm")).default]})],Z);var Q=n("MKys"),ee=[{path:"employeepages",component:p,children:[{path:"app-employees-list",component:L,data:{title:"Employee's List"}},{path:"app-employee-general-information",component:Y,data:{title:"Employee General Information"}},{path:"app-employee-general-information-edit/:id",component:Y,data:{title:"Employee General Information"}},{path:"app-employee-certification",component:W,data:{title:"Employee Certification"}},{path:"app-employee-certification-edit/:id",component:W,data:{title:"Employee Certification"}},{path:"app-employee-training",component:X,data:{title:"Employee Training"}},{path:"app-employee-training-edit/:id",component:X,data:{title:"Employee Training"}},{path:"app-employees-management-structure",component:Z,data:{title:"Employee Management Structure"}},{path:"app-employees-management-structure-edit/:id",component:Z,data:{title:"Employee Management Structure"}}]}],te=function e(){_classCallCheck(this,e)};te=i.b([Object(r.NgModule)({imports:[c.RouterModule.forChild(ee)],exports:[c.RouterModule],providers:[y.a,Q.a]})],te);var ne=n("8YFm"),ie=n("MCl+"),re=n("CYTX"),ae=n("bv+N"),se=n("Jfay"),oe=n("I0ai"),le=n("3/N/"),ce=n("sa3O"),de=n("1zQ3"),pe=n("a4ce"),me=n("AkAD"),ue=n("ByPc"),he=n("1bHX"),ye=n("FfGd"),ve=function(){function e(t,n,i,r){var a=this;_classCallCheck(this,e),this.router=t,this.acRouter=n,this.route=i,this.employeeService=r,this.editMode=!1,this.msgs=[],this.isEditMode=!1,this.isDisabledSteps=!1,this.route.url,this.employeeService.alertChangeObject$.subscribe((function(e){a.showComponentPTab=e})),this.employeeService.indexObjChangeObject$.subscribe((function(e){a.activeIndex=e}))}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;this.showComponentPTab=this.employeeService.ShowPtab,this.currentUrl=this.route.url,this.currentUrl.includes("/employeesmodule/employeepages/app-employees-list")?(this.employeeService.isEditMode=!1,this.activeIndex=0):this.employeeService.isEditMode=!0,this.currentUrl.includes("/employeesmodule/employeepages/app-employee-general-information")?(this.activeIndex=0,this.isDisabledSteps=!0,this.showComponentPTab=!0,this.getEmployeeId()):this.currentUrl.includes("/employeesmodule/employeepages/app-employee-certification")?(this.showComponentPTab=!0,this.activeIndex=1,this.getEmployeeId()):this.currentUrl.includes("/employeesmodule/employeepages/app-employee-training")?(this.showComponentPTab=!0,this.activeIndex=2,this.getEmployeeId()):this.currentUrl.includes("/employeesmodule/employeepages/app-employees-management-structure")&&(this.showComponentPTab=!0,this.activeIndex=3,this.getEmployeeId()),this.items=[{label:"General Information",step:1,index:0,command:function(t){e.activeIndex=0,e.msgs.length=0,e.msgs.push({severity:"info",summary:"General Information",detail:t.label}),1==e.employeeService.isEditMode?(e.acRouter.params.subscribe((function(e){return console.log(e)})),e.employeeId=e.employeeService.employeeId,e.route.navigateByUrl("/employeesmodule/employeepages/app-employee-general-information-edit/"+e.employeeId)):e.route.navigateByUrl("/employeesmodule/employeepages/app-employee-general-information")}},{label:"Certification",step:2,index:1,command:function(t){e.activeIndex=1,e.msgs.length=0,e.msgs.push({severity:"info",summary:"Contacts",detail:t.label}),1==e.employeeService.isEditMode?(e.acRouter.params.subscribe((function(e){return console.log(e)})),e.employeeId=e.employeeService.employeeId,e.route.navigateByUrl("/employeesmodule/employeepages/app-employee-certification-edit/"+e.employeeId)):e.route.navigateByUrl("/employeesmodule/employeepages/app-employee-certification")}},{label:"Training",step:3,index:2,command:function(t){e.activeIndex=2,e.msgs.length=0,e.msgs.push({severity:"info",summary:"Financial Information",detail:t.label}),1==e.employeeService.isEditMode?(e.acRouter.params.subscribe((function(e){return console.log(e)})),e.employeeId=e.employeeService.employeeId,e.route.navigateByUrl("/employeesmodule/employeepages/app-employee-training-edit/"+e.employeeId)):e.route.navigateByUrl("/employeesmodule/employeepages/app-employee-training")}},{label:"Management Structure",step:4,index:3,command:function(t){e.activeIndex=3,e.msgs.length=0,e.msgs.push({severity:"info",summary:"Management Structure",detail:t.label}),1==e.employeeService.isEditMode?(e.acRouter.params.subscribe((function(e){return console.log(e)})),e.employeeId=e.employeeService.employeeId,e.route.navigateByUrl("/employeesmodule/employeepages/app-employees-management-structure-edit/"+e.employeeId)):e.route.navigateByUrl("/employeesmodule/employeepages/app-employees-management-structure")}}]}},{key:"getEmployeeId",value:function(){this.acRouter.params.subscribe((function(e){return console.log(e)})),this.employeeId=this.employeeService.employeeId,this.employeeId&&(this.employeeService.isEditMode=!0)}}]),e}();ve.ctorParameters=function(){return[{type:c.ActivatedRoute},{type:c.ActivatedRoute},{type:c.Router},{type:d.a}]},ve=i.b([Object(r.Component)({selector:"app-employee-steps-prime-ng",template:i.c(n("0c0F")).default,styles:[i.c(n("4vtf")).default]})],ve);var fe=function(){function e(t){_classCallCheck(this,e),this.employeeService=t,this.isSpinnerVisible=!1}return _createClass(e,[{key:"storeLegalEntity",value:function(e,t){this.employeeService.enableUpdateButton=!0;var n=-1;if(this.employeeService.legalEnityList.forEach((function(t,i){t.managementStructureId==e.data.managementStructureId&&(n=i)})),-1!=n){if(this.employeeService.legalEnityList.splice(n,1),document.getElementById(""+e.data.managementStructureId).checked=!1,e.children){r=e.children;for(var i=0;i<r.length;i++)this.removeMS(r[i].data.managementStructureId),r[i].children&&this.removeChildrenMS(r[i].children)}}else if(document.getElementById(""+e.data.managementStructureId).checked=!0,this.employeeService.legalEnityList.push({managementStructureId:e.data.managementStructureId,isActive:e.data.isActive,checked:!0,chldParent:e.data.name,isDeleted:e.data.isDeleted}),e.children)for(var r=e.children,a=0;a<r.length;a++)this.addMS(r[a].data.managementStructureId),r[a].children&&this.addChildrenMS(r[a].children)}},{key:"addMS",value:function(e){var t=-1;this.employeeService.legalEnityList.forEach((function(n,i){n.managementStructureId==e&&(t=i)})),-1==t&&(document.getElementById(""+e).checked=!0,this.employeeService.legalEnityList.push({managementStructureId:e,isActive:!0,checked:!0,chldParent:"test",isDeleted:!1}))}},{key:"addChildrenMS",value:function(e){for(var t=0;t<e.length;t++)this.addMS(e[t].data.managementStructureId),e[t].children&&this.addChildrenMS(e[t].children)}},{key:"removeMS",value:function(e){var t=-1;this.employeeService.legalEnityList.forEach((function(n,i){n.managementStructureId==e&&(t=i)})),-1!=t&&(this.employeeService.legalEnityList.splice(t,1),document.getElementById(""+e).checked=!1)}},{key:"removeChildrenMS",value:function(e){for(var t=0;t<e.length;t++)this.removeMS(e[t].data.managementStructureId),e[t].children&&this.removeChildrenMS(e[t].children)}},{key:"ngOnInit",value:function(){this.structureInit()}},{key:"structureInit",value:function(){var e,t=document.getElementsByClassName("caret");for(e=0;e<t.length;e++)t[e].addEventListener("click",(function(){this.parentElement.querySelector(".nested").classList.toggle("active"),this.classList.toggle("caret-down")}))}},{key:"checkLegalEntityExist",value:function(e){return this.employeeService.legalEnityList.forEach((function(e){null!=document.getElementById(""+e.managementStructureId)&&(document.getElementById(""+e.managementStructureId).checked=!0)})),this.employeeService.legalEnityList.forEach((function(t,n){if(e==t.managementStructureId)return!0})),!1}}]),e}();fe.ctorParameters=function(){return[{type:d.a}]},i.b([Object(r.Input)()],fe.prototype,"gridData",void 0),fe=i.b([Object(r.Component)({selector:"app-tree-structure",template:i.c(n("U3fk")).default,styles:[i.c(n("1kis")).default]})],fe);var ge=n("UPO+"),be=n("r5xa"),Se=n("NGzr"),Ee=n("DgWh");n.d(t,"EmployeepagesModule",(function(){return Ie}));var Ie=function e(){_classCallCheck(this,e)};Ie=i.b([Object(r.NgModule)({imports:[a.a,s.FormsModule,s.ReactiveFormsModule,l.a,o.b,N.CommonModule,ne.TableModule,ie.ButtonModule,re.SelectButtonModule,ae.InputTextModule,se.MultiSelectModule,te,oe.InputSwitchModule,le.CheckboxModule,ce.AutoCompleteModule,ue.GMapModule,ye.RadioButtonModule,he.CalendarModule,de.StepsModule,me.BreadcrumbModule,pe.DialogModule,be.TooltipModule,Se.FileUploadModule,Ee.EditorModule,ge.a.forRoot()],declarations:[p,L,Y,W,X,ve,Z,fe],providers:[],entryComponents:[],schemas:[r.CUSTOM_ELEMENTS_SCHEMA]})],Ie)},"NH+U":function(e,t,n){"use strict";n.r(t),t.default=".drp-certification-type {\n  width: 198px !important;\n}\n\n.labels-font-header {\n  font-size: 13px !important;\n  font-weight: normal !important;\n}\n\n.span-header-red {\n  color: red;\n  font-weight: bold;\n}\n\n.shadow-Box {\n  padding-bottom: 0px !important;\n}\n\nlabel {\n  text-align: left;\n  width: 150px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.inner-addon .ui-autocomplete-input {\n  width: 100% !important;\n}\n\n.po-head {\n  font-weight: bold;\n  font-size: 16px;\n  color: #295d92;\n}\n\n.partsList-table-tr th {\n  min-width: 80px;\n}\n\n.addpn-btn {\n  padding: 5px 10px !important;\n  font-size: 13px;\n}\n\na.fa.fa-plus-circle {\n  color: green !important;\n}\n\n.partsList-modal .form-group {\n  margin-bottom: 6px !important;\n}\n\n.rpo-table-cstm th {\n  padding: 8px 5px !important;\n}\n\n.child-add-icon {\n  cursor: pointer;\n  margin: 2px -12px;\n}\n\n.child-add-icon a:before, .child-add-icon i:before {\n  font-size: 16px;\n}\n\n.textareaMemos ol {\n  overflow: hidden;\n  margin-bottom: 0px !important;\n  padding: 0px !important;\n  list-style-type: none;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n\n  .col-md-6 {\n    max-width: 46%;\n    margin-right: 15px;\n  }\n}\n\n.grayColor {\n  color: gray;\n}"},NWUP:function(e,t,n){"use strict";n.r(t),t.default='<p-breadcrumb [model]="items" [home]="home"></p-breadcrumb>\r\n<app-employee-steps-prime-ng></app-employee-steps-prime-ng>\r\n<router-outlet></router-outlet>'},S9w2:function(e,t,n){"use strict";n.r(t),t.default='<div [@fadeInOut] class="page-content">\r\n    <div class="card padding-10">\r\n        <div class="right_col" role="main">\r\n            <div class="x_panel">\r\n                <div class="x_content">\r\n                    <div class="col-md-12 shadow-Box">\r\n                        <div class="col-md-4">\r\n                            <p class="fs12">\r\n                                <label class="control-label labels-font-header" style="width: auto; ">Emp First Name: </label>\r\n                                <span class="span-header-red" style="text-transform: capitalize" *ngIf="firstName"> {{firstName}} </span>\r\n                            </p>\r\n                        </div>\r\n                        <div class="col-md-4">\r\n                            <p class="fs12">\r\n                                <label class="control-label labels-font-header" style="width: auto; ">Emp Last Name: </label>\r\n                                <span class="span-header-red" style="text-transform: capitalize" *ngIf="lastName"> {{lastName}} </span>\r\n                            </p>\r\n                        </div>\r\n                        <div class="col-md-4">\r\n                            <p class="fs12">\r\n                                <label class="control-label labels-font-header" style="width: auto; ">Emp Id: </label>\r\n                                <span class="span-header-red" style="text-transform: capitalize" *ngIf="empId"> {{empcode}} </span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="card">\r\n                        <div class="card-header">                      \r\n                            <div class="card-header bg-primary">\r\n                                <h4 class="new-card-heading">                                  \r\n                                    Training Information\r\n                                </h4>\r\n                            </div>\r\n                            <div class="clear"></div>\r\n                            <hr />\r\n                        </div>\r\n                        <form #empform="ngForm" class="form-horizontal add-custustomer" style="padding-bottom: 16px;">\r\n                            <div class="card-body">\r\n                                <div class="form-row">\r\n                                    <div class="col-md-3">\r\n                                     <div class="form-group">\r\n                                            <label>Aircraft Manfacturer</label>\r\n                                            <select name="aircraftManufacturerId" class="form-control" (change)="onChangeManufacture($event,sourceEmployee.aircraftManufacturerId)" [(ngModel)]="sourceEmployee.aircraftManufacturerId" (ngModelChange)="enableSave()">\r\n                                                <option value="0">-- Select -- </option>\r\n                                                <option *ngFor="let type of manufacturerData" [ngValue]="type.value">{{type.label}}</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        \x3c!-- <div class="form-group">\r\n                                            <label>Aircraft Model</label>\r\n                                            <select name="aircraftModelId" class="form-control" [(ngModel)]="sourceEmployee.aircraftModelId" (ngModelChange)="enableSave()">\r\n                                                <option value="0">-- Select -- </option>\r\n                                                <option *ngFor="let type of search_AircraftModelList" [ngValue]="type.value">{{type.label}}</option>\r\n                                            </select>\r\n                                        </div> --\x3e\r\n                                        <div class="form-group">\r\n                                            <label>Aircraft Model</label>\r\n                                            <p-multiSelect [options]="search_AircraftModelList" name="aircraftModelId" (ngModelChange)="enableSave()" [(ngModel)]="sourceEmployee.aircraftModelIds" [panelStyle]="{minWidth:\'12em\'}"></p-multiSelect>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Provider</label>\r\n                                            <input type="text" class="form-control" name="provider" [(ngModel)]="sourceEmployee.provider" (ngModelChange)="enableSave()">\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Industry Code</label>\r\n                                            <input type="text" class="form-control" name="industryCode" [(ngModel)]="sourceEmployee.industryCode" (ngModelChange)="enableSave()">\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div class="col-md-3">\r\n                                        <div class="form-group">\r\n                                            <label>Training Type <span class="clr-red">*</span></label>\r\n                                            <select name="employeeTrainingTypeId" class="form-control" [(ngModel)]="sourceEmployee.employeeTrainingTypeId" (ngModelChange)="enableSave()" required>\r\n                                                <option value="0"> -- Select --</option>\r\n                                                <option *ngFor="let employeeName of alltrainingTypes" [ngValue]="employeeName.value">{{employeeName.label}}</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Frequency of Training</label>\r\n\r\n                                            <select class="form-control" name="frequencyOfTrainingId" [(ngModel)]="sourceEmployee.frequencyOfTrainingId" (ngModelChange)="enableSave()">\r\n                                                <option value="0">-- Select -- </option>\r\n                                                <option *ngFor="let trainingData of getAllFrequencyTrainingInfodrpData" [ngValue]="trainingData.value">  {{trainingData.label}}</option>\r\n                                            </select>                                     \r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Cost</label>                                            \r\n                                            <input type="text" class="form-control cost" pInputText pKeyFilter="pnum" maxlength="10"  (change)="formateNumber(sourceEmployee)" name="cost" [(ngModel)]="sourceEmployee.cost" (ngModelChange)="enableSave()" style="text-align: end;padding-right: 8px !important;">\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label style="padding-left: 3px;">Duration</label>\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-6" style="max-width: 49%;margin:0px">\r\n                                                    <div class="form-group">\r\n\r\n                                                        <input type="number" class="form-control" name="duration" [(ngModel)]="sourceEmployee.duration" (ngModelChange)="enableSave()" style="padding-right: 8px !important;">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="col-md-6" style="max-width: 49%;margin:0px">\r\n                                                    <select class="form-control" placeholder="Select" [ngModelOptions]="{standalone: true}" (ngModelChange)="enableSave()" style="margin-top: 3px;" [(ngModel)]="sourceEmployee.durationTypeId">\r\n                                                        <option value="0">-- Select -- </option>\r\n                                                        <option *ngFor="let obj of durationTypes" [ngValue]="obj.id">  {{obj.type}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-3">\r\n                                        <div class="form-group">\r\n                                            <label>Schedule Date</label>\r\n                                            <p-calendar [showIcon]="true" name="scheduleDate"\r\n                                            [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                             [maxDate]="sourceEmployee.completionDate" \r\n                                             (change)="changeDateEv(sourceEmployee.completionDate)"\r\n                                              [(ngModel)]="sourceEmployee.scheduleDate" \r\n                                              (ngModelChange)="enableSave()"></p-calendar>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Completion Date</label>\r\n                                            <p-calendar [showIcon]="true" [minDate]="sourceEmployee.scheduleDate"\r\n                                            [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                             name="completionDate" [(ngModel)]="sourceEmployee.completionDate"\r\n                                              (ngModelChange)="enableSave()"></p-calendar>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Expiration Date</label>\r\n                                            <p-calendar [showIcon]="true" name="expirationDate"\r\n                                            [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                             [minDate]="sourceEmployee.scheduleDate" [(ngModel)]="sourceEmployee.expirationDate" (ngModelChange)="enableSave()"></p-calendar>\r\n                                        </div>\r\n                                    </div>                                    \r\n                                </div>\r\n\r\n                                <hr>\r\n                                    <div class="col-md-12">\r\n                                        <div class="card-header bg-primary new-card-header" >\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                                                <h4 class="new-card-heading">Training Certificate Received</h4>\r\n                                              </div>\r\n                                              <div>\r\n                                                <a data-toggle="modal" data-target="#addDocumentDetails">\r\n                                                  <button type="button" class="btn-sm new-btn-primary"  matTooltip="Add Documents" matTooltipPosition="above" (click)="addDocumentDetails();">\r\n                                                    Add Certificate\r\n                                                  </button>\r\n                                                </a>              \r\n                                              </div>\r\n                                            </div>\r\n                                          </div>                                        \r\n                                        <div>\r\n                                            <div class="clear"></div>\r\n                                            <hr /> \r\n                                           <div class="checkbox-cstm setDelts" >\r\n                                                <label style="width: auto !important;margin-top: 3px;">\r\n                                                 \r\n                                                  <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent1" id="cparent1"  (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                    />\r\n                                                  <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                Show  Deleted List \r\n                                                </label>\r\n                                            </div>  \r\n\r\n                                            <p-table #table4 class="rro-table-cstm lastcol-fix ptable-attach"\r\n                                            [columns]="selectedColumnsDoc"\r\n                                            [value]="sourceViewforDocumentList"\r\n                                            [paginator]="true"\r\n                                            [rows]="3"\r\n                                            [rowsPerPageOptions]="[3, 6, 9, 15]" [scrollable]="true" scrollHeight="500px">\r\n                                          \r\n                                       <ng-template pTemplate="colgroup" let-columns>\r\n                                           <colgroup>\r\n                                               <col *ngFor="let col of columns" style="width:100px" />\r\n                                           </colgroup>\r\n                                       </ng-template>\r\n                                       \x3c!-- <ng-template pTemplate="header" let-columns>\r\n                                           <tr>\r\n                                               <th *ngFor="let col of columns" style="width: 100px;">\r\n                                                   {{ col.header }}\r\n                                               </th>\r\n                                               <th style="width: 100px;">Action</th>\r\n                                           </tr>\r\n                                       </ng-template> --\x3e\r\n                                       <ng-template pTemplate="header" let-columns>\r\n                                           <tr>\r\n                                               <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                                                   [pSortableColumn]="col.field">\r\n                                                   {{ col.header }}\r\n                                                   <p-sortIcon [field]="col.field">\r\n                                                   </p-sortIcon>\r\n                                               </th>\r\n                                               <th style="width:70px;position:sticky">Actions</th>\r\n                                           </tr>\r\n                                           <tr>\r\n                                               <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                                   <input type="text"\r\n                                                          (input)="table4.filter($event.target.value, col.field,\'contains\') "\r\n                                                          *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'"\r\n                                                          style="width:100%;" pInputText>\r\n                                                   <input type="date" class="hidePlaceHolder"\r\n                                                          *ngIf="col.field == \'createdDate\'" name="createdDate"\r\n                                                          style="width:100%;"\r\n                                                          (change)="dateFilterForTableNew($event.target.value, col.field )">\r\n                                                   <input type="date" class="hidePlaceHolder"\r\n                                                          *ngIf="col.field == \'updatedDate\'" name="updatedDate"\r\n                                                          style="width:100%;"\r\n                                                          (change)="dateFilterForTableNew($event.target.value, col.field )">\r\n                                               </th>\r\n                                               <th style="width:70px;position:sticky"></th>\r\n   \r\n                                           </tr>\r\n                                       </ng-template>\r\n   \r\n                                       <ng-template pTemplate="body"\r\n                                                    let-rowData\r\n                                                    let-columns="columns"\r\n                                                    let-rowIndex="rowIndex">\r\n                                           <tr [pSelectableRow]="rowData">\r\n                                               <ng-container *ngFor="let col of columns">\r\n                                                   <td *ngIf="col.field != \'fileName\' && col.field != \'docMemo\'"\r\n                                                       class="ui-resizable-column"\r\n                                                       pReorderableRowHandle>\r\n                                                       {{\r\n                                                       col.field == \'createdDate\'\r\n                                                           ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                                           : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                           ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                                           : rowData[col.field]\r\n                                                       }}\r\n                                                   </td>\r\n                                                   <td *ngIf="col.field == \'fileName\'">\r\n                                                       <a class="filelink" *ngIf="rowData.isFileFromServer == true" (click)="downloadFileUpload(rowData)">\r\n                                                           {{ rowData[col.field] }}\r\n                                                       </a>\r\n                                                       <a *ngIf="rowData.isFileFromServer == false"\r\n                                                          [href]="rowData.link"\r\n                                                          download="{{rowData.fileName}}"\r\n                                                          matTooltip="Download" matTooltipPosition="above"\r\n                                                          class="filelink">\r\n                                                           {{ rowData[col.field] }}\r\n   \r\n                                                       </a>\r\n                                                   </td>\r\n                                                   <td *ngIf="col.field == \'docMemo\'">\r\n                                                       <p class="m-0 p-0 textareaMemos" [innerHTML]="rowData[col.field]"></p>\r\n                                                   </td>\r\n                                               </ng-container>\r\n   \r\n                                               <td style="width: 70px;">\r\n\r\n                                                <span *ngIf="!currentDeletedstatus" data-toggle="modal"\r\n                                                data-target="#addDocumentDetails">\r\n                                                <a class="btn nobg"\r\n                                                        (click)="editCustomerDocument(rowData,rowIndex)" matTooltip="Edit"\r\n                                                        matTooltipPosition="above"><i class="fa fa-pencil"></i></a>\r\n                                                </span>\r\n\r\n                                                <a class="btn btn-danger nobg" *ngIf="!currentDeletedstatus" (click)="deleteAttachmentRow(rowData, rowIndex,deleteContent)"\r\n                                                    matTooltip="Delete" matTooltipPosition="above" data-target="#delete" data-toggle="modal">\r\n                                                    <i class="fa fa-trash"></i>\r\n                                                </a>\r\n\r\n                                                <a style="color: black;" class="btn btn-danger nobg" *ngIf="currentDeletedstatus"  (click)="restoreAttachmentRow(rowData, rowIndex,restoreContent)"\r\n                                                    matTooltip="Restore" matTooltipPosition="above" data-target="#restoreContent" data-toggle="modal">\r\n                                                    <i style="color: black;" class="fa fa-undo"></i>\r\n                                                </a>\r\n\r\n                                          \r\n                                         \r\n                                                <button [disabled]="!rowData.isFileFromServer" class="btn-edit set_proper_align set_position"\r\n                                                        mat-icon-button (click)="openHistory(contentAuditHist,rowData)"\r\n                                                        matTooltip="History" matTooltipPosition="above">\r\n                                                    <i class="fa fa-history"\r\n                                                        [ngClass]="{ grayColor: !rowData.isFileFromServer }"></i>\r\n                                                </button>\r\n                                                \r\n                                                  \r\n                                               </td>\r\n                                           </tr>\r\n   \r\n                                       </ng-template>\r\n                                       <ng-template pTemplate="emptymessage"\r\n                                                    let-columns\r\n                                                    *ngIf="sourceViewforDocumentList.length == 0">\r\n                                           <tr>\r\n                                               <td [attr.colspan]="10"\r\n                                                   style="color: red; font-weight: bold; text-align: left; padding-left: 30% !important;">\r\n                                                   No records found\r\n                                               </td>\r\n   \r\n                                           </tr>\r\n                                       </ng-template>\r\n   \r\n                                       <ng-template pTemplate="summary" id="footer1">\r\n                                           <label id="footer" class="footer">Total:</label>\r\n                                           <input style="width: 5%;" [(ngModel)]="table4._totalRecords" name="mainTotalRecords" disabled\r\n                                                  pInputText type="text" />\r\n                                           &nbsp;&nbsp;\r\n                                           <label id="footer" class="footer1">Pages Count:</label>\r\n                                           <input style="width: 5%;" [ngModel]="getPageCount(table4._totalRecords, pageSizeNew)"\r\n                                                  name="mainPageCount" disabled pInputText type="text" />\r\n                                       </ng-template>\r\n   \r\n                                   </p-table>\r\n                                         \r\n                                        </div>\r\n                                        </div>\r\n                              \r\n                                    <div style="margin-bottom: 20px;">\r\n                                        <button type="button"  [disabled]="!isEnableNext" class="btn btn-primary pull-right" (click)="nextClick(\'Next\')">Next</button>\r\n                                        <button *ngIf ="!isEditContent" type="button" [disabled]="nextbuttonEnable == false" class="btn btn-primary pull-right" (click)="savetrainigSection()">Save </button>\r\n                                        <button *ngIf ="isEditContent"type="button" [disabled]="disableSave" class="btn btn-primary pull-right" (click)="savetrainigSection()"> {{ !sourceEmployee.employeeTrainingId ? \'Save\' : \'Update\' }} </button>\r\n                                        <button type="button" class="btn btn-primary pull-right"  (click)="nextClick(\'Previous\')" >Previous</button>\r\n                                    </div>\r\n                            </div>\r\n                        </form> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div class="modal fade"\r\n         id="addDocumentDetails"\r\n         role="dialog"\r\n         data-backdrop="static">\r\n        <div class="modal-dialog modal-sm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button"\r\n                            class="close"\r\n                            (click)="closeMyModel(\'#addDocumentDetails\')">\r\n                        &times;\r\n                    </button>\r\n                    <h4 class="modal-title">Add Document Details</h4>\r\n                </div>\r\n                <form #addDocumentForm="ngForm" class="form-horizontal">\r\n                    <div class="modal-body">\r\n                        <div class="form-row">\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <label>Name <span class="clr-red">*</span></label>\r\n                                    <input class="form-control"\r\n                                           type="text"\r\n                                           name="name"\r\n                                           [(ngModel)]="documentInformation.docName"\r\n                                           (ngModelChange)="enableSave()"\r\n                                           required />\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Description</label>\r\n                                    <textarea class="form-control"\r\n                                              name="description"\r\n                                              [(ngModel)]="documentInformation.docDescription"\r\n                                              (ngModelChange)="enableSave()"\r\n                                              ></textarea>\r\n                                </div>                                \r\n                                <div class="form-group">\r\n                                    <span class="label">Memo </span>\r\n                                    <div class="col-sm-11">\r\n                                      <span>                    \r\n                                        <div class="form-group memo-popup-cstm mat_emo">\r\n                                          <div\r\n                                          (ngModelChange)="enableSave()"\r\n                                            [innerHTML]=" documentInformation.docMemo"\r\n                                            [matTooltip]="parsedText(documentInformation.docMemo)"\r\n                                            matTooltipPosition="above"\r\n                                            class="form-control"\r\n                                            style="width: 109%;"\r\n                                            class="text_editor_box"\r\n                                          ></div>\r\n                                        </div>\r\n                                      </span>\r\n                                    </div>\r\n                                    <div class="col-sm-1">\r\n                                      <span style="margin-left:10px">\r\n                                        <a\r\n                                        class="btn nobg"\r\n                                        data-toggle="modal"\r\n                                        (ngModelChange)="enableSave()"\r\n                                        data-target="#memo-popup-Doc"\r\n                                        (click)="onClickMemo()"\r\n                                        matTooltip="Add Memo"\r\n                                        matTooltipPosition="above">\r\n                                        <i style="color: #337ab7" class="fa fa-pencil"></i>\r\n                                        </a>\r\n                                      </span>\r\n                                    </div>\r\n                                  </div>\r\n                            </div>\r\n\r\n                            <div class="col-md-12">\r\n                               <div class="form-group">\r\n                                    <label style="float: none;">Attachments <span class="clr-red">*</span></label>\r\n                                    <p-fileUpload #fileUploadInput\r\n                                                  name="fileupload[]"\r\n                                                  multiple="multiple"\r\n                                                  [showCancelButton]="false"\r\n                                                  [showUploadButton]="false"\r\n                                                  customUpload="true"\r\n                                                  (onSelect)="fileUpload($event)"\r\n                                                  (onRemove)="removeFile($event)"></p-fileUpload>\r\n                                </div>\r\n                            </div>\r\n                            <div class="table-responsive table-overflow"\r\n                                 *ngIf="isEditButton">\r\n                                <h4 class="panel-title" style="padding-left: 10px;">\r\n                                    Attachment Details:\r\n                                </h4>\r\n\r\n                                <table class="table-responsive ptable-cus-pma">\r\n                                    <tr>\r\n                                        <th>File Name</th>\r\n                                        <th>Download</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{{sourceViewforDocument.fileName}}</td>\r\n                                        <td>\r\n                                            <a *ngIf="sourceViewforDocument.attachmentDetailId > 0" (click)="downloadFileUpload(sourceViewforDocument)"\r\n                                               matTooltip="Download" matTooltipPosition="above"\r\n                                               class="btn nobg btn-cstm">\r\n                                                <span><i class="fa fa-download"></i></span>\r\n                                            </a>\r\n                                            <a *ngIf="sourceViewforDocument.attachmentDetailId==0"\r\n                                               [href]="sourceViewforDocument.link"\r\n                                               download="{{sourceViewforDocument.fileName}}"\r\n                                               matTooltip="Download" matTooltipPosition="above"\r\n                                               class="filelink">\r\n                                                <span><i class="fa fa-download"></i></span>\r\n\r\n                                            </a>\r\n                                        </td>\r\n\r\n                                    </tr>\r\n                                </table>                              \r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div class="modal-footer">\r\n                        <button type="button"\r\n                                *ngIf="!isEditButton"\r\n                                class="btn btn-primary pull-right submit-btn"\r\n                                style="text-align:center"\r\n                                (click)="addDocumentInformation(\'#addDocumentDetails\',documentInformation)"\r\n                                [disabled]="!addDocumentForm.valid ||  disableFileAttachmentSubmit==false">\r\n                            Add\r\n                        </button>\r\n                        <button type="button"\r\n                                *ngIf="isEditButton"\r\n                                class="btn btn-primary pull-right submit-btn"\r\n                                style="text-align:center"\r\n                                (click)="addDocumentInformation(\'#addDocumentDetails\',documentInformation)"\r\n                                [disabled]="!addDocumentForm.valid || disableSave">\r\n                            Update\r\n                        </button>\r\n                        <button type="button"\r\n                                class="btn btn-danger"\r\n                                (click)="dismissDocumentPopupModel(\'#addDocumentDetails\'); closeMyModel(\'#addDocumentDetails\')">\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                       \r\n                </form>\r\n           \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #contentAuditHist\r\n                 let-c="close"\r\n                 let-d="dismiss"\r\n                 style="width:auto"\r\n                 data-backdrop="static">\r\n        <div class="modal-header">\r\n            <h4 class="modal-title">History of  Documents</h4>\r\n            <button type="button"\r\n                    class="close"\r\n                    aria-label="Close"\r\n                    (click)="dismissModelNew()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n        </div>\r\n        <div class="modal-body">\r\n            <div class="table-responsive">\r\n                <table class="table table-bordered">\r\n                    <thead>\r\n                        <tr>\r\n                            <th> Name</th>\r\n                            <th>Description</th>\r\n                            <th>Memo</th>\r\n                            <th>File Name</th>\r\n                            <th>Created Date</th>\r\n                            <th>Created By</th>\r\n                            <th>Updated Date</th>\r\n                            <th>Updated By</th>\r\n                            <th>Is Deleted</th>\r\n                           \r\n                           \r\n                            \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor="let audit of sourceViewforDocumentAudit"></tr>\r\n                        <tr *ngFor="let audit of sourceViewforDocumentAudit; let i = index">\r\n                            <td [ngStyle]="{\r\n                color: getColorCodeForHistory(i, \'docName\', audit.docName)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                                {{ audit.docName }}\r\n                            </td>\r\n                            <td [ngStyle]="{\r\n                color: getColorCodeForHistory(\r\n                  i,\r\n                  \'docDescription\',\r\n                  audit.docDescription\r\n                )\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                                {{ audit.docDescription }}\r\n                            </td>\r\n                            <td [ngStyle]="{\r\n                color: getColorCodeForHistory(i, \'docMemo\', audit.docMemo)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n              <p class="m-0 p-0" [innerHTML]="audit.docMemo"></p> \r\n                            </td>\r\n                            \r\n                            <td [ngStyle]="{\r\n                color: getColorCodeForHistory(i, \'fileName\', audit.fileName)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                                {{ audit.fileName }}\r\n                            </td>    \r\n                            <td>{{ audit.createdDate | date: \'dd-MM-yyyy h:mm a \' }}</td>\r\n                            <td>{{ audit.createdBy }}</td>\r\n                            <td>{{ audit.updatedDate | date: \'dd-MM-yyyy h:mm a \' }}</td>\r\n                            <td>{{ audit.updatedBy }}</td>\r\n                            <td> <input type="checkbox"  name="isDeleted" [(ngModel)]=" audit.isDeleted" disabled></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-danger" (click)="dismissModelNew()">\r\n                Close\r\n            </button>\r\n        </div>\r\n    </ng-template>\r\n\r\n\r\n    <ng-template #deleteContent\r\n                 let-c="close"\r\n                 let-d="dismiss"\r\n                 data-backdrop="static">\r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n            <button type="button"\r\n                    class="close"\r\n                    aria-label="Close"\r\n                    (click)="dismissModelNew()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n        </div>\r\n\r\n        <div class="modal-body">\r\n            <strong>\r\n                Document Name:\r\n                <span class="new-label">{{ selectedRowForDelete.docName }}</span>\r\n            </strong>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button"\r\n                    class="btn btn-success"\r\n                    (click)="deleteItemAndCloseModelNew()">\r\n                Yes\r\n            </button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModelNew()">\r\n                No\r\n            </button>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template #restoreContent\r\n                 let-c="close"\r\n                 let-d="dismiss"\r\n                 data-backdrop="static">\r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n            <button type="button"\r\n                    class="close"\r\n                    aria-label="Close"\r\n                    (click)="dismissModelNew()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n        </div>\r\n\r\n        <div class="modal-body">\r\n            <strong>\r\n                Document Name:\r\n                <span class="new-label">{{ selectedRowForDelete.docName }}</span>\r\n            </strong>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button"\r\n                    class="btn btn-success"\r\n                    (click)="restoreItemAndCloseModel()">\r\n                Yes\r\n            </button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModelNew()">\r\n                No\r\n            </button>\r\n        </div>\r\n    </ng-template>\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    <div class="pull-right"> &copy; 2018 <a>PAS</a> </div>\r\n</div>\r\n\r\n<ng-template #tabRedirectConfirmationModal3 let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n      <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">&times;</button>\r\n      <h4 class="modal-title">Confirmation</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <h6 style="text-align: left;">\r\n            Do you want to Save changes and Continue ?\r\n        </h6>\r\n    </div>\r\n    <div class="modal-footer">\r\n  \r\n      <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="redirectToTabWithoutSave()">No</button>\r\n      <button type="button" class="btn btn-primary"  [disabled]="(!empform.touched)" data-dismiss="modal" (click)="redirectToTab()">Yes</button>\r\n    </div>\r\n  </ng-template>\r\n  <div class="modal fade" id="memo-popup-Doc" style="z-index: 15000 !important;"  role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal">\r\n            &times;\r\n          </button>\r\n          <h4 class="modal-title">Edit Memo</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n          <table class="table table-bordered table-fixed workflow-table-material">\r\n            <thead>\r\n              <th style="color: #fff;">Memo</th>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td style="white-space: inherit">\r\n                  <p-editor\r\n                   spellcheck="true"\r\n                   (ngModelChange)="enableSaveMemo()"\r\n                    [(ngModel)]="memoPopupContent"\r\n                    [style]="{ height: \'320px\' }"\r\n                    name="memoPopupContent"\r\n                    required\r\n                  ></p-editor>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <div style="float: right;">\r\n            <button\r\n              type="button"\r\n              class="btn btn-primary"\r\n              style="padding: 6px 12px !important; margin-top: 10px;"\r\n              (click)="onClickPopupSave()" [disabled]="disableSaveMemo">\r\n              Save\r\n            </button>\r\n            <button\r\n              type="button"\r\n              class="btn btn-danger"\r\n              style="padding: 6px 12px !important; margin-top: 10px;"\r\n              (click)="closeMemoModel()" >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class="preloader"  *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div>\t\t\t\r\n        </div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n  </div>\r\n  <app-spinner  *ngIf="isSpinnerVisible"></app-spinner>\r\n'},U3fk:function(e,t,n){"use strict";n.r(t),t.default='\x3c!-- <ng-container *ngIf="gridData[0] && gridData[0].data && gridData[0].isCheckboxNotDisable">\r\n<ul class="tree">\r\n    <li *ngFor="let structure of gridData">\r\n        <span class="caret" [innerHTML]="structure.data.name"></span>\r\n        <input (click)="storeLegalEntity(structure,structure.data.name)" \r\n        [checked]="checkLegalEntityExist(structure.data.managementStructureId)" type="checkbox" \r\n        class="radio" value="1" [id]="structure.data.managementStructureId" \r\n        [name]="structure.data.managementStructureId" />\r\n        <app-tree-structure *ngIf="structure.children != undefined" \r\n        [gridData]="structure.children"></app-tree-structure>\r\n    </li>\r\n</ul>\r\n</ng-container>\r\n\r\n<ng-container *ngIf="gridData[0] && gridData[0].data && !gridData[0].isCheckboxNotDisable">\r\n    <ul class="tree">\r\n        <li *ngFor="let structure of gridData">\r\n            <span class="caret" [innerHTML]="structure.data.name"></span>\r\n            <input (click)="storeLegalEntity(structure,structure.data.name)" \r\n            [checked]="checkLegalEntityExist(structure.data.managementStructureId)" \r\n            type="checkbox" class="radio" value="1" \r\n            [id]="structure.data.managementStructureId" \r\n            [name]="structure.data.managementStructureId" disabled/>\r\n            <app-tree-structure *ngIf="structure.children != undefined" [gridData]="structure.children"></app-tree-structure>\r\n        </li>\r\n    </ul>\r\n</ng-container> --\x3e\r\n\r\n<ng-container *ngIf="gridData[0] && gridData[0].data && gridData[0].isCheckboxNotDisable">\r\n    <ul class="tree">\r\n        <li *ngFor="let structure of gridData">\r\n            <span class="caret" [innerHTML]="structure.data.fullName"></span>           \r\n            &nbsp;\r\n            <input [disabled]="gridData[0].isCheckboxNotDisable" (click)="storeLegalEntity(structure,structure.data.name)" \r\n            [checked]="checkLegalEntityExist(structure.data.managementStructureId)" type="checkbox" \r\n            class="radio" value="1" [id]="structure.data.managementStructureId" \r\n            [name]="structure.data.managementStructureId" />\r\n            <app-tree-structure *ngIf="structure.children != undefined" \r\n            [gridData]="structure.children"></app-tree-structure>\r\n        </li>\r\n    </ul>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf="gridData[0] && gridData[0].data && !gridData[0].isCheckboxNotDisable">\r\n        <ul class="tree">\r\n            <li *ngFor="let structure of gridData">\r\n                <span class="caret" [innerHTML]="structure.data.fullName"></span>           \r\n                &nbsp;\r\n                <input  (click)="storeLegalEntity(structure,structure.data.name)" \r\n                [checked]="checkLegalEntityExist(structure.data.managementStructureId)" type="checkbox" \r\n                class="radio" value="1" [id]="structure.data.managementStructureId" \r\n                [name]="structure.data.managementStructureId" />\r\n                <app-tree-structure *ngIf="structure.children != undefined" \r\n                [gridData]="structure.children"></app-tree-structure>\r\n            </li>\r\n        </ul>\r\n    </ng-container>\r\n    <div class="preloader"  *ngIf="isSpinnerVisible">\r\n        <div class="loading">\r\n            <div class="lds-roller"><div>\t\t\t\r\n            </div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    </div>\r\n    <app-spinner  *ngIf="isSpinnerVisible"></app-spinner>'},"UPO+":function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var i=n("mrSG"),r=n("8Y7J"),a=n("s7LF"),s=n("SVse"),o=function e(t){_classCallCheck(this,e),"string"!=typeof t&&"number"!=typeof t||(this.id=this.text=t,this.isDisabled=!1),"object"==typeof t&&(this.id=t.id,this.text=t.text,this.isDisabled=t.isDisabled)},l=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"transform",value:function(e,t){var n=this;return e&&t?e.filter((function(e){return n.applyFilter(e,t)})):e}},{key:"applyFilter",value:function(e,t){return"string"==typeof e.text&&"string"==typeof t.text?!(t.text&&e.text&&-1===e.text.toLowerCase().indexOf(t.text.toLowerCase())):!(t.text&&e.text&&-1===e.text.toString().toLowerCase().indexOf(t.text.toString().toLowerCase()))}}]),e}();l=Object(i.b)([Object(r.Pipe)({name:"multiSelectFilter",pure:!1})],l);var c={provide:a.NG_VALUE_ACCESSOR,useExisting:Object(r.forwardRef)((function(){return p})),multi:!0},d=function(){},p=function(){function e(t){_classCallCheck(this,e),this.listFilterPipe=t,this._data=[],this.selectedItems=[],this.isDropdownOpen=!0,this._placeholder="Select",this._sourceDataType=null,this._sourceDataFields=[],this.filter=new o(this.data),this.defaultSettings={singleSelection:!1,idField:"id",textField:"text",disabledField:"isDisabled",enableCheckAll:!0,selectAllText:"Select All",unSelectAllText:"UnSelect All",allowSearchFilter:!1,limitSelection:-1,clearSearchFilter:!0,maxHeight:197,itemsShowLimit:999999999999,searchPlaceholderText:"Search",noDataAvailablePlaceholderText:"No data available",closeDropDownOnSelection:!1,showSelectedItemsAtTop:!1,defaultOpen:!1,allowRemoteDataSearch:!1},this.disabled=!1,this.onFilterChange=new r.EventEmitter,this.onDropDownClose=new r.EventEmitter,this.onSelect=new r.EventEmitter,this.onDeSelect=new r.EventEmitter,this.onSelectAll=new r.EventEmitter,this.onDeSelectAll=new r.EventEmitter,this.onTouchedCallback=d,this.onChangeCallback=d}return _createClass(e,[{key:"onFilterTextChange",value:function(e){this.onFilterChange.emit(e)}},{key:"onItemClick",value:function(e,t){if(this.disabled||t.isDisabled)return!1;var n=this.isSelected(t),i=-1===this._settings.limitSelection||this._settings.limitSelection>0&&this.selectedItems.length<this._settings.limitSelection;n?this.removeSelected(t):i&&this.addSelected(t),this._settings.singleSelection&&this._settings.closeDropDownOnSelection&&this.closeDropdown()}},{key:"writeValue",value:function(e){var t=this;if(null!=e&&e.length>0)if(this._settings.singleSelection)try{if(e.length>=1){var n=e[0];this.selectedItems=[new o("string"==typeof n||"number"==typeof n?n:{id:n[this._settings.idField],text:n[this._settings.textField],isDisabled:n[this._settings.disabledField]})]}}catch(r){}else{var i=e.map((function(e){return new o("string"==typeof e||"number"==typeof e?e:{id:e[t._settings.idField],text:e[t._settings.textField],isDisabled:e[t._settings.disabledField]})}));this._settings.limitSelection>0?this.selectedItems=i.splice(0,this._settings.limitSelection):this.selectedItems=i}else this.selectedItems=[];this.onChangeCallback(e)}},{key:"registerOnChange",value:function(e){this.onChangeCallback=e}},{key:"registerOnTouched",value:function(e){this.onTouchedCallback=e}},{key:"onTouched",value:function(){this.closeDropdown(),this.onTouchedCallback()}},{key:"trackByFn",value:function(e,t){return t.id}},{key:"isSelected",value:function(e){var t=!1;return this.selectedItems.forEach((function(n){e.id===n.id&&(t=!0)})),t}},{key:"isLimitSelectionReached",value:function(){return this._settings.limitSelection===this.selectedItems.length}},{key:"isAllItemsSelected",value:function(){var e=this.listFilterPipe.transform(this._data,this.filter),t=e.filter((function(e){return e.isDisabled})).length;return!((!this.data||0===this.data.length)&&this._settings.allowRemoteDataSearch)&&e.length===this.selectedItems.length+t}},{key:"showButton",value:function(){return!(this._settings.singleSelection||this._settings.limitSelection>0)}},{key:"itemShowRemaining",value:function(){return this.selectedItems.length-this._settings.itemsShowLimit}},{key:"addSelected",value:function(e){this._settings.singleSelection?(this.selectedItems=[],this.selectedItems.push(e)):this.selectedItems.push(e),this.onChangeCallback(this.emittedValue(this.selectedItems)),this.onSelect.emit(this.emittedValue(e))}},{key:"removeSelected",value:function(e){var t=this;this.selectedItems.forEach((function(n){e.id===n.id&&t.selectedItems.splice(t.selectedItems.indexOf(n),1)})),this.onChangeCallback(this.emittedValue(this.selectedItems)),this.onDeSelect.emit(this.emittedValue(e))}},{key:"emittedValue",value:function(e){var t=this,n=[];if(Array.isArray(e))e.map((function(e){n.push(t.objectify(e))}));else if(e)return this.objectify(e);return n}},{key:"objectify",value:function(e){if("object"===this._sourceDataType){var t={};return t[this._settings.idField]=e.id,t[this._settings.textField]=e.text,this._sourceDataFields.includes(this._settings.disabledField)&&(t[this._settings.disabledField]=e.isDisabled),t}return"number"===this._sourceDataType?Number(e.id):e.text}},{key:"toggleDropdown",value:function(e){e.preventDefault(),this.disabled&&this._settings.singleSelection||(this._settings.defaultOpen=!this._settings.defaultOpen,this._settings.defaultOpen||this.onDropDownClose.emit())}},{key:"closeDropdown",value:function(){this._settings.defaultOpen=!1,this._settings.clearSearchFilter&&(this.filter.text=""),this.onDropDownClose.emit()}},{key:"toggleSelectAll",value:function(){if(this.disabled)return!1;this.isAllItemsSelected()?(this.selectedItems=[],this.onDeSelectAll.emit(this.emittedValue(this.selectedItems))):(this.selectedItems=this.listFilterPipe.transform(this._data,this.filter).filter((function(e){return!e.isDisabled})).slice(),this.onSelectAll.emit(this.emittedValue(this.selectedItems))),this.onChangeCallback(this.emittedValue(this.selectedItems))}},{key:"getFields",value:function(e){var t=[];if("object"!=typeof e)return t;for(var n in e)t.push(n);return t}},{key:"placeholder",set:function(e){this._placeholder=e||"Select"}},{key:"settings",set:function(e){this._settings=e?Object.assign(this.defaultSettings,e):Object.assign(this.defaultSettings)}},{key:"data",set:function(e){var t=this;if(e){var n=e[0];this._sourceDataType=typeof n,this._sourceDataFields=this.getFields(n),this._data=e.map((function(e){return new o("string"==typeof e||"number"==typeof e?e:{id:e[t._settings.idField],text:e[t._settings.textField],isDisabled:e[t._settings.disabledField]})}))}else this._data=[]}}]),e}();Object(i.b)([Object(r.Input)(),Object(i.d)("design:type",String),Object(i.d)("design:paramtypes",[String])],p.prototype,"placeholder",null),Object(i.b)([Object(r.Input)(),Object(i.d)("design:type",Object)],p.prototype,"disabled",void 0),Object(i.b)([Object(r.Input)(),Object(i.d)("design:type",Object),Object(i.d)("design:paramtypes",[Object])],p.prototype,"settings",null),Object(i.b)([Object(r.Input)(),Object(i.d)("design:type",Array),Object(i.d)("design:paramtypes",[Array])],p.prototype,"data",null),Object(i.b)([Object(r.Output)("onFilterChange"),Object(i.d)("design:type",r.EventEmitter)],p.prototype,"onFilterChange",void 0),Object(i.b)([Object(r.Output)("onDropDownClose"),Object(i.d)("design:type",r.EventEmitter)],p.prototype,"onDropDownClose",void 0),Object(i.b)([Object(r.Output)("onSelect"),Object(i.d)("design:type",r.EventEmitter)],p.prototype,"onSelect",void 0),Object(i.b)([Object(r.Output)("onDeSelect"),Object(i.d)("design:type",r.EventEmitter)],p.prototype,"onDeSelect",void 0),Object(i.b)([Object(r.Output)("onSelectAll"),Object(i.d)("design:type",r.EventEmitter)],p.prototype,"onSelectAll",void 0),Object(i.b)([Object(r.Output)("onDeSelectAll"),Object(i.d)("design:type",r.EventEmitter)],p.prototype,"onDeSelectAll",void 0),Object(i.b)([Object(r.HostListener)("blur"),Object(i.d)("design:type",Function),Object(i.d)("design:paramtypes",[]),Object(i.d)("design:returntype",void 0)],p.prototype,"onTouched",null),p=Object(i.b)([Object(r.Component)({selector:"ng-multiselect-dropdown",template:'<div tabindex="0" (blur)="onTouched()" class="multiselect-dropdown" (clickOutside)="closeDropdown()">\n  <div [class.disabled]="disabled">\n    <span tabindex="-1" class="dropdown-btn" (click)="toggleDropdown($event)">\n      <span *ngIf="selectedItems.length == 0">{{_placeholder}}</span>\n      <span class="selected-item" *ngFor="let item of selectedItems;trackBy: trackByFn;let k = index" [hidden]="k > _settings.itemsShowLimit-1">\n        {{item.text}}\n        <a style="padding-top:2px;padding-left:2px;color:white" (click)="onItemClick($event,item)">x</a>\n      </span>\n      <span [ngClass]="{ \'dropdown-multiselect--active\': _settings.defaultOpen }" style="float:right !important;padding-right:4px">\n        <span style="padding-right: 6px;" *ngIf="itemShowRemaining()>0">+{{itemShowRemaining()}}</span>\n        <span class="dropdown-multiselect__caret"></span>\n      </span>\n    </span>\n  </div>\n  <div class="dropdown-list" [hidden]="!_settings.defaultOpen">\n    <ul class="item1">\n      <li (click)="toggleSelectAll()" *ngIf="(_data.length > 0 || _settings.allowRemoteDataSearch) && !_settings.singleSelection && _settings.enableCheckAll && _settings.limitSelection===-1" class="multiselect-item-checkbox" style="border-bottom: 1px solid #ccc;padding:10px">\n        <input type="checkbox" aria-label="multiselect-select-all" [checked]="isAllItemsSelected()" [disabled]="disabled || isLimitSelectionReached()" />\n        <div>{{!isAllItemsSelected() ? _settings.selectAllText : _settings.unSelectAllText}}</div>\n      </li>\n      <li class="filter-textbox" *ngIf="(_data.length>0 || _settings.allowRemoteDataSearch) && _settings.allowSearchFilter">\n        <input type="text" aria-label="multiselect-search" [readOnly]="disabled" [placeholder]="_settings.searchPlaceholderText" [(ngModel)]="filter.text" (ngModelChange)="onFilterTextChange($event)">\n      </li>\n    </ul>\n    <ul class="item2" [style.maxHeight]="_settings.maxHeight+\'px\'">\n      <li *ngFor="let item of _data | multiSelectFilter:filter; let i = index;" (click)="onItemClick($event,item)" class="multiselect-item-checkbox">\n        <input type="checkbox" [attr.aria-label]="item.text" [checked]="isSelected(item)" [disabled]="disabled || (isLimitSelectionReached() && !isSelected(item)) || item.isDisabled" />\n        <div>{{item.text}}</div>\n      </li>\n      <li class=\'no-data\' *ngIf="_data.length == 0 && !_settings.allowRemoteDataSearch">\n        <h5>{{_settings.noDataAvailablePlaceholderText}}</h5>\n      </li>\n    </ul>\n  </div>\n</div>\n',providers:[c],changeDetection:r.ChangeDetectionStrategy.OnPush,styles:['.multiselect-dropdown{position:relative;width:100%;font-size:inherit;font-family:inherit}.multiselect-dropdown .dropdown-btn{display:inline-block;border:1px solid #adadad;width:100%;padding:6px 12px;margin-bottom:0;font-weight:400;line-height:1.52857143;text-align:left;vertical-align:middle;cursor:pointer;background-image:none;border-radius:4px}.multiselect-dropdown .dropdown-btn .selected-item{border:1px solid #337ab7;margin-right:4px;background:#337ab7;padding:0 5px;color:#fff;border-radius:2px;float:left}.multiselect-dropdown .dropdown-btn .selected-item a{text-decoration:none}.multiselect-dropdown .dropdown-btn .selected-item:hover{box-shadow:1px 1px #959595}.multiselect-dropdown .dropdown-btn .dropdown-multiselect__caret{line-height:16px;display:block;position:absolute;box-sizing:border-box;width:40px;height:38px;right:1px;top:0;padding:4px 8px;margin:0;text-decoration:none;text-align:center;cursor:pointer;transition:transform .2s}.multiselect-dropdown .dropdown-btn .dropdown-multiselect__caret:before{position:relative;right:0;top:65%;color:#999;margin-top:4px;border-style:solid;border-width:8px 8px 0;border-color:#999 transparent;content:""}.multiselect-dropdown .dropdown-btn .dropdown-multiselect--active .dropdown-multiselect__caret{transform:rotateZ(180deg)}.multiselect-dropdown .disabled>span{background-color:#eceeef}.dropdown-list{position:absolute;padding-top:6px;width:100%;z-index:9999;border:1px solid #ccc;border-radius:3px;background:#fff;margin-top:10px;box-shadow:0 1px 5px #959595}.dropdown-list ul{padding:0;list-style:none;overflow:auto;margin:0}.dropdown-list li{padding:6px 10px;cursor:pointer;text-align:left}.dropdown-list .filter-textbox{border-bottom:1px solid #ccc;position:relative;padding:10px}.dropdown-list .filter-textbox input{border:0;width:100%;padding:0 0 0 26px}.dropdown-list .filter-textbox input:focus{outline:0}.multiselect-item-checkbox:hover{background-color:#e4e3e3}.multiselect-item-checkbox input[type=checkbox]{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.multiselect-item-checkbox input[type=checkbox]:focus+div:before,.multiselect-item-checkbox input[type=checkbox]:hover+div:before{border-color:#337ab7;background-color:#f2f2f2}.multiselect-item-checkbox input[type=checkbox]:active+div:before{transition-duration:0s}.multiselect-item-checkbox input[type=checkbox]+div{position:relative;padding-left:2em;vertical-align:middle;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;margin:0;color:#000}.multiselect-item-checkbox input[type=checkbox]+div:before{box-sizing:content-box;content:"";color:#337ab7;position:absolute;top:50%;left:0;width:14px;height:14px;margin-top:-9px;border:2px solid #337ab7;text-align:center;transition:.4s}.multiselect-item-checkbox input[type=checkbox]+div:after{box-sizing:content-box;content:"";position:absolute;transform:scale(0);transform-origin:50%;transition:transform .2s ease-out;background-color:transparent;top:50%;left:4px;width:8px;height:3px;margin-top:-4px;border-style:solid;border-color:#fff;border-width:0 0 3px 3px;-o-border-image:none;border-image:none;transform:rotate(-45deg) scale(0)}.multiselect-item-checkbox input[type=checkbox]:disabled+div:before{border-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:disabled:focus+div:before .multiselect-item-checkbox input[type=checkbox]:disabled:hover+div:before{background-color:inherit}.multiselect-item-checkbox input[type=checkbox]:disabled:checked+div:before{background-color:#ccc}.multiselect-item-checkbox input[type=checkbox]:checked+div:after{content:"";transition:transform .2s ease-out;transform:rotate(-45deg) scale(1)}.multiselect-item-checkbox input[type=checkbox]:checked+div:before{-webkit-animation:.2s ease-in borderscale;animation:.2s ease-in borderscale;background:#337ab7}@-webkit-keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}@keyframes borderscale{50%{box-shadow:0 0 0 2px #337ab7}}']}),Object(i.d)("design:paramtypes",[l])],p);var m,u=function(){function e(t){_classCallCheck(this,e),this._elementRef=t,this.clickOutside=new r.EventEmitter}return _createClass(e,[{key:"onClick",value:function(e,t){t&&(this._elementRef.nativeElement.contains(t)||this.clickOutside.emit(e))}}]),e}();Object(i.b)([Object(r.Output)(),Object(i.d)("design:type",Object)],u.prototype,"clickOutside",void 0),Object(i.b)([Object(r.HostListener)("document:click",["$event","$event.target"]),Object(i.d)("design:type",Function),Object(i.d)("design:paramtypes",[MouseEvent,HTMLElement]),Object(i.d)("design:returntype",void 0)],u.prototype,"onClick",null),u=Object(i.b)([Object(r.Directive)({selector:"[clickOutside]"}),Object(i.d)("design:paramtypes",[r.ElementRef])],u);var h=m=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"forRoot",value:function(){return{ngModule:m}}}]),e}();h=m=Object(i.b)([Object(r.NgModule)({imports:[s.CommonModule,a.FormsModule],declarations:[p,u,l],providers:[l],exports:[p]})],h)},fGjq:function(e,t,n){"use strict";n.r(t),t.default='<div [@fadeInOut] class="page-content">\r\n  <div class="card padding-10">\r\n      <div class="right_col" role="main">\r\n          <div class="x_panel">\r\n              <div class="x_content">\r\n\r\n                  <div class="col-md-12 shadow-Box">\r\n                      <div class="col-md-4" >\r\n                          <p class="fs12">\r\n                              <label class="control-label labels-font-header" style="width: auto;">Emp First Name: </label>\r\n                              <span class="span-header-red" style="text-transform: capitalize" *ngIf="firstName"> {{firstName }} </span> </p>\r\n                      </div>\r\n                      <div class="col-md-4">\r\n                          <p class="fs12">\r\n                              <label class="control-label labels-font-header" style="width: auto;">Emp Last Name: </label>\r\n                              <span class="span-header-red" style="text-transform: capitalize" *ngIf="lastName"> {{lastName }} </span> </p>\r\n                      </div>\r\n                      <div  class="col-md-4">\r\n                          <p class="fs12">\r\n                              <label class="control-label labels-font-header" style="width: auto;">Emp Id: </label>\r\n                              <span class="span-header-red" style="text-transform: capitalize" *ngIf="empId"> {{empcode}} </span></p>\r\n                      </div>\r\n                  </div>\r\n                  <form #empform="ngForm" class="form-horizontal add-custustomer">\r\n                      <div class="card">\r\n                          <div class="card-header">                           \r\n                              <div class="card-header bg-primary">\r\n                                  <h4 class="new-card-heading">                                     \r\n                                      Certification Information\r\n                                  </h4>\r\n                              </div>\r\n                              <div class="clear"></div>\r\n                              <hr />\r\n                          </div>\r\n                          <div class="card-body">\r\n                              <div class="form-row">\r\n                                  <div class="col-md-3">\r\n                                      <div class="form-group">\r\n                                          <label>Certification #</label>\r\n                                          <input type="text" class="form-control" name="certificationNumber" (ngModelChange)="enableSave()" [(ngModel)]="sourceEmployee.certificationNumber">\r\n                                      </div>\r\n                                      <div class="form-group">\r\n                                          <label>\r\n                                              Certification Type                                              \r\n                                          </label>\r\n                                          \x3c!-- <select class="form-control" name="employeeCertificationTypeId" (ngModelChange)="enableSave()" [(ngModel)]="sourceEmployee.employeeCertificationTypeId">\r\n                                            <option value="0">-- Select --</option>  \r\n                                             <ng-container *ngFor="let certificationtype of allCertification">                                               \r\n                                                <option [ngValue]="certificationtype.employeeCertificationTypeId">{{certificationtype.description}}</option>\r\n                                              </ng-container>\r\n                                          </select> --\x3e\r\n\r\n                                          <select name="employeeCertificationTypeId" (ngModelChange)="enableSave()" class="form-control" [(ngModel)]="sourceEmployee.employeeCertificationTypeId">\r\n                                            <option value="0"> -- Select --</option>\r\n                                            <ng-container *ngFor="let certificationtype of allCertification">\r\n                                                <option [ngValue]="certificationtype.value">{{certificationtype.label}}</option>\r\n                                            </ng-container>\r\n                                          </select>\r\n\r\n                                      </div>\r\n                                      <div class="form-group">\r\n                                          <label>Certifying Institution</label>\r\n                                          <input class="form-control" type="text" name="certifyingInstitution" (ngModelChange)="enableSave()" [(ngModel)]="sourceEmployee.certifyingInstitution">\r\n                                      </div>\r\n\r\n                                  </div>\r\n                                  <div class="col-md-3">\r\n                                      <div class="form-group">\r\n                                          <label>Certification Date</label>\r\n                                          <p-calendar [showIcon]="true" [maxDate]="today" \r\n                                          [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                           name="certificationDate" (ngModelChange)="changeDateEv(sourceEmployee.certificationDate)"\r\n                                          (ngModelChange)="enableSave()" [(ngModel)]="sourceEmployee.certificationDate"  ></p-calendar>\r\n                                      </div>\r\n                                      <div class="form-group">                                       \r\n                                          <div>\r\n                                              <label>\r\n                                                  <input type="checkbox" name="isCertificationInForce" (ngModelChange)="enableSave()" [(ngModel)]="sourceEmployee.isCertificationInForce">\r\n                                                   Certification In Force?\r\n                                              </label>\r\n                                          </div>\r\n                                      </div>\r\n                                      <div class="form-group">                                         \r\n                                          <div>\r\n                                              <label>\r\n                                                  <input type="checkbox" name="isExpirationDate" (ngModelChange)="enableSave()" [(ngModel)]="sourceEmployee.isExpirationDate">\r\n                                                  Expiration Date\r\n                                              </label>\r\n                                          </div>\r\n                                      </div>\r\n                                       <div class="form-group" *ngIf="sourceEmployee.isExpirationDate">\r\n                                        \x3c!-- <div class="form-group"> --\x3e\r\n                                           <label>Certification Expiration Date</label>                                         \r\n                                          <p-calendar [showIcon]="true"  name="expirationDate"\r\n                                          [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                           [(minDate)]="sourceEmployee.certificationDate && sourceEmployee.certificationDate != undefined && sourceEmployee.certificationDate != null  ? sourceEmployee.certificationDate : today"   (ngModelChange)="enableSave()"  [(ngModel)]="sourceEmployee.expirationDate"></p-calendar>\r\n                                        </div>\r\n                                  </div>                                \r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                      <div class=" form-group" style=" margin-top:1%;">\r\n                      <button type="button" class="btn btn-primary pull-right" (click)="nextClick(\'Next\')">Next </button>\r\n                      <button *ngIf="!isEditContent" \r\n                       type="button" class="btn btn-primary pull-right" (click)="saveCertificateData()">Save  </button>\r\n                      <button *ngIf="isEditContent" \r\n                       [disabled]="!empform.valid || !enableSaveBtn " type="button" class="btn btn-primary pull-right" (click)="saveCertificateData()"> {{!sourceEmployee.employeeCertificationId ? \'Save\' : \'Update\' }}</button>\r\n                      <button type="button" class="btn btn-primary pull-right" (click)="nextClick(\'Previous\')">Previous</button>\r\n                      </div>\r\n                  </form>\r\n             </div>\r\n          </div>\r\n      </div>    \r\n    <div class="pull-right"> &copy; 2018 <a>PAS</a> </div>\r\n</div>\r\n</div>\r\n\r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title" *ngIf="isEditMode">Edit Certification Type</h4>\r\n        <h4 class="modal-title" *ngIf="!isEditMode">Add Certification Type</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="saveCertification()">\r\n    <div class="modal-body">\r\n        \r\n            <div class="form-group">\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label class="control-label">Certification Type <span class="clr-red">*</span></label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                            <p-autoComplete class="p-autoComplete-ctsm" [(ngModel)]="description" [ngModelOptions]="{standalone: true}" (onKeyUp)=certificationHandlerHandler($event) (onSelect)="certificationType($event)" [suggestions]="certificationtypeCollection" (completeMethod)="filtercertificationType($event)" [size]="30"\r\n                                        [minLength]="1" [dropdown]="true">\r\n                            <ng-template let-description pTemplate="item">\r\n                                <div class="ui-helper-clearfix">{{description}}</div>\r\n                            </ng-template>\r\n                        </p-autoComplete>\r\n                        <div *ngIf="disablesave" class="clr-red">Entry Already Exists</div>                 \r\n                    </div>\r\n                </div>\r\n\r\n\r\n                \x3c!-- <label for="name" class="control-label">Certification Type<span class="clr-red">*</span></label>\r\n\r\n                <div class="col-sm-7">\r\n                    <div class="inner-addon right-addon inline-block">\r\n\r\n                        <p-autoComplete [(ngModel)]="description" [ngModelOptions]="{standalone: true}" (onKeyUp)=certificationHandlerHandler($event) (onSelect)="certificationType($event)" [suggestions]="certificationtypeCollection" (completeMethod)="filtercertificationType($event)" [size]="30"\r\n                                        [minLength]="1" [dropdown]="true">\r\n                            <ng-template let-description pTemplate="item">\r\n                                <div class="ui-helper-clearfix">{{description}}</div>\r\n                            </ng-template>\r\n                        </p-autoComplete>\r\n                        <div *ngIf="disablesave" class="clr-red">Entry Already Exists</div>\r\n                    </div>\r\n                </div>\r\n                <div class="clear"></div> --\x3e\r\n            </div>\r\n            <div class="form-group">\r\n                <div class="col-sm-6">\r\n                    <div class="checkbox-cstm">\r\n                        <label>\r\n                                <input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input" checked id="isActive" [(ngModel)]="sourceEmployee.isActive">\r\n                            <span class="cr">\r\n                                <i class="cr-icon pi pi-check"></i>\r\n                            </span>\r\n                            Active\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            \x3c!-- <div class="form-group">\r\n                <div class="col-sm-6">\r\n                    <label class="form-check-label" for="isActive">\r\n                        <input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input" checked id="isActive" [(ngModel)]="sourceEmployee.isActive"> Active\r\n                    </label>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div> --\x3e                    \r\n    </div>\r\n    <div class="modal-footer">\r\n        <button class="btn btn-primary pull-right" [disabled]="disablesave" (click)="saveCertification()">Save</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n    </div>\r\n    </form>\r\n</ng-template>\r\n\r\n\r\n<ng-template #tabRedirectConfirmationModal2 let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n      <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">&times;</button>\r\n      <h4 class="modal-title">Confirmation</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n      <h6 style="text-align: left;">\r\n        Do you want to Save changes and Continue ?\r\n      </h6>\r\n    </div>\r\n    <div class="modal-footer">\r\n  \r\n      <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="redirectToTabWithoutSave()">No</button>\r\n      <button type="button" [disabled]="(!empform.touched)" class="btn btn-primary" data-dismiss="modal" (click)="redirectToTab()">Yes</button>\r\n    </div>\r\n  </ng-template>\r\n \r\n  <div class="preloader"  *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div>\t\t\t\r\n        </div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>\r\n<app-spinner  *ngIf="isSpinnerVisible"></app-spinner>'},htDr:function(e,t,n){"use strict";n.r(t),t.default="label {\n  text-align: left;\n  width: 150px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.inner-addon .ui-autocomplete-input {\n  width: 100% !important;\n}\n\n.po-head {\n  font-weight: bold;\n  font-size: 16px;\n  color: #295d92;\n}\n\n.partsList-table-tr th {\n  min-width: 80px;\n}\n\n.addpn-btn {\n  padding: 5px 10px !important;\n  font-size: 13px;\n}\n\na.fa.fa-plus-circle {\n  color: green !important;\n}\n\n.partsList-modal .form-group {\n  margin-bottom: 6px !important;\n}\n\n.rpo-table-cstm th {\n  padding: 8px 5px !important;\n}\n\n.child-add-icon {\n  cursor: pointer;\n  margin: 2px -12px;\n}\n\n.child-add-icon a:before, .child-add-icon i:before {\n  font-size: 16px;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}"},rhMm:function(e,t,n){"use strict";n.r(t),t.default="ng-multiselect-dropdown {\n  width: 65%;\n  margin-right: 5px;\n}\n\n.add-icon {\n  height: 100%;\n  width: 10%;\n  text-align: center;\n  padding: 3px;\n  border-radius: 5px;\n}\n\n.add-icon .fa {\n  padding: 7px 7px !important;\n}\n\ntextarea {\n  width: 65%;\n}\n\n.labels-font-header {\n  font-size: 13px !important;\n  font-weight: normal !important;\n}\n\n.span-header-red {\n  color: red;\n  font-weight: bold;\n}\n\n.shadow-Box {\n  padding-bottom: 0px !important;\n}\n\nlabel {\n  text-align: left;\n  width: 150px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.inner-addon .ui-autocomplete-input {\n  width: 100% !important;\n}\n\n.po-head {\n  font-weight: bold;\n  font-size: 16px;\n  color: #295d92;\n}\n\n.partsList-table-tr th {\n  min-width: 80px;\n}\n\n.addpn-btn {\n  padding: 5px 10px !important;\n  font-size: 13px;\n}\n\na.fa.fa-plus-circle {\n  color: green !important;\n}\n\n.partsList-modal .form-group {\n  margin-bottom: 6px !important;\n}\n\n.rpo-table-cstm th {\n  padding: 8px 5px !important;\n}\n\n.child-add-icon {\n  cursor: pointer;\n  margin: 2px -12px;\n}\n\n.child-add-icon a:before, .child-add-icon i:before {\n  font-size: 16px;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}\n\n.text_editor_box p {\n  margin-bottom: 0px;\n  padding: 0px;\n  overflow: visible;\n  padding-left: 4px;\n  line-height: 2;\n}"},"vx/s":function(e,t,n){"use strict";n.r(t),t.default='<div [@fadeInOut] class="page-content">\r\n    <div class="card padding-10">\r\n        <div class="right_col" role="main">\r\n            <div class="x_panel">\r\n                <div class="x_content">\r\n                    <form #empform="ngForm" class="form-horizontal add-custustomer">\r\n                        <div class="card">\r\n                            <div class="card-header bg-primary">\r\n                                <h4 class="new-card-heading">Employee General Info</h4>             \r\n                                </div>\r\n                                <div class="card-body">                                    \r\n                                    <div class="form-row">\r\n                                        <div class="col-md-3">\r\n                                            <div class="form-group">\r\n                                                <label>First Name <span class="clr-red">*</span></label>\r\n                                                <p-autoComplete field="firstName" class="pautocomp-cstm"\r\n                                                                [(ngModel)]="sourceEmployee.firstName" (ngModelChange)="enableSave()" name="firstName" [suggestions]="firstCollection" (completeMethod)="filterfirstName($event)" [size]="30" [minLength]="1" [dropdown]="true" #firstName="ngModel" required>\r\n                                                </p-autoComplete>\r\n                                                <div *ngIf="firstName.invalid && (firstName.dirty || firstName.touched)" class="alert alert-danger alert-danger-cstm">\r\n                                                    <div *ngIf="firstName.errors.required">\r\n                                                        <small> First Name is required </small>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Middle Name</label>\r\n                                                <p-autoComplete field="middleName" class="pautocomp-cstm"\r\n                                                                [(ngModel)]="sourceEmployee.middleName" (ngModelChange)="enableSave()" name="middleName" [suggestions]="middleNameCollection" (completeMethod)="filtermiddleName($event)" [size]="30" [minLength]="1" [dropdown]="true">\r\n                                                </p-autoComplete>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Last Name <span class="clr-red">*</span></label>\r\n                                                <p-autoComplete field="lastName" class="pautocomp-cstm"\r\n                                                                [(ngModel)]="sourceEmployee.lastName" (ngModelChange)="enableSave()" name="lastName" [suggestions]="lastNameCollection" (completeMethod)="filterlastName($event)" [size]="30" [minLength]="1" [dropdown]="true" #lastName="ngModel" required>\r\n                                                </p-autoComplete>\r\n                                                <div *ngIf="lastName.invalid && (lastName.dirty || lastName.touched)" class="alert alert-danger alert-danger-cstm">\r\n                                                    <div *ngIf="lastName.errors.required">\r\n                                                        <small> Last Name is required </small>\r\n                                                    </div>\r\n                                                </div>\r\n                                               \r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Emp ID <span class="clr-red">*</span></label>\r\n                                                <input #sourceEmpID="ngModel" class="form-control" type="text" name="employeeIdTemp" [(ngModel)]="employeeIdTemp" disabled>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Emp ID (Per Payroll)</label>\r\n                                                <input class="form-control" type="text" (ngModelChange)="enableSave()" name="employeeIdAsPerPayroll" [(ngModel)]="sourceEmployee.employeeIdAsPerPayroll">\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-3">\r\n                                            <div class="form-group">\r\n                                                <label>\r\n                                                    Job Title <span class="clr-red">*</span>\r\n                                                    \x3c!-- <span style="margin-left:3px;cursor:pointer;"><a class="fa fa-plus-circle fa-lg" data-toggle="modal" data-target="#addJobTitle" (click)="openjobtitle(content)"></a></span> --\x3e\r\n                                                </label>\r\n                                                \x3c!--                                            <select name="jobTitleId" class="form-control" [formControl]="empCreationForm.controls[\'jobTitleId\']" required>--\x3e\r\n\r\n                                                <select name="jobTitleId" (ngModelChange)="enableSave()" class="form-control" [(ngModel)]="sourceEmployee.jobTitleId" required>\r\n                                                    <option value="0"> -- Select --</option>\r\n                                                    <ng-container *ngFor="let jobtitleName of allJobTitlesinfo">\r\n                                                        <option [ngValue]="jobtitleName.value">{{jobtitleName.label}}</option>\r\n                                                    </ng-container>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>\r\n                                                    Emp Expertise <span class="clr-red">*</span>\r\n                                                    \x3c!-- <span style="margin-left:3px;cursor:pointer;"><a class="fa fa-plus-circle fa-lg" data-toggle="modal" data-target="#addEmpExprt" (click)="openemployeeExpertise(contentEdit)"></a></span> --\x3e\r\n                                                </label>\r\n                                                <select name="employeeExpertiseId" (ngModelChange)="enableSave()" class="form-control" [(ngModel)]="sourceEmployee.employeeExpertiseId" required>\r\n                                                    <option value="0">-- Select --</option>\r\n                                                    <ng-container *ngFor="let employeeName of allEmployeeExpertiseInfo">\r\n                                                        <option [ngValue]="employeeName.value">{{employeeName.label}}</option>\r\n                                                    </ng-container>\r\n                                                </select>\r\n                                            </div>                                          \r\n                                            <div class="form-group">\r\n                                                <label>Station ID</label>\r\n                                                <select name="stationId" (ngModelChange)="enableSave()" [(ngModel)]="sourceEmployee.stationId">\r\n                                                    <option value="0">-- Select --</option>\r\n                                                    <option *ngFor="let statio of getAllAllStationInfodrpData" [ngValue]="statio.value">{{statio.label}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-3">\r\n                                            <div class="card" style="margin-top: 20px;">\r\n                                                <div class="card-header" style="padding: 10px 12px;">\r\n                                                    <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure <span class="clr-red">*</span></h5>\r\n                                                </div>\r\n                                                <div class="card-body" style="padding: 12px 12px 4px;">                                                \r\n                                                    <div class="form-group">                                                       \r\n                                                        <select class="form-control" (ngModelChange)="enableSave()" name="company"\r\n                                                                [(ngModel)]="managementStructure.companyId"\r\n                                                                (change)="getBUList(managementStructure.companyId);"\r\n                                                                #companyName="ngModel" required>\r\n                                                            <option value="0">-- Select -- </option>\r\n                                                            <option *ngFor="let name of maincompanylist" [ngValue]="name.value">\r\n                                                                {{name.label}}\r\n                                                            </option>\r\n                                                        </select>\r\n                                                        <div *ngIf="companyName.invalid && (companyName.dirty || companyName.touched)"\r\n                                                             class="alert alert-danger alert-danger-cstm">\r\n                                                            <div *ngIf="companyName.errors.required">\r\n                                                                <small> Managmetn Structure Name is required </small>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="form-group">\r\n                                                        \x3c!-- <label>BU </label> --\x3e\r\n                                                        <select class="form-control" (ngModelChange)="enableSave()" [(ngModel)]="managementStructure.buId"\r\n                                                                name="buId" (change)="getDivisionlist(managementStructure.buId)">\r\n                                                            <option value="0">-- Select --</option>\r\n                                                            <option *ngFor="let name of bulist" [ngValue]="name.value">\r\n                                                                {{name.label}}\r\n                                                            </option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div class="form-group">                                                        \r\n                                                        <select class="form-control" (ngModelChange)="enableSave()" [(ngModel)]="managementStructure.divisionId"\r\n                                                                name="divisionId"\r\n                                                                (change)="getDepartmentlist(managementStructure.divisionId)">\r\n                                                            <option value="0">-- Select --</option>\r\n                                                            <option *ngFor="let name of divisionlist" [ngValue]="name.value">\r\n                                                                {{name.label}}\r\n                                                            </option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div class="form-group">                                                       \r\n                                                        <select class="form-control" (ngModelChange)="enableSave()" (ngModelChange)="enableSave()" [(ngModel)]="managementStructure.departmentId"\r\n                                                                name="departmentId"\r\n                                                                (change)="getDepartmentId(managementStructure.departmentId)">\r\n                                                            <option value="0">-- Select --</option>\r\n                                                            <option *ngFor="let name of departmentList" [ngValue]="name.value">\r\n                                                                {{name.label}}\r\n                                                            </option>\r\n                                                        </select>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n\r\n                                    <div class="form-row">\r\n                                        <div class="col-md-3">\r\n                                            <div class="form-group">\r\n                                                <label>Date Of Birth</label>\r\n                                                <p-calendar [showIcon]="true"  (ngModelChange)="enableSave()" name="dateOfBirth"\r\n                                                 [maxDate]="dateTime" [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                                  [(ngModel)]="sourceEmployee.dateOfBirth"></p-calendar>\r\n                                            </div>                                        \r\n                                            <div class="form-group">\r\n                                                <label>Start Date <span class="clr-red">*</span></label>\r\n                                                <p-calendar name="startDate"  (ngModelChange)="enableSave()"\r\n                                                [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                                 [minDate]="sourceEmployee.dateOfBirth" [showIcon]="true" [(ngModel)]="sourceEmployee.startDate"\r\n                                                  required></p-calendar>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Cell</label>\r\n                                                <div class="inner-addon right-addon inline-block">\r\n                                                    <input\r\n                                                    class="form-control" (ngModelChange)="enableSave()"\r\n                                                    type="text"\r\n                                                    id="mobilePhone"\r\n                                                    name="mobilePhone"\r\n                                                    [pattern]="phonePattern"\r\n                                                    #mobilePhone="ngModel"\r\n                                                    class="form-control"\r\n                                                    minlength="6"\r\n                                                    maxlength="14"\r\n                                                    (keypress)="patternMobilevalidationWithSpl($event)"\r\n                                                    [(ngModel)]="sourceEmployee.mobilePhone"\r\n                                                    (ngModelChange)="enableSave()"                              \r\n                                                     />                                                  \r\n                                                </div>\r\n                                                <div *ngIf="mobilePhone.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="mobilePhone.errors.pattern">\r\n                                                      <span style="color: red;">Please enter atleast 6 digits</span>\r\n                                                    </div>\r\n                                                  </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-3">\r\n                                            <div class="form-group">\r\n                                                <label>Business Phone</label>\r\n                                                <div class="inner-addon right-addon inline-block">\r\n                                                    <input\r\n                                                    class="form-control" (ngModelChange)="enableSave()"\r\n                                                    type="text"\r\n                                                    id="workPhone"\r\n                                                    name="workPhone"\r\n                                                    [pattern]="phonePattern"\r\n                                                    #workPhone="ngModel"\r\n                                                    class="form-control"\r\n                                                    minlength="6"\r\n                                                    maxlength="14"\r\n                                                    (keypress)="patternMobilevalidationWithSpl($event)"\r\n                                                    [(ngModel)]="sourceEmployee.workPhone"\r\n                                                    (ngModelChange)="enableSave()"                              \r\n                                                     />                                                  \r\n                                                </div>\r\n                                                <div *ngIf="workPhone.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="workPhone.errors.pattern">\r\n                                                      <span style="color: red;">Please enter atleast 6 digits</span>\r\n                                                    </div>\r\n                                                </div>                                                \r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Fax</label>\r\n                                                <div class="inner-addon right-addon inline-block">\r\n                                                    <input class="form-control" (ngModelChange)="enableSave()" (keypress)="patternMobilevalidationWithSpl($event)"  type="text" name="fax" [(ngModel)]="sourceEmployee.fax">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Email</label>\r\n                                                <input class="form-control" type="text" name="email" [formControl]="empCreationForm.controls[\'email\']" [(ngModel)]="sourceEmployee.email">\r\n                                            </div>\r\n                                            <div *ngIf="empCreationForm.controls[\'email\'].errors?.pattern &&\r\n                                                        empCreationForm.controls[\'email\'].touched" class="alert alert-danger alert-danger-cstm">                                               \r\n                                                    <small> Enter Valid email  </small>\r\n                                            </div>                                            \r\n                                            <div class="form-group">\r\n                                                <label>SS#</label>\r\n                                                <div class="inner-addon right-addon inline-block">\r\n                                                    <input class="form-control" (ngModelChange)="enableSave()" type="text" name="ssn" [(ngModel)]="sourceEmployee.ssn">\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-3">\r\n                                            <div class="form-group">\r\n                                                <label >Shift</label>\r\n                                                <div class="col-md-12" style="margin-left:-5px;">\r\n                                                    <p-radioButton name="groupname" (ngModelChange)="enableSave()" value="0" label="Single Shift" class="p-radiobutton-label-horizontal p-radiobutton-cstm"\r\n                                                                   [(ngModel)]="sourceEmployee.inMultipleShifts" (click)="singleClick(\'single\')"></p-radioButton>\r\n                                                    <p-radioButton name="groupname" (ngModelChange)="enableSave()" value="1" label="Multiple Shifts" class="p-radiobutton-label-horizontal p-radiobutton-cstm"\r\n                                                                   [(ngModel)]="sourceEmployee.inMultipleShifts" (click)="singleClick(\'multiple\')"></p-radioButton>\r\n\r\n                                                </div>                                              \r\n                                            </div>\r\n                                            <div class="form-group col-sm-12 shiftmultiple-block" *ngIf="showMultiple">\r\n                                                <label>Shift Type</label>\r\n                                                <p-multiSelect [options]="shiftValues" name="multipleShiftType" [(ngModel)]="sourceEmployee.shiftIds" (ngModelChange)="enableSave()" [panelStyle]="{minWidth:\'12em\'}"></p-multiSelect>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12 shiftsingle-block" *ngIf="showsingle">\r\n                                                <label>Shift Type</label>\r\n                                                <select name="singleShiftType" [(ngModel)]="sourceEmployee.shiftId" (ngModelChange)="enableSave()" > \r\n                                                    <option *ngFor="let shift of shiftValues" [ngValue]="shift.value">{{shift.label}}</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label style="margin-top: 15px;">Extra Hours</label>\r\n                                                <div class="form-group">\r\n                                                    \x3c!--<div class="checkbox-cstm">--\x3e\r\n                                                        <div>\r\n                                                        <label>\r\n                                                            <input type="checkbox" name="allowOvertime" (ngModelChange)="enableSave()" [(ngModel)]="sourceEmployee.allowOvertime">\r\n                                                            \x3c!--<span class="cr"><i class="cr-icon pi pi-check"></i></span>--\x3e\r\n                                                            Allow Overtime\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    \x3c!--<div class="checkbox-cstm">--\x3e\r\n                                                        <div>\r\n                                                        <label>\r\n                                                            <input type="checkbox" name="allowDoubletime" (ngModelChange)="enableSave()" [(ngModel)]="sourceEmployee.allowDoubleTime">\r\n                                                            \x3c!--<span class="cr"><i class="cr-icon pi pi-check"></i></span>--\x3e\r\n                                                            Allow Double-Time\r\n                                                        </label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label style="margin-bottom: 9px !important;">Pay Type <span class="clr-red">*</span></label>\r\n                                                <div style="display: block;">\r\n                                                     <label *ngFor="let radiobutton of radioItems" style="max-width:60px;">\r\n                                                        <input type="radio" name="radiobutton" (ngModelChange)="enableSave()"  (click)="model.option = radiobutton" (change)="handlePayType(model.option)"\r\n                                                               [checked]="radiobutton === model.option">{{radiobutton}}\r\n                                                    </label>                                                  \r\n                                                </div>\r\n                                            </div>\r\n                                            <div>\r\n                                                <div class="form-group col-sm-12 hourpay-block" *ngIf="hourly">\r\n                                                   <label>Hourly Pay</label>\r\n                                                    <div class="inner-addon right-addon inline-block">\r\n                                                        <input class="form-control amount" (ngModelChange)="enableSave()" type="text" pInputText pKeyFilter="pnum" maxlength="10" name="hourlyPay" (change)="formateNumber(sourceEmployee)" [(ngModel)]="sourceEmployee.hourlyPay" required style="text-align: end; max-width: 116px;padding-right: 8px !important;">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="form-group col-sm-12 salarypay-block" *ngIf="yearly">\r\n                                                   <label>Monthly Pay</label>\r\n                                                    <div class="inner-addon right-addon inline-block">\r\n                                                        <input class="form-control amount" (ngModelChange)="enableSave()" type="text" pInputText pKeyFilter="pnum" maxlength="10"  name="monthlyPay" (change)="formateNumber(sourceEmployee)" [(ngModel)]="sourceEmployee.hourlyPay"  required style="text-align: end; max-width: 116px;padding-right: 8px !important;">\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-3">\r\n                                            <div class="form-group">\r\n                                                <label>Currency <span class="clr-red">*</span></label>\r\n                                                <p-autoComplete field="code" class="pautocomp-cstm" (ngModelChange)="enableSave()" [(ngModel)]="sourceEmployee.currencyId" name="currencyId" [suggestions]="currencyList" (completeMethod)="filterCurrencyList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true" required>\r\n                                                </p-autoComplete>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>\r\n                                                    Leave Type\r\n                                                </label>\r\n                                                <p-multiSelect [options]="leavemultiValues" name="leaveType" (ngModelChange)="enableSave()" [(ngModel)]="sourceEmployee.leaveTypeIds" [panelStyle]="{minWidth:\'12em\'}"></p-multiSelect>\r\n                                            </div>\r\n                                            <div class="form-group">                                               \r\n                                                <div>\r\n                                                    <label>\r\n                                                        <input type="checkbox" name="certification-radio" id="certification-radio" (ngModelChange)="enableSave()" [(ngModel)]="sourceEmployee.employeeCertifyingStaff">\r\n                                                          Emp Certifying Staff\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Supervisor Name</label>\r\n                                                <select name="supervisorName" class="form-control" (ngModelChange)="enableSave()" [(ngModel)]="supervisorId">\r\n                                                    <option value="0">-- Select --</option>\r\n                                                    <option *ngFor="let employee of allEmployeeinfo" [ngValue]="employee.employeeId">{{employee.firstName}}  {{employee.lastName}}</option>\r\n                                                </select>\r\n                                            </div>                                         \r\n                                        </div>\r\n                                    </div>\r\n                                </div>               \r\n                                <div style="margin-bottom: 10px;">\r\n                                    <button type="button" [disabled]="!isEnableNext" class="btn btn-primary pull-right" (click)="nextClick(\'Next\')"> Next</button>\r\n                                    <button *ngIf ="!isEditContent" type="button" [disabled]="(!empform.valid || !sourceEmployee.hourlyPay || sourceEmployee.hourlyPay == \'0.00\' || sourceEmployee.managementStructureId == 0 || !enableSaveBtn )" class="btn btn-primary pull-right" (click)="onSubmit2()">Save </button>\r\n                                    <button *ngIf ="isEditContent" type="button" [disabled]="(!empform.valid || !sourceEmployee.hourlyPay || sourceEmployee.hourlyPay == \'0.00\' || sourceEmployee.managementStructureId == 0 || !enableSaveBtn )" class="btn btn-primary pull-right" (click)="onSubmit2()">Update </button>\r\n                                </div>\r\n                            </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            \x3c!-- <button type="button" [disabled]="!empCreationForm.valid" class="btn btn-primary pull-right" (click)="onSubmit2()">Save & Next</button> --\x3e\r\n        </div>\r\n    </div>\r\n    \x3c!-- <div class="pull-right"> &copy; 2018 <a>PAS</a> </div> --\x3e\r\n</div>\r\n\r\n\r\n\x3c!--<p-dialog header="Alert" [(visible)]="display" [modal]="true" [dismissableMask]="true" maximizedLeft="140px" maximizedTop="140px"\r\n          [width]="350" [minWidth]="200" [responsive]="true"\r\n          [minY]="1050" [baseZIndex]="1100000">\r\n\r\n\r\n        <h5 [ngStyle]="{\'color\':\'red\'}">\r\n            Please Enter (*) Mandatory Fields\r\n        </h5>\r\n    <p-footer>\r\n        <button type="button" pButton icon="pi pi-check" (click)="display=false" label="Close"></button>\r\n    </p-footer>\r\n\r\n</p-dialog>--\x3e\r\n\r\n<ng-template #content2 let-c="close" let-d="dismiss" style="width:auto">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title" *ngIf="isEditMode">Edit JobType</h4>\r\n        <h4 class="modal-title" *ngIf="!isEditMode">Add JobType</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="saveJobType(); dismissModel();">\r\n        <div class="modal-body">\r\n\r\n            <div class="form-group">\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label class="control-label">Job Type<span class="clr-red">*</span></label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <p-autoComplete class="p-autoComplete-ctsm" [(ngModel)]="jobTypeName" [ngModelOptions]="{standalone: true}" (onKeyUp)=onJobTypeKeyUP() (onSelect)="onSelectJob($event)" [suggestions]="localCollection" (completeMethod)="filterJobs($event)" [size]="30"\r\n                                        [minLength]="1" [dropdown]="true">\r\n                            <ng-template let-jobName pTemplate="item">\r\n                                <div class="ui-helper-clearfix">{{jobName}}</div>\r\n                            </ng-template>\r\n                        </p-autoComplete>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label class="control-label">Job Type Description</label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <input #memo="ngModel" class="form-control" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="jobTypeDescription">\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                \x3c!-- <label for="description" class="control-label">Job Type<span class="clr-red">*</span></label>\r\n                <div class="col-sm-7">\r\n                    <div class="inner-addon right-addon inline-block">\r\n                        //<input #memo="ngModel" class="form-control" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="jobTypeName">\r\n\r\n\r\n\r\n                        <p-autoComplete [(ngModel)]="jobTypeName" [ngModelOptions]="{standalone: true}" (onKeyUp)=onJobTypeKeyUP($event) (onSelect)="onSelectJob($event)" [suggestions]="localCollection" (completeMethod)="filterJobs($event)" [size]="30"\r\n                                        [minLength]="1" [dropdown]="true">\r\n                            <ng-template let-jobName pTemplate="item">\r\n                                <div class="ui-helper-clearfix">{{jobName}}</div>\r\n                            </ng-template>\r\n                        </p-autoComplete>\r\n\r\n\r\n\r\n                        //<div *ngIf="disableJobTitle" style="color:red">Already Exist</div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                    </div> --\x3e\r\n            </div>\r\n\r\n            \x3c!-- <div class="form-group">\r\n                <label for="description" class="control-label">Job Type Description</label>\r\n                <div class="col-sm-7">\r\n                    <div class="inner-addon right-addon inline-block">\r\n                        <input #memo="ngModel" class="form-control" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="jobTypeDescription">\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div> --\x3e\r\n\r\n            <div class="form-group">\r\n                <div class="col-sm-6">\r\n                    <div class="checkbox-cstm">\r\n                        <label>\r\n                            <input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input" checked id="isActive" [(ngModel)]="sourceAction.isActive">\r\n                            <span class="cr">\r\n                                <i class="cr-icon pi pi-check"></i>\r\n                            </span>\r\n                            Active\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            \x3c!-- <div class="form-group">\r\n\r\n                <div class="col-sm-6">\r\n                    <label class="form-check-label" for="isActive">\r\n                        <input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input" checked id="isActive" [(ngModel)]="sourceAction.isActive"> Active\r\n                    </label>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div> --\x3e\r\n\r\n        </div>\r\n        <div class="modal-footer">\r\n\r\n            <button class="btn btn-primary" [disabled]="disableJobType">Save</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </form>\r\n</ng-template>\r\n\r\n\r\n\r\n<ng-template #content let-c="close" let-d="dismiss" style="width:auto">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title" *ngIf="isEditMode">Edit JobTitle</h4>\r\n        <h4 class="modal-title" *ngIf="!isEditMode">Add JobTitle</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="saveJobTitle(); dismissModel();">\r\n        <div class="modal-body">\r\n\r\n\r\n\r\n            <div class="form-group">\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label class="control-label">Job Title <span class="clr-red">*</span></label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <p-autoComplete class="p-autoComplete-ctsm" [(ngModel)]="jobName" [ngModelOptions]="{standalone: true}" (onKeyUp)=onjobTitleKeyUP() (onSelect)="onSelectJob($event)" [suggestions]="localCollection" (completeMethod)="filterJObTitles($event)" [size]="30"\r\n                                        [minLength]="1" [dropdown]="true">\r\n                            <ng-template let-jobName pTemplate="item">\r\n                                <div class="ui-helper-clearfix">{{jobName}}</div>\r\n                            </ng-template>\r\n                        </p-autoComplete>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label class="control-label">Memo</label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <input #memo="ngModel" class="form-control" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceAction.memo" minlength="2">\r\n                        <div *ngIf="memo.dirty && memo.errors?.required && memo.errors" class="invalid-form-error-message">\r\n                            Memo is required.\r\n                        </div>\r\n                        <div *ngIf="memo.dirty && memo.errors?.minlength && memo.errors" class="invalid-form-error-message">\r\n                            Memo must be at least 2 characters long.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                \x3c!-- <label for="description" class="control-label">Job Title<span class="clr-red">*</span></label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="inner-addon right-addon inline-block">\r\n\r\n                                        <p-autoComplete [(ngModel)]="jobName" [ngModelOptions]="{standalone: true}" (onKeyUp)=onjobTitleKeyUP($event) (onSelect)="onSelectJob($event)" [suggestions]="localCollection" (completeMethod)="filterJObTitles($event)" [size]="30"\r\n                                                        [minLength]="1" [dropdown]="true">\r\n                                            <ng-template let-jobName pTemplate="item">\r\n                                                <div class="ui-helper-clearfix">{{jobName}}</div>\r\n                                            </ng-template>\r\n                                        </p-autoComplete>\r\n\r\n\r\n\r\n                                        //<div *ngIf="disableJobTitle" style="color:red">Already Exist</div>\r\n\r\n                //<input #memo="ngModel" class="form-control" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="jobName">\r\n\r\n                //<div *ngIf="disableJobTitle" style="color:red">">Already Exist</div>\r\n                                        <div class="clear"></div>\r\n                                    </div>\r\n                                </div> --\x3e\r\n\r\n            </div>\r\n\r\n            \x3c!-- <div class="form-group">\r\n                <label for="description" class="control-label">Memo</label>\r\n                <div class="col-sm-7">\r\n            <div class="col-sm-7">\r\n                <div class="inner-addon right-addon inline-block">\r\n\r\n                    <input #memo="ngModel" class="form-control" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceAction.memo"  minlength="2">\r\n                    <div *ngIf="memo.dirty && memo.errors?.required && memo.errors" class="invalid-form-error-message">\r\n                        Memo is required.\r\n                    </div>\r\n                    <div *ngIf="memo.dirty && memo.errors?.minlength && memo.errors" class="invalid-form-error-message">\r\n                        Memo must be at least 2 characters long.\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div> --\x3e\r\n            \x3c!-- <div class="form-group">\r\n                <label for="description" class="control-label">Memo</label>\r\n                <div class="control-data">\r\n                    <input #memo="ngModel" id="memo" class="form-control" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceAction.memo" minlength="2">\r\n                    <div *ngIf="memo.dirty && memo.errors?.required && memo.errors" class="invalid-form-error-message">\r\n                        Memo is required.\r\n                    </div>\r\n                    <div *ngIf="memo.dirty && memo.errors?.minlength && memo.errors" class="invalid-form-error-message">\r\n                        Memo must be at least 2 characters long.\r\n                    </div>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div> --\x3e\r\n\r\n            <div class="form-group">\r\n                <div class="col-sm-6">\r\n                    <div class="checkbox-cstm">\r\n                        <label>\r\n                            <input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input" checked id="isActive" [(ngModel)]="sourceAction.isActive">\r\n                            <span class="cr">\r\n                                <i class="cr-icon pi pi-check"></i>\r\n                            </span>\r\n                            Active\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            \x3c!-- <div class="form-group">\r\n\r\n                <div class="col-sm-6">\r\n                    <label class="form-check-label" for="isActive">\r\n                        <input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input" checked id="isActive" [(ngModel)]="sourceAction.isActive"> Active\r\n                    </label>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div> --\x3e\r\n\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button class="btn btn-primary" [disabled]="disableJobTitle">Save</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </form>\r\n\r\n</ng-template>\r\n\r\n\r\n<ng-template #contentleave let-c="close" let-d="dismiss" style="width:auto">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title" *ngIf="isEditMode">Edit Leave Type</h4>\r\n        <h4 class="modal-title" *ngIf="!isEditMode">Add Leave Type</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="editItemLeaveCloseModel()">\r\n        <div class="modal-body">\r\n\r\n\r\n\r\n            <div class="form-group">\r\n                <div class="col-sm-12" style="padding: 16px;">\r\n                  \r\n                    <div class="col-sm-12">\r\n                        <label class="control-label" style="width: 100%;">Leave Type <span class="clr-red">*</span></label>\r\n                        <p-autoComplete class="p-autoComplete-ctsm" [(ngModel)]="leaveType" [ngModelOptions]="{standalone: true}" [suggestions]="localleaveCollection" (onKeyUp)=onKeyUpLeaveNames($event) (onSelect)="onSelectLeaveName($event)" (onBlur)="onBlurLeaveName($event)" (completeMethod)="filterLeaves($event)" [size]="30"\r\n                                        [minLength]="1" [dropdown]="true">\r\n                            <ng-template let-description pTemplate="item">\r\n                                <div class="ui-helper-clearfix">{{description}}</div>\r\n                            </ng-template>\r\n                        </p-autoComplete>\r\n                        <div *ngIf="disableSaveLeaveName" style="color:red">Already Exist</div>\r\n                    </div>\r\n                    <div class="col-sm-12">\r\n                    <label class="control-label">Description</label>\r\n                    <textarea  [(ngModel)]="descriptiontype"></textarea>\r\n                    </div>\r\n                    <div class="col-sm-12">\r\n                    <label class="control-label">Memo</label>\r\n                    <textarea  [(ngModel)]="memo"></textarea>\r\n                    </div>\r\n                </div>\r\n\r\n                \x3c!-- <label for="description" class="control-label">Leave Type<span class="clr-red">*</span></label>\r\n                <div class="col-sm-7">\r\n                    <div class="inner-addon right-addon inline-block">\r\n                        <p-autoComplete [(ngModel)]="description" [ngModelOptions]="{standalone: true}" [suggestions]="localleaveCollection" (onKeyUp)=onKeyUpLeaveNames($event) (onSelect)="onSelectLeaveName($event)" (onBlur)="onBlurLeaveName($event)" (completeMethod)="filterLeaves($event)" [size]="30"\r\n                                        [minLength]="1" [dropdown]="true">\r\n                            <ng-template let-description pTemplate="item">\r\n                                <div class="ui-helper-clearfix">{{description}}</div>\r\n                            </ng-template>\r\n                        </p-autoComplete>\r\n                        <div *ngIf="disableSaveLeaveName" style="color:red">Already Exist</div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                </div> --\x3e\r\n            </div>\r\n            <div class="form-group">\r\n                <div class="col-sm-6">\r\n                    <div class="checkbox-cstm">\r\n                        <label>\r\n                            <input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input" checked id="isActive" [(ngModel)]="sourceAction.isActive">\r\n                            <span class="cr">\r\n                                <i class="cr-icon pi pi-check"></i>\r\n                            </span>\r\n                            Active\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            \x3c!-- <div class="form-group">\r\n\r\n                <div class="col-sm-6">\r\n                    <label class="form-check-label" for="isActive">\r\n                        <input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input" checked id="isActive" [(ngModel)]="sourceAction.isActive"> Active\r\n                    </label>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div> --\x3e\r\n\r\n        </div>\r\n        <div class="modal-footer">\r\n\r\n            <button class="btn btn-primary" [disabled]="disableSaveLeaveName">Save</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </form>\r\n</ng-template>\r\n\r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title" *ngIf="isEditMode">Edit Employee Expertise</h4>\r\n        <h4 class="modal-title" *ngIf="!isEditMode">Add Employee Expertise</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="saveEmpExpertise(); dismissModel();">\r\n        <div class="modal-body">\r\n\r\n            <div class="form-group">\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label class="control-label">Employee Expertise <span class="clr-red">*</span></label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <p-autoComplete id="memo" class="p-autoComplete-ctsm" [(ngModel)]="employeeName" [ngModelOptions]="{standalone: true}" (onKeyUp)=onEmpExpertiseKeyUP() (onSelect)="onSelectEmpExpertise($event)" [suggestions]="localCollection" (completeMethod)="filterEMpExpertise($event)" [size]="30"\r\n                                        [minLength]="1" [dropdown]="true">\r\n                            <ng-template let-jobName pTemplate="item">\r\n                                <div class="ui-helper-clearfix">{{jobName}}</div>\r\n                            </ng-template>\r\n                        </p-autoComplete>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label class="control-label">Memo</label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <input #memo="ngModel" class="form-control" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceAction.memo" minlength="2">\r\n                        <div *ngIf="memo.dirty && memo.errors?.required && memo.errors" class="invalid-form-error-message">\r\n                            Memo is required.\r\n                        </div>\r\n                        <div *ngIf="memo.dirty && memo.errors?.minlength && memo.errors" class="invalid-form-error-message">\r\n                            Memo must be at least 2 characters long.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                \x3c!-- <label for="name" class="control-label">Employee Expertise<span class="clr-red">*</span></label>\r\n                        <div class="col-sm-7">\r\n                            <div class="inner-addon right-addon inline-block">\r\n\r\n                                //<input #memo="ngModel" class="form-control" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="employeeName">\r\n\r\n                                <p-autoComplete id="memo" [(ngModel)]="employeeName" [ngModelOptions]="{standalone: true}" (onKeyUp)=onEmpExpertiseKeyUP() (onSelect)="onSelectJob($event)" [suggestions]="localCollection" (completeMethod)="filterEMpExpertise($event)" [size]="30"\r\n                                                [minLength]="1" [dropdown]="true">\r\n                                    <ng-template let-jobName pTemplate="item">\r\n                                        <div class="ui-helper-clearfix">{{jobName}}</div>\r\n                                    </ng-template>\r\n                                </p-autoComplete>\r\n\r\n\r\n\r\n                                //    <div *ngIf="disableJobTitle" style="color:red">Already Exist</div>\r\n                //<div *ngIf="disableExpTitle" style="color:red">Already Exist</div>\r\n                //<div class="clear"></div>\r\n                            </div>\r\n                        </div> --\x3e\r\n            </div>\r\n\r\n            \x3c!-- <div class="form-group">\r\n                <label for="description" class="control-label">Memo</label>\r\n                <div class="col-sm-7">\r\n            <div class="col-sm-7">\r\n                <div class="inner-addon right-addon inline-block">\r\n                    <input #memo="ngModel" class="form-control" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceAction.memo"  minlength="2">\r\n                    <div *ngIf="memo.dirty && memo.errors?.required && memo.errors" class="invalid-form-error-message">\r\n                        Memo is required.\r\n                    </div>\r\n                    <div *ngIf="memo.dirty && memo.errors?.minlength && memo.errors" class="invalid-form-error-message">\r\n                        Memo must be at least 2 characters long.\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div> --\x3e\r\n            \x3c!-- <div class="form-group">\r\n                <label for="description" class="control-label">Memo</label>\r\n                <div class="control-data">\r\n                    <input #memo="ngModel" class="form-control" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceAction.memo" minlength="2">\r\n                    <div *ngIf="memo.dirty && memo.errors?.required && memo.errors" class="invalid-form-error-message">\r\n                        Memo required.\r\n                    </div>\r\n                    <div *ngIf="memo.dirty && memo.errors?.minlength && memo.errors" class="invalid-form-error-message">\r\n                        Memo must be at least 2 characters long.\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n                <div class="clear"></div>\r\n            </div> --\x3e\r\n            <div class="form-group">\r\n                <div class="col-sm-6">\r\n                    <div class="checkbox-cstm">\r\n                        <label>\r\n                            <input type="checkbox" name="isWorksInShop" class="form-check-input" id="isWorksInShop" [(ngModel)]="isWorksInShop">\r\n                            <span class="cr">\r\n                                <i class="cr-icon pi pi-check"></i>\r\n                            </span>\r\n                            Shop Employee\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class="form-group">\r\n                <div class="col-sm-6">\r\n                    <div class="checkbox-cstm">\r\n                        <label>\r\n                            <input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input" checked id="isActive" [(ngModel)]="sourceAction.isActive">\r\n                            <span class="cr">\r\n                                <i class="cr-icon pi pi-check"></i>\r\n                            </span>\r\n                            Active\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            \x3c!-- <div class="form-group">\r\n                <div class="col-sm-6">\r\n                    <label class="form-check-label" for="isActive">\r\n                        <input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input" checked id="isActive" [(ngModel)]="sourceAction.isActive"> Active\r\n                    </label>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div> --\x3e\r\n\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button class="btn btn-primary" [disabled]="disableExpTitle">Save</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </form>\r\n\r\n</ng-template>\r\n<ng-template #tabRedirectConfirmationModal let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n      <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">&times;</button>\r\n      <h4 class="modal-title">Confirmation</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n      <h6 style="text-align: left;">\r\n        Do you want to Save changes and Continue ?\r\n      </h6>\r\n    </div>\r\n    <div class="modal-footer">  \r\n      <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="redirectToTabWithoutSave()">No</button>\r\n      <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n      [disabled]="(!empform.valid || !sourceEmployee.hourlyPay || sourceEmployee.hourlyPay == \'0.00\' || sourceEmployee.managementStructureId == 0 || !enableSaveBtn )"\r\n       (click)="redirectToTab()">Yes</button>\r\n    </div>\r\n  </ng-template>\r\n  <div class="preloader"  *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div>\t\t\t\r\n        </div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>\r\n<app-spinner  *ngIf="isSpinnerVisible"></app-spinner>'},wdRQ:function(e,t,n){"use strict";n.r(t),t.default=".x_panel {\n  border: none;\n}\n\n.modal-body-cstm p .label {\n  width: 40%;\n  padding: 0;\n  display: inline-block;\n}\n\n.modal-body-cstm p .value {\n  width: 60%;\n  display: inline-block;\n}\n\n.modal-body h5 {\n  color: #000 !important;\n}"}}]);