function _createForOfIteratorHelper(t,e){var a;if("undefined"==typeof Symbol||null==t[Symbol.iterator]){if(Array.isArray(t)||(a=_unsupportedIterableToArray(t))||e&&t&&"number"==typeof t.length){a&&(t=a);var n=0,s=function(){};return{s:s,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:s}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,r=!0,o=!1;return{s:function(){a=t[Symbol.iterator]()},n:function(){var t=a.next();return r=t.done,t},e:function(t){o=!0,i=t},f:function(){try{r||null==a.return||a.return()}finally{if(o)throw i}}}}function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_unsupportedIterableToArray(t)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(t,e){if(t){if("string"==typeof t)return _arrayLikeToArray(t,e);var a=Object.prototype.toString.call(t).slice(8,-1);return"Object"===a&&t.constructor&&(a=t.constructor.name),"Map"===a||"Set"===a?Array.from(t):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(t,e):void 0}}function _iterableToArray(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}function _arrayWithoutHoles(t){if(Array.isArray(t))return _arrayLikeToArray(t)}function _arrayLikeToArray(t,e){(null==e||e>t.length)&&(e=t.length);for(var a=0,n=new Array(e);a<e;a++)n[a]=t[a];return n}function _defineProperties(t,e){for(var a=0;a<e.length;a++){var n=e[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function _createClass(t,e,a){return e&&_defineProperties(t.prototype,e),a&&_defineProperties(t,a),t}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{"+Qc1":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                      \r\n                        <div class="inline-block display-flex">\r\n                           \r\n                            <h3 class="po-head lead">Asset Intangible Type</h3>\r\n                            &nbsp;&nbsp;\r\n                           \r\n                            <a class="plusicon-cstm new-margin" matTooltipPosition="above"\r\n                             matTooltip="Add {{rowName}}" tooltipPosition="right"\r\n                              data-target="#editItem"\r\n                               data-toggle="modal" (click)="addNewItem()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Asset Intangible Class</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#editItem"\r\n                                    data-toggle="modal" (click)="addNewItem()"\r\n                                  >\r\n                                  Add Asset Intangible Class\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        \r\n                \r\n                        \x3c!--Step x: Add/update table taking grid data (itemList) and selected columns --\x3e\r\n                        \x3c!--(onLazyLoad)="changePage($event)"--\x3e\r\n                        <p-table #dt\r\n                                 class="rpo-table-cstm rro-table-cstm"\r\n                                 [value]="itemList"\r\n                                 [metaKeySelection]="true"\r\n                                 [first]="pageIndex"\r\n                                 [rows]="pageSize"\r\n                                 [paginator]="true"\r\n                                 [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]"\r\n                                 [columns]="selectedColumns"\r\n                                 selectionMode="multiple"\r\n                                 [metaKeySelection]="true"\r\n                                 [resizableColumns]="true"\r\n                                 [reorderableColumns]="true"\r\n                                 [scrollable]="true"\r\n                                 [totalRecords]="totalRecords"\r\n                                 scrollHeight="450px">\r\n                            \x3c!--caption--\x3e\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    \x3c!--column names dropdown taking selectedColumns--\x3e\r\n                                    \x3c!--Step x: Update the dropdown with options--\x3e\r\n                                    \x3c!--(onChange)="reorderValues($event)"--\x3e\r\n                                    \x3c!--to-do:add (change)=>--\x3e\r\n                                    <p-multiSelect [maxSelectedLabels]="2"\r\n                                                   [options]="columnHeaders"\r\n                                                   optionLabel="header"\r\n                                                   [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                                   selectedItemsLabel="{0} columns selected"\r\n                                                   defaultLabel="Choose Columns">\r\n                                    </p-multiSelect>\r\n                                </div>\r\n                                <div class="col">\r\n                                  \r\n                                      <div\r\n                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                      >\r\n                                        <div class="form-group">\r\n                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                          <div\r\n                                            class="pull-left"\r\n                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                          >\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>In-Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                        (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>All\r\n                                                    </label>\r\n                                                </div>\r\n                                                    <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                      <label style="width: auto !important;margin-top: 3px;">\r\n                                                        \x3c!--  --\x3e\r\n                                                        <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                         (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                          />\r\n                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                      Show  Deleted List \r\n                                                      </label>\r\n                                                    </div>\r\n                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="row">\r\n                                  <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button" style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download All Data" \r\n                                            pButton icon="fa-download" iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltipPosition="above"  style="padding: 5px 12px !important;" matTooltip="Download Selected" \r\n                                            pButton icon="fa-download" iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    \x3c!--\r\n                                    <div class="excel-upload excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" class="uploaddoc upload-file" data-multiple-caption="{count} files selected"\r\n                                               accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" (change)="bulkUpload($event)">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>--\x3e\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()" matTooltipPosition="above" matTooltip="Download Sample File"  >Sample File Download</button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n\r\n                            </ng-template>\r\n                            \x3c!--header with search--\x3e\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position: sticky" *ngIf="selectedColumns.length> 0">Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position: sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            \x3c!--body--\x3e\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="viewItemDetailsClick(viewClick, rowData)">\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']"\r\n                                                       name="isActive{{rowIndex}}" (onChange)="toggleActiveStatus(rowData)"\r\n                                                       [matTooltip]="rowData[\'isActive\'] ? \'Active\' : \'Inactive\' " matTooltipPosition="above">\r\n                                        </p-inputSwitch>\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                             (click)="viewItemDetails(rowData)" data-target="#view" data-toggle="modal" matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \x3c!--Step x: update the on-click event--\x3e\r\n                                        \r\n                                        <span data-target="#editItem" \r\n                                        data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="showItemEdit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                        (click)="showItemEdit(rowData)" matTooltip="Edit" \r\n                                        matTooltipPosition="above" data-target="#editItem" \r\n                                        data-toggle="modal">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="confirmItemDelete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button\r\n                                         matTooltip="Delete" matTooltipPosition="above"\r\n                                          (click)="confirmItemDelete(rowData)" data-target="#delete" data-toggle="modal">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span  data-target="#itemHistory" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="showHistory(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" (click)="showHistory(rowData)"\r\n                                          data-target="#itemHistory" data-toggle="modal">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="itemList && itemList.length == 0 || itemList && itemList.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <div style="text-align: right;">\r\n                                    <label id="footer" class="footer1">Total:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                    <label id="footer" class="footer1">Pages Count:</label>\r\n                                    <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                                </div>\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \x3c!--to-do:use same modal to view, add, update, and delete--\x3e\r\n    \x3c!--Modal for view only--\x3e\r\n\r\n    <ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n      \r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n           \r\n        </div>\r\n        <div class="modal-body">\r\n            <strong>\r\n                Asset Intangible Class\r\n                <span class="new-label">{{restorerecord.assetIntangibleTypeId}}</span>\r\n            </strong>\r\n        </div>\r\n      \r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n      </ng-template> \r\n\r\n    <div #view *ngIf="itemDetails" class="modal fade editModal" id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-sm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">\xd7</button>\r\n                    <h4 class="modal-title">Asset Intangible Class Details</h4>\r\n                </div>\r\n                <div class="modal-body viewform">\r\n                    <div class="col-sm-12">\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Id: </b>\r\n                            </span>\r\n                            <span class="value">{{code_Name}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Name: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.assetIntangibleName}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Memo: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.assetIntangibleMemo}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Created By: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.createdBy}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Created Date: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Last Updated By: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.updatedBy}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Last Updated Date: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    \x3c!--Step x: Modal for Edit--\x3e\r\n    <div #editItem id="editItem" class="modal fade editModal" role="dialog" *ngIf="currentModeOfOperation === 2 || currentModeOfOperation === 3" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">{{currentModeOfOperation === 3 ? "Edit" : "Add"}} Asset Intangible Class </h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <form #AssetIntangibleType="ngForm">\r\n                        <div class="form-group">\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-4">\r\n                                    <label for="description" class="control-label">\r\n                                        Name\r\n                                        <span class="clr-red">*</span>\r\n                                    </label>\r\n\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <p-autoComplete field="assetIntangibleName"\r\n                                                    [(ngModel)]="currentRow.assetIntangibleName"\r\n                                                    (onSelect)="selectedName($event)"\r\n                                                    (onKeyUp)="checkReasonCodeExists(\'assetIntangibleName\', $event.target.value)"\r\n                                                    name="assetIntangibleName"\r\n                                                    (ngModelChange)="getmemo()"\r\n                                                    [suggestions]="filteredItemList" (completeMethod)="filterAssetIntangibleName($event)"\r\n                                                    [size]="30" [minLength]="1"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                    </p-autoComplete>\r\n                                    <div *ngIf="disableSave" class="clr-red">Already Exists</div>\r\n                                    <div class="clear"></div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-4">\r\n                                    <label for="description" class="control-label">\r\n                                        Memo\r\n                                    </label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <textarea class="text-item" (ngModelChange)="getmemo()" #memo="ngModel" id="assetIntangibleMemo"\r\n                                              name="assetIntangibleMemo" [(ngModel)]="currentRow.assetIntangibleMemo" minlength="2"></textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <div class="col-sm-6">\r\n                                <div class="checkbox-cstm">\r\n                                    <label>\r\n                                        <input type="checkbox" (ngModelChange)="getmemo()" name="isActive" [(ngModel)]="currentRow.isActive">\r\n                                        <span class="cr">\r\n                                            <i class="cr-icon pi pi-check"></i>\r\n                                        </span>\r\n                                        Active\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button class="btn btn-primary" data-dismiss="modal"\r\n                            [disabled]="AssetIntangibleType.invalid || disableSave || disableSaveForEdit "\r\n                            (click)="currentModeOfOperation === 2 ? saveNewItem() : updateItem();"\r\n                            ng-disabled="AssetIntangibleType.$pristine">\r\n                        {{currentModeOfOperation == 3 ? \'Update\' : \'Save\' }}\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    \x3c!--Modal for delete only--\x3e\r\n    <div #delete *ngIf="currentModeOfOperation === 4" id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <strong>\r\n                        Asset Intangible Class:\r\n                                 <span class="new-label">{{code_Name}}</span>\r\n                                 </strong>\r\n                    <span class="new-label"></span>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteItem()">Yes</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModal()">No</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n    \x3c!--Step x: Audit modal--\x3e\r\n    <div #itemHistory *ngIf="currentModeOfOperation === 5" class="modal fade" id="itemHistory" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <h4 class="modal-title">History of Asset Intangible Class</h4>\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="table-responsive">\r\n                        <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Memo</th>\r\n                                    <th>Active</th>\r\n                                    <th>Last Updated By</th>\r\n                                    <th>Last Updated Time</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf="auditHistory.length> 0">\r\n                                <tr *ngFor="let audit of auditHistory; let i = index;">\r\n\r\n                                    <td [ngStyle]="{\'color\': auditHistory[i>0 ? i-1 : i].assetIntangibleName === audit.assetIntangibleName ? \'black\' : \'red\'  }">\r\n                                        {{audit.assetIntangibleName}}\r\n                                    </td>\r\n                                    <td [ngStyle]="{\'color\': auditHistory[i>0 ? i-1 : i].assetIntangibleMemo === audit.assetIntangibleMemo ? \'black\' : \'red\'  }">\r\n                                        {{audit.assetIntangibleMemo}}\r\n                                    </td>\r\n                                    <td [ngStyle]="{\'color\': auditHistory[i>0 ? i-1 : i].isActive === audit.isActive ? \'black\' : \'red\'  }">\r\n                                        {{audit.isActive}}\r\n                                    </td>\r\n                                    <td>{{audit.updatedBy}}</td>\r\n                                    <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <ng-template #noDatavailable>\r\n                            <div class="text-center">\r\n                                <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                                <h4 style="color: #ff5663;">No History Found </h4>\r\n                            </div>\r\n\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModal()">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #viewClick class="modal fade " id="viewClick" role="dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">\xd7</button>\r\n                <h4 class="modal-title">{{rowName}} Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Id: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.assetIntangibleTypeId}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Name: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.assetIntangibleName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.assetIntangibleMemo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.createdBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Last Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Last Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n\r\n</div>'},"+SO6":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Add Condition</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" \r\n                            matTooltipPosition="above" matTooltip="Add Condition"\r\n                             tooltipPosition="right" data-target="#addCondition"\r\n                              data-toggle="modal" (click)="resetConditionForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Add Condition</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#addCondition"\r\n                                    data-toggle="modal" (click)="resetConditionForm()"\r\n                                  >\r\n                                  Add Condition\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                        \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm"\r\n                         [value]="conditionData" [first]="0" [rows]="pageSize" [metaKeySelection]="true" [paginator]="true"\r\n                                 [pageLinks]="3" [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" selectionMode="multiple" (onPage)="changePage($event)"\r\n                                 [(selection)]="selectedColumn" [resizableColumns]="true" [reorderableColumns]="true" [scrollable]="true" [totalRecords]="totalRecords"\r\n                                 scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [options]="conditionHeaders" [(ngModel)]="selectedColumns" optionLabel="header" \r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left" (onChange)="columnsChanges()" ></p-multiSelect>\r\n                                   \r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  \r\n                                                      <div\r\n                                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                                      >\r\n                                                        <div class="form-group">\r\n                                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                          <div\r\n                                                            class="pull-left"\r\n                                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                                          >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                    \x3c!--  --\x3e\r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button" pButton icon="fa-download"  style="padding: 5px 12px !important;" iconPos="left" label="Export Data" matTooltip="Download Data" matTooltipPosition="above"   (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" pButton icon="fa-download"  style="padding: 5px 12px !important;" iconPos="left" label="Export Selection Only" matTooltip="Download Selected" matTooltipPosition="above"  \r\n                                            (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file" \r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)"   matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                    <col *ngFor="let col of columns" style="width:140px">\r\n                                </colgroup>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:150px;position:sticky" *ngIf="selectedColumns.length> 0">Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:150px;position:sticky"></th>\r\n                                </tr>\r\n\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="viewSelectedRow(rowData)" [pSelectableRowIndex]="rowIndex">\r\n                                    <td *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal" data-target="#view">\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:150px" *ngIf="selectedColumns.length> 0">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="modal" matTooltipPosition="above"\r\n                                             (click)="viewSelectedRow(rowData)" data-target="#view" matTooltip="View">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                       \r\n                                        <span data-target="#addCondition" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)" \r\n                                        data-target="#addCondition" data-toggle="modal" matTooltip="edit"\r\n                                         matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n                                       \r\n                                       \r\n                                        <span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="delete(rowData)" \r\n                                            matTooltip="Delete"  matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="delete"\r\n                                         matTooltipPosition="above" data-target="#delete" data-toggle="modal" \r\n                                         (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="history" \r\n                                        matTooltipPosition="above" data-target="#contentHist" data-toggle="modal" \r\n                                        (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="conditionData && conditionData.length == 0 || conditionData && conditionData.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;"  [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n      \r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n           \r\n        </div>\r\n        <div class="modal-body">\r\n            <strong>\r\n                Condition:\r\n                <span class="new-label">{{restorerecord.description}}</span>\r\n            </strong>\r\n        </div>\r\n      \r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n      </ng-template>\r\n    \r\n\r\n    <div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <strong>\r\n                        Condition :\r\n                        <span class="new-label">{{selectedRowforDelete.description}}</span>\r\n                    </strong>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div #addCondition id="addCondition" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <h4 class="modal-title" *ngIf="isEditMode">Edit Condition</h4>\r\n                    <h4 class="modal-title" *ngIf="!isEditMode">Add Condition</h4>\r\n                    <button type="button" class="close" aria-label="Close" data-dismiss="modal">\r\n                        <span aria-hidden="true">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <form #userForm="ngForm">\r\n                        <div class="form-group">\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-4">\r\n                                    <label for="description" class="control-label">\r\n                                        Condition Name\r\n                                        <span class="clr-red">*</span>\r\n                                    </label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <p-autoComplete field="description"\r\n                                                    [(ngModel)]="addNewCondition.description"\r\n                                                    [suggestions]="conditionList"\r\n                                                    (onSelect)="selectedCondition($event)"\r\n                                                    (onBlur)="onBlur($event)"\r\n                                                    (completeMethod)="filterConditions($event)"\r\n                                                    (onKeyUp)="checkConditionExists(\'description\', $event.target.value)"\r\n                                                    name="description" [size]="30" [minLength]="1" [dropdown]="true"\r\n                                                    class="p-autoComplete-ctsm" required (ngModelChange)="getmemo($event)">\r\n                                    </p-autoComplete>\r\n                                    <div *ngIf="disableSaveForConditionMsg" style="color:red">Already exist</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-4">\r\n                                    <label for="memo" class="control-label">Memo</label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <textarea #memo="ngModel" id="memo" name="memo"  (ngModelChange)="getmemo($event)" [(ngModel)]="addNewCondition.memo"></textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <div class="col-sm-6">\r\n                                <div class="checkbox-cstm check-value">\r\n                                    <label>\r\n                                        <input type="checkbox" name="isActive" class="form-check-input trigger2" (ngModelChange)="getmemo($event)" [(ngModel)]="addNewCondition.isActive">\r\n                                        <span class="cr">\r\n                                            <i class="cr-icon pi pi-check"></i>\r\n                                        </span>\r\n                                        Active\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div class="clear"></div>\r\n                        </div>\r\n                        <div class="modal-footer">\r\n                            <button class="btn btn-primary" data-dismiss="modal"\r\n                             [disabled]="!userForm.valid ||disableSaveForConditionMsg || disableSaveForEdit" \r\n                            (click)="saveCondition();">\r\n                             {{isEditMode ? \'Update\' : \'Save\' }}</button>\r\n                            <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetConditionForm()">Close</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-sm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                    <h4 class="modal-title">Condition Details</h4>\r\n                </div>\r\n                <div class="modal-body viewform ">\r\n                    <div class="col-sm-12">\r\n                        <p>\r\n                            <span class="label ">\r\n                                <b class="view-Header">Condition Name: </b>\r\n                            </span>\r\n                            <span class="value">{{ viewRowData.description}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label ">\r\n                                <b class="view-Header">Condtion Memo </b>\r\n                            </span>\r\n                            <span class="value">{{ viewRowData.memo}}</span>\r\n                        </p>\r\n\r\n                        <p>\r\n                            <span class="label ">\r\n                                <b class="view-Header">Is Active</b>\r\n                            </span>\r\n                            <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label ">\r\n                                <b class="view-Header">Created By: </b>\r\n                            </span>\r\n                            <span class="value">{{viewRowData.createdBy }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label ">\r\n                                <b class="view-Header">Created Date: </b>\r\n                            </span>\r\n                            <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label ">\r\n                                <b class="view-Header">Updated By: </b>\r\n                            </span>\r\n                            <span class="value">{{viewRowData.updatedBy}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label ">\r\n                                <b class="view-Header">Updated Date: </b>\r\n                            </span>\r\n                            <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetConditionForm()">Close</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n    <div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-xl">\r\n\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">History of Condition</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="table-responsive rro-table-cstm">\r\n                        <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                            <thead>\r\n                                <tr>\r\n                                    \x3c!-- <th>UMID</th> --\x3e\r\n                                    <th>Condition Name</th>\r\n                                    <th>Memo</th>\r\n                                    <th>Is Active</th>\r\n                                    <th>Updated By</th>\r\n                                    <th>Updated Time</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf="auditHistory.length> 0">\r\n                                <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                    \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'is Active\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                    <td>{{audit.updatedBy}}</td>\r\n                                    <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                                </tr>\r\n                            </tbody>\r\n\r\n\r\n                        </table>\r\n                        <ng-template #noDatavailable>\r\n                            <div class="text-center">\r\n                                <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                                <h4 style="color: #ff5663;">No History Found </h4>\r\n                            </div>\r\n\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n                <h4 class="modal-title">Help text about the page</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <p>Sample Point 1 about Page Description</p>\r\n                <p>Sample Point 2 about Page Description</p>\r\n                <p>Sample Point 3 about Page Description</p>\r\n                <p>Sample Point 4 about Page Description</p>\r\n                <p>Sample Point 5 about Page Description</p>\r\n                <hr />\r\n                <p>\r\n                    <b>\r\n                        Excell format to upload the Data -\r\n                        <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                    </b>\r\n                </p>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n'},"+bDa":function(t,e,a){"use strict";a.r(e),e.default=""},"+rfH":function(t,e,a){"use strict";a.d(e,"a",(function(){return n}));var n=function t(e,a,n,s,i,r,o,l,d,c,u,p){_classCallCheck(this,t),this.assetLocationId=a,this.code=n,this.name=s,this.memo=i,this.masterCompanyId=r,this.createdBy=o,this.updatedBy=l,this.createdDate=d,this.updatedDate=c,this.isDelete=u,this.isActive=p}},"/7yc":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Employee Expertise</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" \r\n                            matTooltipPosition="above"\r\n                             matTooltip="Add Employee Expertise"\r\n                              tooltipPosition="right"  (click)="resetForm()" \r\n                              data-target="#add" data-toggle="modal">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Employee Expertise</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="resetForm()" \r\n                                    data-target="#add" data-toggle="modal"\r\n                                  >\r\n                                  Add Employee Expertise\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" [first]="0" [rows]="pageSize" [paginator]="true" [pageLinks]="3"\r\n                            [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" selectionMode="multiple"     (onPage)="changePage($event)" \r\n                            [resizableColumns]="true" [reorderableColumns]="true" [scrollable]="true" [totalRecords]="totalRecords" scrollHeight="450px" >\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header" [(ngModel)]="selectedColumns" [resetFilterOnHide]="true"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left" (onChange)="columnsChanges()">\r\n                                    </p-multiSelect>\r\n                                </div>\r\n                                <div class="col">\r\n                                  \r\n                                      <div\r\n                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                      >\r\n                                        <div class="form-group">\r\n                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                          <div\r\n                                            class="pull-left"\r\n                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                          >\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>In-Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                        (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>All\r\n                                                    </label>\r\n                                                </div>\r\n                                                    <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                      <label style="width: auto !important;margin-top: 3px;">\r\n                                                        \x3c!--  --\x3e\r\n                                                        <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                         (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                          />\r\n                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                      Show  Deleted List \r\n                                                      </label>\r\n                                                    </div>\r\n                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="row">\r\n                                  <div class="col">\r\n\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Data" matTooltipPosition="above" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>                            \r\n\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Selected Data" matTooltipPosition="above" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" matTooltip="Download Sample File" matTooltipPosition="above" (click)="sampleExcelDownload()">Sample File Download</button>\r\n                                    </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </ng-template>\r\n                         \r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th  style="width:120px" *ngFor="let col of columns"  pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th  style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template  pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex" >\r\n                                <tr    [pSelectableRow]="rowData" pReorderableRowHandle  >\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal" data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                       \r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"  matTooltip="View" matTooltipPosition="above"\r\n                                            (click)="viewSelectedRow(rowData)" data-target="#view" data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                        (click)="edit(rowData)" data-target="#add" \r\n                                        data-toggle="modal"\r\n                                         matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        \r\n                                        <span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button\r\n                                         matTooltip="Delete" matTooltipPosition="above"\r\n                                          data-target="#delete" data-toggle="modal" \r\n                                          (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History" \r\n                                        matTooltipPosition="above" data-target="#contentHist" data-toggle="modal" \r\n                                        (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp; \r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" /> \r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Employee Expertise:\r\n            <span class="new-label">{{restorerecord.description}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete"  class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n          <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n          <strong>Employee Expertise:\r\n            <span class="new-label">{{selectedRowforDelete.description}}</span>\r\n        </strong>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n        </div>\r\n      </div>\r\n  \r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div #add  id="add"class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n  \r\n      \x3c!-- Modal content--\x3e\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n          <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Employee Expertise    </h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <form #create="ngForm" >\r\n                <div class="form-group">\r\n\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-4">\r\n                            <label for="description" class="control-label">Employee Expertise \r\n                                <span class="clr-red">*</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                                <p-autoComplete field="description" (ngModelChange)="getmemo()" [(ngModel)]="addNew.description" (onSelect)="selectedEmpExpertise($event)"\r\n                                 (onKeyUp)="checkEmployeeExpertiseExists(\'description\', $event.target.value)" \r\n                                name="description"\r\n                                [suggestions]="EmpExpertiseList" (completeMethod)="filterEmployeeExpertise($event)" [size]="30" [minLength]="1"\r\n                                [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n           \r\n                            </p-autoComplete>\r\n                            <div *ngIf="disableSaveEmpExpertise" class="clr-red">Already Exists</div>\r\n                            <div class="clear"></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-4">\r\n                            <label for="description" class="control-label">Memo</label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <textarea class="text-item" #memo="ngModel" (ngModelChange)="getmemo()" id="memo" name="memodescription" [(ngModel)]="addNew.memo" minlength="2"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="col-sm-6">\r\n                        <div class="checkbox-cstm">\r\n                            <label>\r\n                                <input type="checkbox" name="isWorksInShop" (ngModelChange)="getmemo()"  [(ngModel)]="addNew.isWorksInShop">\r\n                                <span class="cr">\r\n                                    <i class="cr-icon pi pi-check"></i>\r\n                                </span>\r\n                                Shop Employee\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="col-sm-6">\r\n                        <div class="checkbox-cstm">\r\n                            <label>\r\n                                <input type="checkbox" name="isActive" (ngModelChange)="getmemo()"  [(ngModel)]="addNew.isActive">\r\n                                <span class="cr">\r\n                                    <i class="cr-icon pi pi-check"></i>\r\n                                </span>\r\n                                Active\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n           </form>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button class="btn btn-primary"  data-dismiss="modal" [disabled]="create.invalid || disableSaveEmpExpertise || disableSaveForEdit " (click)="save();"> {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n            <button type="button" class="btn btn-danger"  data-dismiss="modal" (click)="resetForm()">Close</button>\r\n    \r\n        </div>\r\n      </div>\r\n  \r\n    </div>\r\n  </div>\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n                            <div class="modal-dialog modal-xl">\r\n                          \r\n                             \r\n                              <div class="modal-content">\r\n                                <div class="modal-header">\r\n                                  <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                                  <h4 class="modal-title">Duplicate Records</h4>\r\n                                </div>\r\n                                <div class="modal-body">\r\n                                    <div class="table-responsive rro-table-cstm">\r\n                                        <table class="table table-bordered"  >\r\n                                            <thead>\r\n                                                <tr>\r\n                                  \r\n                                     \r\n                                                    <th>Employee Expertise </th>\r\n                                             \r\n                                                    <th>Memo</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody *ngIf="existingRecordsResponse.length> 0" >\r\n                                                    <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n                                      \r\n                                                            \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                                            <td >{{ext.itemGroupCode}}</td>\r\n                                                            <td>{{ext.description}}</td>\r\n                                                    \r\n                                                            <td >{{ext.memo}}</td>\r\n                                                        </tr>\r\n                                            </tbody>\r\n                                            \r\n\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="modal-footer">\r\n                                  <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                                </div>\r\n                              </div>\r\n                          \r\n                            </div>\r\n</div>\r\n\r\n                          <div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n                            <div class="modal-dialog modal-xl">\r\n                          \r\n                              \x3c!-- Modal content--\x3e\r\n                              <div class="modal-content">\r\n                                <div class="modal-header">\r\n                                  <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                                  <h4 class="modal-title">History of Employee Expertise</h4>\r\n                                </div>\r\n                                <div class="modal-body">\r\n                                    <div class="table-responsive rro-table-cstm">\r\n                                        <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable" >\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    \x3c!-- <th>UMID</th> --\x3e\r\n                                                    <th>Emplyee Expertise</th>\r\n                                                    <th>Shop Employee</th>\r\n                                            \r\n                                                    <th>Memo</th>\r\n                                                    \x3c!-- <th>IsActive</th> --\x3e\r\n                                                    <th>Updated By</th>\r\n                                                    <th>Updated Time</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody *ngIf="auditHistory.length> 0" >\r\n                                                    <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                                        \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e          \r\n                                                            <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'employeeExpertise\', audit.employeeExpertise)  ? \'black\' : \'red\'  }">{{audit.employeeExpertise}}</td>\r\n                                                             <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'shopEmployee\', audit.shopEmployee)  ? \'black\' : \'red\'  }">{{audit.shopEmployee}}</td>\r\n                                                        \r\n                                                             <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                                             \x3c!-- <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td> --\x3e\r\n                                                            <td >{{audit.updatedBy}}</td>\r\n                                                            <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                                                        </tr>\r\n                                            </tbody>\r\n                                            \r\n\r\n                                        </table>\r\n                                        <ng-template #noDatavailable>\r\n                                            <div class="text-center"> \r\n                                                    <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                                                    <h4 style="color: #ff5663;">No History Found </h4>\r\n                                            </div>\r\n\r\n                                        </ng-template>  \r\n                                    </div>\r\n                                </div>\r\n                                <div class="modal-footer">\r\n                                  <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                                </div>\r\n                              </div>\r\n                          \r\n                            </div>\r\n                          </div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n<div class="modal-dialog modal-sm">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n            <h4 class="modal-title">Employee Expertise Details</h4>\r\n        </div>\r\n        <div class="modal-body viewform ">\r\n            <div class="col-sm-12">\r\n                <p>\r\n                    <span class="label " >\r\n                        <b class="view-Header">Employee Expertise: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.description}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Memo: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.memo}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Shop Employee</b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.isWorksInShop === true ? \'Yes\' : \'No\'}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">IsActive</b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Created By: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.createdBy }}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Created Date: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Updated By: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.updatedBy}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Updated Date: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n            </div>\r\n            <div class="clear"></div>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            \r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n            \r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},"/KH4":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n  <div class="right_col" role="main" style="min-height: 629px;">\r\n    <div class="x_panel">\r\n      <div class="x_content">\r\n        <div class="card">\r\n          <div class="card-header bg-primary new-card-header">\r\n            <div class="row">\r\n              <div class="col">\r\n                <h4 class="new-card-heading">Publications Listing\r\n                </h4>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  type="button"\r\n                  class="btn-sm new-btn-primary"\r\n                  matTooltip="Add Publication" matTooltipPosition="above"\r\n                  [routerLink]="[\r\n                    \'/singlepages/singlepages/app-create-publication\'\r\n                  ]"\r\n                >\r\n                  Add Publication\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class="card-body new-card-body">\r\n            <p-table\r\n              #dt\r\n              class="rpo-table-cstm rro-table-cstm pub-ptable-cstm croes"\r\n              [first]="0"\r\n              [rows]="pagesize"\r\n              [value]="allpublicationInfo"\r\n              [metaKeySelection]="true"\r\n              [paginator]="true"\r\n              [pageLinks]="3"\r\n              [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n              [columns]="selectedColumns"\r\n              selectionMode="multiple"\r\n              [resizableColumns]="true"\r\n              [reorderableColumns]="true"\r\n              [totalRecords]="totalRecords"\r\n              (onLazyLoad)="publicationPagination($event)"\r\n              [lazy]="true"\r\n              [scrollable]="true"\r\n              scrollHeight="450px"\r\n              (onPage)="pageIndexChange($event)"\r\n            >\r\n              <ng-template pTemplate="caption">\r\n                <div class="row">\r\n                  <div class="col">\r\n                    <p-multiSelect\r\n                      [options]="cols"\r\n                      [(ngModel)]="selectedColumns"\r\n                      optionLabel="header"\r\n                      selectedItemsLabel="{0} columns selected"\r\n                      [style]="{ minWidth: \'200px\' }"\r\n                      defaultLabel="Choose Columns"\r\n                      style="float: left;"\r\n                    ></p-multiSelect>\r\n                  </div>\r\n                  <div class="col">\r\n                    <div\r\n                      style="width: auto !important; float: right;"\r\n                      class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                    >\r\n                      <i class="fa fa-search"></i>\r\n                      <input\r\n                        type="text"\r\n                        pInputText\r\n                        size="50"\r\n                        class="form-control"\r\n                        (input)="\r\n                          dt.filterGlobal($event.target.value, \'contains\')\r\n                        "\r\n                        placeholder="Filter"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class="row">\r\n                  <div class="col">\r\n                    <button\r\n                      type="button"\r\n                      class="btn btn-primary new-table-button"\r\n                      matTooltip="Download Data"\r\n                      matTooltipPosition="above"\r\n                      pButton\r\n                      icon="fa-download"\r\n                      iconPos="left"\r\n                      label="Export Data"                      \r\n                      data-toggle="modal" \r\n                      (click)="selectedOnly = false; targetData = dt;"\r\n                       data-target="#downloadPublication"\r\n                    ></button>\r\n                    \x3c!-- (click)="dt.exportCSV()" --\x3e\r\n                    <button\r\n                      type="button"\r\n                      class="btn btn-primary new-table-button"\r\n                      matTooltip="Download Selected Data"\r\n                      matTooltipPosition="above"\r\n                      pButton\r\n                      icon="fa-download"\r\n                      iconPos="left"\r\n                      label="Export Selected Data"\r\n                      (click)="dt.exportCSV({ selectionOnly: true })"\r\n                    ></button>\r\n                    \r\n                  </div>\r\n                  <div class="col">\r\n                    <div class="">\r\n                      <div\r\n                        class="col"\r\n                        style="float: right; padding-top: 3px;"\r\n                      >\r\n                        <div class="form-group atv_cv">\r\n                          <div\r\n                          class="pull-left"\r\n                          style="margin-top: 4px; margin-right: 15px;"\r\n                        >\r\n                          <label class="radio-cstm wauto">\r\n                            <input\r\n                              type="radio"\r\n                              name="viewType"\r\n                              class="form-control"\r\n                              value="mpn"\r\n                              [(ngModel)]="viewType"\r\n                              (click)="changeOfStatus(\'\', \'mpn\')"\r\n                            />\r\n                            <span class="checkmark"></span>PN View\r\n                          </label>\r\n                        </div>\r\n                        <div\r\n                          class="pull-left"\r\n                          style="margin-top: 4px; margin-right: 15px;"\r\n                        >\r\n                          <label class="radio-cstm wauto">\r\n                            <input\r\n                              type="radio"\r\n                              name="viewType"\r\n                              class="form-control"\r\n                              value="publication"\r\n                              [(ngModel)]="viewType"\r\n                              (click)="changeOfStatus(\'\', \'publication\')"\r\n                            />\r\n                            <span class="checkmark"></span>Publication View\r\n                          </label>\r\n                        </div>\r\n\r\n                          <div\r\n                            class="pull-left"\r\n                            style="margin-top: 4px; margin-right: 15px;"\r\n                          >\r\n                            <label class="radio-cstm wauto">\r\n                              <input\r\n                                type="radio"\r\n                                name="vendorStatus"\r\n                                class="form-control"\r\n                                value="Active"\r\n                                (click)="getVenListByStatus(\'Active\')"\r\n                                checked\r\n                                [(ngModel)]="currentstatus"\r\n                              />\r\n                              <span class="checkmark"></span>Active</label\r\n                            >\r\n                          </div>\r\n                          <div\r\n                            class="pull-left"\r\n                            style="margin-top: 4px; margin-right: 15px;"\r\n                          >\r\n                            <label class="radio-cstm wauto">\r\n                              <input\r\n                                type="radio"\r\n                                name="vendorStatus"\r\n                                class="form-control"\r\n                                value="Inactive"\r\n                                (click)="getVenListByStatus(\'InActive\')"\r\n                                [(ngModel)]="currentstatus"\r\n                              />\r\n                              <span class="checkmark"></span>In-Active</label\r\n                            >\r\n                          </div>\r\n                          <div\r\n                            class="pull-left"\r\n                            style="margin-top: 4px; margin-right: 0px;"\r\n                          >\r\n                            <label class="radio-cstm wauto">\r\n                              <input\r\n                                type="radio"\r\n                                name="vendorStatus"\r\n                                class="form-control"\r\n                                value="ALL"\r\n                                (click)="getVenListByStatus(\'ALL\')"\r\n                                [(ngModel)]="currentstatus"\r\n                              />\r\n                              <span class="checkmark"></span>All</label\r\n                            >\r\n                          </div>\r\n                          <div class="checkbox-cstm" style="margin-left: 0;">\r\n                            <label\r\n                              style="width: auto !important; margin-top: 3px;"\r\n                            >\r\n                              \x3c!--  --\x3e\r\n                              <input\r\n                                type="checkbox"\r\n                                [(ngModel)]="currentDeletedstatus"\r\n                                name="cparent"\r\n                                id="cparent"\r\n                                (click)="\r\n                                  getDeleteListByStatus($event.target.checked)\r\n                                "\r\n                              />\r\n                              <span class="cr"\r\n                                ><i class="cr-icon pi pi-check"></i\r\n                              ></span>\r\n                              Show Deleted List\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n               \r\n              </ng-template>\r\n\r\n              <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                  <col *ngFor="let col of columns" style="width: 120px;" />\r\n                </colgroup>\r\n              </ng-template>\r\n\r\n              <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n                  <th\r\n                    *ngFor="let col of columns"\r\n                    pResizableColumn\r\n                    pReorderableColumn\r\n                    [pSortableColumn]="col.field"\r\n                  >\r\n                    {{ col.header }}\r\n                    <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                  </th>\r\n                  <th\r\n                    style="width: 140px; position: sticky;"\r\n                    *ngIf="selectedColumns.length > 0"\r\n                  >\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n                <tr>\r\n                  <th *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                    <input\r\n                      *ngIf="\r\n                        col.field !== \'revisionDate\' &&\r\n                        col.field !== \'nextReviewDate\' &&\r\n                        col.field !== \'expirationDate\' &&\r\n                        col.field !== \'verifiedBy\'&&\r\n                        col.field !== \'verifiedDate\'&&\r\n                        col.field !== \'createdBy\'&&\r\n                        col.field !== \'createdDate\'&&\r\n                        col.field!==\'modifyBy\'&&\r\n                        col.field!==\'modifiedDate\'\r\n                      "\r\n                      style="width: 100%;"\r\n                      pInputText\r\n                      type="text"\r\n                      (input)="\r\n                        dt.filter($event.target.value, col.field, \'contains\')\r\n                      "\r\n                      [ngModel]="inputValue"\r\n                    />\r\n\r\n                    <input\r\n                      type="date"\r\n                      *ngIf="col.field == \'revisionDate\'"\r\n                      name="revisionDate"\r\n                      style="width: 100%;"\r\n                      (change)="\r\n                        dt.filter($event.target.value, col.field, \'contains\')\r\n                      "\r\n                      [ngModel]="inputValue"\r\n                    />\r\n                    <input\r\n                      type="date"\r\n                      *ngIf="col.field == \'nextReviewDate\'"\r\n                      name="nextReviewDate"\r\n                      style="width: 100%;"\r\n                      (change)="\r\n                        dt.filter($event.target.value, col.field, \'contains\')\r\n                      "\r\n                      [ngModel]="inputValue"\r\n                    />\r\n                    <input\r\n                      type="date"\r\n                      *ngIf="col.field == \'expirationDate\'"\r\n                      name="expirationDate"\r\n                      style="width: 100%;"\r\n                      (change)="\r\n                        dt.filter($event.target.value, col.field, \'contains\')\r\n                      "\r\n                      [ngModel]="inputValue"\r\n                    />\r\n\r\n                    <input\r\n                    type="text"\r\n                    *ngIf="col.field == \'verifiedBy\'"\r\n                    name="verifiedBy"\r\n                    style="width: 100%;"\r\n                    (change)="\r\n                      dt.filter($event.target.value, col.field, \'contains\')\r\n                    "\r\n                    [ngModel]="inputValue"\r\n                  />\r\n\r\n                    <input\r\n                      type="date"\r\n                      *ngIf="col.field == \'verifiedDate\'"\r\n                      name="verifiedDate"\r\n                      style="width: 100%;"\r\n                      (change)="\r\n                        dt.filter($event.target.value, col.field, \'contains\')\r\n                      "\r\n                      [ngModel]="inputValue"\r\n                    />\r\n\r\n\r\n                    <input\r\n                    type="date"\r\n                    *ngIf="col.field == \'createdBy\'"\r\n                    name="createdBy"\r\n                    style="width: 100%;"\r\n                    (change)="\r\n                      dt.filter($event.target.value, col.field, \'contains\')\r\n                    "\r\n                    [ngModel]="inputValue"\r\n                  />\r\n\r\n                  <input\r\n                  type="date"\r\n                  *ngIf="col.field == \'createdDate\'"\r\n                  name="createdDate"\r\n                  style="width: 100%;"\r\n                  (change)="\r\n                    dt.filter($event.target.value, col.field, \'contains\')\r\n                  "\r\n                  [ngModel]="inputValue"\r\n                />\r\n                <input\r\n                type="date"\r\n                *ngIf="col.field == \'modifyBy\'"\r\n                name="modifyBy"\r\n                style="width: 100%;"\r\n                (change)="\r\n                  dt.filter($event.target.value, col.field, \'contains\')\r\n                "\r\n                [ngModel]="inputValue"\r\n              />\r\n              <input\r\n              type="date"\r\n              *ngIf="col.field == \'modifyDate\'"\r\n              name="modifyDate"\r\n              style="width: 100%;"\r\n              (change)="\r\n                dt.filter($event.target.value, col.field, \'contains\')\r\n              "\r\n              [ngModel]="inputValue"\r\n            />\r\n                  </th>\r\n                  \x3c!-- <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                            <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                        </th> --\x3e\r\n                  <th style="width: 140px; position: sticky;"></th>\r\n                </tr>\r\n              </ng-template>\r\n\r\n              <ng-template\r\n                pTemplate="body"\r\n                let-rowData\r\n                let-columns="columns"\r\n                let-rowIndex="rowIndex"\r\n              >\r\n                <tr\r\n                  [pSelectableRow]="rowData"\r\n                  [pSelectableRowIndex]="rowIndex"\r\n                  [pSelectableRowDblClick]="rowData"\r\n                  pReorderableRowHandle\r\n                  (dblclick)="viewSelectedRowdbl(rowData)"\r\n                >\r\n                  <td\r\n                    *ngFor="let col of columns"\r\n                    class="ui-resizable-column"\r\n                    pReorderableRowHandle\r\n                  >\r\n                    {{\r\n                      col.field == \'revisionDate\'\r\n                        ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                        : rowData[col.field] && col.field == \'nextReviewDate\'\r\n                        ? (rowData[col.field] | date: \'MM/dd/yyyy \')\r\n                        : rowData[col.field] && col.field == \'nextReviewDate\'\r\n                        ? (rowData[col.field] | date: \'MM/dd/yyyy \')\r\n                        : rowData[col.field] && col.field == \'expirationDate\'\r\n                        ? (rowData[col.field] | date: \'MM/dd/yyyy \')\r\n                        : rowData[col.field] && col.field == \'verifiedDate\'\r\n                        ? (rowData[col.field] | date: \'MM/dd/yyyy \')\r\n                        : rowData[col.field]\r\n                    }}\r\n                  </td>\r\n\r\n                  <td\r\n                    style="width: 140px; position: sticky;"\r\n                    *ngIf="selectedColumns.length > 0"\r\n                  >\r\n                    <div *ngIf="currentDeletedstatus == false">\r\n                      <p-inputSwitch\r\n                        [(ngModel)]="rowData[\'isActive\']"\r\n                        name="isActive{{ rowIndex }}"\r\n                        matTooltip="{{\r\n                          rowData[\'isActive\'] ? \'Active\' : \'In Active\'\r\n                        }}"\r\n                        matTooltipPosition="above"\r\n                        (onChange)="handleChange(rowData,$event)"\r\n                      ></p-inputSwitch>\r\n                      <span>\r\n                        <a\r\n                          class="btn btn-info boxed-float-btn nobg"\r\n                          data-toggle="tooltip"\r\n                          data-target="#view"\r\n                          data-toggle="modal"\r\n                          (click)="openView(rowData)"\r\n                          matTooltip="View"\r\n                          matTooltipPosition="above"\r\n                          ><i class="fa fa-eye"></i\r\n                        ></a>\r\n                      </span>\r\n\r\n                      <span>\r\n                        <a\r\n                          class="btn btn-info boxed-float-btn nobg"\r\n                          (click)="openDocumentsList(documentsContent, rowData)"\r\n                          data-toggle="tooltip"                         \r\n                          data-toggle="modal"                         \r\n                          matTooltip="View Document"\r\n                          matTooltipPosition="above"\r\n                          ><i class="fa fa-file-text"></i\r\n                        ></a>\r\n                      </span>\r\n\r\n                      <span\r\n                        ><a\r\n                          class="btn nobg"\r\n                          (click)="openEdit(rowData)"\r\n                          matTooltip="Edit"\r\n                          matTooltipPosition="above"\r\n                          ><i class="fa fa-pencil"> </i\r\n                        ></a>\r\n                      </span>\r\n                      <span>\r\n                        <a\r\n                          class="btn nobg"\r\n                          (click)="openDelete(content, rowData)"\r\n                          matTooltip="Delete"\r\n                          matTooltipPosition="above"\r\n                        >\r\n                          <i class="fa fa-trash"></i\r\n                        ></a>\r\n                      </span>\r\n                      <span\r\n                        data-target="#publicationHistory"\r\n                        data-toggle="modal"\r\n                        ><a\r\n                          class="btn nobg"\r\n                          (click)="getAuditHistoryById(rowData)"\r\n                          matTooltip="History"\r\n                          matTooltipPosition="above"\r\n                        >\r\n                          <i class="fa fa-history"></i></a\r\n                      ></span>\r\n                    </div>\r\n                    <div *ngIf="currentDeletedstatus == true">\r\n                      <p-inputSwitch\r\n                        [(ngModel)]="rowData[\'isActive\']"\r\n                        name="isActive{{ rowIndex }}"\r\n                        [disabled]="true"\r\n                        matTooltip="{{\r\n                          rowData[\'isActive\'] ? \'Active\' : \'In Active\'\r\n                        }}"\r\n                        matTooltipPosition="above"\r\n                        (onChange)="handleChange(rowData, $event)"\r\n                      ></p-inputSwitch>\r\n                      <span>\r\n                        <a\r\n                          class="btn btn-info boxed-float-btn nobg"\r\n                          data-toggle="tooltip"\r\n                          data-target="#view"\r\n                          data-toggle="modal"\r\n                          (click)="openView(rowData)"\r\n                          matTooltip="View"\r\n                          matTooltipPosition="above"\r\n                          ><i class="fa fa-eye"></i\r\n                        ></a>\r\n                      </span>\r\n                      <span\r\n                        ><a\r\n                          class="btn nobg"\r\n                          (click)="restore(restoreId, rowData)"\r\n                          matTooltip="Restore Record"\r\n                          matTooltipPosition="above"\r\n                          ><i class="fa fa-undo" aria-hidden="true"></i\r\n                        ></a>\r\n                      </span>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n\r\n              <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                <div\r\n                  *ngIf="AuditDetails != undefined && AuditDetails.length > 0"\r\n                >\r\n                  <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                </div>\r\n              </ng-template>\r\n              <ng-template\r\n                pTemplate="emptymessage"\r\n                let-columns\r\n                *ngIf="allpublicationInfo.length == 0"\r\n              >\r\n                <tr>\r\n                  <td\r\n                    [attr.colspan]="14"\r\n                    style="color: red; font-weight: bold; text-align: center;"\r\n                  >\r\n                    No records found\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n              <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer" class="footer1">Total:</label>\r\n                <input\r\n                  style="width: 5%;"\r\n                  [(ngModel)]="dt._totalRecords"\r\n                  [disabled]="true"\r\n                  pInputText\r\n                  type="text"\r\n                />\r\n                &nbsp;&nbsp;\r\n                <label id="footer" class="footer1">Pages Count:</label>\r\n                <input\r\n                  style="width: 5%;"\r\n                  [ngModel]="getPageCount(dt._totalRecords, pageSize)"\r\n                  [disabled]="true"\r\n                  pInputText\r\n                  type="text"\r\n                />\r\n              </ng-template>\r\n            </p-table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class="modal fade" id="downloadPublication" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t<div class="modal-dialog modal-sm">\r\n\t\t<div class="modal-content">\r\n\t\t\t<div class="modal-header">\r\n\t\t\t\t<button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n\t\t\t\t<h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-body" *ngIf="targetData">\r\n\t\t\t\t<strong>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\tYou are attempting to export {{targetData.totalRecords}} of records. \r\n\t\t\t\t\t</span> \r\n\t\t\t\t</strong>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button type="button" class="btn btn-primary" (click)="exportCSV(targetData); closeDeleteModal();">Confirm</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="closeDeleteModal()">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n  <div class="modal-header">\r\n    <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n    <button\r\n      type="button"\r\n      class="close"\r\n      aria-label="Close"\r\n      (click)="dismissModel()"\r\n    >\r\n      <span aria-hidden="true">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class="modal-body">\r\n    <strong\r\n      >Pub ID:\r\n      <span class="new-label">{{ selectedRowforDelete.publicationId }}</span>\r\n    </strong>\r\n  </div>\r\n\r\n  <div class="modal-footer">\r\n    <button\r\n      type="button"\r\n      class="btn btn-primary"\r\n      (click)="deleteItemAndCloseModel()"\r\n    >\r\n      Yes\r\n    </button>\r\n    <button type="button" class="btn btn-danger" (click)="dismissModel()">\r\n      No\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<div\r\n  id="publicationHistory"\r\n  class="modal fade"\r\n  role="dialog"\r\n  data-backdrop="static"\r\n  data-keyboard="false"\r\n>\r\n  <div class="modal-dialog modal-xl">\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title">History of Publication</h4>\r\n      </div>\r\n      <div class="modal-body" *ngIf="auditHistory">\r\n        <div class="table-responsive">\r\n          <table\r\n            class="table table-bordered pubHistory-table"\r\n            *ngIf="auditHistory.length > 0; else noDatavailable"\r\n          >\r\n            <thead>\r\n              <tr>\r\n                <th *ngFor="let x of cols">{{ x.header }}</th>\r\n                <th>IsActive</th>\r\n                <th>Updated By</th>\r\n                <th>Updated Date</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody class="audithistory-cstm">\r\n              \x3c!--*ngIf="auditHistory.length> 0"--\x3e\r\n              <tr *ngFor="let audit of auditHistory; let i = index">\r\n                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(\r\n                      i,\r\n                      \'publicationId\',\r\n                      audit.publicationId\r\n                    )\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.publicationId }}\r\n                </td>\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(\r\n                      i,\r\n                      \'description\',\r\n                      audit.description\r\n                    )\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.description }}\r\n                </td>\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(\r\n                      i,\r\n                      \'publicationType\',\r\n                      audit.publicationType\r\n                    )\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.publicationType }}\r\n                </td>\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(\r\n                      i,\r\n                      \'publishby\',\r\n                      audit.publishby\r\n                    )\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.publishby }}\r\n                </td>\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(\r\n                      i,\r\n                      \'revisionDate\',\r\n                      audit.revisionDate\r\n                    )\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.revisionDate | date: \'MM/dd/yyyy\' }}\r\n                </td>\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(\r\n                      i,\r\n                      \'revisionNum\',\r\n                      audit.revisionNum\r\n                    )\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.revisionNum }}\r\n                </td>\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(\r\n                      i,\r\n                      \'nextReviewDate\',\r\n                      audit.nextReviewDate\r\n                    )\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.nextReviewDate | date: \'MM/dd/yyyy\' }}\r\n                </td>\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(\r\n                      i,\r\n                      \'expirationDate\',\r\n                      audit.expirationDate\r\n                    )\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.expirationDate | date: \'MM/dd/yyyy\' }}\r\n                </td>\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(i, \'location\', audit.location)\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.location }}\r\n                </td>\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(\r\n                      i,\r\n                      \'verifiedBy\',\r\n                      audit.verifiedBy\r\n                    )\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.verifiedBy }}\r\n                </td>\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(\r\n                      i,\r\n                      \'verifiedDate\',\r\n                      audit.verifiedDate\r\n                    )\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.verifiedDate | date: \'MM/dd/yyyy\' }}\r\n                </td>\r\n                <td\r\n                  [ngStyle]="{\r\n                    color: getColorCodeForHistory(i, \'isActive\', audit.isActive)\r\n                      ? \'black\'\r\n                      : \'red\'\r\n                  }"\r\n                >\r\n                  {{ audit.isActive }}\r\n                </td>\r\n                <td>{{ audit.updatedBy }}</td>\r\n                <td>{{ audit.updatedDate | date: \'MM/dd/yyyy\' }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <ng-template #noDatavailable>\r\n            <div class="text-center">\r\n              <img\r\n                src="../../assets/images/binoculars.png"\r\n                style="height: 100px; width: 100px;"\r\n              />\r\n              <h4 style="color: #ff5663;">No History Found</h4>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal">\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div\r\n  id="view"\r\n  *ngIf="generalInfo"\r\n  class="modal fade"\r\n  role="dialog"\r\n  data-backdrop="static"\r\n  data-keyboard="false"\r\n>\r\n  <div class="modal-dialog modal-xl">\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal">\xd7</button>\r\n        <h4 class="modal-title">Publication Details</h4>\r\n        <div class="aligin_cer">\r\n          <p style="min-width: 24%;">\r\n            <span class="label"><b>Pub Id: </b></span\r\n            ><span class="value">{{\r\n              generalInfo.publicationId ? generalInfo.publicationId : \'-\'\r\n            }}</span>\r\n          </p>\r\n          <p style="min-width: 24%;">\r\n            <span class="label"><b>Pub Description: </b></span\r\n            ><span class="value">{{\r\n              generalInfo.description ? generalInfo.description : \'-\'\r\n            }}</span>\r\n          </p>\r\n          <p style="min-width: 30%;">\r\n            <span class="label"><b>Pub Type: </b></span\r\n            ><span class="value">{{\r\n              generalInfo.publicationType ? generalInfo.publicationType : \'-\'\r\n            }}</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div class="modal-body">\r\n        <div\r\n          id="adminsearchlocationajax"\r\n          class="table-responsive default-bg clear"\r\n        >\r\n          \x3c!--<a href="#" class="btn btn-primary openall">open all</a> <a href="#" class="btn btn-warning closeall">close all</a>--\x3e\r\n          <div class="panel-group" id="accordion">\r\n            <div class="panel panel-default">\r\n              <div>\r\n                <button\r\n                  type="button"\r\n                  class="btn btn-primary"\r\n                  data-toggle="collapse"\r\n                  (click)="openAllCollapse()"\r\n                >\r\n                  Open All\r\n                </button>\r\n                <button\r\n                  type="button"\r\n                  class="btn btn-primary collapsed"\r\n                  data-toggle="collapse"\r\n                  (click)="closeAllCollapse()"\r\n                >\r\n                  Close All\r\n                </button>\r\n        <button type="button" [ngClass]="isActive ? \'btn btn-success pull-right\' : \'btn btn-danger pull-right\'" style="margin: 2px 27px;">\r\n          <span class="value">{{isActive ? \'Active\' : \'In-Active\'}}</span>\r\n      </button>\r\n                <hr />\r\n              </div>\r\n              <div class="panel panel-default">\r\n              <div class="panel-heading">\r\n                <h4 class="panel-title">\r\n                  <a data-toggle="collapse" href="#step1">General Info</a>\r\n                </h4>\r\n              </div>\r\n              <div id="step1" class="panel-collapse collapse in show"\r\n                *ngIf="generalInfo"\r\n              >\r\n                <div class="panel-body">\r\n                  <div class="card">\r\n                    <div class="card-body">\r\n                      <div>\r\n                        <div class="table-responsive default-bg clear">\r\n                          <div class="col-sm-4">\r\n                            <p>\r\n                              <span class="label"><b>Entry Date: </b></span\r\n                              ><span class="value">{{\r\n                                generalInfo.entryDate | date: \'dd-MM-yyyy\'\r\n                              }}</span>\r\n                            </p>\r\n                            <p>\r\n                              <span class="label"><b>Publication ID: </b> <span class="clr-red">*</span></span\r\n                              ><span class="value">{{\r\n                                generalInfo.publicationId\r\n                                  ? generalInfo.publicationId\r\n                                  : \'-\'\r\n                              }}</span>\r\n                            </p>\r\n                            <p>\r\n                              <span class="label"\r\n                                ><b>Publication Description: </b></span\r\n                              ><span class="value">{{\r\n                                generalInfo.description\r\n                                  ? generalInfo.description\r\n                                  : \'-\'\r\n                              }}</span>\r\n                            </p>\r\n                            <p>\r\n                              <span class="label"\r\n                                ><b>Publication Type: </b> <span class="clr-red">*</span></span\r\n                              ><span class="value">{{\r\n                                generalInfo.publicationType\r\n                                  ? generalInfo.publicationType\r\n                                  : \'-\'\r\n                              }}</span>\r\n                            </p>\r\n                            <p>\r\n                              <span class="label"\r\n                                ><b>Author / Source / Directive: </b></span\r\n                              ><span class="value">{{\r\n                                generalInfo.asd ? generalInfo.asd : \'-\'\r\n                              }}</span>\r\n                            </p>\r\n                          </div>\r\n                          <div class="col-sm-4">\r\n                            <p>\r\n                              <span class="label"><b>Sequence: </b></span\r\n                              ><span class="value">{{\r\n                                generalInfo.sequence\r\n                                  ? generalInfo.sequence\r\n                                  : \'-\'\r\n                              }}</span>\r\n                            </p>\r\n                            <p>\r\n                              <span class="label"><b>Published By: </b> <span class="clr-red">*</span></span\r\n                              ><span class="value">{{\r\n                                generalInfo.publishby\r\n                              }}</span>\r\n                            </p>\r\n                            <p\r\n                              *ngIf="\r\n                                generalInfo.publishby == \'Vendor\' ||\r\n                                generalInfo.publishby == \' Manufacturer\'\r\n                              "\r\n                            >\r\n                              <span class="label"\r\n                                ><b>Published Reference Name: </b></span\r\n                              ><span class="value">{{\r\n                                generalInfo.publishedByRefName\r\n                                  ? generalInfo.publishedByRefName\r\n                                  : \'-\'\r\n                              }}</span>\r\n                            </p>\r\n                            <p *ngIf="generalInfo.publishby == \'Others\'">\r\n                              <span class="label"\r\n                                ><b>Published Others: </b></span\r\n                              ><span class="value">{{\r\n                                generalInfo.publishedByOthers\r\n                                  ? generalInfo.publishedByOthers\r\n                                  : \'-\'\r\n                              }}</span>\r\n                            </p>\r\n                            <p>\r\n                              <span class="label"><b>Location: </b><span class="clr-red">*</span></span\r\n                              ><span class="value">{{\r\n                                generalInfo.location\r\n                                  ? generalInfo.location\r\n                                  : \'-\'\r\n                              }}</span>\r\n                            </p>\r\n                            <p>\r\n                              <span class="label"><b>Revision Date: </b></span\r\n                              ><span class="value">{{\r\n                                generalInfo.revisionDate | date: \'dd-MM-yyyy\'\r\n                              }}</span>\r\n                            </p>\r\n                            <p>\r\n                              <span class="label"><b>Revision Number: </b></span\r\n                              ><span class="value">{{\r\n                                generalInfo.revisionNum\r\n                                  ? generalInfo.revisionNum\r\n                                  : \'-\'\r\n                              }}</span>\r\n                            </p>\r\n                            <p>\r\n                              <span class="label"><b>Expiration Date: </b></span\r\n                              ><span class="value">{{\r\n                                generalInfo.expirationDate | date: \'dd-MM-yyyy\'\r\n                              }}</span>\r\n                            </p>\r\n                          </div>\r\n                          <div class="col-sm-4">\r\n                            <p>\r\n                              <span class="label"\r\n                                ><b>Next Review Date: </b></span\r\n                              ><span class="value">{{\r\n                                generalInfo.nextReviewDate | date: \'dd-MM-yyyy\'\r\n                              }}</span>\r\n                            </p>\r\n                            \x3c!-- <p><span class="label"><b>Employee: </b></span><span class="value">{{generalInfo.employeeName ? generalInfo.employeeName : \'-\'}}</span></p> --\x3e\r\n                            <p>\r\n                              <span class="label"><b>Verified By: </b> <span class="clr-red">*</span></span\r\n                              ><span class="value">{{\r\n                                generalInfo.verifiedBy\r\n                                  ? generalInfo.verifiedBy\r\n                                  : \'-\'\r\n                              }}</span>\r\n                            </p>\r\n\r\n                            <p>\r\n                              <span class="label"><b>Verified Date: </b> <span class="clr-red">*</span></span\r\n                              ><span class="value">{{\r\n                                generalInfo.verifiedDate | date: \'dd-MM-yyyy\'\r\n                              }}</span>\r\n                            </p>\r\n                          </div>\r\n                        \x3c!--<div *ngIf="allCustomerFinanceDocumentsList.length > 0" class="col-sm-6">\r\n                                                            <div>\r\n                                                                <p>\r\n                                                                    <span class="label"><b>Attachment Details: </b></span>\r\n                                                                </p>--\x3e\r\n                        <div class="col-sm-12">\r\n                          <div\r\n                            class="shadow-Box"\r\n                            *ngIf="allCustomerFinanceDocumentsList.length > 0"\r\n                          >\r\n                            <p>\r\n                              <span class="label"\r\n                                ><b>Attachment Details: </b></span\r\n                              >\r\n                            </p>\r\n\r\n                            <p-table\r\n                              #taxexeptTable\r\n                              class="rpo-table-cstm rro-table-cstm"\r\n                              [paginator]="true"\r\n                              [value]="allCustomerFinanceDocumentsList"\r\n                              [rows]="pageSize"\r\n                              [columns]="allCustomerFinanceDocumentsListColumns"\r\n                              [metaKeySelection]="true"\r\n                              [resizableColumns]="true"\r\n                              [pageLinks]="3"\r\n                              [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n                              [reorderableColumns]="true"\r\n                              [scrollable]="true"\r\n                              scrollHeight="450px"\r\n                            >\r\n                              <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                  <col\r\n                                    *ngFor="let col of columns"\r\n                                    style="width: 130px;"\r\n                                  />\r\n                                </colgroup>\r\n                              </ng-template>\r\n\r\n                              <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                  <th\r\n                                    style="width: 70%;"\r\n                                    *ngFor="let col of columns"\r\n                                    [pSortableColumn]="col.field"\r\n                                  >\r\n                                    {{ col.header }}\r\n                                    <p-sortIcon\r\n                                      *ngIf="\r\n                                        col.field != \'download\' &&\r\n                                        col.field != \'delete\'\r\n                                      "\r\n                                      [field]="col.field"\r\n                                    ></p-sortIcon>\r\n                                  </th>\r\n                                  <th>\r\n                                    Download\r\n                                  </th>\r\n                                </tr>\r\n\r\n                                <tr>\r\n                                  <th\r\n                                    style="width: 70%;"\r\n                                    *ngFor="let col of columns"\r\n                                    [ngSwitch]="col.field"\r\n                                  >\r\n                                    <input\r\n                                      *ngIf="\r\n                                        col.field != \'download\' &&\r\n                                        col.field != \'delete\'\r\n                                      "\r\n                                      style="width: 100%;"\r\n                                      pInputText\r\n                                      type="text"\r\n                                      (input)="\r\n                                        taxexeptTable.filter(\r\n                                          $event.target.value,\r\n                                          col.field,\r\n                                          \'contains\'\r\n                                        )\r\n                                      "\r\n                                    />\r\n                                  </th>\r\n                                  <th></th>\r\n                                </tr>\r\n                              </ng-template>\r\n                              <ng-template\r\n                                pTemplate="body"\r\n                                let-part\r\n                                let-rowData\r\n                                let-columns="columns"\r\n                                let-i="rowIndex"\r\n                              >\r\n                                <tr>\r\n                                  <td\r\n                                    *ngFor="let col of columns"\r\n                                    style="width: 70%;"\r\n                                  >\r\n                                    \x3c!-- <ng-container *ngIf="col.field != \'link\'">\r\n                      {{ part[col.field] }}\r\n                    </ng-container> --\x3e\r\n\r\n                                    <ng-container\r\n                                      *ngIf="\r\n                                        col.field != \'download\' &&\r\n                                        col.field != \'delete\'\r\n                                      "\r\n                                    >\r\n                                      \x3c!-- {{ rowData.field | json}} --\x3e\r\n                                      {{\r\n                                        col.field == \'createdDate\'\r\n                                          ? (rowData[col.field]\r\n                                            | date: \'MM/dd/yyyy\')\r\n                                          : rowData[col.field] &&\r\n                                            col.field == \'updatedDate\'\r\n                                          ? (rowData[col.field]\r\n                                            | date: \'MM/dd/yyyy\')\r\n                                          : rowData[col.field]\r\n                                      }}\r\n                                    </ng-container>\r\n                                    <ng-container\r\n                                      *ngIf="col.field == \'download\'"\r\n                                      class="align_center"\r\n                                    >\r\n                                      <a\r\n                                        (click)="downloadFileUpload(part)"\r\n                                        matTooltip="Download"\r\n                                        class="btn nobg btn-cstm"\r\n                                      >\r\n                                        <span\r\n                                          ><i class="fa fa-download"></i\r\n                                        ></span>\r\n                                      </a>\r\n\r\n                                      <span\r\n                                        data-toggle="modal"\r\n                                        data-target="#contentAuditHistDoc"\r\n                                      >\r\n                                        <a\r\n                                          class="btn nobg"\r\n                                          (click)="openHistoryDoc(rowData)"\r\n                                          matTooltip="History"\r\n                                          matTooltipPosition="above"\r\n                                          ><i class="fa fa-history"></i\r\n                                        ></a>\r\n                                      </span>\r\n                                    </ng-container>\r\n                                  </td>\r\n                                  \x3c!-- <td>\r\n                  <a\r\n                    (click)="downloadFileUpload(part)"\r\n                    matTooltip="Download"\r\n                    class="btn nobg btn-cstm"\r\n                    ><span><i class="fa fa-download"></i></span\r\n                  ></a>\r\n                </td> --\x3e\r\n                                </tr>\r\n                              </ng-template>\r\n                              <ng-template\r\n                                pTemplate="emptymessage"\r\n                                let-columns\r\n                                *ngIf="\r\n                                  allCustomerFinanceDocumentsList.length == 0\r\n                                "\r\n                              >\r\n                                <tr>\r\n                                  <td\r\n                                    [attr.colspan]="6"\r\n                                    style="\r\n                                      color: red;\r\n                                      font-weight: bold;\r\n                                      text-align: center;\r\n                                    "\r\n                                  >\r\n                                    No records found\r\n                                  </td>\r\n                                </tr>\r\n                              </ng-template>\r\n                              <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total:</label>\r\n                                <input\r\n                                  style="width: 5%;"\r\n                                  [(ngModel)]="taxexeptTable._totalRecords"\r\n                                  [disabled]="true"\r\n                                  pInputText\r\n                                  type="text"\r\n                                />\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1"\r\n                                  >Pages Count:</label\r\n                                >\r\n\r\n                                <input\r\n                                  style="width: 5%;"\r\n                                  [ngModel]="\r\n                                    getPageCount(\r\n                                      taxexeptTable._totalRecords,\r\n                                      pageSize\r\n                                    )\r\n                                  "\r\n                                  [disabled]="true"\r\n                                  pInputText\r\n                                  type="text"\r\n                                />\r\n                              </ng-template>\r\n                            </p-table>\r\n                          </div>\r\n                        </div>\r\n\r\n                        \x3c!--<div>\r\n                                      <h4 class="panel-title" style="padding-left: 10px;">Attachment Details:</h4>\r\n                                      <div class="col-sm-6">\r\n                                          <p-table #dt\r\n                                                   class="rpo-table-cstm rro-table-cstm"\r\n                                                   [columns]="headersforAttachment"\r\n                                                   [value]="attachmentList"\r\n                                                   [paginator]="true"\r\n                                                   [rows]="attachmentsPageSize"\r\n                                                   [first]="first"\r\n                                                   [rowsPerPageOptions]="[10, 20, 50, 100]">\r\n                                              <ng-template pTemplate="header" let-columns>\r\n                                                  <tr>\r\n                                                      <th *ngFor="let col of columns" [pSortableColumn]="col.field">\r\n                                                          {{ col.header }}\r\n                                                          <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                                      </th>\r\n                                                      <th style="width: 200px;">File(s)</th>\r\n                                                  </tr>\r\n                                                  <tr>\r\n                                                      <th *ngFor="let col of columns"\r\n                                                          [ngSwitch]="col.field">\r\n                                                          <input style="width:100%;"\r\n                                                                 pInputText\r\n                                                                 type="text"\r\n                                                                 (input)="dt.filter($event.target.value, col.field, \'contains\')\r\n                                                " />\r\n                                                      </th>\r\n                                                      <th></th>\r\n                                                  </tr>\r\n                                              </ng-template>\r\n                                              <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                                  <tr>\r\n                                                      <td *ngFor="let col of columns" style="text-align: center;">\r\n                                                          {{ rowData[col.field] }}\r\n                                                      </td>\r\n                                                      <td>\r\n                                                          <ng-container *ngFor="let fileItem of rowData.attachmentDetails">\r\n                                                              <a (click)="downloadFileUpload(fileItem)" matTooltip="Download"\r\n                                                                 matTooltipPosition="above" class="filelink"\r\n                                                                 style="padding-right: 5px;">{{fileItem.fileName}}</a>\r\n\r\n                                                          </ng-container>\r\n                                                      </td>\r\n                                                  </tr>\r\n\r\n                                              </ng-template>\r\n                                              <ng-template pTemplate="emptymessage" let-columns *ngIf="attachmentList.length == 0">\r\n                                                  <tr>\r\n                                                      <td [attr.colspan]="2" style="color: red; font-weight: bold; text-align: center">\r\n                                                          No records found\r\n                                                      </td>\r\n                                                  </tr>\r\n                                              </ng-template>\r\n                                              <ng-template pTemplate="summary" id="footer">\r\n                                                  <label id="footer" class="footer">Total:</label>\r\n                                                  <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText\r\n                                                         type="text" />\r\n                                                  &nbsp;&nbsp;\r\n                                                  <label id="footer" class="footer1">Pages Count:</label>\r\n\r\n                                                  <input style="width: 5%;" [ngModel]="\r\n      getPageCount(dt._totalRecords, attachmentsPageSize)\r\n    " [disabled]="true" pInputText type="text" />\r\n                                              </ng-template>\r\n                                          </p-table>\r\n                                      </div>\r\n                                  </div>--\x3e\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              </div>\r\n              </div>\r\n\r\n              <div class="panel panel-default">\r\n                <div class="panel-heading">\r\n                  <h4 class="panel-title">\r\n                    <a class="collapsed" data-toggle="collapse" href="#step2"\r\n                      >PN Mapping</a\r\n                    >\r\n                  </h4>\r\n                </div>\r\n                <div id="step2" class="panel-collapse collapse">\r\n                  <div class="panel-body">\r\n                    <div class="col-sm-12">\r\n                      <div class="shadow-Box">\r\n                        <p-table\r\n                          #pnTable\r\n                          class="rpo-table-cstm"\r\n                          [columns]="headersforPNMapping"\r\n                          [value]="pnMappingList"\r\n                          [paginator]="true"\r\n                          [rows]="pnMappingPageSize"\r\n                          [first]="first"\r\n                          [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n                        >\r\n                          <ng-template pTemplate="header" let-columns>\r\n                            <tr>\r\n                              \x3c!-- <th>Sl.No</th> --\x3e\r\n                              <th\r\n                                style="padding: 8px 5px !important;"\r\n                                *ngFor="let col of columns"\r\n                                [pSortableColumn]="col.field"\r\n                              >\r\n                                {{ col.header }}\r\n                                <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                              </th>\r\n                            </tr>\r\n                            <tr>\r\n                              <th\r\n                                *ngFor="let col of columns"\r\n                                [ngSwitch]="col.field"\r\n                              >\r\n                                <input\r\n                                  style="width: 100%;"\r\n                                  pInputText\r\n                                  type="text"\r\n                                  (input)="\r\n                                    pnTable.filter(\r\n                                      $event.target.value,\r\n                                      col.field,\r\n                                      \'contains\'\r\n                                    )\r\n                                  "\r\n                                />\r\n                              </th>\r\n                            </tr>\r\n                          </ng-template>\r\n                          <ng-template\r\n                            pTemplate="body"\r\n                            let-rowData\r\n                            let-columns="columns"\r\n                            let-rowIndex="rowIndex"\r\n                          >\r\n                            <tr>\r\n                              \x3c!-- <td>{{ rowIndex + 1 }}</td> --\x3e\r\n                              <td *ngFor="let col of columns">\r\n                                {{ rowData[col.field] }}\r\n                              </td>\r\n                            </tr>\r\n                          </ng-template>\r\n                          <ng-template\r\n                            pTemplate="emptymessage"\r\n                            let-columns\r\n                            *ngIf="pnMappingList.length == 0"\r\n                          >\r\n                            <tr>\r\n                              <td\r\n                                [attr.colspan]="4"\r\n                                style="\r\n                                  color: red;\r\n                                  font-weight: bold;\r\n                                  text-align: center;\r\n                                "\r\n                              >\r\n                                No records found\r\n                              </td>\r\n                            </tr>\r\n                          </ng-template>\r\n                          <ng-template pTemplate="summary" id="footer">\r\n                            <label id="footer" class="footer">Total:</label>\r\n                            <input\r\n                              style="width: 5%;"\r\n                              [(ngModel)]="pnTable._totalRecords"\r\n                              [disabled]="true"\r\n                              pInputText\r\n                              type="text"\r\n                            />\r\n                            &nbsp;&nbsp;\r\n                            <label id="footer" class="footer1"\r\n                              >Pages Count:</label\r\n                            >\r\n\r\n                            <input\r\n                              style="width: 5%;"\r\n                              [ngModel]="\r\n                                getPageCount(\r\n                                  pnTable._totalRecords,\r\n                                  pnMappingPageSize\r\n                                )\r\n                              "\r\n                              [disabled]="true"\r\n                              pInputText\r\n                              type="text"\r\n                            />\r\n                          </ng-template>\r\n                        </p-table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="panel panel-default">\r\n                <div class="panel-heading">\r\n                  <h4 class="panel-title">\r\n                    <a class="collapsed" data-toggle="collapse" href="#step3"\r\n                      >Aircraft Info</a\r\n                    >\r\n                  </h4>\r\n                </div>\r\n                <div id="step3" class="panel-collapse collapse">\r\n                  <div class="panel-body">\r\n                    <div class="col-sm-12">\r\n                      <div class="shadow-Box">\r\n                        <p-table\r\n                          #aircraftTable\r\n                          class="rpo-table-cstm"\r\n                          [columns]="aircraftInformationCols"\r\n                          [value]="aircraftList"\r\n                          [paginator]="true"\r\n                          [rows]="aircraftPageSize"\r\n                          [first]="first"\r\n                          [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n                        >\r\n                          <ng-template pTemplate="header" let-columns>\r\n                            <tr>\r\n                              \x3c!-- <th>ID</th> --\x3e\r\n                              <th\r\n                                style="padding: 8px 5px !important;"\r\n                                *ngFor="let col of columns"\r\n                                [pSortableColumn]="col.field"\r\n                              >\r\n                                {{ col.header }}\r\n                                <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                              </th>\r\n                            </tr>\r\n                            <tr>\r\n                              <th\r\n                                *ngFor="let col of columns"\r\n                                [ngSwitch]="col.field"\r\n                              >\r\n                                <input\r\n                                  style="width: 100%;"\r\n                                  pInputText\r\n                                  type="text"\r\n                                  (input)="\r\n                                    aircraftTable.filter(\r\n                                      $event.target.value,\r\n                                      col.field,\r\n                                      \'contains\'\r\n                                    )\r\n                                  "\r\n                                />\r\n                              </th>\r\n                            </tr>\r\n                          </ng-template>\r\n                          <ng-template\r\n                            pTemplate="body"\r\n                            let-rowData\r\n                            let-columns="columns"\r\n                            let-rowIndex="rowIndex"\r\n                          >\r\n                            <tr>\r\n                              \x3c!-- <td>{{ rowIndex + 1 }}</td> --\x3e\r\n                              <td *ngFor="let col of columns">\r\n                                {{ rowData[col.field] }}\r\n                              </td>\r\n                            </tr>\r\n                          </ng-template>\r\n                          <ng-template\r\n                            pTemplate="emptymessage"\r\n                            let-columns\r\n                            *ngIf="aircraftList.length == 0"\r\n                          >\r\n                            <tr>\r\n                              <td\r\n                                [attr.colspan]="3"\r\n                                style="\r\n                                  color: red;\r\n                                  font-weight: bold;\r\n                                  text-align: center;\r\n                                "\r\n                              >\r\n                                No records found\r\n                              </td>\r\n                            </tr>\r\n                          </ng-template>\r\n                          <ng-template pTemplate="summary" id="footer">\r\n                            <label id="footer" class="footer">Total:</label>\r\n                            <input\r\n                              style="width: 5%;"\r\n                              [(ngModel)]="aircraftTable._totalRecords"\r\n                              [disabled]="true"\r\n                              pInputText\r\n                              type="text"\r\n                            />\r\n                            &nbsp;&nbsp;\r\n                            <label id="footer" class="footer1"\r\n                              >Pages Count:</label\r\n                            >\r\n\r\n                            <input\r\n                              style="width: 5%;"\r\n                              [ngModel]="\r\n                                getPageCount(\r\n                                  aircraftTable._totalRecords,\r\n                                  aircraftPageSize\r\n                                )\r\n                              "\r\n                              [disabled]="true"\r\n                              pInputText\r\n                              type="text"\r\n                            />\r\n                          </ng-template>\r\n                        </p-table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class="panel panel-default">\r\n                <div class="panel-heading">\r\n                  <h4 class="panel-title">\r\n                    <a class="collapsed" data-toggle="collapse" href="#step4"\r\n                      >ATA Chapter</a\r\n                    >\r\n                  </h4>\r\n                </div>\r\n                <div id="step4" class="panel-collapse collapse">\r\n                  <div class="panel-body">\r\n                    <div class="col-sm-12">\r\n                      <div class="shadow-Box">\r\n                        <p-table\r\n                          #ataTable\r\n                          class="rpo-table-cstm"\r\n                          [columns]="atacols"\r\n                          [value]="ataList"\r\n                          [paginator]="true"\r\n                          [rows]="ataPageSize"\r\n                          [first]="first"\r\n                          [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n                        >\r\n                          <ng-template pTemplate="header" let-columns>\r\n                            <tr>\r\n                              \x3c!-- <th>ID</th> --\x3e\r\n                              <th\r\n                                style="padding: 8px 5px !important;"\r\n                                *ngFor="let col of columns"\r\n                                [pSortableColumn]="col.field"\r\n                              >\r\n                                {{ col.header }}\r\n                                <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                              </th>\r\n                            </tr>\r\n                            <tr>\r\n                              <th\r\n                                *ngFor="let col of columns"\r\n                                [ngSwitch]="col.field"\r\n                              >\r\n                                <input\r\n                                  style="width: 100%;"\r\n                                  pInputText\r\n                                  type="text"\r\n                                  (input)="\r\n                                    ataTable.filter(\r\n                                      $event.target.value,\r\n                                      col.field,\r\n                                      \'contains\'\r\n                                    )\r\n                                  "\r\n                                />\r\n                              </th>\r\n                            </tr>\r\n                          </ng-template>\r\n                          <ng-template\r\n                            pTemplate="body"\r\n                            let-rowData\r\n                            let-columns="columns"\r\n                            let-rowIndex="rowIndex"\r\n                          >\r\n                            <tr>\r\n                              \x3c!-- <td>{{ rowIndex + 1 }}</td> --\x3e\r\n                              <td *ngFor="let col of columns">\r\n                                {{ rowData[col.field] }}\r\n                              </td>\r\n                            </tr>\r\n                          </ng-template>\r\n                          <ng-template\r\n                            pTemplate="emptymessage"\r\n                            let-columns\r\n                            *ngIf="ataList.length == 0"\r\n                          >\r\n                            <tr>\r\n                              <td\r\n                                [attr.colspan]="2"\r\n                                style="\r\n                                  color: red;\r\n                                  font-weight: bold;\r\n                                  text-align: center;\r\n                                "\r\n                              >\r\n                                No records found\r\n                              </td>\r\n                            </tr>\r\n                          </ng-template>\r\n                          <ng-template pTemplate="summary" id="footer">\r\n                            <label id="footer" class="footer">Total:</label>\r\n                            <input\r\n                              style="width: 5%;"\r\n                              [(ngModel)]="ataTable._totalRecords"\r\n                              [disabled]="true"\r\n                              pInputText\r\n                              type="text"\r\n                            />\r\n                            &nbsp;&nbsp;\r\n                            <label id="footer" class="footer1"\r\n                              >Pages Count:</label\r\n                            >\r\n\r\n                            <input\r\n                              style="width: 5%;"\r\n                              [ngModel]="\r\n                                getPageCount(\r\n                                  ataTable._totalRecords,\r\n                                  ataPageSize\r\n                                )\r\n                              "\r\n                              [disabled]="true"\r\n                              pInputText\r\n                              type="text"\r\n                            />\r\n                          </ng-template>\r\n                        </p-table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div\r\n                class="modal popup-blur"\r\n                id="contentAuditHistDoc"\r\n                data-backdrop="static"\r\n              >\r\n                <div class="modal-dialog modal-xl">\r\n                  <div class="modal-content">\r\n                    <div class="modal-header">\r\n                      <h4 class="modal-title">History of Documents</h4>\r\n                      <button\r\n                        type="button"\r\n                        class="close"\r\n                        (click)="\r\n                          dismissDocumentPopupModel(\'#contentAuditHistDoc\')\r\n                        "\r\n                      >\r\n                        &times;\r\n                      </button>\r\n                    </div>\r\n                    <div class="modal-body">\r\n                      <div class="table-responsive">\r\n                        <table class="table table-bordered">\r\n                          <thead>\r\n                            <tr>\r\n                              <th>Tag Type</th>\r\n                              <th>Name</th>\r\n                              <th>Description</th>\r\n                              <th>Memo</th>\r\n                              <th>File Name</th>\r\n                              <th>File Size</th>\r\n\r\n                              <th>Updated By</th>\r\n                              <th>Last Updated Time</th>\r\n                              <th>Created By</th>\r\n                              <th>Created Time</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            <tr\r\n                              *ngFor="let audit of sourceViewforDocumentAudit"\r\n                            ></tr>\r\n                            <tr\r\n                              *ngFor="\r\n                                let audit of sourceViewforDocumentAudit;\r\n                                let i = index\r\n                              "\r\n                            >\r\n                              <td\r\n                                [ngStyle]="{\r\n                                  color: getColorCodeForHistoryDoc(\r\n                                    i,\r\n                                    \'tagType\',\r\n                                    audit.tagType\r\n                                  )\r\n                                    ? \'black\'\r\n                                    : \'red\'\r\n                                }"\r\n                              >\r\n                                {{ audit.tagType }}\r\n                              </td>\r\n                              <td\r\n                                [ngStyle]="{\r\n                                  color: getColorCodeForHistoryDoc(\r\n                                    i,\r\n                                    \'docName\',\r\n                                    audit.docName\r\n                                  )\r\n                                    ? \'black\'\r\n                                    : \'red\'\r\n                                }"\r\n                              >\r\n                                {{ audit.docName }}\r\n                              </td>\r\n\r\n                              <td\r\n                                [ngStyle]="{\r\n                                  color: getColorCodeForHistoryDoc(\r\n                                    i,\r\n                                    \'docDescription\',\r\n                                    audit.docDescription\r\n                                  )\r\n                                    ? \'black\'\r\n                                    : \'red\'\r\n                                }"\r\n                              >\r\n                                {{ audit.docDescription }}\r\n                              </td>\r\n                              <td\r\n                                [ngStyle]="{\r\n                                  color: getColorCodeForHistoryDoc(\r\n                                    i,\r\n                                    \'docMemo\',\r\n                                    audit.docMemo\r\n                                  )\r\n                                    ? \'black\'\r\n                                    : \'red\'\r\n                                }"\r\n                              >\r\n                                \x3c!-- {{ audit.docMemo }} --\x3e\r\n                                <p class="p-0 m-0 p_textEditor" [innerHTML]="audit.docMemo">\t\t\t\t\t\t\t\t\t\t\t\t\r\n                                </p>\r\n                              </td>\r\n                              <td\r\n                                [ngStyle]="{\r\n                                  color: getColorCodeForHistoryDoc(\r\n                                    i,\r\n                                    \'fileName\',\r\n                                    audit.fileName\r\n                                  )\r\n                                    ? \'black\'\r\n                                    : \'red\'\r\n                                }"\r\n                              >\r\n                                {{ audit.fileName }}\r\n                              </td>\r\n                              <td>{{ audit.fileSize }}</td>\r\n\r\n                              <td>{{ audit.updatedBy }}</td>\r\n                              <td>\r\n                                {{\r\n                                  audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'\r\n                                }}\r\n                              </td>\r\n                              <td>{{ audit.createdBy }}</td>\r\n                              <td>\r\n                                {{\r\n                                  audit.createdDate | date: \'dd-MM-yyyy h:mm a \'\r\n                                }}\r\n                              </td>\r\n                            </tr>\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                    <div class="modal-footer">\r\n                      <button\r\n                        type="button"\r\n                        class="btn btn-danger"\r\n                        (click)="\r\n                          dismissDocumentPopupModel(\'#contentAuditHistDoc\')\r\n                        "\r\n                      >\r\n                        Close\r\n                      </button>\r\n\r\n                      \x3c!--<button type="button" class="btn btn-danger" data-dismiss="modal">\r\n                                                        Close\r\n                                                    </button>--\x3e\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal">\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n  <div class="modal-header">\r\n    <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n\r\n    <button\r\n      type="button"\r\n      class="close"\r\n      aria-label="Close"\r\n      (click)="dismissModel()"\r\n    >\r\n      <span aria-hidden="true">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class="modal-body">\r\n    <strong>\r\n          Part Number:\r\n          <span class="new-label">{{restorerecord.partNos}}</span>\r\n      </strong>\r\n  </div>\r\n  <div class="modal-footer">\r\n    <button type="button" class="btn btn-success" (click)="restoreRecord()">\r\n      Yes\r\n    </button>\r\n    <button type="button" class="btn btn-danger" (click)="dismissModel()">\r\n      No\r\n    </button>\r\n  </div>\r\n</ng-template>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n  <div class="loading">\r\n      <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n  </div>\r\n</div>\r\n'},"0Vn7":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Percent</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltipPosition="above"\r\n                              matTooltip="Add Percent" tooltipPosition="right"\r\n                               data-target="#add" data-toggle="modal"\r\n                                (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Percent</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal"\r\n                                (click)="resetForm()"\r\n                                  >\r\n                                  Add Percent\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" \r\n                        [first]="0" [rows]="pageSize" [paginator]="true" \r\n                        [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple" \r\n                        [metaKeySelection]="true"\r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [totalRecords]="totalRecords"\r\n                            scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header" [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}"\r\n                                        style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n                                    \r\n                                    \r\n                                    </div>\r\n                                    <div class="col">\r\n                                      \r\n                                          <div\r\n                                            style="width: 370px; float: right; padding-top: 3px;"\r\n                                          >\r\n                                            <div class="form-group">\r\n                                              \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                              <div\r\n                                                class="pull-left"\r\n                                                style="margin-top: 4px; margin-right: 15px;"\r\n                                              >\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>In-Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>All\r\n                                                        </label>\r\n                                                    </div>\r\n                                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                          <label style="width: auto !important;margin-top: 3px;">\r\n                                                            \x3c!--  --\x3e\r\n                                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                             (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                              />\r\n                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                          Show  Deleted List \r\n                                                          </label>\r\n                                                        </div>\r\n                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="row">\r\n                                      <div class="col">\r\n                                    \r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download All Data"  style="padding: 5px 12px !important;"  pButton icon="fa-download" matTooltipPosition="above"\r\n                                        iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected"  style="padding: 5px 12px !important;"  pButton icon="fa-download" matTooltipPosition="above"\r\n                                        iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file" accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  matTooltipPosition="above"  style="padding: 5px 12px !important;" matTooltip="Sample File download" (click)="sampleExcelDownload()">Sample File Download\r\n                                        </button>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal"\r\n                                        data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" matTooltip="Update" name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltipPosition="above" matTooltip="Active" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false"  matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                             (click)="viewSelectedRow(rowData)" matTooltip="view" data-target="#view" matTooltipPosition="above"\r\n                                               data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)" data-target="#add" \r\n                                        data-toggle="modal" matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n                                       \r\n                                        <span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete" \r\n                                        matTooltipPosition="above" data-target="#delete" data-toggle="modal"\r\n                                         (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" data-target="#contentHist" data-toggle="modal" \r\n                                         (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                             <tr>\r\n                               <td [attr.colspan]="2" class="no-records-cstm">\r\n                                  No records found\r\n                                </td>\r\n                            </tr>\r\n                          </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>Percent:\r\n                    <span class="new-label">{{selectedRowforDelete.percentValue}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Percent:\r\n            <span class="new-label">{{restorerecord.percentValue}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" (click)="resetForm()">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Percent</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">Percent\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="percentValue" [(ngModel)]="addNew.percentValue" (onSelect)="selectedDescription($event)" \r\n                                       (onBlur)="onBlur($event)"    (onKeyUp)="checkGroupDescriptionExists(\'percentValue\', $event.target.value)"\r\n                                    name="percent" [suggestions]="descriptionList" (completeMethod)="filterDescription($event)"\r\n                                    [size]="30" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForDescriptionMsg" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        \x3c!--<div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription" [(ngModel)]="addNew.percentId"></textarea>\r\n                            </div>\r\n                        </div>--\x3e\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" [disabled]="create.invalid || disableSaveForDescription"\r\n                    (click)="save();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Percent Code</th>\r\n                                <th>Description</th>\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                <td>{{ext.workPerformedCode}}</td>\r\n                                <td>{{ext.description}}</td>\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Percent</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e                        \r\n                                <th>Percent</th>\r\n                               \r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e                              \r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'percentValue\', audit.percentValue)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.percentValue}}</td>\r\n                                \x3c!--<td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>--\x3e\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Percent Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                  \r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Percent: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.percentValue}}</span>\r\n                    </p>\r\n                    \x3c!--<p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>--\x3e\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Is Active</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},"0cMz":function(t,e,a){"use strict";a.r(e),e.default=""},"0kuB":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Tax Rate</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltipPosition="above" matTooltip="Add Tax Type"\r\n                                tooltipPosition="right" \r\n                                data-target="#add" data-toggle="modal" \r\n                                (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Tax Rate</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal" \r\n                                    (click)="resetForm()"\r\n                                  >\r\n                                    Add Tax Rate\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                     \r\n                        <p-table #dt \r\n                        class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" [first]="0" \r\n                        [rows]="pageSize" [paginator]="true" \r\n                        [pageLinks]="3" [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple" \r\n                        [metaKeySelection]="true"\r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [scrollable]="true" \r\n                        [totalRecords]="totalRecords" \r\n                        scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header"\r\n                                        [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                        (onChange)="columnsChanges()">\r\n                                    </p-multiSelect>\r\n\r\n                                </div>\r\n                                <div class="col">\r\n                                  \r\n                                      <div\r\n                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                      >\r\n                                        <div class="form-group">\r\n                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                          <div\r\n                                            class="pull-left"\r\n                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                          >\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>In-Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                        (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>All\r\n                                                    </label>\r\n                                                </div>\r\n                                                    <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                      <label style="width: auto !important;margin-top: 3px;">\r\n                                                        \x3c!--  --\x3e\r\n                                                        <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                         (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                          />\r\n                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                      Show  Deleted List \r\n                                                      </label>\r\n                                                    </div>\r\n                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="row">\r\n                                  <div class="col">                            \r\n                                    <button type="button" class="btn btn-primary "  style="padding: 5px 12px !important;" matTooltipPosition="above"\r\n                                        matTooltip="Download All Data" pButton icon="fa-download" iconPos="left"\r\n                                        label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary "  style="padding: 5px 12px !important;" matTooltipPosition="above"\r\n                                        matTooltip="Download Selected" pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Selection Only"\r\n                                        (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload"\r\n                                            (change)="customExcelUpload()" class="uploaddoc upload-file"\r\n                                            accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()"\r\n                                            matTooltipPosition="above" matTooltip="Download Sample File">Sample File\r\n                                            Download</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                            (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle data-toggle="modal" data-target="#view"\r\n                                        (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{\r\n                                        col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                      \r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                      \r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}"\r\n                                            (onChange)="changeStatus(rowData)" matTooltipPosition="above"\r\n                                            [matTooltip]="rowData[\'isActive\'] ? \'Active\' : \'Inactive\' ">\r\n                                        </p-inputSwitch>\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" matTooltip="View"\r\n                                             matTooltipPosition="above"\r\n                                                (click)="viewSelectedRow(rowData)" data-target="#view"\r\n                                                data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                            data-target="#add" data-toggle="modal" matTooltip="Edit"\r\n                                             matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span  data-target="#delete" data-toggle="modal" >\r\n                                            <a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button\r\n                                         matTooltip="Delete" matTooltipPosition="above"\r\n                                            data-target="#delete" data-toggle="modal" \r\n                                            (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="showHistory(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above"\r\n                                            data-target="#contentHist" data-toggle="modal"\r\n                                            (click)="showHistory(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            \r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n\t\t\t\t\t\t\t\t\t\t *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td [attr.colspan]="7" class="no-records-cstm">\r\n\t\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <div style="text-align: right;">\r\n                                    <label id="footer" class="footer1">Total:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText\r\n                                        type="text" /> &nbsp;&nbsp;\r\n                                    <label id="footer" class="footer1">Pages Count:</label>\r\n                                    <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText\r\n                                        type="text" />\r\n                                </div>\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Tax Rate:\r\n            <span class="new-label">{{restorerecord.taxRate}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static"\r\n    data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                    Tax Rate:\r\n                    <span class="new-label">{{selectedRowforDelete.taxRate}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Tax Rate </h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n\r\n                        \x3c!-- <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">\r\n                                    Tax Type\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                    <p-autoComplete field="description" \r\n                                                    [(ngModel)]="addNew.taxTypeId"\r\n                                                    name="taxTypeId"\r\n                                                    [suggestions]="filteredTaxType" (completeMethod)="filterTaxType($event)" \r\n                                                    [forceSelection]="true" [size]="30" [minLength]="1"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                    </p-autoComplete>\r\n                            </div>\r\n                        </div> --\x3e\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">\r\n                                    Rate %\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <input type="number" class="form-control"\r\n                                (onKeyUp)="checkTaxRateExists(\'description\', $event.target.value)"  [(ngModel)]="addNew.taxRate" name="taxRate"\r\n                                (ngModelChange)="getmemo()" required>\r\n                                \x3c!-- <select name="residualPercentage" [(ngModel)]="addNew.taxRate">\r\n                                    <option value="">Select Rate</option>\r\n                                    <option *ngFor="let Percentlist of percentageList" [ngValue]="Percentlist">{{Percentlist.value}}</option>\r\n                                </select> --\x3e\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription"\r\n                                    [(ngModel)]="addNew.memo" (ngModelChange)="getmemo()" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive" (ngModelChange)="getmemo()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" [disabled]="create.invalid  ||disableSaveForEdit"\r\n                    (click)="save();"> {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog"\r\n    data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n\r\n\r\n                                <th>Tax Type</th>\r\n\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n                                <td>{{ext.itemGroupCode}}</td>\r\n                                <td>{{ext.description}}</td>\r\n\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static"\r\n    data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Tax Rate</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                \x3c!-- <th>Tax Type</th> --\x3e\r\n                                <th>Tax Rate</th>\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                \x3c!-- <td\r\n                                    [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'taxTypeId\', audit.taxTypeId)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.taxTypeId}}</td> --\x3e\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'taxRate\', audit.taxRate)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.taxRate}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.memo}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Tax Rate Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    \x3c!-- <p>\r\n                        <span class="label ">\r\n                            <b>Tax Type: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.taxType}}</span>\r\n                    </p> --\x3e\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b>Tax Rate: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.taxRate}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b>Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b>IsActive</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b>Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b>Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b>Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b>Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>\r\n                    Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},"0pFG":function(t,e,a){"use strict";a.r(e),e.default=".search-box {\n  flex-direction: column;\n  box-sizing: border-box;\n  display: flex;\n}\n\n.search-box .mat-form-field {\n  padding: 0 2em;\n}\n\n.input-field-value {\n  border-radius: 5px !important;\n}\n\n.x_panel {\n  border: none;\n}\n\nth {\n  text-align: center;\n}\n\n.new-label {\n  color: cadetblue;\n}\n\n.control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}"},"2l1+":function(t,e,a){"use strict";a.r(e),e.default="control-label {\n  margin-top: 10px;\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}\n\n.modal.editModal .modal-body div.form-group label, .modal.editModal label {\n  font-weight: normal;\n  width: 100%;\n  text-align: left;\n}"},"2tv4":function(t,e,a){"use strict";a.r(e),e.default=".new-label {\n  color: cadetblue;\n}\n\n.text-item {\n  width: 100%;\n  border-radius: 5px !important;\n  margin-left: 0px;\n}\n\n.control-label {\n  margin-top: 5px;\n  text-align: left;\n  width: 100% !important;\n}"},"3K5C":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Vendor Capability Type</h3>\r\n                            <a style="margin-left:5px;" class="plusicon-cstm new-margin" \r\n                            matTooltip="Add Capability Type" \r\n                            matTooltipPosition="above"\r\n                             (click)="resetCapabilityTypeForm()"\r\n                              data-target="#addCapabilityType" data-toggle="modal">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        \r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Vendor Capability Type</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="resetCapabilityTypeForm()"\r\n                              data-target="#addCapabilityType" data-toggle="modal"\r\n                                  >\r\n                                  Add Capability Type\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="capabilityTypeData" \r\n                        [first]="0" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true" \r\n                        [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        [metaKeySelection]="true"\r\n                        selectionMode="multiple" \r\n                        (onPage)="changePage($event)"\r\n                                 [resizableColumns]="true" [reorderableColumns]="true" [totalRecords]="totalRecords">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="capabilityTypeHeaders" optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n                                   \r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  \r\n                                                      <div\r\n                                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                                      >\r\n                                                        <div class="form-group">\r\n                                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                          <div\r\n                                                            class="pull-left"\r\n                                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                                          >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                    \x3c!--  --\x3e\r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Data" matTooltipPosition="above" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export  Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Selected Data" matTooltipPosition="above" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" matTooltip="Download Sample File" matTooltipPosition="above" (click)="sampleExcelDownload()">Sample File Download</button>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal" data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                      \r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" matTooltip="View" matTooltipPosition="above" (click)="viewSelectedRow(rowData)" data-target="#view" data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                       \r\n                                        <span  data-target="#addCapabilityType" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="editCapabilityType(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                        (click)="editCapabilityType(rowData)" \r\n                                        data-target="#addCapabilityType" data-toggle="modal"\r\n                                         matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete"\r\n                                         matTooltipPosition="above" data-target="#delete" data-toggle="modal" \r\n                                         (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-toggle="modal" data-target="#contentHist"><a class="btn nobg" \r\n                                            (click)="showAuditPopup(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button\r\n                                         matTooltip="History" matTooltipPosition="above" data-toggle="modal"\r\n                                          data-target="#contentHist" (click)="showAuditPopup(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            \x3c!-- <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">No\'of records:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText type="text" />\r\n                            </ng-template> --\x3e\r\n\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                                 *ngIf="capabilityTypeData && capabilityTypeData.length == 0 || capabilityTypeData && capabilityTypeData.length ==null">\r\n                   <tr>\r\n                                    <td [attr.colspan]="5" style="color: red; font-weight: bold; text-align: center">\r\n                                        No records found\r\n                                    </td>\r\n                                   \r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                         \r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                               \r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords,pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n\r\n                        </p-table>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #addCapabilityType id="addCapabilityType" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n\r\n         Modal content\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Vendor Capability Type  </h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #addCapabilityTypeForm="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">\r\n                                   Vendor Capability Type\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="description" [(ngModel)]="addNewCapabilityType.description" name="capabilityType"\r\n                                                [suggestions]="capabilityTypeList" [size]="30" [minLength]="1" (completeMethod)="filterCapabilityType($event)" (onSelect)="selectedCapabilityType($event)" (onKeyUp)="checkCapabilityTypeExists($event.target.value)"\r\n                                                [dropdown]="true" class="p-autoComplete-ctsm" required (ngModelChange)="getChange()">\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForCapabilityType" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Sequence <span class="clr-red">*</span></label>\r\n                               \r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete class="p-autoComplete-ctsm" name="sequenceNum"\r\n                                                [(ngModel)]="addNewCapabilityType.sequenceNo"\r\n                                                pKeyFilter="num"\r\n                                                (onSelect)="selectedSequence($event)"\r\n                                                (onKeyUp)="checkSequenceExists($event.target.value)"\r\n                                                [suggestions]="sequenceList" field="sequenceNo" (completeMethod)="filterSequence($event)"\r\n                                                [size]="30" [minLength]="1" [dropdown]="true" required (ngModelChange)="getChange()">\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForSequence" class="clr-red">Already Exists</div>\r\n                            \r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Description</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #capabilityTypeDesc="ngModel" id="capabilityTypeDesc" name="capabilityTypeDesc" [(ngModel)]="addNewCapabilityType.capabilityTypeDesc" (ngModelChange)="getChange()"></textarea>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #sequenceMemo="ngModel" id="sequenceMemo" name="sequenceMemo" [(ngModel)]="addNewCapabilityType.sequenceMemo" (ngModelChange)="getChange()"></textarea>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNewCapabilityType.isActive" (ngModelChange)="getChange()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" [disabled]="addCapabilityTypeForm.invalid || disableSaveForCapabilityType ||disableSaveForCondition || disableSaveForSequence" (click)="saveCapabilityType();"> {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetCapabilityTypeForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Vendor Caability Type:\r\n            <span class="new-label">{{restorerecord.description}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Vendor Capability Type</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Vendor Capability Type: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Description: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.capabilityTypeDesc}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Sequence: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.sequenceNo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.sequenceMemo}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Is Active:</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                   \r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                  Vendor Capability Type:\r\n                    <span class="new-label">{{selectedRowforDelete.description}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-xl">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Capability Type </h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive  rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                 <th>Vendor Capability Type</th>\r\n                                <th>Description</th>\r\n                                <th>Sequence</th>\r\n                                <th>Memo</th>\r\n                                \x3c!-- <th>Is Active</th> --\x3e\r\n                                <th>Last Updated By</th>\r\n                                <th>Last Updated Time</th>\r\n                                <th>Created By</th>\r\n                                <th>Created Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'capabilityTypeDesc\', audit.capabilityTypeDesc)  ? \'black\' : \'red\'  }">{{audit.capabilityTypeDesc}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'sequenceNo\', audit.sequenceNo)  ? \'black\' : \'red\'  }">{{audit.sequenceNo}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'sequenceMemo\', audit.sequenceMemo)  ? \'black\' : \'red\'  }">{{audit.sequenceMemo}}</td>\r\n                                \x3c!-- <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td> --\x3e\r\n\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                                <td>{{audit.createdBy}}</td>\r\n                                <td>{{audit.createdDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},"3hyP":function(t,e,a){"use strict";a.r(e),e.default=""},"3tup":function(t,e,a){"use strict";a.r(e),e.default=".footer1 {\n  margin-right: 0px;\n}\n\n.control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}"},"3wcl":function(t,e,a){"use strict";a.r(e),e.default=".footer1 {\n  margin-right: 0px;\n}\n\n.new-label {\n  color: cadetblue;\n}\n\n.control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}"},"4I8H":function(t,e,a){"use strict";a.r(e),e.default=".search-box {\n  flex-direction: column;\n  box-sizing: border-box;\n  display: flex;\n}\n\n.search-box .mat-form-field {\n  padding: 0 2em;\n}"},"4dOk":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n\t<div class="right_col" role="main">\r\n\t\t<div class="x_panel">\r\n\t\t\t<div class="x_content">\r\n\t\t\t\t\x3c!--<nav aria-label="breadcrumb">\r\n\t\t\t\t\t<ol class="breadcrumb">\r\n\t\t\t\t\t\t<li class="breadcrumb-item"><a routerLink="/">Dashboard</a></li>\r\n\t\t\t\t\t\t<li class="breadcrumb-item active" aria-current="page">RFQ Engine</li>\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</nav>--\x3e\r\n\t\t\t\t<h4 class="page-heading clr-green">RFQ Engine</h4>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>'},"5PUh":function(t,e,a){"use strict";a.r(e),e.default=".new-label {\n  color: cadetblue;\n}\n\n.text-item {\n  width: 100%;\n  border-radius: 5px !important;\n  margin-left: 0px;\n}\n\n.control-label {\n  margin-top: 5px;\n  text-align: left;\n  width: 100% !important;\n}"},"5gMs":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Tasks</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" matTooltip="Add Tasks" matTooltipPosition="above"\r\n                             data-target="#add" data-toggle="modal" (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                                <div class="row">\r\n                                  <div class="col">\r\n                                    <h4 class="new-card-heading">Tasks</h4>\r\n                                  </div>\r\n                                  <div>\r\n                                    <button\r\n                                       type="button"\r\n                                       class="btn-sm new-btn-primary"\r\n                                       data-target="#add" data-toggle="modal" (click)="resetForm()">\r\n                                      Add Tasks\r\n                                    </button>\r\n                                 </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" \r\n                        [first]="0" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true"\r\n                            [pageLinks]="3" \r\n                            [rowsPerPageOptions]="[10,20,50,100]" \r\n                            [columns]="selectedColumns" \r\n                            selectionMode="multiple"\r\n                            [metaKeySelection]="true"\r\n                           \r\n                            (onPage)="changePage($event)" \r\n                            [resizableColumns]="true" \r\n                            [reorderableColumns]="true" \r\n                            [totalRecords]="totalRecords"\r\n                            [scrollable]="true"\r\n                            scrollHeight="450px">\r\n\r\n\r\n\r\n\r\n                            <ng-template pTemplate="caption">\r\n                                \x3c!-- <div style="text-align: right;margin-left:-6px !important; min-height: 30px;">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header" [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}"\r\n                                        style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n                                    <button type="button" class="btn btn-primary " pButton icon="fa-download"\r\n                                        iconPos="left" label="Export Data" matTooltip="Download Data" \r\n                                        matTooltipPosition="above" (click)="dt.exportCSV()"\r\n                                         style="padding: 5px 12px !important;"></button>\r\n                                    <button type="button" class="btn btn-primary " label="Export Selected Data" matTooltip="Download Selected Data" matTooltipPosition="above" pButton icon="fa-download"\r\n                                        iconPos="left" (click)="dt.exportCSV({selectionOnly:true})" \r\n                                        style="padding: 5px 12px !important;"></button> --\x3e\r\n                                    \x3c!-- <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file" accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltip="Sample File download" (click)="sampleExcelDownload()">Sample File Download\r\n                                        </button>\r\n                                    </div> --\x3e\r\n                                \x3c!-- </div> --\x3e\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                        <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header" [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}"\r\n                                        style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n                                    </div>\r\n                                </div>\r\n                                <br/>\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                        <button type="button" class="btn btn-primary new-table-button" pButton icon="fa-download"\r\n                                        iconPos="left" label="Export Data" matTooltip="Download Data" \r\n                                        matTooltipPosition="above"\r\n                                        data-toggle="modal" \r\n                                        (click)="selectedOnly = false; targetData = dt;"\r\n                                        data-target="#downloadConfirmation"\r\n                                        \r\n                                         style="padding: 5px 12px !important;"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" label="Export Selected Data" matTooltip="Download Selected Data" matTooltipPosition="above" pButton icon="fa-download"\r\n                                        iconPos="left" (click)="dt.exportCSV({selectionOnly:true})" \r\n                                        style="padding: 5px 12px !important;"></button>\r\n                                    </div>\r\n                                </div>\r\n    \r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:200px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal"\r\n                                        data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td style="width:200px;position: sticky" *ngIf="selectedColumns.length> 0">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" matTooltip="Update" matTooltipPosition="above"\r\n                                         name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" \r\n                                            (click)="viewSelectedRow(rowData)" matTooltip="view" matTooltipPosition="above" data-target="#view"\r\n                                                data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                       \r\n                                        <span data-target="#add" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="edit(rowData)" matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil"></i></a> </span>\r\n                                       \r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)" data-target="#add" \r\n                                        data-toggle="modal" matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n                                      \r\n                                        <span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                      \r\n                                      \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete"\r\n                                        matTooltipPosition="above" data-target="#delete"\r\n                                         data-toggle="modal" (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History" \r\n                                        matTooltipPosition="above" data-target="#contentHist" data-toggle="modal" \r\n                                        (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            \x3c!--<ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="originalData.length == 0 || originalData.length == null"> \r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>--\x3e\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog"\r\n data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>Tasks:\r\n                    <span class="new-label">{{selectedRowforDelete.description}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }}  Workflow Task</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">Task Name\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="description" [(ngModel)]="addNew.description" (onSelect)="selectedDescription($event)" (onKeyUp)="checkGroupDescriptionExists(\'description\', $event.target.value)"\r\n                                    name="description" [suggestions]="descriptionList" (completeMethod)="filterDescription($event)"\r\n                                    [size]="30" [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForDescription" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                    <label> Sequence</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                  \r\n                                    <input type="number" class="custom-form-control"\r\n                                    name="sequence" #sequence="ngModel" [required]="isEdit"\r\n                                        [(ngModel)]="addNew.sequence" />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription" [(ngModel)]="addNew.memo" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" [disabled]="create.invalid || disableSaveGroupId && disableSaveForDescription "\r\n                    (click)="save();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n\r\n\r\n                                <th>Task Name</th>\r\n\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n\r\n                                <td>{{ext.description}}</td>\r\n\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="downloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t<div class="modal-dialog modal-sm">\r\n\t\t<div class="modal-content">\r\n\t\t\t<div class="modal-header">\r\n\t\t\t\t<button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n\t\t\t\t<h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-body" *ngIf="targetData">\r\n\t\t\t\t<strong>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\tYou are attempting to export {{targetData.totalRecords}} of records. \r\n\t\t\t\t\t</span> \r\n\t\t\t\t</strong>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button type="button" class="btn btn-primary" (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):targetData.exportCSV(); closeDeleteModal();">Confirm</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="closeDeleteModal()">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Task</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Task Name</th>\r\n                                <th>Sequence</th>\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.description}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'sequence\', audit.sequence)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.sequence}}\r\n                                </td>\r\n\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.memo}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}\r\n                                </td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Workflow Task Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Task Name: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n                   \r\n                    \x3c!-- <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header"> Standard: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.standard}}</span>\r\n                    </p> --\x3e\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">IsActive</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog" data-backdrop="static">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},"5j4Z":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n\t<div class="right_col" role="main">\r\n\t\t<div class="x_panel">\r\n\t\t\t<div class="x_content">\r\n\t\t\t\t\x3c!--<nav aria-label="breadcrumb">\r\n\t\t\t\t\t<ol class="breadcrumb">\r\n\t\t\t\t\t\t<li class="breadcrumb-item"><a routerLink="/">Dashboard</a></li>\r\n\t\t\t\t\t\t<li class="breadcrumb-item active" aria-current="page">Capabilities</li>\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</nav>--\x3e\r\n\t\t\t\t<h4 class="page-heading clr-green">Capabilities</h4>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>'},"7E03":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Document Type</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" pTooltip="Add Document Type" tooltipPosition="right"\r\n                                data-target="#add" data-toggle="modal" \r\n                                (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Document Type</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal" \r\n                                    (click)="resetForm()"\r\n                                  >\r\n                                  Add Document Type\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                        \r\n                        <p-table #dt \r\n                        class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" \r\n                        [first]="0" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true" \r\n                        [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple" \r\n                        [metaKeySelection]="true"\r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [scrollable]="true" \r\n                        [totalRecords]="totalRecords" \r\n                        scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header"\r\n                                        [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                        (onChange)="columnsChanges()"></p-multiSelect>\r\n\r\n                                    </div>\r\n                                    <div class="col">\r\n                                      \r\n                                          <div\r\n                                            style="width: 370px; float: right; padding-top: 3px;"\r\n                                          >\r\n                                            <div class="form-group">\r\n                                              \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                              <div\r\n                                                class="pull-left"\r\n                                                style="margin-top: 4px; margin-right: 15px;"\r\n                                              >\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>In-Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>All\r\n                                                        </label>\r\n                                                    </div>\r\n                                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                          <label style="width: auto !important;margin-top: 3px;">\r\n                                                            \x3c!--  --\x3e\r\n                                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                             (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                              />\r\n                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                          Show  Deleted List \r\n                                                          </label>\r\n                                                        </div>\r\n                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="row">\r\n                                      <div class="col">                               \r\n                                  \r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download  Data" matTooltipPosition="above"\r\n                                         pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"   style="padding: 5px 12px !important;" matTooltip="Download Selected" matTooltipPosition="above"\r\n                                         pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Selection Only"\r\n                                        (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload"\r\n                                            (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                            accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltipPosition="above"  style="padding: 5px 12px !important;" matTooltip="Sample File download" (click)="sampleExcelDownload()">Sample File\r\n                                            Download</button>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                            (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle data-toggle="modal" data-target="#view"\r\n                                        (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" matTooltip="Update" name="isActive{{rowIndex}}"\r\n        (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n\r\n        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active"  matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                               (click)="viewSelectedRow(rowData)" matTooltip="view" matTooltipPosition="above" data-target="#view"\r\n                                               data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                       \r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                                data-target="#add" data-toggle="modal" \r\n                                                matTooltipPosition="above" matTooltip="Edit">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n                                        \r\n                                        <span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete"\r\n                                         matTooltipPosition="above"\r\n                                                data-target="#delete" data-toggle="modal" (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n                                        <span data-toggle="modal" data-target="#contentHist"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above"\r\n                                                data-target="#contentHist" data-toggle="modal"\r\n                                                (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n\t\t\t\t\t\t\t\t\t\t *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td [attr.colspan]="7" class="no-records-cstm">\r\n\t\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;"  [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText\r\n                                    type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText\r\n                                    type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>Document Type:\r\n                    <span class="new-label">{{selectedRowforDelete.name}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Document Type</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n                       \r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="name" class="control-label">Name\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="name" [(ngModel)]="addNew.name"\r\n                                    (onSelect)="selectedDescription($event)"\r\n                                    (onKeyUp)="checkGroupDescriptionExists($event.target.value)"\r\n                                    name="name" [suggestions]="descriptionList"\r\n                                    (completeMethod)="filterDescription($event)" [size]="30" [minLength]="1"\r\n                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForDescriptionmsg" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Description\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                               <input type="text" class="form-control" name="description" [(ngModel)]="addNew.description" required\r\n                                (ngModelChange)="getChange()"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription" (ngModelChange)="getChange()"\r\n                                    [(ngModel)]="addNew.memo" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive" (ngModelChange)="getChange()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal"\r\n                    [disabled]="create.invalid  || disableSaveForDescription " (click)="save();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Document Type:\r\n            <span class="new-label">{{restorerecord.name}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.Name}}</td> --\x3e\r\n                                <td>{{ext.name}}</td>\r\n                                <td>{{ext.description}}</td>\r\n\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Document Type</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n\r\n                                <th>Memo</th>\r\n                                <th>Is Active</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'name\', audit.name)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.name}}\r\n                                </td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.description}}</td>\r\n                                \r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.memo}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Document Type Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Document Type: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.name}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Description: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n                   \r\n                    \x3c!-- <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header"> Standard: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.standard}}</span>\r\n                </p> --\x3e\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">IsActive</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},"7mMn":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <nav aria-label="breadcrumb">\r\n                    <ol class="breadcrumb">\r\n                        <li class="breadcrumb-item" aria-current="page">Asset Management</li>\r\n                        <li class="breadcrumb-item" aria-current="page">Asset Management Maintanance</li>\r\n                        <li class="breadcrumb-item active" aria-current="page">Depreciation Convension</li>\r\n                    </ol>\r\n                </nav> --\x3e\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead"> Depreciation Convension</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" \r\n                            matTooltipPosition="above" \r\n                            matTooltip="Add Depreciation Convention" \r\n                            tooltipPosition="right" (click)="open(contentEdit)">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Depreciation Convension</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="open(contentEdit)"\r\n                                   \r\n                                  >\r\n                                  Add Depreciation Convention\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <div class="form-row col-row col-row1">\r\n                            <div class="col-md-4 display-flex inline-block" style="margin-top: 25px;">\r\n                                <div>\r\n                                    \x3c!--<button type="button" id="btnUpdatedepriciationMethod" *ngIf="this.updateMode" (click)="updatedepriciationmethod()" name="" class="btn btn-success nobg btn-cstm" data-toggle="tooltip" data-original-title="Update"><i class="fa fa-edit"></i></button>--\x3e\r\n                                    \x3c!--<button type="button" id="btnResetdepriciationMethod" *ngIf="this.updateMode" (click)="resetdepriciationmethod()" name="" class="btn btn-default nobg btn-cstm" data-toggle="tooltip" data-original-title="Reset"><i class="fa fa-edit"></i></button>--\x3e\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                       \r\n                \r\n\r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="assetDepList" [metaKeySelection]="true" [totalRecords]="totalRecords" [rows]="10" [paginator]="true" [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" selectionMode="multiple" (onPage)="changePage($event)"\r\n                                 [resizableColumns]="true" [reorderableColumns]="true" [scrollable]="true" scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="selectedData" optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left"></p-multiSelect>\r\n                                    \r\n                                    \r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  \r\n                                                      <div\r\n                                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                                      >\r\n                                                        <div class="form-group">\r\n                                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                          <div\r\n                                                            class="pull-left"\r\n                                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                                          >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                    \x3c!--  --\x3e\r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download All" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download Selected Data" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()" matTooltipPosition="above" matTooltip="Download Sample File" >Sample File Download</button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openEdit(\'\', rowData)">\r\n                                    <td style="width:200px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" \r\n                                            (click)="openView(view,rowData)" matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n\r\n                                        <span data-target="#editItem" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="openEdit(contentEdit,rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button\r\n                                         (click)="openEdit(contentEdit,rowData)" matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        \r\n                                        <span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openDelete(content,rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete" \r\n                                        matTooltipPosition="above" (click)="openDelete(content,rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal" ><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" data-target="#contentHist" data-toggle="modal" \r\n                                         (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view">\r\n                                           <a class="btn nobg" (click)="openView(view,rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="assetDepList && assetDepList.length == 0 || assetDepList && assetDepList.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label> \r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Asset Dep Convention:\r\n            <span class="new-label">{{restorerecord.name}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<ng-template #view class="modal fade " id="view" role="dialog">\r\n\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n            <h4 class="modal-title"> Depreciation Convension Details</h4>\r\n        </div>\r\n        <div class="modal-body viewform">\r\n            <div class="col-sm-12">\r\n                <p>\r\n                    <span class="label">\r\n                        <b> Dep Convension Code: </b>\r\n                    </span>\r\n                    <span class="value">{{code}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b> Dep Convension Name: </b>\r\n                    </span>\r\n                    <span class="value">{{name}}</span>\r\n                </p>\r\n\r\n                <p>\r\n                    <span class="label">\r\n                        <b> Dep Convension Memo: </b>\r\n                    </span>\r\n                    <span class="value">{{memo}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Created By: </b>\r\n                    </span>\r\n                    <span class="value">{{createdBy}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Created Date: </b>\r\n                    </span>\r\n                    <span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Updated By: </b>\r\n                    </span>\r\n                    <span class="value">{{updatedBy}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Updated Date: </b>\r\n                    </span>\r\n                    <span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n            </div>\r\n            <div class="clear"></div>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>\r\n\x3c!--Confirmation for Delete--\x3e\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Dep Convension Code:\r\n            <span class="new-label">{{code_Name}}</span>\r\n        </strong>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" (click)="removeAssetDepConventionType()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n\r\n        <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n        <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Depreciation Convension </h4>\r\n\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="SaveandEditDepConvension()">\r\n            <div class="form-group">\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label for="name" class="control-label">\r\n                            Depreciation Convension\r\n                            <span class="clr-red">*</span>\r\n                        </label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        \x3c!--<p-autoComplete field="code" [(ngModel)]="codeName" (onSelect)="partnmId($event)" (onKeyUp)="eventHandler(\'code\', $event.target.value)" name="code"\r\n                                        [suggestions]="localCollection" (completeMethod)="filterDisposalType($event)" [size]="30" [minLength]="1"\r\n                                        [dropdown]="true" class="p-autoComplete-ctsm" required>--\x3e\r\n                        <p-autoComplete [(ngModel)]="codeName" name="codeName" (onSelect)="partnmId($event)" (onKeyUp)="eventHandler($event)" [suggestions]="localCollection" (completeMethod)="filterDepConvension($event)" [size]="30"\r\n                                        [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                            <ng-template let-codeName pTemplate="item">\r\n                                <div class="ui-helper-clearfix">{{codeName}}</div>\r\n                            </ng-template>\r\n\r\n                        </p-autoComplete>\r\n                        <div *ngIf="disableSave" class="clr-red">Already Exists</div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label for="AssetDepConventionName" class="control-label control-item">\r\n                            Name\r\n                            <span class="clr-red">*</span>\r\n                        </label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <input type="text" name="name" class="form-control" required #Name="ngModel" [(ngModel)]="sourceAction.name" minlength="2">\r\n                        <div *ngIf="Name.dirty && Name.errors?.required && Name.errors" class="invalid-form-error-message">\r\n                            Dep Convension Name required.\r\n                        </div>\r\n                        <div *ngIf="Name.dirty && Name.errors?.minlength && Name.errors" class="invalid-form-error-message">\r\n                            Dep Convension Name must be at least 2 characters long.\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label for="AssetDepConventionMemo" class="control-label">Memo</label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <textarea class="text-item" #memo="ngModel" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceAction.memo" minlength="2"></textarea>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <div class="col-sm-6">\r\n                    <div class="checkbox-cstm check-value">\r\n                        <label>\r\n                            <input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input trigger2" checked id="isActive" [(ngModel)]="sourceAction.isActive" [ngModelOptions]="{standalone: true}">\r\n                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                            Active\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button class="btn btn-primary" [disabled]="!userForm.valid || disableSave" (click)="SaveandEditDepConvension()">{{isEdit ? \'Update\' : \'Save\' }}</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Depreciation Convention</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Code</th>\r\n                                <th>Name</th>\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'assetDepConventionCode\', audit.assetDepConventionCode)  ? \'black\' : \'red\'  }">{{audit.assetDepConventionCode}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'assetDepConventionName\', audit.assetDepConventionName)  ? \'black\' : \'red\'  }">{{audit.assetDepConventionName}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'assetDepConventionMemo\', audit.assetDepConventionMemo)  ? \'black\' : \'red\'  }">{{audit.assetDepConventionMemo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n'},"85Bt":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                     \r\n                        <div class="inline-block display-flex">\r\n                           \r\n                            <h3 class="po-head lead">{{header}}</h3>\r\n                            &nbsp;&nbsp;\r\n                           \r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltip="Add {{rowName}}" tooltipPosition="right" \r\n                             data-target="#editItem" data-toggle="modal"\r\n                              (click)="addNewItem()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">{{header}}</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#editItem" data-toggle="modal"\r\n                              (click)="addNewItem()"\r\n                                  >\r\n                                  Add {{rowName}}\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                        <p-table #dt\r\n                                 class="rpo-table-cstm rro-table-cstm"\r\n                                 [value]="itemList"\r\n                                 [first]="pageIndex"\r\n                                 [rows]="pageSize"\r\n                                 [paginator]="true"\r\n                                 [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]"\r\n                                 [columns]="selectedColumns"\r\n                                 selectionMode="multiple"\r\n                                 [resizableColumns]="true"\r\n                                 [reorderableColumns]="true"\r\n                                 [scrollable]="true"\r\n                                 [totalRecords]="totalRecords"\r\n                                 scrollHeight="450px">\r\n                            \x3c!--caption--\x3e\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2"\r\n                                                   [options]="columnHeaders"\r\n                                                   optionLabel="header"\r\n                                                   [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                                   selectedItemsLabel="{0} columns selected"\r\n                                                   defaultLabel="Choose Columns">\r\n                                    </p-multiSelect>\r\n\r\n                                </div>\r\n                                <div class="col">\r\n                                  \r\n                                      <div\r\n                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                      >\r\n                                        <div class="form-group">\r\n                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                          <div\r\n                                            class="pull-left"\r\n                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                          >\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>In-Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                        (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>All\r\n                                                    </label>\r\n                                                </div>\r\n                                                    <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                      <label style="width: auto !important;margin-top: 3px;">\r\n                                                        \x3c!--  --\x3e\r\n                                                        <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                         (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                          />\r\n                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                      Show  Deleted List \r\n                                                      </label>\r\n                                                    </div>\r\n                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="row">\r\n                                  <div class="col">\r\n                                    <button type="button" class="btn btn-primary" style="padding: 5px 12px !important;" matTooltip="Download All Data"   matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary"  style="padding: 5px 12px !important;" matTooltip="Download Selected"   matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" class="uploaddoc upload-file" data-multiple-caption="{count} files selected"\r\n                                               accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" (change)="bulkUpload($event)">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above"  >\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()" matTooltipPosition="above" matTooltip="Download Sample File"  >Sample File Download</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            </ng-template>\r\n                            \x3c!--header with search--\x3e\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position: sticky" *ngIf="selectedColumns.length> 0">Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position: sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            \x3c!--body--\x3e\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}" (onChange)="toggleActiveStatus(rowData)" matTooltip="Toggle Status"></p-inputSwitch>--\x3e\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="toggleActiveStatus(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="toggleActiveStatus(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="toggleActiveStatus(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" matTooltipPosition="above" (click)="viewItemDetails(rowData)" data-target="#view" data-toggle="modal" matTooltip="View">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \x3c!--Step x: update the on-click event--\x3e\r\n                                       \r\n                                        <span data-target="#editItem" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="showItemEdit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                        (click)="showItemEdit(rowData)" matTooltip="Edit"\r\n                                         matTooltipPosition="above" data-target="#editItem" data-toggle="modal">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span  data-target="#delete" data-toggle="modal" >\r\n                                            <a class="btn nobg" \r\n                                            (click)="confirmItemDelete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button \r\n                                        matTooltip="Delete" matTooltipPosition="above" \r\n                                        (click)="confirmItemDelete(rowData)"\r\n                                         data-target="#delete" data-toggle="modal">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-target="#itemHistory" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="showHistory(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button \r\n                                        matTooltip="History" matTooltipPosition="above" \r\n                                        (click)="showHistory(rowData)" data-target="#itemHistory"\r\n                                         data-toggle="modal">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="itemList && itemList.length == 0 || itemList && itemList.length ==null">\r\n                             <tr>\r\n                               <td [attr.colspan]="7" class="no-records-cstm">\r\n                                  No records found\r\n                                </td>\r\n                            </tr>\r\n                          </ng-template>\r\n                            \r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \x3c!--to-do:use same modal to view, add, update, and delete--\x3e\r\n    \x3c!--Modal for view only--\x3e\r\n\r\n    <div #view *ngIf="itemDetails" class="modal fade" id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-sm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">\xd7</button>\r\n                    <h4 class="modal-title">{{rowName}} Details</h4>\r\n                </div>\r\n                <div class="modal-body viewform">\r\n                    <div class="col-sm-12">\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Id: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.glcid}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Name: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.glAccountCategoryName}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Created By: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.createdBy}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Created Date: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Last Updated By: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.updatedBy}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Last Updated Date: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n      \r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n           \r\n        </div>\r\n        <div class="modal-body">\r\n            <strong>\r\n               GL Account Category\r\n                <span class="new-label">{{restorerecord.rowName}}</span>\r\n            </strong>\r\n        </div>\r\n      \r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n      </ng-template> \r\n    \x3c!--Step x: Modal for Edit--\x3e\r\n    <div #editItem id="editItem" class="modal fade" role="dialog" *ngIf="currentModeOfOperation === 2 || currentModeOfOperation === 3" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">{{currentModeOfOperation === 3 ? "Edit" : "Add"}} {{rowName}} </h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <form #AssetType="ngForm">\r\n                        <div class="form-group">\r\n                            \x3c!--<div class="col-sm-12">\r\n                                <div class="col-sm-4">\r\n                                    <label for="glcId" class="control-label">GLC Id</label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <textarea class="text-item" #memo="ngModel" id="glcid" name="glcid" [(ngModel)]="addNew.glcid" (ngModelChange)="getChange()"\r\n                                               format="number"></textarea>\r\n                                </div>\r\n                            </div>--\x3e\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-4">\r\n                                    <label for="name" class="control-label">Name</label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    \x3c!--<textarea class="text-item" #memo="ngModel" id="name" name="name" [(ngModel)]="currentRow.glAccountCategoryName" minlength="2"></textarea>--\x3e\r\n                                    <p-autoComplete field="glAccountCategoryName" [(ngModel)]="addNew.glAccountCategoryName"\r\n                                                    (onSelect)="selectedGLACategoryType($event)"\r\n                                                    (onKeyUp)="checkGLACategoryTypeExists(\'glAccountCategoryName\', $event.target.value)"\r\n                                                    name="glAccountCategoryName" (onBlur)="onBlur($event)" [suggestions]="glAccountCategoryList"\r\n                                                    (completeMethod)="filterGLACategoryType($event)" [size]="30" [minLength]="1"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\r\n                                    </p-autoComplete>\r\n                                    <div *ngIf="disableSaveCatagotytypeMsg" class="clr-red">Already Exists</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <div class="col-sm-6">\r\n                                <div class="checkbox-cstm">\r\n                                    <label>\r\n                                        <input type="checkbox" name="isActive" (ngModelChange)="getChange()" #isActive="ngModel"\r\n                                               class="form-check-input trigger2" checked id="isActive" [(ngModel)]="addNew.isActive" [ngModelOptions]="{standalone: true}">\r\n                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                        Active\r\n                                    </label>                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button class="btn btn-primary" data-dismiss="modal" [disabled]="!AssetType.valid || disableSaveGLCategoryName"\r\n                            (click)="currentModeOfOperation === 2 ? saveNewItem() : updateItem();"> {{currentModeOfOperation == 3 ? \'Update\' : \'Save\' }}</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    \x3c!--Modal for delete only--\x3e\r\n    <div #delete *ngIf="currentModeOfOperation === 4" id="delete" class="modal fade"\r\n     role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">Confirm Deletion</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <strong>\r\n                        Are you sure you want to delete {{rowName}}?\r\n                    </strong>\r\n                    <span class="new-label"></span>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                     (click)="deleteItem()">Yes</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModal()">No</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n    \x3c!--Step x: Audit modal--\x3e\r\n    <div #itemHistory *ngIf="currentModeOfOperation === 5" class="modal fade" id="itemHistory" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <h4 class="modal-title">History of {{rowName}}</h4>\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="table-responsive">\r\n                        <table class="table table-bordered">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>GLC Id</th>\r\n                                    <th>Name</th>\r\n                                    <th>Active</th>\r\n                                    <th>Last Updated By</th>\r\n                                    <th>Last Updated Time</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'glcid\', audit.glcid)  ? \'black\' : \'red\'  }">{{audit.glcid}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'glAccountCategoryName\', audit.glAccountCategoryName)  ? \'black\' : \'red\'  }">{{audit.glAccountCategoryName}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate| date: \'MM/dd/yyyy h:mm:ss a\'}}</td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModal()">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>'},"8lm4":function(t,e,a){"use strict";a.r(e),e.default='\r\n<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                <h4 class="page-heading clr-green">Adjustment Reason</h4>\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Adjustment Reason</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltipPosition="above"\r\n                             matTooltip="Add Stock Adjustment Reason"\r\n                              tooltipPosition="right" (click)="open(contentEdit)">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Adjustment Reason</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="open(contentEdit)"\r\n                                  >\r\n                                  Add Stock Adjustment Reason\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <div class="form-row col-row col-row1">\r\n                            <div class="col-md-4 display-flex inline-block" style="margin-top: 25px;">\r\n                                <div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                      \r\n                \r\n\r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="adjustmentReasonList" [metaKeySelection]="true"\r\n                         [totalRecords]="totalRecords" [rows]="pageSize" [paginator]="true" [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" (onPage)="changePage($event)" selectionMode="multiple"\r\n                                 [resizableColumns]="true" [reorderableColumns]="true" [scrollable]="true" scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="selectedData" optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left">\r\n                                    </p-multiSelect>\r\n\r\n                                </div>\r\n                                <div class="col">\r\n                                  \r\n                                      <div\r\n                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                      >\r\n                                        <div class="form-group">\r\n                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                          <div\r\n                                            class="pull-left"\r\n                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                          >\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>In-Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                        (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>All\r\n                                                    </label>\r\n                                                </div>\r\n                                                    <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                      <label style="width: auto !important;margin-top: 3px;">\r\n                                                        \x3c!--  --\x3e\r\n                                                        <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                         (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                          />\r\n                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                      Show  Deleted List \r\n                                                      </label>\r\n                                                    </div>\r\n                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="row">\r\n                                  <div class="col">\r\n\r\n                                    <button type="button" class="btn btn-primary new-table-button" label="Export Data" style="padding: 5px 12px !important;" matTooltip="Download Data" matTooltipPosition="above" pButton icon="fa-download" iconPos="left" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" label="Export Selected Data"  style="padding: 5px 12px !important;" matTooltip="Download Selected Data" matTooltipPosition="above" pButton icon="fa-download" iconPos="left" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                   \r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()" matTooltip="Download Sample File" matTooltipPosition="above">Sample File Download</button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openEdit(\'\',rowData)">\r\n                                    <td style="width:200px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" \r\n                                            (click)="openView(view,rowData)" matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        <span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openEdit(contentEdit,rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                        (click)="openEdit(contentEdit,rowData)" matTooltip="Edit"\r\n                                         matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openDelete(content,rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button \r\n                                        matTooltip="Delete" matTooltipPosition="above"\r\n                                         (click)="openDelete(content,rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" data-target="#contentHist" data-toggle="modal"\r\n                                          (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view">\r\n                                           <a class="btn nobg" (click)="openView(view,rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="adjustmentReasonList && adjustmentReasonList.length == 0 || adjustmentReasonList && adjustmentReasonList.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label> \r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #view class="modal fade " id="view" role="dialog">\r\n\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n            <h4 class="modal-title"> Stock Adjustment Reason Details</h4>\r\n        </div>\r\n        <div class="modal-body viewform">\r\n            <div class="col-sm-12">\r\n                <p>\r\n                    <span class="label">\r\n                        <b> Adjustment Reason Id: </b>\r\n                    </span>\r\n                    <span class="value">{{ID}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b> Stock Adjustment Reason: </b>\r\n                    </span>\r\n                    <span class="value">{{StockAdjustmentReasonName}}</span>\r\n                </p>\r\n\r\n                <p>\r\n                    <span class="label">\r\n                        <b> Memo: </b>\r\n                    </span>\r\n                    <span class="value">{{memo}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Created By: </b>\r\n                    </span>\r\n                    <span class="value">{{createdBy}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Created Date: </b>\r\n                    </span>\r\n                    <span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Updated By: </b>\r\n                    </span>\r\n                    <span class="value">{{updatedBy}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Updated Date: </b>\r\n                    </span>\r\n                    <span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n            </div>\r\n            <div class="clear"></div>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Stock Adjustment Reason:\r\n            <span class="new-label">{{restorerecord.stockAdjustmentReason}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Stock Adjustment Reason Name:\r\n            <span class="new-label">{{code_Name}}</span>\r\n        </strong>\r\n    </div>\r\n\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="deleteItemAndCloseModel()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" (click)="editItemAndCloseModel()" data-dismiss="modal">&times;</button>\r\n        <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Stock Adjustment Reason  </h4>\r\n</div>\r\n    <div class="modal-body">\r\n        <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="editItemAndCloseModel()">\r\n            <div class="form-group">\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label for="name" class="control-label">\r\n                            Stock Adjustment Reason\r\n                            <span class="clr-red">*</span>\r\n                        </label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <p-autoComplete [(ngModel)]="stockAdjustmentReason" name="stockAdjustmentReason" (onSelect)="partnmId($event)" (onKeyUp)="eventHandler($event)" [suggestions]="localCollection" (completeMethod)="filterStockAdjReason($event)" [size]="30"\r\n                                        [minLength]="1" (ngModelChange)="getmemo()" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                            <ng-template let-stockAdjustmentReason pTemplate="item">\r\n                                <div class="ui-helper-clearfix">{{stockAdjustmentReason}}</div>\r\n                            </ng-template>\r\n\r\n                        </p-autoComplete>\r\n                        <div *ngIf="disableSave" class="clr-red">Already Exists</div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label for="Memo" class="control-label">Memo</label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <textarea class="text-item" (ngModelChange)="getmemo()" #memo="ngModel" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceAction.memo" minlength="2"></textarea>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <div class="col-sm-6">\r\n                    <div class="checkbox-cstm check-value">\r\n                        <label>\r\n                            <input type="checkbox" name="isActive" (ngModelChange)="getmemo()" #isActive="ngModel" class="form-check-input trigger2" checked id="isActive" [(ngModel)]="sourceAction.isActive" [ngModelOptions]="{standalone: true}">\r\n                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                            Active\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button class="btn btn-primary" [disabled]="!userForm.valid || disableSave || disableSaveForEdit" (click)="editItemAndCloseModel()">{{isEdit ? \'Update\' : \'Save\' }}</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Stockline Adjustment Reason</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>ID</th>\r\n                                <th>Stockline Adj Reason </th>\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'adjustmentReasonId\', audit.adjustmentReasonId)  ? \'black\' : \'red\'  }">{{audit.adjustmentReasonId}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n'},"8xXy":function(t,e,a){"use strict";a.r(e),e.default=".x_panel {\n  border: none;\n}\n\n.control-label {\n  width: 150px !important;\n}"},"9Dln":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n\t<div class="right_col" role="main">\r\n\t\t<div class="x_panel">\r\n\t\t\t<div class="x_content">\r\n\t\t\t\t\x3c!-- <div class="card">\r\n\t\t\t\t\t<div class="card-body">\r\n\t\t\t\t\t\t<div class="inline-block display-flex">\r\n\t\t\t\t\t\t\t<h3 class="po-head lead">Item Group</h3>\r\n\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" matTooltipPosition="above" \r\n                            matTooltip="Add Item Group" tooltipPosition="right"\r\n\t\t\t\t\t\t\t data-target="#addItemGroup" data-toggle="modal"\r\n\t\t\t\t\t\t\t  (click)="resetItemGroupForm()">\r\n\t\t\t\t\t\t\t\t<i class="fa fa-plus-circle fa-lg"></i>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div> --\x3e\r\n\t\t\t\t\t\t<div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Item Group</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n\t\t\t\t\t\t\t\t\tdata-target="#addItemGroup" data-toggle="modal"\r\n\t\t\t\t\t\t\t\t\t(click)="resetItemGroupForm()"\r\n                                  >\r\n                                    Add Item Group\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n\t\t\t\t\t\t\r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="itemGroupData"\r\n                         [first]="0" [rows]="pageSize" [metaKeySelection]="true"\r\n                          [paginator]="true"\r\n                                 [pageLinks]="3" [rowsPerPageOptions]="[10,20,50,100]"\r\n                                  [columns]="selectedColumns" selectionMode="multiple" \r\n                                  (onPage)="changePage($event)"\r\n                                 [(selection)]="selectedColumn" [resizableColumns]="true"\r\n                                  [reorderableColumns]="true" [scrollable]="true" [totalRecords]="totalRecords"\r\n\t\t\t\t\t\t\t\t scrollHeight="450px">\r\n\t\t\t\t\t\t\t<ng-template pTemplate="caption">\r\n\t\t\t\t\t\t\t\t<div class="row">\r\n                                    <div class="col">\r\n\t\t\t\t\t\t\t\t\t<p-multiSelect [options]="itemGroupHeaders" [(ngModel)]="selectedColumns" optionLabel="header" \r\n\t\t\t\t\t\t\t\t\t\t\t\t   [style]="{minWidth: \'200px\'}" style="float:left" (onChange)="columnsChanges()" >\r\n\t\t\t\t\t\t\t\t\t</p-multiSelect>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="col">\r\n\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t  <div\r\n\t\t\t\t\t\t\t\t\t\tstyle="width: 370px; float: right; padding-top: 3px;"\r\n\t\t\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t\t\t\t\t  \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n\t\t\t\t\t\t\t\t\t\t  <div\r\n\t\t\t\t\t\t\t\t\t\t\tclass="pull-left"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle="margin-top: 4px; margin-right: 15px;"\r\n\t\t\t\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>Active\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>In-Active\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>All\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="checkbox-cstm" style="margin-left: 0;">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  <label style="width: auto !important;margin-top: 3px;">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\x3c!--  --\x3e\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t (click)="getDeleteListByStatus($event.target.checked)"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  Show  Deleted List \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  </label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="row">\r\n\t\t\t\t\t\t\t\t\t<div class="col">\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t <button type="button" class="btn btn-primary new-table-button" pButton icon="fa-download"  style="padding: 5px 12px !important;" iconPos="left" label="Export Data" matTooltip="Download Data" matTooltipPosition="above"   (click)="dt.exportCSV()"></button>\r\n\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-primary new-table-button" pButton icon="fa-download"  style="padding: 5px 12px !important;" iconPos="left" label="Export Selection Only" matTooltip="Download Selected" matTooltipPosition="above"  \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="dt.exportCSV({selectionOnly:true})"></button>\r\n\t\t\t\t\t\t\t\t\t<div class="excel-upload excel-upload-cstm">\r\n\t\t\t\t\t\t\t\t\t\t<input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file" \r\n\t\t\t\t\t\t\t\t\t\t\t   accept=".xlsx, .xls, .csv">\r\n\t\t\t\t\t\t\t\t\t\t<label for="upload">\r\n\t\t\t\t\t\t\t\t\t\t\t<span matTooltip="Upload Data (Excel)"   matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-upload"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t&nbsp; &nbsp;\r\n\t\t\t\t\t\t\t\t\t   <button class="btn btn-primary" (click)="sampleExcelDownload()"  style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download Sample File">Sample File Download</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="colgroup" let-columns>\r\n\t\t\t\t\t\t\t\t<colgroup>\r\n\t\t\t\t\t\t\t\t\t<col *ngFor="let col of columns" style="width:140px">\r\n\t\t\t\t\t\t\t\t\t<col style="width: 80px;">\r\n\t\t\t\t\t\t\t\t</colgroup>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="header" let-columns>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n\t\t\t\t\t\t\t\t\t\t{{col.header}}\r\n\t\t\t\t\t\t\t\t\t\t<p-sortIcon [field]="col.field"></p-sortIcon>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th style="width:150px;position:sticky" *ngIf="selectedColumns.length> 0">Actions</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th *ngFor="let col of columns" [ngSwitch]="col.field">\r\n\t\t\t\t\t\t\t\t\t\t<input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th style="width:150px;position:sticky"></th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n\t\t\t\t\t\t\t\t<tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="viewSelectedRow(rowData)" [pSelectableRowIndex]="rowIndex">\r\n\t\t\t\t\t\t\t\t\t<td *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal" data-target="#view">\r\n\t\t\t\t\t\t\t\t\t\t{{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n\t\t\t\t\t\t\t\t\t\t(rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td class="action-icons-cstm" style="width:150px" *ngIf="selectedColumns.length> 0">\r\n\t\t\t\t\t\t\t\t\t\t\x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf="currentDeletedstatus==false">\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span data-toggle="modal" data-target="#view">\r\n\t\t\t\t\t\t\t\t\t\t\t<a class="btn nobg" matTooltipPosition="above"\r\n\t\t\t\t\t\t\t\t\t\t\t (click)="viewSelectedRow(rowData)" matTooltip="View">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-eye"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\t\t\t<span data-target="#addItemGroup" data-toggle="modal">\r\n\t\t\t\t\t\t\t\t\t\t\t<a class="btn nobg" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="edit(rowData)"\r\n\t\t\t\t\t\t\t\t\t\t\tmatTooltip="Edit" \r\n\t\t\t\t\t\t\t\t\t\t\tmatTooltipPosition="above"><i class="fa fa-pencil">                          \r\n\t\t\t\t\t\t\t\t\t\t\t</i></a> </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)" \r\n\t\t\t\t\t\t\t\t\t\tdata-target="#addShipvia" data-toggle="modal" matTooltip="edit"\r\n\t\t\t\t\t\t\t\t\t\t matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t<span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="delete(rowData)" \r\n\t\t\t\t\t\t\t\t\t\t\tmatTooltip="Delete"  matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-delete" mat-icon-button matTooltip="delete"\r\n\t\t\t\t\t\t\t\t\t\t matTooltipPosition="above" data-target="#delete" data-toggle="modal" \r\n\t\t\t\t\t\t\t\t\t\t (click)="delete(rowData)">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon color="warn">delete</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="getAuditHistoryById(rowData)"\r\n\t\t\t\t\t\t\t\t\t\t\t matTooltip="History" matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-history" mat-icon-button matTooltip="history" \r\n\t\t\t\t\t\t\t\t\t\tmatTooltipPosition="above" data-target="#contentHist" data-toggle="modal" \r\n\t\t\t\t\t\t\t\t\t\t(click)="getAuditHistoryById(rowData)">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon color="green">history</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div *ngIf="currentDeletedstatus==true">\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n\t\t\t\t\t\t\t\t\t\tmatTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n\t\t\t\t\t\t\t\t\t   <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t  <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n<ng-template pTemplate="emptymessage" let-columns *ngIf="itemGroupData?.length == 0">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t  <td [attr.colspan]="3" style="color: red; font-weight: bold; text-align: center">\r\n\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t  </td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="summary" id="footer">\r\n\t\t\t\t\t\t\t\t<label id="footer" class="footer">Total:</label>\r\n\t\t\t\t\t\t\t\t<input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t<label id="footer" class="footer1">Pages Count:</label>\r\n\t\t\t\t\t\t\t\t<input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t</p-table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t\t<div class="modal-dialog">\r\n\t\t\t<div class="modal-content">\r\n\t\t\t\t<div class="modal-header">\r\n\t\t\t\t\t<button type="button" class="close" data-dismiss="modal">&times;</button>\r\n\t\t\t\t\t<h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-body">\r\n\t\t\t\t\t<strong>\r\n\t\t\t\t\t\tItem Group :\r\n\t\t\t\t\t\t<span class="new-label">{{selectedRowforDelete.description}}</span>\r\n\t\t\t\t\t</strong>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-footer">\r\n\t\t\t\t\t<button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n\t\t\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n\t\t<div class="modal-header">\r\n\t\t\t<h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n\t  \r\n\t\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t\t</button>\r\n\t\t   \r\n\t\t</div>\r\n\t\t<div class="modal-body">\r\n\t\t\t<strong>\r\n\t\t\t\tItem Group :\r\n\t\t\t\t<span class="new-label">{{restorerecord.description}}</span>\r\n\t\t\t</strong>\r\n\t\t</div>\r\n\t  \r\n\t\t<div class="modal-footer">\r\n\t\t\t<button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel()">No</button>\r\n\t\t</div>\r\n\t  </ng-template> \r\n\r\n\t<div #addItemGroup id="addItemGroup" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t\t<div class="modal-dialog">\r\n\t\t\t<div class="modal-content">\r\n\t\t\t\t<div class="modal-header">\r\n\t\t\t\t\t<h4 class="modal-title" *ngIf="isEditMode">Edit Item Group</h4>\r\n\t\t\t\t\t<h4 class="modal-title" *ngIf="!isEditMode">Add Item Group</h4>\r\n\t\t\t\t\t<button type="button" class="close" aria-label="Close" data-dismiss="modal">\r\n\t\t\t\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-body">\r\n\t\t\t\t\t<form #userForm="ngForm">\r\n\t\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t\t<label for="description" class="control-label">\r\n\t\t\t\t\t\t\t\t\t\tItem Group ID \r\n\t\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span> \r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t\t<p-autoComplete field="itemGroupCode"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]="itemGroup.itemGroupCode"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t[suggestions]="itemGroupList"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(onSelect)="selectedItemGroupCode($event)"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(completeMethod)="filterItemGroupCode($event)"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(onKeyUp)="checkItemGroupCodeExists(\'itemGroupCode\', $event.target.value)"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname="itemGroupCode" [size]="30" [minLength]="1" [dropdown]="true"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass="p-autoComplete-ctsm" required (ngModelChange)="getmemo()">\r\n\t\t\t\t\t\t\t\t\t</p-autoComplete> \x3c!--(onBlur)="onBlur($event)"--\x3e\r\n\t\t\t\t\t\t\t\t\t<div *ngIf="disableSaveForItemGroupCodeMsg" class="clr-red">Already exist</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n\t\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t\t<label for="description" class="control-label">\r\n\t\t\t\t\t\t\t\t\t\tItem Group Name \r\n\t\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t\t<p-autoComplete field="description"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]="itemGroup.description"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t[suggestions]="itemGroupDescList"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(onSelect)="selectedItemGroupDesc($event)"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(completeMethod)="filterItemGroupDesc($event)"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(onKeyUp)="checkItemDescExists(\'description\', $event.target.value)"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname="description" [size]="30" [minLength]="1" [dropdown]="true"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass="p-autoComplete-ctsm" required  (ngModelChange)="getmemo()">\r\n\t\t\t\t\t\t\t\t\t</p-autoComplete> \x3c!--(onBlur)="onBlur($event)"--\x3e\r\n\t\t\t\t\t\t\t\t\t<div *ngIf="disableSaveForItemDescMsg" class="clr-red">Already exist</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t\t<label for="memo" class="control-label">Memo</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t\t<textarea #memo="ngModel" id="memo" name="memo"  (ngModelChange)="getmemo()" [(ngModel)]="itemGroup.memo"></textarea>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t\t<div class="col-sm-6">\r\n\t\t\t\t\t\t\t\t<div class="checkbox-cstm check-value">\r\n\t\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="isActive"\r\n\t\t\t\t\t\t\t\t\t\t class="form-check-input trigger2" \r\n\t\t\t\t\t\t\t\t\t\t[(ngModel)]="itemGroup.isActive"\r\n\t\t\t\t\t\t\t\t\t\t(ngModelChange)="getmemo()">\r\n\t\t\t\t\t\t\t\t\t\t<span class="cr">\r\n\t\t\t\t\t\t\t\t\t\t\t<i class="cr-icon pi pi-check"></i>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\tActive\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="modal-footer">\r\n\t\t\t\t\t\t\t<button class="btn btn-primary" data-dismiss="modal" [disabled]="!userForm.valid || disableSaveForItemGroupCodeMsg || disableSaveForItemDescMsg || disableSaveForEdit" (click)="saveItemGroup();"> {{isEditMode ? \'Update\' : \'Save\' }}</button>\r\n\t\t\t\t\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetItemGroupForm()">Close</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t\t<div class="modal-dialog modal-sm">\r\n\t\t\t<div class="modal-content">\r\n\t\t\t\t<div class="modal-header">\r\n\t\t\t\t\t<button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n\t\t\t\t\t<h4 class="modal-title">Item Group Details</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-body viewform ">\r\n\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\r\n                        <p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Item Group ID: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{ viewRowData.itemGroupCode}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Item Group Name: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{ viewRowData.description}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Memo: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{ viewRowData.memo}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Is Active: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Created By: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{viewRowData.createdBy }}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Created Date: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Updated By: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{viewRowData.updatedBy}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Updated Date: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-footer">\r\n\t\t\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetItemGroupForm()">Close</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\r\n\t\t</div>\t\r\n\t</div>\t\r\n\r\n\t<div id="contentHist" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t\t<div class="modal-dialog modal-lg">\r\n\t\t\t\x3c!-- Modal content--\x3e\r\n\t\t\t<div class="modal-content">\r\n\t\t\t\t<div class="modal-header">\r\n\t\t\t\t\t<button type="button" class="close" data-dismiss="modal">&times;</button>\r\n\t\t\t\t\t<h4 class="modal-title">History of Item Group</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-body">\r\n\t\t\t\t\t<div class="table-responsive rro-table-cstm">\r\n\t\t\t\t\t\t<table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th>Item Group Id</th>\r\n\t\t\t\t\t\t\t\t\t<th>Item Group Name</th>\r\n\t\t\t\t\t\t\t\t\t<th>Memo</th>\r\n\t\t\t\t\t\t\t\t\t<th>Is Active</th>\r\n\t\t\t\t\t\t\t\t\t<th>Updated By</th>\r\n\t\t\t\t\t\t\t\t\t<th>Updated Time</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody *ngIf="auditHistory.length> 0">\r\n\t\t\t\t\t\t\t\t<tr *ngFor="let audit of auditHistory; let i = index;">\r\n\t\t\t\t\t\t\t\t\t\x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n\t\t\t\t\t\t\t\t\t<td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'name\', audit.itemGroupCode)  ? \'black\' : \'red\'  }">{{audit.itemGroupCode}}</td>\r\n\t\t\t\t\t\t\t\t\t<td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'name\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n\t\t\t\t\t\t\t\t\t<td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n\t\t\t\t\t\t\t\t\t<td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'is Active\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{{audit.updatedBy}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\t\t\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t<ng-template #noDatavailable>\r\n\t\t\t\t\t\t\t<div class="text-center">\r\n\t\t\t\t\t\t\t\t<img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n\t\t\t\t\t\t\t\t<h4 style="color: #ff5663;">No History Found </h4>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-footer">\r\n\t\t\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t</div>'},"9bMV":function(t,e,a){"use strict";a.r(e),e.default=".search-box {\n  flex-direction: column;\n  box-sizing: border-box;\n  display: flex;\n}\n\n.search-box .mat-form-field {\n  padding: 0 2em;\n}"},"9bet":function(t,e,a){"use strict";a.d(e,"a",(function(){return n}));var n=function t(e,a,n,s,i,r,o,l,d,c,u,p){_classCallCheck(this,t),this.assetAcquisitionTypeId=a,this.code=n,this.name=s,this.memo=i,this.masterCompanyId=r,this.createdBy=o,this.updatedBy=l,this.createdDate=d,this.updatedDate=c,this.isDelete=u,this.isActive=p}},"9o+e":function(t,e,a){"use strict";a.r(e),e.default=".control-label {\n  margin-top: 10px;\n  text-align: left;\n  width: 150px !important;\n  font-weight: 500;\n}\n\n.clr-red {\n  color: red;\n}\n\n.btn-line {\n  line-height: 0.44 !important;\n  border-radius: 0px 5px 5px 0px !important;\n}\n\n.ui-autocomplete-input {\n  border-radius: 5px 0px 0px 5px !important;\n}\n\n.col-row1 {\n  margin-left: 2px;\n}\n\n.new-margin {\n  margin-top: 10px;\n}\n\n.modal .modal-body.editdepriciation label {\n  font-weight: normal !important;\n  width: 100% !important;\n  text-align: left;\n  margin-top: 0;\n}\n\n.modal .modal-body.editdepriciation .form-group {\n  margin-bottom: 10px;\n}"},BZRJ:function(t,e,a){"use strict";a.r(e),e.default=".x_panel {\n  border: none;\n}\n\n.new-label {\n  color: cadetblue;\n}\n\n.control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}"},BlHu:function(t,e,a){"use strict";a.r(e),e.default=".hideTab {\n  display: none !important;\n}\n\n.labels-font-header {\n  font-weight: normal !important;\n}\n\n.span-header-red {\n  color: red;\n  font-weight: bold;\n}\n\nlabel {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text],\ninput[type=number],\nselect,\ntextarea {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.isDisabled {\n  pointer-events: none;\n}\n\n.button-save-cstm {\n  margin-top: 30px;\n  margin-bottom: 100px;\n}\n\n:host ::ng-deep label.ui-dropdown-label {\n  font-size: 10px !important;\n}\n\n@media (min-width: 768px) {\n  .col-row .col-md-3 {\n    max-width: 22%;\n    margin-right: 30px;\n  }\n}\n\n::ng-deep .ui-inputtext.ui-widget:disabled {\n  background: #e9ecef !important;\n  opacity: 1 !important;\n}\n\n.grayColor {\n  color: gray;\n}\n\n.aligin_cer {\n  display: inline-flex;\n  width: 72%;\n  text-align: center;\n  padding-left: 8%;\n}\n\n.aligin_cer .value {\n  color: #ff5663;\n  padding-left: 4px;\n}\n\n.atv_cv {\n  position: relative;\n  top: -9px;\n  left: 23px;\n}"},CLit:function(t,e,a){"use strict";a.r(e),e.default=".search-box {\n  flex-direction: column;\n  box-sizing: border-box;\n  display: flex;\n}\n\n.search-box .mat-form-field {\n  padding: 0 2em;\n}"},DE1C:function(t,e,a){"use strict";a.r(e),e.default=".new-label {\n  color: cadetblue;\n}\n\n.text-item {\n  width: 100%;\n  border-radius: 5px !important;\n  margin-left: 0px;\n}\n\n.control-label {\n  margin-top: 5px;\n  text-align: left;\n  width: 100% !important;\n}"},DzsG:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!--<nav aria-label="breadcrumb">\r\n                    <ol class="breadcrumb">\r\n                        <li class="breadcrumb-item"><a routerLink="/">Dashboard</a></li>\r\n                        <li class="breadcrumb-item active" aria-current="page">Finding</li>\r\n                    </ol>\r\n                </nav>--\x3e\r\n                <h4 class="page-heading clr-green">Finding</h4>\r\n\r\n                <span class="help-icon" (click)="openHelpText(helpText)" data-original-title="Help" data-toggle="tooltip"><i class="fa fa-info" data-toggle="modal" data-target="#help-popup"></i></span>\r\n                <p-table #dt [value]="allFindingsInfo" [rows]="20" [metaKeySelection]="true" [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[20,50,100]" [columns]="selectedColumns" selectionMode="multiple" [(selection)]="selectedColumn" [resizableColumns]="true" [reorderableColumns]="true">\r\n                    <ng-template pTemplate="caption">\r\n\r\n                        <div style="text-align: right">\r\n                            <p-multiSelect [options]="cols" [(ngModel)]="selectedColumns" optionLabel="header"\r\n                                           selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n                            <div class="inner-addon right-addon w200 inline-block">\r\n                                <i class="fa fa-search"></i>\r\n                                <input type="text" pInputText size="50" class="form-control ui-autocomplete-input" (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter">\r\n                            </div>\r\n                            <button type="button" pButton icon="fa-download" iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                            <button type="button" pButton icon="fa-download" iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                            <a (click)="open(contentEdit)" matTooltip="Add Findings" class="btn btn-success nobg"><span><i class="fa fa-plus"></i></span></a>\r\n                            <div class="excel-upload">\r\n                                <input type="file" name="upload[]" id="upload" class="uploaddoc upload-file" data-multiple-caption="{count} files selected" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet">\r\n                                <label for="upload">\r\n                                    <span matTooltip="Upload Data (Excel)"><i class="fa fa-upload"></i></span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="header" let-columns>\r\n                        <tr>\r\n                            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                {{col.header}}\r\n                                <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                            </th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                        <tr [pSelectableRow]="rowData">\r\n                            <td *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                {{col.field == \'createdDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\'):rowData[col.field] && col.field == \'updatedDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\'):rowData[col.field]}}\r\n                            </td>\r\n                            <td>\r\n                                <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                <span data-toggle="modal" data-target="#view"> <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" (click)="openView(view,rowData)" matTooltip="View"><i class="fa fa-eye"></i></a> </span>\r\n\r\n                                <button class="btn-edit" mat-icon-button (click)="openEdit(contentEdit,rowData)" matTooltip="edit">\r\n                                    <mat-icon>edit</mat-icon>\r\n                                </button>\r\n                                <button class="btn-delete" mat-icon-button matTooltip="delete" (click)="openDelete(content,rowData)">\r\n                                    <mat-icon color="warn">delete</mat-icon>\r\n                                </button>\r\n                                <span (click)="showAuditPopup(auditContent,rowData.findingId)" data-toggle="modal" data-target="#history">\r\n                                    <a data-toggle="tooltip" title="" class="btn btn-success nobg" data-original-title="History">\r\n                                        <i class="fa fa-history"></i>\r\n                                    </a>\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="deleteItemAndCloseModel()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title" *ngIf="isEditMode">Edit Finding</h4>\r\n        <h4 class="modal-title" *ngIf="!isEditMode">Add Finding</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="editItemAndCloseModel()">\r\n            <div class="form-group">\r\n                <label for="name" class="control-label">Finding Code<span class="clr-red">*</span></label>\r\n                <div class="control-data">\r\n                    <p-autoComplete (onSelect)="partnmId($event)" (onKeyUp)=eventHandler($event) [(ngModel)]="findingName" [ngModelOptions]="{standalone: true}" [suggestions]="localCollection" (completeMethod)="filterFindings($event)" [size]="30"\r\n                                    [minLength]="1" [dropdown]="true">\r\n                        <ng-template let-findingName pTemplate="item">\r\n                            <div class="ui-helper-clearfix">{{findingName}}</div>\r\n                        </ng-template>\r\n                    </p-autoComplete>\r\n                    <div *ngIf="disableSave" style="color:red">Already Exist</div>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n\r\n\r\n            <div class="form-group">\r\n                <label for="netDays" class="control-label">Description<span class="clr-red">*</span></label>\r\n                <div class="inner-addon right-addon inline-block">\r\n\r\n                    <input type="text" name="description" class="form-control" required #description="ngModel" [(ngModel)]="sourceAction.description" minlength="2">\r\n                   \r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="netDays" class="control-label">Memo</label>\r\n                <div>\r\n                    <input type="text" name="memo" class="form-control" required #memo="ngModel" [(ngModel)]="sourceAction.memo" minlength="2">\r\n\r\n                   \r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            \r\n            <div class="form-group">\r\n                <div class="col-sm-6">\r\n                  \r\n                    <label class="form-check-label" for="isActive">\r\n                        <input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input" checked id="isActive" [(ngModel)]="sourceAction.isActive"> Active\r\n                    </label>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n\r\n\r\n            <div class="modal-footer">\r\n\r\n                <button class="btn btn-success" [disabled]="disableSave">Submit</button>\r\n                <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #contentHist let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n\r\n        <h4 class="modal-title">History of Findings</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n\r\n        <div class="table-responsive">\r\n            <table class="table table-bordered">\r\n                <thead>\r\n                    <tr>\r\n                        <th>FID</th>\r\n                        <th>Finding Code</th>\r\n                        <th>previousValue</th>\r\n                        <th>newValue</th>\r\n                        <th>Last Updated By</th>\r\n                        <th>Last Updated Time</th>\r\n                    </tr>\r\n                </thead>\r\n                <tr *ngFor="let audit of auditHisory">\r\n                    <td>{{audit.auditHistoryId}}</td>\r\n                    <td>{{audit.columnName}}</td>\r\n                    <td>{{audit.previousValue}}</td>\r\n                    <td>{{audit.newValue}}</td>\r\n                    <td>{{audit.updatedBy}}</td>\r\n                    <td>{{audit.updatedDate}}</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #view class="modal fade " id="view" role="dialog" data-backdrop="static">\r\n\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n            <h4 class="modal-title">Finding Details</h4>\r\n        </div>\r\n        <div class="modal-body viewform">\r\n            <div class="col-sm-6">\r\n                <p><span class="label"><b>Finding Name: </b></span><span class="value">{{finding_Name}}</span></p>\r\n                <p><span class="label"><b>Description: </b></span><span class="value">{{ description}}</span></p>\r\n                <p><span class="label"><b>Memo: </b></span><span class="value">{{memo}}</span></p>\r\n                <p><span class="label"><b>Created By: </b></span><span class="value">{{createdBy}}</span></p>\r\n                <p><span class="label"><b>Created Date: </b></span><span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span></p>\r\n                <p><span class="label"><b>Updated By: </b></span><span class="value">{{updatedBy}}</span></p>\r\n                <p><span class="label"><b>Updated Date: </b></span><span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span></p>\r\n            </div>\r\n\r\n            <div class="clear"></div>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-info" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog" data-backdrop="static">\r\n\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p><b>Excell format to upload the Data - <a href="documents/action-table-format.xlsx" class="clr-red">Download</a></b></p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>'},EVNn:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Dash Number</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" \r\n                            matTooltipPosition="above" matTooltip="Add Dash Number" \r\n                            tooltipPosition="right" data-target="#add" data-toggle="modal"\r\n                                (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Dash Number</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal"\r\n                                (click)="resetForm()"\r\n                                  >\r\n                                  Add Dash Number\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <p-table #dt \r\n                        class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" \r\n                        [first]="0" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true" \r\n                        [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple" \r\n                        [metaKeySelection]="true"\r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [totalRecords]="totalRecords" \r\n                        scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header" [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}"\r\n                                        style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n                                   \r\n                                    </div>\r\n                                    <div class="col">\r\n                                      \r\n                                          <div\r\n                                            style="width: 370px; float: right; padding-top: 3px;"\r\n                                          >\r\n                                            <div class="form-group">\r\n                                              \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                              <div\r\n                                                class="pull-left"\r\n                                                style="margin-top: 4px; margin-right: 15px;"\r\n                                              >\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>In-Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>All\r\n                                                        </label>\r\n                                                    </div>\r\n                                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                          <label style="width: auto !important;margin-top: 3px;">\r\n                                                            \x3c!--  --\x3e\r\n                                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                             (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                              />\r\n                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                          Show  Deleted List \r\n                                                          </label>\r\n                                                        </div>\r\n                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="row">\r\n                                      <div class="col">\r\n                                   \r\n                                        <button type="button" class="btn btn-primary new-table-button" matTooltip="Download  Data"  style="padding: 5px 12px !important;" matTooltipPosition="above" pButton icon="fa-download"\r\n                                        iconPos="left" label="Export Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected"  style="padding: 5px 12px !important;" matTooltipPosition="above" pButton icon="fa-download"\r\n                                        iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]"  id="upload" (change)="customDashNumberExcelUpload($event)" class="uploaddoc upload-file" accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltip="Download Sample File"  style="padding: 5px 12px !important;" matTooltipPosition="above" (click)="sampleExcelDownload()">Sample File Download\r\n                                        </button>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal"\r\n                                        data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" matTooltipPosition="above" (click)="viewSelectedRow(rowData)" matTooltip="view" data-target="#view"\r\n                                               data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                       \r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)" \r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)" \r\n                                        data-target="#add" matTooltipPosition="above" data-toggle="modal" matTooltip="Edit">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n                                       \r\n                                       \r\n                                        <span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete"\r\n                                         matTooltipPosition="above" data-target="#delete" data-toggle="modal" \r\n                                         (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" data-target="#contentHist" data-toggle="modal" \r\n                                         (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="5" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Dash Number:\r\n            <span class="new-label">{{restorerecord.description}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>Dash Number:\r\n                    <span class="new-label">{{selectedRowforDelete.dashNumber}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Dash Number</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">Aircraft Manufacturer:\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <select name="aircraftType" [(ngModel)]="addNew.aircraftTypeId" #aircraftTypeId="ngModel" (change)="aircraftManufacturerChange()"\r\n                                (ngModelChange)="getmemo()" required>\r\n                                    <option>-- Select --</option>\r\n                                    <option *ngFor="let object of aircraftManufacturerList" [ngValue]="object.aircraftTypeId">{{object.description}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">Aircraft Model:\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <select name="aircraftModelId" [(ngModel)]="addNew.aircraftModelId" #aircraftModelId="ngModel" (change)="getDashNumberByManfacturerandModel()"\r\n                                    required (ngModelChange)="getmemo()">\r\n                                    <option>-- Select --</option>\r\n                                    <option *ngFor="let object of aircraftModelsList" [ngValue]="object.aircraftModelId">{{object.aircraftModel}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">Dash Number\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="dashNumber" [(ngModel)]="addNew.dashNumber\r\n                                " (onSelect)="selectedDescription($event)" (onKeyUp)="checkGroupDescriptionExists(\'dashNumber\', $event.target.value)"\r\n                                    name="description" [suggestions]="descriptionList" (completeMethod)="filterDescription($event)"\r\n                                    [size]="30" [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required (ngModelChange)="getmemo()">\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForDescription" style="color:red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo"\r\n                                 name="memodescription" (ngModelChange)="getmemo()" [(ngModel)]="addNew.memo"\r\n                                  minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive" (ngModelChange)="getmemo()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" [disabled]="create.invalid || disableSaveForDescription || disableSaveDashnumber "\r\n                    (click)="save();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Dash Number Code</th>\r\n                                <th>Description</th>\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                <td>{{ext.workPerformedCode}}</td>\r\n                                <td>{{ext.description}}</td>\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Dash Number</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Aircraft Manufacturer</th>\r\n                                <th>Aircraft Model</th>\r\n                                <th>Dash Number</th>\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'aircraft\', audit.aircraft)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.aircraft}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'model\', audit.model)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.model}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'dashNumber\', audit.dashNumber)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.dashNumber}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.memo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Dash Number Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Aircraft Manufacturer: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.aircraftType}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Model Name: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.aircraftModel}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Dash Number: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.dashNumber}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">IsActive</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},EtW6:function(t,e,a){"use strict";a.r(e),e.default=".new-label {\n  color: cadetblue;\n}\n\n.control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}\n\n.x_panel {\n  border: none;\n}"},FAFl:function(t,e,a){"use strict";a.r(e),e.default=".footer {\n  margin-left: 65%;\n}\n\n.footer1 {\n  margin-right: 0px;\n}\n\n.new-label {\n  color: cadetblue;\n}\n\n.text-item {\n  width: 100%;\n  border-radius: 5px !important;\n  margin-left: 0px;\n}\n\n.control-label {\n  margin-top: 5px;\n  text-align: left;\n  width: 100% !important;\n}"},FCB4:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n\t<div class="right_col" role="main">\r\n\t\t<div class="x_panel">\r\n\t\t\t<div class="x_content">\r\n\t\t\t\t\x3c!-- <div class="card">\r\n\t\t\t\t\t<div class="card-body">\r\n\t\t\t\t\t\t<div class="inline-block display-flex">\r\n\t\t\t\t\t\t\t<h3 class="po-head lead">Sites</h3>\r\n\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t<a class="plusicon-cstm new-margin"\r\n\t\t\t\t\t\t\t matTooltipPosition="above" matTooltip="Add Site" \r\n\t\t\t\t\t\t\t tooltipPosition="right" (click)="open(contentEdit)">\r\n\t\t\t\t\t\t\t\t<i class="fa fa-plus-circle fa-lg"></i>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div> --\x3e\r\n\t\t\t\t\t\t<div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Sites</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n\t\t\t\t\t\t\t\t\t(click)="open(contentEdit)"\r\n                                  >\r\n                                    Add Site\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n\r\n\t\t\t\t\t\t<p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n\t\t\t\t\t\t[totalRecords]="totalRecords" \r\n\t\t\t\t\t\t[value]="siteData" \r\n\t\t\t\t\t\t[rows]="10" \r\n\t\t\t\t\t\t\t\t [lazy]="true" (onLazyLoad)="loadAllSiteData($event)"\r\n\t\t\t\t\t\t[paginator]="true"\r\n\t\t\t\t\t\t [pageLinks]="3" \r\n\t\t\t\t\t\t [rowsPerPageOptions]="[10,20,50,100]" \r\n\t\t\t\t\t\t [columns]="selectedColumns" \r\n\t\t\t\t\t\t selectionMode="multiple" \r\n\t\t\t\t\t\t [metaKeySelection]="true"\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t [(selection)]="selectedColumn" \r\n\t\t\t\t\t\t [resizableColumns]="true" \r\n\t\t\t\t\t\t [reorderableColumns]="true" \r\n\t\t\t\t\t\t [scrollable]="true" \r\n\t\t\t\t\t\t scrollHeight="450px">\r\n\t\t\t\t\t\t\t<ng-template pTemplate="caption">\r\n\t\t\t\t\t\t\t\t<div class="row">\r\n                                    <div class="col">\r\n\t\t\t\t\t\t\t\t\t<p-multiSelect [maxSelectedLabels]="2"  class="p-Multiselect-cstm" [options]="cols"\r\n\t\t\t\t\t\t\t\t\t [(ngModel)]="selectedColumns" optionLabel="header" \r\n\t\t\t\t\t\t\t\t\t selectedItemsLabel="{0} columns selected"\r\n\t\t\t\t\t\t\t\t\t [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns"\r\n\t\t\t\t\t\t\t\t\t  style="float:left">\r\n\t\t\t\t\t\t\t\t\t</p-multiSelect>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="col">\r\n\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t  <div\r\n\t\t\t\t\t\t\t\t\t\tstyle="width: 370px; float: right; padding-top: 3px;"\r\n\t\t\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t\t\t\t\t  \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n\t\t\t\t\t\t\t\t\t\t  <div\r\n\t\t\t\t\t\t\t\t\t\t\tclass="pull-left"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle="margin-top: 4px; margin-right: 15px;"\r\n\t\t\t\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t\t\t  <label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>Active\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n\t\t\t\t\t\t\t\t\t\t<label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>In-Active\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n\t\t\t\t\t\t\t\t\t\t<label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>All\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class="checkbox-cstm" style="margin-left: 0;">\r\n\t\t\t\t\t\t\t\t\t\t  <label style="width: auto !important;margin-top: 3px;">\r\n\t\t\t\t\t\t\t\t\t\t\t\x3c!--  --\x3e\r\n\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n\t\t\t\t\t\t\t\t\t\t\t (click)="getDeleteListByStatus($event.target.checked)"\r\n\t\t\t\t\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t\t\t\t\t\t<span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t  Show  Deleted List \r\n\t\t\t\t\t\t\t\t\t\t  </label>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="row">\r\n\t\t\t\t\t\t<div class="col">\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-primary new-table-button" matTooltipPosition="above" matTooltip="Download All Data"   pButton icon="fa-download"\r\n\t\t\t\t\t\t\t\t\t iconPos="left"  style="padding: 5px 12px !important;" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-primary new-table-button" matTooltipPosition="above"\r\n\t\t\t\t\t\t\t\t\t matTooltip="Download Selected"   pButton icon="fa-download" style="padding: 5px 12px !important"\r\n\t\t\t\t\t\t\t\t\t iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" class="uploaddoc upload-file" data-multiple-caption="{count} files selected"\r\n                                               accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" (change)="bulkUpload($event)">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;"  matTooltipPosition="above" matTooltip="Download sample file" (click)="sampleExcelDownload()">Sample File Download</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\x3c!-- <ng-template pTemplate="colgroup" let-columns>\r\n\t\t\t\t\t\t\t\t<colgroup>\r\n\t\t\t\t\t\t\t\t\t<col *ngFor="let col of columns" style="width:140px">\r\n\t\t\t\t\t\t\t\t</colgroup>\r\n\t\t\t\t\t\t\t</ng-template> --\x3e\r\n\t\t\t\t\t\t\t<ng-template pTemplate="header" let-columns>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th style="width:120px" *ngFor="let col of columns" pResizableColumn\r\n\t\t\t\t\t\t\t\t\t pReorderableColumn [pSortableColumn]="col.field">\r\n\t\t\t\t\t\t\t\t\t\t{{col.header}}\r\n\t\t\t\t\t\t\t\t\t\t<p-sortIcon [field]="col.field"></p-sortIcon>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th style="width:200px;position:sticky"\r\n\t\t\t\t\t\t\t\t\t *ngIf="selectedColumns.length> 0"> Actions</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th style="width:120px" *ngFor="let col of columns" \r\n\t\t\t\t\t\t\t\t\t[ngSwitch]="col.field">\r\n\t\t\t\t\t\t\t\t\t\t<input style="width:100%;" pInputText type="text"\r\n\t\t\t\t\t\t\t\t\t\t (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th style="width:180px;position:sticky"></th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n\t\t\t\t\t\t\t\t<tr [pSelectableRow]="rowData" pReorderableRowHandle [pSelectableRowIndex]="rowIndex" (dblclick)="openView(view,rowData)">\r\n\t\t\t\t\t\t\t\t\t<td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle \r\n\t\t\t\t\t\t\t\t\t(dblclick)="openView(view,rowData)" data-target="#view">\r\n\t\t\t\t\t\t\t\t\t\t{{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n\t\t\t\t\t\t\t\t\t\t(rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf="currentDeletedstatus==false">\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<span data-toggle="modal" data-target="#view">\r\n\t\t\t\t\t\t\t\t\t\t\t<a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="openView(view,rowData)" matTooltip="View" matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-eye"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openEdit(contentEdit,rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-edit" mat-icon-button \r\n\t\t\t\t\t\t\t\t\t\t(click)="openEdit(contentEdit,rowData)" matTooltip="Edit"\r\n\t\t\t\t\t\t\t\t\t\t matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="openDelete(content,rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-delete" mat-icon-button \r\n\t\t\t\t\t\t\t\t\t\tmatTooltip="Delete" matTooltipPosition="above"\r\n\t\t\t\t\t\t\t\t\t\t (click)="openDelete(content,rowData)">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon color="warn">delete</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span><a class="btn nobg" \r\n                                            (click)="showAuditPopup(auditContent,rowData.siteId)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-history" mat-icon-button \r\n\t\t\t\t\t\t\t\t\t\tmatTooltip="History" matTooltipPosition="above"\r\n\t\t\t\t\t\t\t\t\t\t (click)="showAuditPopup(auditContent,rowData.siteId)">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon color="green">history</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div *ngIf="currentDeletedstatus==true">\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n\t\t\t\t\t\t\t\t\t\tmatTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n\t\t\t\t\t\t\t\t\t   <span data-toggle="modal" data-target="#view">\r\n\t\t\t\t\t\t\t\t\t\t   <a class="btn nobg" (click)="openView(view,rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t  <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\r\n\r\n\t\t\t\t\t\t\t<ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="siteData && siteData.length == 0 || siteData && siteData.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="summary" id="footer">\r\n\r\n\t\t\t\t\t\t\t\t<label id="footer" class="footer1">Total:</label>\r\n\t\t\t\t\t\t\t\t\x3c!-- <p>{{uomData.length}}</p> --\x3e\r\n\t\t\t\t\t\t\t\t<input style="width: 5%;" [(ngModel)]="totalRecords"\r\n\t\t\t\t\t\t\t\t [disabled]="true" pInputText\r\n\t\t\t\t\t\t\t\t\t   type="text" /> &nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t<label id="footer" class="footer1">Pages Count:</label>\r\n\t\t\t\t\t\t\t\t<input style="width: 5%;" [(ngModel)]="totalPages"\r\n\t\t\t\t\t\t\t\t [disabled]="true" pInputText\r\n\t\t\t\t\t\t\t\t\t   type="text" />\r\n\r\n\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t</p-table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss"\r\n data-backdrop="static">\r\n\t<div class="audit-template-launcher">\r\n\t\t<app-site-audit [Data]="AuditDetails" [Modal]="modal"\r\n\t\t *ngIf= "HasAuditDetails"></app-site-audit>\r\n\t\t<audit-no-history [Modal]="modal" \r\n\t\t[Title]="AuditHistoryTitle" *ngIf="!HasAuditDetails"></audit-no-history>\r\n\t</div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n\t</div>\r\n\t<div class="modal-body">\r\n\t\t<strong>Site Name:\r\n\t\t\t<span class="new-label">{{restorerecord.name}}</span>\r\n\t\t</strong>\r\n\t</div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n\t<div class="modal-header">\r\n\t\t<h4 class="modal-title" *ngIf="isEditMode">Edit Site</h4>\r\n\t\t<h4 class="modal-title" *ngIf="!isEditMode">Add Site</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\r\n\t<div class="modal-body">\r\n\t\t<form #userForm="ngForm" class="form-horizontal" (ngSubmit)="SaveandEditsite()">\r\n\t\t\t<div class="col-sm-12">\r\n\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label class="control-label label">Site Name\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<p-autoComplete (onSelect)="Manufacturerdescription($event)" (ngModelChange)="getmemo()" (onKeyUp)=ManufacturerHandler($event) (completeMethod)="filtermanufacturer($event)"\r\n\t\t\t\t\t\t\t\t [(ngModel)]="name" name="description" [suggestions]="localCollection" [size]="30" [minLength]="2" [dropdown]="true"\r\n\t\t\t\t\t\t\t\t class="p-autoComplete-ctsm" required>\r\n\t\t\t\t\t\t\t\t\t<ng-template let-name pTemplate="item">\r\n\t\t\t\t\t\t\t\t\t\t<div class="ui-helper-clearfix">{{name}}</div>\r\n\t\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\t</p-autoComplete>\r\n\t\t\t\t\t\t\t\t<div *ngIf="disableSaveManufacturer" class="clr-red">Already Exists</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Address Line 1\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<input class="form-control" (ngModelChange)="getmemo()" type="text" id="memo" name="address1" [(ngModel)]="sourceSite.address1"\r\n\t\t\t\t\t\t\t\t minlength="2" required>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Address Line 2</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<input  class="form-control"  (ngModelChange)="getmemo()" type="text" name="address2" [(ngModel)]="sourceSite.address2" minlength="2">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Address Line 3</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<input  class="form-control" (ngModelChange)="getmemo()" type="text" name="address3" [(ngModel)]="sourceSite.address3" minlength="2">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">City\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<input class="form-control" type="text" (ngModelChange)="getmemo()" name="city" [(ngModel)]="sourceSite.city" minlength="2" required>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">State\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<input  class="form-control" type="text" (ngModelChange)="getmemo()" name="state" [(ngModel)]="sourceSite.stateOrProvince" minlength="2"\r\n\t\t\t\t\t\t\t\t required>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">\r\n\t\t\t\t\t\t\t\t\tCountry\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t\x3c!-- <input  class="form-control" type="text" name="country" [(ngModel)]="sourceSite.countryId" minlength="2"\r\n\t\t\t\t\t\t\t\t required> --\x3e\r\n\t\t\t\t\t\t\t\t <p-autoComplete class="autocomp-customer-cstm" filter="true"\r\n\t\t\t\t\t\t\t\t [(ngModel)]="sourceSite.countryId" emptyMessage="No Match Found" name="country1"\r\n\t\t\t\t\t\t\t\t [suggestions]="countrycollection" field="nice_name"\r\n\t\t\t\t\t\t\t\t (completeMethod)="filterCountries($event)" [size]="30" [minLength]="1" [dropdown]="true"\r\n\t\t\t\t\t\t\t\t [forceSelection]="true" (ngModelChange)="getmemo()" required>\r\n\t\t\t\t\t\t\t   </p-autoComplete>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Zip Code\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<input class="form-control" (ngModelChange)="getmemo()" type="text" name="zipcode" [(ngModel)]="sourceSite.postalCode" minlength="2"\r\n\t\t\t\t\t\t\t\t required>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Memo</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<textarea name="memo" (ngModelChange)="getmemo()" [(ngModel)]="sourceSite.memo"></textarea>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm check-value">\r\n                                <label>\r\n                                    <input type="checkbox" (ngModelChange)="getmemo()" name="isActive" #isActive="ngModel" class="form-check-input trigger2" checked id="isActive" [(ngModel)]="sourceSite.isActive">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                    </div>      \r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t<p-treeTable [value]="gridData" [columns]="cols1" class="p-Treetable-view"\r\n\t\t\t\t\t [(selection)]="selectedNodeTest" selectionMode="checkbox">\r\n\t\t\t\t\t\t<ng-template pTemplate="header" let-columns>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th *ngFor="let col of columns">\r\n\t\t\t\t\t\t\t\t\t{{col.header}}\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template pTemplate="body" let-rowNode let-rowData="rowData" let-columns="columns">\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td *ngFor="let col of columns; let i = index">\r\n\t\t\t\t\t\t\t\t\t<p-treeTableToggler class="p-Tree-select" [rowNode]="rowNode" *ngIf="i == 0"></p-treeTableToggler>\r\n\t\t\t\t\t\t\t\t\t<p-treeTableCheckbox class="p-Tree-checkbox" [value]="rowNode" *ngIf="i == 0" (click)="managementStructureClick(rowData)"></p-treeTableCheckbox>\r\n\t\t\t\t\t\t\t\t\t{{rowData[col.field]}}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</p-treeTable>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button class="btn btn-primary" [disabled]="!userForm.valid || disableSaveManufacturer || disableSaveForEdit">{{isEditMode ? \'Update\' : \'Save\' }}</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n</ng-template>\r\n\x3c!-- Delete --\x3e\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n\t<div class="modal-header">\r\n\t\t<h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\t<div class="modal-body">\r\n\t\t<strong>Site Name:\r\n\t\t\t<span class="new-label">{{name}}</span>\r\n\t\t</strong>\r\n\t</div>\r\n\t<div class="modal-footer">\r\n\t\t<button type="button" class="btn btn-primary" (click)="deleteItemAndCloseModel()">Yes</button>\r\n\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n\t</div>\r\n</ng-template>\r\n\x3c!-- History --\x3e\r\n<ng-template #contentHist let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n\t<div class="modal-header modal-xl">\r\n\t\t<h4 class="modal-title">History of Credit Terms</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\t<div class="modal-body">\r\n\r\n\t\t<table class="table table-bordered">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>siteId</th>\r\n\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t<th>Previous Value</th>\r\n\t\t\t\t\t<th>New Value</th>\r\n\t\t\t\t\t<th>Last Updated By</th>\r\n\t\t\t\t\t<th>Last Updated Time</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tbody *ngIf="AuditDetails.length> 0">\r\n\t\t\t\t<tr *ngFor="let audit of AuditDetails; let i = index;">\r\n\t\t\t\t\t<td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'name\', audit.name)  ?  \'black\' : \'red\'  }">\r\n\t\t\t\t\t\t{{audit.name}}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo) ? \'black\' : \'red\'  }">\r\n\t\t\t\t\t\t{{audit.memo}}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive) ? \'black\' : \'red\'  }">\r\n\t\t\t\t\t\t{{audit.isActive}}\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t<td>{{audit.updatedBy}}</td>\r\n\t\t\t\t\t<td>{{audit.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t</div>\r\n\t<div class="modal-footer">\r\n\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n\t</div>\r\n</ng-template>\r\n\r\n\x3c!-- View --\x3e\r\n\r\n<ng-template #view class="modal fade " id="view" role="dialog">\r\n\r\n\t<div class="modal-content">\r\n\t\t<div class="modal-header">\r\n\t\t\t<button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\t\t\t<h4 class="modal-title">Site Details</h4>\r\n\t\t</div>\r\n\t\t<div class="modal-body viewform">\r\n\t\t\t<div class="col-sm-6">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Site Name : </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{name}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Address1: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{address1}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Address2: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{address2}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Address3: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{address3}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> City: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{city}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> State: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{stateOrProvince}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Country: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{country}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div class="col-sm-6">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> ZipCode: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{postalCode}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Memo: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{memo}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Created By: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{createdBy}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Created Date: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Updated By: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{updatedBy}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Updated Date: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class="clear"></div>\r\n\t\t</div>\r\n\t\t<div class="modal-footer">\r\n\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</ng-template>'},FOlm:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Teardown Reason</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" pTooltip="Add Teardown Reason" tooltipPosition="right"\r\n                                data-target="#add" data-toggle="modal"\r\n                                 (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Teardown Reason</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal"\r\n                                    (click)="resetForm()"\r\n                                  >\r\n                                  Add Teardown Reason\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                        \r\n                        <p-table #dt \r\n                        class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" [first]="0" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true" \r\n                        [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple" \r\n                        [metaKeySelection]="true"\r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [scrollable]="true" \r\n                        [totalRecords]="totalRecords" \r\n                        scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header"\r\n                                        [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                        (onChange)="columnsChanges()"></p-multiSelect>\r\n\r\n                                    </div>\r\n                                    <div class="col">\r\n                                      \r\n                                          <div\r\n                                            style="width: 370px; float: right; padding-top: 3px;"\r\n                                          >\r\n                                            <div class="form-group">\r\n                                              \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                              <div\r\n                                                class="pull-left"\r\n                                                style="margin-top: 4px; margin-right: 15px;"\r\n                                              >\r\n                                              <label class="radio-cstm wauto">\r\n                                                <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                <span class="checkmark"></span>Active\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                            <label class="radio-cstm wauto">\r\n                                                <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                <span class="checkmark"></span>In-Active\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                            <label class="radio-cstm wauto">\r\n                                                <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                <span class="checkmark"></span>All\r\n                                            </label>\r\n                                        </div>\r\n                                            <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                              <label style="width: auto !important;margin-top: 3px;">\r\n                                                \x3c!--  --\x3e\r\n                                                <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                 (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                  />\r\n                                                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                              Show  Deleted List \r\n                                              </label>\r\n                                            </div>\r\n                    \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="row">\r\n                            <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download  Data"  style="padding: 5px 12px !important;" matTooltipPosition="above"\r\n                                         pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;"  matTooltip="Download Selected" matTooltipPosition="above"\r\n                                         pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Selection Only"\r\n                                        (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload"\r\n                                            (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                            accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltipPosition="above"  style="padding: 5px 12px !important;"  matTooltip="Sample File download" (click)="sampleExcelDownload()">Sample File\r\n                                            Download</button>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div>\r\n                                              \r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                            (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle data-toggle="modal" data-target="#view"\r\n                                        (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                     \r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" matTooltip="Update" name="isActive{{rowIndex}}"\r\n        (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" matTooltipPosition="above"\r\n                                               (click)="viewSelectedRow(rowData)" matTooltip="view" data-target="#view"\r\n                                               data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                                data-target="#add" data-toggle="modal" matTooltip="Edit" \r\n                                                matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n                                       \r\n                                        <span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete" \r\n                                        matTooltipPosition="above"\r\n                                                data-target="#delete" data-toggle="modal" (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-toggle="modal" data-target="#contentHist"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above"\r\n                                                data-target="#contentHist" data-toggle="modal"\r\n                                                (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                        </div>\r\n\r\n                                        <div *ngIf="currentDeletedstatus==true">\r\n                                            <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                            matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                           <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                          <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                            \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                         \r\n                                        </div> \r\n\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n\t\t\t\t\t\t\t\t\t\t *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td [attr.colspan]="7" class="no-records-cstm">\r\n\t\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText\r\n                                    type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText\r\n                                    type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>Teardown Reason:\r\n            <span class="new-label">{{restorerecord.teardownType}}</span>\r\n        </strong>\r\n    </div>\r\n   \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>Teardown Reason:\r\n                    <span class="new-label">{{selectedRowforDelete.teardownType}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Teardown Reason</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group" >\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="reason" class="control-label">Type\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                        <p-dropdown  name="company1"\r\n                        #wocompanyId="ngModel"  required\r\n                        [options]="teadownTypesList" placeholder="Select Type"\r\n                        class="p-dropdown-custom-md-2"\r\n                         #removalReason="ngModel"\r\n                        [(ngModel)]="addNew.teardownTypeId" (ngModelChange)="getmemo()">\r\n                       </p-dropdown>\r\n                       </div>\r\n                       </div>\r\n                    </div>\r\n                    \x3c!-- (onChange)="selectedLegalEntity($event.value,1)" --\x3e\r\n                    <div class="form-group">\r\n                       \r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="reason" class="control-label">Reason\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="reason" [(ngModel)]="addNew.reason"\r\n                                    (onSelect)="selectedDescription($event)"\r\n                                    (onKeyUp)="checkGroupDescriptionExists($event.target.value)"\r\n                                    name="reason" [suggestions]="descriptionList"\r\n                                    (completeMethod)="filterDescription($event)" [size]="30" [minLength]="1"\r\n                                    [dropdown]="true" class="p-autoComplete-ctsm" required (ngModelChange)="getmemo()">\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForDescriptionmsg" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="memo" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription" (ngModelChange)="getmemo()"\r\n                                    [(ngModel)]="addNew.memo" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive" (ngModelChange)="getmemo()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal"\r\n                    [disabled]="create.invalid  || disableSaveForEdit || disableSaveForDescriptionmsg" (click)="save();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n\r\n                                <th>Reason</th>\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.Name}}</td> --\x3e\r\n                                <td>{{ext.reason}}</td>\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Tear Down</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    \x3c!--//{{auditHistory.length}}--\x3e\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Reason</th>\r\n\r\n                                <th>Memo</th>\r\n                                <th>Is Active</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'reason\', audit.reason)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.reason}}\r\n                                </td>\r\n                                \r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.memo}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Teardown Reason Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Teardown Reason: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.reason}}</span>\r\n                    </p>\r\n                   \r\n                    \x3c!-- <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header"> Standard: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.standard}}</span>\r\n                </p> --\x3e\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Is Active</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},GcGN:function(t,e,a){"use strict";a.r(e),e.default=".new-label {\n  color: cadetblue;\n}\n\n.text-item {\n  width: 100%;\n  border-radius: 5px !important;\n  margin-left: 0px;\n}\n\n.control-label {\n  margin-top: 5px;\n  text-align: left;\n  width: 100% !important;\n}"},Hx4M:function(t,e,a){"use strict";a.r(e),e.default=".text-item {\n  width: 100%;\n  border-radius: 5px !important;\n  margin-left: 0px;\n}\n\n.new-label {\n  color: cadetblue;\n}"},I4Uh:function(t,e,a){"use strict";a.r(e),e.default=".control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}"},IdXp:function(t,e,a){"use strict";a.r(e),e.default=".new-label {\n  color: cadetblue;\n}\n\n.text-item {\n  width: 100%;\n  border-radius: 5px !important;\n  margin-left: 0px;\n}\n\n.control-label {\n  margin-top: 5px;\n  text-align: left;\n  width: 100% !important;\n}"},IpWk:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content" >\r\n \r\n        <form [formGroup]="employeeForm" [fxLayoutGap]="\'1em\'" autocomplete="off" (ngSubmit)="save()" #formDir="ngForm" novalidate>\r\n\r\n            <div fxLayout="row" fxLayout.lt-md="column" fxLayoutGap="1em">\r\n                <mat-form-field  fxFlex>\r\n                    <mat-label>Action Name</mat-label>\r\n                    <input matInput formControlName="name" />\r\n\r\n                    <mat-error *ngIf="name.hasError(\'required\')">\r\n                        Action Name is required\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n\r\n            </div>\r\n\r\n\r\n            <div fxLayout="row" fxLayout.lt-md="column" fxLayoutGap="1em">\r\n\r\n                <mat-form-field>\r\n                    <mat-label>Gender</mat-label>\r\n\r\n                    <mat-select placeholder="Select" class="form-control" data-val="true" formControlName="gender">\r\n                        <mat-option value="">-- Select Gender --</mat-option>\r\n                        <mat-option value="Male">Male</mat-option>\r\n                        <mat-option value="Female">Female</mat-option>\r\n                    </mat-select>\r\n\r\n                    <mat-error *ngIf="gender.hasError(\'required\')">\r\n                        Gender required\r\n                    </mat-error>\r\n                </mat-form-field>\r\n\r\n            </div>\r\n\r\n            <div fxLayout="row" fxLayout.lt-md="column" fxLayoutGap="1em">\r\n\r\n                <div>\r\n                    <button mat-button   color="accent">Save</button>\r\n                </div>\r\n\r\n            </div>\r\n        </form>\r\n\r\n    </div>\r\n\r\n\r\n\r\n'},Jjce:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Certification Type</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltipPosition="above" \r\n                             matTooltip="Add Certification Type" \r\n                             tooltipPosition="right" \r\n                              data-target="#add" data-toggle="modal">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div>  --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Certification Type</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal"\r\n                                  >\r\n                                  Add Certification Type\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                      \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" \r\n                        [first]="0" [rows]="pageSize" \r\n                        [paginator]="true" \r\n                        [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple"\r\n                        [metaKeySelection]="true"\r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [scrollable]="true" \r\n                        [totalRecords]="totalRecords" \r\n                        scrollHeight="450px" >\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect  [maxSelectedLabels]="2" [options]="headers"  optionLabel="header" [(ngModel)]="selectedColumns"  [resetFilterOnHide]="true" \r\n                                        [style]="{minWidth: \'200px\'}"  style="float:left" (onChange)="columnsChanges()"  >\r\n                                    </p-multiSelect>\r\n\r\n                                </div>\r\n                                <div class="col">\r\n                                  \r\n                                      <div\r\n                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                      >\r\n                                        <div class="form-group">\r\n                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                          <div\r\n                                            class="pull-left"\r\n                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                          >\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>In-Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                        (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>All\r\n                                                    </label>\r\n                                                </div>\r\n                                                    <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                      <label style="width: auto !important;margin-top: 3px;">\r\n                                                        \x3c!--  --\x3e\r\n                                                        <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                         (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                          />\r\n                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                      Show  Deleted List \r\n                                                      </label>\r\n                                                    </div>\r\n                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="row">\r\n                                  <div class="col">           \r\n\r\n                                     <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Data"  pButton icon="fa-download" matTooltipPosition="above"\r\n                                        iconPos="left" label="Export Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Selected"  pButton icon="fa-download" matTooltipPosition="above"\r\n                                        iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button> \r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        \r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload()"   class="uploaddoc upload-file" \r\n                                        accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above"  >\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" matTooltip="Download Sample file" matTooltipPosition="above"   (click)="sampleExcelDownload()" >Sample File Download</button>\r\n                                    </div>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </ng-template>\r\n                         \r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th  style="width:120px" *ngFor="let col of columns"  pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th  style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template  pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex" >\r\n                                <tr    [pSelectableRow]="rowData" pReorderableRowHandle [pSelectableRowIndex]="rowIndex" >\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal" data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" matTooltip="View" matTooltipPosition="above" (click)="viewSelectedRow(rowData)" data-target="#view" data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                        (click)="edit(rowData)" data-target="#add" \r\n                                        data-toggle="modal" matTooltipPosition="above"\r\n                                         matTooltip="Edit">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button\r\n                                         matTooltip="Delete" matTooltipPosition="above"\r\n                                          data-target="#delete" data-toggle="modal"\r\n                                           (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History" \r\n                                        matTooltipPosition="above" data-target="#contentHist" data-toggle="modal" \r\n                                        (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n\t\t\t\t\t\t\t\t\t\t *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td [attr.colspan]="7" class="no-records-cstm">\r\n\t\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp; \r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" /> \r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>Certification Type:\r\n          <span class="new-label">{{restorerecord.description}}</span>\r\n      </strong>\r\n      </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n\r\n<div  *ngIf="selectedRowforDelete" #delete id="delete"  class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n          <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n          <strong>Certification Type:\r\n            <span class="new-label">{{selectedRowforDelete.description}}</span>\r\n        </strong>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n        </div>\r\n      </div>\r\n  \r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div #add  id="add"class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n  \r\n      \x3c!-- Modal content--\x3e\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n          <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Certification Type   </h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <form #create="ngForm" >\r\n                <div class="form-group">\r\n\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-4">\r\n                            <label for="description" class="control-label">Certification Type\r\n                                <span class="clr-red">*</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                                <p-autoComplete field="description" [(ngModel)]="addNew.description" (onSelect)="selectedCertificationName($event)" (onKeyUp)="checkCertificationName(\'description\', $event.target.value)" \r\n                                name="description" (onBlur)="onBlur($event)"\r\n                                [suggestions]="certificationList" (completeMethod)="filterCertificationName($event)" [size]="30" [minLength]="1"\r\n                                [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n           \r\n                            </p-autoComplete>\r\n                            <div *ngIf="disableSaveCertificationMsg" class="clr-red">Already Exists</div>\r\n                            <div class="clear"></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-4">\r\n                            <label for="description" class="control-label">Memo</label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <textarea class="text-item" #memo="ngModel" id="memo"  (ngModelChange)="getmemo($event)" name="memodescription" [(ngModel)]="addNew.memo" minlength="2"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="col-sm-6">\r\n                        <div class="checkbox-cstm">\r\n                            <label>\r\n                                <input type="checkbox" name="isActive"  [(ngModel)]="addNew.isActive">\r\n                                <span class="cr">\r\n                                    <i class="cr-icon pi pi-check"></i>\r\n                                </span>\r\n                                Active\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n           </form>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button class="btn btn-primary"  data-dismiss="modal" [disabled]="create.invalid || disableSaveCertification" (click)="save();"> {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n            <button type="button" class="btn btn-danger"  data-dismiss="modal" (click)="resetForm()">Close</button>\r\n    \r\n        </div>\r\n      </div>\r\n  \r\n    </div>\r\n  </div>\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n                            <div class="modal-dialog modal-xl">\r\n                          \r\n                             \r\n                              <div class="modal-content">\r\n                                <div class="modal-header">\r\n                                  <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                                  <h4 class="modal-title">Duplicate Records</h4>\r\n                                </div>\r\n                                <div class="modal-body">\r\n                                    <div class="table-responsive rro-table-cstm">\r\n                                        <table class="table table-bordered"  >\r\n                                            <thead>\r\n                                                <tr>\r\n                                  \r\n                                     \r\n                                                    <th>Certification Type</th>\r\n                                             \r\n                                                    <th>Memo</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody *ngIf="existingRecordsResponse.length> 0" >\r\n                                                    <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n                                      \r\n                                                            \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                                            <td >{{ext.itemGroupCode}}</td>\r\n                                                            <td>{{ext.description}}</td>\r\n                                                    \r\n                                                            <td >{{ext.memo}}</td>\r\n                                                        </tr>\r\n                                            </tbody>\r\n                                            \r\n\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="modal-footer">\r\n                                  <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                                </div>\r\n                              </div>\r\n                          \r\n                            </div>\r\n</div>\r\n\r\n                          <div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n                            <div class="modal-dialog modal-xl">\r\n                          \r\n                              \x3c!-- Modal content--\x3e\r\n                              <div class="modal-content">\r\n                                <div class="modal-header">\r\n                                  <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                                  <h4 class="modal-title">History of ItemGroup</h4>\r\n                                </div>\r\n                                <div class="modal-body">\r\n                                    <div class="table-responsive rro-table-cstm">\r\n                                        <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable" >\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    \x3c!-- <th>UMID</th> --\x3e\r\n                                                    <th>Certification Type</th>\r\n                                                    <th>Memo</th>\r\n                                                    <th>Is Active</th>\r\n                                                    <th>Updated By</th>\r\n                                                    <th>Updated Time</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody *ngIf="auditHistory.length> 0" >\r\n                                                    <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                                        \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e          \r\n                                                            <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'itemGroupCode\', audit.itemGroupCode)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n                                                             <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.shortName}}</td>\r\n                                                        \r\n                                                             <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                                             <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                                            <td >{{audit.updatedBy}}</td>\r\n                                                            <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                                                        </tr>\r\n                                            </tbody>\r\n                                            \r\n\r\n                                        </table>\r\n                                        <ng-template #noDatavailable>\r\n                                            <div class="text-center"> \r\n                                                    <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                                                    <h4 style="color: #ff5663;">No History Found </h4>\r\n                                            </div>\r\n\r\n                                        </ng-template>  \r\n                                    </div>\r\n                                </div>\r\n                                <div class="modal-footer">\r\n                                  <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                                </div>\r\n                              </div>\r\n                          \r\n                            </div>\r\n                          </div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n<div class="modal-dialog modal-sm">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n            <h4 class="modal-title">Certification Type Details</h4>\r\n        </div>\r\n        <div class="modal-body viewform ">\r\n            <div class="col-sm-12">\r\n                <p>\r\n                    <span class="label " >\r\n                        <b class="view-Header">Certification Type: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.description}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Memo: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.memo}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Is Active</b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Created By: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.createdBy }}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Created Date: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Updated By: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.updatedBy}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Updated Date: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n            </div>\r\n            <div class="clear"></div>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            \r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n            \r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},Kl4j:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n\t\t<div class="right_col" role="main">\r\n\t\t\t<div class="x_panel">\r\n\t\t\t\t<div class="x_content">\r\n\t\t\t\t\t\x3c!-- <div class="card">\r\n\t\t\t\t\t\t<div class="card-body">\r\n\t\t\t\t\t\t\t<div class="inline-block display-flex">\r\n\t\t\t\t\t\t\t\t<h3 class="po-head lead">Task Attributes </h3>\r\n\t\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t<a class="plusicon-cstm new-margin" matTooltip="Add Task Attributes" matTooltipPosition="above"\r\n\t\t\t\t\t\t\t\t data-target="#add" data-toggle="modal" (click)="resetForm()">\r\n\t\t\t\t\t\t\t\t\t<i class="fa fa-plus-circle fa-lg"></i>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</div> --\x3e\r\n\t\t\t\t\t\t\t<div class="card new-card">\r\n\t\t\t\t\t\t\t\t<div class="card-header bg-primary new-card-header">\r\n\t\t\t\t\t\t\t\t\t<div class="row">\r\n\t\t\t\t\t\t\t\t\t  <div class="col">\r\n\t\t\t\t\t\t\t\t\t\t<h4 class="new-card-heading">Task Attributes</h4>\r\n\t\t\t\t\t\t\t\t\t  </div>\r\n\t\t\t\t\t\t\t\t\t  <div>\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t   type="button"\r\n\t\t\t\t\t\t\t\t\t\t   class="btn-sm new-btn-primary"\r\n\t\t\t\t\t\t\t\t\t\t   data-target="#add" data-toggle="modal" (click)="resetForm()">\r\n\t\t\t\t\t\t\t\t\t\t  Add Task Attributes\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="card-body new-card-body">\r\n\t\t\t\t\t\t\t<p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n\t\t\t\t\t\t\t[value]="originalData" \r\n\t\t\t\t\t\t\t[first]="0" \r\n\t\t\t\t\t\t\t[rows]="pageSize" \r\n\t\t\t\t\t\t\t[paginator]="true"\r\n\t\t\t\t\t\t\t\t[pageLinks]="3"\r\n\t\t\t\t\t\t\t\t [rowsPerPageOptions]="[10,20,50,100]" \r\n\t\t\t\t\t\t\t\t [columns]="selectedColumns" \r\n\t\t\t\t\t\t\t\t selectionMode="multiple"\r\n\t\t\t\t\t\t\t\t [metaKeySelection]="true"\r\n\t\t\t\t\t\t\t\t(onPage)="changePage($event)" \r\n\t\t\t\t\t\t\t\t[resizableColumns]="true" \r\n\t\t\t\t\t\t\t\t[reorderableColumns]="true" \r\n\t\t\t\t\t\t\t\t[totalRecords]="totalRecords"\r\n\t\t\t\t\t\t\t\tscrollHeight="450px">\r\n\t\t\t\t\t\t\t\t<ng-template pTemplate="caption">\r\n\t\t\t\t\t\t\t\t\t<div class="row">\r\n\t\t\t\t\t\t\t\t\t\t<div class="col">\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header" [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t\t\t<div class="row">\r\n\t\t\t\t\t\t\t\t\t\t<div class="col">\r\n\t\t\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-primary new-table-button" \r\n\t\t\t\t\t\t\t\t\t\tlabel="Export Data" matTooltip="Download Data"  \r\n\t\t\t\t\t\t\t\t\t\tstyle="padding: 5px 12px !important;" matTooltipPosition="above" pButton icon="fa-download" iconPos="left" (click)="dt.exportCSV()"></button>\r\n\t\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-primary new-table-button"\r\n\t\t\t\t\t\t\t\t\t\t label="Export Selected Data"  style="padding: 5px 12px !important;" matTooltip="Download Selected Data" matTooltipPosition="above" pButton icon="fa-download" iconPos="left" \r\n\t\t\t\t\t\t\t\t\t\t (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <div class="excel-upload  excel-upload-cstm">\r\n\t\r\n\t\t\t\t\t\t\t\t\t\t\t<input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file" accept=".xlsx, .xls, .csv">\r\n\t\t\t\t\t\t\t\t\t\t\t<label for="upload">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span matTooltip="Upload Data (Excel)">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-upload"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t&nbsp; &nbsp;\r\n\t\t\t\t\t\t\t\t\t\t\t<button class="btn btn-primary" matTooltip="Sample File download" (click)="sampleExcelDownload()">Sample File Download\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div> --\x3e\r\n\t\t\t\t\t\t\t\t\t</div>\r\n                                </div>\r\n\t\t\t\t\t\t\t\t</ng-template>\r\n\t\r\n\t\t\t\t\t\t\t\t<ng-template pTemplate="header" let-columns>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th style="width:150px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n\t\t\t\t\t\t\t\t\t\t\t{{col.header}}\r\n\t\t\t\t\t\t\t\t\t\t\t<p-sortIcon [field]="col.field"></p-sortIcon>\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t<th style="position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th style="width:150px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n\t\t\t\t\t\t\t\t\t\t\t<input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n\t\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t\t<th style="width:200px;position:sticky"></th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\t<ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n\t\t\t\t\t\t\t\t\t<tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n\t\t\t\t\t\t\t\t\t\t<td style="width:150px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal"\r\n\t\t\t\t\t\t\t\t\t\t\tdata-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n\t\t\t\t\t\t\t\t\t\t\t{{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n\t\t\t\t\t\t\t\t\t\t\t(rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td style="width:200px" *ngIf="selectedColumns.length> 0">\r\n\t\t\t\t\t\t\t\t\t\t\t<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" matTooltip="Update" \r\n\t\t\t\t\t\t\t\t\t\t\tmatTooltipPosition="above" name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)"></p-inputSwitch>\r\n\t\r\n\t\t\t\t\t\t\t\t\t\t\t<span data-toggle="modal" data-target="#view">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" \r\n\t\t\t\t\t\t\t\t\t\t\t\t(click)="viewSelectedRow(rowData)" matTooltip="view" matTooltipPosition="above" data-target="#view"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-toggle="modal">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-eye"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<span data-target="#add" data-toggle="modal"><a class="btn nobg" \r\n\t\t\t\t\t\t\t\t\t\t\t\t(click)="edit(rowData)" matTooltip="Edit" \r\n\t\t\t\t\t\t\t\t\t\t\t\tmatTooltipPosition="above"><i class="fa fa-pencil"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)" \r\n\t\t\t\t\t\t\t\t\t\t\tdata-target="#add" data-toggle="modal" matTooltip="Edit" matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<span data-target="#delete" data-toggle="modal">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<a class="btn nobg" \r\n\t\t\t\t\t\t\t\t\t\t\t\t(click)="delete(rowData)"\r\n\t\t\t\t\t\t\t\t\t\t\t\tmatTooltip="Delete"  matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-trash"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete" \r\n\t\t\t\t\t\t\t\t\t\t\tmatTooltipPosition="above" data-target="#delete" data-toggle="modal" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="delete(rowData)">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-icon color="warn">delete</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n\t\t\t\t\t\t\t\t\t\t\t\t(click)="getAuditHistoryById(rowData)"\r\n\t\t\t\t\t\t\t\t\t\t\t\t matTooltip="History"  matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t\t <i class="fa fa-history"></i></a></span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n\t\t\t\t\t\t\t\t\t\t\t matTooltipPosition="above" data-target="#contentHist" data-toggle="modal" \r\n\t\t\t\t\t\t\t\t\t\t\t (click)="getAuditHistoryById(rowData)">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-icon color="green">history</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\t<ng-template #auditContent let-c="close" let-d="dismiss">\r\n\t\t\t\t\t\t\t\t\t<div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n\t\t\t\t\t\t\t\t\t\t<app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\t<ng-template pTemplate="summary" id="footer">\r\n\t\t\t\t\t\t\t\t\t<label id="footer" class="footer">Total:</label>\r\n\t\t\t\t\t\t\t\t\t<input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t\t<label id="footer" class="footer1">Pages Count:</label>\r\n\t\t\t\t\t\t\t\t\t<input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText type="text" />\r\n\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t</p-table>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t\r\n\t\r\n\t<ng-template #auditContent let-c="close" let-d="dismiss">\r\n\t\t<div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n\t\t\t<app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n\t\t</div>\r\n\t</ng-template>\r\n\t\r\n\t\r\n\t<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog"  data-backdrop="static">\r\n\t\t<div class="modal-dialog">\r\n\t\t\t<div class="modal-content">\r\n\t\t\t\t<div class="modal-header">\r\n\t\t\t\t\t<button type="button" class="close" data-dismiss="modal">&times;</button>\r\n\t\t\t\t\t<h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-body">\r\n\t\t\t\t\t<strong>Task Attribute:\r\n\t\t\t\t\t\t<span class="new-label">{{selectedRowforDelete.description}}</span>\r\n\t\t\t\t\t</strong>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-footer">\r\n\t\t\t\t\t<button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n\t\t\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\r\n\t\t</div>\r\n\t</div>\r\n\t\r\n\t\r\n\t<div #add id="add" class="modal fade" role="dialog"  data-backdrop="static">\r\n\t\t<div class="modal-dialog">\r\n\t\r\n\t\t\t\x3c!-- Modal content--\x3e\r\n\t\t\t<div class="modal-content">\r\n\t\t\t\t<div class="modal-header">\r\n\t\t\t\t\t<button type="button" class="close" data-dismiss="modal">&times;</button>\r\n\t\t\t\t\t<h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Workflow Task Attribute</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-body">\r\n\t\t\t\t\t<form #create="ngForm">\r\n\t\t\t\t\t\t<div class="form-group">\r\n\t\r\n\t\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t\t<label for="description" class="control-label">Task Attribute\r\n\t\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t\t<p-autoComplete field="description" [(ngModel)]="addNew.description" (onSelect)="selectedDescription($event)" (onKeyUp)="checkGroupDescriptionExists(\'description\', $event.target.value)"\r\n\t\t\t\t\t\t\t\t\t\tname="description" [suggestions]="descriptionList" (completeMethod)="filterDescription($event)"\r\n\t\t\t\t\t\t\t\t\t\t[size]="30" [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\t\t\t\t\t\t\t\t\t</p-autoComplete>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf="disableSaveForDescription" class="clr-red">Already Exists</div>\r\n\t\t\t\t\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\r\n\t\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t\t\t\t<label> Sequence</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t<input type="number" class="custom-form-control"\r\n\t\t\t\t\t\t\t\t\t\t\tname="sequence" #sequence="ngModel" [required]="isEdit"\r\n\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]="addNew.sequence" />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\r\n\t\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t\t<label for="description" class="control-label">Memo</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t\t<textarea class="text-item" #memo="ngModel" id="memo" name="memodescription" [(ngModel)]="addNew.memo" minlength="2"></textarea>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t\t<div class="col-sm-6">\r\n\t\t\t\t\t\t\t\t<div class="checkbox-cstm">\r\n\t\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive">\r\n\t\t\t\t\t\t\t\t\t\t<span class="cr">\r\n\t\t\t\t\t\t\t\t\t\t\t<i class="cr-icon pi pi-check"></i>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\tActive\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-footer">\r\n\t\t\t\t\t<button class="btn btn-primary" data-dismiss="modal" [disabled]="create.invalid || disableSaveGroupId && disableSaveForDescription "\r\n\t\t\t\t\t\t(click)="save();">\r\n\t\t\t\t\t\t{{isEdit ? \'Update\' : \'Save\' }}</button>\r\n\t\t\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetForm()">Close</button>\r\n\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\r\n\t\t</div>\r\n\t</div>\r\n\t\r\n\t\r\n\t<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static">\r\n\t\t<div class="modal-dialog modal-xl">\r\n\t\r\n\t\r\n\t\t\t<div class="modal-content">\r\n\t\t\t\t<div class="modal-header">\r\n\t\t\t\t\t<button type="button" class="close" data-dismiss="modal">&times;</button>\r\n\t\t\t\t\t<h4 class="modal-title">Duplicate Records</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-body">\r\n\t\t\t\t\t<div class="table-responsive rro-table-cstm">\r\n\t\t\t\t\t\t<table class="table table-bordered">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\r\n\t\r\n\t\t\t\t\t\t\t\t\t<th>Task Attribute</th>\r\n\t\r\n\t\t\t\t\t\t\t\t\t<th>Memo</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody *ngIf="existingRecordsResponse.length> 0">\r\n\t\t\t\t\t\t\t\t<tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\t\r\n\t\t\t\t\t\t\t\t\t\x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n\t\r\n\t\t\t\t\t\t\t\t\t<td>{{ext.description}}</td>\r\n\t\r\n\t\t\t\t\t\t\t\t\t<td>{{ext.memo}}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\r\n\t\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-footer">\r\n\t\t\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\r\n\t\t</div>\r\n\t</div>\r\n\t\r\n\t<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static">\r\n\t\t<div class="modal-dialog modal-xl">\r\n\t\r\n\t\t\t\x3c!-- Modal content--\x3e\r\n\t\t\t<div class="modal-content">\r\n\t\t\t\t<div class="modal-header">\r\n\t\t\t\t\t<button type="button" class="close" data-dismiss="modal">&times;</button>\r\n\t\t\t\t\t<h4 class="modal-title">History of Task Attribute</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-body">\r\n\t\t\t\t\t<div class="table-responsive rro-table-cstm">\r\n\t\t\t\t\t\t<table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\x3c!-- <th>UMID</th> --\x3e\r\n\t\t\t\t\t\t\t\t\t<th>Task Attribute </th>\r\n\t                                <th>Sequence</th>\r\n\t\t\t\t\t\t\t\t\t<th>Memo</th>\r\n\t\t\t\t\t\t\t\t\t<th>IsActive</th>\r\n\t\t\t\t\t\t\t\t\t<th>Updated By</th>\r\n\t\t\t\t\t\t\t\t\t<th>Updated Time</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody *ngIf="auditHistory.length> 0">\r\n\t\t\t\t\t\t\t\t<tr *ngFor="let audit of auditHistory; let i = index;">\r\n\t\t\t\t\t\t\t\t\t\x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n\t\r\n\t\t\t\t\t\t\t\t\t<td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">\r\n\t\t\t\t\t\t\t\t\t\t{{audit.description}}</td>\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'sequence\', audit.sequence)  ? \'black\' : \'red\'  }">\r\n                                        {{audit.sequence}}\r\n                                    </td>\r\n\t\t\t\t\t\t\t\t\t<td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">\r\n\t\t\t\t\t\t\t\t\t\t{{audit.memo}}</td>\r\n\t\t\t\t\t\t\t\t\t<td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n\t\t\t\t\t\t\t\t\t\t{{audit.isActive}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{{audit.updatedBy}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t<ng-template #noDatavailable>\r\n\t\t\t\t\t\t\t<div class="text-center">\r\n\t\t\t\t\t\t\t\t<img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n\t\t\t\t\t\t\t\t<h4 style="color: #ff5663;">No History Found </h4>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-footer">\r\n\t\t\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\r\n\t\t</div>\r\n\t</div>\r\n\t\r\n\t\r\n\t\r\n\t<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static">\r\n\t\t<div class="modal-dialog modal-sm">\r\n\t\t\t<div class="modal-content">\r\n\t\t\t\t<div class="modal-header">\r\n\t\t\t\t\t<button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n\t\t\t\t\t<h4 class="modal-title">Aircraft Model Details</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-body viewform ">\r\n\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Task Attribute: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{ viewRowData.description}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t   \r\n\t\t\t\t\t\t\x3c!-- <p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header"> Standard: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{ viewRowData.standard}}</span>\r\n\t\t\t\t\t\t</p> --\x3e\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Memo: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{viewRowData.memo}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">IsActive</b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Created By: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{viewRowData.createdBy }}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Created Date: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Updated By: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{viewRowData.updatedBy}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Updated Date: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-footer">\r\n\t\t\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\r\n\t\t</div>\r\n\t\r\n\t</div>\r\n\t\r\n\t<ng-template #helpText class="modal fade" id="help-popup" role="dialog" data-backdrop="static">\r\n\t\t<div class="modal-content">\r\n\t\t\t<div class="modal-header">\r\n\t\r\n\t\t\t\t<button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\t\r\n\t\t\t\t<h4 class="modal-title">Help text about the page</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-body">\r\n\t\t\t\t<p>Sample Point 1 about Page Description</p>\r\n\t\t\t\t<p>Sample Point 2 about Page Description</p>\r\n\t\t\t\t<p>Sample Point 3 about Page Description</p>\r\n\t\t\t\t<p>Sample Point 4 about Page Description</p>\r\n\t\t\t\t<p>Sample Point 5 about Page Description</p>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<b>Excell format to upload the Data -\r\n\t\t\t\t\t\t<a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n\t\t\t\t\t</b>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</ng-template>'},KqhB:function(t,e,a){"use strict";a.r(e),e.default=".footer1 {\n  margin-right: 0px;\n}\n\n.control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}"},LZLZ:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Employee Training Type</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltipPosition="above" \r\n                             matTooltip="Add Employee TrainingType"\r\n                              tooltipPosition="right" (click)="resetForm()"\r\n                               data-target="#add" data-toggle="modal">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Employee Training Type</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="resetForm()"\r\n                                    data-target="#add" data-toggle="modal"\r\n                                  >\r\n                                  Add Employee TrainingType\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                      \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="originalData" [first]="0" [rows]="pageSize" [paginator]="true" [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" \r\n                                 [lazy]="true" (onLazyLoad)="loadAllTryningData($event)"\r\n\r\n                                 selectionMode="multiple" (onPage)="changePage($event)"\r\n                                 [resizableColumns]="true" [reorderableColumns]="true" [scrollable]="true" [totalRecords]="totalRecords" scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header" [(ngModel)]="selectedColumns" [resetFilterOnHide]="true"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n                                                   \x3c!-- <div class="inner-addon right-addon w200 inline-block g-filter-search-cstm">\r\n                                                    <i class="fa fa-search"></i>\r\n                                                    <input type="text" pInputText size="50"\r\n                                                        class="form-control ui-autocomplete-input"\r\n                                                        (input)="dt.filterGlobal($event.target.value, \'contains\')"\r\n                                                        placeholder=" Filter" style="height: 28px !important;">\r\n                                                </div> --\x3e\r\n                                            </div>\r\n                                            <div class="col">\r\n                                              \r\n                                                  <div\r\n                                                    style="width: 370px; float: right; padding-top: 3px;"\r\n                                                  >\r\n                                                    <div class="form-group">\r\n                                                      \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                      <div\r\n                                                        class="pull-left"\r\n                                                        style="margin-top: 4px; margin-right: 15px;"\r\n                                                      >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                    \x3c!--  --\x3e\r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                        \r\n                                                   <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data" matTooltipPosition="above" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data" matTooltipPosition="above" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltip="Download Sample File" matTooltipPosition="above" (click)="sampleExcelDownload()">Sample File Download</button>\r\n                                    </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal" data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" matTooltip="View" matTooltipPosition="above"\r\n                                               (click)="viewSelectedRow(rowData)" data-target="#view" data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n\r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                             data-target="#add" data-toggle="modal"\r\n                                                matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span  data-target="#delete" data-toggle="modal" >\r\n                                            <a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete"\r\n                                             matTooltipPosition="above" data-target="#delete" data-toggle="modal" \r\n                                             (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button\r\n                                             matTooltip="History" matTooltipPosition="above"\r\n                                              data-target="#contentHist" data-toggle="modal" \r\n                                              (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template  #emptymessage pTemplate="emptymessage" let-columns\r\n                                *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                                <tr>\r\n                                    <td [attr.colspan]="7" class="no-records-cstm">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Employee Training Type\r\n            <span class="new-label">{{restorerecord.trainingType}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                    Employee Training Type:\r\n                    <span class="new-label">{{selectedRowforDelete.trainingType}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" \r\n                (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                 (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Employee Training Type    </h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">\r\n                                    Employee Training Type\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete [(ngModel)]="addNew.trainingType" (ngModelChange)="getmemo()" (onSelect)="selectedEmpTrainingType($event)" \r\n                                                (onKeyUp)="checkEmployeeTrainingTypeExists($event)"\r\n                                                name="trainingType"\r\n                                                [suggestions]="localCollection" (completeMethod)="filterEmployeeTrainingType($event)" [size]="30" [minLength]="1"\r\n                                                [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveEmpTrainingType" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        \x3c!--<div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">\r\n                                    Description\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="description" [(ngModel)]="addNew.description" (onSelect)="selectedEmpTrainingType($event)" (onKeyUp)="checkEmployeeTrainingTypeExists(\'description\', $event.target.value)"\r\n                                                name="description"\r\n                                                [suggestions]="EmpTrainingTypeList" (completeMethod)="filterEmployeeTrainingType($event)" [size]="30" [minLength]="1"\r\n                                                [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveDescriptrion" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>--\x3e\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" (ngModelChange)="getmemo()" id="memo" name="memodescription" [(ngModel)]="addNew.memo" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" (ngModelChange)="getmemo()" [(ngModel)]="addNew.isActive">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" [disabled]="create.invalid || disableSaveEmpTrainingType ||disableSaveDescriptrion || disableSaveForEdit" (click)="save();"> {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n\r\n\r\n                                <th>Employee Training Type </th>\r\n                                <th>Descriptione </th>\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                <td>{{ext.tTrainingType}}</td>\r\n                                <td>{{ext.description}}</td>\r\n\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Employee Training Type</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Training Type</th>\r\n                                <th>Description</th>\r\n\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'trainingType\', audit.trainingType)  ? \'black\' : \'red\'  }">{{audit.trainingType}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Employee Training Type Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Training Type: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.trainingType}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Description: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">IsActive</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>\r\n                    Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},MMfO:function(t,e,a){"use strict";a.r(e),e.default=""},MSR4:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n\t<div class="right_col" role="main">\r\n\t\t<div class="x_panel">\r\n\t\t\t<div class="x_content">\r\n\t\t\t\t\x3c!-- <div class="card">\r\n\t\t\t\t\t<div class="card-body">\r\n\t\t\t\t\t\t<div class="inline-block display-flex">\r\n\t\t\t\t\t\t\t<h3 class="po-head lead">Location</h3>\r\n\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t<a class="plusicon-cstm new-margin"\r\n\t\t\t\t\t\t\t matTooltipPosition="above" matTooltip="Add Location"\r\n\t\t\t\t\t\t\t  tooltipPosition="right" (click)="open(contentEdit)">\r\n\t\t\t\t\t\t\t\t<i class="fa fa-plus-circle fa-lg"></i>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div> --\x3e\r\n\t\t\t\t\t\t<div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Location</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="open(contentEdit)"\r\n                                  >\r\n                                    Add Location\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n\t\t\t\t\t\t[totalRecords]="totalRecords" \r\n\t\t\t\t\t\t[value]="locationData" \r\n\t\t\t\t\t\t[rows]="pageSize" \r\n\t\t\t\t\t\t[paginator]="true"\r\n\t\t\t\t\t\t [pageLinks]="3" \r\n\t\t\t\t\t\t [rowsPerPageOptions]="[10,20,50,100]" \r\n\t\t\t\t\t\t [columns]="selectedColumns" \r\n\t\t\t\t\t\t selectionMode="multiple" \r\n\t\t\t\t\t\t [metaKeySelection]="true"\r\n\t\t\t\t\t\t [rows]="10"\r\n\t\t\t\t\t\t [(selection)]="selectedColumn" \r\n\t\t\t\t\t\t [resizableColumns]="true" \r\n\t\t\t\t\t\t [reorderableColumns]="true" \r\n\t\t\t\t\t\t [scrollable]="true" \r\n\t\t\t\t\t\t scrollHeight="450px">\r\n\t\t\t\t\t\t\t<ng-template pTemplate="caption">\r\n\t\t\t\t\t\t\t\t<div class="row">\r\n                                    <div class="col">\r\n\t\t\t\t\t\t\t\t\t<p-multiSelect [options]="cols"\r\n\t\t\t\t\t\t\t\t\t [(ngModel)]="selectedColumns" optionLabel="header"\r\n\t\t\t\t\t\t\t\t\t  selectedItemsLabel="{0} columns selected"\r\n\t\t\t\t\t\t\t\t\t [style]="{minWidth: \'200px\'}"\r\n\t\t\t\t\t\t\t\t\t  defaultLabel="Choose Columns"\r\n\t\t\t\t\t\t\t\t\t   style="float:left">\r\n\t\t\t\t\t\t\t\t\t</p-multiSelect>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="col">\r\n\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t  <div\r\n\t\t\t\t\t\t\t\t\t\tstyle="width: 370px; float: right; padding-top: 3px;"\r\n\t\t\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t\t\t\t\t  \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n\t\t\t\t\t\t\t\t\t\t  <div\r\n\t\t\t\t\t\t\t\t\t\t\tclass="pull-left"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle="margin-top: 4px; margin-right: 15px;"\r\n\t\t\t\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t\t\t  <label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>Active\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n\t\t\t\t\t\t\t\t\t\t<label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>In-Active\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n\t\t\t\t\t\t\t\t\t\t<label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>All\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class="checkbox-cstm" style="margin-left: 0;">\r\n\t\t\t\t\t\t\t\t\t\t  <label style="width: auto !important;margin-top: 3px;">\r\n\t\t\t\t\t\t\t\t\t\t\t\x3c!--  --\x3e\r\n\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n\t\t\t\t\t\t\t\t\t\t\t (click)="getDeleteListByStatus($event.target.checked)"\r\n\t\t\t\t\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t\t\t\t\t\t<span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t  Show  Deleted List \r\n\t\t\t\t\t\t\t\t\t\t  </label>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="row">\r\n\t\t\t\t\t\t<div class="col">\r\n\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-primary new-table-button" matTooltipPosition="above" matTooltip="Download Selected"   pButton icon="fa-download"\r\n\t\t\t\t\t\t\t\t\t iconPos="left" label="Export All Data"  style="padding: 5px 12px !important;" (click)="dt.exportCSV()"></button>\r\n\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-primary new-table-button" matTooltipPosition="above" matTooltip="Download All Data"   pButton icon="fa-download"\r\n\t\t\t\t\t\t\t\t\t iconPos="left" label="Export Selection Only" style="padding: 5px 12px !important"\r\n\t\t\t\t\t\t\t\t\t  (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" class="uploaddoc upload-file" data-multiple-caption="{count} files selected"\r\n                                               accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"\r\n                                               (change)="bulkUpload($event)">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()">Sample File Download</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\x3c!-- <ng-template pTemplate="colgroup" let-columns>\r\n\t\t\t\t\t\t\t\t<colgroup>\r\n\t\t\t\t\t\t\t\t\t<col *ngFor="let col of columns" style="width:140px">\r\n\t\t\t\t\t\t\t\t</colgroup>\r\n\t\t\t\t\t\t\t</ng-template> --\x3e\r\n\t\t\t\t\t\t\t<ng-template pTemplate="header" let-columns>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n\t\t\t\t\t\t\t\t\t\t{{col.header}}\r\n\t\t\t\t\t\t\t\t\t\t<p-sortIcon [field]="col.field"></p-sortIcon>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th *ngFor="let col of columns" [ngSwitch]="col.field">\r\n\t\t\t\t\t\t\t\t\t\t<input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th style="width:200px;position:sticky"></th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n\t\t\t\t\t\t\t\t<tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openEdits(rowData)">\r\n\t\t\t\t\t\t\t\t\t<td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n\t\t\t\t\t\t\t\t\t\t{{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n\t\t\t\t\t\t\t\t\t\t(rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td class="action-icons-cstm" style="width:200px">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf="currentDeletedstatus==false">\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<span data-toggle="modal" data-target="#view">\r\n\t\t\t\t\t\t\t\t\t\t\t<a class="btn btn-info boxed-float-btn nobg"\r\n\t\t\t\t\t\t\t\t\t\t\t data-toggle="tooltip" matTooltipPosition="above"\r\n\t\t\t\t\t\t\t\t\t\t\t  (click)="openView(view,rowData)" matTooltip="View">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-eye"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openEdit(contentEdit,rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-edit" mat-icon-button\r\n\t\t\t\t\t\t\t\t\t\t (click)="openEdit(contentEdit,rowData)" matTooltip="Edit"\r\n\t\t\t\t\t\t\t\t\t\t  matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n                                            <a class="btn nobg" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="openDelete(content,rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-delete" mat-icon-button \r\n\t\t\t\t\t\t\t\t\t\tmatTooltip="Delete" matTooltipPosition="above" \r\n\t\t\t\t\t\t\t\t\t\t(click)="openDelete(content,rowData)">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon color="warn">delete</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\t\t\t\t\t\t\t\t\t\t<span><a class="btn nobg" \r\n                                            (click)="showAuditPopup(auditContent,rowData.locationId)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n\t\t\t\t\t\t\t\t\t\t matTooltipPosition="above" (click)="showAuditPopup(auditContent,rowData.locationId)">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon color="green">history</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div *ngIf="currentDeletedstatus==true">\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n\t\t\t\t\t\t\t\t\t\tmatTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n\t\t\t\t\t\t\t\t\t   <span data-toggle="modal" data-target="#view"><a class="btn nobg"  (click)="openView(view,rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t  <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template #auditContent let-c="close" let-d="dismiss">\r\n\t\t\t\t\t\t\t\t\t<div class="audit-template-launcher">\r\n\t\t\t\t\t\t\t\t\t\t<location-audit [Data]="AuditDetails" [Modal]="modal" *ngIf= "HasAuditDetails"></location-audit>\r\n\t\t\t\t\t\t\t\t\t\t<audit-no-history [Modal]="modal" [Title]="AuditHistoryTitle" *ngIf="!HasAuditDetails"></audit-no-history>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\t<ng-template pTemplate="emptymessage" let-columns\r\n\t\t\t\t\t\t\t\t\t\t *ngIf="allLocations && allLocations.length == 0 || allLocations && allLocations.length ==null">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td [attr.colspan]="7" class="no-records-cstm">\r\n\t\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="summary" id="footer">\r\n\t\t\t\t\t\t\t\t<label id="footer" class="footer1">Total:</label>\r\n\t\t\t\t\t\t\t\t<input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t<label id="footer" class="footer1">Pages Count:</label>\r\n\t\t\t\t\t\t\t\t<input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t</p-table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n\t</div>\r\n\t<div class="modal-body">\r\n\t\t<strong>\r\n\t\t\tLocation:\r\n\t\t\t<span class="new-label">{{restorerecord.name}}</span>\r\n\t\t</strong>\r\n\t</div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n\t<div class="modal-header">\r\n\t\t<h4 class="modal-title" *ngIf="isEditMode">Edit Location</h4>\r\n\t\t<h4 class="modal-title" *ngIf="!isEditMode">Add Location</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\r\n\t<div class="modal-body">\r\n\t\t<form #userForm="ngForm" class="form-horizontal" (ngSubmit)="saveandeditLocation()">\r\n\t\t\t<div class="col-sm-12">\r\n\t\t\t\t<div class="col-sm-6">\r\n\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label class="control-label">Site Name\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<select [(ngModel)]="sourceLocation.siteId" (ngModelChange)="getmemo()" name="location" (change)="siteValueChange($event.target.value)" required>\r\n\t\t\t\t\t\t\t\t\t<option *ngFor="let site of allSites" [ngValue]="site.siteId">{{site.name}}</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label class="control-label">Warehouse Name\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<select [(ngModel)]="sourceLocation.warehouseId" (ngModelChange)="getmemo()" name="warehouse" (change)="wareHouseValueChange(sourceLocation.warehouseId)" required>\r\n\t\t\t\t\t\t\t\t\t<option *ngFor="let site of allWareHouses" [ngValue]="site.warehouseId">{{site.warehouseName}}</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="actionname" class="control-label">Location Name\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<p-autoComplete (onSelect)="Manufacturerdescription($event)" (onKeyUp)=ManufacturerHandler($event) (completeMethod)="filtermanufacturer($event)"\r\n\t\t\t\t\t\t\t\t [(ngModel)]="name" (ngModelChange)="getmemo()" name="description" [suggestions]="localCollection" [size]="30" [minLength]="2"\r\n\t\t\t\t\t\t\t\t [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\t\t\t\t\t\t\t\t</p-autoComplete>\r\n\t\t\t\t\t\t\t\t<div *ngIf="disableSaveManufacturer" class="clr-red">Already Exists</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Address Line 1</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input class="form-control" type="text" (ngModelChange)="getmemo()" disabled placeholder="Address Line 2" minlength="2" required value={{address1}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Address Line 2</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input disabled class="form-control" (ngModelChange)="getmemo()" type="text" placeholder="Address Line 2" minlength="2" required value={{address2}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Address Line 3</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input class="form-control" type="text" (ngModelChange)="getmemo()" disabled placeholder="Address Line 3" minlength="2" required value={{address3}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">City</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input class="form-control" (ngModelChange)="getmemo()" type="text" disabled placeholder="City" minlength="2" required value={{city}}>\r\n\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t\t<label for="description" class="control-label">State</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t\t<input  class="form-control" (ngModelChange)="getmemo()" type="text" disabled placeholder="State" minlength="2" required value={{stateOrProvince}}>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t\t<label for="description" class="control-label">Country</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t\t<input  class="form-control" (ngModelChange)="getmemo()" type="text" disabled placeholder="Country" minlength="2" required value={{country}}>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t\t<label for="description" class="control-label">Zip Code</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t\t<input  class="form-control" (ngModelChange)="getmemo()" type="text" disabled placeholder="Zip Code" minlength="2" required value={{postalCode}}>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t\t<label for="description" class="control-label">Memo</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t\t<textarea name="memo" (ngModelChange)="getmemo()" [(ngModel)]="sourceLocation.memo"></textarea>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t\t<div class="checkbox-cstm">\r\n\t\t\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="isActive" (ngModelChange)="getmemo()" #isActive="ngModel" checked id="isActive" [(ngModel)]="sourceLocation.isActive">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class="cr">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i class="cr-icon pi pi-check"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\tActive\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="col-sm-6" *ngIf="showManagement">\r\n\t\t\t\t\t\t<p-treeTable [value]="gridData" [columns]="cols1" class="p-Treetable-view" [(selection)]="selectedNodeTest">\r\n\t\t\t\t\t\t\t<ng-template pTemplate="header" let-columns>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th *ngFor="let col of columns">\r\n\t\t\t\t\t\t\t\t\t\t{{col.header}}\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="body" let-rowNode let-rowData="rowData" let-columns="columns">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td *ngFor="let col of columns; let i = index">\r\n\t\t\t\t\t\t\t\t\t\t<p-treeTableToggler [rowNode]="rowNode" *ngIf="i == 0"></p-treeTableToggler>\r\n\t\t\t\t\t\t\t\t\t\t<p-treeTableCheckbox [value]="rowNode" class="p-Tree-checkbox" *ngIf="i == 0" (click)="managementStructureClick(rowData)"></p-treeTableCheckbox>\r\n\t\t\t\t\t\t\t\t\t\t{{rowData[col.field]}}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t</p-treeTable>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class="modal-footer">\r\n\t\t\t\t\t<button class="btn btn-primary" [disabled]="!userForm.valid || disableSaveManufacturer || disableSaveForEdit">{{isEditMode ? \'Update\' : \'Save\' }}</button>\r\n\t\t\t\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t</form>\r\n\t\t</div>\r\n</ng-template>\r\n\r\n\x3c!-- Delete --\x3e\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n\t<div class="modal-header">\r\n\t\t<h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\t<div class="modal-body">\r\n\t\t<strong>\r\n\t\t\tLocation Name:\r\n\t\t\t<span class="new-label">{{location_Name}}</span>\r\n\t\t</strong>\r\n\t</div>\r\n\t<div class="modal-footer">\r\n\t\t<button type="button" class="btn btn-primary" (click)="deleteItemAndCloseModel()">Yes</button>\r\n\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n\t</div>\r\n\r\n</ng-template>\r\n\r\n\r\n\r\n\x3c!-- History --\x3e\r\n\r\n\r\n<ng-template #contentHist let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n\t<div class="modal-header">\r\n\r\n\t\t<h4 class="modal-title">History of Credit Terms</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\r\n\r\n\t</div>\r\n\t<div class="modal-body">\r\n\r\n\t\t<table class="table table-bordered">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>warehouseId</th>\r\n\t\t\t\t\t<th>siteId</th>\r\n\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t<th>Previous Value</th>\r\n\t\t\t\t\t<th>New Value</th>\r\n\t\t\t\t\t<th>Last Updated By</th>\r\n\t\t\t\t\t<th>Last Updated Time</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tr *ngFor="let audit of auditHisory">\r\n\t\t\t\t<td>{{audit.auditHistoryId}}</td>\r\n\t\t\t\t<td>{{audit.columnName}}</td>\r\n\t\t\t\t<td>{{audit.previousValue}}</td>\r\n\t\t\t\t<td>{{audit.newValue}}</td>\r\n\t\t\t\t<td>{{audit.updatedBy}}</td>\r\n\t\t\t\t<td>{{audit.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</td>\r\n\t\t\t</tr>\r\n\t\t</table>\r\n\t</div>\r\n\t<div class="modal-footer">\r\n\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n\t</div>\r\n</ng-template>\r\n\r\n\x3c!-- View --\x3e\r\n\r\n<ng-template #view class="modal fade " id="view" role="dialog">\r\n\r\n\t<div class="modal-content">\r\n\t\t<div class="modal-header">\r\n\t\t\t<button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\t\t\t<h4 class="modal-title">Location Details</h4>\r\n\t\t</div>\r\n\t\t<div class="modal-body viewform">\r\n\t\t\t<div class="col-sm-6">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Location Name : </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{location_Name}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Warehouse Name : </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{warehouseName}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Site Name : </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{siteName}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Address1: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{address1}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Address2: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{address2}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Address3: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{address3}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> City: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{city}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> State: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{stateOrProvince}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div class="col-sm-6">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Country: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{country}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> ZipCode: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{postalCode}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Memo: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{memo}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Created By: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{createdBy}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Created Date: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Updated By: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{updatedBy}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Updated Date: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class="clear"></div>\r\n\t\t</div>\r\n\t\t<div class="modal-footer">\r\n\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</ng-template>'},MaRl:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead"> Depreciation Intervals</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltipPosition="above" \r\n                             matTooltip="Add Depreciation Intervals" \r\n                             tooltipPosition="right" (click)="open(contentEdit)">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading"> Depreciation Intervals</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="open(contentEdit)"\r\n                                  >\r\n                                  Add Depreciation Interval\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <div class="form-row col-row col-row1">\r\n                            <div class="col-md-4 display-flex inline-block" style="margin-top: 25px;">\r\n                                <div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                \r\n\r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm"\r\n                         [value]="depreciationIntervalsList" [metaKeySelection]="true" \r\n                         [totalRecords]="totalRecords" [rows]="pageSize" [paginator]="true" [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" selectionMode="multiple" (onPage)="changePage($event)"\r\n                                 [resizableColumns]="true" [reorderableColumns]="true" [scrollable]="true" scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="selectedData" optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left"></p-multiSelect>\r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  \r\n                                                      <div\r\n                                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                                      >\r\n                                                        <div class="form-group">\r\n                                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                          <div\r\n                                                            class="pull-left"\r\n                                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                                          >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                    \x3c!--  --\x3e\r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                                   \r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download All"   pButton icon="fa-download"\r\n                                            iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download Selected Data"   pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()" matTooltipPosition="above" matTooltip="Download Sample File"   >Sample File Download</button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openEdit(null, rowData)">\r\n                                    <td style="width:200px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" \r\n                                            (click)="openView(view,rowData)" matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        <span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openEdit(contentEdit,rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                        (click)="openEdit(contentEdit,rowData)" matTooltip="Edit"\r\n                                         matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                       \r\n                                        <span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openDelete(content,rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete"\r\n                                         matTooltipPosition="above" (click)="openDelete(content,rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal" ><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" data-target="#contentHist" data-toggle="modal" \r\n                                         (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view">\r\n                                           <a class="btn nobg" (click)="openView(view,rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="depreciationIntervalsList && depreciationIntervalsList.length == 0 || depreciationIntervalsList && depreciationIntervalsList.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label> \r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Depreciation Intervals:\r\n            <span class="new-label">{{restorerecord.name}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<ng-template #view class="modal fade " id="view" role="dialog">\r\n\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n            <h4 class="modal-title"> Depreciation Interval Details</h4>\r\n        </div>\r\n        <div class="modal-body viewform">\r\n            <div class="col-sm-12">\r\n                <p>\r\n                    <span class="label">\r\n                        <b> Depreciation Interval Code: </b>\r\n                    </span>\r\n                    <span class="value">{{code}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b> Name: </b>\r\n                    </span>\r\n                    <span class="value">{{name}}</span>\r\n                </p>\r\n\r\n                <p>\r\n                    <span class="label">\r\n                        <b> Memo: </b>\r\n                    </span>\r\n                    <span class="value">{{memo}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Created By: </b>\r\n                    </span>\r\n                    <span class="value">{{createdBy}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Created Date: </b>\r\n                    </span>\r\n                    <span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Updated By: </b>\r\n                    </span>\r\n                    <span class="value">{{updatedBy}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Updated Date: </b>\r\n                    </span>\r\n                    <span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n            </div>\r\n            <div class="clear"></div>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Depreciation Interval Code:\r\n            <span class="new-label">{{code_Name}}</span>\r\n        </strong>\r\n    </div>\r\n\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="removedepreciationIntervals()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">&times;</button>\r\n        <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Depreciation Interval  </h4>\r\n\r\n    </div>\r\n    <div class="modal-body">\r\n        <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="SaveandEditDepreciationInterval()">\r\n            <div class="form-group">\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label for="name" class="control-label">\r\n                            Depreciation Interval\r\n                            <span class="clr-red">*</span>\r\n                        </label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <p-autoComplete [(ngModel)]="codeName" name="codeName" (onSelect)="partnmId($event)"\r\n                         (onKeyUp)="eventHandler($event)" (ngModelChange)="getmemo()" [suggestions]="localCollection" (completeMethod)="filterDepreciationInterval($event)" [size]="30"\r\n                                        [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                            <ng-template let-codeName pTemplate="item">\r\n                                <div class="ui-helper-clearfix">{{codeName}}</div>\r\n                            </ng-template>\r\n\r\n                        </p-autoComplete>\r\n                        <div *ngIf="disableSave" class="clr-red">Already Exists</div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label for="AssetDepreciationIntervalName" class="control-label control-item">\r\n                            Name\r\n                            <span class="clr-red">*</span>\r\n                        </label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <input type="text" name="name" class="form-control" (ngModelChange)="getmemo()" required #Name="ngModel" [(ngModel)]="sourceAction.name" minlength="2">\r\n                        <div *ngIf="Name.dirty && Name.errors?.required && Name.errors" class="invalid-form-error-message">\r\n                            Depreciation Interval Name required.\r\n                        </div>\r\n                        <div *ngIf="Name.dirty && Name.errors?.minlength && Name.errors" class="invalid-form-error-message">\r\n                            Depreciation Interval Name must be at least 2 characters long.\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label for="AssetDepreciationIntervalMemo" class="control-label">Memo</label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <textarea class="text-item" #memo="ngModel" (ngModelChange)="getmemo()" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceAction.memo" minlength="2"></textarea>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <div class="col-sm-6">\r\n                    <div class="checkbox-cstm check-value">\r\n                        <label>\r\n                            <input type="checkbox" name="isActive" (ngModelChange)="getmemo()" #isActive="ngModel" class="form-check-input trigger2" checked id="isActive" [(ngModel)]="sourceAction.isActive" [ngModelOptions]="{standalone: true}">\r\n                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                            Active\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button class="btn btn-primary" [disabled]="!userForm.valid || disableSave || disableSaveForEdit" (click)="SaveandEditDepreciationInterval()">{{isEdit ? \'Update\' : \'Save\' }}</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Depreciation Interval</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Code</th>\r\n                                <th>Name</th>\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'assetDepreciationIntervalCode\', audit.assetDepreciationIntervalCode)  ? \'black\' : \'red\'  }">{{audit.assetDepreciationIntervalCode}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'assetDepreciationIntervalName\', audit.assetDepreciationIntervalName)  ? \'black\' : \'red\'  }">{{audit.assetDepreciationIntervalName}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'assetDepreciationIntervalMemo\', audit.assetDepreciationIntervalMemo)  ? \'black\' : \'red\'  }">{{audit.assetDepreciationIntervalMemo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>'},N4S0:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Item Classification</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" matTooltipPosition="above"\r\n                             matTooltip="Add Item Classification"\r\n                              tooltipPosition="right" data-toggle="modal"\r\n                               data-target="#contentEdit" (click)="resetItemCForm()"><i class="fa fa-plus-circle fa-lg"></i></a>\r\n                            \r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Item Classification</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-toggle="modal"\r\n                               data-target="#contentEdit" (click)="resetItemCForm()"\r\n                                  >\r\n                                  Add Item Classification\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                        \r\n                        <p-table #dt [value]="allitemclassificationInfo" class="rpo-table-cstm rro-table-cstm"\r\n                         [rows]="10"\r\n                                 [rowsPerPageOptions]="[10,20,30]" [metaKeySelection]="true" \r\n                                 [paginator]="true" [pageLinks]="3"\r\n                                 [columns]="selectedColumns" [totalRecords]="totalRecords" \r\n                                 selectionMode="multiple"\r\n                                 [lazy]="false"\r\n                                 [(selection)]="selectedColumn" [resizableColumns]="true" \r\n                                 [reorderableColumns]="true" [scrollable]="true" scrollHeight="450px"> \x3c!--(onLazyLoad)="loadAllitemclassificationInfo($event)"--\x3e\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [options]="cols" [(ngModel)]="selectedColumns"\r\n                                     optionLabel="header" [resetFilterOnHide]="true"\r\n                                                   selectedItemsLabel="{0} columns selected" \r\n                                                   [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns"\r\n                                                    style="float:left;padding:0px 2px !important">\r\n                                    </p-multiSelect>\r\n                                </div>\r\n\r\n                                    <div class="col">\r\n                                      \r\n                                        <div\r\n                                          style="width: 370px; float: right; padding-top: 3px;"\r\n                                        >\r\n                                          <div class="form-group">\r\n                                            \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                            <div\r\n                                              class="pull-left"\r\n                                              style="margin-top: 4px; margin-right: 15px;"\r\n                                            >\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>In-Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                        (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>All\r\n                                                    </label>\r\n                                                </div>\r\n                                                    <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                      <label style="width: auto !important;margin-top: 3px;">\r\n                                                       \r\n                                                        <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                         (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                          />\r\n                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                      Show  Deleted List \r\n                                                      </label>\r\n                                                    </div>\r\n                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="row">\r\n                                    <div class="col">\r\n\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data" matTooltipPosition="above" pButton icon="fa-download" iconPos="left" label="Export Data" style="padding: 5px 12px !important" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" label="Export Selection Only" style="padding: 5px 12px !important" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)"\r\n                                               class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltip="Download Sample file" matTooltipPosition="above" style="padding: 5px 12px !important;" (click)="sampleExcelDownload()">Sample File Download</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                                   \r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position: sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" [pSelectableRowIndex]="rowIndex" pReorderableRowHandle\r\n                                    data-toggle="modal" data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                    <td style="width:200px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{col.field == \'createdDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\'):rowData[col.field] && col.field == \'updatedDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px;position: sticky">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                               (click)="viewSelectedRow(rowData)" matTooltip="View" matTooltipPosition="above" data-toggle="modal" data-target="#view"><i class="fa fa-eye"></i></a>\r\n                                        </span>\r\n\r\n                                        <span data-toggle="modal" data-target="#contentEdit">\r\n                                            <a class="btn nobg"\r\n                                               (click)="editItemClassification(rowData)"\r\n                                               matTooltip="Edit"\r\n                                               matTooltipPosition="above">\r\n                                                <i class="fa fa-pencil">\r\n                                                </i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button\r\n                                            (click)="editItemClassification(rowData)" data-toggle="modal"\r\n                                             data-target="#contentEdit" matTooltip="edit"\r\n                                             matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg"\r\n                                               (click)="delete(rowData)"\r\n                                               matTooltip="Delete" matTooltipPosition="above">\r\n                                                <i class="fa fa-trash"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button\r\n                                         matTooltip="delete" data-target="#delete"\r\n                                        data-toggle="modal" (click)="delete(rowData)"\r\n                                        matTooltipPosition="above">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal">\r\n                                            <a class="btn nobg"\r\n                                               (click)="getAuditHistoryById(rowData)"\r\n                                               matTooltip="History" matTooltipPosition="above">\r\n                                                <i class="fa fa-history"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="history"\r\n                                         matTooltipPosition="above"\r\n                                         data-target="#contentHist" data-toggle="modal"\r\n                                         (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                                         *ngIf="allitemclassificationInfo.length == 0"> \r\n                                <tr>\r\n                                    <td [attr.colspan]="7" class="no-records-cstm">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Item Classification ID:\r\n            <span class="new-label">{{restorerecord.itemClassificationCode}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n<div class="modal fade" id="contentEdit" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <form #userForm="ngForm" class="form-horizontal">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title" *ngIf="isEditMode">Edit Item Classification</h4>\r\n                    <h4 class="modal-title" *ngIf="!isEditMode">Add Item Classification</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-6">\r\n                                <label for="name" class="control-label control-item">Item Classification <span class="clr-red">*</span></label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="itemClassificationCode" name="code"\r\n                                                (onSelect)="selectedItemCode($event)"\r\n                                                (onKeyUp)="checkItemCodeExists($event.target.value)"\r\n                                                [(ngModel)]="addNewItemClassification.itemClassificationCode"\r\n                                                [suggestions]="itemClassificationList" (completeMethod)="filterItemCode($event)"\r\n                                                [size]="30" [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required (ngModelChange)="getmemo()">\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForItemCodeMsg" class="clr-red">Already Exists</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-6">\r\n                                <label for="netDays" class="control-label control-item">\r\n                                    Item Classification Description <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="description" (onSelect)="selectedItemDesc($event)" name="classficationDesc"\r\n                                                (onKeyUp)="checkItemDescExists($event.target.value)"\r\n                                                [(ngModel)]="addNewItemClassification.description"\r\n                                                [suggestions]="itemClassificationDescList" (completeMethod)="filterItemDesc($event)"\r\n                                                [size]="30" class="p-autoComplete-ctsm p-autocomp-ctsm" [minLength]="1" [dropdown]="true" required (ngModelChange)="getmemo()">\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForItemDescMsg" class="clr-red">Already Exists</div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-6">\r\n                                <label class="control-label control-item">Item Type <span class="clr-red">*</span></label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <select class="form-control" name="itemType" [(ngModel)]="addNewItemClassification.itemType" (ngModelChange)="getmemo()" required>\r\n                                    <option value="Stock">Stock</option>\r\n                                    <option value="Non Stock">Non Stock</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-6">\r\n                                <label for="description" class="control-label control-item">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription" (ngModelChange)="getmemo()"\r\n                                          [(ngModel)]="addNewItemClassification.memo" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" #isActive="ngModel"\r\n                                     checked id="isActive" [(ngModel)]="addNewItemClassification.isActive" (ngModelChange)="getmemo()">\r\n                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button class="btn btn-primary" data-dismiss="modal" \r\n                    [disabled]="!userForm.valid || disableSaveForItemDescMsg || \r\n                    disableSaveForItemCodeMsg || disableSaveForEdit "\r\n                     (click)="saveItemClassification()">{{isEditMode ? \'Update\' : \'Save\'}}</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetItemCForm()">Close</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Item Classification Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Item Classification ID: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.itemClassificationCode}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header"> Item Classification Description: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.description}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">ItemType: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.itemType}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Is Active: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                    Item Classification ID:\r\n                    <span class="new-label">{{selectedRowforDelete.itemClassificationCode}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Item Classification</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Item Classfication ID</th>\r\n                                <th>Item Classfication Description</th>\r\n                                <th>Item Type</th>\r\n                                <th>Memo</th>\r\n                                <th>Is Active</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'itemClassificationCode\', audit.itemClassificationCode)  ? \'black\' : \'red\'  }">{{audit.itemClassificationCode}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'itemType\', audit.itemType)  ? \'black\' : \'red\'  }">{{audit.itemType}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n'},N6yo:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n\t<div class="right_col" role="main">\r\n\t\t<div class="x_panel">\r\n\t\t\t<div class="x_content">\r\n\t\t\t\t\x3c!--<nav aria-label="breadcrumb">\r\n\t\t\t\t\t<ol class="breadcrumb">\r\n\t\t\t\t\t\t<li class="breadcrumb-item"><a routerLink="/">Dashboard</a></li>\r\n\t\t\t\t\t\t<li class="breadcrumb-item active" aria-current="page">Action Attribute Mapping</li>\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</nav>--\x3e\r\n\t\t\t\t<h4 class="page-heading clr-green">Action Attribute Mapping</h4>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>'},NOoL:function(t,e,a){"use strict";a.r(e),e.default="control-label {\n  margin-top: 10px;\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}\n\n.modal.editModal .modal-body div.form-group label, .modal.editModal label {\n  font-weight: normal;\n  width: 100%;\n  text-align: left;\n}"},Nagp:function(t,e,a){"use strict";a.r(e),e.default=".new-label {\n  color: cadetblue;\n}\n\n.text-item {\n  width: 100%;\n  border-radius: 5px !important;\n  margin-left: 0px;\n}\n\n.control-label {\n  margin-top: 5px;\n  text-align: left;\n  width: 100% !important;\n}"},O3AI:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Manufacturer</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" matTooltipPosition="above" matTooltip="Add Manufacturer" tooltipPosition="right"\r\n                             (click)="resetManufacuterForm()"\r\n                               data-target="#addManufacturer" data-toggle="modal">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Manufacturer</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="resetManufacuterForm()"\r\n                               data-target="#addManufacturer" data-toggle="modal"\r\n                                  >\r\n                                  Add Manufacturer\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="ManufactureData" [first]="0"\r\n                                 [rows]="pageSize" \r\n                                 [paginator]="true" \r\n                                 [pageLinks]="3" \r\n                                 [rowsPerPageOptions]="[10,20,50,100]"\r\n                                 [columns]="selectedColumns" \r\n                                 selectionMode="multiple"\r\n                                 [metaKeySelection]="true"\r\n                                  (onPage)="changePage($event)"\r\n                                 [resizableColumns]="true" \r\n                                 [reorderableColumns]="true" \r\n                                 [scrollable]="true"\r\n                                 [lazy]="true" \r\n                                 (onLazyLoad)="loadAllManufacturerData($event)"\r\n                                 [totalRecords]="totalRecords" \r\n                                 scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="manufacturerHeader"\r\n                                                   optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                    [style]="{minWidth: \'200px\'}"\r\n                                                   [resetFilterOnHide]="true" style="float:left"\r\n                                                    (onChange)="columnsChanges()"></p-multiSelect>\r\n                                                </div>\r\n                                                <div class="col">\r\n                                      \r\n                                                    <div\r\n                                                      style="width: 370px; float: right; padding-top: 3px;"\r\n                                                    >\r\n                                                      <div class="form-group">\r\n                                                        \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                        <div\r\n                                                          class="pull-left"\r\n                                                          style="margin-top: 4px; margin-right: 15px;"\r\n                                                        >\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>In-Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>All\r\n                                                        </label>\r\n                                                    </div>\r\n                                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                          <label style="width: auto !important;margin-top: 3px;">\r\n                                                            \x3c!--  --\x3e\r\n                                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                             (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                              />\r\n                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                          Show  Deleted List \r\n                                                          </label>\r\n                                                        </div>\r\n                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n    \r\n                                    </div>\r\n                                    <div class="row">\r\n                                        <div class="col">\r\n\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"\r\n                                            matTooltipPosition="above" style="padding: 5px 12px !important;"\r\n                                            pButton icon="fa-download" iconPos="left"\r\n                                            label="Export Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected"\r\n                                            matTooltipPosition="above" style="padding: 5px 12px !important"\r\n                                            pButton icon="fa-download" iconPos="left"\r\n                                            label="Export Selection Only"\r\n                                            (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload"\r\n                                               (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltip="Download Sample file" style="padding: 5px 12px !important;" matTooltipPosition="above" (click)="sampleExcelDownload()">\r\n                                            Sample File\r\n                                            Download\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                                   \r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0">\r\n                                        Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                               (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle [pSelectableRowIndex]="rowIndex">\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle data-toggle="modal" data-target="#view"\r\n                                        (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                      \r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active"\r\n                                         matTooltipPosition="above" onLabel="on" offLabel="off" \r\n                                         (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active"\r\n                                         matTooltipPosition="above" onLabel="on" offLabel="off" \r\n                                         (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active"\r\n                                         matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" \r\n                                         [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                               (click)="viewSelectedRow(rowData)" matTooltip="View" data-target="#view" matTooltipPosition="above"\r\n                                               data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n                                        <span data-target="#addManufacturer" data-toggle="modal">\r\n                                            <a class="btn nobg"\r\n                                               (click)="editManufacturer(rowData)"\r\n                                               matTooltip="Edit"\r\n                                               matTooltipPosition="above">\r\n                                                <i class="fa fa-pencil">\r\n                                                </i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="editManufacturer(rowData)"\r\n                                                data-target="#addManufacturer" data-toggle="modal" matTooltip="Edit"\r\n                                                 matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg"\r\n                                               (click)="delete(rowData)"\r\n                                               matTooltip="Delete" matTooltipPosition="above">\r\n                                                <i class="fa fa-trash"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button\r\n                                        matTooltip="Delete" matTooltipPosition="above"\r\n                                                data-target="#delete" data-toggle="modal"\r\n                                                (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n                                        <span data-target="#contentHist" data-toggle="modal">\r\n                                            <a class="btn nobg"\r\n                                               (click)="getAuditHistoryById(rowData)"\r\n                                               matTooltip="History" matTooltipPosition="above">\r\n                                                <i class="fa fa-history"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above"\r\n                                                data-target="#contentHist" data-toggle="modal"\r\n                                                (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                                         *ngIf="ManufactureData && ManufactureData.length == 0 || ManufactureData && ManufactureData.length ==\'\'">\r\n                                <tr>\r\n                                    <td [attr.colspan]="7" class="no-records-cstm">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total:</label>\r\n                                \x3c!-- <p>{{uomData.length}}</p> --\x3e\r\n                                <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText\r\n                                       type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText\r\n                                       type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static" data-keyboard="false">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Manufacture Name:\r\n            <span class="new-label">{{restorerecord.name}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                    Manufacture Name:\r\n                    <span class="new-label">{{selectedRowforDelete.name}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                        (click)="deleteConformation(\'Yes\')">\r\n                    Yes\r\n                </button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                        (click)="deleteConformation(\'No\')">\r\n                    No\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #addManufacturer id="addManufacturer" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="resetManufacuterForm()" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Manufacturer </h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #Manufacturer="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">\r\n                                    Manufacturer\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="name" [(ngModel)]="addnewManufacturer.name"\r\n                                                (onSelect)="selectedManufcaturer($event)" (onBlur)="onBlur($event)"\r\n                                                (onKeyUp)="checkManufacturerExists(\'name\', $event.target.value)" name="uom"\r\n                                                [suggestions]="ManufactList" (completeMethod)="filterDescription($event)"\r\n                                                [size]="30" [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required (ngModelChange)="getmemo($event)">\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForShortName" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" (ngModelChange)="getmemo($event)" name="memodescription"\r\n                                          [(ngModel)]="addnewManufacturer.comments" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addnewManufacturer.isActive" (ngModelChange)="getmemo($event)">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal"\r\n                        [disabled]="Manufacturer.invalid || disableSaveForShortName || disableSaveForUOM" (click)="saveManufacturer();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}\r\n                </button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                        (click)="resetManufacuterForm()">\r\n                    Close\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Manufacturer Name</th> >\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length > 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                <td>{{ext.name}}</td>\r\n                                <td>{{ext.comments}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Manufacturer</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Manufacturer</th>\r\n                                <th>Memo</th>\r\n                                <th>Is Active</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'name\', audit.name)  ?  \'black\' : \'red\'  }">\r\n                                    {{audit.name}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'comments\', audit.comments) ? \'black\' : \'red\'  }">\r\n                                    {{audit.comments}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive) ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}\r\n                                </td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name=""\r\n                        (click)="resetViewData()">\r\n                    \xd7\r\n                </button>\r\n                <h4 class="modal-title">Manufacture Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Manufacturer: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.name}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.comments}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Is Active</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name=""\r\n                        (click)="resetViewData()">\r\n                    Close\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>\r\n                    Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},O8W3:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n\t<div class="right_col" role="main">\r\n\t\t<div class="x_panel">\r\n\t\t\t<div class="x_content">\r\n\t\t\t\t\x3c!-- <div class="card">\r\n\t\t\t\t\t<div class="card-body">\r\n\t\t\t\t\t\t<div class="inline-block display-flex">\r\n\t\t\t\t\t\t\t<h3 class="po-head lead">Add Ship Via</h3>\r\n\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t<a class="plusicon-cstm new-margin" \r\n\t\t\t\t\t\t\tmatTooltipPosition="above" \r\n\t\t\t\t\t\t\tmatTooltip="Add Ship Via" tooltipPosition="right"\r\n\t\t\t\t\t\t\t data-target="#addShipvia" data-toggle="modal" \r\n\t\t\t\t\t\t\t (click)="resetShipviaForm()">\r\n\t\t\t\t\t\t\t\t<i class="fa fa-plus-circle fa-lg"></i>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div> --\x3e\r\n\t\t\t\t\t\t<div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Add Ship Via</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n\t\t\t\t\t\t\t\t\tdata-target="#addShipvia" data-toggle="modal" \r\n\t\t\t\t\t\t\t\t\t(click)="resetShipviaForm()"\r\n                                  >\r\n\t\t\t\t\t\t\t\t  Add Ship Via\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<p-table #dt class="rpo-table-cstm rro-table-cstm"\r\n\t\t\t\t\t\t [value]="shipViaData" [first]="0" \r\n\t\t\t\t\t\t [rows]="pageSize" [metaKeySelection]="true"\r\n\t\t\t\t\t\t [paginator]="true"\r\n\t\t\t\t\t\t\t\t [pageLinks]="3"\r\n\t\t\t\t\t\t\t\t  [rowsPerPageOptions]="[10,20,50,100]"\r\n\t\t\t\t\t\t\t\t   [columns]="selectedColumns" \r\n\t\t\t\t\t\t\t\t   selectionMode="multiple" \r\n\t\t\t\t\t\t\t\t   (onPage)="changePage($event)"\r\n\t\t\t\t\t\t\t\t [(selection)]="selectedColumn" \r\n\t\t\t\t\t\t\t\t [resizableColumns]="true"\r\n\t\t\t\t\t\t\t\t  [reorderableColumns]="true" \r\n\t\t\t\t\t\t\t\t  [scrollable]="true"\r\n\t\t\t\t\t\t\t\t   [totalRecords]="totalRecords"\r\n\t\t\t\t\t\t\t\t scrollHeight="450px">\r\n\t\t\t\t\t\t\t<ng-template pTemplate="caption">\r\n\t\t\t\t\t\t\t\t<div class="row">\r\n                                    <div class="col">\r\n\t\t\t\t\t\t\t\t\t<p-multiSelect [options]="shipviaHeaders" [(ngModel)]="selectedColumns" optionLabel="header" \r\n\t\t\t\t\t\t\t\t\t\t\t\t   [style]="{minWidth: \'200px\'}" style="float:left" (onChange)="columnsChanges()" ></p-multiSelect>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class="col">\r\n\t\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  <div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle="width: 370px; float: right; padding-top: 3px;"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass="pull-left"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle="margin-top: 4px; margin-right: 15px;"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>Active\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>In-Active\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>All\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="checkbox-cstm" style="margin-left: 0;">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <label style="width: auto !important;margin-top: 3px;">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\x3c!--  --\x3e\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t (click)="getDeleteListByStatus($event.target.checked)"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  Show  Deleted List \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  </label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class="row">\r\n\t\t\t\t\t\t\t\t\t\t\t  <div class="col">\r\n\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-primary new-table-button" pButton icon="fa-download"  style="padding: 5px 12px !important;" iconPos="left" label="Export Data" matTooltip="Download Data" matTooltipPosition="above"   (click)="dt.exportCSV()"></button>\r\n\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-primary new-table-button" pButton icon="fa-download"  style="padding: 5px 12px !important;" iconPos="left" label="Export Selection Only" matTooltip="Download Selected" matTooltipPosition="above"  \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="dt.exportCSV({selectionOnly:true})"></button>\r\n\t\t\t\t\t\t\t\t\t<div class="excel-upload excel-upload-cstm">\r\n\t\t\t\t\t\t\t\t\t\t<input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file" \r\n\t\t\t\t\t\t\t\t\t\t\t   accept=".xlsx, .xls, .csv">\r\n\t\t\t\t\t\t\t\t\t\t<label for="upload">\r\n\t\t\t\t\t\t\t\t\t\t\t<span matTooltip="Upload Data (Excel)"   matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-upload"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t&nbsp; &nbsp;\r\n\t\t\t\t\t\t\t\t\t   <button class="btn btn-primary" (click)="sampleExcelDownload()"  style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download Sample File">Sample File Download</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="colgroup" let-columns>\r\n\t\t\t\t\t\t\t\t<colgroup>\r\n\t\t\t\t\t\t\t\t\t<col *ngFor="let col of columns" style="width:140px">\r\n\t\t\t\t\t\t\t\t</colgroup>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="header" let-columns>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n\t\t\t\t\t\t\t\t\t\t{{col.header}}\r\n\t\t\t\t\t\t\t\t\t\t<p-sortIcon [field]="col.field"></p-sortIcon>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th style="width:150px;position:sticky" *ngIf="selectedColumns.length> 0">Actions</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th *ngFor="let col of columns" [ngSwitch]="col.field">\r\n\t\t\t\t\t\t\t\t\t\t<input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th style="width:150px;position:sticky"></th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n\t\t\t\t\t\t\t\t<tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="viewSelectedRow(rowData)" [pSelectableRowIndex]="rowIndex">\r\n\t\t\t\t\t\t\t\t\t<td *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal" data-target="#view">\r\n\t\t\t\t\t\t\t\t\t\t{{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n\t\t\t\t\t\t\t\t\t\t(rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td  class="action-icons-cstm" style="width:150px" *ngIf="selectedColumns.length> 0">\r\n\t\t\t\t\t\t\t\t\t\t\x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf="currentDeletedstatus==false">\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span data-toggle="modal" data-target="#view">\r\n\t\t\t\t\t\t\t\t\t\t\t<a class="btn nobg" matTooltipPosition="above"\r\n\t\t\t\t\t\t\t\t\t\t\t (click)="viewSelectedRow(rowData)" matTooltip="View">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-eye"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\t\t\t<span data-target="#addShipvia" data-toggle="modal">\r\n\t\t\t\t\t\t\t\t\t\t\t<a class="btn nobg" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="edit(rowData)"\r\n\t\t\t\t\t\t\t\t\t\t\tmatTooltip="Edit" \r\n\t\t\t\t\t\t\t\t\t\t\tmatTooltipPosition="above"><i class="fa fa-pencil">                          \r\n\t\t\t\t\t\t\t\t\t\t\t</i></a> </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)" \r\n\t\t\t\t\t\t\t\t\t\tdata-target="#addShipvia" data-toggle="modal" matTooltip="edit"\r\n\t\t\t\t\t\t\t\t\t\t matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t<span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="delete(rowData)" \r\n\t\t\t\t\t\t\t\t\t\t\tmatTooltip="Delete"  matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t   \r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-delete" mat-icon-button matTooltip="delete"\r\n\t\t\t\t\t\t\t\t\t\t matTooltipPosition="above" data-target="#delete" data-toggle="modal" \r\n\t\t\t\t\t\t\t\t\t\t (click)="delete(rowData)">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon color="warn">delete</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="getAuditHistoryById(rowData)"\r\n\t\t\t\t\t\t\t\t\t\t\t matTooltip="History" matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-history" mat-icon-button matTooltip="history" \r\n\t\t\t\t\t\t\t\t\t\tmatTooltipPosition="above" data-target="#contentHist" data-toggle="modal" \r\n\t\t\t\t\t\t\t\t\t\t(click)="getAuditHistoryById(rowData)">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon color="green">history</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div *ngIf="currentDeletedstatus==true">\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n\t\t\t\t\t\t\t\t\t\tmatTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n\t\t\t\t\t\t\t\t\t   <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t  <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t</div> \r\n\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n<ng-template pTemplate="emptymessage" let-columns *ngIf="shipViaData?.length == 0">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t  <td [attr.colspan]="3" style="color: red; font-weight: bold; text-align: center">\r\n\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t  </td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="summary" id="footer">\r\n\t\t\t\t\t\t\t\t<label id="footer" class="footer">Total:</label>\r\n\t\t\t\t\t\t\t\t<input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t<label id="footer" class="footer1">Pages Count:</label>\r\n\t\t\t\t\t\t\t\t<input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t</p-table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t\t<div class="modal-dialog">\r\n\t\t\t<div class="modal-content">\r\n\t\t\t\t<div class="modal-header">\r\n\t\t\t\t\t<button type="button" class="close" data-dismiss="modal">&times;</button>\r\n\t\t\t\t\t<h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-body">\r\n\t\t\t\t\t<strong>\r\n\t\t\t\t\t\tShip Via :\r\n\t\t\t\t\t\t<span class="new-label">{{selectedRowforDelete.name}}</span>\r\n\t\t\t\t\t</strong>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-footer">\r\n\t\t\t\t\t<button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n\t\t\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n\t\t<div class="modal-header">\r\n\t\t\t<h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n\t  \r\n\t\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t\t</button>\r\n\t\t   \r\n\t\t</div>\r\n\t\t<div class="modal-body">\r\n\t\t\t<strong>\r\n\t\t\t\tShip Via:\r\n\t\t\t\t<span class="new-label">{{restorerecord.name}}</span>\r\n\t\t\t</strong>\r\n\t\t</div>\r\n\t  \r\n\t\t<div class="modal-footer">\r\n\t\t\t<button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n\t\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n\t\t</div>\r\n\t  </ng-template>\r\n\r\n\t<div #addShipvia id="addShipvia" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t\t<div class="modal-dialog">\r\n\t\t\t<div class="modal-content">\r\n\t\t\t\t<div class="modal-header">\r\n\t\t\t\t\t<h4 class="modal-title" *ngIf="isEditMode">Edit Ship Via</h4>\r\n\t\t\t\t\t<h4 class="modal-title" *ngIf="!isEditMode">Add Ship Via</h4>\r\n\t\t\t\t\t<button type="button" class="close" aria-label="Close" data-dismiss="modal">\r\n\t\t\t\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-body">\r\n\t\t\t\t\t<form #userForm="ngForm">\r\n\t\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t\t<label for="description" class="control-label">\r\n\t\t\t\t\t\t\t\t\t\tShip Via\r\n\t\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t\t<p-autoComplete field="name"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]="addNewShipvia.name"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t[suggestions]="shipviaList"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(onSelect)="selectedShipvia($event)"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(completeMethod)="filtershipvia($event)"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(onKeyUp)="checkShipViaExists(\'name\', $event.target.value)"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname="name" [size]="30" [minLength]="1" [dropdown]="true"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclass="p-autoComplete-ctsm" required>\r\n\t\t\t\t\t\t\t\t\t</p-autoComplete> \x3c!--(onBlur)="onBlur($event)"--\x3e\r\n\t\t\t\t\t\t\t\t\t<div *ngIf="disableSaveForConditionMsg"\r\n\t\t\t\t\t\t\t\t\t style="color:red">Already exist</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t\t<label for="memo" class="control-label">Memo</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t\t<textarea #memo="ngModel" id="memo" name="memo"  (ngModelChange)="getmemo($event)" [(ngModel)]="addNewShipvia.memo"></textarea>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t\t<div class="col-sm-6">\r\n\t\t\t\t\t\t\t\t<div class="checkbox-cstm check-value">\r\n\t\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t\t<input type="checkbox" name="isActive" class="form-check-input trigger2" [(ngModel)]="addNewShipvia.isActive">\r\n\t\t\t\t\t\t\t\t\t\t<span class="cr">\r\n\t\t\t\t\t\t\t\t\t\t\t<i class="cr-icon pi pi-check"></i>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\tActive\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="modal-footer">\r\n\t\t\t\t\t\t\t<button class="btn btn-primary" data-dismiss="modal" [disabled]="!userForm.valid || disableSaveForCondition" (click)="saveShipVia();"> {{isEditMode ? \'Update\' : \'Save\' }}</button>\r\n\t\t\t\t\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetShipviaForm()">Close</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t\t<div class="modal-dialog modal-sm">\r\n\t\t\t<div class="modal-content">\r\n\t\t\t\t<div class="modal-header">\r\n\t\t\t\t\t<button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n\t\t\t\t\t<h4 class="modal-title">Ship Via Details</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-body viewform ">\r\n\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Ship Via: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{ viewRowData.name}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Memo: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{ viewRowData.memo}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Is Active: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Created By: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{viewRowData.createdBy }}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Created Date: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Updated By: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{viewRowData.updatedBy}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t<span class="label ">\r\n\t\t\t\t\t\t\t\t<b class="view-Header">Updated Date: </b>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-footer">\r\n\t\t\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetShipviaForm()">Close</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\r\n\t\t</div>\t\r\n\t</div>\t\r\n\r\n\t<div id="contentHist" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t\t<div class="modal-dialog modal-xl">\r\n\t\t\t\x3c!-- Modal content--\x3e\r\n\t\t\t<div class="modal-content">\r\n\t\t\t\t<div class="modal-header">\r\n\t\t\t\t\t<button type="button" class="close" data-dismiss="modal">&times;</button>\r\n\t\t\t\t\t<h4 class="modal-title">History of Ship Via</h4>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-body">\r\n\t\t\t\t\t<div class="table-responsive rro-table-cstm">\r\n\t\t\t\t\t\t<table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th>Ship Via</th>\r\n\t\t\t\t\t\t\t\t\t<th>Memo</th>\r\n\t\t\t\t\t\t\t\t\t<th>Is Active</th>\r\n\t\t\t\t\t\t\t\t\t<th>Updated By</th>\r\n\t\t\t\t\t\t\t\t\t<th>Updated Time</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody *ngIf="auditHistory.length> 0">\r\n\t\t\t\t\t\t\t\t<tr *ngFor="let audit of auditHistory; let i = index;">\r\n\t\t\t\t\t\t\t\t\t\x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n\t\t\t\t\t\t\t\t\t<td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'name\', audit.name)  ? \'black\' : \'red\'  }">{{audit.name}}</td>\r\n\t\t\t\t\t\t\t\t\t<td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n\t\t\t\t\t\t\t\t\t<td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'is Active\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{{audit.updatedBy}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\t\t\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t<ng-template #noDatavailable>\r\n\t\t\t\t\t\t\t<div class="text-center">\r\n\t\t\t\t\t\t\t\t<img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n\t\t\t\t\t\t\t\t<h4 style="color: #ff5663;">No History Found </h4>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="modal-footer">\r\n\t\t\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t</div>'},O8xP:function(t,e,a){"use strict";a.r(e),e.default=""},OGf2:function(t,e,a){"use strict";a.r(e),e.default=".new-margin {\n  margin-top: 10px;\n}\n\n.new-label {\n  color: cadetblue;\n}\n\n.control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}\n\n.x_panel {\n  border: none;\n}\n\n.input-value1 {\n  width: 180px;\n  margin-left: 2px;\n}\n\nselect {\n  border-radius: 5px !important;\n}"},OwCF:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Job Titles</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltipPosition="above" matTooltip="Add Job Titles" tooltipPosition="right"\r\n                                data-target="#addJobtitles" data-toggle="modal" \r\n                                (click)="resetJobTitleForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Job Titles</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#addJobtitles" data-toggle="modal" \r\n                                    (click)="resetJobTitleForm()"\r\n                                  >\r\n                                  Add Job Titles\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n\r\n                       \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="jobTitleData" [first]="0"\r\n                            [rows]="pageSize" \r\n                            [paginator]="true" \r\n                            [pageLinks]="3" \r\n                            [rowsPerPageOptions]="[10,20,50,100]"\r\n                            [columns]="selectedColumns" \r\n                            selectionMode="multiple"\r\n                            [metaKeySelection]="true" \r\n                            (onPage)="changePage($event)"\r\n                            [resizableColumns]="true" \r\n                            [reorderableColumns]="true" \r\n                            [scrollable]="true"\r\n                            [totalRecords]="totalRecords" scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="jobtitleHeader"\r\n                                        optionLabel="header" [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}"\r\n                                        style="float:left" (onChange)="columnsChanges()">\r\n                                    </p-multiSelect>\r\n\r\n                                </div>\r\n                                <div class="col">\r\n                                  \r\n                                      <div\r\n                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                      >\r\n                                        <div class="form-group">\r\n                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                          <div\r\n                                            class="pull-left"\r\n                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                          >\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>In-Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                        (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>All\r\n                                                    </label>\r\n                                                </div>\r\n                                                    <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                      <label style="width: auto !important;margin-top: 3px;">\r\n                                                        \x3c!--  --\x3e\r\n                                                        <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                         (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                          />\r\n                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                      Show  Deleted List \r\n                                                      </label>\r\n                                                    </div>\r\n                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="row">\r\n                                  <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download All Data"\r\n                                          pButton icon="fa-download" iconPos="left"\r\n                                        label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Selected"\r\n                                          pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Selection Only"\r\n                                        (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload"\r\n                                            (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                            accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" matTooltip="Download Sample file"\r\n                                            (click)="sampleExcelDownload()">Sample File\r\n                                            Download</button>\r\n                                    </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                            (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle data-toggle="modal" data-target="#view"\r\n                                        (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                      \r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}"\r\n                                            (onChange)="changeStatus(rowData)" matTooltip="Update" matTooltipPosition="above"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                                (click)="viewSelectedRow(rowData)" matTooltip="View" matTooltipPosition="above" data-target="#view"\r\n                                                data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                       \r\n                                        <span data-target="#addJobtitles" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="editJobTitle(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                        (click)="editJobTitle(rowData)"\r\n                                            data-target="#addJobtitles" data-toggle="modal"\r\n                                             matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                       \r\n                                        <span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete"\r\n                                         matTooltipPosition="above"\r\n                                            data-target="#delete" data-toggle="modal" (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above"\r\n                                            data-target="#contentHist" data-toggle="modal"\r\n                                            (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="jobTitleData && jobTitleData.length == 0 || jobTitleData && jobTitleData.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                \x3c!-- <p>{{uomData.length}}</p> --\x3e\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText\r\n                                    type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText\r\n                                    type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>Job Title\r\n            <span class="new-label">{{restorerecord.description}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>Job Title\r\n                    <span class="new-label">{{selectedRowforDelete.description}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #addJobtitles id="addJobtitles" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="resetJobTitleForm()" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Job Titles </h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #jobtitle="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Job Titles <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="description" (ngModelChange)="getmemo()" [(ngModel)]="addNewJobTitle.description"\r\n                                    (onSelect)="selectedJobTitle($event)" name="description"\r\n                                    (onKeyUp)="checkJobTitleExists(\'description\', $event.target.value)"\r\n                                    [suggestions]="jobTitleList" (completeMethod)="filterJobTitles($event)"\r\n                                    [size]="30" [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForJobTitle" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="memo" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" (ngModelChange)="getmemo()" #memo="ngModel" id="memo" name="memo"\r\n                                    [(ngModel)]="addNewJobTitle.memo" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" (ngModelChange)="getmemo()" name="isActive" [(ngModel)]="addNewJobTitle.isActive">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal"\r\n                    [disabled]="jobtitle.invalid || disableSaveForJobTitle || disableSaveForEdit" (click)="saveJobTitle();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="resetJobTitleForm()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Jobtitles Name</th> >\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n                                <td>{{ext.description}}</td>\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Jobtitles</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Jobtitles Name</th>\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n\r\n\r\n\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n                          \r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Job Title Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Job Title: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">IsActive</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},P8CL:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!--<h4 class="page-heading clr-green"> Labor And Overhead Cost Setup </h4>--\x3e\r\n                <p-table #dt [value]="allLaberOverheadCost" [metaKeySelection]="true" [rows]="10" [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" selectionMode="multiple" [(selection)]="selectedColumn" [resizableColumns]="true" [reorderableColumns]="true">\r\n                    <ng-template pTemplate="caption">\r\n                        <div style="text-align: right">\r\n                            <p-multiSelect [options]="cols" [(ngModel)]="selectedColumns" optionLabel="header"\r\n                                           selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n\r\n                            <div class="inner-addon right-addon w200 inline-block">\r\n                                <i class="fa fa-search"></i>\r\n                                <input type="text" pInputText size="50" class="form-control ui-autocomplete-input" (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter">\r\n                            </div>\r\n                            <button type="button" pButton icon="fa-download" iconPos="left" label="All Data" (click)="dt.exportCSV()"></button>\r\n                            <button type="button" pButton icon="fa-download" iconPos="left" label="Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                            <a (click)="open(contentEdit)" matTooltip="Add Labor And Overhead Cost Setup" class="btn btn-success nobg"><span><i class="fa fa-plus"></i></span></a>\r\n                            <div class="excel-upload">\r\n                                <input type="file" name="upload[]" id="upload" class="uploaddoc upload-file" data-multiple-caption="{count} files selected" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet">\r\n                                <label for="upload">\r\n                                    <span matTooltip="Upload Data (Excel)"><i class="fa fa-upload"></i></span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate="header" let-columns>\r\n                        <tr>\r\n                            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                {{col.header}}\r\n                                <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                            </th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                        <tr [pSelectableRow]="rowData">\r\n                            <td *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                {{col.field == \'createdDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\'):rowData[col.field] && col.field == \'updatedDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\'):rowData[col.field]}}\r\n                            </td>\r\n                            <td>\r\n                                <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                <button class="btn-edit" mat-icon-button (click)="openEdit(contentEdit,rowData)" matTooltip="edit">\r\n                                    <mat-icon>edit</mat-icon>\r\n                                </button>\r\n                                <button class="btn-delete" mat-icon-button matTooltip="delete" (click)="openDelete(content,rowData)">\r\n                                    <mat-icon color="warn">delete</mat-icon>\r\n                                </button>\r\n                                <button class="btn-history" mat-icon-button matTooltip="history" (click)="showAuditPopup(auditContent,rowData.laborOverloadCostId)">\r\n                                    <mat-icon color="green">history</mat-icon>\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #content let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="deleteItemAndCloseModel()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title" *ngIf="isEditMode">Edit Labor And Overhead Cost Setup </h4>\r\n        <h4 class="modal-title" *ngIf="!isEditMode">Add  Labor And Overhead Cost Setup</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="x_content">\r\n\r\n    </div>\r\n    <div class="clear"></div>\r\n    <div class="col-sm-12">\r\n        <div class="col-sm-7">\r\n            <label style="background:#dadada; width:450px;text-align: left;margin-top: 30px;">\r\n                <h6>Direct Labor (Technician/Mechanic)</h6>\r\n            </label><br />\r\n            <p style="color:red ; float:left;margin-top: 20px;">What Labor Rate to use on Work Orders?</p><br />\r\n            <div class="clear"></div>\r\n\r\n            <label style="text-align:right; width:410px; float:left">USE INDIVIDUAL TECHNICIAN/MECHANIC LABOR RATE</label>\r\n\r\n            <input type="radio" class="md-radiobtn" name="mode" [value]="true" id="useindividual" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceLaborOverheadCost.useIndTechLaborRate" (click)="enableinputs(\'UseIndTechLaborRate\')">\r\n\r\n            <br />\r\n            <label style="text-align:right; width:410px; float:left">USE AVERAGE RATE OF ALL TECHNICIAN/MECHANIC</label>\r\n            <input class=\u201dmd-radiobtn\u201d type="radio" name="mode" [value]="false" id="userateofalltechnican" (click)="enableinputs(\'UseAvgRateOfAllTech\')" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceLaborOverheadCost.useIndTechLaborRate">\r\n            <div style="text-align:right;display:inline-block"><input type="text" style="width:85px" *ngIf="!sourceLaborOverheadCost.useIndTechLaborRate" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceLaborOverheadCost.averagerateofalltechnicianmechanic" /></div>\r\n            <br />\r\n            <div class="col-sm-12">\r\n                <p style="color:red ; float:left;margin-top: 20px;">How to Apply Hours to Work Orders?</p><br />\r\n                <div class="clear"></div>\r\n\r\n                <label style="text-align:right; width:410px; float:left">ASSIGN HOURS BY SPECIFIC ACTIONS</label>\r\n                <input type="radio" name="optional" [value]="true" id="asignhours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceLaborOverheadCost.assignHoursBySpecificAction" (click)="applyHours(\'AssignHoursBySpecificAction\')">\r\n\r\n                <br />\r\n\r\n                <label style="text-align:right; width:410px; float:left">ASSIGN TOTAL HOURS TO WORK ORDER</label>\r\n                <input type="radio" name="optional" [value]="false" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceLaborOverheadCost.assignHoursBySpecificAction" id="useavg" (click)="applyHours(\'AssignTotalHoursToWO\')">\r\n\r\n                <br />\r\n                <button type="submit" class="btn btn-success" style="float:left;margin-bottom:20px" [disabled]="disableSave " (click)="editItemAndCloseModel()">Submit</button>\r\n            </div>\r\n\r\n        </div>\r\n        <div class="col-sm-5">\r\n\r\n            <label style="background:#dadada; width:350px;text-align: left;margin-top: 30px;padding:">\r\n                <h6>\r\n                    Overhead Burden Rate\r\n                </h6>\r\n            </label><br /><div class="form-group col-sm-12">\r\n                <label class="control-label col-sm-6" style="text-align:right; width:260px; float:left;">AS A % OF TECHNICIAN/MECHANIC HOURLY RATE</label>\r\n                <input type="radio" [value]="true" name="optional1" id="asa%oftech" (click)="showinputs(\'AsPercentOfTechHourlyRate\')">\r\n                <div style="text-align:right;display:inline-block" *ngIf="showAsPercentOfTechHourlyRate">\r\n                    <select class="overhead-block1 w90" style="width:85px" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceLaborOverheadCost.asPercentOFTECHNICIANMECHANICHOURLYRATE">\r\n                        <option>1%</option>\r\n                        <option>2%</option>\r\n                        <option>3%</option>\r\n                        <option>4%</option>\r\n                        <option>5%</option>\r\n                        <option>6%</option>\r\n                        <option>7%</option>\r\n                        <option>8%</option>\r\n                        <option>9%</option>\r\n                        <option>10%</option>\r\n                    </select>\r\n\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <label style="text-align:right; width:200px; float:left">FLAT AMOUNT PER HOUR</label>\r\n            <input type="radio" name="optional1" [value]="true" id="userateofalltechnican" (click)="showinputs(\'FlatAmtPerHour\')" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceLaborOverheadCost.flatAmtPerHour"><br />\r\n            <div style="text-align:right"><input type="text" style="width:85px;display: inline-block;" size="30" *ngIf="sourceLaborOverheadCost.flatAmtPerHour" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceLaborOverheadCost.flatamountperhour" /></div>\r\n            <label style="text-align:right; width:200px; float:left">FLAT AMOUNT PER WORK ORDER</label>\r\n            <input type="radio" name="optional1" [value]="false" id="flatamountperwork" (click)="showinputs(\'FlatAmtPerWO\')" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceLaborOverheadCost.flatAmtPerHour">\r\n            <div style="text-align:right;display:inline-block">\r\n                <input type="text" size="30" style="width:85px" *ngIf="!sourceLaborOverheadCost.flatAmtPerHour" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceLaborOverheadCost.flatamountperworkorder" />\r\n            </div>\r\n            <br />\r\n\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n    <div class="clear"></div>\r\n\r\n    <div class="pull-right" style="float:right"> \xa9 2018 <a href="#">PAS</a> </div>\r\n\r\n\r\n\r\n\r\n\r\n'},PVK1:function(t,e,a){"use strict";a.r(e),e.default='\r\n<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Charges</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltipPosition="above" matTooltip="Add Charge" \r\n                             tooltipPosition="right" (click)="resetChargeForm()"\r\n                              data-target="#addCharge" data-toggle="modal">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Charges</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="resetChargeForm()"\r\n                              data-target="#addCharge" data-toggle="modal"\r\n                                  >\r\n                                  Add Charge\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                      \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="chargeData" \r\n                        [first]="0" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true" \r\n                        [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [metaKeySelection]="true"\r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple"\r\n                        [metaKeySelection]="true" \r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [scrollable]="true" \r\n                        [totalRecords]="totalRecords" \r\n                        scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="chargeHeaders" optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  \r\n                                                      <div\r\n                                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                                      >\r\n                                                        <div class="form-group">\r\n                                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                          <div\r\n                                                            class="pull-left"\r\n                                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                                          >\r\n                                                          <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>In-Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>All\r\n                                                        </label>\r\n                                                    </div>\r\n                                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                          <label style="width: auto !important;margin-top: 3px;">\r\n                                                            \x3c!--  --\x3e\r\n                                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                             (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                              />\r\n                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                          Show  Deleted List \r\n                                                          </label>\r\n                                                        </div>\r\n                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n    \r\n                                    </div>\r\n                                    <div class="row">\r\n                                        <div class="col">\r\n                                                   <button type="button" class="btn btn-primary new-table-button" matTooltipPosition="above"  style="padding: 5px 12px !important;" matTooltip="Download All Data" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltipPosition="above" matTooltip="Download Selected" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Selection Only"  style="padding: 5px 12px !important;" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" (click)="sampleExcelDownload()"  style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download Sample File" >Sample File Download</button>\r\n                                    </div>\r\n                                    </div>\r\n                                    </div>\r\n                                   \r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal" data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" matTooltip="View" matTooltipPosition="above"\r\n                                            (click)="viewSelectedRow(rowData)" data-target="#view" data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        \r\n                                        <span data-target="#addCharge" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="editCharge(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                        (click)="editCharge(rowData)" data-target="#addCharge" \r\n                                        data-toggle="modal" matTooltip="Edit" \r\n                                        matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button\r\n                                         matTooltip="Delete" matTooltipPosition="above" \r\n                                         data-target="#delete" data-toggle="modal" \r\n                                         (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History" \r\n                                        matTooltipPosition="above" data-target="#contentHist" data-toggle="modal" \r\n                                        (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n\t\t\t\t\t\t\t\t\t\t *ngIf="chargeData && chargeData.length == 0 || chargeData && chargeData.length ==null">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td [attr.colspan]="7" class="no-records-cstm">\r\n\t\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Charge</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Charge Type</th>\r\n                                <th>GL Account </th>\r\n\r\n                                \x3c!--<th>Quantity</th>--\x3e\r\n                                <th>Description</th>\r\n                               \r\n                                <th>Memo</th>\r\n                                <th>Is Active</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'chargeType\', audit.chargeType)  ? \'black\' : \'red\'  }">{{audit.chargeType}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'glAccountName\', audit.glAccountName)  ? \'black\' : \'red\'  }">{{audit.glAccountName}}</td>\r\n\r\n                                \x3c!--<td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'quantity\', audit.quantity)  ? \'black\' : \'red\'  }">{{audit.quantity}}</td>--\x3e\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n                               \r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Charge Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">ChargeType: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.chargeType}}</span>\r\n                    </p>\r\n                    \x3c!--<p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">quantity: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.quantity}}</span>\r\n                    </p>--\x3e\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">GL Account Name: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.glAccountName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header"> Description: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n                    \r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Is Active</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Charge:\r\n            <span class="new-label">{{restorerecord.description}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<div #addCharge id="addCharge" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Charge  </h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #charge="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">\r\n                                    ChargeType:\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="chargeType" \r\n                                [(ngModel)]="addNewCharge.chargeType"\r\n                                 (onSelect)="selectedCharge($event)"\r\n                                 (onKeyUp)="checkChargeExists($event.target.value)"\r\n                                  \r\n                                   name="chargeType"\r\n                                                [suggestions]="filteredChargeList" (completeMethod)="filterCharge($event)" [size]="30" [minLength]="1"\r\n                                                [dropdown]="true" class="p-autoComplete-ctsm" required (ngModelChange)="getmemo()">\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForChargeMsg"  style="color:red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="glAccountId" class="control-label">\r\n                                    GL Account:\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="accountName"\r\n                                 [(ngModel)]="addNewCharge.glAccountId"\r\n                                \r\n                                 name="glAccountId"\r\n                              [suggestions]="filteredGLAccountList"\r\n                         (completeMethod)="filterGLAccount($event)"\r\n                          [forceSelection]="true" [size]="30" [minLength]="1"\r\n                                     [dropdown]="true" \r\n                                      class="p-autoComplete-ctsm" required (ngModelChange)="getmemo()">\r\n\r\n                                </p-autoComplete>\r\n                                \x3c!-- <div *ngIf="disableSaveForGLMsg" \r\n                                 style="color:red">Already Exists</div> --\x3e\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">\r\n                                    Description:\r\n\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <input type="text" name="description" class="form-control" [(ngModel)]="addNewCharge.description" required (ngModelChange)="getmemo()">\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        \r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="memo" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription" [(ngModel)]="addNewCharge.memo" minlength="2" (ngModelChange)="getmemo()"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNewCharge.isActive" (ngModelChange)="getmemo()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" \r\n                [disabled]="charge.invalid ||disableSaveForChargeMsg ||  disableSaveForEdit" (click)="saveCharge();"> {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetChargeForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                    Charge:\r\n                    <span class="new-label">{{selectedRowforDelete.description}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConfirmation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConfirmation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n'},PWM1:function(t,e,a){"use strict";a.r(e),e.default=".control-label {\n  margin-top: 10px;\n  text-align: left;\n  width: 150px !important;\n  font-weight: 500;\n}\n\n.clr-red {\n  color: red;\n}\n\n.btn-line {\n  line-height: 0.44 !important;\n  border-radius: 0px 5px 5px 0px !important;\n}\n\n.ui-autocomplete-input {\n  border-radius: 5px 0px 0px 5px !important;\n}\n\n.col-row1 {\n  margin-left: 2px;\n}\n\n.new-margin {\n  margin-top: 10px;\n}\n\n.modal.editdisposaltype .modal-body div.form-group label, .modal.editdisposaltype label {\n  font-weight: normal;\n  width: 100%;\n  text-align: left;\n}\n\n.modal .modal-body.editdisposaltype label {\n  font-weight: normal !important;\n  width: 100% !important;\n  text-align: left;\n  margin-top: 0;\n}\n\n.modal .modal-body.editdisposaltype .form-group {\n  margin-bottom: 10px;\n}"},Q0zJ:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Lead Source</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" pTooltip="Add Lead Source" tooltipPosition="right"\r\n                                data-target="#add" data-toggle="modal" (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Lead Source</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal"\r\n                                     (click)="resetForm()"\r\n                                  >\r\n                                  Add Lead Source\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                      \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="originalData" [first]="0"\r\n                            [rows]="pageSize" [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[10,20,50,100]"\r\n                            [columns]="selectedColumns" selectionMode="multiple" (onPage)="changePage($event)"\r\n                            [resizableColumns]="true" [reorderableColumns]="true" [scrollable]="true"\r\n                            [totalRecords]="totalRecords" scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header"\r\n                                        [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                        (onChange)="columnsChanges()"></p-multiSelect>\r\n\r\n                                   \r\n                                    </div>\r\n                                    <div class="col">\r\n                                      \r\n                                          <div\r\n                                            style="width: 370px; float: right; padding-top: 3px;"\r\n                                          >\r\n                                            <div class="form-group">\r\n                                              \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                              <div\r\n                                                class="pull-left"\r\n                                                style="margin-top: 4px; margin-right: 15px;"\r\n                                              >\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>In-Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>All\r\n                                                        </label>\r\n                                                    </div>\r\n                                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                          <label style="width: auto !important;margin-top: 3px;">\r\n                                                            \x3c!--  --\x3e\r\n                                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                             (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                              />\r\n                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                          Show  Deleted List \r\n                                                          </label>\r\n                                                        </div>\r\n                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="row">\r\n                                      <div class="col">\r\n                                \r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download  Data" matTooltipPosition="above"\r\n                                         pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Selected" matTooltipPosition="above"\r\n                                         pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Selection Only"\r\n                                        (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload"\r\n                                            (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                            accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltipPosition="above"  style="padding: 5px 12px !important;" matTooltip="Sample File download" (click)="sampleExcelDownload()">Sample File\r\n                                            Download</button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                            (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle data-toggle="modal" data-target="#view"\r\n                                        (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" matTooltip="Update" matTooltipPosition="above" name="isActive{{rowIndex}}"\r\n                                            (onChange)="changeStatus(rowData)"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                                (click)="viewSelectedRow(rowData)" matTooltip="view" matTooltipPosition="above" data-target="#view"\r\n                                                data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                            data-target="#add" data-toggle="modal" matTooltip="Edit"\r\n                                             matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n                                       \r\n                                       \r\n                                        <span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete"\r\n                                         matTooltipPosition="above"\r\n                                            data-target="#delete" data-toggle="modal" (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above"\r\n                                            data-target="#contentHist" data-toggle="modal"\r\n                                            (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view">\r\n                                           <a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                             <tr>\r\n                               <td [attr.colspan]="7" class="no-records-cstm">\r\n                                  No records found\r\n                                </td>\r\n                            </tr>\r\n                          </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText\r\n                                    type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText\r\n                                    type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Lead Source:\r\n            <span class="new-label">{{restorerecord.description}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>LeadSource:\r\n                    <span class="new-label">{{selectedRowforDelete.leadSources}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Lead Source</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n                       \r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="leadSources" class="control-label">Lead Source\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="leadSources" [(ngModel)]="addNew.leadSources"\r\n                                    (onSelect)="selectedDescription($event)"\r\n                                    (onKeyUp)="checkGroupDescriptionExists(\'leadSources\',$event.target.value)"\r\n                                    name="leadSources" [suggestions]="descriptionList"\r\n                                    (completeMethod)="filterDescription($event)" [size]="30" [minLength]="1"\r\n                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForDescriptionMsg"\r\n                                style="color:red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Description\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                               <input type="text" class="form-control" name="description"\r\n                                [(ngModel)]="addNew.description" required (ngModelChange)="getChange()"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription"\r\n                                    [(ngModel)]="addNew.memo" minlength="2" (ngModelChange)="getChange()"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive" (ngModelChange)="getChange()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal"\r\n                    [disabled]="create.invalid  || disableSaveForDescription " (click)="save();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n\r\n                                <th>Lead Source</th>\r\n                                <th>Description</th>\r\n\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                <td>{{ext.leadSources}}</td>\r\n                                <td>{{ext.description}}</td>\r\n\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Lead Source</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Lead Source</th>     \r\n                                <th>Description</th>\r\n                                <th>Memo</th>\r\n                                <th>Is Active</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                               \r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'leadSource\', audit.leadSource)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.leadSource}}\r\n                                </td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.description}}</td>\r\n                                \r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.memo}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Lead Source Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Lead Source: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.leadSources}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Description: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n                   \r\n                    \x3c!-- <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header"> Standard: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.standard}}</span>\r\n                </p> --\x3e\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">IsActive</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},QSzF:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n\t<div class="right_col" role="main">\r\n\t\t<div class="x_panel">\r\n\t\t\t<div class="x_content">\r\n\t\t\t\t\x3c!--<nav aria-label="breadcrumb">\r\n\t\t\t\t\t<ol class="breadcrumb">\r\n\t\t\t\t\t\t<li class="breadcrumb-item"><a routerLink="/">Dashboard</a></li>\r\n\t\t\t\t\t\t<li class="breadcrumb-item active" aria-current="page">Financial Statement Mapping</li>\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</nav>--\x3e\r\n\t\t\t\t<h4 class="page-heading clr-green">Financial Statement Mapping</h4>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>'},QVMD:function(t,e,a){"use strict";a.r(e),e.default=".footer1 {\n  margin-right: 0px;\n}\n\n.new-label {\n  color: cadetblue;\n}\n\n.control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}"},"R+7W":function(t,e,a){"use strict";a.r(e),e.default="control-label {\n  margin-top: 10px;\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}\n\n.modal.editModal .modal-body div.form-group label, .modal.editModal label {\n  font-weight: normal;\n  width: 100%;\n  text-align: left;\n}"},RzBQ:function(t,e,a){"use strict";a.r(e),e.default=".new-label {\n  color: cadetblue;\n}\n\n.text-item {\n  width: 100%;\n  border-radius: 5px !important;\n  margin-left: 0px;\n}\n\n.control-label {\n  margin-top: 5px;\n  text-align: left;\n  width: 100% !important;\n}"},SSd5:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Work Scope</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" matTooltipPosition="above" \r\n                            matTooltip="Add Work Scope" tooltipPosition="right"\r\n                                data-target="#add" data-toggle="modal" (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Work Scope</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal"\r\n                                     (click)="resetForm()"\r\n                                  >\r\n                                  Add Work Scope\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                        \r\n                \r\n                        <p-table #dt \r\n                        class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" \r\n                        [first]="0"\r\n                            [rows]="pageSize" \r\n                            [paginator]="true" \r\n                            [pageLinks]="3" \r\n                            [rowsPerPageOptions]="[10,20,50,100]"\r\n                            [columns]="selectedColumns" \r\n                            selectionMode="multiple" \r\n                            [metaKeySelection]="true"\r\n                            (onPage)="changePage($event)"\r\n                            [resizableColumns]="true" \r\n                            [reorderableColumns]="true" \r\n                            [scrollable]="true"\r\n                            [totalRecords]="totalRecords" \r\n                            scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header"\r\n                                        [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                        (onChange)="columnsChanges()"></p-multiSelect>\r\n                                   \r\n                                   \r\n                                    </div>\r\n                                    <div class="col">\r\n                                      \r\n                                          <div\r\n                                            style="width: 370px; float: right; padding-top: 3px;"\r\n                                          >\r\n                                            <div class="form-group">\r\n                                              \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                              <div\r\n                                                class="pull-left"\r\n                                                style="margin-top: 4px; margin-right: 15px;"\r\n                                              >\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>In-Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>All\r\n                                                        </label>\r\n                                                    </div>\r\n                                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                          <label style="width: auto !important;margin-top: 3px;">\r\n                                                            \x3c!--  --\x3e\r\n                                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                             (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                              />\r\n                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                          Show  Deleted List \r\n                                                          </label>\r\n                                                        </div>\r\n                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="row">\r\n                                      <div class="col">\r\n                                        <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Selected"\r\n                                          pButton icon="fa-download" iconPos="left"\r\n                                        label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download All Data"\r\n                                          pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Selection Only"\r\n                                        (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload"\r\n                                            (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                            accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" matTooltip="Sample File download" (click)="sampleExcelDownload()">Sample File\r\n                                            Download</button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                            (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle data-toggle="modal" data-target="#view"\r\n                                        (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}"\r\n                                         matTooltip="Update" matTooltipPosition="above"\r\n                                            (onChange)="changeStatus(rowData)"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                                (click)="viewSelectedRow(rowData)" data-target="#view" matTooltip="View" matTooltipPosition="above"\r\n                                                data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        <span data-target="#add" data-toggle="modal" >\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                            data-target="#add" data-toggle="modal" matTooltip="Edit" \r\n                                            matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n                                        \r\n                                        <span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                        \r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete" \r\n                                        matTooltipPosition="above"\r\n                                            data-target="#delete" data-toggle="modal" (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-toggle="modal" data-target="#contentHist"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History" \r\n                                        matTooltipPosition="above"\r\n                                            data-target="#contentHist" data-toggle="modal"\r\n                                            (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;"  [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText\r\n                                    type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText\r\n                                    type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Work Scope Code:\r\n            <span class="new-label">{{restorerecord.workScopeCode}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>Work Scope Code:\r\n                    <span class="new-label">{{selectedRowforDelete.workScopeCode}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Workscope</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n                       \r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Work Scope Code\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="workScopeCode" [(ngModel)]="addNew.workScopeCode"\r\n                                    (onSelect)="selectedDescription($event)"\r\n                                    (onKeyUp)="checkGroupDescriptionExists(\'workScopeCode\', $event.target.value)"\r\n                                    name="workscopecode" [suggestions]="descriptionList"\r\n                                    (completeMethod)="filterDescription($event)" [size]="30" [minLength]="1"\r\n                                    [dropdown]="true" (ngModelChange)="getmemo()" class="p-autoComplete-ctsm" required>\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForDescription" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">\r\n                                    Work Scope Name\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                               <input type="text" class="form-control" (ngModelChange)="getmemo()" name="description" \r\n                               [(ngModel)]="addNew.description" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" (ngModelChange)="getChange()" name="memodescription"\r\n                                    [(ngModel)]="addNew.memo" (ngModelChange)="getmemo()" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" (ngModelChange)="getmemo()" name="isActive" [(ngModel)]="addNew.isActive">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal"\r\n                    [disabled]="create.invalid || disableSaveGroupId && disableSaveForDescription || disableSave || disableSaveForEdit" (click)="save();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n\r\n                                <th>Workscope code</th>\r\n                                <th>Workscope Description</th>\r\n\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                <td>{{ext.workScopeCode}}</td>\r\n                                <td>{{ext.description}}</td>\r\n\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Work Scope</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Workscope code</th>\r\n                                <th> Description</th>\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td\r\n                                    [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'workScopeCode\', audit.workScopeCode)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.workScopeCode}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.description}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.memo}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Work Scope Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Workscope Code: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.workScopeCode}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header"> Description: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n                    \x3c!-- <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header"> Standard: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.standard}}</span>\r\n                </p> --\x3e\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">IsActive</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n'},Tbva:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Default Message</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" \r\n                            matTooltipPosition="above" \r\n                            matTooltip="Add Default Message" \r\n                            tooltipPosition="right" (click)="open(contentEdit)">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Default Message</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="open(contentEdit)"\r\n                                  >\r\n                                  Add Default Message\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [totalRecords]="totalRecords" \r\n                        [value]="allDefaultMessageInfo" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true" \r\n                        [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[5,10,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple" \r\n                        [(selection)]="selectedColumn" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [scrollable]="true" \r\n                        scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [options]="cols" [maxSelectedLabels]="1"  [(ngModel)]="selectedColumns" optionLabel="header" selectedItemsLabel="{0} columns selected"\r\n                                        [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n                                   \r\n                                    </div>\r\n                                    <div class="col">\r\n                                      \r\n                                          <div\r\n                                            style="width: 370px; float: right; padding-top: 3px;"\r\n                                          >\r\n                                            <div class="form-group">\r\n                                              \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                              <div\r\n                                                class="pull-left"\r\n                                                style="margin-top: 4px; margin-right: 15px;"\r\n                                              >\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>In-Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>All\r\n                                                        </label>\r\n                                                    </div>\r\n                                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                          <label style="width: auto !important;margin-top: 3px;">\r\n                                                            \x3c!--  --\x3e\r\n                                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                             (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                              />\r\n                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                          Show  Deleted List \r\n                                                          </label>\r\n                                                        </div>\r\n                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="row">\r\n                                      <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltipPosition="above"  style="padding: 5px 12px !important;" matTooltip="Download Selected"   pButton icon="fa-download"\r\n                                        iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltipPosition="above"  style="padding: 5px 12px !important;" matTooltip="Download All Data"   pButton icon="fa-download"\r\n                                        iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" class="uploaddoc upload-file" data-multiple-caption="{count} files selected"\r\n                                            accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                    <col *ngFor="let col of columns" style="width:140px">\r\n                                </colgroup>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openEdits(rowData)">\r\n                                    <td *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                            [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                            [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                            [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" \r\n                                            (click)="openView(view,rowData)" matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                      \r\n                                        <span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openEdit(contentEdit,rowData)" \r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                      \r\n                                      \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                        (click)="openEdit(contentEdit,rowData)"\r\n                                        matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span><a class="btn nobg" \r\n                                            (click)="openDelete(content,rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete" \r\n                                        matTooltipPosition="above"\r\n                                        (click)="openDelete(content,rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span><a class="btn nobg" \r\n                                            (click)="showAuditPopup(auditContent,rowData.siteId)"\r\n                                             matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" (click)="showAuditPopup(auditContent,rowData.siteId)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view">\r\n                                           <a class="btn nobg" (click)="openView(view,rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="allDefaultMessageInfo && allDefaultMessageInfo.length == 0 || allDefaultMessageInfo && allDefaultMessageInfo.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            \r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n\t\t\t\t\t\t\t\t<input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            \r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Default Message:\r\n            <span class="new-label">{{restorerecord.defaultMessageCode}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Default Message Name:\r\n            <span class="new-label">{{defaultMessage_Name}}</span>\r\n        </strong>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" (click)="deleteItemAndCloseModel()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">&times;</button>\r\n        <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Default Message  </h4>\r\n\r\n        \x3c!-- <h4 class="modal-title" *ngIf="isEditMode">Edit Default Message</h4>\r\n        <h4 class="modal-title" *ngIf="!isEditMode">Add Default Message</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button> --\x3e\r\n    </div>\r\n    <div class="modal-body">\r\n        <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="editItemAndCloseModel()">\r\n            <div class="form-group">\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-5">\r\n                        <label for="defaultMessageCode" class="control-label">Default Message Code\r\n                            <span class="clr-red">*</span>\r\n                        </label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <p-autoComplete (onSelect)="partnmId($event)" (onKeyUp)=eventHandler($event) [(ngModel)]="messageName" [ngModelOptions]="{standalone: true}"\r\n                            [suggestions]="localCollection"  (ngModelChange)="getmemo()" (completeMethod)="filterMessageName($event)" [size]="30" [minLength]="1"\r\n                            [dropdown]="true" class="p-autoComplete-ctsm">\r\n                            <ng-template let-messageName pTemplate="item">\r\n                                <div class="ui-helper-clearfix">{{messageName}}</div>\r\n                            </ng-template>\r\n                        </p-autoComplete>\r\n                        <div *ngIf="disableSave" class="clr-red">Already Exists</div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-5">\r\n                        <label for="description" class="control-label">Default Message Description\r\n                            <span class="clr-red">*</span>\r\n                        </label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <input type="text"  (ngModelChange)="getmemo()" name="description" class="form-control" required #description="ngModel" [(ngModel)]="sourceAction.description"\r\n                            minlength="2">\r\n                    </div>\r\n                </div>\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-5">\r\n                        <label for="memo" class="control-label">Memo</label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <textarea #memo="ngModel"  (ngModelChange)="getmemo()" id="memo" name="memo" [(ngModel)]="sourceAction.memo"></textarea>\r\n                    </div>\r\n                </div>             \r\n            </div>\r\n            <div class="form-group">\r\n                <div class="col-sm-7">\r\n                    <div class="checkbox-cstm">\r\n                        <label>\r\n                            <input type="checkbox"  (ngModelChange)="getmemo()" name="isActive" #isActive="ngModel" checked id="isActive" [(ngModel)]="sourceAction.isActive">\r\n                            <span class="cr">\r\n                                <i class="cr-icon pi pi-check"></i>\r\n                            </span>\r\n                            Active\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="clear"></div>\r\n            <div class="modal-footer">\r\n\r\n                <button class="btn btn-primary" [disabled]="!userForm.valid || disableSave || disableSaveForEdit">{{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #contentHist let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n\r\n        <h4 class="modal-title">History of Default Message</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n\r\n\r\n    </div>\r\n    <div class="modal-body">\r\n\r\n        <div class="table-responsive">\r\n            <table class="table table-bordered">\r\n                <thead>\r\n                    <tr>\r\n                        <th>DMID</th>\r\n                        <th>DefaultMessage Code</th>\r\n                        <th>Previous Value</th>\r\n                        <th>New Value</th>\r\n                        <th>Last Updated By</th>\r\n                        <th>Last Updated Time</th>\r\n                    </tr>\r\n                </thead>\r\n                <tr *ngFor="let audit of auditHisory">\r\n                    <td>{{audit.auditHistoryId}}</td>\r\n                    <td>{{audit.columnName}}</td>\r\n                    <td>{{audit.previousValue}}</td>\r\n                    <td>{{audit.newValue}}</td>\r\n                    <td>{{audit.updatedBy}}</td>\r\n                    <td>{{audit.updatedDate}}</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #view class="modal fade " id="view" role="dialog">\r\n\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n            <h4 class="modal-title">Default Message Details</h4>\r\n        </div>\r\n        <div class="modal-body viewform">\r\n            <div class="col-sm-12">\r\n                <p>\r\n                    <span class="label">\r\n                        <b>DefaultMessage Name: </b>\r\n                    </span>\r\n                    <span class="value">{{ defaultMessage_Name}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Description: </b>\r\n                    </span>\r\n                    <span class="value">{{ description}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Memo: </b>\r\n                    </span>\r\n                    <span class="value">{{memo}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Created By: </b>\r\n                    </span>\r\n                    <span class="value">{{createdBy}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Created Date: </b>\r\n                    </span>\r\n                    <span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Updated By: </b>\r\n                    </span>\r\n                    <span class="value">{{updatedBy}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Updated Date: </b>\r\n                    </span>\r\n                    <span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n            </div>\r\n            <div class="clear"></div>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>'},TtaW:function(t,e,a){"use strict";a.r(e),e.default=".x_panel {\n  border: none;\n}"},UUf1:function(t,e,a){"use strict";a.r(e),e.default=".control-label {\n  margin-top: 10px;\n  text-align: left;\n  width: 150px !important;\n  font-weight: 500;\n}\n\n.clr-red {\n  color: red;\n}\n\n.btn-line {\n  line-height: 0.44 !important;\n  border-radius: 0px 5px 5px 0px !important;\n}\n\n.ui-autocomplete-input {\n  border-radius: 5px 0px 0px 5px !important;\n}\n\n.col-row1 {\n  margin-left: 2px;\n}\n\n.modal.editModal .modal-body div.form-group label, .modal.editModal label {\n  font-weight: normal;\n  width: 100%;\n  text-align: left;\n}"},UdSA:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel" >\r\n            <div class="x_content">\r\n                \x3c!--<nav aria-label="breadcrumb">\r\n                    <ol class="breadcrumb">\r\n                        <li class="breadcrumb-item"><a routerLink="/">Dashboard</a></li>\r\n                        <li class="breadcrumb-item active" aria-current="page" matTooltip="Add Document">Documents</li>\r\n                    </ol>\r\n                </nav>--\x3e\r\n\r\n\r\n                \x3c!-- <div class="pheading">\r\n                    <h4 class="page-heading clr-green">Documents</h4>\r\n                </div>\r\n                <a (click)="open(contentEdit)" matTooltip="Add Document" class="btn btn-success nobg"><span><i class="fa fa-plus"></i></span></a> --\x3e\r\n\r\n                <div class="card new-card">\r\n                    <div class="card-header bg-primary new-card-header">\r\n                      <div class="row">\r\n                        <div class="col">\r\n                          <h4 class="new-card-heading">Documents</h4>\r\n                        </div>\r\n                        <div>\r\n                          <button\r\n                            type="button"\r\n                            class="btn-sm new-btn-primary"\r\n                            (click)="open(contentEdit)"\r\n                          >\r\n                            Add Document\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class="card-body new-card-body">\r\n           \r\n                <div class="clear"></div>\r\n                <p-table #dt \r\n                         [value]="documentPagination" [rows]="5"\r\n                         [lazy]="true" (onLazyLoad)="loadDocument($event)" [totalRecords]="totalRecords" [loading]="loading"\r\n                         [metaKeySelection]="true" [paginator]="true"\r\n                         [pageLinks]="3" [rowsPerPageOptions]="[5,10,20,30]" [columns]="selectedColumns"\r\n                         selectionMode="multiple" [(selection)]="selectedColumn" [resizableColumns]="true" [reorderableColumns]="true">\r\n                    <ng-template pTemplate="caption">\r\n                        <div class="row">\r\n                            <div class="col">\r\n                            <p-multiSelect [options]="cols" [(ngModel)]="selectedColumns" optionLabel="header"\r\n                                           selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n                                        </div>\r\n                                        <div class="col">\r\n                                          <div\r\n                                            style="width: auto !important; float: right;"\r\n                                            class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                                          >\r\n                                <i class="fa fa-search"></i>\r\n                                <input type="text" pInputText size="50" class="form-control" (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter">\r\n                            </div>\r\n                <span class="help-icon" (click)="openHelpText(helpText)" data-original-title="Help" data-toggle="tooltip"><i class="fa fa-info" data-toggle="modal" data-target="#help-popup"></i></span>\r\n\r\n                        </div>\r\n\r\n                      </div>\r\n                      <div class="row">\r\n                        <div class="col">\r\n                            <button type="button" class="btn btn-primary new-table-button" pButton icon="fa-download" iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                            <button type="button" class="btn btn-primary new-table-button" pButton icon="fa-download" iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                           \r\n                        </div>\r\n\r\n                        </div>\r\n                    </ng-template>\r\n\r\n                    <ng-template pTemplate="header" let-columns>\r\n                        <tr>\r\n                            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                {{col.header}}\r\n                                <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                            </th>\r\n                            <th style="width:150px"></th>\r\n                        </tr>\r\n                        <tr>\r\n                            <th *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                <input style="width:100%;" pInputText type="text" (keydown.enter)="inputFiledFilter($event.target.value, col.field, col.filterMatchMode)">\r\n                            </th>\r\n                            <th style="width:150px"></th>\r\n                        </tr>\r\n                    </ng-template>\r\n\r\n                  \r\n                    <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                        <tr [pSelectableRow]="rowData" class="ui-resizable-column" pReorderableRowHandle>\r\n                            <td>{{rowData.documentCode}}</td>\r\n                            <td>{{rowData.description}}</td>\r\n                            \x3c!--<td>{{rowData.memo}}</td>--\x3e\r\n                            <td><p-checkbox [(ngModel)]="rowData[\'customer\']" binary="true" [disabled]="true"></p-checkbox></td>\r\n                            <td><p-checkbox [(ngModel)]="rowData[\'itemMaster\']" binary="true" [disabled]="true"></p-checkbox></td>\r\n                            <td><p-checkbox [(ngModel)]="rowData[\'purchaseOrder\']" binary="true" [disabled]="true"></p-checkbox></td>\r\n                            <td><p-checkbox [(ngModel)]="rowData[\'repairOrder\']" binary="true" [disabled]="true"></p-checkbox></td>\r\n                            <td><p-checkbox [(ngModel)]="rowData[\'sl\']" binary="true" [disabled]="true"></p-checkbox></td>\r\n                            <td><p-checkbox [(ngModel)]="rowData[\'salesOrder\']" binary="true" [disabled]="true"></p-checkbox></td>\r\n                            <td><p-checkbox [(ngModel)]="rowData[\'workOrder\']" binary="true" [disabled]="true"></p-checkbox></td>\r\n                            <td><p-checkbox [(ngModel)]="rowData[\'vendor\']" binary="true" [disabled]="true"></p-checkbox></td>\r\n                            \r\n                            <td>\r\n                                <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                <span data-toggle="modal" data-target="#view"> <a class="btn btn-info boxed-float-btn nobg" \r\n                                    data-toggle="tooltip" (click)="openView(view,rowData)" matTooltip="View" matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                               \r\n                                    <span>\r\n                                        <a class="btn nobg" \r\n                                        (click)="openEdit(contentEdit,rowData)" \r\n                                        matTooltip="Edit" \r\n                                        matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                        </i></a> </span>\r\n                               \r\n                                    \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                    (click)="openEdit(contentEdit,rowData)" matTooltip="edit"\r\n                                     matTooltipPosition="above">\r\n                                    <mat-icon>edit</mat-icon>\r\n                                </button> --\x3e\r\n\r\n                               \r\n                                <span><a class="btn nobg" \r\n                                    (click)="openDelete(content,rowData)"\r\n                                    matTooltip="Delete"  matTooltipPosition="above">\r\n                                    <i class="fa fa-trash"></i></a> </span>\r\n                               \r\n                               \r\n                               \r\n                                \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="delete"\r\n                                 matTooltipPosition="above" (click)="openDelete(content,rowData)">\r\n                                    <mat-icon color="warn">delete</mat-icon>\r\n                                </button> --\x3e\r\n\r\n                               \r\n\r\n                                <span (click)="showAuditPopup(auditContent,rowData.documentId)"\r\n                                 matTooltip="History" data-toggle="modal" data-target="#history">\r\n                                    <a data-toggle="tooltip" title="" class="btn btn-success nobg" \r\n                                    data-original-title="History">\r\n                                        <i class="fa fa-history"></i>\r\n                                    </a>\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                        <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                            <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate="emptymessage" let-columns\r\n                    *ngIf="documentPagination && documentPagination.length == 0 || documentPagination && documentPagination.length ==null">\r\n           <tr>\r\n               <td [attr.colspan]="7" class="no-records-cstm">\r\n                   No records found\r\n               </td>\r\n           </tr>\r\n       </ng-template>\r\n                    \r\n                    <ng-template pTemplate="summary" id="footer">\r\n                        <label id="footer" class="footer">Total:</label>\r\n                        <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                        <label id="footer" class="footer1">Pages Count:</label>\r\n                        <input style="width: 5%;" [(ngModel)]="totelPages" [disabled]="true" pInputText type="text" />\r\n                    \r\n                    </ng-template>\r\n                </p-table>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="deleteItemAndCloseModel()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title" *ngIf="isEditMode">Edit Document</h4>\r\n        <h4 class="modal-title" *ngIf="!isEditMode">Add Document</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n\t\t<form #userForm="ngForm" class="form-horizontal" (ngSubmit)="editItemAndCloseModel()">\r\n\t\t\t<div class="form-group">\r\n\t\t\t\t<label for="netDays" class="control-label">Document code</label>\r\n\t\t\t\t<div class="inner-addon right-addon inline-block">\r\n\t\t\t\t\t<p-autoComplete [(ngModel)]="documentName" [ngModelOptions]="{standalone: true}" (onSelect)="documentId($event)" (onKeyUp)="eventHandler($event)" [suggestions]="localCollection" (completeMethod)="filterDocuments($event)" [size]="30"\r\n\t\t\t\t\t\t\t\t\t[minLength]="1" [dropdown]="true">\r\n\t\t\t\t\t\t<ng-template let-documentName pTemplate="item">\r\n\t\t\t\t\t\t\t<div class="ui-helper-clearfix">{{documentName}}</div>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</p-autoComplete>\r\n\t\t\t\t\t<div *ngIf="disableSave" class="clr-red">Already Exists</div>\r\n\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t<label for="description" class="control-label">Document Name</label>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input type="text" name="description" class="form-control" required #description="ngModel" [(ngModel)]="sourceAction.description" minlength="2">\r\n\t\t\t\t\t\t<div *ngIf="description.dirty && description.errors?.required && description.errors" class="invalid-form-error-message">\r\n\t\t\t\t\t\t\tDescription is required.\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div *ngIf="description.dirty && description.errors?.minlength && description.errors" class="invalid-form-error-message">\r\n\t\t\t\t\t\t\tDescription is must be at least 2 characters long.\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="form-group label-mright25">\r\n\t\t\t\t\t<label class="form-check-label" for="customer">\r\n\t\t\t\t\t\t<input type="checkbox" name="customer" #customer="ngModel" class="form-check-input" checked id="customer" [(ngModel)]="sourceAction.Customer"> Customer\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label class="form-check-label" for="itemMaster">\r\n\t\t\t\t\t\t<input type="checkbox" name="itemMaster" #itemMaster="ngModel" class="form-check-input" checked id="itemMaster" [(ngModel)]="sourceAction.itemmaster"> Item Master\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label class="form-check-label" for="purchaseOrder">\r\n\t\t\t\t\t\t<input type="checkbox" name="purchaseOrder" #purchaseOrder="ngModel" class="form-check-input" checked id="purchaseOrder" [(ngModel)]="sourceAction.purchaseOrder"> Purchase Order\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label class="form-check-label" for="sl">\r\n\t\t\t\t\t\t<input type="checkbox" name="sl" #sl="ngModel" class="form-check-input" checked id="sl" [(ngModel)]="sourceAction.SL"> SL\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<label class="form-check-label" for="salesOrder">\r\n\t\t\t\t\t\t<input type="checkbox" name="salesOrder" #salesOrder="ngModel" class="form-check-input" checked id="salesOrder" [(ngModel)]="sourceAction.SalesOrder"> Sales Order\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label class="form-check-label" for="workOrder">\r\n\t\t\t\t\t\t<input type="checkbox" name="workorder" #workOrder="ngModel" class="form-check-input" checked id="workOrder" [(ngModel)]="sourceAction.WorkOrder"> Work Order\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label class="form-check-label" for="repairOrder">\r\n\t\t\t\t\t\t<input type="checkbox" name="repairOrder" #repairOrder="ngModel" class="form-check-input" checked id="repairOrder" [(ngModel)]="sourceAction.RepairOrder"> Repair Order\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label class="form-check-label" for="vendor">\r\n\t\t\t\t\t\t<input type="checkbox" name="vendor" #vendor="ngModel" class="form-check-input" checked id="vendor" [(ngModel)]="sourceAction.Vendor"> Vendor\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\r\n\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t<label for="memo" class="control-label">Documents</label>\r\n\t\t\t\t\t<div class="control-data">\r\n\t\t\t\t\t\t<input type="file">\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t<div class="col-sm-6">\r\n\t\t\t\t\t\t<label class="form-check-label" for="isActive">\r\n\t\t\t\t\t\t\t<input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input" checked id="isActive" [(ngModel)]="sourceAction.isActive"> Active\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t<div class="modal-footer">\r\n\t\t\t\t\t<button class="btn btn-success" [disabled]="disableSave">Submit</button>\r\n\t\t\t\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n\t\t\t\t</div>\r\n        </form>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #contentHist let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n\r\n        <h4 class="modal-title">History of Documents</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n\r\n\r\n    </div>\r\n    <div class="modal-body">\r\n\r\n        <div class="table-responsive">\r\n            <table class="table table-bordered">\r\n                <thead>\r\n                    <tr>\r\n                        <th>DMID</th>\r\n                        <th>Description</th>\r\n                        <th>Previous Value</th>\r\n                        <th>New Value</th>\r\n                        <th>Last Updated By</th>\r\n                        <th>Last Updated Time</th>\r\n                    </tr>\r\n                </thead>\r\n                <tr *ngFor="let audit of auditHisory">\r\n                    <td>{{audit.auditHistoryId}}</td>\r\n                    <td>{{audit.columnName}}</td>\r\n                    <td>{{audit.previousValue}}</td>\r\n                    <td>{{audit.newValue}}</td>\r\n                    <td>{{audit.updatedBy}}</td>\r\n                    <td>{{audit.updatedDate}}</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n            <h4 class="modal-title">Documents Details</h4>\r\n        </div>\r\n        <div class="modal-body viewform">\r\n            <div class="col-sm-6">\r\n                <p><span class="label"><b>Document Name: </b></span><span class="value">{{ document_Name}}</span></p>\r\n                <p><span class="label"><b>Description: </b></span><span class="value">{{ description}}</span></p>\r\n                <p><span class="label"><b>Cust: </b></span><span class="value">{{customer}}</span></p>\r\n                <p><span class="label"><b>Item Master: </b></span><span class="value">{{itemMaster}}</span></p>\r\n                <p><span class="label"><b>PO: </b></span><span class="value">{{purchaseOrder}}</span></p>\r\n                <p><span class="label"><b>RO: </b></span><span class="value">{{repairOrder}}</span></p>\r\n                <p><span class="label"><b>SL: </b></span><span class="value">{{sl}}</span></p>\r\n                <p><span class="label"><b>SO: </b></span><span class="value">{{salesOrder}}</span></p>\r\n                <p><span class="label"><b>WO: </b></span><span class="value">{{workOrder}}</span></p>\r\n                <p><span class="label"><b>Vendor: </b></span><span class="value">{{vendor}}</span></p>\r\n                <p><span class="label"><b>Created By: </b></span><span class="value">{{createdBy}}</span></p>\r\n                <p><span class="label"><b>Created Date: </b></span><span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span></p>\r\n                <p><span class="label"><b>Updated By: </b></span><span class="value">{{updatedBy}}</span></p>\r\n                <p><span class="label"><b>Updated Date: </b></span><span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span></p>\r\n            </div>\r\n\r\n            <div class="clear"></div>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-info" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p><b>Excell format to upload the Data - <a href="documents/action-table-format.xlsx" class="clr-red">Download</a></b></p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>\r\n'},Uitb:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Tag Type</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" pTooltip="Add Tag Type" tooltipPosition="right"\r\n                                data-target="#add" data-toggle="modal" (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Tag Type</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal" \r\n                                    (click)="resetForm()"\r\n                                  >\r\n                                  Add Tag Type\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <p-table #dt \r\n                        class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" \r\n                        [first]="0" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true" \r\n                        [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple" \r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [scrollable]="true" \r\n                        [totalRecords]="totalRecords" \r\n                        scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header"\r\n                                        [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                        (onChange)="columnsChanges()"></p-multiSelect>\r\n\r\n                                    </div>\r\n                                    <div class="col">\r\n                                      \r\n                                          <div\r\n                                            style="width: 370px; float: right; padding-top: 3px;"\r\n                                          >\r\n                                            <div class="form-group">\r\n                                              \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                              <div\r\n                                                class="pull-left"\r\n                                                style="margin-top: 4px; margin-right: 15px;"\r\n                                              >\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>In-Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>All\r\n                                                        </label>\r\n                                                    </div>\r\n                                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                          <label style="width: auto !important;margin-top: 3px;">\r\n                                                            \x3c!--  --\x3e\r\n                                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                             (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                              />\r\n                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                          Show  Deleted List \r\n                                                          </label>\r\n                                                        </div>\r\n                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="row">\r\n                                      <div class="col">                                \r\n                                   \r\n                                        <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download  Data" matTooltipPosition="above"\r\n                                         pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Selected" matTooltipPosition="above"\r\n                                         pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Selection Only"\r\n                                        (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload"\r\n                                            (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                            accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltipPosition="above"  style="padding: 5px 12px !important;" matTooltip="Sample File download" (click)="sampleExcelDownload()">Sample File\r\n                                            Download</button>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                            (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle data-toggle="modal" data-target="#view"\r\n                                        (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" matTooltip="Update" name="isActive{{rowIndex}}"\r\n        (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n\r\n                                       <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                               (click)="viewSelectedRow(rowData)" matTooltip="view" matTooltipPosition="above" data-target="#view"\r\n                                               data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                       \r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                                data-target="#add" data-toggle="modal" matTooltip="Edit"\r\n                                                 matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n                                        \r\n                                        <span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete"\r\n                                         matTooltipPosition="above"\r\n                                                data-target="#delete" data-toggle="modal" (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-toggle="modal" data-target="#contentHist"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above"\r\n                                                data-target="#contentHist" data-toggle="modal"\r\n                                                (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            \r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;"  [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText\r\n                                    type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText\r\n                                    type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>Tag Type:\r\n                    <span class="new-label">{{selectedRowforDelete.name}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Tag Type:\r\n            <span class="new-label">{{restorerecord.name}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Tag Type</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n                       \r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="name" class="control-label">Name\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="name" [(ngModel)]="addNew.name"\r\n                                    (onSelect)="selectedDescription($event)"\r\n                                    (onKeyUp)="checkGroupDescriptionExists($event.target.value)"\r\n                                    name="name" [suggestions]="descriptionList"\r\n                                    (completeMethod)="filterDescription($event)" [size]="30" [minLength]="1"\r\n                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForDescriptionmsg" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Description\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                               <input type="text" class="form-control" name="description" [(ngModel)]="addNew.description" required (ngModelChange)="getChange()"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription" (ngModelChange)="getChange()"\r\n                                    [(ngModel)]="addNew.memo" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive" (ngModelChange)="getChange()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal"\r\n                    [disabled]="create.invalid  || disableSaveForDescription " (click)="save();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.Name}}</td> --\x3e\r\n                                <td>{{ext.name}}</td>\r\n                                <td>{{ext.description}}</td>\r\n\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Tag Type</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n\r\n                                <th>Memo</th>\r\n                                <th>Is Active</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'name\', audit.name)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.name}}\r\n                                </td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.description}}</td>\r\n                                \r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.memo}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Tag Type Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Tag Type: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.name}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Description: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n                   \r\n                    \x3c!-- <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header"> Standard: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.standard}}</span>\r\n                </p> --\x3e\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">IsActive</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},V3Xh:function(t,e,a){"use strict";a.r(e),e.default=".footer1 {\n  margin-right: 0px;\n}\n\n.control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}"},VSYz:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Customer Classification</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#contentEdit" data-toggle="modal"\r\n                                     (click)="openAddClassficationDialog()"\r\n                                  >\r\n                                  Add Customer Classification\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <p-table #dt \r\n                        class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="allcustomerclassificationInfo" \r\n                        [first]="0" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true" \r\n                        [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple" \r\n                        [metaKeySelection]="true" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [scrollable]="true" \r\n                        [totalRecords]="totalRecords" \r\n                        scrollHeight="450px" \r\n                        [(selection)]="selectedColumn">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [options]="cols" [(ngModel)]="selectedColumns" optionLabel="header"\r\n                                                   selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns" style="float:left;"></p-multiSelect>\r\n\r\n                                </div>\r\n                                <div class="col">\r\n                                  \r\n                                      <div\r\n                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                      >\r\n                                        <div class="form-group">\r\n                                          <div\r\n                                            class="pull-left"\r\n                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                          >\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>In-Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                        (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>All\r\n                                                    </label>\r\n                                                </div>\r\n                                                    <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                      <label style="width: auto !important;margin-top: 3px;">\r\n                                                        \x3c!--  --\x3e\r\n                                                        <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                         (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                          />\r\n                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                      Show  Deleted List \r\n                                                      </label>\r\n                                                    </div>\r\n                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                        <button type="button" pButton icon="fa-download" class="btn btn-primary new-table-button" style="padding: 5px 12px !important;" iconPos="left" label="Export Data" matTooltipPosition="above" matTooltip="Download Data" (click)="dt.exportCSV()"></button>\r\n                                        <button type="button" pButton icon="fa-download" class="btn btn-primary new-table-button" style="padding: 5px 12px !important;" iconPos="left" label="Export Selection Only" matTooltipPosition="above" matTooltip="Download Selected Data" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                        <button type="button" pButton icon="fa-download" class="btn btn-primary new-table-button" style="padding: 5px 12px !important;" iconPos="left" \r\n                                                label="Download Sample File" matTooltipPosition="above" matTooltip="Download Sample File" (click)="sampleExcelDownload()"></button>\r\n                                        <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                            <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                                   accept=".xlsx, .xls, .csv">\r\n                                            <label for="upload">\r\n                                                <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                    <i class="fa fa-upload"></i>\r\n                                                </span>\r\n                                            </label>\r\n                                            &nbsp; &nbsp;\r\n\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th *ngFor="let col of columns" style="width:120px" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value,col.field,\'contains\')" />\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal" data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\'):rowData[col.field] && col.field == \'updatedDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\'):rowData[col.field]}}\r\n                                    </td>\r\n                                   \r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        \r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" (click)="viewSelectedRow(rowData)"\r\n                                             matTooltip="View" data-target="#view" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        <span data-target="#contentEdit" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="openEdit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                      \r\n                                        <span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="openDelete(content,rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal" ><a class="btn nobg" \r\n                                            (click)="showAuditPopup(rowData)" style="border: none; background: none;"\r\n                                             matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="allcustomerclassificationInfo && allcustomerclassificationInfo.length == 0 || allcustomerclassificationInfo && allcustomerclassificationInfo.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            \r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                    <label id="footer" class="footer1">Total:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                    <label id="footer" class="footer1">Pages Count:</label>\r\n                                    <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n             Classification Name:\r\n            <span class="new-label">{{restorerecord.description}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<ng-template #content let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n           Classification Name:\r\n            <span class="new-label">{{sourceAction.description}}</span>\r\n        </strong>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="deleteItemAndCloseModel()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<div #contentEdit id="contentEdit" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">&times;</button>\r\n                <h4 class="modal-title">{{isEditMode ? \'Edit\' : \'Add\' }} Customer Classification</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #ccForm="ngForm" class="form-horizontal" (ngSubmit)="editItemAndCloseModel()">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="name" class="control-label">Classification<span class="clr-red">*</span></label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="description" [(ngModel)]="sourceAction" (onSelect)="selectedClassification($event)" (onKeyUp)="checkIfClassificationExists(\'description\', $event.target.value)" name="description"\r\n                                                [suggestions]="localClassificationsCollection" (completeMethod)="filterclassifications($event)" [size]="30" [minLength]="1"\r\n                                                [dropdown]="true" class="p-autoComplete-ctsm" (ngModelChange)="getmemo()" required>\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSave" class="clr-red">Entry Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-4 text_editor_box" [innerHTML]="memo"\r\n                             style="width: 100%;">\r\n                            </div>\r\n                            <div class="col-sm-1">\r\n                                <i class="fa fa-info-circle fa-lg" data-toggle="modal"\r\n\t\t\t\t\t\t\t\t\t\tdata-target="#add-memo" matTooltipPosition="above"\r\n\t\t\t\t\t\t\t\t\t\tmatTooltip="Memo" (click)="onAddMemo()"></i>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <label class="form-check-label" for="isActive">\r\n                                <input type="checkbox" name="isActive" #ccIsActive="ngModel" \r\n                                class="form-check-input" (ngModelChange)="getmemo()" checked id="isActive" [(ngModel)]="isActive"> Active\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary"\r\n                 data-dismiss="modal" [disabled]="disableSave || disableSaveForEdit"\r\n                 (click)="editItemAndCloseModel()">{{isEditMode ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade aircraft-info-popup" id="add-memo" role="dialog" data-backdrop="static">\r\n\t<div class="modal-dialog modal-sm">\r\n\t\t<div class="modal-content">\r\n\t\t\t<div class="modal-header">\r\n\t\t\t\t<button type="button" class="close" (click)="dismissMemoModel()">&times;</button>\r\n\t\t\t\t<h4 class="modal-title">Edit</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                        <th style="color: #fff;">Memo</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n\t\t\t\t\t\t\t\t<p-editor [(ngModel)]="tempMemo"\r\n\t\t\t\t\t\t\t\t [style]="{\'height\':\'320px\'}"\r\n\t\t\t\t\t\t\t\t name="tempMemo" required></p-editor>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\t\t\t\t<div style="float:right">\r\n\t\t\t\t\t<button type="button" class="btn btn-primary" style="padding: 6px 12px !important;margin-top: 10px;"\r\n\t\t\t\t\t (click)="onSaveMemo()">Save</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" style="padding: 6px 12px !important;margin-top: 10px;"\r\n\t\t\t\t (click)="dismissMemoModel()">Close</button>\r\n\r\n                </div>\r\n            </div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Customer Classification</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive  rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Classification Name</th>\r\n                                <th>Memo</th>\r\n                                <th>Is Active</th>\r\n                                <th>Last Updated By</th>\r\n                                <th>Last Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n                <h4 class="modal-title">Customer Classification Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform">\r\n                <div class="col-sm-12">\r\n                    <p><span class="label"><b class="view-Header">Classification Name: </b></span><span class="value">{{viewRowData.description}}</span></p>\r\n                    <p><span class="label"><b class="view-Header">Memo: </b></span><span class="value">{{viewRowData.memo}}</span></p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Is Active:</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p><span class="label"><b class="view-Header">Created By: </b></span><span class="value">{{viewRowData.createdBy}}</span></p>\r\n                    <p><span class="label"><b class="view-Header">Created Date: </b></span><span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span></p>\r\n                    <p><span class="label"><b class="view-Header">Updated By: </b></span><span class="value">{{viewRowData.updatedBy}}</span></p>\r\n                    <p><span class="label"><b class="view-Header">Updated Date: </b></span><span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span></p>\r\n                </div>\r\n\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p><b>Excell format to upload the Data - <a href="documents/action-table-format.xlsx" class="clr-red">Download</a></b></p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>'},"Vy/o":function(t,e,a){"use strict";a.r(e),e.default=""},WE5w:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Aircraft Model</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltipPosition="above"\r\n                              matTooltip="Add Aircraft Model"\r\n                               tooltipPosition="right" \r\n                               data-target="#add" data-toggle="modal"\r\n                                (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Aircraft Model</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal"\r\n                                (click)="resetForm()"\r\n                                  >\r\n                                  Add Aircraft Model\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" [first]="0" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true"\r\n                        [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple"\r\n                        [metaKeySelection]="true" \r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [totalRecords]="totalRecords" \r\n                        scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header" [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}"\r\n                                                   style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n                                   \r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  \r\n                                                      <div\r\n                                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                                      >\r\n                                                        <div class="form-group">\r\n                                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                          <div\r\n                                                            class="pull-left"\r\n                                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                                          >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                    \x3c!--  --\x3e\r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                                   \r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download   Data"  style="padding: 5px 12px !important;" matTooltipPosition="above" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected"  style="padding: 5px 12px !important;" matTooltipPosition="above" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customAircraftModelExcelUpload($event)" class="uploaddoc upload-file" accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltip="Download Sample File"  style="padding: 5px 12px !important;" matTooltipPosition="above" (click)="sampleExcelDownload()">\r\n                                            Sample File Download\r\n                                        </button>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn \r\n                                    pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0">\r\n                                        Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                     pReorderableRowHandle data-toggle="modal"\r\n                                        data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" (click)="viewSelectedRow(rowData)"\r\n                                             matTooltip="view" data-target="#view" matTooltipPosition="above"\r\n                                               data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)" data-target="#add"\r\n                                         data-toggle="modal" matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span  data-target="#delete" data-toggle="modal" >\r\n                                            <a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button \r\n                                        matTooltip="Delete" matTooltipPosition="above"\r\n                                         data-target="#delete" \r\n                                        data-toggle="modal" (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button \r\n                                        matTooltip="History" matTooltipPosition="above" \r\n                                        data-target="#contentHist" data-toggle="modal"\r\n                                         (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="4" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                            \r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Aircraft Model:\r\n            <span class="new-label">{{restorerecord.description}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>Aircraft Model:\r\n                    <span class="new-label">{{selectedRowforDelete.modelName}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Aircraft Model</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Aircraft Type\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">                                \r\n                                <select name="aircraftType" [(ngModel)]="addNew.aircraftTypeId" #aircraftTypeId="ngModel" required (ngModelChange)="getChange()" (change)="aircraftManufacturerChange()">\r\n                                    <option>-- Select --</option>\r\n                                    <option *ngFor="let object of aircraftManufacturerList" [ngValue]="object.aircraftTypeId">{{object.description}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Aicraft Model\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="modelName" [(ngModel)]="addNew.modelName" (onSelect)="selectedDescription($event)" (onKeyUp)="checkGroupDescriptionExists(\'modelName\', $event.target.value)"\r\n                                    name="modelName" [suggestions]="descriptionList" (completeMethod)="filterDescription($event)"\r\n                                    [size]="30" [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required (ngModelChange)="getChange()">\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForDescription" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" (ngModelChange)="getChange()" name="memodescription" [(ngModel)]="addNew.memo" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive" (ngModelChange)="getChange()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" [disabled]="create.invalid || disableSaveForDescription ||disableSaveForAircraft "\r\n                    (click)="save();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n\r\n                                <th>Aircraft Manufacturer</th>\r\n                                <th>Aicraft Model</th>\r\n\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                <td>{{ext.description}}</td>\r\n                                <td>{{ext.modelName}}</td>\r\n\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Aircraft Model</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Aicraft Type</th>\r\n                                <th>Aircraft Model</th>\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.description}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'modelName\', audit.modelName)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.modelName}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.memo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Aircraft Model Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Aicraft Type: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.aircraftType}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Aircraft Model: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.modelName}}</span>\r\n                    </p>\r\n                    \x3c!-- <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header"> Standard: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.standard}}</span>\r\n                </p> --\x3e\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">IsActive</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},WLdk:function(t,e,a){"use strict";a.r(e),e.default=".new-label {\n  color: cadetblue;\n}\n\n.text-item {\n  width: 100%;\n  border-radius: 5px !important;\n  margin-left: 0px;\n}\n\n.control-label {\n  margin-top: 5px;\n  text-align: left;\n  width: 100% !important;\n}"},WjZq:function(t,e,a){"use strict";a.r(e),e.default=""},X30y:function(t,e,a){"use strict";a.r(e),e.default=".search-box {\n  flex-direction: column;\n  box-sizing: border-box;\n  display: flex;\n}\n\n.search-box .mat-form-field {\n  padding: 0 2em;\n}\n\n.new-label {\n  color: cadetblue;\n}\n\n.text-item {\n  width: 100%;\n  border-radius: 5px !important;\n  margin-left: 0px;\n}\n\n.x_panel {\n  border: none;\n}"},XlmF:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n\t<div class="right_col" role="main">\r\n\t\t<div class="x_panel">\r\n\t\t\t<div class="x_content">\r\n\t\t\t\t\x3c!-- <div class="card">\r\n\t\t\t\t\t<div class="card-body">\r\n\t\t\t\t\t\t<div class="inline-block display-flex">\r\n\t\t\t\t\t\t\t<h3 class="po-head lead">Warehouse</h3>\r\n\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t<a class="plusicon-cstm new-margin"\r\n\t\t\t\t\t\t\t matTooltip="Add Warehouse" matTooltipPosition="above"\r\n\t\t\t\t\t\t\t  (click)="open(contentEdit)">\r\n\t\t\t\t\t\t\t\t<i class="fa fa-plus-circle fa-lg"></i>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div> --\x3e\r\n\t\t\t\t\t\t<div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Warehouse</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n\t\t\t\t\t\t\t\t\t(click)="open(contentEdit)"\r\n                                  >\r\n\t\t\t\t\t\t\t\t  Add Warehouse\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<p-table #dt class="rpo-table-cstm rro-table-cstm"\r\n\t\t\t\t\t\t\t\t [totalRecords]="totalRecords"\r\n\t\t\t\t\t\t\t\t [value]="wareHousedata"\r\n\t\t\t\t\t\t\t\t [lazy]="true" (onLazyLoad)="loadAllWareHousesData($event)"\r\n\t\t\t\t\t\t\t\t [rows]="10"\r\n\t\t\t\t\t\t\t\t [paginator]="true"\r\n\t\t\t\t\t\t\t\t [pageLinks]="3"\r\n\t\t\t\t\t\t\t\t [rowsPerPageOptions]="[10,20,50,100]"\r\n\t\t\t\t\t\t\t\t [columns]="selectedColumns"\r\n\t\t\t\t\t\t\t\t selectionMode="multiple"\r\n\t\t\t\t\t\t\t\t [metaKeySelection]="true"\r\n\t\t\t\t\t\t\t\t [(selection)]="selectedColumn"\r\n\t\t\t\t\t\t\t\t [resizableColumns]="true"\r\n\t\t\t\t\t\t\t\t [reorderableColumns]="true"\r\n\t\t\t\t\t\t\t\t [scrollable]="true"\r\n\t\t\t\t\t\t\t\t scrollHeight="450px">\r\n\t\t\t\t\t\t\t<ng-template pTemplate="caption">\r\n\t\t\t\t\t\t\t\t<div class="row">\r\n                                    <div class="col">\r\n\t\t\t\t\t\t\t\t\t<p-multiSelect [options]="cols" [(ngModel)]="selectedColumns" optionLabel="header" selectedItemsLabel="{0} columns selected"\r\n\t\t\t\t\t\t\t\t\t\t\t\t   [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class="col">\r\n\t\t\t\t\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  <div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle="width: 370px; float: right; padding-top: 3px;"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <div\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass="pull-left"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle="margin-top: 4px; margin-right: 15px;"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>Active\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>In-Active\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>All\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="checkbox-cstm" style="margin-left: 0;">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  <label style="width: auto !important;margin-top: 3px;">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\x3c!--  --\x3e\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t (click)="getDeleteListByStatus($event.target.checked)"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  Show  Deleted List \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  </label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class="row">\r\n\t\t\t\t\t\t\t\t\t\t<div class="col">\r\n\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-primary new-table-button " matTooltip="Download Data" matTooltipPosition="above" pButton icon="fa-download"\r\n\t\t\t\t\t\t\t\t\t\t\ticonPos="left" label="Export  Data" style="padding: 5px 12px !important;" (click)="dt.exportCSV()"></button>\r\n\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-primary new-table-button " matTooltip="Download Selected" matTooltipPosition="above" pButton icon="fa-download"\r\n\t\t\t\t\t\t\t\t\t\t\ticonPos="left" label="Export Selection Only" style="padding: 5px 12px !important" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n\t\t\t\t\t\t\t\t\t<div class="excel-upload  excel-upload-cstm">\r\n\t\t\t\t\t\t\t\t\t\t<input type="file" name="upload[]" id="upload" class="uploaddoc upload-file" data-multiple-caption="{count} files selected"\r\n\t\t\t\t\t\t\t\t\t\t\t   accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"\r\n\t\t\t\t\t\t\t\t\t\t\t   (change)="bulkUpload($event)">\r\n\t\t\t\t\t\t\t\t\t\t<label for="upload">\r\n\t\t\t\t\t\t\t\t\t\t\t<span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-upload"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t&nbsp; &nbsp;\r\n\t\t\t\t\t\t\t\t\t\t<button class="btn btn-primary" style="padding: 5px 12px !important;" matTooltip="Download Sample file" matTooltipPosition="above" (click)="sampleExcelDownload()">Sample File Download</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\x3c!-- <ng-template pTemplate="colgroup" let-columns>\r\n\t\t\t\t\t\t\t\t<colgroup>\r\n\t\t\t\t\t\t\t\t\t<col *ngFor="let col of columns" style="width:140px">\r\n\t\t\t\t\t\t\t\t</colgroup>\r\n\t\t\t\t\t\t\t</ng-template> --\x3e\r\n\t\t\t\t\t\t\t<ng-template pTemplate="header" let-columns>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n\t\t\t\t\t\t\t\t\t\t{{col.header}}\r\n\t\t\t\t\t\t\t\t\t\t<p-sortIcon [field]="col.field"></p-sortIcon>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n\t\t\t\t\t\t\t\t\t\t<input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field, \'contains\')">\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th style="width:180px;position:sticky"></th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n\t\t\t\t\t\t\t\t<tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openEdits(rowData)">\r\n\t\t\t\t\t\t\t\t\t<td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n\t\t\t\t\t\t\t\t\t\t{{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n\t\t\t\t\t\t\t\t\t\t(rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td  class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf="currentDeletedstatus==false">\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<span data-toggle="modal" data-target="#view">\r\n\t\t\t\t\t\t\t\t\t\t\t<a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n\t\t\t\t\t\t\t\t\t\t\t   (click)="openView(view,rowData)" matTooltip="View" matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-eye"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t<a class="btn nobg"\r\n\t\t\t\t\t\t\t\t\t\t\t   (click)="openEdit(contentEdit,rowData)"\r\n\t\t\t\t\t\t\t\t\t\t\t   matTooltip="Edit"\r\n\t\t\t\t\t\t\t\t\t\t\t   matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-pencil">\r\n\t\t\t\t\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-edit" mat-icon-button\r\n\t\t\t\t(click)="openEdit(contentEdit,rowData)"\r\n\t\t\t\t matTooltip="Edit" matTooltipPosition="above">\r\n\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t</button> --\x3e\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t<a class="btn nobg"\r\n\t\t\t\t\t\t\t\t\t\t\t   (click)="openDelete(content,rowData)"\r\n\t\t\t\t\t\t\t\t\t\t\t   matTooltip="Delete" matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-trash"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-delete" mat-icon-button\r\n\t\t\t\tmatTooltip="Delete" matTooltipPosition="above"\r\n\t\t\t\t(click)="openDelete(content,rowData)">\r\n\t\t\t\t\t<mat-icon color="warn">delete</mat-icon>\r\n\t\t\t\t</button> --\x3e\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t<a class="btn nobg"\r\n\t\t\t\t\t\t\t\t\t\t\t   (click)="showAuditPopup(auditContent,rowData.warehouseId)"\r\n\t\t\t\t\t\t\t\t\t\t\t   matTooltip="History" matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-history"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-history" mat-icon-button\r\n\t\t\t\t matTooltip="History" matTooltipPosition="above"\r\n\t\t\t\t (click)="showAuditPopup(auditContent,rowData.warehouseId)">\r\n\t\t\t\t\t<mat-icon color="green">history</mat-icon>\r\n\t\t\t\t</button> --\x3e\r\n\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div *ngIf="currentDeletedstatus==true">\r\n\t\t\t\t<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n\t\t\t\tmatTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n\t\t\t   <span data-toggle="modal" data-target="#view"><a class="btn nobg"\r\n\t\t\t\t(click)="openView(view,rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n\t\t\t  <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n\t\t\t\t\x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n\t\t\t \r\n\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template #auditContent let-c="close" let-d="dismiss">\r\n\t\t\t\t\t\t\t\t<div class="audit-template-launcher">\r\n\t\t\t\t\t\t\t\t\t<warehouse-audit [Data]="AuditDetails" [Modal]="modal" *ngIf="HasAuditDetails"></warehouse-audit>\r\n\t\t\t\t\t\t\t\t\t<audit-no-history [Modal]="modal" [Title]="AuditHistoryTitle" *ngIf="!HasAuditDetails"></audit-no-history>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="emptymessage" let-columns\r\n\t\t\t\t\t\t\t\t\t\t *ngIf="wareHousedata && wareHousedata.length == 0 || wareHousedata && wareHousedata.length ==null">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td [attr.colspan]="11" class="no-records-cstm">\r\n\t\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="summary" id="footer">\r\n\t\t\t\t\t\t\t\t<label id="footer" class="footer1">Total:</label>\r\n\t\t\t\t\t\t\t\t<input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t<label id="footer" class="footer1">Pages Count:</label>\r\n\t\t\t\t\t\t\t\t<input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText type="text" />\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t</p-table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n\t</div>\r\n\t<div class="modal-body">\r\n\t\t<strong>\r\n\t\t\tWarehouse Name:\r\n\t\t\t<span class="new-label">{{restorerecord.name}}\r\n\t\t\t</span>\r\n\t\t</strong>\r\n\t</div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n\t<div class="modal-header">\r\n\t\t<h4 class="modal-title" *ngIf="isEditMode">Edit Warehouse</h4>\r\n\t\t<h4 class="modal-title" *ngIf="!isEditMode">Add Warehouse</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\r\n\t<div class="modal-body">\r\n\t\t<form #userForm="ngForm" class="form-horizontal" (ngSubmit)="SaveandEditWarehouse()">\r\n\t\t\t<div class="col-sm-12">\r\n\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label class="control-label">Site Name\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<select [(ngModel)]="sourceWarehouse.siteId" (ngModelChange)="getmemo()"  [ngModelOptions]="{standalone: true}" (change)="siteValueChange($event.target.value)">\r\n\t\t\t\t\t\t\t\t\t<option *ngFor="let site of allSites" [ngValue]="site.siteId">{{site.name}}</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="actionname" class="control-label">Warehouse Name\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<p-autoComplete (onSelect)="Manufacturerdescription($event)" (onKeyUp)=ManufacturerHandler($event) (completeMethod)="filtermanufacturer($event)"\r\n\t\t\t\t\t\t\t\t [(ngModel)]="name" (ngModelChange)="getmemo()" [suggestions]="localCollection" [size]="30" [minLength]="2" name="warehouse"\r\n\t\t\t\t\t\t\t\t [dropdown]="true" class="p-autoComplete-ctsm">\r\n\t\t\t\t\t\t\t\t</p-autoComplete>\r\n\t\t\t\t\t\t\t\t<div *ngIf="disableSaveManufacturer" class="clr-red">Already Exists</div>\r\n\t\t\t\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Address Line 1</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<input type="text" (ngModelChange)="getmemo()" class="form-control" disabled placeholder="Address Line 1" id="memo" required value={{address1}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Address Line 2</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<input class="form-control" (ngModelChange)="getmemo()" type="text" disabled placeholder="Address Line 2" minlength="2" required value={{address2}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Address Line 3</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<input class="form-control" (ngModelChange)="getmemo()" type="text" disabled placeholder="Address Line 3" minlength="2" required value={{address3}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">City</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<input type="text" class="form-control" (ngModelChange)="getmemo()" disabled placeholder="City" minlength="2" required value={{city}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">State</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<input type="text" class="form-control" (ngModelChange)="getmemo()" disabled placeholder="State" minlength="2" required value={{stateOrProvince}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Country</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<input type="text" class="form-control" (ngModelChange)="getmemo()" disabled placeholder="Country" minlength="2" required value={{country}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Zip Code</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<input type="text" class="form-control" (ngModelChange)="getmemo()" disabled placeholder="Zip Code" minlength="2" required value={{postalCode}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Memo</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t\t<textarea [(ngModel)]="sourceWarehouse.memo" (ngModelChange)="getmemo()" name="memo"></textarea>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t<div class="col-sm-7">\r\n\t\t\t\t\t\t\t<div class="checkbox-cstm">\r\n\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t<input type="checkbox" (ngModelChange)="getmemo()" name="isActive" #isActive="ngModel" checked id="isActive" [(ngModel)]="sourceWarehouse.isActive">\r\n\t\t\t\t\t\t\t\t\t<span class="cr">\r\n\t\t\t\t\t\t\t\t\t\t<i class="cr-icon pi pi-check"></i>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\tActive\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="col-sm-6" *ngIf="showManagement">\r\n\t\t\t\t\t<p-treeTable [value]="gridData" [columns]="cols1" class="p-Treetable-view" [(selection)]="selectedNodeTest">\r\n\t\t\t\t\t\t<ng-template pTemplate="header" let-columns>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th *ngFor="let col of columns">\r\n\t\t\t\t\t\t\t\t\t{{col.header}}\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template pTemplate="body" let-rowNode let-rowData="rowData" let-columns="columns">\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td class="warehouse-tree-td" *ngFor="let col of columns; let i = index">\r\n\t\t\t\t\t\t\t\t\t<p-treeTableToggler [rowNode]="rowNode" *ngIf="i == 0"></p-treeTableToggler>\r\n\t\t\t\t\t\t\t\t\t<p-treeTableCheckbox [value]="rowNode" class="p-Tree-checkbox" *ngIf="i == 0"></p-treeTableCheckbox>\r\n\t\t\t\t\t\t\t\t\t{{rowData[col.field]}}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</p-treeTable>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button class="btn btn-primary" [disabled]="!userForm.valid || disableSaveManufacturer || disableSaveForEdit">{{isEditMode ? \'Update\' : \'Save\' }}</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n\r\n</ng-template>\r\n\r\n\x3c!-- Delete --\x3e\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n\t<div class="modal-header">\r\n\t\t<h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\t<div class="modal-body">\r\n\t\t<strong>\r\n\t\t\tWarehouse Name:\r\n\t\t\t<span class="new-label">\r\n\t\t\t\t{{warehouse_Name}}\r\n\t\t\t</span>\r\n\t\t</strong>\r\n\t</div>\r\n\t<div class="modal-footer">\r\n\t\t<button type="button" class="btn btn-primary" (click)="deleteItemAndCloseModel()">Yes</button>\r\n\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n\t</div>\r\n\r\n</ng-template>\r\n\r\n\r\n\r\n\x3c!-- History --\x3e\r\n\r\n\r\n<ng-template #contentHist let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n\t<div class="modal-header">\r\n\t\t<h4 class="modal-title">History of Credit Terms</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\t<div class="modal-body">\r\n\r\n\t\t<table class="table table-bordered">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>siteId</th>\r\n\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t<th>Previous Value</th>\r\n\t\t\t\t\t<th>New Value</th>\r\n\t\t\t\t\t<th>Last Updated By</th>\r\n\t\t\t\t\t<th>Last Updated Time</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tr *ngFor="let audit of auditHisory; let i = index;">\r\n\t\t\t\t<td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'auditHistoryId\', audit.auditHistoryId)  ? \'black\' : \'red\'  }">>{{audit.auditHistoryId}}</td>\r\n\t\t\t\t<td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'columnName\', audit.columnName)  ? \'black\' : \'red\'  }">>{{audit.columnName}}</td>\r\n\t\t\t\t<td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'previousValue\', audit.previousValue)  ? \'black\' : \'red\'  }">>{{audit.previousValue}}</td>\r\n\t\t\t\t<td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'newValue\', audit.newValue)  ? \'black\' : \'red\'  }">>{{audit.newValue}}</td>\r\n\t\t\t\t<td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'updatedBy\', audit.updatedBy)  ? \'black\' : \'red\'  }">>{{audit.updatedBy}}</td>\r\n\t\t\t\t<td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'updatedDate\', audit.updatedDate)  ? \'black\' : \'red\'  }">>{{audit.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</td>\r\n\t\t\t</tr>\r\n\t\t</table>\r\n\t</div>\r\n\t<div class="modal-footer">\r\n\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n\t</div>\r\n</ng-template>\r\n\r\n\x3c!-- View --\x3e\r\n\r\n<ng-template #view class="modal fade " id="view" role="dialog">\r\n\r\n\t<div class="modal-content">\r\n\t\t<div class="modal-header">\r\n\t\t\t<button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\t\t\t<h4 class="modal-title">Warehouse Details</h4>\r\n\t\t</div>\r\n\t\t<div class="modal-body viewform">\r\n\t\t\t<div class="col-sm-6">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Warehouse Name : </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{warehouse_Name}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Site Name : </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{siteName}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Address1: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{address1}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Address2: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{address2}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Address3: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{address3}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> City: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{city}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> State: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{stateOrProvince}}</span>\r\n\t\t\t\t</p>\r\n\r\n\t\t\t</div>\r\n\t\t\t<div class="col-sm-6">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Country: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{country}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> ZipCode: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{postalCode}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Memo: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{memo}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Created By: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{createdBy}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Created Date: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Updated By: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{updatedBy}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Updated Date: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class="clear"></div>\r\n\t\t</div>\r\n\t\t<div class="modal-footer">\r\n\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</ng-template>\r\n'},YYHt:function(t,e,a){"use strict";a.r(e);var n=a("mrSG"),s=a("8Y7J"),i=a("u9T3"),r=a("s7LF"),o=a("TSSN"),l=a("1+r1"),d=a("SVse"),c=a("iInd"),u=a("JdNi"),p=function(){function t(e,a,n){var s=this;_classCallCheck(this,t),this.router=e,this.route=a,this.singleScreenBreadCrumb=n,this.singleScreenBreadCrumb.bredcrumbObjChangeObject$.subscribe((function(t){s.otherurl=t,s.loadmethod(s.otherurl)})),a.events.forEach((function(t){t instanceof c.NavigationStart&&(console.log(t.url,"router value++++="),setTimeout((function(){s.loadmethod(t.url)}),1e3),s.currentUrl=t.url)}))}return _createClass(t,[{key:"ngOnInit",value:function(){this.currentUrl=this.route.url,this.loadmethod(this.currentUrl)}},{key:"loadmethod",value:function(t){if(this.currentUrl=t,this.currentUrl){var e="";switch(this.currentUrl){case"/singlepages/singlepages/app-asset-type":e="Asset Class";break;case"/singlepages/singlepages/app-asset-intangible-class":e="Asset Intangible Class";break;case"/singlepages/singlepages/app-stage-code":e="Stage Code";break;case"/singlepages/singlepages/app-gl-account-category":e="GL Account Category";break;case"/singlepages/singlepages/app-expenditure-category":e="Expenditure Category";break;case"/singlepages/singlepages/app-asset-attribute-type":e="Asset Attribute Type";break;case"/singlepages/singlepages/app-asset-intangible-attribute-type":e="Intangible Attribute Type"}this.items=[{label:"Single Screens"},{label:e}],"/singlepages/singlepages/app-actions"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Actions"}]:"/singlepages/singlepages/app-manufacturer"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Manufacturer"}]:"/singlepages/singlepages/app-vendorcapabilities"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Vendor Capabilities"}]:"/singlepages/singlepages/app-disposal-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Asset Disposal Type"}]:"/singlepages/singlepages/app-lead-source"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Lead-Source"}]:"/singlepages/singlepages/app-tag-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Tag Type"}]:"/singlepages/singlepages/app-publication-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Publication Type"}]:"/singlepages/singlepages/app-document-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Document Type"}]:"/singlepages/singlepages/app-employee-training-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Employee Training Type"}]:"/singlepages/singlepages/app-teardown-reason"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Tear Down"}]:"/singlepages/singlepages/app-depreciation-intervals"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Depreciation Intervals"}]:"/singlepages/singlepages/app-depriciation-method"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Depreciation Method"}]:"/singlepages/singlepages/app-adjustment-reason"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Adjustment Reason"}]:"/singlepages/singlepages/app-asset-dep-convention-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Depreciation Convension"}]:"/singlepages/singlepages/asset-status"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Asset Status "}]:"/singlepages/singlepages/asset-location"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Asset Location "}]:"/singlepages/singlepages/asset-acquisition-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Asset Acquistion Type "}]:"/singlepages/singlepages/app-labor-and-overhead-cost-setup"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Labor And Overhead Cost Setup"}]:"/singlepages/singlepages/app-certification-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Certification Type"}]:"/singlepages/singlepages/app-action-attributes"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Actions Attributes"}]:"/singlepages/singlepages/app-ata-main"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"ATA Chapter"}]:"/singlepages/singlepages/app-charges"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Charges"}]:"/singlepages/singlepages/app-conditions"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Condition"}]:"/singlepages/singlepages/app-credit-terms"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Credit Terms"}]:"/singlepages/singlepages/app-currency"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Currency"}]:"/singlepages/singlepages/app-customer-classification"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Customer Classification"}]:"/singlepages/singlepages/app-documents"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Documents"}]:"/singlepages/singlepages/app-default-message"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Default Message"}]:"/singlepages/singlepages/app-employee-expertise"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"EmployeeExpertise"}]:"/singlepages/singlepages/app-findings"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Finding"}]:"/singlepages/singlepages/app-integration"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Integration"}]:"/singlepages/singlepages/app-item-classification"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Item Classification"}]:"/singlepages/singlepages/app-item-group"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Item Group"}]:"/singlepages/singlepages/app-job-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Job Types"}]:"/singlepages/singlepages/app-job-title"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Job Titles"}]:"/singlepages/singlepages/app-priority"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Priority"}]:"/singlepages/singlepages/app-percent"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Percent"}]:"/singlepages/singlepages/app-provision"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Provision"}]:"/singlepages/singlepages/app-shipvia"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Ship Via"}]:"/singlepages/singlepages/app-publication"==this.currentUrl?this.items=[{label:"Publication"},{label:""}]:"/singlepages/singlepages/app-create-publication"==this.currentUrl?this.items=[{label:"Publication"},{label:"Create Publication"}]:-1!=this.currentUrl.indexOf("app-create-publication/edit")?this.items=[{label:"Publication"},{label:"Edit Publication"}]:"/singlepages/singlepages/app-reason"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Reason"}]:"/singlepages/singlepages/app-tax-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Tax Type"}]:"/singlepages/singlepages/app-tax-rate"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Tax Rate"}]:"/singlepages/singlepages/app-unit-of-measure"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Unit of Measure"}]:"/singlepages/singlepages/app-vendor-classification"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Vendor Classification"}]:"/singlepages/singlepages/app-work-performed"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Work Performed"}]:"/singlepages/singlepages/app-work-scope"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"WorkScope"}]:"/singlepages/singlepages/app-action-attribute-mapping"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Action Attribute Mapping"}]:"/singlepages/singlepages/app-ata-sub-chapter1"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"ATA Sub Chapter"}]:"/singlepages/singlepages/app-ata-sub-chapter2"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"ATA Sub Chapter 2"}]:"/singlepages/singlepages/app-capabilities"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Capabilities"}]:"/singlepages/singlepages/app-financial-statement-mapping"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Financial Statement Mapping"}]:"/singlepages/singlepages/app-gl-account-class"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"GL Account Class"}]:"/singlepages/singlepages/app-gl-cash-flow-classification"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"GL Cash Flow Classification"}]:"/singlepages/singlepages/app-node-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Node Type"}]:"/singlepages/singlepages/app-master-1099"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Master 1099"}]:"/singlepages/singlepages/app-gl-financial-statement"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"GL Financial Statement"}]:"/singlepages/singlepages/app-journal-approvals"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Journal Approvals"}]:"/singlepages/singlepages/app-rfq-engine"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"RFQ Engine"}]:"/singlepages/singlepages/app-site"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Site"}]:"/singlepages/singlepages/app-warehouse"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"WareHouse"}]:"/singlepages/singlepages/app-location"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Location"}]:"/singlepages/singlepages/app-shelf"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Shelf"}]:"/singlepages/singlepages/app-bin"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Bin"}]:"/singlepages/singlepages/app-dashnumber"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Dash Numbers"}]:"/singlepages/singlepages/app-vendor-process1099"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Vendor Process 1099"}]:"/singlepages/singlepages/app-caps-report"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Caps Report"}]:"/singlepages/singlepages/app-capability-type"==this.currentUrl&&(this.items=[{label:"Single Screens"},{label:"Vendor Capability Type"}])}if(this.otherurl){var a="";switch(this.currentUrl){case"/singlepages/singlepages/app-asset-type":a="Asset Class";break;case"/singlepages/singlepages/app-asset-intangible-type":a="Asset Intangible Type";break;case"/singlepages/singlepages/app-stage-code":a="Stage Code";break;case"/singlepages/singlepages/app-gl-account-category":a="GL Account Category";break;case"/singlepages/singlepages/app-expenditure-category":a="Expenditure Category";break;case"/singlepages/singlepages/app-asset-attribute-type":a="Asset Attribute Type";break;case"/singlepages/singlepages/app-asset-intangible-attribute-type":a="Intangible Attribute Type"}this.items=[{label:"Single Screens"},{label:a}],"/singlepages/singlepages/app-actions"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Actions"}]:"/singlepages/singlepages/app-action-attributes"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Task Attributes"}]:"/singlepages/singlepages/app-ata-main"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"ATA Chapter"}]:"/singlepages/singlepages/app-charges"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Charges"}]:"/singlepages/singlepages/app-conditions"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Condition"}]:"/singlepages/singlepages/app-credit-terms"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Credit Terms"}]:"/singlepages/singlepages/app-currency"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Currency"}]:"/singlepages/singlepages/app-customer-classification"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Customer Classification"}]:"/singlepages/singlepages/app-documents"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Documents"}]:"/singlepages/singlepages/app-default-message"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Default Message"}]:"/singlepages/singlepages/app-employee-expertise"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"EmployeeExpertise"}]:"/singlepages/singlepages/app-findings"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Finding"}]:"/singlepages/singlepages/app-gate-code"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Gate Code"}]:"/singlepages/singlepages/app-integration"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Integration"}]:"/singlepages/singlepages/app-item-classification"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Item Classification"}]:"/singlepages/singlepages/app-job-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Job Types"}]:"/singlepages/singlepages/app-item-group"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Item Group"}]:"/singlepages/singlepages/app-job-title"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Job Titles"}]:"/singlepages/singlepages/app-priority"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Priority"}]:"/singlepages/singlepages/app-provision"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Provision"}]:"/singlepages/singlepages/app-shipvia"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Ship Via"}]:"/singlepages/singlepages/app-publication"==this.currentUrl?this.items=[{label:"Publication"},{label:"List"}]:"/singlepages/singlepages/app-reason"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Reason"}]:"/singlepages/singlepages/app-tax-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Tax Type"}]:"/singlepages/singlepages/app-tax-rate"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Tax Rate"}]:"/singlepages/singlepages/app-unit-of-measure"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Unit Of Measure"}]:"/singlepages/singlepages/app-vendor-classification"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Vendor Classification"}]:"/singlepages/singlepages/app-work-performed"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"WorkPerformed"}]:"/singlepages/singlepages/app-work-scope"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"WorkScope"}]:"/singlepages/singlepages/app-action-attribute-mapping"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Action Attribute Mapping"}]:"/singlepages/singlepages/app-ata-sub-chapter1"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"ATA Sub Chapter"}]:"/singlepages/singlepages/app-employee-training-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Employee Training Type"}]:"/singlepages/singlepages/app-ata-sub-chapter2"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"ATA Sub Chapter 2"}]:"/singlepages/singlepages/app-capabilities"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Capabilities"}]:"/singlepages/singlepages/app-financial-statement-mapping"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Financial Statement Mapping"}]:"/singlepages/singlepages/app-gl-account-class"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"GL Account Class"}]:"/singlepages/singlepages/app-app-certification-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Certification Type"}]:"/singlepages/singlepages/app-gl-cash-flow-classification"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"GL Cash Flow Classification"}]:"/singlepages/singlepages/app-node-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Node Type"}]:"/singlepages/singlepages/app-master-1099"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Master 1099"}]:"/singlepages/singlepages/app-gl-financial-statement"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"GL Financial Statement"}]:"/singlepages/singlepages/app-journal-approvals"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Journal Approvals"}]:"/singlepages/singlepages/app-rfq-engine"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"RFQ Engine"}]:"/singlepages/singlepages/app-site"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Site"}]:"/singlepages/singlepages/app-labor-and-overhead-cost-setup"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Labor And Overhead Cost Setup"}]:"/singlepages/singlepages/app-warehouse"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Warehouse"}]:"/singlepages/singlepages/app-manufacturer"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Manufacturer"}]:"/singlepages/singlepages/app-lead-source"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Lead-Source"}]:"/singlepages/singlepages/app-tag-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Tag Type"}]:"/singlepages/singlepages/app-publication-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Publication Type"}]:"/singlepages/singlepages/app-document-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Document Type"}]:"/singlepages/singlepages/app-teardown-reason"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Tear Down"}]:"/singlepages/singlepages/app-vendorcapabilities"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Vendor Capabilities"}]:"/singlepages/singlepages/app-disposal-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:" Asset Disposal Type"}]:"/singlepages/singlepages/app-depreciation-intervals"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Depreciation Intervals"}]:"/singlepages/singlepages/app-depriciation-method"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Depreciation Method"}]:"/singlepages/singlepages/app-adjustment-reason"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Adjustment Reason"}]:"/singlepages/singlepages/app-asset-dep-convention-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Depreciation Convension"}]:"/singlepages/singlepages/asset-status"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Asset Status "}]:"/singlepages/singlepages/asset-location"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Asset Location "}]:"/singlepages/singlepages/asset-acquisition-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Asset Acquistion Type "}]:"/singlepages/singlepages/app-shelf"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Shelf"}]:"/singlepages/singlepages/app-bin"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Bin"}]:"/singlepages/singlepages/app-location"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Location"}]:"/singlepages/singlepages/app-aircraft-model"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Aircraft Model"}]:"/singlepages/singlepages/app-aircraft-manufacturer"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Aircraft Manufacturer"}]:"/singlepages/singlepages/app-dashnumber"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Dash Numbers"}]:"/singlepages/singlepages/app-node-setup"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Nodes"}]:"/singlepages/singlepages/app-vendor-process1099"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Vendor Process 1099"}]:"/singlepages/singlepages/app-caps-report"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Caps Report"}]:"/singlepages/singlepages/app-capability-type"==this.currentUrl?this.items=[{label:"Single Screens"},{label:"Vendor Capability Type"}]:"/singlepages/singlepages/app-publication"==this.currentUrl?this.items=[{label:"Publication"},{label:""}]:"/singlepages/singlepages/app-create-publication"==this.currentUrl?this.items=[{label:"Publication"},{label:"Create Publication"}]:-1!=this.currentUrl.indexOf("app-create-publication/edit")&&(this.items=[{label:"Publication"},{label:"Edit Publication"}])}}}]),t}();p.ctorParameters=function(){return[{type:c.ActivatedRoute},{type:c.Router},{type:u.a}]},p=n.b([Object(s.Component)({selector:"quickapp-pro-singlepages",template:n.c(a("p69J")).default})],p);var m=a("s6ns"),h=a("sYxu"),v=a("Lnpi"),b=a("d8Wx"),g=a("3LUQ"),f=a("lGQG"),y=a("EVdn"),w=a("G0yt"),D=a("Hocb"),S=function(){function t(e,a,n,s,i,r,o,l,d){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.activeModal=s,this._fb=i,this.alertService=r,this.actionService=o,this.dialog=l,this.masterComapnyService=d,this.isEdit=!1,this.pageIndex=0,this.selectedOnly=!1,this.pageSize=10,this.headers=[{field:"description",header:"Task Name"},{field:"sequence",header:"Sequence"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.new={description:"",sequence:null,masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.existingRecordsResponse=[]}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-tasks",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"closeDeleteModal",value:function(){y("#downloadConfirmation").modal("hide")}},{key:"customExcelUpload",value:function(t){}},{key:"sampleExcelDownload",value:function(){}},{key:"getList",value:function(){var t=this;this.actionService.getWorkFlows().subscribe((function(e){var a=e[0];t.originalData=a,t.totalRecords=a.length,t.totalPages=Math.ceil(t.totalRecords/t.pageSize)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkGroupDescriptionExists",value:function(t,e){console.log(this.selectedRecordForEdit),Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit).length>0?this.disableSaveForDescription=!0:this.disableSaveForDescription=!1}},{key:"filterDescription",value:function(t){this.descriptionList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.descriptionList=e}},{key:"selectedDescription",value:function(t){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSaveForDescription=!e}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,description:Object(D.a)("description",this.addNew.description)});console.log(e),this.isEdit?this.actionService.updateAction(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Task Successfully  ",g.d.success)})):this.actionService.newAction(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Task Successfully  ",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.addNew=Object.assign({},this.new)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.addNew=Object.assign({},t,{description:Object(D.e)("description",t.description,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.actionService.updateAction(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.actionService.deleteAcion(this.selectedRowforDelete.taskId).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted Task Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.actionService.getTaskAuditDetails(t.taskId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"dismissModel",value:function(){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();S.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:v.a},{type:m.b},{type:b.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],S.prototype,"modal",void 0),S=n.b([Object(s.Component)({selector:"app-actions",template:n.c(a("5gMs")).default,animations:[h.a],styles:[n.c(a("qr7J")).default]})],S);var k=a("BNtc"),x=function(){function t(e,a,n,s,i,r,o,l,d){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.activeModal=s,this._fb=i,this.alertService=r,this.actionattributeService=o,this.dialog=l,this.masterComapnyService=d,this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"description",header:"Task Attribute Name"},{field:"sequence",header:"Sequence"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.new={description:"",sequence:null,masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.existingRecordsResponse=[]}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-action-attributes",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"customExcelUpload",value:function(t){}},{key:"sampleExcelDownload",value:function(){}},{key:"getList",value:function(){var t=this;this.actionattributeService.getWorkFlows().subscribe((function(e){var a=e[0];t.originalData=a,t.totalRecords=a.length,t.totalPages=Math.ceil(t.totalRecords/t.pageSize)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkGroupDescriptionExists",value:function(t,e){console.log(this.selectedRecordForEdit),Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit).length>0?this.disableSaveForDescription=!0:this.disableSaveForDescription=!1}},{key:"filterDescription",value:function(t){this.descriptionList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.descriptionList=e}},{key:"selectedDescription",value:function(t){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSaveForDescription=!e}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,description:Object(D.a)("description",this.addNew.description)});console.log(e),this.isEdit?this.actionattributeService.updateAction(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Task Attribute Successfully  ",g.d.success)})):this.actionattributeService.newAction(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Task Attribute Successfully  ",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.addNew=Object.assign({},this.new)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.addNew=Object.assign({},t,{description:Object(D.e)("description",t.description,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.actionattributeService.updateAction(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.actionattributeService.deleteAcion(this.selectedRowforDelete.taskAttributeId,this.userName).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted Task Attribute Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.actionattributeService.getTaskAttributeAuditeDetails(t.taskAttributeId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"dismissModel",value:function(){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();x.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:k.a},{type:m.b},{type:b.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],x.prototype,"modal",void 0),x=n.b([Object(s.Component)({selector:"app-action-attributes",template:n.c(a("Kl4j")).default,animations:[h.a],styles:[n.c(a("dn1Q")).default]})],x);var C=a("90vJ"),A=a("JPLv"),M=a("OlR4"),I=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.commonService=n,this.modalService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.atamainService=l,this.dialog=d,this.masterComapnyService=c,this.configurations=u,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"ataChapterCode",header:"ATA Chapter Code"},{field:"ataChapterName",header:"ATA Chapter Name"},{field:"ataChapterCategory",header:"ATA Chapter Category"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.disableSaveForDescriptionMsg=!1,this.new={ataChapterCode:"",ataChapterName:"",ataChapterCategory:"",masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.currentstatus="Active",this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-ata-main",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.atamainService.ataChapterCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a;var n=e.existingRecordsResponse[0].uploadStatus;"Duplicate"==n&&e.alertService.showMessage("Success","Duplicaate Records found ",g.d.success),"Success"===n&&e.alertService.showMessage("Success","Successfully imported ",g.d.success),"Duplicate"!=n&&"Success"!=n&&e.alertService.showMessage("Failed",n,g.d.warn),e.getList()})))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=ATAChapter&fileName=ATAChapter.xlsx";window.location.assign(t)}},{key:"getList",value:function(){var t=this;this.atamainService.getAllAtaMainList().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkGroupDescriptionExists",value:function(t,e){console.log(this.selectedRecordForEdit),Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit).length>0?(this.disableSaveForDescription=!0,this.disableSaveForDescriptionMsg=!0):(this.disableSaveForDescription=!1,this.disableSaveForDescriptionMsg=!1)}},{key:"filterDescription",value:function(t){this.descriptionList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.ataChapterName.toLowerCase().includes(t.query.toLowerCase())})));this.descriptionList=e}},{key:"selectedDescription",value:function(t){var e=Object(D.k)("ataChapterName",t,this.selectedRecordForEdit);this.disableSaveForDescription=!e,this.disableSaveForDescriptionMsg=!e}},{key:"onBlur",value:function(t){var e=t.target.value;this.disableSaveForDescriptionMsg=!1;for(var a=0;a<this.originalData.length;a++){var n=this.originalData[a].ataChapterName,s=this.originalData[a].ataChapterId;if(n.toLowerCase()==e.toLowerCase()){!this.isEdit||this.isEdit?(this.disableSaveForDescription=!0,this.disableSaveForDescriptionMsg=!0):s!=this.selectedRecordForEdit.ataChapterId?(this.disableSaveForDescription=!1,this.disableSaveForDescriptionMsg=!0):(this.disableSaveForDescription=!1,this.disableSaveForDescriptionMsg=!1),console.log("ataChapterName :",n);break}}}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,ataChapterName:Object(D.a)("ataChapterName",this.addNew.ataChapterName),ataChapterCategory:Object(D.a)("ataChapterCategory",this.addNew.ataChapterCategory)});this.isEdit?this.atamainService.updateATAMain(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Updated ATA Chapter Successfully",g.d.success)})):this.atamainService.newATAMain(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New ATA Chapter Successfully",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.disableSaveForDescriptionMsg=!1,this.selectedRecordForEdit=void 0,this.addNew=Object.assign({},this.new)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveGroupId=!0,this.disableSaveForDescription=!0,this.disableSaveForDescriptionMsg=!1,this.addNew=Object.assign({},t,{ataChapterName:Object(D.e)("ataChapterName",t.ataChapterName,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"getChange",value:function(){0==this.disableSaveForDescriptionMsg&&(this.disableSaveForDescription=!1)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.atamainService.updateATAMain(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.atamainService.deleteATAMain(this.selectedRowforDelete.ataChapterId).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted ATA Chapter Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.atamainService.historyATAMain(t.ataChapterId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("ATAChapter","ATAChapterId",this.restorerecord.ataChapterId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();I.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:M.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:C.a},{type:m.b},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],I.prototype,"modal",void 0),I=n.b([Object(s.Component)({selector:"app-ata-main",template:n.c(a("lSbY")).default,animations:[h.a],styles:[n.c(a("eq1Q")).default]})],I);var T=a("Np0n"),L=a("hibz"),R=function(){function t(e,a,n,s,i,r,o,l){_classCallCheck(this,t),this.breadCrumb=e,this.modalService=a,this.commonService=n,this.authService=s,this.alertService=i,this.configurations=r,this.percentageService=o,this.creditTermService=l,this.actionamecolle=[],this.isEditMode=!1,this.localCollection=[],this.Active="Active",this.dayList=[],this.netDayList=[],this.creditTermData=[],this.formData=new FormData,this.disableSaveForCreditTermMSg=!1,this.creditTermHeaders=[{field:"name",header:"Credit Term Name"},{field:"percentage",header:"Percentage"},{field:"days",header:"Days"},{field:"netDays",header:"Net Days"},{field:"memo",header:"Memo"}],this.pageIndex=0,this.pageSize=10,this.auditHistory=[],this.newCreditTerm={name:"",percentage:null,days:0,netDays:0,masterCompanyId:1,isActive:!0,isDeleted:!1,memo:""},this.addNewCreditTerm=Object.assign({},this.newCreditTerm),this.currentstatus="Active",this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.selectedColumns=this.creditTermHeaders,this.getCreditTermList(),this.getPercentageList(),this.setDays(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-credit-terms",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"getCreditTermList",value:function(){var t=this;this.creditTermService.getCreditTermsList().subscribe((function(e){t.originalTableData=e[0].columnData,t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"getPercentageList",value:function(){var t=this;this.percentageService.getPercentages().subscribe((function(e){var a=e[0];t.percentageList=a}))}},{key:"setDays",value:function(){for(var t=0;t<=360;t++)this.dayList.push(t),this.netDayList.push(t)}},{key:"resetCreditTermsForm",value:function(){this.isEditMode=!1,this.disableSaveForCreditTermMSg=!1,this.selectedRecordForEdit=void 0,this.addNewCreditTerm=Object.assign({},this.newCreditTerm)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.creditTermService.updatecreditterms(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.creditTermService.creditTermsCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.existingRecordsResponse=a,e.getCreditTermList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"onBlur",value:function(t){var e=t.target.value;this.disableSaveForCreditTermMSg=!1;for(var a=0;a<this.creditTermData.length;a++){var n=this.creditTermData[a].name,s=this.creditTermData[a].CreditTermsId;if(n.toLowerCase()==e.toLowerCase()){this.isEditMode||!this.isEditMode||s!=this.selectedRecordForEdit.CreditTermsId?this.disableSaveForCreditTermMSg=!0:this.disableSaveForCreditTermMSg=!1,console.log("name :",n);break}}}},{key:"filterCreditTerms",value:function(t){this.creditTermsList=this.creditTermData;var e=_toConsumableArray(this.creditTermData.filter((function(e){return e.name.toLowerCase().includes(t.query.toLowerCase())})));this.creditTermsList=e}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=CreditTerms&fileName=creditterms.xlsx";window.location.assign(t)}},{key:"checkCreditTermExists",value:function(t,e){Object(D.m)(t,e,this.creditTermData,this.selectedRecordForEdit).length>0?this.disableSaveForCreditTermMSg=!0:this.disableSaveForCreditTermMSg=!1}},{key:"selectedCreditTerm",value:function(t){var e=Object(D.k)("name",t,this.selectedRecordForEdit);this.disableSaveForCreditTermMSg=!e}},{key:"refreshList",value:function(){this.table.reset(),this.getCreditTermList()}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.creditTermService.deletecreditterms(this.selectedRowforDelete.creditTermsId).subscribe((function(){e.getCreditTermList(),e.alertService.showMessage("Success","Deleted Credit Term Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"edit",value:function(t){console.log(t),this.isEditMode=!0,this.disableSaveForEdit=!0,this.disableSaveForCreditTermMSg=!1,this.addNewCreditTerm=Object.assign({},t,{name:Object(D.d)("creditTermsId",t.creditTermsId,this.creditTermData)}),this.selectedRecordForEdit=Object.assign({},this.addNewCreditTerm),console.log(this.addNewCreditTerm)}},{key:"saveCreditTerms",value:function(){var t=this,e=Object.assign({},this.addNewCreditTerm,{createdBy:this.userName,updatedBy:this.userName,name:Object(D.a)("name",this.addNewCreditTerm.name)});this.isEditMode?this.creditTermService.updatecreditterms(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEditMode=!1,t.resetCreditTermsForm(),t.getCreditTermList(),t.alertService.showMessage("Success","Updated Credit Term Successfully",g.d.success)})):this.creditTermService.newAddcreditterms(e).subscribe((function(){t.resetCreditTermsForm(),t.getCreditTermList(),t.alertService.showMessage("Success","Added  New Credit Term Successfully",g.d.success)}))}},{key:"getAuditHistoryById",value:function(t){var e=this;this.creditTermService.getCreditTermsAudit(t.creditTermsId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"changePage",value:function(t){console.log(t),this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.creditTermData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.creditTermData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.creditTermData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.creditTermData=e)),this.totalRecords=this.creditTermData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("CreditTerms","CreditTermsId",this.restorerecord.creditTermsId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getCreditTermList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();R.ctorParameters=function(){return[{type:u.a},{type:w.c},{type:M.a},{type:f.a},{type:g.b},{type:A.a},{type:L.a},{type:T.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],R.prototype,"table",void 0),R=n.b([Object(s.Component)({selector:"app-credit-terms",template:n.c(a("r8Qk")).default,animations:[h.a],styles:[n.c(a("9bMV")).default]})],R);var P=a("6c3z"),N=function(){function t(e,a,n,s,i,r,o,l,d,c){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.authService=n,this._fb=s,this.alertService=i,this.masterComapnyService=r,this.modalService=o,this.currencyService=l,this.dialog=d,this.configurations=c,this.originalData=[],this.pageIndex=0,this.pageSize=10,this.headers=[{field:"displayName",header:"Currency Name"},{field:"code",header:"Currency Code"},{field:"symbol",header:"Currency Symbol"},{field:"countryName",header:"Country"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.new={code:"",displayName:"",isActive:!0,masterCompanyId:1,memo:"",symbol:"",countryId:""},this.addNew=Object.assign({},this.new),this.disableSaveCurrencyCode=!1,this.disableSaveCurrencyName=!1,this.disableSaveCurrencySymbol=!1,this.isEdit=!1,this.auditHistory=[],this.disableSaveCurrency=!1,this.currentstatus="Active",this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.getAllCountries(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-currency",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"getList",value:function(){var t=this;this.currencyService.getCurrencyListAll().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"getAllCountries",value:function(){var t=this;this.currencyService.getCountryListAll().subscribe((function(e){t.countryListOriginal=e[0]}))}},{key:"filterCountries",value:function(t){this.countrycollection=this.countryListOriginal,this.countrycollection=_toConsumableArray(this.countryListOriginal.filter((function(e){return e.nice_name.toLowerCase().includes(t.query.toLowerCase())})))}},{key:"getChange",value:function(){this.disableSaveCurrencyName=!1,this.disableSaveCurrency=!1}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"selectedCurrencyCode",value:function(t){var e=Object(D.k)("code",t,this.selectedRecordForEdit);this.disableSaveCurrencyCode=!e}},{key:"checkCurrencyCodeExists",value:function(t,e){Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit).length>0?this.disableSaveCurrencyCode=!0:this.disableSaveCurrencyCode=!1}},{key:"filterCurrencyCode",value:function(t){this.currencyCodeList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.code.toLowerCase().includes(t.query.toLowerCase())})));this.currencyCodeList=e}},{key:"selectedCurrencyName",value:function(t){var e=Object(D.k)("displayName",t,this.selectedRecordForEdit);this.disableSaveCurrencyName=!e,this.disableSaveCurrency=!e}},{key:"checkCurrencyNameExists",value:function(t,e){Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit).length>0?(this.disableSaveCurrencyName=!0,this.disableSaveCurrency=!0):(this.disableSaveCurrencyName=!1,this.disableSaveCurrency=!1)}},{key:"filterCurrencyName",value:function(t){this.currencyNameList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.displayName.toLowerCase().includes(t.query.toLowerCase())})));this.currencyNameList=e}},{key:"selectedCurrencySymbol",value:function(t){var e=Object(D.k)("symbol",t,this.selectedRecordForEdit);this.disableSaveCurrencySymbol=!e}},{key:"checkCurrencySymbolExists",value:function(t,e){Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit).length>0?this.disableSaveCurrencySymbol=!0:this.disableSaveCurrencySymbol=!1}},{key:"filterCurrencySymbol",value:function(t){this.currencySymbolList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.symbol.toLowerCase().includes(t.query.toLowerCase())})));this.currencySymbolList=e}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,displayName:Object(D.a)("displayName",this.addNew.displayName),code:Object(D.a)("code",this.addNew.code),symbol:Object(D.a)("symbol",this.addNew.symbol),countryId:Object(D.h)("countries_id",this.addNew.countryId)});this.isEdit?this.currencyService.updatecurrency(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Updated Currency Successfully",g.d.success)})):this.currencyService.newAddcurrency(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added New Currency Successfully",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.addNew=Object.assign({},this.new),this.disableSaveCurrencyCode=!1,this.disableSaveCurrencyName=!1,this.disableSaveCurrencySymbol=!1}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveCurrency=!0,this.disableSaveCurrencyName=!1,this.disableSaveCurrencyCode=!1,this.disableSaveCurrencySymbol=!1,this.addNew=Object.assign({},t,{displayName:Object(D.d)("currencyId",t.currencyId,this.originalData),code:Object(D.d)("currencyId",t.currencyId,this.originalData),symbol:Object(D.d)("currencyId",t.currencyId,this.originalData),countryId:Object(D.d)("countries_id",t.countryId,this.countryListOriginal)}),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.currencyService.updatecurrency(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.currencyService.deletecurrency(this.selectedRowforDelete.currencyId).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted Currency Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.currencyService.historycurrency(t.currencyId).subscribe((function(t){e.auditHistory=t[0]}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;a.length>0&&(this.formData.append("file",a[0]),this.currencyService.currencyFileUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a;var n=e.existingRecordsResponse[0].uploadStatus;"Duplicate"==n&&e.alertService.showMessage("Duplicate","Duplicate Records found ",g.d.warn),"Success"===n&&e.alertService.showMessage("Success","Success Records found ",g.d.success),"Failed"===n&&e.alertService.showMessage("Failed","Failed ",g.d.error),e.getList()})))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=Currency&fileName=currency.xlsx";window.location.assign(t)}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("Currency","CurrencyId",this.restorerecord.currencyId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();N.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:f.a},{type:r.FormBuilder},{type:g.b},{type:b.a},{type:w.c},{type:P.a},{type:m.b},{type:A.a}]},N=n.b([Object(s.Component)({selector:"app-currency",template:n.c(a("qSll")).default,animations:[h.a],styles:[n.c(a("0pFG")).default]})],N);var F=a("/WcI"),E=function t(e,a,n,s,i,r,o,l,d,c){_classCallCheck(this,t),this.customerClassificationId=a,this.description=s,this.masterCompanyId=i,this.createdBy=r,this.updatedBy=d,this.createdDate=o,this.updatedDate=l,this.isActive=n,this.memo=c},H=a("8rEH"),B=a("OIZN"),O=a("7kcP"),U=function(){function t(e,a,n,s,i,r,o,l,d,c){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this._fb=n,this.alertService=s,this.masterComapnyService=i,this.modalService=r,this.CustomerClassificationService=o,this.dialog=l,this.commonService=d,this.configurations=c,this.customerClassification_Name="",this.memo="",this.isActive=!0,this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.Active="Active",this.disableSave=!1,this.descritpion="",this.selectedRecordForEditDesc="",this.disableSaveForEdit=!1,this.customerClassificationId=0,this.actionamecolle=[],this.displayedColumns=["customerClassificationId","description","createdBy","updatedBy","updatedDate","createdDate"],this.allcustomerclassificationInfo=[],this.sourceAction=new E,this.title="Create",this.isEditMode=!1,this.isDeleteMode=!1,this.descmodified=!1,this.localClassificationsCollection=[],this.auditHistory=[],this.pageSize=20,this.currentstatus="Active",this.formData=new FormData,this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.displayedColumns.push("action"),this.dataSource=new H.a}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData(),this.cols=[{field:"description",header:"Classification Name"},{field:"memo",header:"Memo"},{field:"createdBy",header:"Created By"},{field:"updatedBy",header:"Updated By"}],this.breadCrumb.currentUrl="/singlepages/singlepages/app-customer-classification",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.selectedColumns=this.cols}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"loadData",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.CustomerClassificationService.getCustomerClassificationList().subscribe((function(e){t.onDataLoadSuccessful(e[0]),t.alertService.stopLoadingMessage()}),(function(e){t.onDataLoadFailed(e),t.alertService.stopLoadingMessage()}))}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onDataLoadSuccessful",value:function(t){var e=this;this.CustomerClassificationService.getCustomerClassificationList().subscribe((function(t){e.originalTableData=t[0],e.getListByStatus(e.status?e.status:e.currentstatus),e.alertService.stopLoadingMessage()}))}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"dismissMemoModel",value:function(){y("#add-memo").modal("hide")}},{key:"onAddMemo",value:function(){this.tempMemo=this.memo}},{key:"onSaveMemo",value:function(){this.memo=this.tempMemo,y("#add-memo").modal("hide")}},{key:"openAddClassficationDialog",value:function(){this.isEditMode=!1,this.isDeleteMode=!1,this.disableSave=!1,this.isSaving=!0,this.sourceAction=new E,this.memo=""}},{key:"open",value:function(t){this.isEditMode=!1,this.isDeleteMode=!1,this.disableSave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=new E,this.memo="",this.sourceAction.isActive=!0,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceAction=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){t.onDataMasterCompaniesLoadSuccessful(e[0]),t.alertService.stopLoadingMessage()}),(function(e){t.onDataLoadFailed(e),t.alertService.stopLoadingMessage()}))}},{key:"openEdit",value:function(t){this.descmodified=!1,this.disableSave=!1,this.disableSaveForEdit=!0,this.isEditMode=!0,this.isSaving=!0,this.sourceAction=t,this.memo=t.memo,this.descritpion=t.description,this.customerClassificationId=t.customerClassificationId,this.isActive=t.isActive,this.selectedRecordForEditDesc=t.description,this.selectedRecordForEdit=Object.assign({},this.sourceAction)}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"openHist",value:function(t,e){var a=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.sourceAction=e,this.isSaving=!0,this.CustomerClassificationService.historycustomerclass(this.sourceAction.customerClassificationId).subscribe((function(e){a.onHistoryLoadSuccessful(e[0],t),a.alertService.stopLoadingMessage()}),(function(t){a.saveFailedHelper(t),a.alertService.stopLoadingMessage()}))}},{key:"openView",value:function(t,e){this.sourceAction=e,this.customerClassification_Name=e.description,this.memo=e.memo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"openHelpText",value:function(t){this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"filterclassifications",value:function(t){this.localClassificationsCollection=[],this.localClassificationsCollection=_toConsumableArray(this.allcustomerclassificationInfo.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})))}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1})}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;a.length>0&&(this.formData.append("ModuleName","CustomerClassification"),this.formData.append("file",a[0]),this.commonService.smartExcelFileUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.loadData(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=CustomerClassification&fileName=CustomerClassification.xlsx";window.location.assign(t)}},{key:"handleChange",value:function(t){var e=this;this.sourceAction=t,this.sourceAction.updatedBy=this.userName,this.CustomerClassificationService.updatecustomerclass(this.sourceAction).subscribe((function(t){return e.saveCompleted(e.sourceAction)}),(function(t){return e.saveFailedHelper(t)}))}},{key:"editItemAndCloseModel",value:function(){var t=this;this.isSaving=!0;var e=Object.assign({},this.sourceAction,{createdBy:this.userName,updatedBy:this.userName,description:Object(D.a)("description",this.sourceAction),memo:this.memo,masterCompanyId:this.currentUserMasterCompanyId,isActive:this.isActive});0==this.isEditMode?(e.description=this.sourceAction,this.CustomerClassificationService.newAddcustomerclass(e).subscribe((function(e){return t.saveSuccessHelper(e)}),(function(e){return t.saveFailedHelper(e)}))):(e.customerClassificationId=this.customerClassificationId,e.memo=this.memo,this.CustomerClassificationService.updatecustomerclass(e).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)})))}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.CustomerClassificationService.deletecustomerclass(this.sourceAction.customerClassificationId).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.sourceAction=new E,this.memo="",this.modal.close()}},{key:"viewSelectedRow",value:function(t){this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"saveCompleted",value:function(t){this.isSaving=!1,this.selectedRecordForEdit=void 0,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.sourceAction=new E,this.memo="",this.loadData()}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.sourceAction=new E,this.memo="",this.loadData()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"getDismissReason",value:function(t){return t===w.a.ESC?"by pressing ESC":t===w.a.BACKDROP_CLICK?"by clicking on a backdrop":"with: "+t}},{key:"showAuditPopup",value:function(t){this.auditClassification(t.customerClassificationId)}},{key:"auditClassification",value:function(t){var e=this;this.CustomerClassificationService.getCustomerclassification(t).subscribe((function(t){t.length>0&&t[0].result.length>0&&(e.auditHistory=t[0].result)}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"checkIfClassificationExists",value:function(t,e){Object(D.m)(t,e,this.allcustomerclassificationInfo,this.selectedRecordForEdit).length>0?this.disableSave=!0:this.disableSave=!1}},{key:"selectedClassification",value:function(t){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSave=!e}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.allcustomerclassificationInfo=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.allcustomerclassificationInfo=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.allcustomerclassificationInfo=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.allcustomerclassificationInfo=e)),this.totalRecords=this.allcustomerclassificationInfo.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("CustomerClassification","CustomerClassificationId",this.restorerecord.customerClassificationId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"currentUserMasterCompanyId",get:function(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:null}}]),t}();U.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:r.FormBuilder},{type:g.b},{type:b.a},{type:w.c},{type:F.a},{type:m.b},{type:M.a},{type:A.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],U.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],U.prototype,"sort",void 0),U=n.b([Object(s.Component)({selector:"app-customer-classification",template:n.c(a("VSYz")).default,animations:[h.a],styles:[n.c(a("yJxn")).default]})],U);var j=a("V9dR"),V=function t(e,a,n,s,i,r,o,l,d,c,u,p,m,h,v,b,g,f,y){_classCallCheck(this,t),this.documentId=s,this.documentCode=n,this.isActive=a,this.description=i,this.Customer=r,this.itemmaster=o,this.purchaseOrder=l,this.RepairOrder=d,this.SL=c,this.SalesOrder=u,this.WorkOrder=p,this.Vendor=m,this.masterCompanyId=h,this.createdBy=v,this.createdDate=b,this.updatedDate=g,this.updatedBy=f,this.masterCompany=e,this.memo=y},z=function(){function t(e,a,n,s,i,r,o,l,d){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.activeModal=s,this._fb=i,this.alertService=r,this.documentService=o,this.dialog=l,this.masterComapnyService=d,this.document=[],this.allreasn=[],this.disableSave=!1,this.document_Name="",this.description="",this.customer="",this.itemMaster="",this.purchaseOrder="",this.repairOrder="",this.sl="",this.salesOrder="",this.workOrder="",this.vendor="",this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.localCollection=[],this.displayedColumns=["actionId","companyName","description","createdBy","updatedBy","updatedDate","createdDate"],this.alldocuments=[],this.allComapnies=[],this.auditHisory=[],this.title="Create",this.isEditMode=!1,this.isDeleteMode=!1,this.allWorkFlows=[],this.displayedColumns.push("action"),this.dataSource=new H.a}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-documents",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.documentService.getWorkFlows().subscribe((function(e){return t.onDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)})),this.cols=[{field:"documentCode",header:"Document Code"},{field:"description",header:"Description"},{field:"customer",header:"Cust"},{field:"itemMaster",header:"Item Master"},{field:"purchaseOrder",header:"PO"},{field:"repairOrder",header:"RO"},{field:"sl",header:"SL #"},{field:"salesOrder",header:"SO"},{field:"workOrder",header:"WO"},{field:"vendor",header:"Vendor"}],this.selectedColumns=this.cols}},{key:"handleChange",value:function(t,e){var a=this;e.checked,this.sourceAction=t,this.sourceAction.updatedBy=this.userName,this.sourceAction.isActive,this.documentService.updateAction(this.sourceAction).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)}))}},{key:"eventHandler",value:function(t){if(""!=t.target.value){var e=t.target.value.toLowerCase();this.selectedreason&&(e==this.selectedreason.toLowerCase()?this.disableSave=!0:this.disableSave=!1)}}},{key:"documentId",value:function(t){if(this.allreasn)for(var e=0;e<this.allreasn.length;e++)t==this.allreasn[e][0].documentName&&(this.sourceAction.documentCode=this.allreasn[e][0].documentName,this.disableSave=!0,this.selectedreason=t)}},{key:"filterDocuments",value:function(t){this.localCollection=[];for(var e=0;e<this.alldocuments.length;e++){var a=this.alldocuments[e].documentCode;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(this.allreasn.push([{documentId:this.alldocuments[e].documentId,documentName:a}]),this.localCollection.push(a))}}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onDataLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.totalRecords=t.length,this.alldocuments=t}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"open",value:function(t){this.isEditMode=!1,this.isDeleteMode=!1,this.disableSave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=new V,this.sourceAction.isActive=!0,this.documentName="",this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceAction=e,this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openEdit",value:function(t,e){this.isEditMode=!0,this.isSaving=!0,this.loadMasterCompanies(),this.disableSave=!1,this.sourceAction=e,this.documentName=this.sourceAction.documentCode,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHist",value:function(t,e){var a=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.sourceAction=e,this.documentService.historyAcion(this.sourceAction.documentId).subscribe((function(e){return a.onHistoryLoadSuccessful(e[0],t)}),(function(t){return a.saveFailedHelper(t)}))}},{key:"openView",value:function(t,e){this.sourceAction=e,this.document_Name=e.documentCode,this.description=e.description,this.customer=e.customer,this.itemMaster=e.itemMaster,this.purchaseOrder=e.purchaseOrder,this.repairOrder=e.repairOrder,this.sl=e.sl,this.salesOrder=e.salesOrder,this.workOrder=e.workOrder,this.vendor=e.vendor,this.memo=e.memo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHelpText",value:function(t){this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"editItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,0==this.isEditMode?(this.sourceAction.createdBy=this.userName,this.sourceAction.updatedBy=this.userName,this.sourceAction.documentCode=this.documentName,this.sourceAction.masterCompanyId=1,this.documentService.newAction(this.sourceAction).subscribe((function(e){return t.saveSuccessHelper(e)}),(function(e){return t.saveFailedHelper(e)}))):(this.sourceAction.updatedBy=this.userName,this.sourceAction.documentCode=this.documentName,this.sourceAction.masterCompanyId=1,this.documentService.updateAction(this.sourceAction).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)}))),this.modal.close()}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.documentService.deleteAcion(this.sourceAction.documentId).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.updatePaginatorState()}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.updatePaginatorState()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"getDismissReason",value:function(t){return t===w.a.ESC?"by pressing ESC":t===w.a.BACKDROP_CLICK?"by clicking on a backdrop":"with: "+t}},{key:"showAuditPopup",value:function(t,e){this.auditDocument(e),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"auditDocument",value:function(t){var e=this;this.AuditDetails=[],this.documentService.getAudit(t).subscribe((function(t){t.length>0&&(e.AuditDetails=t,e.AuditDetails[0].ColumnsToAvoid=["documentAuditId","documentId","masterCompanyId","createdBy","createdDate","updatedDate"])}))}},{key:"updatePaginatorState",value:function(){this.paginatorState={rows:this.rows,first:this.first},this.paginatorState&&this.loadDocument(this.paginatorState)}},{key:"loadDocument",value:function(t){var e=this;this.loading=!0,this.rows=t.rows,this.first=t.first,setTimeout((function(){e.alldocuments&&(e.documentService.getServerPages(t).subscribe((function(t){t.length>0&&(e.documentPagination=t[0])})),e.loading=!1)}),1e3)}},{key:"inputFiledFilter",value:function(t,e,a){var n=this;this.event=t,this.field=e,this.matvhMode=a,"documentCode"==e&&(this.documentCodeInputFieldValue=t),"description"==e&&(this.descriptionInputFieldValue=t),"customer"==e&&(this.customerInputFieldValue=t),"itemMaster"==e&&(this.itemMasterInputFieldValue=t),"purchaseOrder"==e&&(this.purchaseOrderInputFieldValue=t),"repairOrder"==e&&(this.repairOrderInputFieldValue=t),"sl"==e&&(this.slInputFieldValue=t),"salesOrder"==e&&(this.salesOrderInputFieldValue=t),"workOrder"==e&&(this.workOrderInputFieldValue=t),"vendor"==e&&(this.vendorInputFieldValue=t),"createdBy"==e&&(this.createdByInputFieldValue=t),"updatedBy"==e&&(this.updatedByInputFieldValue=t),this.document.push({documentCode:this.documentCodeInputFieldValue,description:this.descriptionInputFieldValue,customer:this.customerInputFieldValue,itemMaster:this.itemMasterInputFieldValue,purchaseOrder:this.purchaseOrderInputFieldValue,repairOrder:this.repairOrderInputFieldValue,sl:this.slInputFieldValue,salesOrder:this.salesOrderInputFieldValue,workOrder:this.workOrderInputFieldValue,vendor:this.vendorInputFieldValue,CreatedBy:this.createdByInputFieldValue,UpdatedBy:this.updatedByInputFieldValue,first:this.first,page:10,pageCount:10,rows:this.rows,limit:5}),this.document&&this.documentService.getServerPages(this.document[this.document.length-1]).subscribe((function(t){t.length>0&&(n.documentPagination=t[0])}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();z.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:j.a},{type:m.b},{type:b.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],z.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],z.prototype,"sort",void 0),z=n.b([Object(s.Component)({selector:"app-documents",template:n.c(a("UdSA")).default,animations:[h.a],styles:[n.c(a("KqhB")).default]})],z);var G=a("E+Hz"),_=function(){function t(e,a,n,s,i,r,o){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.commonService=s,this.alertService=i,this.employeeService=r,this.configurations=o,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"description",header:" Employee Expertise "},{field:"memo",header:"Memo"},{field:"isWorksInShop",header:"Shop Employee"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveEmpExpertise=!1,this.disableSaveForEdit=!1,this.new={description:"",masterCompanyId:1,isActive:!0,memo:"",isWorksInShop:!1},this.addNew=Object.assign({},this.new),this.currentstatus="Active",this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-employee-expertise",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.employeeService.EmployeeExpertiseFileUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a;var n=e.existingRecordsResponse[0].uploadStatus;"Duplicate"==n&&e.alertService.showMessage("Duplicate","Duplicate Records found ",g.d.success),"Success"===n&&e.alertService.showMessage("Success","Success Records found ",g.d.success),"Failed"===n&&e.alertService.showMessage("Failed","Failed ",g.d.success),e.getList()})))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=EmployeeExpertise&fileName=employeeExpertise.xlsx";window.location.assign(t)}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"getList",value:function(){var t=this;this.employeeService.getWorkFlows().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkEmployeeExpertiseExists",value:function(t,e){var a=Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit);console.log(a),a.length>0?this.disableSaveEmpExpertise=!0:this.disableSaveEmpExpertise=!1}},{key:"filterEmployeeExpertise",value:function(t){this.EmpExpertiseList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.EmpExpertiseList=e}},{key:"selectedEmpExpertise",value:function(t){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSaveEmpExpertise=!e}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,description:Object(D.a)("description",this.addNew.description)});this.isEdit?this.employeeService.updateAction(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  Employee Expertise  Successfully  ",g.d.success)})):this.employeeService.newAction(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added Employee Expertise  Successfully  ",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.disableSaveEmpExpertise=!1,this.addNew=Object.assign({},this.new)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveEmpExpertise=!1,this.disableSaveForEdit=!0,this.addNew=Object.assign({},t,{description:Object(D.d)("employeeExpertiseId",t.employeeExpertiseId,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.employeeService.updateAction(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.employeeService.deleteAcion(this.selectedRowforDelete.employeeExpertiseId).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted  Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.employeeService.historyAcion(t.employeeExpertiseId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("EmployeeExpertise","EmployeeExpertiseId",this.restorerecord.employeeExpertiseId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();_.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:M.a},{type:g.b},{type:G.a},{type:A.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],_.prototype,"modal",void 0),_=n.b([Object(s.Component)({selector:"app-employee-expertise",template:n.c(a("/7yc")).default,animations:[h.a],styles:[n.c(a("qIaw")).default]})],_);var W=a("UCBI"),q=function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.findingId=a,this.description=s,this.memo=u,this.findingCode=n,this.masterCompanyId=i,this.createdBy=r,this.createdDate=o,this.updatedDate=l,this.updatedBy=d,this.masterCompany=e,this.isActive=c,this.memo=u},$=function(){function t(e,a,n,s,i,r,o,l,d){_classCallCheck(this,t),this.breadCrumb=e,this.masterComapnyService=a,this.authService=n,this.modalService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.findingService=l,this.dialog=d,this.finding_Name="",this.description="",this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.actionamecolle=[],this.Active="Active",this.displayedColumns=["findingId","findingCode","discription","createdBy","updatedBy","updatedDate","createdDate"],this.allFindingsInfo=[],this.title="Create",this.localCollection=[],this.isEditMode=!1,this.isDeleteMode=!1,this.displayedColumns.push("action"),this.dataSource=new H.a}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData(),this.cols=[{field:"findingCode",header:"Finding Code"},{field:"memo",header:"Memo"},{field:"description",header:"Description"},{field:"createdBy",header:"Created By"},{field:"updatedBy",header:"Updated By"}],this.breadCrumb.currentUrl="/singlepages/singlepages/app-findings",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.selectedColumns=this.cols}},{key:"handleChange",value:function(t,e){var a=this;0==e.checked?(this.sourceAction=t,this.sourceAction.updatedBy=this.userName,this.Active="In Active",this.sourceAction.isActive,this.findingService.updateAction(this.sourceAction).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)}))):(this.sourceAction=t,this.sourceAction.updatedBy=this.userName,this.Active="Active",this.sourceAction.isActive,this.findingService.updateAction(this.sourceAction).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)})))}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.findingService.getFindingList().subscribe((function(e){return t.onDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onDataLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allFindingsInfo=t}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"open",value:function(t){this.isEditMode=!1,this.isDeleteMode=!1,this.disableSave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=new q,this.sourceAction.isActive=!0,this.findingName="",this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceAction=e,this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openEdit",value:function(t,e){this.isEditMode=!0,this.disableSave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=e,this.findingName=this.sourceAction.findingCode,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"eventHandler",value:function(t){var e=t.target.value.toLowerCase();this.selectedActionName&&(e==this.selectedActionName.toLowerCase()?this.disableSave=!0:this.disableSave=!1)}},{key:"partnmId",value:function(t){for(var e=0;e<this.allFindingsInfo.length;e++)t==this.allFindingsInfo[e].findingCode&&(this.disableSave=!0,this.selectedActionName=t)}},{key:"filterFindings",value:function(t){this.localCollection=[];for(var e=0;e<this.allFindingsInfo.length;e++){var a=this.allFindingsInfo[e].findingCode;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(this.actionamecolle.push([{findingId:this.allFindingsInfo[e].findingId,findingName:a}]),this.localCollection.push(a))}}},{key:"openHist",value:function(t,e){var a=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.sourceAction=e,this.isSaving=!0,this.findingService.historyAcion(this.sourceAction.findingId).subscribe((function(e){return a.onHistoryLoadSuccessful(e[0],t)}),(function(t){return a.saveFailedHelper(t)}))}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openView",value:function(t,e){this.sourceAction=e,this.finding_Name=e.findingCode,this.description=e.description,this.memo=e.memo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHelpText",value:function(t){this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"editItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,0==this.isEditMode?(this.sourceAction.createdBy=this.userName,this.sourceAction.updatedBy=this.userName,this.sourceAction.findingCode=this.findingName,this.sourceAction.masterCompanyId=1,this.findingService.newAction(this.sourceAction).subscribe((function(e){return t.saveSuccessHelper(e)}),(function(e){return t.saveFailedHelper(e)}))):(this.sourceAction.updatedBy=this.userName,this.sourceAction.findingCode=this.findingName,this.sourceAction.masterCompanyId=1,this.findingService.updateAction(this.sourceAction).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)}))),this.modal.close()}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.findingService.deleteAcion(this.sourceAction.findingId).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.loadData()}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"getDismissReason",value:function(t){return t===w.a.ESC?"by pressing ESC":t===w.a.BACKDROP_CLICK?"by clicking on a backdrop":"with: "+t}},{key:"showAuditPopup",value:function(t,e){this.auditFinding(e),this.modal=this.modalService.open(t,{size:"sm"})}},{key:"auditFinding",value:function(t){var e=this;this.AuditDetails=[],this.findingService.getAuditById(t).subscribe((function(t){t.length>0&&(e.AuditDetails=t,e.AuditDetails[0].ColumnsToAvoid=["findingAuditId","findingId","masterCompanyId","createdBy","createdDate","updatedDate"])}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();$.ctorParameters=function(){return[{type:u.a},{type:b.a},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:W.a},{type:m.b}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],$.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],$.prototype,"sort",void 0),$=n.b([Object(s.Component)({selector:"app-findings",template:n.c(a("DzsG")).default,animations:[h.a],styles:[n.c(a("CLit")).default]})],$);var Y,K,J=function t(e,a,n,s,i,r,o,l,d){_classCallCheck(this,t),this.isActive=!1,this.assetIntangibleTypeId=e,this.assetIntangibleName=a||"",this.assetIntangibleMemo=n||"",this.createdBy=s||"admin",this.createdDate=i,this.updatedDate=r,this.updatedBy=o,this.isActive=l,this.isDelete=d},Q=a("hOPT");!function(t){t[t.View=1]="View",t[t.Add=2]="Add",t[t.Update=3]="Update",t[t.Delete=4]="Delete",t[t.Audit=5]="Audit",t[t.None=0]="None"}(Y||(Y={})),function(t){t[t.Queued=1]="Queued",t[t.Invalid=2]="Invalid",t[t.Duplicate=3]="Duplicate",t[t.Unique=4]="Unique",t[t.Success=5]="Success",t[t.Failed=6]="Failed"}(K||(K={}));var Z=function(){function t(e,a,n,s,i,r,o){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.configurations=n,this.alertService=s,this.coreDataService=i,this.modalService=r,this.authService=o,this.itemList=[],this.disableSave=!1,this.pageIndex=0,this.pageSize=10,this.auditHistory=[],this.formData=new FormData,this.allAssetIntangibleTypes=[],this.localCollection=[],this.isEditMode=!1,this.isDeleteMode=!1,this.code_Name="",this.disableSaveForEdit=!1,this.currentstatus="Active",this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData()}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"addNewItem",value:function(){this.currentRow=this.newItem(0),this.currentModeOfOperation=Y.Add}},{key:"changePage",value:function(t){var e=t.first/t.rows;this.pageIndex=e,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkItemExists",value:function(t){this.getItemList();var e=this.newItem(t);return this.itemList.some((function(t){return t.assetIntangibleTypeId===e.assetIntangibleTypeId}))}},{key:"confirmItemDelete",value:function(t){this.currentRow=this.newItem(t),this.code_Name=t.assetIntangibleTypeName,this.currentModeOfOperation=Y.Delete}},{key:"deleteItem",value:function(){var t=this,e=this.currentRow;console.log("item",e);var a=this.checkItemExists(e);console.log("itemExists : ",a),a&&(this.currentModeOfOperation=Y.Update,e.updatedBy=this.userName,e.isDelete=!0,this.coreDataService.remove(e.assetIntangibleTypeId).subscribe((function(e){t.alertService.showMessage("Success",t.rowName+" removed successfully.",g.d.success),t.getItemList()}))),this.dismissModal()}},{key:"dismissModal",value:function(){this.currentRow=this.newItem(0),this.auditHistory=[],this.currentModeOfOperation=Y.None}},{key:"getItemList",value:function(){var t=this;this.coreDataService.getAll().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"newItem",value:function(t){var e=new J;return t?(e.assetIntangibleTypeId=t.assetIntangibleTypeId||0,e.assetIntangibleName=t.assetIntangibleTypeName||t.assetIntangibleName||"",e.assetIntangibleMemo=t.assetIntangibleTypeMemo||t.assetIntangibleMemo||"",e.updatedBy=this.userName||"admin",e.createdBy=this.userName||"admin",e.isActive=t.isActive||!1,e.isDelete=t.isDelete||!1):e.isActive=!0,e}},{key:"openItemForEdit",value:function(t){console.log(t.assetIntangibleTypeId),this.currentRow=this.newItem(t),this.currentRow=Object.assign({},t,{assetIntangibleName:Object(D.d)("assetIntangibleTypeId",t.assetIntangibleTypeId,this.itemList)}),console.log(this.currentRow),this.currentModeOfOperation=Y.Update}},{key:"saveNewItem",value:function(){var t=this;this.currentModeOfOperation=Y.Add,this.coreDataService.add(this.currentRow).subscribe((function(e){t.alertService.showMessage("Success",t.rowName+" added successfully.",g.d.success),t.getItemList()})),this.currentModeOfOperation=Y.None}},{key:"saveExistingItem",value:function(t){var e=this,a=this.newItem(t);if(this.checkItemExists(a)){this.currentModeOfOperation=Y.Update,console.log("item",a);var n=Object.assign({},a,{updatedBy:this.userName,createdDate:a.createdDate,assetIntangibleName:Object(D.a)("assetIntangibleName",a.assetIntangibleName)});console.log(n),this.coreDataService.update(n).subscribe((function(t){e.alertService.showMessage("Success","Asset Intangible Type updated successfully.",g.d.success),e.getItemList()}))}else this.saveNewItem();this.dismissModal()}},{key:"showHistory",value:function(t){var e=this;this.currentModeOfOperation=Y.Audit;var a=this.newItem(t);this.coreDataService.getItemAuditById(a.assetIntangibleTypeId).subscribe((function(t){t[0].length>0&&(e.auditHistory=t[0])}))}},{key:"showItemEdit",value:function(t){this.disableSaveForEdit=!0,console.log(t.assetIntangibleTypeId),this.currentRow=this.newItem(t),this.currentRow=Object.assign({},t,{assetIntangibleName:Object(D.d)("assetIntangibleTypeId",t.assetIntangibleTypeId,this.itemList)}),console.log(this.currentRow),this.currentModeOfOperation=Y.Update}},{key:"toggleActiveStatus",value:function(t){this.currentRow=this.newItem(t),this.saveExistingItem(this.currentRow)}},{key:"updateItem",value:function(){this.saveExistingItem(this.currentRow)}},{key:"viewItemDetails",value:function(t){this.itemDetails=t}},{key:"loadData",value:function(){this.getItemList(),this.columnHeaders=[{field:"assetIntangibleName",header:"Name",index:1,showByDefault:!0},{field:"assetIntangibleMemo",header:"Memo",index:2,showByDefault:!0}],this.selectedColumns=this.columnHeaders}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=AssetIntangibleType&fileName=AssetIntangibleType.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;a.length>0&&(this.formData.append("file",a[0]),this.coreDataService.bulkUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getItemList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"showBulkUploadResult",value:function(t){var e=t.filter((function(t){return t.UploadTag==K.Success})),a=t.filter((function(t){return t.UploadTag==K.Failed})),n=t.filter((function(t){return t.UploadTag==K.Duplicate}));this.alertService.showMessage("Success","".concat(e," ").concat(this.rowName).concat(e>1?"s":""," uploaded successfully."),g.d.success),this.alertService.showMessage("Error","".concat(a," ").concat(this.rowName).concat(a>1?"s":""," failed to upload."),g.d.error),this.alertService.showMessage("Info","".concat(n," ").concat(n>1?"duplicates":"duplicate"," ignored."),g.d.info)}},{key:"eventHandler",value:function(t){var e=t.target.value.toLowerCase();this.selectedAssetIntangible&&(e==this.selectedAssetIntangible.toLowerCase()?this.disableSave=!0:this.disableSave=!1)}},{key:"itemId",value:function(t){for(var e=0;e<this.allAssetIntangibleTypes.length;e++)t==this.allAssetIntangibleTypes[e][0].assetIntangibleName&&(this.disableSave=!0,this.selectedAssetIntangible=t)}},{key:"selectedName",value:function(t){var e=Object(D.k)("assetIntangibleName",t,this.currentRow);this.disableSave=!e}},{key:"filterAssetIntangibleName",value:function(t){this.filteredItemList=this.itemList;var e=_toConsumableArray(this.itemList.filter((function(e){return e.assetIntangibleName.toLowerCase().includes(t.query.toLowerCase())})));this.filteredItemList=e}},{key:"filterIntangibleNames",value:function(t){this.localCollection=[];for(var e=0;e<this.itemList.length;e++){var a=this.itemList[e].assetIntangibleName;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(this.allAssetIntangibleTypes.push([{assetIntangibleTypeId:this.itemList[e].assetIntangibleTypeId,assetIntangibleName:a}]),this.localCollection.push(a))}console.log("this.localCollection",this.localCollection)}},{key:"checkReasonCodeExists",value:function(t,e){Object(D.m)(t,e,this.itemList,this.currentRow).length>0?this.disableSave=!0:this.disableSave=!1}},{key:"viewItemDetailsClick",value:function(t,e){this.itemDetails=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"dismissModel",value:function(){this.currentModeOfOperation=Y.None,this.modal.close()}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.itemList=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.itemList=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.itemList=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.itemList=e)),this.totalRecords=this.itemList.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("AssetIntangibleType","AssetIntangibleTypeId",this.restorerecord.assetIntangibleTypeId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:"admin"}}]),t}();Z.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:A.a},{type:g.b},{type:Q.a},{type:w.c},{type:f.a}]},Z=n.b([Object(s.Component)({selector:"app-asset-intangible-type",template:n.c(a("+Qc1")).default,animations:[h.a],styles:[n.c(a("R+7W")).default]})],Z);var X=function t(e,a,n,s,i,r,o,l,d,c,u,p,m,h,v,b,g,f,y,w,D,S,k){_classCallCheck(this,t),this.isDelete=!1,this.isDeleted=!1,this.isActive=!1,this.assetIntangibleAttributeTypeId=e,this.assetIntangibleTypeId=a||0,this.assetDepreciationMethodId=n||0,this.amortizationMethod=m||0,this.intangibleLife=s||0,this.amortizationFrequency=i||"",this.assetAmortizationIntervalId=r||0,this.intangibleGLAccountId=o||0,this.amortExpenseGLAccountId=l||0,this.accAmortDeprGLAccountId=d||0,this.depreciationMethod=c||0,this.intangibleWriteDownGLAccountId=u||0,this.intangibleWriteOffGLAccountId=p||0,this.managementStructureId=h||0,this.masterCompanyId=v||0,this.intangibleLifeYears=b||0,this.createdBy=g||"admin",this.createdDate=y,this.updatedDate=w,this.updatedBy=f,this.isActive=D,this.isDelete=S,this.isDeleted=k},tt=a("zmE7"),et=a("yKWY"),at=a("h55p"),nt=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.commonservice=n,this.glAccountService=s,this.legalEntityService=i,this.configurations=r,this.alertService=o,this.coreDataService=l,this.modalService=d,this.authService=c,this.assetIntangibleTypeService=u,this.itemList=[],this.filteredGLAccountList=[],this.filteredAssetSaleList=[],this.assetWriteOffList=[],this.filteredWriteOffList=[],this.assetWriteDownList=[],this.filteredAssetWriteDownList=[],this.companyListData=[],this.disableSave=!1,this.pageIndex=0,this.pageSize=10,this.allGlInfo=[],this.auditHistory=[],this.formData=new FormData,this.allAssetIntangibleAttributeTypes=[],this.localCollection=[],this.isEditMode=!1,this.isDeleteMode=!1,this.depreciationFreqList=[],this.depreciationMethodList=[],this.percentageList=[],this.selectedCompanyID=[],this.selectedBUId=0,this.selectedDivisionID=0,this.selectedDeptID=0,this.filteredDepriciationMethod=[],this.recordExists=!1,this.currentstatus="Active",this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.loadData()}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData()}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getItemList()}},{key:"addNewItem",value:function(){this.disableSave=!1,this.currentRow=this.newItem(0),this.selectedCompanyID=[],this.disableForMgmtStructure=!0,this.currentModeOfOperation=Y.Add}},{key:"getIntangibleTypeList",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.assetIntangibleTypeService.getAll().subscribe((function(e){return t.onIntangibleTypeLoad(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"onIntangibleTypeLoad",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allAssetIntangibleTypes=t,this.allAssetIntangibleAttributeTypes=t}},{key:"glList",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.glAccountService.getAll().subscribe((function(e){return t.onGlAccountLoad(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"onGlAccountLoad",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allGlInfo=t,this.loadSelectedNames()}},{key:"filterIntangibleType",value:function(t){this.filteredAssetIntangibleTypes=this.allGlInfo;var e=_toConsumableArray(this.allAssetIntangibleTypes.filter((function(e){return e.assetIntangibleName.toLowerCase().includes(t.query.toLowerCase())})));this.filteredAssetIntangibleTypes=e}},{key:"filterGLAccount",value:function(t){this.filteredGLAccountList=this.allGlInfo;var e=_toConsumableArray(this.allGlInfo.filter((function(e){return e.accountName.toLowerCase().includes(t.query.toLowerCase())})));this.filteredGLAccountList=e}},{key:"filterAssetSale",value:function(t){this.filteredAssetSaleList=this.allGlInfo;var e=_toConsumableArray(this.allGlInfo.filter((function(e){return e.accountName.toLowerCase().includes(t.query.toLowerCase())})));this.filteredAssetSaleList=e}},{key:"filterAssetWriteOff",value:function(t){this.filteredWriteOffList=this.allGlInfo;var e=_toConsumableArray(this.allGlInfo.filter((function(e){return e.accountName.toLowerCase().includes(t.query.toLowerCase())})));this.filteredWriteOffList=e}},{key:"filterAssetWriteDown",value:function(t){this.filteredAssetWriteDownList=this.allGlInfo;var e=_toConsumableArray(this.allGlInfo.filter((function(e){return e.accountName.toLowerCase().includes(t.query.toLowerCase())})));this.filteredAssetWriteDownList=e}},{key:"getAllPercentage",value:function(){var t=this;this.commonservice.smartDropDownList("[Percent]","PercentId","PercentValue").subscribe((function(e){t.percentageList=e}))}},{key:"getAllFrequency",value:function(){var t=this;this.commonservice.smartDropDownList("[AssetDepreciationFrequency]","AssetDepreciationFrequencyId","Name").subscribe((function(e){t.depreciationFreqList=e}))}},{key:"getAllDepreMthod",value:function(){var t=this;this.commonservice.smartDropDownList("[AssetDepreciationMethod]","AssetDepreciationMethodId","AssetDepreciationMethodName").subscribe((function(e){t.depreciationMethodList=e}))}},{key:"loadSelectedNames",value:function(){for(var t=0;t<this.itemList.length;t++){var e="";if(this.itemList[t].depreciationMethodName=this.getDeprMethodNameById(this.itemList[t].assetDepreciationMethodId),this.itemList[t].assetIntangibleName=this.itemId(this.itemList[t].assetIntangibleTypeId),this.itemList[t].Name=this.getAmortFrequencyById(this.itemList[t].assetAmortizationIntervalId),this.itemList[t].accAmortdeprGL=this.getAccCodeById(this.itemList[t].accAmortDeprGLAccountId),this.itemList[t].amortExpenseGL=this.getAccCodeById(this.itemList[t].amortExpenseGLAccountId),this.itemList[t].intangibleGL=this.getAccCodeById(this.itemList[t].intangibleGLAccountId),this.itemList[t].intangiblewritedoffGL=this.getAccCodeById(this.itemList[t].intangibleWriteOffGLAccountId),this.itemList[t].intangiblewritedDownGL=this.getAccCodeById(this.itemList[t].intangibleWriteDownGLAccountId),null!=this.itemList[t].selectedCompanyIds&&null!=this.itemList[t].selectedCompanyIds)for(var a=this.itemList[t].selectedCompanyIds.split(","),n=0;n<a.length;n++)""==e?e+=this.getCompanyName(a[n]):e=e+", "+this.getCompanyName(a[n]);this.itemList[t].selectedCompanyNames=e}}},{key:"getAccNameById",value:function(t){for(var e=0;e<this.allGlInfo.length;e++)if(this.allGlInfo[e].glAccountId==t)return this.allGlInfo[e].accountName;return""}},{key:"getAccCodeById",value:function(t){for(var e=0;e<this.allGlInfo.length;e++)if(this.allGlInfo[e].glAccountId==t)return this.allGlInfo[e].accountCode;return""}},{key:"getDeprMethodNameById",value:function(t){for(var e=0;e<this.depreciationMethodList.length;e++)if(this.depreciationMethodList[e].value==t)return this.depreciationMethodList[e].label;return""}},{key:"getAmortFrequencyById",value:function(t){for(var e=0;e<this.depreciationFreqList.length;e++)if(this.depreciationFreqList[e].value==t)return this.depreciationFreqList[e].label;return""}},{key:"selectedIntangibleType",value:function(t){console.log(t.assetIntangibleTypeId);for(var e=0;e<this.itemList.length;e++)if(this.itemList[e].assetIntangibleTypeId===t.assetIntangibleTypeId&&2==this.currentModeOfOperation||this.itemList[e].assetIntangibleTypeId===t.assetIntangibleTypeId&&3==this.currentModeOfOperation&&this.currentRow.assetIntangibleAttributeTypeId!=this.itemList[e].assetIntangibleAttributeTypeId)return this.recordExists=!0,void(this.disableSave=!0);this.disableSave=!1,this.recordExists=!1}},{key:"companySelected",value:function(){null!=this.selectedCompanyID&&this.selectedCompanyID.length>0?this.disableForMgmtStructure=!1:this.disableForMgmtStructure=!0,1==this.isEditMode&&null!=this.selectedCompanyID&&this.selectedCompanyID.length>0&&(this.disableSave=!1)}},{key:"buSelected",value:function(){var t=this;this.mgmtStructureId=this.selectedBUId,"0"!==this.selectedBUId.toString()?this.mgmtStructureId=this.selectedBUId:this.mgmtStructureId=this.selectedCompanyID,this.departmentList=[],this.selectedDeptID=0,this.selectedDivisionID=0,this.divisionList=this.allmgmtData.filter((function(e){return e.parentId===t.selectedBUId}))}},{key:"divisionSelected",value:function(){var t=this;"0"!==this.selectedDivisionID.toString()?this.mgmtStructureId=this.selectedDivisionID:this.mgmtStructureId=this.selectedBUId,this.departmentList=this.allmgmtData.filter((function(e){return e.parentId===t.selectedDivisionID}))}},{key:"departmentSelected",value:function(){"0"!==this.selectedDeptID.toString()?this.mgmtStructureId=this.selectedDeptID:this.mgmtStructureId=this.selectedDivisionID}},{key:"populateMgmtStructure",value:function(t){var e=this.findmgmtRecord(t),a=null,n=null,s=null,i=null,r=null,o=null,l=null;return null!=e&&null!==e&&null!==e.parentId&&(a=this.findmgmtSiblingRecords(e.parentId),n=this.findmgmtRecord(e.parentId)),null!=n&&null!=n&&null!==n.parentId&&(s=this.findmgmtSiblingRecords(n.parentId),i=this.findmgmtRecord(n.parentId)),null!=i&&null!=i&&null!==i.parentId&&(r=this.findmgmtSiblingRecords(i.parentId),o=this.findmgmtRecord(i.parentId)),null!=o&&null!=o&&null!==o.parentId&&(this.findmgmtSiblingRecords(o.parentId),l=this.findmgmtRecord(o.parentId)),null!=l&&null!=l&&null!==l.parentId&&(this.findmgmtSiblingRecords(l.parentId),this.findmgmtRecord(l.parentId)),null==n||null===n?(this.selectedCompanyID=t,this.selectedBUId=0,this.selectedDivisionID=0,void(this.selectedDeptID=0)):null==i||null===i?(this.buList=a,this.selectedBUId=t,this.selectedCompanyID=n.managementStructureId,this.selectedDivisionID=0,void(this.selectedDeptID=0)):null==o||null===o?(this.divisionList=a,this.selectedDivisionID=t,this.buList=s,this.selectedBUId=n.managementStructureId,this.selectedCompanyID=i.managementStructureId,void(this.selectedDeptID=0)):null==l||null===l?(this.departmentList=a,this.selectedDeptID=t,this.divisionList=s,this.selectedDivisionID=n.managementStructureId,this.buList=r,this.selectedBUId=i.managementStructureId,void(this.selectedCompanyID=o.managementStructureId)):void 0}},{key:"findmgmtRecord",value:function(t){return this.allmgmtData.find((function(e){return e.managementStructureId===t}))}},{key:"findmgmtSiblingRecords",value:function(t){return this.allmgmtData.filter((function(e){return e.parentId==t}))}},{key:"changePage",value:function(t){var e=t.first/t.rows;this.pageIndex=e,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkItemExists",value:function(t){return!0}},{key:"confirmItemDelete",value:function(t){this.currentRow=t,this.currentModeOfOperation=Y.Delete}},{key:"deleteItem",value:function(){var t=this,e=this.currentRow;console.log("item",e);var a=this.checkItemExists(e);console.log("itemExists : ",a),a&&(this.currentModeOfOperation=Y.Update,e.updatedBy=this.userName,e.isDelete=!0,this.coreDataService.remove(e.assetIntangibleAttributeTypeId).subscribe((function(e){t.alertService.showMessage("Success",t.rowName+" removed successfully.",g.d.success),t.getItemList()}))),this.dismissModal()}},{key:"dismissModal",value:function(){this.currentRow=this.newItem(0),this.auditHistory=[],this.currentModeOfOperation=Y.None}},{key:"getItemList",value:function(){var t=this;this.coreDataService.getAll().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"newItem",value:function(t){var e=new X;return this.disableForMgmtStructure=!0,t?(e.assetIntangibleAttributeTypeId=t.assetIntangibleAttributeTypeId||0,e.updatedBy=this.userName||"admin",e.createdBy=this.userName||"admin",e.isActive=t.isActive||!1,e.isDelete=t.isDelete||!1,e.isDeleted=t.isDeleted||!1):(e.isActive=!0,this.selectedCompanyID=0,this.selectedBUId=0,this.selectedDivisionID=0,this.selectedDivisionID=0),this.recordExists=!1,e}},{key:"openItemForEdit",value:function(t){console.log(t.assetIntangibleAttributeTypeId),this.currentRow=this.newItem(t),this.recordExists=!1,this.currentRow=Object.assign({},t,{assetIntangibleAttributeName:Object(D.d)("assetIntangibleAttributeTypeId",t.assetIntangibleAttributeTypeId,this.itemList)}),console.log(this.currentRow),this.currentModeOfOperation=Y.Update}},{key:"saveNewItem",value:function(){var t=this;this.currentModeOfOperation=Y.Add;var e=Object.assign({},this.currentRow,{createdBy:this.userName,updatedBy:this.userName,IsActive:this.currentRow.isActive,IsDeleted:this.currentRow.isDelete,assetIntangibleTypeId:Object(D.a)("assetIntangibleTypeId",this.currentRow.assetIntangibleTypeId),assetDepreciationMethodId:Object(D.a)("value",this.currentRow.assetDepreciationMethodId),intangibleLifeYears:Object(D.a)("IntangibleLifeYears",this.currentRow.intangibleLifeYears),assetAmortizationIntervalId:Object(D.a)("value",this.currentRow.assetAmortizationIntervalId),intangibleGLAccountId:Object(D.a)("glAccountId",this.currentRow.intangibleGLAccountId),amortExpenseGLAccountId:Object(D.a)("glAccountId",this.currentRow.amortExpenseGLAccountId),accAmortDeprGLAccountId:Object(D.a)("glAccountId",this.currentRow.accAmortDeprGLAccountId),intangibleWriteDownGLAccountId:Object(D.a)("glAccountId",this.currentRow.intangibleWriteDownGLAccountId),intangibleWriteOffGLAccountId:Object(D.a)("glAccountId",this.currentRow.intangibleWriteOffGLAccountId),managementStructureId:this.companyListData[0].value,MasterCompanyId:1,selectedCompanyIds:this.selectedCompanyID.join(", ")});this.coreDataService.add(e).subscribe((function(e){t.alertService.showMessage("Success",t.rowName+" added successfully.",g.d.success),t.getItemList()})),this.currentModeOfOperation=Y.None}},{key:"saveExistingItem",value:function(t){var e=this,a=this.newItem(t);if(this.checkItemExists(a)){this.currentModeOfOperation=Y.Update,a.updatedBy=this.userName;var n=Object.assign({},this.currentRow,{updatedBy:this.userName,IsActive:this.currentRow.isActive,IsDeleted:this.currentRow.isDelete,assetIntangibleTypeId:Object(D.a)("assetIntangibleTypeId",this.currentRow.assetIntangibleTypeId),assetDepreciationMethodId:Object(D.a)("value",this.currentRow.assetDepreciationMethodId),intangibleLifeYears:Object(D.a)("IntangibleLifeYears",this.currentRow.intangibleLifeYears),assetAmortizationIntervalId:Object(D.a)("value",this.currentRow.assetAmortizationIntervalId),intangibleGLAccountId:Object(D.a)("glAccountId",this.currentRow.intangibleGLAccountId),amortExpenseGLAccountId:Object(D.a)("glAccountId",this.currentRow.amortExpenseGLAccountId),accAmortDeprGLAccountId:Object(D.a)("glAccountId",this.currentRow.accAmortDeprGLAccountId),intangibleWriteDownGLAccountId:Object(D.a)("glAccountId",this.currentRow.intangibleWriteDownGLAccountId),intangibleWriteOffGLAccountId:Object(D.a)("glAccountId",this.currentRow.intangibleWriteOffGLAccountId),managementStructureId:this.companyListData[0].value,MasterCompanyId:1,selectedCompanyIds:this.selectedCompanyID.join(",")});console.log("data",n),this.coreDataService.update(n).subscribe((function(t){e.alertService.showMessage("Success",e.rowName+" updated successfully.",g.d.success),e.getItemList()}))}else this.saveNewItem();this.dismissModal()}},{key:"showHistory",value:function(t){var e=this;this.currentModeOfOperation=Y.Audit;var a=this.newItem(t);this.coreDataService.getItemAuditById(a.assetIntangibleAttributeTypeId).subscribe((function(t){t[0].length>0&&(e.auditHistory=t[0])}))}},{key:"showItemEdit",value:function(t){console.log(t),this.disableSave=!1,this.recordExists=!1,this.isEditMode=!0,this.currentRow=Object.assign({},t,{assetIntangibleTypeId:Object(D.d)("assetIntangibleTypeId",t.assetIntangibleTypeId,this.allAssetIntangibleAttributeTypes),assetDepreciationMethodId:Object(D.d)("value",t.assetDepreciationMethodId,this.depreciationMethodList),assetAmortizationIntervalId:Object(D.d)("value",t.assetAmortizationIntervalId,this.depreciationFreqList),amortizationFrequency:t.assetAmortizationIntervalId,amortExpenseGLAccountId:Object(D.d)("glAccountId",t.amortExpenseGLAccountId,this.allGlInfo),accAmortDeprGLAccountId:Object(D.d)("glAccountId",t.accAmortDeprGLAccountId,this.allGlInfo),intangibleGLAccountId:Object(D.d)("glAccountId",t.intangibleGLAccountId,this.allGlInfo),intangibleWriteDownGLAccountId:Object(D.d)("glAccountId",t.intangibleWriteDownGLAccountId,this.allGlInfo),intangibleWriteOffGLAccountId:Object(D.d)("glAccountId",t.intangibleWriteOffGLAccountId,this.allGlInfo)}),console.log(this.currentRow),this.currentRow=Object.assign({},this.currentRow),this.mgmtStructureId=this.currentRow.managementStructureId,this.populateMgmtStructure(this.currentRow.managementStructureId),this.selectedCompanyID=null!=t.selectedCompanyIds&&null!=t.selectedCompanyIds?t.selectedCompanyIds.split(","):[],""!=t.selectedCompanyIds?this.disableForMgmtStructure=!1:this.disableForMgmtStructure=!0;for(var e=0;e<this.itemList.length;e++)this.itemList[e].assetIntangibleAttributeTypeId==this.currentRow.assetIntangibleAttributeTypeId&&(this.selectedRow=this.itemList[e]);this.currentModeOfOperation=Y.Update}},{key:"toggleActiveStatus",value:function(t){this.currentRow=t,this.selectedCompanyID=null!=t.selectedCompanyIds&&null!=t.selectedCompanyIds?t.selectedCompanyIds.split(","):[],this.saveExistingItem(t)}},{key:"updateItem",value:function(){this.saveExistingItem(this.currentRow)}},{key:"viewItemDetails",value:function(t){this.itemDetails=t}},{key:"loadManagementdata",value:function(){var t=this;this.legalEntityService.getManagemententity().subscribe((function(e){t.loadHierarchy(e[0])}))}},{key:"loadHierarchy",value:function(t){if(this.allmgmtData=t,this.companyListData=[],this.companyList=this.allmgmtData.filter((function(t){return null==t.parentId})),this.companyList.length>0)for(var e=0;e<this.companyList.length;e++)this.companyListData.push({value:this.companyList[e].managementStructureId,label:this.companyList[e].code})}},{key:"getCompanyName",value:function(t){for(var e="",a=0;a<this.companyListData.length;a++)if(this.companyListData[a].value==t){e=this.companyListData[a].label;break}return e}},{key:"loadData",value:function(){this.glList(),this.getAllFrequency(),this.getAllDepreMthod(),this.loadManagementdata(),this.getIntangibleTypeList(),this.getItemList(),console.log(this.itemList),this.rowName="Intangible Attribute Type",this.header="Intangible Attribute  Type",this.breadCrumb.currentUrl="/singlepages/singlepages/app-asset-intangible-attribute-type",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.columnHeaders=[{field:"intangibleClass",header:"Intangible Class",index:1,showByDefault:!0},{field:"amortizationMethod",header:"Amortization Method",index:1,showByDefault:!0},{field:"intangibleLifeYears",header:"Intangible Life",index:1,showByDefault:!0},{field:"amortFrequency",header:"Amort Frequency",index:1,showByDefault:!0},{field:"amortExpenseGL",header:"Amort Expense GL",index:1,showByDefault:!0},{field:"accAmortDeprGL",header:"Acc Amort Depr GL",index:1,showByDefault:!0},{field:"intangibleGL",header:"Intangible GL",index:1,showByDefault:!0},{field:"intangibleWriteDownGL",header:"Intangible Write Down GL",index:1,showByDefault:!0},{field:"intangibleWriteOffGL",header:"Intangible Write Off GL",index:1,showByDefault:!0},{field:"selectedCompanyNames",header:"Legal Entity",index:1,showByDefault:!0}],this.currentModeOfOperation=Y.None,this.selectedColumns=this.columnHeaders,this.currentRow=new X,this.currentRow.isActive=!0,this.getItemList()}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=AssetIntangibleAttributeType&fileName=AssetIntangibleAttributeType.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.coreDataService.bulkUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,console.log(a),e.existingRecordsResponse=a,e.showBulkUploadResult(a),e.getItemList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})),console.log(this.existingRecordsResponse))}},{key:"showBulkUploadResult",value:function(t){var e=t.filter((function(t){return t.UploadTag==K.Success})),a=t.filter((function(t){return t.UploadTag==K.Failed})),n=t.filter((function(t){return t.UploadTag==K.Duplicate}));this.alertService.showMessage("Success","".concat(e," ").concat(this.rowName).concat(e>1?"s":""," uploaded successfully."),g.d.success),this.alertService.showMessage("Error","".concat(a," ").concat(this.rowName).concat(a>1?"s":""," failed to upload."),g.d.error),this.alertService.showMessage("Info","".concat(n," ").concat(n>1?"duplicates":"duplicate"," ignored."),g.d.info)}},{key:"eventHandler",value:function(t){var e=t.target.value.toLowerCase();this.selectedAssetIntangible&&(e==this.selectedAssetIntangible.toLowerCase()?this.disableSave=!0:this.disableSave=!1)}},{key:"itemId",value:function(t){for(var e=0;e<this.allAssetIntangibleAttributeTypes.length;e++)if(t==this.allAssetIntangibleAttributeTypes[e].assetIntangibleTypeId)return this.disableSave=!0,this.selectedAssetIntangible=t,this.allAssetIntangibleAttributeTypes[e].assetIntangibleName;return""}},{key:"selectedName",value:function(t){var e=Object(D.k)("assetIntangibleName",t,this.currentRow);this.disableSave=!e}},{key:"filterAssetIntangibleName",value:function(t){this.filteredAssetIntangibleTypes=this.allAssetIntangibleTypes;var e=_toConsumableArray(this.allAssetIntangibleTypes.filter((function(e){return e.assetIntangibleName.toLowerCase().includes(t.query.toLowerCase())})));this.allAssetIntangibleTypes=e}},{key:"filterIntangibleNames",value:function(t){this.localCollection=[];for(var e=0;e<this.itemList.length;e++){var a=this.allAssetIntangibleTypes[e].assetIntangibleName;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(this.allAssetIntangibleAttributeTypes.push([{assetIntangibleName:a}]),this.localCollection.push(a))}console.log("this.localCollection",this.localCollection)}},{key:"checkReasonCodeExists",value:function(t,e){Object(D.m)(t,e,this.itemList,this.currentRow).length>0?this.disableSave=!0:this.disableSave=!1}},{key:"viewItemDetailsClick",value:function(t,e){this.itemDetails=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"dismissModel",value:function(){this.currentModeOfOperation=Y.None,this.modal.close()}},{key:"onBlurCheck",value:function(t,e){if(this.isEditMode)for(var a in this.currentRow)if("assetIntangibleTypeId"==a)Object(D.a)("assetIntangibleTypeId",this.selectedRow.assetIntangibleTypeId)!=Object(D.a)("assetIntangibleTypeId",this.currentRow.assetIntangibleTypeId)&&(this.disableSave=!1);else if("assetDepreciationMethodId"==a)Object(D.a)("value",this.selectedRow.assetDepreciationMethodId)!=Object(D.a)("value",this.currentRow.assetDepreciationMethodId)&&(this.disableSave=!1);else if("intangibleLifeYears"==a)this.selectedRow.intangibleLifeYears!=this.currentRow.intangibleLifeYears&&(this.disableSave=!1);else if("assetAmortizationIntervalId"==a)Object(D.a)("value",this.selectedRow.assetAmortizationIntervalId)!=Object(D.a)("value",this.currentRow.assetAmortizationIntervalId)&&(this.disableSave=!1);else if("amortExpenseGLAccountId"==a)Object(D.a)("glAccountId",this.selectedRow.amortExpenseGLAccountId)!=Object(D.a)("glAccountId",this.currentRow.amortExpenseGLAccountId)&&(this.disableSave=!1);else if("amortExpenseGLAccountId"==a)Object(D.a)("glAccountId",this.selectedRow.amortExpenseGLAccountId)!=Object(D.a)("glAccountId",this.currentRow.amortExpenseGLAccountId)&&(this.disableSave=!1);else if("accAmortDeprGLAccountId"==a)Object(D.a)("glAccountId",this.selectedRow.accAmortDeprGLAccountId)!=Object(D.a)("glAccountId",this.currentRow.accAmortDeprGLAccountId)&&(this.disableSave=!1);else if("intangibleGLAccountId"==a)Object(D.a)("glAccountId",this.selectedRow.intangibleGLAccountId)!=Object(D.a)("glAccountId",this.currentRow.intangibleGLAccountId)&&(this.disableSave=!1);else if("intangibleWriteDownGLAccountId"==a)Object(D.a)("glAccountId",this.selectedRow.intangibleWriteDownGLAccountId)!=Object(D.a)("glAccountId",this.currentRow.intangibleWriteDownGLAccountId)&&(this.disableSave=!1);else if("intangibleWriteOffGLAccountId"==a){var n=Object(D.a)("glAccountId",this.selectedRow.intangibleWriteOffGLAccountId),s=Object(D.a)("glAccountId",this.currentRow.intangibleWriteOffGLAccountId);console.log(n,s),n!=s&&(this.disableSave=!1)}console.log(this.disableSave)}},{key:"onActiveClick",value:function(){1==this.isEditMode&&(this.disableSave=!1)}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.itemList=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.itemList=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.itemList=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.itemList=e)),this.totalRecords=this.itemList.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("AssetIntangibleType","AssetIntangibleTypeId",this.restorerecord.assetIntangibleAttributeTypeId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:"admin"}}]),t}();nt.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:M.a},{type:et.a},{type:at.a},{type:A.a},{type:g.b},{type:tt.a},{type:w.c},{type:f.a},{type:Q.a}]},nt=n.b([Object(s.Component)({selector:"app-asset-intangible-attribute-type",template:n.c(a("ZDcS")).default,animations:[h.a],styles:[n.c(a("2l1+")).default]})],nt);var st=a("55Bf"),it=function t(){_classCallCheck(this,t)},rt=function(){function t(e,a,n,s,i,r,o,l){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.alertService=n,this.masterComapnyService=s,this.configurations=i,this.coreDataService=r,this.modalService=o,this.authService=l,this.display=!0,this.disableSave=!1,this.disableSaveForAsset=!1,this.itemList=[],this.allComapnies=[],this.pageIndex=0,this.pageSize=10,this.localCollection=[],this.allAssetTypes=[],this.isEdit=!1,this.currentstatus="Active",this.new={assetTypeName:"",assetTypeMemo:"",masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getItemList(),this.rowName="Asset Class",this.header="Asset Class",this.breadCrumb.currentUrl="/singlepages/singlepages/app-asset-type",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.columnHeaders=[{field:"assetTypeName",header:"Name",index:1,showByDefault:!0},{field:"assetTypeMemo",header:"Memo",index:2,showByDefault:!0}],this.currentModeOfOperation=Y.None,this.selectedColumns=this.columnHeaders,this.selectedRowforEdit=new it}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"addNewItem",value:function(){this.selectedRowforEdit=new it,this.selectedRowforEdit.createdBy=this.userName,this.selectedRowforEdit.updatedBy=this.userName,this.selectedRowforEdit.mastercompanyid=this.allComapnies[0],this.selectedRowforEdit.isActive=!0,this.currentModeOfOperation=Y.Add}},{key:"getChange",value:function(){this.disableSave=!1,this.disableSaveForAsset=!1}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"bulkUpload",value:function(t){var e=this;this.formData=new FormData;var a=t.target.files;a.length>0&&(this.formData.append("file",a[0]),this.coreDataService.bulkUpload(this.formData).subscribe((function(t){e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success),e.formData=new FormData,e.getItemList()})))}},{key:"changePage",value:function(t){var e=t.first/t.rows;this.pageIndex=e,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkItemExists",value:function(t){return this.getItemList(),this.itemList.some((function(e){return e.assetTypeName==t.assetTypeName}))}},{key:"confirmItemDelete",value:function(t){this.selectedRowforDelete=t,this.currentModeOfOperation=Y.Delete}},{key:"deleteItem",value:function(){var t=this,e=this.selectedRowforDelete;this.checkItemExists(e)&&(this.currentModeOfOperation=Y.Delete,this.coreDataService.remove(this.selectedRowforDelete.assetTypeId).subscribe((function(e){t.alertService.showMessage("Success",t.rowName+" removed successfully.",g.d.success),t.getItemList()}))),this.dismissModal()}},{key:"dismissModal",value:function(){this.selectedRowforEdit=new it,this.selectedRowforEdit.isActive=!0,this.selectedRowforDelete=new it,this.auditHistory=[],this.currentModeOfOperation=Y.None}},{key:"getItemList",value:function(){var t=this;this.coreDataService.getAll().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"filterAssetTypes",value:function(t){var e=_toConsumableArray(this.itemList.filter((function(e){return e.assetTypeName.toLowerCase().includes(t.query.toLowerCase())})));this.itemList=e}},{key:"openItemForEdit",value:function(t){console.log(t),this.addNew=Object.assign({},t,{assetTypeName:Object(D.d)("assetTypeId",t.assetTypeId,this.itemList)}),this.selectedRowforEdit=Object.assign({},this.addNew),this.currentModeOfOperation=Y.Update}},{key:"reorderValues",value:function(t){this.columnHeaders.sort((function(t,e){return t.index>e.index?1:e.index>t.index?-1:0}))}},{key:"saveNewItem",value:function(){var t=this;this.currentModeOfOperation=Y.Add,this.coreDataService.add(this.selectedRowforEdit).subscribe((function(e){t.alertService.showMessage("Success",t.rowName+" added successfully.",g.d.success),t.getItemList()})),this.currentModeOfOperation=Y.None}},{key:"saveExistingItem",value:function(t){var e=this;this.currentModeOfOperation=Y.Update,t.updatedBy=this.userName;var a=Object.assign({},t,{assetTypeName:Object(D.a)("assetTypeName",t.assetTypeName)});this.coreDataService.update(a).subscribe((function(t){e.alertService.showMessage("Success",e.rowName+" updated successfully.",g.d.success),e.getItemList()})),this.dismissModal()}},{key:"showBulkUploadResult",value:function(t){if(t){var e=t.filter((function(t){return t.UploadTag==K.Success})),a=t.filter((function(t){return t.UploadTag==K.Failed})),n=t.filter((function(t){return t.UploadTag==K.Duplicate}));e&&this.alertService.showMessage("Success","".concat(e," ").concat(this.rowName).concat(e>1?"s":""," uploaded successfully."),g.d.success),a&&this.alertService.showMessage("Error","".concat(a," ").concat(this.rowName).concat(a>1?"s":""," failed to upload."),g.d.error),n&&this.alertService.showMessage("Info","".concat(n," ").concat(n>1?"duplicates":"duplicate"," ignored."),g.d.info)}}},{key:"showHistory",value:function(t){var e=this;this.currentModeOfOperation=Y.Audit,this.coreDataService.getItemAuditById(t.assetTypeId).subscribe((function(t){t[0].length>0&&(e.auditHistory=t[0])})),console.log(this.auditHistory)}},{key:"showItemEdit",value:function(t){this.isEdit=!0,this.disableSaveForAsset=!0,console.log(t),this.addNew=Object.assign({},t,{assetTypeName:Object(D.d)("assetTypeId",t.assetTypeId,this.itemList)}),this.selectedRowforEdit=Object.assign({},this.addNew),this.currentModeOfOperation=Y.Update}},{key:"toggleActiveStatus",value:function(t){this.selectedRowforEdit=t,this.saveExistingItem(t)}},{key:"updateItem",value:function(){this.saveExistingItem(this.selectedRowforEdit)}},{key:"viewItemDetails",value:function(t){this.itemDetails=t}},{key:"checkReasonCodeExists",value:function(t,e){Object(D.m)(t,e,this.itemList,this.selectedRowforEdit).length>0?(this.disableSave=!0,this.disableSaveForAsset=!0):(this.disableSave=!1,this.disableSaveForAsset=!1)}},{key:"filterAssetTypeName",value:function(t){this.filteredItemList=this.itemList;var e=_toConsumableArray(this.itemList.filter((function(e){return e.assetTypeName.toLowerCase().includes(t.query.toLowerCase())})));this.filteredItemList=e}},{key:"onBlur",value:function(t){var e=t.target.value;this.disableSave=!1;for(var a=0;a<this.itemList.length;a++){var n=this.itemList[a].assetTypeName,s=this.itemList[a].assetTypeId;if(n.toLowerCase()==e.toLowerCase()){this.isEdit?s!=this.selectedRowforEdit.assetTypeId?this.disableSave=!0:this.disableSave=!1:this.disableSave=!0,console.log("assetTypeName :",n);break}}}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=AssetClass&fileName=AssetClass.xlsx";window.location.assign(t)}},{key:"selectedAssetType",value:function(t){console.log("selectedAssetType",t);var e=Object(D.k)("AssetTypeName",t,this.selectedRowforEdit);2==this.currentModeOfOperation||3==this.currentModeOfOperation&&t.assetTypeId!=this.selectedRowforEdit.assetTypeId?(this.disableSave=!e,this.disableSaveForAsset=!e):(this.disableSave=!1,this.disableSaveForAsset=!1)}},{key:"viewItemDetailsClick",value:function(t,e){this.itemDetails=e,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"dismissModel",value:function(){this.isEdit=!1,this.modal.close()}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.itemList=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.itemList=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.itemList=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.itemList=e)),this.totalRecords=this.itemList.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("AssetType","AssetTypeId",this.restorerecord.assetTypeId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getItemList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:"admin"}}]),t}();rt.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:g.b},{type:b.a},{type:A.a},{type:st.a},{type:w.c},{type:f.a}]},rt=n.b([Object(s.Component)({selector:"app-asset-type",template:n.c(a("ug7/")).default,animations:[h.a],styles:[n.c(a("UUf1")).default]})],rt);var ot=function t(){_classCallCheck(this,t),this.code="",this.stage="",this.sequence=null,this.statusId=null,this.managementStructureId=null,this.description="",this.memo=""},lt=a("dH+i"),dt=a("1G5W"),ct=a("XNiG"),ut=function t(){_classCallCheck(this,t),this.companyId=null,this.buId=null,this.divisionId=null,this.departmentId=null},pt=function(){function t(e,a,n,s,i,r,o){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.configurations=s,this.stageService=i,this.alertService=r,this.commonService=o,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"code",header:"Stage Code"},{field:"stage",header:"Stage Name"},{field:"levelCode1",header:"Level 01"},{field:"levelCode2",header:"Level 02"},{field:"levelCode3",header:"Level 03"},{field:"levelCode4",header:"Level 04"},{field:"sequence",header:"Sequence"},{field:"status",header:"Status"},{field:"description",header:"Description"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveForCode=!1,this.createdDate="",this.disableSaveForEdit=!1,this.managementStructure=new ut,this.addNew=new ot,this.existingRecordsResponse=[],this.onDestroy$=new ct.a,this.disableSaveForSequence=!1,this.currentstatus="Active",this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.breadCrumb.currentUrl="/singlepages/WorkOrder/StageCode",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.getList(),this.getAllWorkOrderStatus(),this.getLegalEntity()}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"getAllWorkOrderStatus",value:function(){var t=this;this.commonService.smartDropDownList("WorkOrderStatus","ID","Description").pipe(Object(dt.a)(this.onDestroy$)).subscribe((function(e){t.workOrderStatusList=e.sort((function(t,e){return t.value-e.value}))}))}},{key:"getLegalEntity",value:function(){var t=this;this.commonService.getLegalEntityList().pipe(Object(dt.a)(this.onDestroy$)).subscribe((function(e){t.legalEntityList=e}))}},{key:"selectedLegalEntity",value:function(t){var e=this;t&&(this.addNew.managementStructureId=t,this.commonService.getBusinessUnitListByLegalEntityId(t).pipe(Object(dt.a)(this.onDestroy$)).subscribe((function(t){e.businessUnitList=t})))}},{key:"selectedBusinessUnit",value:function(t){var e=this;t&&(this.addNew.managementStructureId=t,this.commonService.getDivisionListByBU(t).pipe(Object(dt.a)(this.onDestroy$)).subscribe((function(t){e.divisionList=t})))}},{key:"selectedDivision",value:function(t){var e=this;t&&(this.addNew.managementStructureId=t,this.commonService.getDepartmentListByDivisionId(t).pipe(Object(dt.a)(this.onDestroy$)).subscribe((function(t){e.departmentList=t})))}},{key:"selectedDepartment",value:function(t){t&&(this.addNew.managementStructureId=t)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"customExcelUpload",value:function(){}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=TaxRate&fileName=TaxRate.xlsx";window.location.assign(t)}},{key:"getList",value:function(){var t=this;this.stageService.getWorkOrderStageList().subscribe((function(e){t.originalTableData=e,t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkStageCodeExistOrNot",value:function(t){Object(D.n)(t,this.originalData,"code",this.selectedRecordForEdit).length>0?this.disableSaveForCode=!0:this.disableSaveForCode=!1}},{key:"checkSequenceExistOrNot",value:function(t){Object(D.n)(t,this.originalData,"sequence",this.selectedRecordForEdit).length>0?this.disableSaveForSequence=!0:this.disableSaveForSequence=!1}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"save",value:function(){var t=this;if(this.isEdit){var e=Object.assign({},this.addNew,{updatedBy:this.userName,masterCompanyId:1});this.stageService.updateWorkOrderStageCode(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Updated Stage Code Successfully  ",g.d.success)}))}else{var a=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,masterCompanyId:1});this.stageService.createWorkOrderStageCode(a).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added New Stage Successfully  ",g.d.success)}))}}},{key:"resetForm",value:function(){this.isEdit=!1,this.managementStructure=new ut,this.addNew=new ot,this.selectedRecordForEdit=void 0}},{key:"edit",value:function(t){var e=this;console.log("rowData",t),this.isEdit=!0,this.disableSaveForEdit=!0,this.addNew=Object.assign({},t),this.selectedRecordForEdit=Object.assign({},this.addNew),this.addNew=Object.assign({},this.addNew),null!==this.addNew.managementStructureId&&this.commonService.getManagementStructureDetails(this.addNew.managementStructureId).pipe(Object(dt.a)(this.onDestroy$)).subscribe((function(t){e.selectedLegalEntity(t.Level1),e.selectedBusinessUnit(t.Level2),e.selectedDivision(t.Level3),e.selectedDepartment(t.Level4),e.managementStructure={companyId:void 0!==t.Level1?t.Level1:null,buId:void 0!==t.Level2?t.Level2:null,divisionId:void 0!==t.Level3?t.Level3:null,departmentId:void 0!==t.Level4?t.Level4:null}})),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this,a=t.workOrderStageId,n=t.isActive;this.stageService.updateWorkOrderStageCodeStatus(a,n,this.userName).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success),e.getListByStatus(e.currentstatus)}))}},{key:"viewSelectedRow",value:function(t){var e=Object.assign({},t);this.viewRowData=e}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=Object.assign({},t)}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.stageService.deleteWorkOrderStageCode(this.selectedRowforDelete.workOrderStageId,this.userName).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted Work Order Stage Code Successfully",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"showHistory",value:function(t){this.currentModeOfOperation=Y.Audit}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("WorkOrderStage","WorkOrderStageId",this.restorerecord.workOrderStageId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();pt.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:A.a},{type:lt.a},{type:g.b},{type:M.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],pt.prototype,"modal",void 0),pt=n.b([Object(s.Component)({selector:"app-stage-code",template:n.c(a("sfjE")).default,animations:[h.a]})],pt);var mt=function t(e,a,n,s,i,r,o,l,d){_classCallCheck(this,t),this.isDelete=!1,this.isActive=!1,this.glAccountCategoryId=e,this.glAccountCategoryName=a||"",this.glcid=n||0,this.createdBy=s||"admin",this.createdDate=i,this.updatedDate=r,this.updatedBy=o,this.isActive=l,this.isDelete=d},ht=a("BDQ2"),vt=function(){function t(e,a,n,s,i,r){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.alertService=n,this.coreDataService=s,this.modalService=i,this.authService=r,this.disableSave=!1,this.pageIndex=0,this.pageSize=10,this.disableSaveGLCategoryName=!1,this.disableSaveCategorytype=!1,this.currentstatus="Active",this.new={glAccountCategoryName:"",glcid:null,masterCompanyId:1,isActive:!0,isDeleted:!1},this.addNew=Object.assign({},this.new),this.disableSaveCatagotytypeMsg=!1,this.isEdit=!1,this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData()}},{key:"addNewItem",value:function(){this.disableSaveGLCategoryName=!1,this.currentModeOfOperation=Y.Add,this.addNew=Object.assign({},this.new)}},{key:"changePage",value:function(t){var e=t.first/t.rows;this.pageIndex=e,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkItemExists",value:function(t){this.getItemList();var e=t;return this.itemList.some((function(t){return t.glcid===e.glcid&&t.glAccountCategoryName===e.glAccountCategoryName}))}},{key:"confirmItemDelete",value:function(t){this.currentRow=t,this.currentModeOfOperation=Y.Delete}},{key:"deleteItem",value:function(){var t=this,e=this.currentRow;this.checkItemExists(e)&&(this.currentModeOfOperation=Y.Update,e.updatedBy=this.userName,e.isDelete=!0,this.coreDataService.update(e).subscribe((function(e){t.alertService.showMessage("Success",t.rowName+" removed successfully.",g.d.success),t.getItemList()}))),this.dismissModal()}},{key:"getChange",value:function(){0==this.disableSaveCatagotytypeMsg&&(this.disableSaveGLCategoryName=!1)}},{key:"dismissModal",value:function(){this.currentRow=new mt,this.auditHistory=[],this.currentModeOfOperation=Y.None}},{key:"getItemList",value:function(){var t=this;this.coreDataService.getAll().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"newItem",value:function(t){var e=this.userName||"admin";return t.isActive=t.isActive||!1,t.isDelete=t.isDelete||!1,new mt(t.glAccountCategoryId,t.glAccountCategoryName,t.glcid,t.createdBy,t.createdDate,t.updatedDate,e,t.isActive,t.isDelete)}},{key:"openItemForEdit",value:function(t){this.currentRow=t,this.currentModeOfOperation=Y.Update}},{key:"dismissModel",value:function(){this.viewRowData=void 0}},{key:"saveNewItem",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,name:Object(D.a)("name",this.addNew.glAccountCategoryName)});this.coreDataService.add(e).subscribe((function(e){t.alertService.showMessage("Success",t.rowName+" added successfully.",g.d.success),t.getItemList()})),this.currentModeOfOperation=Y.None}},{key:"saveExistingItem",value:function(t){var e=this;alert(JSON.stringify(t));var a=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,name:Object(D.a)("glAccountCategoryName",this.addNew.glAccountCategoryName)});alert(JSON.stringify(a)),this.coreDataService.update(a).subscribe((function(t){e.getItemList(),e.alertService.showMessage("Success"," updated successfully.",g.d.success)})),this.dismissModal()}},{key:"showHistory",value:function(t){var e=this;this.currentModeOfOperation=Y.Audit;var a=t;this.coreDataService.getItemAuditById(a.glAccountCategoryId).subscribe((function(t){t[0].length>0&&(e.auditHistory=t[0])}))}},{key:"showItemEdit",value:function(t){this.disableSaveCatagotytypeMsg=!1,this.disableSaveGLCategoryName=!0,this.currentRow=t,this.currentModeOfOperation=Y.Update,this.addNew=Object.assign({},t,{glAccountCategoryName:Object(D.d)("glcid",t.glcid,this.originalData)})}},{key:"toggleActiveStatus",value:function(t){var e=this,a=Object.assign({},t);this.coreDataService.update(a).subscribe((function(t){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"updateItem",value:function(){this.saveExistingItem(this.currentRow)}},{key:"viewItemDetails",value:function(t){this.itemDetails=t}},{key:"loadData",value:function(){this.getItemList(),this.rowName="GL Account Category",this.header="GL Account Category",this.breadCrumb.currentUrl="/singlepages/singlepages/app-gl-account-category",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.columnHeaders=[{field:"glcid",header:"GLC Id",index:1,showByDefault:!0},{field:"glAccountCategoryName",header:"Name",index:2,showByDefault:!0}],this.currentModeOfOperation=Y.None,this.selectedColumns=this.columnHeaders,this.currentRow=new mt}},{key:"checkGLACategoryTypeExists",value:function(t,e){console.log("this.selectedRecordForEdit",this.selectedRecordForEdit);var a=Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit);console.log(a),a.length>0?(this.disableSaveGLCategoryName=!0,this.disableSaveCatagotytypeMsg=!0):(this.disableSaveGLCategoryName=!1,this.disableSaveCatagotytypeMsg=!1)}},{key:"filterGLACategoryType",value:function(t){var e=this,a=_toConsumableArray(this.originalData.filter((function(a){return t.query?a.glAccountCategoryName.toLowerCase().includes(t.query.toLowerCase()):e.originalData})));this.glAccountCategoryList=a}},{key:"selectedGLACategoryType",value:function(t){var e=Object(D.k)("glAccountCategoryName ",t,this.selectedRecordForEdit);!this.isEdit||this.isEdit&&t.glcid!=this.selectedRecordForEdit.glcid?this.disableSaveGLCategoryName=!e:this.disableSaveGLCategoryName=!1}},{key:"onBlur",value:function(t){var e=t.target.value;this.disableSaveCatagotytypeMsg=!1;for(var a=0;a<this.originalData.length;a++){var n=this.originalData[a].glAccountCategoryName,s=this.originalData[a].glcid;if(n.toLowerCase()==e.toLowerCase()){!this.isEdit||this.isEdit?(this.disableSaveGLCategoryName=!0,this.disableSaveCatagotytypeMsg=!0):s!=this.selectedRecordForEdit.glcid?(this.disableSaveGLCategoryName=!1,this.disableSaveCatagotytypeMsg=!0):(this.disableSaveGLCategoryName=!1,this.disableSaveCatagotytypeMsg=!1);break}}}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.itemList=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.itemList=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.itemList=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.itemList=e)),this.totalRecords=this.itemList.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("GLAccountCategory","GLAccountCategoryId",this.restorerecord.glAccountCategoryId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){}},{key:"changeStatus",value:function(t){}},{key:"sampleExcelDownload",value:function(){}},{key:"bulkUpload",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:"admin"}}]),t}();vt.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:g.b},{type:ht.a},{type:w.c},{type:f.a}]},vt=n.b([Object(s.Component)({selector:"app-gl-account-category",template:n.c(a("85Bt")).default,animations:[h.a]})],vt);var bt=function t(e,a,n,s,i,r,o,l,d){_classCallCheck(this,t),this.isDelete=!1,this.isActive=!1,this.expenditureCategoryId=e,this.description=a||"",this.memo=n||"",this.createdBy=s||"admin",this.createdDate=i,this.updatedDate=r,this.updatedBy=o,this.isActive=l,this.isDelete=d},gt=a("sQcx"),ft=function(){function t(e,a,n,s,i,r){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.alertService=n,this.coreDataService=s,this.modalService=i,this.authService=r,this.reasonPagination=[],this.itemList=[],this.disableSave=!1,this.disableSaveForEdit=!1,this.pageIndex=0,this.pageSize=10,this.currentstatus="Active",this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData()}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"addNewItem",value:function(){this.currentRow=new bt,this.currentModeOfOperation=Y.Add}},{key:"changePage",value:function(t){var e=t.first/t.rows;this.pageIndex=e,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkItemExists",value:function(t){this.getItemList();var e=t;return this.itemList.some((function(t){return t.description===e.description&&t.memo===e.memo}))}},{key:"confirmItemDelete",value:function(t){this.currentRow=t,this.currentModeOfOperation=Y.Delete}},{key:"deleteItem",value:function(){var t=this,e=this.currentRow;this.checkItemExists(e)&&(this.currentModeOfOperation=Y.Update,e.updatedBy=this.userName,this.coreDataService.remove(e.expenditureCategoryId).subscribe((function(e){t.alertService.showMessage("Success",t.rowName+" removed successfully.",g.d.success),t.getItemList()}))),this.dismissModal()}},{key:"dismissModal",value:function(){this.currentRow=new bt,this.auditHistory=[],this.currentModeOfOperation=Y.None}},{key:"getItemList",value:function(){var t=this;this.coreDataService.getAll().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"newItem",value:function(t){var e=this.userName||"admin";return t.isActive=t.isActive||!1,t.isDelete=t.isDelete||!1,new bt(t.ExpenditureCategoryId,t.ExpenditureCategoryName,t.glcid,t.createdBy,t.createdDate,t.updatedDate,e,t.isActive,t.isDelete)}},{key:"openItemForEdit",value:function(t){this.currentRow=t,this.currentModeOfOperation=Y.Update}},{key:"saveNewItem",value:function(){var t=this;this.currentModeOfOperation=Y.Add,this.coreDataService.add(this.currentRow).subscribe((function(e){t.alertService.showMessage("Success",t.rowName+" added successfully.",g.d.success),t.getItemList()})),this.currentModeOfOperation=Y.None}},{key:"saveExistingItem",value:function(t){var e=this,a=t;this.checkItemExists(a)?(this.currentModeOfOperation=Y.Update,a.updatedBy=this.userName,this.coreDataService.update(a).subscribe((function(t){e.alertService.showMessage("Success",e.rowName+" updated successfully.",g.d.success),e.getItemList()}))):this.saveNewItem(),this.dismissModal()}},{key:"showHistory",value:function(t){var e=this;this.currentModeOfOperation=Y.Audit;var a=t;this.coreDataService.getItemAuditById(a.expenditureCategoryId).subscribe((function(t){t[0].length>0&&(e.auditHistory=t[0])}))}},{key:"showItemEdit",value:function(t){this.disableSaveForEdit=!0,this.currentRow=t,this.currentModeOfOperation=Y.Update}},{key:"toggleActiveStatus",value:function(t){this.currentRow=t,this.saveExistingItem(this.currentRow)}},{key:"updateItem",value:function(){this.saveExistingItem(this.currentRow)}},{key:"viewItemDetails",value:function(t){this.itemDetails=t}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.itemList=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.itemList=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.itemList=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.itemList=e)),this.totalRecords=this.itemList.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("ExpenditureCategory","ExpenditureCategoryId",this.restorerecord.expenditureCategoryId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"loadData",value:function(){this.getItemList(),this.rowName="Expenditure Category",this.header="Expenditure Category",this.breadCrumb.currentUrl="/singlepages/singlepages/app-expenditure-category",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.columnHeaders=[{field:"description",header:"Description",index:1,showByDefault:!0},{field:"memo",header:"Memo",index:2,showByDefault:!0}],this.currentModeOfOperation=Y.None,this.selectedColumns=this.columnHeaders,this.currentRow=new bt}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:"admin"}}]),t}();ft.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:g.b},{type:gt.a},{type:w.c},{type:f.a}]},ft=n.b([Object(s.Component)({selector:"app-expenditure-category",template:n.c(a("p3/t")).default,animations:[h.a]})],ft);var yt=function t(e,a,n,s,i,r,o,l,d,c,u,p,m,h,v,b,g,f,y,w,D,S,k,x){_classCallCheck(this,t),this.isDelete=!1,this.isActive=!1,this.assetAttributeTypeId=e,this.assetTypeId=a,this.description=n||"",this.assetAttributeTypeName=s||"",this.conventionType=i,this.depreciationMethod=r||0,this.residualPercentage=o,this.residualValue=l||0,this.assetLife=d||0,this.depreciationFrequencyId=c,this.acquiredGLAccountId=u||0,this.deprExpenseGLAccountId=p||0,this.adDepsGLAccountId=m||0,this.assetSale=h||0,this.assetWriteOff=v||0,this.assetWriteDown=b||0,this.managementStructureId=g||0,this.selectedCompanyIds=f||"",this.createdBy=y||"admin",this.createdDate=w,this.updatedDate=D,this.updatedBy=S,this.isActive=k,this.isDelete=x},wt=a("17al"),Dt=a("FmpV"),St=function(){function t(e,a,n,s,i,r,o,l,d,c,u,p,m){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.alertService=n,this.configurations=s,this.depriciationMethodService=i,this.coreDataService=r,this.assetTypeService=o,this.glAccountService=l,this.legalEntityService=d,this.percentService=c,this.modalService=u,this.authService=p,this.commonservice=m,this.itemList=[],this.disableSave=!1,this.recordExists=!1,this.pageIndex=0,this.pageSize=10,this.allGlInfo=[],this.allAssetTypes=[],this.assetAttrType={},this.filteredGLAccountList=[],this.filteredAssetTypeList=[],this.filteredDepriciationMethod=[],this.percentageList=[],this.filteredPercentageList=[],this.currentstatus="Active",this.companyListData=[],this.selectedCompanyID=[],this.selectedBUId=0,this.selectedDivisionID=0,this.selectedDeptID=0,this.disableForMgmtStructure=!1,this.depriciationMethodList=[],this.conventionTypeList=[],this.objectKeys=Object.keys,this.depreciationFreq=[],this.assetSaleList=[],this.filteredAssetSaleList=[],this.assetWriteOffList=[],this.filteredWriteOffList=[],this.assetWriteDownList=[],this.filteredAssetWriteDownList=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData()}},{key:"glList",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.glAccountService.getAll().subscribe((function(e){return t.onGlAccountLoad(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"onGlAccountLoad",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allGlInfo=t,this.loadSelectedNames()}},{key:"getAssetTypeList",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.assetTypeService.getAll().subscribe((function(e){return t.onAssetTypeLoad(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"onAssetTypeLoad",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allAssetTypes=t,this.loadSelectedNames()}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"filterAssetType",value:function(t){this.filteredAssetTypeList=this.allAssetTypes;var e=_toConsumableArray(this.allAssetTypes.filter((function(e){return e.assetTypeName.toLowerCase().includes(t.query.toLowerCase())})));this.filteredAssetTypeList=e}},{key:"filterGLAccount",value:function(t){this.filteredGLAccountList=this.allGlInfo;var e=_toConsumableArray(this.allGlInfo.filter((function(e){return e.accountName.toLowerCase().includes(t.query.toLowerCase())})));this.filteredGLAccountList=e}},{key:"filterAssetSale",value:function(t){this.filteredAssetSaleList=this.allGlInfo;var e=_toConsumableArray(this.allGlInfo.filter((function(e){return e.accountCode.toLowerCase().includes(t.query.toLowerCase())})));this.filteredAssetSaleList=e}},{key:"filterAssetWriteOff",value:function(t){this.filteredWriteOffList=this.allGlInfo;var e=_toConsumableArray(this.allGlInfo.filter((function(e){return e.accountCode.toLowerCase().includes(t.query.toLowerCase())})));this.filteredWriteOffList=e}},{key:"filterAssetWriteDown",value:function(t){this.filteredAssetWriteDownList=this.allGlInfo;var e=_toConsumableArray(this.allGlInfo.filter((function(e){return e.accountCode.toLowerCase().includes(t.query.toLowerCase())})));this.filteredAssetWriteDownList=e}},{key:"filterDepriciationMethod",value:function(t){this.filteredDepriciationMethod=this.depriciationMethodList;var e=_toConsumableArray(this.depriciationMethodList.filter((function(e){return e.name.toLowerCase().includes(t.query.toLowerCase())})));this.filteredDepriciationMethod=e}},{key:"loadManagementdata",value:function(){var t=this;this.legalEntityService.getManagemententity().subscribe((function(e){return t.loadHierarchy(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"loadHierarchy",value:function(t){if(this.allmgmtData=t,this.companyListData=[],this.companyList=this.allmgmtData.filter((function(t){return null==t.parentId})),this.companyList.length>0)for(var e=0;e<this.companyList.length;e++)this.companyListData.push({value:this.companyList[e].managementStructureId,label:this.companyList[e].code})}},{key:"getCompanyName",value:function(t){for(var e="",a=0;a<this.companyListData.length;a++)if(this.companyListData[a].value==t){e=this.companyListData[a].label;break}return e}},{key:"loadDepricationMethod",value:function(){var t=this;this.depriciationMethodService.getAll().subscribe((function(e){t.depriciationMethodList=e[0].columnData,t.loadSelectedNames()}))}},{key:"companySelected",value:function(){console.log("Company Id :"+this.selectedCompanyID),null!=this.selectedCompanyID&&this.selectedCompanyID.length>0?this.disableForMgmtStructure=!1:this.disableForMgmtStructure=!0}},{key:"buSelected",value:function(){var t=this;this.mgmtStructureId=this.selectedBUId,"0"!==this.selectedBUId.toString()?this.mgmtStructureId=this.selectedBUId:this.mgmtStructureId=this.selectedCompanyID,this.departmentList=[],this.selectedDeptID=0,this.selectedDivisionID=0,this.divisionList=this.allmgmtData.filter((function(e){return e.parentId===t.selectedBUId}))}},{key:"divisionSelected",value:function(){var t=this;"0"!==this.selectedDivisionID.toString()?this.mgmtStructureId=this.selectedDivisionID:this.mgmtStructureId=this.selectedBUId,this.departmentList=this.allmgmtData.filter((function(e){return e.parentId===t.selectedDivisionID}))}},{key:"departmentSelected",value:function(){"0"!==this.selectedDeptID.toString()?this.mgmtStructureId=this.selectedDeptID:this.mgmtStructureId=this.selectedDivisionID}},{key:"populateMgmtStructure",value:function(t){var e=this.findmgmtRecord(t),a=null,n=null,s=null,i=null,r=null,o=null,l=null;return null!=e&&null!==e&&null!==e.parentId&&(a=this.findmgmtSiblingRecords(e.parentId),n=this.findmgmtRecord(e.parentId)),null!=n&&null!=n&&null!==n.parentId&&(s=this.findmgmtSiblingRecords(n.parentId),i=this.findmgmtRecord(n.parentId)),null!=i&&null!=i&&null!==i.parentId&&(r=this.findmgmtSiblingRecords(i.parentId),o=this.findmgmtRecord(i.parentId)),null!=o&&null!=o&&null!==o.parentId&&(this.findmgmtSiblingRecords(o.parentId),l=this.findmgmtRecord(o.parentId)),null!=l&&null!=l&&null!==l.parentId&&(this.findmgmtSiblingRecords(l.parentId),this.findmgmtRecord(l.parentId)),null==n||null===n?(this.selectedCompanyID=t,this.selectedBUId=0,this.selectedDivisionID=0,void(this.selectedDeptID=0)):null==i||null===i?(this.buList=a,this.selectedBUId=t,this.selectedCompanyID=n.managementStructureId,this.selectedDivisionID=0,void(this.selectedDeptID=0)):null==o||null===o?(this.divisionList=a,this.selectedDivisionID=t,this.buList=s,this.selectedBUId=n.managementStructureId,this.selectedCompanyID=i.managementStructureId,void(this.selectedDeptID=0)):null==l||null===l?(this.departmentList=a,this.selectedDeptID=t,this.divisionList=s,this.selectedDivisionID=n.managementStructureId,this.buList=r,this.selectedBUId=i.managementStructureId,void(this.selectedCompanyID=o.managementStructureId)):void 0}},{key:"findmgmtRecord",value:function(t){return this.allmgmtData.find((function(e){return e.managementStructureId===t}))}},{key:"findmgmtSiblingRecords",value:function(t){return this.allmgmtData.filter((function(e){return e.parentId==t}))}},{key:"getAllPercentage",value:function(){var t=this;this.commonservice.smartDropDownList("[Percent]","PercentId","PercentValue").subscribe((function(e){t.percentageList=e}))}},{key:"getAllFrequency",value:function(){var t=this;this.commonservice.smartDropDownList("[AssetDepreciationFrequency]","AssetDepreciationFrequencyId","Name").subscribe((function(e){t.depreciationFreq=e,t.loadSelectedNames()}))}},{key:"getAllConventionTypes",value:function(){var t=this;this.commonservice.smartDropDownList("[ConventionType]","ConventionTypeId","Name").subscribe((function(e){t.conventionTypeList=e,t.loadSelectedNames()}))}},{key:"filterPercentage",value:function(t){this.filteredPercentageList=this.percentageList,this.filteredPercentageList=_toConsumableArray(this.percentageList.filter((function(e){return e.percentValue.includes(parseInt(t.query))})))}},{key:"addNewItem",value:function(){this.currentRow=new yt,this.currentRow.isDelete=!1,this.currentRow.residualValue=1,this.currentRow.residualPercentage=0,this.currentRow.isActive=!0,this.currentRow.selectedCompanyIds="",this.selectedCompanyID=[],this.selectedBUId=0,this.selectedDivisionID=0,this.selectedDeptID=0,this.recordExists=!1,this.disableForMgmtStructure=!0,this.currentModeOfOperation=Y.Add}},{key:"changePage",value:function(t){var e=t.first/t.rows;this.pageIndex=e,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkItemExists",value:function(t){return!0}},{key:"confirmItemDelete",value:function(t){this.currentRow=t,this.currentModeOfOperation=Y.Delete}},{key:"deleteItem",value:function(){var t=this,e=this.currentRow;this.checkItemExists(e)&&(this.currentModeOfOperation=Y.Update,e.updatedBy=this.userName,this.coreDataService.remove(e.assetAttributeTypeId).subscribe((function(e){t.alertService.showMessage("Success",t.rowName+" removed successfully.",g.d.success),t.getItemList()}))),this.dismissModal()}},{key:"dismissModal",value:function(){this.currentRow=new yt,this.auditHistory=[],this.currentModeOfOperation=Y.None}},{key:"getItemList",value:function(){var t=this;this.coreDataService.getAll().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus),t.loadDepricationMethod(),t.glList(),t.getAssetTypeList(),t.loadManagementdata(),t.getAllPercentage(),t.getAllFrequency(),t.getAllConventionTypes()}))}},{key:"newItem",value:function(t){var e=this.userName||"admin";return t.updatedBy=t.updatedBy||e,t.isActive=t.isActive||!1,t.isDelete=t.isDelete||!1,t.residualPercentage=t.residualPercentage||0,new yt(t.assetAttributeTypeId,t.assetTypeId,t.description,t.assetAttributeTypeName,t.conventionType,t.depreciationMethod,t.residualPercentage,t.residualValue,t.assetLife,t.depreciationFrequencyId,t.acquiredGLAccountId,t.deprExpenseGLAccountId,t.adDepsGLAccountId,t.assetSale,t.assetWriteOff,t.assetWriteDown,t.selectedCompanyIds,t.createdBy,t.createdDate,t.updatedDate,t.updatedBy,t.isActive,t.isDelete)}},{key:"saveNewItem",value:function(){var t=this;this.currentModeOfOperation=Y.Add;var e=Object.assign({},this.currentRow,{createdBy:this.userName,updatedBy:this.userName,acquiredGLAccountId:Object(D.a)("glAccountId",this.currentRow.acquiredGLAccountId),adDepsGLAccountId:Object(D.a)("glAccountId",this.currentRow.adDepsGLAccountId),deprExpenseGLAccountId:Object(D.a)("glAccountId",this.currentRow.deprExpenseGLAccountId),assetTypeId:Object(D.a)("assetTypeId",this.currentRow.assetTypeId),conventionType:Object(D.a)("value",this.currentRow.conventionType),residualPercentage:Object(D.a)("value",this.currentRow.residualPercentage),depreciationFrequencyId:Object(D.a)("value",this.currentRow.depreciationFrequencyId),depreciationMethod:Object(D.a)("assetDepreciationMethodId",this.currentRow.depreciationMethod),assetSale:Object(D.a)("glAccountId",this.currentRow.assetSale),assetWriteOff:Object(D.a)("glAccountId",this.currentRow.assetWriteOff),assetWriteDown:Object(D.a)("glAccountId",this.currentRow.assetWriteDown),managementStructureId:Object(D.a)("managementStructureId",this.mgmtStructureId),MasterCompanyId:1,selectedCompanyIds:this.selectedCompanyID.join(", ")});this.coreDataService.add(e).subscribe((function(e){t.alertService.showMessage("Success",t.rowName+" added successfully.",g.d.success),t.getItemList()})),this.currentModeOfOperation=Y.None}},{key:"saveExistingItem",value:function(t){var e=this,a=t;if(this.checkItemExists(a)){this.currentModeOfOperation=Y.Update;var n=Object.assign({},a,{updatedBy:this.userName,acquiredGLAccountId:Object(D.a)("glAccountId",this.currentRow.acquiredGLAccountId),adDepsGLAccountId:Object(D.a)("glAccountId",this.currentRow.adDepsGLAccountId),deprExpenseGLAccountId:Object(D.a)("glAccountId",this.currentRow.deprExpenseGLAccountId),assetTypeId:Object(D.a)("assetTypeId",this.currentRow.assetTypeId),conventionType:Object(D.a)("value",this.currentRow.conventionType),residualPercentage:Object(D.a)("value",this.currentRow.residualPercentage),depreciationFrequencyId:Object(D.a)("value",this.currentRow.depreciationFrequencyId),depreciationMethod:Object(D.a)("assetDepreciationMethodId",this.currentRow.depreciationMethod),assetSale:Object(D.a)("glAccountId",this.currentRow.assetSale),assetWriteOff:Object(D.a)("glAccountId",this.currentRow.assetWriteOff),assetWriteDown:Object(D.a)("glAccountId",this.currentRow.assetWriteDown),managementStructureId:Object(D.a)("managementStructureId",this.mgmtStructureId),MasterCompanyId:1,selectedCompanyIds:this.selectedCompanyID.join(", ")});this.coreDataService.update(n).subscribe((function(t){e.alertService.showMessage("Success",e.rowName+" updated successfully.",g.d.success),e.getItemList()}))}else this.saveNewItem();this.dismissModal()}},{key:"showHistory",value:function(t){var e=this;this.currentModeOfOperation=Y.Audit;var a=t;this.coreDataService.getItemAuditById(a.assetAttributeTypeId).subscribe((function(t){t[0].length>0&&(e.auditHistory=t[0])}))}},{key:"selectedAssetType",value:function(t){console.log(t.assetTypeId);for(var e=0;e<this.itemList.length;e++)if(this.itemList[e].assetTypeId===t.assetTypeId&&2==this.currentModeOfOperation||this.itemList[e].assetTypeId===t.assetTypeId&&3==this.currentModeOfOperation&&this.currentRow.assetAttributeTypeId!=this.itemList[e].assetAttributeTypeId)return this.recordExists=!0,void(this.disableSave=!0);this.disableSave=!1,this.recordExists=!1,this.currentRow.description=t.assetTypeMemo}},{key:"showItemEdit",value:function(t){this.currentModeOfOperation=Y.Update,this.recordExists=!1,console.log("rowData",t),this.currentRowData=t,this.currentRow=Object.assign({},t,{assetTypeId:Object(D.d)("assetTypeId",t.assetTypeId,this.allAssetTypes),acquiredGLAccountId:Object(D.d)("glAccountId",t.acquiredGLAccountId,this.allGlInfo),deprExpenseGLAccountId:Object(D.d)("glAccountId",t.deprExpenseGLAccountId,this.allGlInfo),adDepsGLAccountId:Object(D.d)("glAccountId",t.adDepsGLAccountId,this.allGlInfo),depreciationMethod:Object(D.d)("assetDepreciationMethodId",t.depreciationMethod,this.depriciationMethodList),depreciationFrequencyId:Object(D.d)("value",t.depreciationFrequencyId,this.depreciationFreq),conventionType:Object(D.d)("value",t.conventionType,this.conventionTypeList),residualPercentage:Object(D.d)("value",t.residualPercentage,this.percentageList),assetSale:Object(D.d)("glAccountId",t.assetSale,this.allGlInfo),assetWriteOff:Object(D.d)("glAccountId",t.assetWriteOff,this.allGlInfo),assetWriteDown:Object(D.d)("glAccountId",t.assetWriteDown,this.allGlInfo),selectedCompanyID:null!=t.selectedCompanyIds&&null!=t.selectedCompanyIds?t.selectedCompanyIds.split(","):""}),this.currentRow=Object.assign({},this.currentRow),this.mgmtStructureId=this.currentRow.managementStructureId,this.selectedCompanyID=null!=t.selectedCompanyIds&&null!=t.selectedCompanyIds?t.selectedCompanyIds.split(","):[],console.log("rowData",t),this.selectedCompanyID.length>0?this.disableForMgmtStructure=!1:this.disableForMgmtStructure=!0}},{key:"toggleActiveStatus",value:function(t){this.currentRow=t,this.selectedCompanyID=null!=t.selectedCompanyIds&&null!=t.selectedCompanyIds?t.selectedCompanyIds.split(","):[],this.saveExistingItem(this.currentRow)}},{key:"updateItem",value:function(){this.saveExistingItem(this.currentRow)}},{key:"viewItemDetails",value:function(t){this.itemDetails=t}},{key:"loadSelectedNames",value:function(){for(var t=0;t<this.itemList.length;t++){var e="";if(this.itemList[t].assetTypeName=this.getAssetTypeNameById(this.itemList[t].assetTypeId),this.itemList[t].conventionTypeName=this.getConvNameById(this.itemList[t].conventionType),this.itemList[t].depreciationMethodName=this.getDeprMethodNameById(this.itemList[t].depreciationMethod),this.itemList[t].depreciationFrequencyName=this.getFreqLabelById(this.itemList[t].depreciationFrequencyId),this.itemList[t].acquiredGLAccountName=this.getAccCodeById(this.itemList[t].acquiredGLAccountId),this.itemList[t].deprExpenseGLAccountName=this.getAccCodeById(this.itemList[t].deprExpenseGLAccountId),this.itemList[t].adDepsGLAccountName=this.getAccCodeById(this.itemList[t].adDepsGLAccountId),this.itemList[t].assetSaleName=this.getAccCodeById(this.itemList[t].assetSale),this.itemList[t].assetWriteOffName=this.getAccCodeById(this.itemList[t].assetWriteOff),this.itemList[t].assetWriteDownName=this.getAccCodeById(this.itemList[t].assetWriteDown),null!=this.itemList[t].selectedCompanyIds&&null!=this.itemList[t].selectedCompanyIds)for(var a=this.itemList[t].selectedCompanyIds.split(","),n=0;n<a.length;n++)""==e?e+=this.getCompanyName(a[n]):e=e+", "+this.getCompanyName(a[n]);this.itemList[t].selectedCompanyNames=e}}},{key:"getAccNameById",value:function(t){for(var e=0;e<this.allGlInfo.length;e++)if(this.allGlInfo[e].glAccountId==t)return this.allGlInfo[e].accountName;return""}},{key:"getAccCodeById",value:function(t){for(var e=0;e<this.allGlInfo.length;e++)if(this.allGlInfo[e].glAccountId==t)return this.allGlInfo[e].accountCode;return""}},{key:"getFreqLabelById",value:function(t){for(var e=0;e<this.depreciationFreq.length;e++)if(this.depreciationFreq[e].value==t)return this.depreciationFreq[e].label;return""}},{key:"getAssetTypeNameById",value:function(t){for(var e=0;e<this.allAssetTypes.length;e++)if(this.allAssetTypes[e].assetTypeId==t)return this.allAssetTypes[e].assetTypeName;return""}},{key:"getDeprMethodNameById",value:function(t){for(var e=0;e<this.depriciationMethodList.length;e++)if(this.depriciationMethodList[e].assetDepreciationMethodId==t)return this.depriciationMethodList[e].name;return""}},{key:"getConvNameById",value:function(t){for(var e=0;e<this.conventionTypeList.length;e++)if(this.conventionTypeList[e].value==t)return this.conventionTypeList[e].label;return""}},{key:"loadData",value:function(){this.getItemList(),console.log(this.itemList),this.rowName="Asset Attribute Type",this.header="Asset Attribute Type",this.breadCrumb.currentUrl="/singlepages/singlepages/app-asset-attribute-type",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.columnHeaders=[{field:"assetTypeName",header:"Asset Class",index:1,showByDefault:!0},{field:"description",header:"Description",index:1,showByDefault:!0},{field:"assetAttributeTypeName",header:"Name",index:1,showByDefault:!0},{field:"conventionTypeName",header:"Convention Type",index:1,showByDefault:!0},{field:"depreciationMethodName",header:"Depreciation Method",index:1,showByDefault:!0},{field:"residualPercentage",header:"Residual Percentage",index:1,showByDefault:!0},{field:"assetLife",header:"Asset Life",index:1,showByDefault:!0},{field:"depreciationFrequencyName",header:"Depreciation Frequency",index:1,showByDefault:!0},{field:"acquiredGLAccountName",header:"Acquired GL Account",index:1,showByDefault:!0},{field:"deprExpenseGLAccountName",header:"Depr Expense GL Account",index:1,showByDefault:!0},{field:"adDepsGLAccountName",header:"AdDepsGLAccountId",index:1,showByDefault:!0},{field:"assetSaleName",header:"Asset Sale",index:1,showByDefault:!0},{field:"assetWriteOffName",header:"Asset Write Off",index:1,showByDefault:!0},{field:"assetWriteDownName",header:"Asset Write Down",index:1,showByDefault:!0},{field:"selectedCompanyNames",header:"Legal Entity",index:1,showByDefault:!0}],this.currentModeOfOperation=Y.None,this.selectedColumns=this.columnHeaders,this.currentRow=new yt,this.currentRow.isActive=!0,this.getItemList()}},{key:"resetFromData",value:function(){this.selectedCompanyID=[],this.selectedBUId=0,this.selectedDivisionID=0,this.selectedDeptID=0,this.currentRow=new yt}},{key:"onChangeSelectField",value:function(t,e){}},{key:"viewItemDetailsClick",value:function(t,e){this.itemDetails=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"dismissModel",value:function(){this.currentModeOfOperation=Y.None,this.modal.close()}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=AssetAttributeType&fileName=AssetAttributeType.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this;this.formData=new FormData;var a=t.target.files;a.length>0&&(this.formData.append("file",a[0]),console.log(this.formData),this.coreDataService.bulkUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,console.log(a),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success),e.showBulkUploadResult(a)})))}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.itemList=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.itemList=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.itemList=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.itemList=e)),this.totalRecords=this.itemList.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("AssetAttributeType","AssetAttributeTypeId",this.restorerecord.assetAttributeTypeId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"showBulkUploadResult",value:function(t){if(t){console.log(t);var e=t.filter((function(t){return t.UploadTag==K.Success})),a=t.filter((function(t){return t.UploadTag==K.Failed})),n=t.filter((function(t){return t.UploadTag==K.Duplicate}));e&&this.alertService.showMessage("Success","".concat(e," ").concat(this.rowName).concat(e>1?"s":""," uploaded successfully."),g.d.success),a&&this.alertService.showMessage("Error","".concat(a," ").concat(this.rowName).concat(a>1?"s":""," failed to upload."),g.d.error),n&&this.alertService.showMessage("Info","".concat(n," ").concat(n>1?"duplicates":"duplicate"," ignored."),g.d.info)}this.getItemList()}},{key:"viewSelectedRow",value:function(t){}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:"admin"}}]),t}();St.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:g.b},{type:A.a},{type:Dt.a},{type:wt.a},{type:st.a},{type:et.a},{type:at.a},{type:L.a},{type:w.c},{type:f.a},{type:M.a}]},St=n.b([Object(s.Component)({selector:"app-asset-attribute-type",template:n.c(a("tna+")).default,animations:[h.a],styles:[n.c(a("zrtZ")).default]})],St);var kt=a("IGPk"),xt=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.commonService=n,this.modalService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.integrationService=l,this.dialog=d,this.masterComapnyService=c,this.configurations=u,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"description",header:"Integration"},{field:"portalUrl",header:"Website URL"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.disableSaveIntegration=!1,this.new={portalUrl:"",description:"",masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.currentstatus="Active",this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-integration",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"getmemo",value:function(){this.disableSaveIntegration=!1}},{key:"getList",value:function(){var t=this;this.integrationService.getAllWorkFlows().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"filterDescription",value:function(t){this.descriptionList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.descriptionList=e}},{key:"selectedDescription",value:function(t){if(t.description!==this.selectedRecordForEdit){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSaveForDescription=!e}else this.disableSaveForDescription=!1}},{key:"checkGroupDescriptionExists",value:function(t){for(var e=0;e<this.originalData.length;e++){if(t==this.originalData[e].description){var a=Object(D.k)("description",t,this.selectedRecordForEdit);return void(this.disableSaveForDescription=!a)}this.disableSaveForDescription=!1}}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,description:Object(D.a)("description",this.addNew.description),portalUrl:Object(D.a)("portalUrl",this.addNew.portalUrl)});this.isEdit?this.integrationService.updateAction(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Integration Successfully  ",g.d.success)})):this.integrationService.newAction(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Integration Successfully  ",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.addNew=Object.assign({},this.new)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.disableSaveIntegration=!0,this.addNew=Object.assign({},t,{description:Object(D.e)("description",t.description,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.integrationService.updateAction(a).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.integrationService.deleteAcion(this.selectedRowforDelete.integrationPortalId).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted Integration Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.integrationService.historyintegration(t.integrationPortalId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("IntegrationPortal","IntegrationPortalId",this.restorerecord.integrationPortalId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=IntegrationPortal&fileName=IntegrationPortal.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.integrationService.IntegrationCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();xt.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:M.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:kt.a},{type:m.b},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],xt.prototype,"modal",void 0),xt=n.b([Object(s.Component)({selector:"app-integration",template:n.c(a("gvp4")).default,animations:[h.a],styles:[n.c(a("qmdr")).default]})],xt);var Ct=a("de6x"),At=a("xr4S"),Mt=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.authService=n,this.modalService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.itemClassificationService=l,this.dialog=d,this.masterComapnyService=c,this.configurations=u,this.itemClassificationPaginationList=[],this.itemClassification=[],this.formData=new FormData,this.item_Name="",this.description="",this.itemType="",this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.displayedColumns=["itemclassificationId","itemclassificationCode","description","memo"],this.allitemclassificationInfo=[],this.allComapnies=[],this.title="Create",this.Active="Active",this.localCollection=[],this.localNameCollection=[],this.localtypeCollection=[],this.actionamecolle=[],this.isEditMode=!1,this.isDeleteMode=!1,this.classnamecolle=[],this.classificationtypecolle=[],this.disableClassdesc=!1,this.pageIndex=0,this.newItemClassification={itemClassificationCode:"",description:"",itemType:"",masterCompanyId:1,isActive:!0,isDelete:!1,memo:""},this.addNewItemClassification=Object.assign({},this.newItemClassification),this.disableSaveForItemCode=!1,this.disableSaveForItemDesc=!1,this.pageSize=10,this.auditHistory=[],this.disableSaveForItemCodeMsg=!1,this.disableSaveForItemDescMsg=!1,this.disableSaveForEdit=!1,this.currentstatus="Active",this.isDeleted=!1,this.allWorkFlows=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.displayedColumns.push("action"),this.dataSource=new H.a,this.sourceAction=new At.a}return _createClass(t,[{key:"ngOnInit",value:function(){this.getItemClassificationList(),this.cols=[{field:"itemClassificationCode",header:"Item Classification ID"},{field:"description",header:"Item Classification Name"},{field:"itemType",header:"ItemType"},{field:"memo",header:"Memo"}],this.breadCrumb.currentUrl="/singlepages/singlepages/app-item-classification",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.selectedColumns=this.cols}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"getItemClassificationList",value:function(){var t=this;this.itemClassificationService.getWorkFlows().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"onDataLoadFailed",value:function(t){}},{key:"checkItemcode",value:function(t){this.allitemclassificationInfo.find((function(e){return e.itemClassificationCode===t.itemClassificationCode}))?this.disableSaveForItemCodeMsg=!0:this.disableSaveForItemCodeMsg=!1}},{key:"checkItemDesc",value:function(t){this.allitemclassificationInfo.find((function(e){return e.description===t.description}))?this.disableSaveForItemDescMsg=!0:this.disableSaveForItemDescMsg=!1}},{key:"filterItemCode",value:function(t){this.itemClassificationList=this.allitemclassificationInfo;var e=_toConsumableArray(this.allitemclassificationInfo.filter((function(e){return e.itemClassificationCode.toLowerCase().includes(t.query.toLowerCase())})));this.itemClassificationList=e}},{key:"checkItemCodeExists",value:function(t){this.disableSaveForItemCodeMsg=!1;for(var e=0;e<this.allitemclassificationInfo.length;e++)if(this.addNewItemClassification.itemClassificationCode==this.allitemclassificationInfo[e].itemClassificationCode||t==this.allitemclassificationInfo[e].itemClassificationCode)return void(this.disableSaveForItemCodeMsg=!0)}},{key:"selectedItemCode",value:function(t){this.checkItemcode(t)}},{key:"checkItemDescExists",value:function(t){this.disableSaveForItemDescMsg=!1;for(var e=0;e<this.allitemclassificationInfo.length;e++)if(this.addNewItemClassification.description==this.allitemclassificationInfo[e].description||t==this.allitemclassificationInfo[e].description)return void(this.disableSaveForItemDescMsg=!0)}},{key:"selectedItemDesc",value:function(t){this.checkItemDesc(t)}},{key:"filterItemDesc",value:function(t){this.itemClassificationDescList=this.allitemclassificationInfo;var e=_toConsumableArray(this.allitemclassificationInfo.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.itemClassificationDescList=e}},{key:"editItemClassification",value:function(t){console.log(t),this.isEditMode=!0,this.disableSaveForEdit=!0,this.disableSaveForItemCodeMsg=!1,this.disableSaveForItemDescMsg=!1,this.addNewItemClassification=Object.assign({},t,{itemClassificationCode:Object(D.e)("itemClassificationCode",t.itemClassificationCode,this.allitemclassificationInfo),description:Object(D.e)("description",t.description,this.allitemclassificationInfo)}),this.selectedRecordForEdit=Object.assign({},this.addNewItemClassification)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"changeStatus",value:function(t){var e=this,a=Object.assign({},t);this.itemClassificationService.updateAction(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"constantFilters",value:function(){return{first:0,rows:10,sortField:void 0,sortOrder:1,filters:"",globalFilter:"",multiSortMeta:void 0}}},{key:"resetItemCForm",value:function(){this.isEditMode=!1,this.disableSaveForItemCodeMsg=!1,this.disableSaveForItemDescMsg=!1,this.selectedRecordForEdit=void 0,this.addNewItemClassification=Object.assign({},this.newItemClassification)}},{key:"saveItemClassification",value:function(){var t=this,e=Object.assign({},this.addNewItemClassification,{createdBy:this.userName,updatedBy:this.userName,itemClassificationCode:Object(D.a)("itemClassificationCode",this.addNewItemClassification.itemClassificationCode),description:Object(D.a)("description",this.addNewItemClassification.description)});console.log(e),this.isEditMode?(console.log(e),this.itemClassificationService.updateAction(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEditMode=!1,t.resetItemCForm(),t.getItemClassificationList(),t.alertService.showMessage("Success","Updated New Item Classification Successfully",g.d.success)}))):this.itemClassificationService.newAction(e).subscribe((function(){t.resetItemCForm(),t.getItemClassificationList(),t.alertService.showMessage("Success","Added New Item Classification Successfully",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.itemClassificationService.deleteAcion(this.selectedRowforDelete.itemClassificationId).subscribe((function(){e.getItemClassificationList(),e.alertService.showMessage("Success","Deleted New Item Classification Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.itemClassificationService.historyAcion(t.itemClassificationId).subscribe((function(t){console.log(t),e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.itemClassificationService.ItemClassCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.existingRecordsResponse=a,e.getItemClassificationList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=ItemClassification&fileName=itemClassification.xlsx";window.location.assign(t)}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.allitemclassificationInfo=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.allitemclassificationInfo=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.allitemclassificationInfo=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.allitemclassificationInfo=e)),this.totalRecords=this.allitemclassificationInfo.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("ItemClassification","itemClassificationId",this.restorerecord.itemClassificationId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getItemClassificationList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Mt.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:Ct.a},{type:m.b},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],Mt.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],Mt.prototype,"sort",void 0),Mt=n.b([Object(s.Component)({selector:"app-item-classification",template:n.c(a("N4S0")).default,animations:[h.a],styles:[n.c(a("OGf2")).default]})],Mt);var It=a("suIq"),Tt=a("Ph3x"),Lt=a("sGDs"),Rt=a("IBlc"),Pt=function(){function t(e,a,n,s,i,r,o,l,d,c,u,p,m){_classCallCheck(this,t),this.itemMasterService=e,this.commonService=a,this.router=n,this.breadCrumb=s,this.authService=i,this._fb=r,this.alertService=o,this.masterComapnyService=l,this.modalService=d,this.shipViaService=c,this.dialog=u,this.configurations=p,this.itemGroupService=m,this.actionamecolle=[],this.auditHisory=[],this.isEditMode=!1,this.isDeleteMode=!1,this.formData=new FormData,this.localCollection=[],this.Active="Active",this.auditHistory=[],this.itemGroupData=[],this.itemGroupList=[],this.itemGroupHeaders=[{field:"itemGroupCode",header:"Item Group ID"},{field:"description",header:"Item Group Name"},{field:"memo",header:"Memo"}],this.pageIndex=0,this.pageSize=10,this.newItemGroup={itemGroupCode:"",description:"",masterCompanyId:Rt.a.MASTER_COMPANY_ID,isActive:!0,isDeleted:!1,memo:""},this.itemGroup=Object.assign({},this.newItemGroup),this.disableSaveForItemDescMsg=!1,this.disableSaveForItemGroupCodeMsg=!1,this.disableSaveForEdit=!1,this.isDeleted=!1,this.currentstatus="Active",this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.selectedColumns=this.itemGroupHeaders,this.getItemGroupList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-item-group",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getItemGroupList",value:function(){var t=this;this.itemMasterService.getItemGroupList().subscribe((function(e){e.length>0?(t.originalTableData=e,t.getListByStatus(t.status?t.status:t.currentstatus)):(t.totalRecords=0,t.totalPages=0)}))}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"resetItemGroupForm",value:function(){this.isEditMode=!1,this.disableSaveForItemGroupCodeMsg=!1,this.disableSaveForItemDescMsg=!1,this.selectedRecordForEdit=void 0,this.itemGroup=Object.assign({},this.newItemGroup)}},{key:"changeStatus",value:function(t){var e=this;console.log(t),Object.assign({},t),this.itemGroupService.updateAction(t).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully",g.d.success),e.getItemGroupList()}))}},{key:"filterItemGroupCode",value:function(t){this.itemGroupList=this.originalTableData;var e=_toConsumableArray(this.originalTableData.filter((function(e){return e.itemGroupCode.toLowerCase().includes(t.query.toLowerCase())})));this.itemGroupList=e}},{key:"filterItemGroupDesc",value:function(t){this.itemGroupDescList=this.originalTableData;var e=_toConsumableArray(this.originalTableData.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.itemGroupDescList=e}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"checkItemDescExists",value:function(t,e){Object(D.m)(t,e,this.originalTableData,this.selectedRecordForEdit).length>0?this.disableSaveForItemDescMsg=!0:this.disableSaveForItemDescMsg=!1}},{key:"checkItemGroupCodeExists",value:function(t,e){for(var a=0;a<this.originalTableData.length;a++){if(this.itemGroup.itemGroupCode==this.originalTableData[a].itemGroupCode||e==this.originalTableData[a].itemGroupCode)return this.selectedRecordForEdit&&this.selectedRecordForEdit.itemGroupCode.itemGroupCode==e?void(this.disableSaveForItemGroupCodeMsg=!1):void(this.disableSaveForItemGroupCodeMsg=!0);this.disableSaveForItemGroupCodeMsg=!1}}},{key:"selectedItemGroupCode",value:function(t){this.originalTableData.find((function(e){return e.itemGroupCode===t.itemGroupCode}))?this.selectedRecordForEdit.itemGroupCode.itemGroupCode==t.itemGroupCode?this.disableSaveForItemGroupCodeMsg=!1:this.disableSaveForItemGroupCodeMsg=!0:this.disableSaveForItemGroupCodeMsg=!1}},{key:"selectedItemGroupDesc",value:function(t){this.originalTableData.find((function(e){return e.description===t.description}))?this.selectedRecordForEdit.description.description==t.description?this.disableSaveForItemDescMsg=!1:this.disableSaveForItemDescMsg=!0:this.disableSaveForItemDescMsg=!1}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.itemGroupService.deleteAcion(this.selectedRowforDelete.itemGroupId).subscribe((function(){e.getItemGroupList(),e.alertService.showMessage("Success","Deleted Item Group Successfully",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"edit",value:function(t){console.log(t),this.isEditMode=!0,this.disableSaveForEdit=!0,this.disableSaveForConditionMsg=!1,this.itemGroup=Object.assign({},t,{itemGroupCode:Object(D.e)("itemGroupCode",t.itemGroupCode,this.itemGroupData),description:Object(D.e)("description",t.description,this.itemGroupData)}),this.selectedRecordForEdit=Object.assign({},this.itemGroup),console.log(this.itemGroupData,"this.itemGroupData+++")}},{key:"saveItemGroup",value:function(){var t=this,e=Object.assign({},this.itemGroup,{createdBy:this.userName,updatedBy:this.userName,itemGroupCode:Object(D.a)("itemGroupCode",this.itemGroup.itemGroupCode),description:Object(D.a)("description",this.itemGroup.description)});this.isEditMode?this.itemGroupService.updateAction(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEditMode=!1,t.resetItemGroupForm(),t.getItemGroupList(),t.alertService.showMessage("Success","Updated Item Group Successfully",g.d.success)})):this.itemGroupService.newAction(e).subscribe((function(){t.resetItemGroupForm(),t.getItemGroupList(),t.alertService.showMessage("Success","Added  New Item Group Successfully",g.d.success)}))}},{key:"openHelpText",value:function(t){this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"getAuditHistoryById",value:function(t){var e=this;this.itemGroupService.historyAcion(t.itemGroupId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.itemGroupService.ItemGroupCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getItemGroupList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=ItemGroup&fileName=itemgroup.xlsx";window.location.assign(t)}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.itemGroupData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.itemGroupData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.itemGroupData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.itemGroupData=e)),this.totalRecords=this.itemGroupData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("ItemGroup","ItemGroupId",this.restorerecord.itemGroupId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getItemGroupList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"columnsChanges",value:function(){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Pt.ctorParameters=function(){return[{type:Tt.a},{type:M.a},{type:c.Router},{type:u.a},{type:f.a},{type:r.FormBuilder},{type:g.b},{type:b.a},{type:w.c},{type:It.a},{type:m.b},{type:A.a},{type:Lt.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],Pt.prototype,"table",void 0),Pt=n.b([Object(s.Component)({selector:"app-item-group",template:n.c(a("9Dln")).default,animations:[h.a],styles:[n.c(a("BZRJ")).default]})],Pt);var Nt=a("4BRc"),Ft=function(){function t(e,a,n,s,i,r,o){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.modalService=n,this.configurations=s,this.authService=i,this.alertService=r,this.jobTitleService=o,this.jobTitleData=[],this.newJobTitle={description:"",masterCompanyId:1,isActive:!0,isDeleted:!1,memo:""},this.addNewJobTitle=Object.assign({},this.newJobTitle),this.disableSaveForJobTitle=!1,this.isEdit=!1,this.disableSaveForEdit=!1,this.pageIndex=0,this.pageSize=10,this.currentstatus="Active",this.jobTitleHeaders=[{field:"description",header:"Job Title"},{field:"memo",header:"Memo"}],this.selectedColumns=this.jobTitleHeaders,this.formData=new FormData,this.auditHistory=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getJobTitleList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-job-title",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;a.length>0&&(this.formData.append("ModuleName","JobTitle"),this.formData.append("file",a[0]),this.commonService.smartExcelFileUpload(this.formData).subscribe((function(t){e.formData=new FormData,e.getJobTitleList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"refreshList",value:function(){this.table.reset(),this.getJobTitleList()}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=JobTitle&fileName=JobTitle.xlsx";window.location.assign(t)}},{key:"getJobTitleList",value:function(){var t=this;this.jobTitleService.getAllJobTitleList().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkJobTitleExists",value:function(t,e){Object(D.m)(t,e,this.jobTitleData,this.selectedRecordForEdit).length>0?this.disableSaveForJobTitle=!0:this.disableSaveForJobTitle=!1}},{key:"filterJobTitles",value:function(t){this.jobTitleList=this.jobTitleData;var e=_toConsumableArray(this.jobTitleData.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.jobTitleList=e}},{key:"selectedJobTitle",value:function(t){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSaveForJobTitle=!e}},{key:"saveJobTitle",value:function(){var t=this,e=Object.assign({},this.addNewJobTitle,{createdBy:this.userName,updatedBy:this.userName,description:Object(D.a)("description",this.addNewJobTitle.description)});this.isEdit?this.jobTitleService.updateAction(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetJobTitleForm(),t.getJobTitleList(),t.alertService.showMessage("Success","Updated Job Title Successfully",g.d.success)})):this.jobTitleService.newJobTitle(e).subscribe((function(){t.resetJobTitleForm(),t.getJobTitleList(),t.alertService.showMessage("Success","Added  New Job Title Successfully",g.d.success)}))}},{key:"resetJobTitleForm",value:function(){this.isEdit=!1,this.disableSaveForJobTitle=!1,this.selectedRecordForEdit=void 0,this.addNewJobTitle=Object.assign({},this.newJobTitle)}},{key:"editJobTitle",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveForEdit=!0,this.disableSaveForJobTitle=!1,this.addNewJobTitle=Object.assign({},t,{description:Object(D.d)("jobTitleId",t.jobTitleId,this.jobTitleData)}),this.selectedRecordForEdit=Object.assign({},this.addNewJobTitle)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.jobTitleService.updateAction(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.jobTitleService.deleteAcion(this.selectedRowforDelete.jobTitleId).subscribe((function(){e.getJobTitleList(),e.alertService.showMessage("Success","Deleted Job Title Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.jobTitleService.getJobTitleAudit(t.jobTitleId).subscribe((function(t){e.auditHistory=t[0].result}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.jobTitleData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.jobTitleData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.jobTitleData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.jobTitleData=e)),this.totalRecords=this.jobTitleData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("JobTitle","JobTitleId",this.restorerecord.jobTitleId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getJobTitleList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Ft.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:w.c},{type:A.a},{type:f.a},{type:g.b},{type:Nt.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],Ft.prototype,"modal",void 0),Ft=n.b([Object(s.Component)({selector:"app-job-title",template:n.c(a("OwCF")).default,animations:[h.a],styles:[n.c(a("I4Uh")).default]})],Ft);var Et=a("XcjK"),Ht=function(){function t(e,a,n,s,i,r,o){_classCallCheck(this,t),this.breadCrumb=e,this.modalService=a,this.commonService=n,this.configurations=s,this.authService=i,this.alertService=r,this.priorityService=o,this.PriorityData=[],this.newPriority={description:"",masterCompanyId:1,isActive:!0,isDeleted:!1,memo:""},this.addnewPriority=Object.assign({},this.newPriority),this.currentstatus="Active",this.disableSavePriority=!1,this.disableSaveForPriority=!1,this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.priorityHeader=[{field:"description",header:"Priority Name"},{field:"memo",header:"Memo"}],this.selectedColumns=this.priorityHeader,this.formData=new FormData,this.auditHistory=[],this.disableSaveForShortName=!1,this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getProrityData(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-priority",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getProrityData()}},{key:"getmemo",value:function(){this.disableSavePriority=!1}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"getProrityData",value:function(){var t=this;this.priorityService.getPriorityList().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkPriorityExists",value:function(t,e){Object(D.m)(t,e,this.PriorityData,this.selectedRecordForEdit).length>0?this.disableSaveForPriority=!0:this.disableSaveForPriority=!1}},{key:"filterDescription",value:function(t){this.PriorityList=this.PriorityList;var e=_toConsumableArray(this.PriorityData.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.PriorityList=e}},{key:"selectedPriority",value:function(t){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSaveForPriority=!e}},{key:"savePriority",value:function(){var t=this,e=Object.assign({},this.addnewPriority,{createdBy:this.userName,updatedBy:this.userName,description:Object(D.a)("description",this.addnewPriority.description)});this.isEdit?this.priorityService.updatePriority(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetPriorityForm(),t.getProrityData(),t.alertService.showMessage("Success","Updated   Priority  Successfully  ",g.d.success)})):this.priorityService.newPriority(e).subscribe((function(){t.resetPriorityForm(),t.getProrityData(),t.alertService.showMessage("Success","Added  New Priority Successfully  ",g.d.success)}))}},{key:"resetPriorityForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.disableSaveForPriority=!1,this.addnewPriority=Object.assign({},this.newPriority)}},{key:"editPriority",value:function(t){console.log(t),this.isEdit=!0,this.disableSavePriority=!0,this.disableSaveForPriority=!1,this.addnewPriority=Object.assign({},t,{description:Object(D.e)("description",t.description,this.PriorityData)}),this.selectedRecordForEdit=Object.assign({},this.addnewPriority)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.priorityService.updatePriority(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.priorityService.deletePriority(this.selectedRowforDelete.priorityId).subscribe((function(){e.getProrityData(),e.alertService.showMessage("Success","Deleted Priority Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.PriorityData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.PriorityData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.PriorityData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.PriorityData=e)),this.totalRecords=this.PriorityData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("Priority","PriorityId",this.restorerecord.priorityId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getProrityData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"getAuditHistoryById",value:function(t){var e=this;this.priorityService.historyPriority(t.priorityId).subscribe((function(t){console.log(t),e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"sampleExcelDownload",value:function(){}},{key:"customExcelUpload",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Ht.ctorParameters=function(){return[{type:u.a},{type:w.c},{type:M.a},{type:A.a},{type:f.a},{type:g.b},{type:Et.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],Ht.prototype,"modal",void 0),Ht=n.b([Object(s.Component)({selector:"app-priority",template:n.c(a("xUyQ")).default,animations:[h.a],styles:[n.c(a("Hx4M")).default]})],Ht);var Bt=a("Fqvl"),Ot=function(){function t(e,a,n,s,i,r,o){_classCallCheck(this,t),this.breadCrumb=e,this.modalService=a,this.commonService=n,this.configurations=s,this.authService=i,this.alertService=r,this.provisionService=o,this.provisionData=[],this.newProvision={description:"",masterCompanyId:1,isActive:!0,isDelete:!1,memo:""},this.addnewProvision=Object.assign({},this.newProvision),this.disableSaveForProvision=!1,this.disableSave=!1,this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.currentstatus="Active",this.provisionHeader=[{field:"description",header:"Provision Name"},{field:"memo",header:"Memo"}],this.selectedColumns=this.provisionHeader,this.formData=new FormData,this.auditHistory=[],this.disableSaveForShortName=!1,this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"ngOnInit",value:function(){this.getProvisionData(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-provision",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getProvisionData()}},{key:"getmemo",value:function(){this.disableSave=!1}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=Provision&fileName=provision.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.provisionService.provisionFileUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getProvisionData(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getProvisionData",value:function(){var t=this;this.provisionService.getProvisionList().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkProvisionExists",value:function(t,e){Object(D.m)(t,e,this.provisionData,this.selectedRecordForEdit).length>0?this.disableSaveForProvision=!0:this.disableSaveForProvision=!1}},{key:"filterDescription",value:function(t){this.provisionList=this.provisionList;var e=_toConsumableArray(this.provisionData.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.provisionList=e}},{key:"selectedProvision",value:function(t){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSaveForProvision=!e}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"saveProvision",value:function(){var t=this,e=Object.assign({},this.addnewProvision,{createdBy:this.userName,updatedBy:this.userName,description:Object(D.a)("description",this.addnewProvision.description)});this.isEdit?this.provisionService.updateProvision(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetProvisionForm(),t.getProvisionData(),t.alertService.showMessage("Success","Updated   Provision  Successfully  ",g.d.success)})):this.provisionService.newProvision(e).subscribe((function(){t.resetProvisionForm(),t.getProvisionData(),t.alertService.showMessage("Success","Added  New Provision Successfully  ",g.d.success)}))}},{key:"resetProvisionForm",value:function(){this.isEdit=!1,this.disableSaveForProvision=!1,this.selectedRecordForEdit=void 0,this.addnewProvision=Object.assign({},this.newProvision)}},{key:"editProvision",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveForProvision=!1,this.disableSave=!0,this.addnewProvision=Object.assign({},t,{description:Object(D.d)("provisionId",t.provisionId,this.provisionData)}),this.selectedRecordForEdit=Object.assign({},this.addnewProvision)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.provisionService.updateProvision(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.provisionService.deleteProvision(this.selectedRowforDelete.provisionId).subscribe((function(){e.getProvisionData(),e.alertService.showMessage("Success","Deleted Provision Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.provisionService.getProvisionAudit(t.provisionId).subscribe((function(t){e.auditHistory=t[0].result}))}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.provisionData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.provisionData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.provisionData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.provisionData=e)),this.totalRecords=this.provisionData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("Provision","ProvisionId",this.restorerecord.provisionId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getProvisionData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Ot.ctorParameters=function(){return[{type:u.a},{type:w.c},{type:M.a},{type:A.a},{type:f.a},{type:g.b},{type:Bt.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],Ot.prototype,"table",void 0),Ot=n.b([Object(s.Component)({selector:"app-provision",template:n.c(a("kKLg")).default,animations:[h.a],styles:[n.c(a("zdKF")).default]})],Ot);var Ut=function t(e,a,n,s,i,r,o,l,d,c,u,p,m,h,v,b,g,f,y,w,D,S,k,x,C,A,M,I,T,L){_classCallCheck(this,t),this.publicationRecordId=m,this.publicationId=h,this.pubType=L,this.PartNumber=v,this.description=g,this.isActive=p,this.Platform=b,this.Model=f,this.ATAMain=y,this.ATASubChapter=w,this.ATAPositionZone=D,this.masterCompanyId=k,this.createdBy=x,this.createdDate=C,this.updatedDate=A,this.entryDate=T,this.updatedBy=M,this.IsActive=S,this.masterCompany=e,this.memo=I,this.revisionDate=u,this.nextreviewDate=c,this.ASD=d,this.publishby=l,this.location=o,this.revision=r,this.verifiedby=i,this.verifieddate=s,this.employee=n,this.docpath=a},jt=a("wzbf"),Vt=a("pjuo"),zt=a("wNWc"),Gt=a("3fSc"),_t=a("jasi"),Wt=function(){function t(e,a,n,s,i,r,o,l,d,c,u,p,m,h,v,b,g,f){_classCallCheck(this,t),this.breadCrumb=e,this.configurations=a,this.authService=n,this.datePipe=s,this.modalService=i,this.activeModal=r,this._fb=o,this.alertService=l,this.publicationService=d,this.dialog=c,this.masterComapnyService=u,this.router=p,this.employeeService=m,this.aircraftManufacturerService=h,this.aircraftModelService=v,this.Dashnumservice=b,this.ataMainSer=g,this.commonService=f,this.allCustomerFinanceDocumentsListColumns=[{field:"tagTypeName",header:"Tag Type"},{field:"docName",header:"Name"},{field:"docDescription",header:"Description"},{field:"docMemo",header:"Memo"},{field:"fileName",header:"File Name"},{field:"fileSize",header:"File Size"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"CreatedBy"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"UpdatedBy"},{field:"download",header:"Actions"}],this.allCustomerFinanceDocumentsList=[],this.sourceViewforDocumentAudit=[],this.pageSize=10,this.pageIndex=0,this.totalRecords=0,this.totalPages=0,this.allpublic=[],this.publication_Name="",this.description="",this.partNumber="",this.model="",this.ataMain="",this.ataSubChapter="",this.ataPositionZone="",this.platform="",this.memo="",this.createdBy="",this.selectedOnly=!1,this.updatedBy="",this.createdDate="",this.updatedDate="",this.disableSave=!1,this.allEmployeeinfo=[],this.Active="Active",this.isSpinnerVisible=!1,this.displayedColumns=["PublicationId","PartNumber","description"],this.allpublicationInfo=[],this.allComapnies=[],this.title="Create",this.localCollection=[],this.isEditMode=!1,this.isDeleteMode=!1,this.isActive=!1,this.viewCheck=!0,this.pnMappingList=[],this.aircraftList=[],this.ataList=[],this.formData=new FormData,this.publicationIdInput="",this.descriptionInput="",this.publicationTypeInput="",this.publishbyInput="",this.employeeNameInput="",this.locationInput="",this.headersforPNMapping=[{field:"partNumber",header:"PN"},{field:"partDescription",header:"PN Description"},{field:"itemClassification",header:"Item Classification"},{field:"manufacturerName",header:"Manufacturer"},{field:"itemGroup",header:"Item Group"}],this.aircraftInformationCols=[{field:"partNumber",header:"PN Number"},{field:"partDescription",header:"PN Description"},{field:"manufacturerName",header:"Manufacturer"},{field:"itemGroup",header:"Item Group"},{field:"aircraft",header:"Aircraft"},{field:"model",header:"Model"},{field:"dashNumber",header:"Dash Numbers"}],this.atacols=[{field:"partNumber",header:"PN Number"},{field:"partDescription",header:"PN Description"},{field:"manufacturerName",header:"Manufacturer"},{field:"itemGroup",header:"Item Group"},{field:"ataChapter",header:"ATA Chapter"},{field:"ataSubChapter",header:"ATA SubChapter"}],this.headersforAttachment=[{field:"tagTypeName",header:"Tag Type"}],this.first=0,this.pagesize=10,this.attachmentsPageSize=3,this.pnMappingPageSize=10,this.aircraftPageSize=10,this.ataPageSize=10,this.attachmentList=[],this.showModelAircraftModel=!1,this.airCraftTypesList=[{label:"Select Aircraft",value:null}],this.aircraftModelList=[{label:"Select Aircraft Model",value:null}],this.dashNumberList=[{label:"Select Dash Number",value:null}],this.ataChapterList=[{label:"Select ATA Chapter",value:null}],this.ataSubChapterList=[{label:"Select ATA SubChapter",value:null}],this.showAdvancedSearchCard=!1,this.viewType="mpn",this.advanceSearchReq={},this.status="active",this.allWorkFlows=[],this.currentDeletedstatus=!1,this.currentstatus="Active",this.restorerecord={},this.displayedColumns.push("action"),this.dataSource=new H.a,this.sourceAction=new Ut}return _createClass(t,[{key:"ngOnInit",value:function(){this.employeedata(),this.cols=[{field:"partNos",header:"PN"},{field:"pnDescription",header:"PN Description"},{field:"revisionNum",header:"Revision Num"},{field:"publicationId",header:"Pub ID"},{field:"description",header:"Pub Description"},{field:"publicationType",header:"Pub Type"},{field:"publishedBy",header:"Published By"},{field:"revisionDate",header:"Revision Date"},{field:"nextReviewDate",header:"Next Review Date"},{field:"expirationDate",header:"Expiration Date"},{field:"location",header:"Location"},{field:"verifiedBy",header:"Verified By"},{field:"verifiedDate",header:"Verified Date"}],this.breadCrumb.currentUrl="/singlepages/singlepages/app-publication",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.selectedColumns=this.cols,this.getAllAircraftManufacturer(),this.getAllATAChapter()}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"pageIndexChange",value:function(t){this.pageSize=t.rows}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(t){var e=this;this.isSpinnerVisible=!0,this.lazyLoadEventDataInput=t;var a=!!this.currentDeletedstatus;t.filters.viewType=this.viewType,t.filters.status=this.status?this.status:this.currentstatus,t.filters.isDeleted=a;var n=Object.assign({},t,{filters:Object(D.j)(t.filters)});this.publicationService.getPublications(n).subscribe((function(t){e.onDataLoadSuccessful(t[0].results),e.totalRecords=t[0].totalRecordsCount,e.totalPages=Math.ceil(e.totalRecords/e.pagesize),e.isSpinnerVisible=!1}),(function(t){e.isSpinnerVisible=!1;var a=t;e.errorMessageHandler(a)}))}},{key:"errorMessageHandler",value:function(t){this.alertService.showMessage("Error",t.error,g.d.error)}},{key:"changeOfStatus",value:function(t,e){var a=this.lazyLoadEventDataInput;this.viewType=""===e?this.viewType:e,this.isSpinnerVisible=!0,this.loadData(Object.assign({},a,{filters:Object.assign({},a.filters,{viewType:this.viewType})}))}},{key:"getVenListByStatus",value:function(t){this.status=t,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:t});var e=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(D.j)(this.lazyLoadEventDataInput.filters)});this.isSpinnerVisible=!0,this.loadData(e)}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!0;var e=parseInt(this.lazyLoadEventDataInput.first)/this.lazyLoadEventDataInput.rows;if(this.pageIndex=e,this.pageSize=this.lazyLoadEventDataInput.rows,this.lazyLoadEventDataInput.first=e,this.status=status,this.isSpinnerVisible=!0,1==t){this.currentstatus="ALL",this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:"ALL"});var a=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(D.j)(this.lazyLoadEventDataInput.filters)});this.loadData(a)}else{this.currentDeletedstatus=!1,this.currentstatus="ALL",this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:"ALL"});var n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(D.j)(this.lazyLoadEventDataInput.filters)});this.loadData(n)}}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("Publication","PublicationRecordId",this.restorerecord.publicationRecordId).subscribe((function(e){t.modal.close(),t.getDeleteListByStatus(!0),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"eventHandler",value:function(t){var e=t.target.value.toLowerCase();this.selectedreason&&(e==this.selectedreason.toLowerCase()?this.disableSave=!0:this.disableSave=!1)}},{key:"publicationId",value:function(t){for(var e=0;e<this.allpublic.length;e++)t==this.allpublic[e][0].publicationName&&(this.disableSave=!0,this.selectedreason=t)}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onDataLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allpublicationInfo=t.map((function(t){return Object.assign({},t)}))}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"openDelete",value:function(t,e){this.selectedRowforDelete=e,this.isEditMode=!1,this.isDeleteMode=!0,this.sourceAction=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openStep1",value:function(){y("#step1").collapse("show")}},{key:"openAllCollapse",value:function(){y("#step1").collapse("show"),y("#step2").collapse("show"),y("#step3").collapse("show"),y("#step4").collapse("show")}},{key:"closeAllCollapse",value:function(){y("#step1").collapse("hide"),y("#step2").collapse("hide"),y("#step3").collapse("hide"),y("#step4").collapse("hide")}},{key:"openView",value:function(t){var e=this;this.closeAllCollapse(),this.generalInfo=!0,y("#step1").collapse("show"),console.log(t),this.isActive=t.isActive,this.isSpinnerVisible=!0,this.loadMasterCompanies(),this.getFilesByPublicationId(t.publicationRecordId),this.toGetDocumentsList(t.publicationRecordId),this.publicationService.getpublicationbyIdView(t.publicationRecordId).subscribe((function(t){e.generalInfo=t[0],console.log(e.generalInfo)})),this.publicationService.getPublicationPNMapping(t.publicationRecordId).subscribe((function(t){console.log(t),e.pnMappingList=t.map((function(t){return Object.assign({},t,{partNumber:t.partNumber,partDescription:t.partDescription,itemClassification:t.itemClassification})}))})),this.publicationService.getAircraftMappedByPublicationId(t.publicationRecordId).subscribe((function(t){e.aircraftList=t.map((function(t){return Object.assign({},t,{aircraft:t.aircraftType,model:t.aircraftModel,dashNumber:t.dashNumber})}))})),this.publicationService.getAtaMappedByPublicationId(t.publicationRecordId).subscribe((function(t){var a=t;e.ataList=a.map((function(t){return Object.assign({},t,{ataChapter:"".concat(t.ataChapterCode," - ").concat(t.ataChapterName),ataSubChapter:"".concat(t.ataSubChapterCode," - ").concat(t.ataSubChapterDescription)})}))})),this.isSpinnerVisible=!1}},{key:"viewSelectedRowdbl",value:function(t){this.openView(t),y("#view").modal("show")}},{key:"closeDeleteModal",value:function(){y("#downloadPublication").modal("hide")}},{key:"exportCSV",value:function(t){var e=this;t._value=t._value.map((function(t){return Object.assign({},t,{revisionDate:t.revisionDate?e.datePipe.transform(t.revisionDate,"MMM-dd-yyyy hh:mm a"):"",nextReviewDate:t.nextReviewDate?e.datePipe.transform(t.nextReviewDate,"MMM-dd-yyyy hh:mm a"):"",expirationDate:t.expirationDate?e.datePipe.transform(t.expirationDate,"MMM-dd-yyyy hh:mm a"):"",verifiedDate:t.verifiedDate?e.datePipe.transform(t.verifiedDate,"MMM-dd-yyyy hh:mm a"):""})})),t.exportCSV()}},{key:"openDocumentsList",value:function(t,e){this.openDocumentsList=e,this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1})}},{key:"openEdit",value:function(t){this.isSpinnerVisible=!0;var e=t.publicationRecordId;this.router.navigateByUrl("/singlepages/singlepages/app-create-publication/edit/"+e)}},{key:"filterpublications",value:function(t){this.localCollection=[];for(var e=0;e<this.allpublicationInfo.length;e++){var a=this.allpublicationInfo[e].publicationId;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(this.allpublic.push([{publicationId:this.allpublicationInfo[e].publicationId,publicationName:a}]),this.localCollection.push(a))}}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.publicationService.deleteAcion(this.sourceAction.publicationRecordId).subscribe((function(e){t.loadData(t.lazyLoadEventDataInput),t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success)}},{key:"handleChange",value:function(t,e){var a=this;0==e.checked?(this.isSpinnerVisible=!0,this.sourceAction=t,this.sourceAction.updatedBy=this.userName,this.Active="In Active",this.sourceAction.isActive,this.publicationService.publicationStatus(this.sourceAction.publicationRecordId,!1,this.userName).subscribe((function(t){a.saveCompleted(a.sourceAction);var e=a.lazyLoadEventDataInput;a.loadData(Object.assign({},e,{filters:Object.assign({},e.filters,{viewType:a.viewType,status:a.status})})),a.isSpinnerVisible=!1}),(function(t){return a.saveFailedHelper(t)}))):(this.isSpinnerVisible=!0,this.sourceAction=t,this.sourceAction.updatedBy=this.userName,this.Active="Active",this.sourceAction.isActive,this.publicationService.publicationStatus(this.sourceAction.publicationRecordId,!0,this.userName).subscribe((function(t){a.saveCompleted(a.sourceAction);var e=a.lazyLoadEventDataInput;a.loadData(Object.assign({},e,{filters:Object.assign({},e.filters,{viewType:a.viewType,status:a.Active})})),a.isSpinnerVisible=!1}),(function(t){return a.saveFailedHelper(t)})))}},{key:"saveFailedHelper",value:function(t){this.isSpinnerVisible=!1,this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"getDismissReason",value:function(t){return t===w.a.ESC?"by pressing ESC":t===w.a.BACKDROP_CLICK?"by clicking on a backdrop":"with: "+t}},{key:"employeedata",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.employeeService.getEmployeeList().subscribe((function(e){console.log(e),t.onempDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"onempDataLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allEmployeeinfo=t}},{key:"publicationPagination",value:function(t){console.log(t);var e=parseInt(t.first)/t.rows;this.pageIndex=e,this.pagesize=t.rows,t.first=e,this.loadData(t)}},{key:"getAllAircraftManufacturer",value:function(){var t=this;this.aircraftManufacturerService.getAll().subscribe((function(e){t.showModelAircraftModel=!1,e[0].map((function(e){t.airCraftTypesList.push({value:e.aircraftTypeId,label:e.description})}))}))}},{key:"getAircraftModelByManfacturerType",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var e=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:this.selectedAircraftModel=null,this.selectedDashNumbers=null,this.aircraftModelList=[{label:"Select Aircraft Model",value:null}],this.dashNumberList=[{label:"Select Dash Number",value:null}],""!==this.selectAircraftManfacturer&&this.aircraftModelService.getAircraftModelListByManufactureId(this.selectAircraftManfacturer).subscribe((function(t){t[0].map((function(t){e.aircraftModelList.push({label:t.modelName,value:t.aircraftModelId})}))}));case 1:case"end":return t.stop()}}),t,this)})))}},{key:"getDashNumberByManfacturerandModel",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var e=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:this.selectedDashNumbers=null,this.dashNumberList=[{label:"Select DashNumber",value:null}],""!==this.selectAircraftManfacturer&&""!==this.selectedAircraftModel&&this.Dashnumservice.getDashNumberByModelTypeId(this.selectedAircraftModel,this.selectAircraftManfacturer).subscribe((function(t){t.map((function(t){e.dashNumberList.push({label:t.dashNumber,value:t.dashNumberId})}))}));case 1:case"end":return t.stop()}}),t,this)})))}},{key:"getAllATAChapter",value:function(){var t=this;this.ataMainSer.getAtaMainList().subscribe((function(e){e[0].map((function(e){t.ataChapterList.push({value:e.ataChapterId,label:e.ataChapterCode+"-"+e.ataChapterName})}))}))}},{key:"getSubChapterByATAChapter",value:function(){var t=this;""!==this.selectedATAchapter&&this.ataMainSer.getMultiATASubDesc(this.selectedATAchapter).subscribe((function(e){e.map((function(e){t.ataSubChapterList.push({label:e.ataChapterCode+"-"+e.description,value:e.ataSubChapterId})}))}))}},{key:"onSearchAircraftInfoAtaChapter",value:function(){var t=this;if(console.log(this.selectedATAchapter,this.selectedATASubChapter,this.selectAircraftManfacturer,this.selectedAircraftModel,this.selectedDashNumbers,this.pageIndex,this.pagesize),this.selectedATAchapter=this.selectedATAchapter?this.selectedATAchapter:0,this.selectedATASubChapter=this.selectedATASubChapter?this.selectedATASubChapter:0,this.selectAircraftManfacturer=this.selectAircraftManfacturer?this.selectAircraftManfacturer:0,this.selectedAircraftModel=this.selectedAircraftModel?this.selectedAircraftModel:0,this.selectedDashNumbers=this.selectedDashNumbers?this.selectedDashNumbers:0,console.log(this.selectedATAchapter,this.selectedATASubChapter,this.selectAircraftManfacturer,this.selectedAircraftModel,this.selectedDashNumbers,this.pageIndex,this.pagesize),void 0!==this.selectAircraftManfacturer||void 0!==this.selectedATAchapter){var e={first:0,rows:10,sortOrder:1,filters:{ViewType:this.viewType,ataChapterId:this.selectedATAchapter?this.selectedATAchapter:0,ataSubChapterId:this.selectedATASubChapter?this.selectedATASubChapter:0,airCraftId:this.selectAircraftManfacturer?this.selectAircraftManfacturer:0,modelId:this.selectedAircraftModel?this.selectedAircraftModel:0,dashNumberId:this.selectedDashNumbers?this.selectedDashNumbers:0,partNos:this.advanceSearchReq.partNos,PNDescription:this.advanceSearchReq.PNDescription}};this.publicationService.getpublicationslistadvancesearch(e).subscribe((function(e){console.log(e),t.onDataLoadSuccessful(e[0].results),t.totalRecords=e[0].totalRecordsCount,t.totalPages=Math.ceil(t.totalRecords/t.pagesize)}))}}},{key:"onReset",value:function(){this.selectAircraftManfacturer=null,this.selectedAircraftModel=null,this.selectedDashNumbers=null,this.selectedATAchapter=null,this.selectedATASubChapter=null,this.advanceSearchReq={},this.inputValue="",this.lazyLoadEventDataInput.filters={},this.loadData(this.lazyLoadEventDataInput)}},{key:"downloadFileUpload",value:function(t){var e="".concat(this.configurations.baseUrl,"/api/FileUpload/downloadattachedfile?filePath=").concat(t.link);window.location.assign(e)}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=Publication&fileName=publication.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;a.length>0&&(this.formData.append("file",a[0]),this.publicationService.publicationFileUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.loadData(e.lazyLoadEventDataInput),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"openHistoryDoc",value:function(t){var e=this;this.commonService.GetAttachmentPublicationAudit(t.attachmentDetailId).subscribe((function(t){e.sourceViewforDocumentAudit=t}))}},{key:"getColorCodeForHistoryDoc",value:function(t,e,a){var n=this.sourceViewforDocumentAudit,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"toGetDocumentsList",value:function(t){var e=this;this.publicationService.getFilesBypublicationNew(t).subscribe((function(t){e.allCustomerFinanceDocumentsList=t}))}},{key:"getAuditHistoryById",value:function(t){var e=this;this.publicationService.getPublicationAuditDetails(t.publicationRecordId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"dismissDocumentPopupModel",value:function(t){this.closeMyModel(t)}},{key:"closeMyModel",value:function(t){y(t).modal("hide")}},{key:"onChangeInputField",value:function(t,e){var a=this,n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(D.j)(this.lazyLoadEventDataInput.filters)});this.publicationService.getWorkFlows(n).subscribe((function(t){a.onDataLoadSuccessful(t[0]),a.totalRecords=t[0][0].totalRecords,a.totalPages=Math.ceil(a.totalRecords/a.pagesize)}),(function(t){return a.onDataLoadFailed(t)}))}},{key:"enableDisableAdvancedSearch",value:function(t){this.showAdvancedSearchCard=t,this.onReset()}},{key:"getFilesByPublicationId",value:function(t){var e=this;this.publicationService.getFilesBypublication(t).subscribe((function(t){e.attachmentList=t||[],e.attachmentList.length>0&&e.attachmentList.forEach((function(t){t.isFileFromServer=!0,t.attachmentDetails.forEach((function(t){t.isFileFromServer=!0}))}))}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Wt.ctorParameters=function(){return[{type:u.a},{type:A.a},{type:f.a},{type:d.DatePipe},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:jt.a},{type:m.b},{type:b.a},{type:c.Router},{type:Vt.a},{type:zt.a},{type:Gt.a},{type:_t.a},{type:C.a},{type:M.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],Wt.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],Wt.prototype,"sort",void 0),Wt=n.b([Object(s.Component)({selector:"app-publication",template:n.c(a("/KH4")).default,animations:[h.a],providers:[d.DatePipe],styles:[n.c(a("mmB/")).default]})],Wt);var qt=a("wu0o"),$t=function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.reasonId=a,this.reasonForRemoval=n,this.reasonCode=s,this.masterCompanyId=i,this.createdBy=r,this.createdDate=o,this.updatedDate=l,this.updatedBy=d,this.masterCompany=e,this.isActive=c,this.memo=u},Yt=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.configurations=n,this.authService=s,this.modalService=i,this.activeModal=r,this.masterComapnyService=o,this._fb=l,this.alertService=d,this.reasonService=c,this.dialog=u,this.reasonPaginationList=[],this.pageSize=10,this.reason=[],this.allreasn=[],this.disableSave=!1,this.disableSaveForEdit=!1,this.reason_Name="",this.reasonForRemoval="",this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.Active="Active",this.displayedColumns=["reasonCode","reasonForRemoval","memo"],this.allReasonsInfo=[],this.disableReason=!1,this.auditHistory=[],this.title="Create",this.allComapnies=[],this.localCollection=[],this.allWorkFlows=[],this.isEditMode=!1,this.isDeleteMode=!1,this.currentstatus="Active",this.newReason={reasonCode:"",reasonForRemoval:"",memo:"",masterCompanyId:1,isActive:!0,isDelete:!1,reasonName:""},this.addNewReason=Object.assign({},this.newReason),this.disableSaveForReason=!1,this.disableSaveForReasons=!1,this.isEdit=!1,this.disableSaveForReasonCode=!1,this.formData=new FormData,this.reasonPagination=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.displayedColumns.push("action"),this.dataSource=new H.a}return _createClass(t,[{key:"ngOnInit",value:function(){this.getReasonList(),this.cols=[{field:"reasonCode",header:"Reason Code"},{field:"reasonForRemoval",header:"Reason For Removal"},{field:"memo",header:"Memo"}],this.breadCrumb.currentUrl="/singlepages/singlepages/app-reason",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.selectedColumns=this.cols}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.reasonService.getReasonList().subscribe((function(e){return t.onDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onDataLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.totalRecords=t.length,this.allReasonsInfo=t}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"open",value:function(t){this.isEditMode=!1,this.isDeleteMode=!1,this.disableSave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=new $t,this.sourceAction.isActive=!0,this.reasonName="",this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openView",value:function(t,e){this.sourceAction=e,this.reason_Name=e.reasonCode,this.reasonForRemoval=e.reasonForRemoval,this.memo=e.memo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHelpText",value:function(t){this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceAction=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openEdit",value:function(t,e){this.isEditMode=!0,this.isSaving=!0,this.loadMasterCompanies(),this.disableSave=!1,this.sourceAction=e,this.reasonName=this.sourceAction.reasonCode,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"eventHandler",value:function(t){var e=t.target.value.toLowerCase();this.selectedreason&&(e==this.selectedreason.toLowerCase()?this.disableSave=!0:this.disableSave=!1)}},{key:"itemId",value:function(t){for(var e=0;e<this.allreasn.length;e++)t==this.allreasn[e][0].reasonName&&(this.disableSave=!0,this.selectedreason=t)}},{key:"filterReasons",value:function(t){this.localCollection=[];for(var e=0;e<this.allReasonsInfo.length;e++){var a=this.allReasonsInfo[e].reasonCode;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(this.allreasn.push([{reasonId:this.allReasonsInfo[e].reasonId,reasonName:a}]),this.localCollection.push(a))}}},{key:"editItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,0==this.isEditMode?(this.sourceAction.createdBy=this.userName,this.sourceAction.updatedBy=this.userName,this.sourceAction.reasonCode=this.reasonName,this.sourceAction.masterCompanyId=1,this.reasonService.newReason(this.sourceAction).subscribe((function(){t.getReasonList(),t.alertService.showMessage("Success","Added  New Reason Successfully",g.d.success)}))):(this.sourceAction.updatedBy=this.userName,this.sourceAction.reasonCode=this.reasonName,this.sourceAction.masterCompanyId=1,this.reasonService.updateReason(this.sourceAction).subscribe((function(){t.getReasonList(),t.alertService.showMessage("Success","Updated Reason Successfully",g.d.success)}))),this.modal.close()}},{key:"handleChange",value:function(t,e){var a=this;0==e.checked?(this.sourceAction=t,this.sourceAction.updatedBy=this.userName,this.Active="In Active",this.sourceAction.isActive,this.reasonService.updateReason(this.sourceAction).subscribe((function(t){return a.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}),(function(t){return a.saveFailedHelper(t)}))):(this.sourceAction=t,this.sourceAction.updatedBy=this.userName,this.Active="Active",this.sourceAction.isActive,this.reasonService.updateReason(this.sourceAction).subscribe((function(t){return a.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}),(function(t){return a.saveFailedHelper(t)})))}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.reasonService.deleteReason(this.sourceAction.reasonId).subscribe((function(){t.getReasonList(),t.alertService.showMessage("Success","Deleted Reason Successfully",g.d.success)})),this.modal.close()}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Reason was deleted successfully",g.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Reason was edited successfully",g.d.success)}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Reason was created successfully",g.d.success)}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"getDismissReason",value:function(t){return t===w.a.ESC?"by pressing ESC":t===w.a.BACKDROP_CLICK?"by clicking on a backdrop":"with: "+t}},{key:"showAuditPopup",value:function(t,e){this.auditAssetStatus(e),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"auditAssetStatus",value:function(t){var e=this;this.AuditDetails=[],this.reasonService.getReasonAudit(t).subscribe((function(t){t.length>0&&(e.AuditDetails=t,e.AuditDetails[0].ColumnsToAvoid=["reasonAuditId","reasonId","masterCompanyId","createdBy","createdDate","updatedDate"])}))}},{key:"updatePaginatorState",value:function(){this.paginatorState={rows:this.rows,first:this.first},this.paginatorState&&this.loadReason(this.paginatorState)}},{key:"loadReason",value:function(t){var e=this;this.loading=!0,this.rows=t.rows,this.first=t.first,this.field?(this.reason.push({ReasonCode:this.reasonCodeInputFieldValue,ReasonForRemoval:this.reasonForRemovalInputFieldValue,Memo:this.memoInputFieldValue,CreatedBy:this.createdByInputFieldValue,UpdatedBy:this.updatedByInputFieldValue,first:this.first,page:10,pageCount:10,rows:this.rows,limit:5}),this.reason&&this.reasonService.getServerPages(this.reason[this.reason.length-1]).subscribe((function(t){e.reasonPaginationList=t,e.reasonPagination=e.reasonPaginationList[0].reasonList,e.totalRecords=e.reasonPaginationList[0].totalRecordsCount,e.totelPages=Math.ceil(e.totalRecords/e.rows)}))):setTimeout((function(){e.allReasonsInfo&&(e.reasonService.getServerPages(t).subscribe((function(t){e.reasonPaginationList=t,e.reasonPagination=e.reasonPaginationList[0].reasonList,e.totalRecords=e.reasonPaginationList[0].totalRecordsCount,e.totelPages=Math.ceil(e.totalRecords/e.rows)})),e.loading=!1)}),1e3)}},{key:"inputFiledFilter",value:function(t,e,a){var n=this;this.first=0,this.event=t,this.field=e,this.matvhMode=a,"reasonCode"==e&&(this.reasonCodeInputFieldValue=t),"reasonForRemoval"==e&&(this.reasonForRemovalInputFieldValue=t),"memo"==e&&(this.memoInputFieldValue=t),this.reason.push({ReasonCode:this.reasonCodeInputFieldValue,ReasonForRemoval:this.reasonForRemovalInputFieldValue,Memo:this.memoInputFieldValue,first:this.first,page:10,pageCount:10,rows:this.rows,limit:5}),this.reason&&this.reasonService.getServerPages(this.reason[this.reason.length-1]).subscribe((function(t){n.reasonPaginationList=t,n.reasonPagination=n.reasonPaginationList[0].reasonList,n.totalRecords=n.reasonPaginationList[0].totalRecordsCount,n.totelPages=Math.ceil(n.totalRecords/n.rows)}))}},{key:"getReasonList",value:function(){var t=this;this.reasonService.getAllReasonsList().subscribe((function(e){t.originalTableData=e[0].columnData,t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"getAuditHistoryById",value:function(t){var e=this;this.reasonService.getReasonAudit(t.reasonId).subscribe((function(t){e.auditHistory=t[0].result}))}},{key:"resetReasonForm",value:function(){this.isEdit=!1,this.disableSaveForReasonCode=!1,this.selectedRecordForEdit=void 0,this.addNewReason=Object.assign({},this.newReason)}},{key:"selectedRSN",value:function(t){var e=Object(D.k)("reasonCode",t,this.selectedRecordForEdit);this.disableSaveForReason=!e}},{key:"filterReasonCodes",value:function(t){this.reasonList=this.reasonPagination;var e=_toConsumableArray(this.reasonPagination.filter((function(e){return e.reasonCode.toLowerCase().includes(t.query.toLowerCase())})));this.reasonList=e}},{key:"filterReasonForRemoval",value:function(t){this.reasonForRemovalList=this.reasonPagination;var e=_toConsumableArray(this.reasonPagination.filter((function(e){return e.reasonForRemoval.toLowerCase().includes(t.query.toLowerCase())})));this.reasonForRemovalList=e}},{key:"checkReasonCodeExists",value:function(t,e){Object(D.m)(t,e,this.reasonPagination,this.selectedRecordForEdit).length>0?(this.disableSaveForReason=!0,this.disableSaveForReasons=!0):(this.disableSaveForReason=!1,this.disableSaveForReasons=!1)}},{key:"saveReason",value:function(){var t=this,e=Object.assign({},this.addNewReason,{createdBy:this.userName,updatedBy:this.userName,reasonCode:Object(D.a)("reasonCode",this.addNewReason.reasonCode),reasonForRemoval:Object(D.a)("reasonForRemoval",this.addNewReason.reasonForRemoval),memo:Object(D.a)("memo",this.addNewReason.memo)});this.isEdit?this.reasonService.updateReason(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetReasonForm(),t.getReasonList(),t.alertService.showMessage("Success","Updated Reason Successfully",g.d.success)})):this.reasonService.newReason(e).subscribe((function(){t.resetReasonForm(),t.getReasonList(),t.alertService.showMessage("Success","Added  New Reason Successfully",g.d.success)}))}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"editReason",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveForEdit=!0,this.disableSaveForReasonCode=!1,this.addNewReason=Object.assign({},t,{reasonName:Object(D.d)("reasonId",t.reasonId,this.reasonPagination),reasonCode:Object(D.d)("reasonId",t.reasonId,this.reasonPagination)}),this.selectedRecordForEdit=Object.assign({},this.addNewReason)}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=Reason&fileName=reason.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.reasonService.reasonFileUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getReasonList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.reasonPagination=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.reasonPagination=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.reasonPagination=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.reasonPagination=e)),this.totalRecords=this.reasonPagination.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("Reason","ReasonId",this.restorerecord.reasonId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getReasonList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"changeStatus",value:function(t){}},{key:"columnsChanges",value:function(){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Yt.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:A.a},{type:f.a},{type:w.c},{type:w.b},{type:b.a},{type:r.FormBuilder},{type:g.b},{type:qt.a},{type:m.b}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],Yt.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],Yt.prototype,"sort",void 0),Yt=n.b([Object(s.Component)({selector:"app-reason",template:n.c(a("f3dK")).default,animations:[h.a],styles:[n.c(a("bUQL")).default]})],Yt);var Kt=a("zUUN"),Jt=a("Kovn"),Qt=function t(e,a,n,s,i,r,o,l,d,c,u,p){_classCallCheck(this,t),this.taxRateId=a,this.taxTypeId=n,this.taxRate=s,this.masterCompanyId=i,this.createdBy=r,this.createdDate=o,this.updatedDate=l,this.updatedBy=d,this.masterCompany=e,this.isActive=c,this.isDeleted=u,this.memo=p},Zt=function(){function t(e,a,n,s,i,r,o,l,d,c,u,p,m){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.commonService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.taxTypeService=l,this.dialog=d,this.configurations=c,this.masterComapnyService=u,this.taxRateService=p,this.commonservice=m,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"taxRate",header:"Tax Rate"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSave=!1,this.createdDate="",this.currentstatus="Active",this.new={taxRate:0,masterCompanyId:1,isActive:!0,isDeleted:!0,memo:"",createdDate:"",updatedDate:""},this.addNew=new Qt,this.existingRecordsResponse=[],this.disableSaveForEdit=!1,this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.addNew.isActive=!0,this.getAllPercentage(),this.getTaxTypes(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-tax-rate",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.getList()}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"getAllPercentage",value:function(){var t=this;this.commonservice.smartDropDownList("[Percent]","PercentId","PercentValue").subscribe((function(e){t.percentageList=e}))}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"getTaxTypes",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.taxTypeService.getWorkFlows().subscribe((function(e){return t.onTaxTypeLoad(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"onTaxTypeLoad",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allTaxTypes=t}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"filterTaxType",value:function(t){this.filteredTaxType=this.allTaxTypes;var e=_toConsumableArray(this.allTaxTypes.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.filteredTaxType=e}},{key:"customExcelUpload",value:function(){}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=TaxRate&fileName=TaxRate.xlsx";window.location.assign(t)}},{key:"getList",value:function(){var t=this;this.taxRateService.getTaxRateList().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"checkTaxRateExists",value:function(t,e){Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit).length>0?this.disableSave=!0:this.disableSave=!1}},{key:"selectedTaxType",value:function(t){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSave=!e}},{key:"save",value:function(){var t=this;if(this.isEdit){var e=Object.assign({},this.addNew,{updatedBy:this.userName,masterCompanyId:1});this.taxRateService.updateTaxRate(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Updated Tax Rate Successfully  ",g.d.success)}))}else{var a=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,masterCompanyId:1});this.taxRateService.newTaxRate(a).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added Tax Rate Successfully  ",g.d.success)}))}}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.addNew=new Qt,this.addNew.isActive=!0}},{key:"edit",value:function(t){console.log("rowData",t),this.isEdit=!0,this.disableSaveForEdit=!0,this.addNew=Object.assign({},t),this.addNew=Object.assign({},this.addNew),console.log("addNew",this.addNew),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this,a=Object.assign({},t);this.taxRateService.updateTaxRate(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){var e=Object.assign({},t);this.viewRowData=e}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=Object.assign({},t)}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.taxRateService.deleteTaxRate(this.selectedRowforDelete.taxRateId).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted Tax Rate Successfully",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"showHistory",value:function(t){var e=this;this.currentModeOfOperation=Y.Audit,this.taxRateService.getTaxRateAudit(t.taxRateId).subscribe((function(t){t&&(e.auditHistory=t[0].result)}))}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("TaxRate","TaxRateId",this.restorerecord.taxRateId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"onBlur",value:function(t){}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Zt.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:M.a},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:Kt.a},{type:m.b},{type:A.a},{type:b.a},{type:Jt.a},{type:M.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],Zt.prototype,"modal",void 0),Zt=n.b([Object(s.Component)({selector:"app-tax-rate",template:n.c(a("0kuB")).default,animations:[h.a],styles:[n.c(a("4I8H")).default]})],Zt);var Xt=a("7+Ft"),te=function(){function t(e,a,n,s,i,r,o){_classCallCheck(this,t),this.breadCrumb=e,this.modalService=a,this.commonService=n,this.configurations=s,this.authService=i,this.alertService=r,this.unitofmeasureService=o,this.uomData=[],this.newUOM={description:"",shortName:"",standard:"",masterCompanyId:1,isActive:!0,isDelete:!1,memo:"",unitName:""},this.addNewUOM=Object.assign({},this.newUOM),this.disableSaveForEdit=!1,this.isEdit=!1,this.isDeleted=!1,this.pageIndex=0,this.pageSize=10,this.currentstatus="Active",this.uomHeaders=[{field:"description",header:"Unit Of Measure"},{field:"shortName",header:"Short Name"},{field:"standard",header:"Standard"},{field:"memo",header:"Memo"}],this.selectedColumns=this.uomHeaders,this.formData=new FormData,this.auditHistory=[],this.disableSaveForShortName=!1,this.disableSaveForUOMMsg=!1,this.disableSaveForShortNameMsg=!1,this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getUOMList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-unit-of-measure",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getUOMList()}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.unitofmeasureService.UOMFileUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getUOMList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=UnitOfMeasure&fileName=uom.xlsx";window.location.assign(t)}},{key:"getUOMList",value:function(){var t=this;this.unitofmeasureService.getAllUnitofMeasureList().subscribe((function(e){t.originalTableData=e[0].columnData,t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkUOMExists",value:function(t,e){Object(D.m)(t,e,this.uomData,this.selectedRecordForEdit).length>0?(this.disableSaveForUOMMsg=!0,this.disableSaveForShortNameMsg=!1):(this.disableSaveForUOMMsg=!1,this.disableSaveForShortNameMsg=!1)}},{key:"checkShortNameExists",value:function(t,e){console.log(this.selectedRecordForEdit);for(var a=[],n=0;n<this.uomData.length;n++)null==this.uomData[n].shortName&&null==this.uomData[n].shortName||a.push(this.uomData[n]);Object(D.m)(t,e,a,this.selectedRecordForEdit).length>0?(this.disableSaveForShortName=!0,this.disableSaveForUOMMsg=!0,this.disableSaveForShortNameMsg=!0):(this.disableSaveForShortName=!1,this.disableSaveForUOMMsg=!1,this.disableSaveForShortNameMsg=!1)}},{key:"filterUnitOfMeasures",value:function(t){this.uomList=this.originalTableData;var e=_toConsumableArray(this.originalTableData.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.uomList=e}},{key:"filterShortName",value:function(t){this.shortNameList=this.originalTableData;for(var e=[],a=0;a<this.originalTableData.length;a++)null==this.originalTableData[a].shortName&&null==this.originalTableData[a].shortName||e.push(this.originalTableData[a]);var n=_toConsumableArray(e.filter((function(e){return e.shortName.toLowerCase().includes(t.query.toLowerCase())})));this.shortNameList=n}},{key:"selectedUOM",value:function(t){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSaveForUOMMsg=!e}},{key:"selectedShortName",value:function(t){var e=Object(D.k)("shortName",t,this.selectedRecordForEdit);this.disableSaveForShortName=!e,this.disableSaveForShortNameMsg=!e}},{key:"saveUOM",value:function(){var t=this,e=Object.assign({},this.addNewUOM,{createdBy:this.userName,updatedBy:this.userName,shortName:Object(D.a)("shortName",this.addNewUOM.shortName),description:Object(D.a)("description",this.addNewUOM.unitName),unitName:Object(D.a)("description",this.addNewUOM.unitName)});this.isEdit?this.unitofmeasureService.updateUnitOfMeasure(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetUOMForm(),t.getUOMList(),t.alertService.showMessage("Success","Updated Unit of Measure Successfully",g.d.success)})):this.unitofmeasureService.newUnitOfMeasure(e).subscribe((function(){t.resetUOMForm(),t.getUOMList(),t.alertService.showMessage("Success","Added New Unit of Measure Successfully",g.d.success)}))}},{key:"resetUOMForm",value:function(){this.isEdit=!1,this.disableSaveForShortName=!1,this.disableSaveForShortNameMsg=!1,this.disableSaveForUOMMsg=!1,this.selectedRecordForEdit=void 0,this.addNewUOM=Object.assign({},this.newUOM)}},{key:"editUOM",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveForEdit=!0,this.disableSaveForShortName=!1,this.disableSaveForUOMMsg=!1,this.disableSaveForShortNameMsg=!1,this.addNewUOM=Object.assign({},t,{unitName:Object(D.d)("unitOfMeasureId",t.unitOfMeasureId,this.uomData),shortName:Object(D.d)("unitOfMeasureId",t.unitOfMeasureId,this.uomData)}),this.selectedRecordForEdit=Object.assign({},this.addNewUOM)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.unitofmeasureService.updateUnitOfMeasure(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success),e.getUOMList()}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.unitofmeasureService.deleteUnitOfMeasure(this.selectedRowforDelete.unitOfMeasureId).subscribe((function(){e.getUOMList(),e.alertService.showMessage("Success","Deleted UOM Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.unitofmeasureService.getUnitOfWorkAuditDetails(t.unitOfMeasureId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.uomData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.uomData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.uomData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.uomData=e)),this.totalRecords=this.uomData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("UnitOfMeasure","UnitOfMeasureId",this.restorerecord.unitOfMeasureId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getUOMList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();te.ctorParameters=function(){return[{type:u.a},{type:w.c},{type:M.a},{type:A.a},{type:f.a},{type:g.b},{type:Xt.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],te.prototype,"modal",void 0),te=n.b([Object(s.Component)({selector:"app-unit-of-measure",template:n.c(a("b9cX")).default,animations:[h.a],styles:[n.c(a("k7KX")).default]})],te);var ee=a("9pnx"),ae=a("QYqR"),ne=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.activeModal=s,this.commonService=i,this._fb=r,this.alertService=o,this.workperformedService=l,this.configurations=d,this.dialog=c,this.masterComapnyService=u,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"workPerformedCode",header:"Work Performed Code"},{field:"description",header:"Work Performed Description"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGroupId=!1,this.disableSaveForDescriptionMSG=!1,this.disableSaveForEdit=!1,this.disableSaveWorkperformedMsg=!1,this.disableSaveWorkperformed=!1,this.currentstatus="Active",this.new={workPerformedCode:"",description:"",masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.existingRecordsResponse=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-work-performed",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"customExcelUpload",value:function(t){}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=WorkPerformed&fileName=workperformed.xlsx";window.location.assign(t)}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"getList",value:function(){var t=this;this.workperformedService.getWorkPerformedList().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkGroupDescriptionExists1",value:function(t,e){console.log(this.selectedRecordForEdit),Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit).length>0?this.disableSaveForDescriptionMSG=!0:this.disableSaveForDescriptionMSG=!1}},{key:"filterDescription",value:function(t){this.descriptionList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.descriptionList=e}},{key:"selectedDescription",value:function(t){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSaveForDescriptionMSG=!e}},{key:"checkGroupworkPerformedExists",value:function(t,e){Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit).length>0?this.disableSaveWorkperformedMsg=!0:this.disableSaveWorkperformedMsg=!1}},{key:"filterWorkperformed",value:function(t){this.workPerformedCodeList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.workPerformedCode.toLowerCase().includes(t.query.toLowerCase())})));this.workPerformedCodeList=e}},{key:"selectedWorkperformed",value:function(t){var e=Object(D.k)("workPerformedCode",t,this.selectedRecordForEdit);this.disableSaveWorkperformed=!e}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,workPerformedCode:Object(D.a)("workPerformedCode",this.addNew.workPerformedCode),description:Object(D.a)("description",this.addNew.description)});this.isEdit?this.workperformedService.updateWorkPerformed(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Work Performed Successfully  ",g.d.success)})):this.workperformedService.newWorkPerformed(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Work Performed Successfully  ",g.d.success)}))}},{key:"onBlur",value:function(t){var e=t.target.value;this.disableSaveWorkperformedMsg=!1;for(var a=0;a<this.originalData.length;a++){var n=this.originalData[a].workPerformedCode,s=this.originalData[a].workPerformedId;if(n.toLowerCase()==e.toLowerCase()){this.isEdit||!this.isEdit||s!=this.selectedRecordForEdit.glAccountClassId?this.disableSaveWorkperformedMsg=!0:this.disableSaveWorkperformedMsg=!1,console.log("workPerformedCode :",n);break}}}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.addNew=Object.assign({},this.new)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveWorkperformedMsg=!1,this.disableSaveForEdit=!0,this.disableSaveForDescriptionMSG=!1,this.addNew=Object.assign({},t,{description:Object(D.e)("description",t.description,this.originalData),workPerformedCode:Object(D.e)("workPerformedCode",t.workPerformedCode,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.workperformedService.updateWorkPerformed(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.workperformedService.deleteWorkPerformed(this.selectedRowforDelete.workPerformedId).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted Work Performed Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.workperformedService.getWorkPerformedAudit(t.workPerformedId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("WorkPerformed","WorkPerformedId",this.restorerecord.workPerformedId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();ne.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:w.b},{type:M.a},{type:r.FormBuilder},{type:g.b},{type:ae.a},{type:A.a},{type:m.b},{type:b.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],ne.prototype,"modal",void 0),ne=n.b([Object(s.Component)({selector:"app-work-performed",template:n.c(a("j7KC")).default,animations:[h.a],styles:[n.c(a("xcvK")).default]})],ne);var se=a("FxvM"),ie=function(){function t(e,a,n,s,i,r,o,l,d,c){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.commonService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.workscopeService=l,this.dialog=d,this.masterComapnyService=c,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"workScopeCode",header:"Work Scope Code"},{field:"description",header:"Work Scope Name"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.disableSave=!1,this.new={workScopeCode:"",description:"",masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.currentstatus="Active",this.disableSaveForEdit=!1,this.existingRecordsResponse=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-work-scope",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"customExcelUpload",value:function(t){}},{key:"sampleExcelDownload",value:function(){}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"getChange",value:function(){this.disableSaveForDescription=!1,this.disableSaveGroupId=!1,this.disableSave=!1}},{key:"getList",value:function(){var t=this;this.workscopeService.getWorkScopeList().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkGroupDescriptionExists",value:function(t,e){console.log(this.selectedRecordForEdit),Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit).length>0?(this.disableSaveForDescription=!0,this.disableSave=!0):(this.disableSaveForDescription=!1,this.disableSave=!1)}},{key:"filterDescription",value:function(t){this.descriptionList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.workScopeCode.toLowerCase().includes(t.query.toLowerCase())})));this.descriptionList=e}},{key:"selectedDescription",value:function(t){var e=Object(D.k)("workScopeCode",t,this.selectedRecordForEdit);this.disableSaveForDescription=!e,this.disableSave=!e}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,description:Object(D.a)("description",this.addNew.description),workScopeCode:Object(D.a)("workScopeCode",this.addNew.workScopeCode)});this.isEdit?this.workscopeService.updateWorkScope(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Work scope Successfully  ",g.d.success)})):this.workscopeService.newWorkScope(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Work scope Successfully  ",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.addNew=Object.assign({},this.new)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveForEdit=!0,this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.disableSave=!1,this.addNew=Object.assign({},t,{workScopeCode:Object(D.e)("workScopeCode",t.workScopeCode,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.workscopeService.updateWorkScope(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.workscopeService.deleteWorkScope(this.selectedRowforDelete.workScopeId,this.selectedRowforDelete.userName).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted Work Scope Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.workscopeService.getWorkScopeAuditDetails(t.workScopeId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("WorkScope","WorkScopeId",this.restorerecord.workScopeId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();ie.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:M.a},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:se.a},{type:m.b},{type:b.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],ie.prototype,"modal",void 0),ie=n.b([Object(s.Component)({selector:"app-work-scope",template:n.c(a("SSd5")).default,animations:[h.a],styles:[n.c(a("X30y")).default]})],ie);var re=function(){function t(e){_classCallCheck(this,t),this.breadCrumb=e}return _createClass(t,[{key:"ngOnInit",value:function(){this.breadCrumb.currentUrl="/singlepages/singlepages/app-action-attribute-mapping",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"ngAfterViewInit",value:function(){}}]),t}();re.ctorParameters=function(){return[{type:u.a}]},re=n.b([Object(s.Component)({selector:"app-action-attribute-mapping",template:n.c(a("N6yo")).default,animations:[h.a],styles:[n.c(a("rq7G")).default]})],re);var oe=a("39A6"),le=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.activeModal=s,this._fb=i,this.alertService=r,this.atasubchapterService=o,this.ataChapterService=l,this.dialog=d,this.configurations=c,this.commonService=u,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"ataSubChapterCode",header:"Code"},{field:"description",header:"ATA Sub Chapter"},{field:"ataChapterName",header:"ATA Chapter"},{field:"ataChapterCategory",header:"ATA Chapter Category"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.disableSaveForDescriptionMsg=!1,this.new={ataSubChapterCode:"",description:"",ataChapterId:"",ataChapterName:"",ataChapterCategory:"",masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.currentstatus="Active",this.existingRecordsResponse=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-ata-sub-chapter1",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"onBlur",value:function(t){var e=t.target.value;this.disableSaveForDescriptionMsg=!1;for(var a=0;a<this.originalData.length;a++){var n=this.originalData[a].description,s=this.originalData[a].ataSubChapterId;if(n.toLowerCase()==e.toLowerCase()){!this.isEdit||this.isEdit?(this.disableSaveForDescriptionMsg=!0,this.disableSaveForDescription=!0):s!=this.selectedRecordForEdit.ataSubChapterId?(this.disableSaveForDescriptionMsg=!0,this.disableSaveForDescription=!1):(this.disableSaveForDescriptionMsg=!1,this.disableSaveForDescription=!1),console.log("description :",n);break}}}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("ModuleName","ATASubChapter"),this.formData.append("file",a[0]),this.commonService.smartExcelFileUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.getList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=ATASubchapter&fileName=ATASubchapter.xlsx";window.location.assign(t)}},{key:"getList",value:function(){var t=this;this.atasubchapterService.getAtaSubChapter1List().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)})),this.ataChapterService.getAtaMainList().subscribe((function(e){t.ataList=e[0]}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkGroupDescriptionExists",value:function(t,e){console.log(this.selectedRecordForEdit),Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit).length>0?(this.disableSaveForDescription=!0,this.disableSaveForDescriptionMsg=!0):(this.disableSaveForDescription=!1,this.disableSaveForDescriptionMsg=!1)}},{key:"filterDescription",value:function(t){this.descriptionList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.descriptionList=e}},{key:"selectedDescription",value:function(t){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSaveForDescription=!e}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,description:Object(D.a)("description",this.addNew.description),ataChapterCategory:Object(D.a)("ataChapterCategory",this.addNew.ataChapterCategory),ataChapterName:Object(D.a)("ataChapterId",this.addNew.ataChapterId)});console.log(e),this.isEdit?this.atasubchapterService.updateATASubChapter1(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Updated  ATA Subchapter Successfully  ",g.d.success)})):this.atasubchapterService.newATASubChapter1(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New ATA Subchapter Successfully  ",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.disableSaveForDescriptionMsg=!1,this.disableSaveForDescription=!1,this.addNew=Object.assign({},this.new)}},{key:"getmemo",value:function(t){this.disableSaveForDescriptionMsg=!1,this.disableSaveForDescription=!1}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveGroupId=!1,this.disableSaveForDescription=!0,this.disableSaveForDescriptionMsg=!1,this.addNew=Object.assign({},t,{description:Object(D.e)("description",t.description,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.atasubchapterService.updateATASubChapter1(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.atasubchapterService.deleteATASubChapter1(this.selectedRowforDelete.ataSubChapterId).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted ATA Subchapter Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.atasubchapterService.historyATASubChapter1(t.ataSubChapterId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("ATASubChapter","ATASubChapterId",this.restorerecord.ataSubChapterId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();le.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:oe.a},{type:C.a},{type:m.b},{type:A.a},{type:M.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],le.prototype,"modal",void 0),le=n.b([Object(s.Component)({selector:"app-ata-sub-chapter1",template:n.c(a("kkxK")).default,animations:[h.a],styles:[n.c(a("x8i/")).default]})],le);var de=a("QSpk"),ce=function t(e,a,n,s,i,r,o,l){_classCallCheck(this,t),this.masterCompanyId=a,this.createdBy=n,this.createdDate=s,this.updatedDate=i,this.updatedBy=r,this.masterCompany=e,this.isActive=o,this.memo=l},ue=function(){function t(e,a,n,s,i,r,o,l,d,c){_classCallCheck(this,t),this.breadCrumb=e,this.ataservice=a,this.authService=n,this.modalService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.ataSubChapter2Service=l,this.dialog=d,this.masterComapnyService=c,this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.isEditMode=!1,this.isDeleteMode=!1,this.Active="Active",this.displayedColumns=["memo","createdBy","updatedBy","updatedDate","createdDate"],this.allATAMaininfo=[],this.allComapnies=[],this.auditHisory=[],this.title="Create",this.localCollection=[],this.allWorkFlows=[],this.dataSource=new H.a,this.sourceAction=new ce}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData(),this.atamaindata(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-ata-sub-chapter2",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.ataSubChapter2Service.getAtaSubChapter2List().subscribe((function(e){return t.onDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)})),this.cols=[{field:"memo",header:"Memo"},{field:"createdBy",header:"Created By"},{field:"updatedBy",header:"Updated By"},{field:"updatedDate",header:"Updated Date"},{field:"createdDate",header:"createdDate"}],this.selectedColumns=this.cols}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"atamaindata",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.ataservice.getAtaMainList().subscribe((function(e){return t.onSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"onSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allATAMaininfo1=t}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onDataLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allATAMaininfo=t}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"handleChange",value:function(t,e){var a=this;0==e.checked?(this.sourceAction=t,this.sourceAction.updatedBy=this.userName,this.Active="In Active",this.sourceAction.isActive,this.ataSubChapter2Service.updateATASubChapter2(this.sourceAction).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)}))):(this.sourceAction=t,this.sourceAction.updatedBy=this.userName,this.Active="Active",this.sourceAction.isActive,this.ataSubChapter2Service.updateATASubChapter2(this.sourceAction).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)})))}},{key:"open",value:function(t){this.isEditMode=!1,this.isDeleteMode=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=new ce,this.sourceAction.isActive=!0,this.ataChapterName="",this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceAction=e,this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openEdit",value:function(t,e){this.isEditMode=!0,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=e,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openView",value:function(t,e){this.sourceAction=e,this.memo=e.memo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHelpText",value:function(t){this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHist",value:function(t,e){var a=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.sourceAction=e,this.ataSubChapter2Service.historyATASubChapter2(this.sourceAction.ataSubChapter2Id).subscribe((function(e){return a.onHistoryLoadSuccessful(e[0],t)}),(function(t){return a.saveFailedHelper(t)}))}},{key:"editItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,0==this.isEditMode?(this.sourceAction.createdBy=this.userName,this.sourceAction.updatedBy=this.userName,this.sourceAction.masterCompanyId=1,this.ataSubChapter2Service.newATASubChapter2(this.sourceAction).subscribe((function(e){return t.saveSuccessHelper(e)}),(function(e){return t.saveFailedHelper(e)}))):(this.sourceAction.updatedBy=this.userName,this.sourceAction.masterCompanyId=1,this.ataSubChapter2Service.updateATASubChapter2(this.sourceAction).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)}))),this.modal.close()}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.ataSubChapter2Service.deleteATASubChapter2(this.sourceAction.ataSubChapter2Id).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"eventHandler",value:function(t){var e=t.target.value.toLowerCase();this.selectedActionName&&(e==this.selectedActionName.toLowerCase()?this.disableSave=!0:this.disableSave=!1)}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.loadData()}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"getDismissReason",value:function(t){return t===w.a.ESC?"by pressing ESC":t===w.a.BACKDROP_CLICK?"by clicking on a backdrop":"with: "+t}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();ue.ctorParameters=function(){return[{type:u.a},{type:C.a},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:de.a},{type:m.b},{type:b.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],ue.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],ue.prototype,"sort",void 0),ue=n.b([Object(s.Component)({selector:"app-ata-sub-chapter2",template:n.c(a("ruAf")).default,animations:[h.a],styles:[n.c(a("qLUK")).default]})],ue);var pe=a("IheW"),me=a("+yGV"),he=a("wPjA"),ve=a("yHma"),be=function(){function t(e,a,n,s,i,r,o,l,d){_classCallCheck(this,t),this.locationId=a,this.masterCompanyId=n,this.createdBy=s,this.createdDate=i,this.updatedDate=r,this.updatedBy=o,this.masterCompany=e,this.isActive=l,this.memo=d}return _createClass(t,[{key:"siteID",value:function(t){throw new Error("Method not implemented.")}}]),t}(),ge=function(){function t(e,a,n,s,i,r,o,l,d,c,u,p,m,h,v,b,g,f){_classCallCheck(this,t),this.manageMentService=e,this.commonService=a,this.configurations=n,this.wareHouseService=s,this.workFlowtService1=i,this.breadCrumb=r,this.http=o,this.ataservice=l,this.changeDetectorRef=d,this.router=c,this.authService=u,this.modalService=p,this.activeModal=m,this._fb=h,this.alertService=v,this.workFlowtService=b,this.dialog=g,this.masterComapnyService=f,this.sourceLocation={},this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.allATAMaininfo=[],this.localCollection=[],this.disableSaveForEdit=!1,this.warehouse_Name="",this.isEditMode=!1,this.isDeleteMode=!1,this.closeCmpny=!0,this.action_name="",this.allComapnies=[],this.auditHisory=[],this.allActions=[],this.displayedColumns=["locationId","name","warehouseName","siteName","address1","address2","address3","city","stateOrProvince","country","postalCode","memo"],this.location_Name="",this.allLocations=[],this.localSelectedManagement=[],this.Active="Active",this.actionamecolle=[],this.disableSaveManufacturer=!1,this.currentstatus="Active",this.isDeleted=!1,this.locationData=[],this.AuditHistoryTitle="History of Location",this.formData=null,this.pageSize=10,this.uploadedRecords=null,this.allWorkFlows=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.dataSource=new H.a,this.sourceLocation=new be}return _createClass(t,[{key:"ngOnInit",value:function(){this.cols=[{field:"name",header:"Location Name"},{field:"warehouseName",header:"Warehouse Name"},{field:"siteName",header:"Site Name"},{field:"address1",header:"Address Line 1"},{field:"address2",header:"Address Line 2"},{field:"address3",header:"Address Line 3"},{field:"city",header:"City"},{field:"stateOrProvince",header:"State"},{field:"country",header:"Country"},{field:"postalCode",header:"Zip Code"},{field:"memo",header:"memo"}],this.loadData(),this.loadSiteData(),this.loadManagementdata(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-location",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.selectedColumns=this.cols}},{key:"closethis",value:function(){this.closeCmpny=!1}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=Location&fileName=Location.xlsx";window.location.assign(t)}},{key:"handleChange",value:function(t,e){var a=this;0==e.checked?(this.sourceLocation=t,this.sourceLocation.updatedBy=this.userName,this.Active="In Active",this.sourceLocation.isActive,this.workFlowtService.updateLocation(this.sourceLocation).subscribe((function(t){return a.saveCompleted(a.sourceLocation)}),(function(t){return a.saveFailedHelper(t)}))):(this.sourceLocation=t,this.sourceLocation.updatedBy=this.userName,this.Active="Active",this.sourceLocation.isActive,this.workFlowtService.updateLocation(this.sourceLocation).subscribe((function(t){return a.saveCompleted(a.sourceLocation)}),(function(t){return a.saveFailedHelper(t)})))}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.workFlowtService.getLocationList().subscribe((function(e){return t.onDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)})),this.selectedColumns=this.cols}},{key:"Manufacturerdescription",value:function(t){if(this.allLocations)for(var e=0;e<this.actionamecolle.length;e++)t==this.actionamecolle[e][0].locationName&&(this.disableSaveManufacturer=!0,this.selectedLocation=t)}},{key:"ManufacturerHandler",value:function(t){if(""!=t.target.value){var e=t.target.value.toLowerCase();this.selectedLocation&&(e==this.selectedLocation.toLowerCase()?this.disableSaveManufacturer=!0:this.disableSaveManufacturer=!1)}}},{key:"filtermanufacturer",value:function(t){this.localCollection=[];for(var e=0;e<this.allLocations.length;e++){var a=this.allLocations[e].name;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(this.actionamecolle.push([{locationId:this.allLocations[e].locationId,locationName:a}]),this.localCollection.push(a))}}},{key:"loadSiteData",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.workFlowtService1.getSiteList().subscribe((function(e){return t.onSaiteDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"onSaiteDataLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allSites=t}},{key:"siteValueChange",value:function(t){var e=this;this.showAddress=!0,console.log(this.siteId),this.sourceLocation.siteId&&(this.workFlowtService.getAddressDate(this.sourceLocation.siteId).subscribe((function(t){return e.addressDataArray(t[0])}),(function(t){return e.onDataLoadFailed(t)})),this.workFlowtService.getWareHouseDate(this.sourceLocation.siteId).subscribe((function(t){return e.onDataLoadWareHouse(t)}),(function(t){return e.onDataLoadFailed(t)})))}},{key:"wareHouseValueChange",value:function(t){var e=this;this.showManagement=!0,this.workFlowtService.getManagementWareHouseData(t).subscribe((function(t){e.localWareHouseManagementWarehouseCollection=t,e.gridData2=e.makeNestedObj1(e.localWareHouseManagementWarehouseCollection,e.allManagemtninfo,null),e.selectedNodeTest=e.gridData2})),console.log(t),console.log(this.warehouseId)}},{key:"onDataLoadWareHouse",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allWareHouses=t}},{key:"addressDataArray",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,t&&(this.allAddress=t,this.address1=t.address1,this.address2=t.address2,this.address3=t.address3,this.city=t.city,this.country=t.country,this.postalCode=t.postalCode,this.stateOrProvince=t.stateOrProvince)}},{key:"loadManagementdata",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.manageMentService.getManagemententity().subscribe((function(e){return t.onManagemtntdataLoad(e[0])}),(function(e){return t.onDataLoadFailed(e)})),this.selectedColumns=this.cols}},{key:"onManagemtntdataLoad",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allManagemtninfo=t,this.allManagemtninfo&&(this.gridData=this.makeNestedObj(this.allManagemtninfo,null)),this.cols1=[{field:"code",header:"Code"},{field:"name",header:"Name"},{field:"description",header:"Description"}]}},{key:"makeNestedObj",value:function(t,e){var a=[];for(var n in t)if(t[n].parentId==e){var s=this.makeNestedObj(t,t[n].managementStructureId);t[n]={data:t[n]},s.length&&(t[n].children=s),a.push(t[n])}return a}},{key:"makeNestedObj1",value:function(t,e,a){var n=[];if(t)for(var s=0;s<t.length;s++)for(var i=0;i<e.length;i++)if(e[i].data){if(t[s].managementStructureId==e[i].data.managementStructureId){e[i].data.managementLocationId=t[s].managementLocationId,e[i].data.locationId=t[s].locationId,n.push(e[i]),console.log(e[i].data);break}}else if(t[s].managementStructureId==e[i].managementStructureId){e[i].data.managementLocationId=t[s].managementLocationId,e[i].data.locationId=t[s].locationId,n.push(e[i]),console.log(e[i].data);break}return n}},{key:"nodeSelect",value:function(t){console.log("selected node",t,t.node)}},{key:"managementStructureClick",value:function(t){console.log(this.localSelectedManagement)}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onDataLoadSuccessful",value:function(t){var e=this;this.workFlowtService.getLocationList().subscribe((function(t){e.originalTableData=t[0],e.getListByStatus(e.status?e.status:e.currentstatus)}))}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.loadData()}},{key:"open",value:function(t){this.isEditMode=!1,this.isDeleteMode=!1,this.isSaving=!0,this.loadMasterCompanies(),this.loadManagementdata(),this.selectedNodeTest=[],this.localCollection=[],this.disableSaveManufacturer=!1,this.sourceLocation={},this.address1="",this.address2="",this.address3="",this.city="",this.country="",this.postalCode="",this.stateOrProvince="",this.name="",this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceLocation=e,this.location_Name=e.name,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openEdit",value:function(t,e){var a=this;this.isEditMode=!0,this.isSaving=!0,this.loadMasterCompanies(),this.disableSaveForEdit=!0,this.disableSaveManufacturer=!1,this.sourceLocation=e,this.showManagement=!0,e.siteId&&this.siteValueChange(e.siteId),this.name=this.sourceLocation.name,this.workFlowtService.getManagementLocationEditData(this.sourceLocation.locationId).subscribe((function(t){a.localManagementLocationEditCollection=t,a.localManagementLocationEditCollection&&(a.gridData?a.gridData1=a.makeNestedObj1(a.localManagementLocationEditCollection,a.allManagemtninfo,null):a.gridData=a.makeNestedObj(a.allManagemtninfo,null)),a.selectedNodeTest=a.gridData1})),this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHist",value:function(t,e){var a=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.sourceLocation=e,this.workFlowtService.historyLocation(this.sourceLocation.locationId).subscribe((function(e){return a.onHistoryLoadSuccessful(e[0],t)}),(function(t){return a.saveFailedHelper(t)}))}},{key:"openView",value:function(t,e){this.sourceLocation=e,this.locationId=e.LocationId,this.location_Name=e.name,this.warehouseName=e.warehouseName,this.siteName=e.siteName,this.address1=e.address1,this.address2=e.address2,this.address3=e.address3,this.city=e.city,this.stateOrProvince=e.stateOrProvince,this.country=e.country,this.postalCode=e.postalCode,this.memo=e.memo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHelpText",value:function(t){this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceLocation.updatedBy=this.userName,this.workFlowtService.deleteLocation(this.sourceLocation.locationId).subscribe((function(e){return t.saveCompleted(t.sourceLocation)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured while saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"saveManagement",value:function(t,e){for(var a=this,n=0;n<e.length;n++)null!=e[n].data.managementStructureId&&(e[n].data.locationId=t,this.workFlowtService.newManagementSite(e[n].data).subscribe((function(t){a.localManagementSiteCollection=t})));this.loadData()}},{key:"saveandeditLocation",value:function(){var t=this;this.isSaving=!0,0==this.isEditMode?(this.showAddress=!1,this.showManagement=!1,this.sourceLocation.createdBy=this.userName,this.sourceLocation.updatedBy=this.userName,this.sourceLocation.masterCompanyId=1,this.sourceLocation.name=this.name,this.workFlowtService.newLocation(this.sourceLocation).subscribe((function(e){t.alertService.showMessage("Success","Action was created successfully",g.d.success),null!=e&&t.saveManagement(e.locationId,t.selectedNodeTest)})),this.loadData()):(this.showAddress=!0,this.showManagement=!0,this.sourceLocation.updatedBy=this.userName,this.sourceLocation.name=this.name,this.sourceLocation.masterCompanyId=1,this.workFlowtService.updateLocation(this.sourceLocation).subscribe((function(e){return t.saveCompleted(t.sourceLocation)}),(function(e){return t.saveFailedHelper(e)})),this.selectedNodeTest&&this.selectedNodeTest.length>0&&this.workFlowtService.deleteManagementLocation(this.selectedNodeTest).subscribe((function(t){})),this.selectedNodeTest&&this.selectedNodeTest.length>0&&this.saveManagement(this.selectedNodeTest[0].data.locationId,this.selectedNodeTest),this.selectedNodeTest=[]),this.modal.close(),this.loadData()}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData()}},{key:"dismissModel",value:function(){this.showAddress=!1,this.showManagement=!1,this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"savesuccessCompleted",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData()}},{key:"showAuditPopup",value:function(t,e){this.auditLocation(e),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"auditLocation",value:function(t){var e=this;this.AuditDetails=[],this.HasAuditDetails=this.AuditDetails.length>0,this.workFlowtService.getLocationAudit(t).subscribe((function(t){t.length>0&&(e.AuditDetails=t[0].result,e.HasAuditDetails=e.AuditDetails.length>0)}))}},{key:"bulkUpload",value:function(t){var e=this;this.formData=new FormData,this.uploadedRecords=null;var a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.workFlowtService.bulkUpload(this.formData).subscribe((function(a){t.target.value="",e.uploadedRecords=a,e.loadData(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.locationData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.locationData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.locationData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.locationData=e)),this.totalRecords=this.locationData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("Location","LocationId",this.restorerecord.locationId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"openEdits",value:function(t){}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();ge.ctorParameters=function(){return[{type:at.a},{type:M.a},{type:A.a},{type:he.a},{type:me.a},{type:u.a},{type:pe.HttpClient},{type:C.a},{type:s.ChangeDetectorRef},{type:c.Router},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:ve.a},{type:m.b},{type:b.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],ge.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],ge.prototype,"sort",void 0),ge=n.b([Object(s.Component)({selector:"app-location",template:n.c(a("MSR4")).default,animations:[h.a],styles:[n.c(a("r34A")).default]})],ge);var fe=function t(e,a,n,s,i,r,o,l,d){_classCallCheck(this,t),this.shelfId=a,this.masterCompanyId=n,this.createdBy=s,this.createdDate=i,this.updatedDate=r,this.updatedBy=o,this.masterCompany=e,this.isActive=l,this.memo=d},ye=a("ZbMT"),we=function(){function t(e,a,n,s,i,r,o,l,d,c,u,p,m,h,v,b,g,f){_classCallCheck(this,t),this.manageMentService=e,this.commonService=a,this.configurations=n,this.workFlowtService=s,this.locationService=i,this.wareHouseService=r,this.siteService=o,this.breadCrumb=l,this.http=d,this.changeDetectorRef=c,this.router=u,this.authService=p,this.modalService=m,this.activeModal=h,this._fb=v,this.alertService=b,this.dialog=g,this.masterComapnyService=f,this.sourceShelf={},this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.warehouse_Name="",this.disableSaveForEdit=!1,this.isEditMode=!1,this.isDeleteMode=!1,this.closeCmpny=!0,this.action_name="",this.allComapnies=[],this.auditHisory=[],this.allActions=[],this.displayedColumns=["locationId","name","wareHouseName","siteName","address1","address2","address3","city","stateOrProvince","country","postalCode","memo"],this.shelf_Name="",this.allSelfs=[],this.localSelectedManagement=[],this.Active="Active",this.actionamecolle=[],this.disableSaveManufacturer=!1,this.localCollection=[],this.HasAuditDetails=!1,this.AuditHistoryTitle="History of Shelf",this.formData=null,this.uploadedRecords=null,this.pageSize=10,this.currentstatus="Active",this.isDeleted=!1,this.shelfData=[],this.allWorkFlows=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.dataSource=new H.a,this.sourceShelf=new fe}return _createClass(t,[{key:"ngOnInit",value:function(){this.cols=[{field:"name",header:"Shelf Name"},{field:"locationName",header:"Location Name"},{field:"wareHouseName",header:"Warehouse Name"},{field:"siteName",header:"Site Name"},{field:"address1",header:"Address Line 1"},{field:"address2",header:"Address Line 2"},{field:"address3",header:"Address Line 3"},{field:"city",header:"City"},{field:"stateOrProvince",header:"State"},{field:"country",header:"Country"},{field:"postalCode",header:"Zip Code"},{field:"memo",header:"memo"}],this.loadData(),this.loadSiteData(),this.loadManagementdata(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-shelf",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.selectedColumns=this.cols}},{key:"closethis",value:function(){this.closeCmpny=!1}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=Shelf&fileName=Shelf.xlsx";window.location.assign(t)}},{key:"handleChange",value:function(t,e){var a=this;0==e.checked?(this.sourceShelf=t,this.sourceShelf.updatedBy=this.userName,this.Active="In Active",this.sourceShelf.isActive,this.workFlowtService.updateShelf(this.sourceShelf).subscribe((function(t){return a.saveCompleted(a.sourceShelf)}),(function(t){return a.saveFailedHelper(t)}))):(this.sourceShelf=t,this.sourceShelf.updatedBy=this.userName,this.Active="Active",this.sourceShelf.isActive,this.workFlowtService.updateShelf(this.sourceShelf).subscribe((function(t){return a.saveCompleted(a.sourceShelf)}),(function(t){return a.saveFailedHelper(t)})))}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.workFlowtService.getShelfList().subscribe((function(e){return t.onDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)})),this.selectedColumns=this.cols}},{key:"loadSiteData",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.siteService.getSiteList().subscribe((function(e){return t.onSaiteDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"onSaiteDataLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allSites=t}},{key:"siteValueChange",value:function(t){var e=this;this.showAddress=!0,this.sourceShelf.siteId&&(this.workFlowtService.getAddressDate(this.sourceShelf.siteId).subscribe((function(t){return e.addressDataArray(t[0])}),(function(t){return e.onDataLoadFailed(t)})),this.workFlowtService.getWareHouseDate(this.sourceShelf.siteId).subscribe((function(t){return e.onDataLoadWareHouse(t)}),(function(t){return e.onDataLoadFailed(t)})))}},{key:"wareHouseValueChange",value:function(t){var e=this;console.log(this.sourceShelf.warehouseId),this.workFlowtService.getLocationDate(this.sourceShelf.warehouseId).subscribe((function(t){return e.onDataLoadLocation(t)}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"locationValueChange",value:function(t){var e=this;this.showManagement=!0,this.workFlowtService.getManagementLocationData(t).subscribe((function(t){e.localManagementLocationCollection=t,e.gridData2=e.makeNestedObj1(e.localManagementLocationCollection,e.allManagemtninfo,null),e.selectedNodeTest=e.gridData2})),console.log(t),console.log(this.warehouseId)}},{key:"onDataLoadWareHouse",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allWareHouses=t}},{key:"onDataLoadLocation",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allLocations=t}},{key:"addressDataArray",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,t&&(this.allAddress=t,this.address1=t.address1,this.address2=t.address2,this.address3=t.address3,this.city=t.city,this.country=t.country,this.postalCode=t.postalCode,this.stateOrProvince=t.stateOrProvince)}},{key:"loadManagementdata",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.manageMentService.getManagemententity().subscribe((function(e){return t.onManagemtntdataLoad(e[0])}),(function(e){return t.onDataLoadFailed(e)})),this.selectedColumns=this.cols}},{key:"onManagemtntdataLoad",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allManagemtninfo=t,this.allManagemtninfo&&(this.gridData=this.makeNestedObj(this.allManagemtninfo,null)),this.cols1=[{field:"code",header:"Code"},{field:"name",header:"Name"},{field:"description",header:"Description"}]}},{key:"makeNestedObj",value:function(t,e){var a=[];for(var n in t)if(t[n].parentId==e){var s=this.makeNestedObj(t,t[n].managementStructureId);t[n]={data:t[n]},s.length&&(t[n].children=s),a.push(t[n])}return a}},{key:"makeNestedObj1",value:function(t,e,a){var n=[];if(t)for(var s=0;s<t.length;s++)for(var i=0;i<e.length;i++)if(e[i].data){if(t[s].managementStructureId==e[i].data.managementStructureId){e[i].data.managementShelfId=t[s].managementShelfId,e[i].data.shelfId=t[s].shelfId,n.push(e[i]),console.log(e[i].data);break}if(t[s].managementStructureId==e[i].managementStructureId){e[i].data.managementShelfId=t[s].managementShelfId,e[i].data.shelfId=t[s].shelfId,n.push(e[i]),console.log(e[i].data);break}}return n}},{key:"nodeSelect",value:function(t){console.log("selected node",t,t.node)}},{key:"managementStructureClick",value:function(t){console.log(this.localSelectedManagement)}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"Manufacturerdescription",value:function(t){if(this.allSelfs)for(var e=0;e<this.actionamecolle.length;e++)t==this.actionamecolle[e][0].shelfName&&(this.disableSaveManufacturer=!0,this.selectedShelf=t)}},{key:"ManufacturerHandler",value:function(t){if(""!=t.target.value){var e=t.target.value.toLowerCase();this.selectedShelf&&(e==this.selectedShelf.toLowerCase()?this.disableSaveManufacturer=!0:this.disableSaveManufacturer=!1)}}},{key:"filtermanufacturer",value:function(t){this.localCollection=[];for(var e=0;e<this.allSelfs.length;e++){var a=this.allSelfs[e].name;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(this.actionamecolle.push([{shelfId:this.allSelfs[e].shelfId,shelfName:a}]),this.localCollection.push(a))}}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onDataLoadSuccessful",value:function(t){var e=this;this.workFlowtService.getShelfList().subscribe((function(t){e.originalTableData=t[0],e.getListByStatus(e.status?e.status:e.currentstatus)}))}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.loadData()}},{key:"open",value:function(t){this.isEditMode=!1,this.isDeleteMode=!1,this.isSaving=!0,this.loadMasterCompanies(),this.loadManagementdata(),this.selectedNodeTest=[],this.disableSaveManufacturer=!1,this.sourceShelf={},this.address1="",this.address2="",this.address3="",this.city="",this.country="",this.postalCode="",this.stateOrProvince="",this.name="",this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceShelf=e,this.shelf_Name=e.name,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openEdit",value:function(t,e){var a=this;this.isEditMode=!0,this.isSaving=!0,this.loadMasterCompanies(),this.disableSaveForEdit=!0,this.showManagement=!0,this.disableSaveManufacturer=!1,this.sourceShelf=e,e.siteId&&(this.siteValueChange(e.siteId),this.wareHouseValueChange(e.wareHouseId),this.locationValueChange(e.locationId)),this.name=this.sourceShelf.name,this.workFlowtService.getManagementShelfEditData(this.sourceShelf.shelfId).subscribe((function(t){a.localManagementShelfEditCollection=t,a.localManagementShelfEditCollection&&(a.gridData?a.gridData1=a.makeNestedObj1(a.localManagementShelfEditCollection,a.allManagemtninfo,null):a.gridData=a.makeNestedObj(a.allManagemtninfo,null)),a.selectedNodeTest=a.gridData1})),this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"openHist",value:function(t,e){var a=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.sourceShelf=e,this.workFlowtService.historyShelf(this.sourceShelf.shelfId).subscribe((function(e){return a.onHistoryLoadSuccessful(e[0],t)}),(function(t){return a.saveFailedHelper(t)}))}},{key:"openView",value:function(t,e){this.sourceShelf=e,this.shelfId=e.shelfId,this.shelf_Name=e.name,this.location_Name=e.locationName,this.warehouseName=e.wareHouseName,this.siteName=e.siteName,this.address1=e.address1,this.address2=e.address2,this.address3=e.address3,this.city=e.city,this.stateOrProvince=e.stateOrProvince,this.country=e.country,this.postalCode=e.postalCode,this.memo=e.memo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHelpText",value:function(t){this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceShelf.updatedBy=this.userName,this.workFlowtService.deleteShelf(this.sourceShelf.shelfId).subscribe((function(e){return t.saveCompleted(t.sourceShelf)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured while saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"saveManagement",value:function(t,e){for(var a=this,n=0;n<e.length;n++)null!=e[n].data.managementStructureId&&(e[n].data.shelfId=t,this.workFlowtService.newManagementShelf(e[n].data).subscribe((function(t){a.localManagementSiteCollection=t})));this.loadData()}},{key:"editItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,0==this.isEditMode?(this.showAddress=!1,this.showManagement=!1,this.sourceShelf.createdBy=this.userName,this.sourceShelf.updatedBy=this.userName,this.sourceShelf.masterCompanyId=1,this.sourceShelf.name=this.name,this.workFlowtService.newShelf(this.sourceShelf).subscribe((function(e){t.alertService.showMessage("Success","Action was created successfully",g.d.success),t.shelfInfo=e,null!=e&&t.saveManagement(e.shelfId,t.selectedNodeTest)})),this.loadData()):(this.showAddress=!0,this.sourceShelf.updatedBy=this.userName,this.sourceShelf.name=this.name,this.sourceShelf.masterCompanyId=1,this.showManagement=!0,this.workFlowtService.updateShelf(this.sourceShelf).subscribe((function(e){return t.saveCompleted(t.sourceShelf)}),(function(e){return t.saveFailedHelper(e)})),this.selectedNodeTest&&this.selectedNodeTest.length>0&&this.workFlowtService.deleteManagementShelf(this.selectedNodeTest).subscribe((function(t){})),this.selectedNodeTest&&this.selectedNodeTest.length>0&&this.saveManagement(this.selectedNodeTest[0].data.shelfId,this.selectedNodeTest),this.selectedNodeTest=[]),this.modal.close(),this.loadData()}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData()}},{key:"dismissModel",value:function(){this.showAddress=!1,this.isDeleteMode=!1,this.showManagement=!1,this.isEditMode=!1,this.modal.close()}},{key:"savesuccessCompleted",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData()}},{key:"showAuditPopup",value:function(t,e){this.auditShelf(e),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"auditShelf",value:function(t){var e=this;this.AuditDetails=[],this.HasAuditDetails=this.AuditDetails.length>0,this.workFlowtService.getShelfAudit(t).subscribe((function(t){t.length>0&&(e.AuditDetails=t[0].result,e.HasAuditDetails=e.AuditDetails.length>0)}))}},{key:"bulkUpload",value:function(t){var e=this;this.formData=new FormData,this.uploadedRecords=null;var a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.workFlowtService.bulkUpload(this.formData).subscribe((function(a){t.target.value="",e.uploadedRecords=a,e.loadData(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.shelfData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.shelfData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.shelfData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.shelfData=e)),this.totalRecords=this.shelfData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("Shelf","ShelfId",this.restorerecord.shelfId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"openEdits",value:function(t){}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();we.ctorParameters=function(){return[{type:at.a},{type:M.a},{type:A.a},{type:ye.a},{type:ve.a},{type:he.a},{type:me.a},{type:u.a},{type:pe.HttpClient},{type:s.ChangeDetectorRef},{type:c.Router},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:m.b},{type:b.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],we.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],we.prototype,"sort",void 0),we=n.b([Object(s.Component)({selector:"app-shelf",template:n.c(a("pLYG")).default,animations:[h.a],styles:[n.c(a("QVMD")).default]})],we);var De=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.router=e,this.commonService=a,this.breadCrumb=n,this.authService=s,this._fb=i,this.alertService=r,this.masterComapnyService=o,this.modalService=l,this.shipViaService=d,this.dialog=c,this.configurations=u,this.actionamecolle=[],this.auditHisory=[],this.isEditMode=!1,this.isDeleteMode=!1,this.formData=new FormData,this.localCollection=[],this.Active="Active",this.auditHistory=[],this.shipViaData=[],this.shipviaList=[],this.shipviaHeaders=[{field:"name",header:"Ship Via"},{field:"memo",header:"Memo"}],this.pageIndex=0,this.pageSize=10,this.newShipvia={name:"",masterCompanyId:1,isActive:!0,isDeleted:!1,memo:""},this.addNewShipvia=Object.assign({},this.newShipvia),this.currentstatus="Active",this.currentStatusShipvia="Active",this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.selectedColumns=this.shipviaHeaders,this.getShipViaList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-shipvia",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"getShipViaList",value:function(){var t=this;this.shipViaService.getAllShipViaList().subscribe((function(e){var a=e[0];a.length>0?(t.shipViaData=a,t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)):(t.totalRecords=0,t.totalPages=0)}))}},{key:"resetShipviaForm",value:function(){this.isEditMode=!1,this.disableSaveForCondition=!1,this.disableSaveForConditionMsg=!1,this.selectedRecordForEdit=void 0,this.addNewShipvia=Object.assign({},this.newShipvia)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.shipViaService.updateShipviaStatus(a.shippingViaId,a.isActive,this.userName).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully",g.d.success),e.getListByStatus(e.currentStatusShipvia)}))}},{key:"filtershipvia",value:function(t){this.shipviaList=this.shipViaData;var e=_toConsumableArray(this.shipViaData.filter((function(e){return e.name.toLowerCase().includes(t.query.toLowerCase())})));this.shipviaList=e}},{key:"getmemo",value:function(t){this.disableSaveForConditionMsg=!1,this.disableSaveForCondition=!1}},{key:"checkShipViaExists",value:function(t,e){Object(D.m)(t,e,this.shipViaData,this.selectedRecordForEdit).length>0?(this.disableSaveForConditionMsg=!0,this.disableSaveForCondition=!0):(this.disableSaveForConditionMsg=!1,this.disableSaveForCondition=!1)}},{key:"selectedShipvia",value:function(t){var e=Object(D.k)("name",t,this.selectedRecordForEdit);this.disableSaveForCondition=!e,this.disableSaveForConditionMsg=!e}},{key:"refreshList",value:function(){this.table.reset(),this.getShipViaList()}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.shipViaService.deleteShipvia(this.selectedRowforDelete.shippingViaId,this.userName).subscribe((function(){e.getShipViaList(),e.alertService.showMessage("Success","Deleted Ship Via Successfully",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"edit",value:function(t){console.log(t),this.isEditMode=!0,this.disableSaveForCondition=!0,this.disableSaveForConditionMsg=!1,this.addNewShipvia=Object.assign({},t,{name:Object(D.d)("shippingViaId",t.shippingViaId,this.shipViaData)}),this.selectedRecordForEdit=Object.assign({},this.addNewShipvia),console.log(this.addNewShipvia)}},{key:"saveShipVia",value:function(){var t=this;if(this.shipViaData.findIndex((function(e){return e.name==t.addNewShipvia.name}))>-1)this.alertService.showMessage("Failed","Ship Via  "+this.addNewShipvia.name+" already exists.",g.d.error);else{var e=Object.assign({},this.addNewShipvia,{createdBy:this.userName,updatedBy:this.userName,name:Object(D.a)("name",this.addNewShipvia.name)});this.isEditMode?this.shipViaService.updateShipvia(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEditMode=!1,t.resetShipviaForm(),t.getShipViaList(),t.alertService.showMessage("Success","Updated Ship Via Successfully",g.d.success)})):this.shipViaService.newAddShipvia(e).subscribe((function(){t.resetShipviaForm(),t.getShipViaList(),t.alertService.showMessage("Success","Added  New Ship Via Successfully",g.d.success)}))}}},{key:"openHelpText",value:function(t){this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"getAuditHistoryById",value:function(t){var e=this;this.shipViaService.getShipViaAudit(t.shippingViaId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.shipViaService.shipviaCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getShipViaList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.shipViaData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.shipViaData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.shipViaData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.shipViaData=e)),this.totalRecords=this.shipViaData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("ShippingVia","ShippingViaId",this.restorerecord.shippingViaId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getShipViaList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=ShipVia&fileName=shipvia.xlsx";window.location.assign(t)}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();De.ctorParameters=function(){return[{type:c.Router},{type:M.a},{type:u.a},{type:f.a},{type:r.FormBuilder},{type:g.b},{type:b.a},{type:w.c},{type:It.a},{type:m.b},{type:A.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],De.prototype,"table",void 0),De=n.b([Object(s.Component)({selector:"app-shipvia",template:n.c(a("O8W3")).default,animations:[h.a],styles:[n.c(a("3wcl")).default]})],De);var Se=a("NRZ7"),ke=function t(e,a,n,s,i,r,o,l,d,c){_classCallCheck(this,t),this.binId=a,this.masterCompanyId=n,this.createdBy=s,this.createdDate=i,this.updatedDate=r,this.updatedBy=o,this.masterCompany=e,this.isActive=l,this.isDelete=d,this.memo=c},xe=function(){function t(e,a,n,s,i,r,o,l,d,c,u,p,m,h,v,b,g,f,y){_classCallCheck(this,t),this.manageMentService=e,this.commonService=a,this.configurations=n,this.workFlowtService=s,this.shelfService=i,this.locationService=r,this.wareHouseService=o,this.siteService=l,this.breadCrumb=d,this.http=c,this.changeDetectorRef=u,this.router=p,this.authService=m,this.modalService=h,this.activeModal=v,this._fb=b,this.alertService=g,this.dialog=f,this.masterComapnyService=y,this.sourceBin={},this.allBins=[],this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.shelf_Name="",this.warehouse_Name="",this.isEditMode=!1,this.isDeleteMode=!1,this.closeCmpny=!0,this.action_name="",this.allComapnies=[],this.auditHisory=[],this.allActions=[],this.displayedColumns=["locationId","name","wareHouseName","siteName","address1","address2","address3","city","stateOrProvince","country","postalCode","memo"],this.shelfName="",this.binName="",this.disableSaveForEdit=!1,this.localSelectedManagement=[],this.localManagementBinEditCollection=[],this.actionamecolle=[],this.Active="Active",this.localCollection=[],this.disableSaveManufacturer=!1,this.pageSize=10,this.AuditHistoryTitle="History of Bin",this.currentstatus="Active",this.isDeleted=!1,this.binData=[],this.allWorkFlows=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.dataSource=new H.a,this.sourceBin=new ke}return _createClass(t,[{key:"ngOnInit",value:function(){this.cols=[{field:"name",header:"Bin Name"},{field:"shelfName",header:"Shelf Name"},{field:"locationName",header:"Location Name"},{field:"wareHouseName",header:"Warehouse Name"},{field:"siteName",header:"Site Name"},{field:"address1",header:"Address Line 1"},{field:"address2",header:"Address Line 2"},{field:"address3",header:"Address Line 3"},{field:"city",header:"City"},{field:"stateOrProvince",header:"State"},{field:"country",header:"Country"},{field:"postalCode",header:"Zip Code"},{field:"memo",header:"memo"}],this.loadData(),this.loadSiteData(),this.loadManagementdata(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-bin",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.selectedColumns=this.cols,this.HasAuditDetails=!1}},{key:"closethis",value:function(){this.closeCmpny=!1}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=Bin&fileName=Bin.xlsx";window.location.assign(t)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"handleChange",value:function(t,e){var a=this;0==e.checked?(this.sourceBin=t,this.sourceBin.updatedBy=this.userName,this.Active="In Active",this.sourceBin.isActive,this.workFlowtService.updateBin(this.sourceBin).subscribe((function(t){return a.saveCompleted(a.sourceBin)}),(function(t){return a.saveFailedHelper(t)}))):(this.sourceBin=t,this.sourceBin.updatedBy=this.userName,this.Active="Active",this.sourceBin.isActive,this.workFlowtService.updateBin(this.sourceBin).subscribe((function(t){return a.saveCompleted(a.sourceBin)}),(function(t){return a.saveFailedHelper(t)})))}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.workFlowtService.getBinList().subscribe((function(e){return t.onDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)})),this.selectedColumns=this.cols}},{key:"loadSiteData",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.siteService.getSiteList().subscribe((function(e){return t.onSaiteDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"onSaiteDataLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allSites=t}},{key:"siteValueChange",value:function(t){var e=this;this.showAddress=!0,this.allWareHouses=[],this.allLocations=[],this.allShelfs=[],console.log(this.siteId),this.sourceBin.siteId&&(this.workFlowtService.getAddressDate(this.sourceBin.siteId).subscribe((function(t){return e.addressDataArray(t[0])}),(function(t){return e.onDataLoadFailed(t)})),this.workFlowtService.getWareHouseDate(this.sourceBin.siteId).subscribe((function(t){return e.onDataLoadWareHouse(t)}),(function(t){return e.onDataLoadFailed(t)})))}},{key:"wareHouseValueChange",value:function(t){var e=this;console.log(this.sourceBin.warehouseId),this.workFlowtService.getLocationDate(this.sourceBin.warehouseId).subscribe((function(t){return e.onDataLoadLocation(t)}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"locationValueChange",value:function(t){var e=this;console.log(this.sourceBin.locationId),this.workFlowtService.getShelfDate(this.sourceBin.locationId).subscribe((function(t){return e.onDataLoadShelf(t)}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"shelfValueChange",value:function(t){var e=this;this.showManagement=!0,this.workFlowtService.getManagementShelfData(t).subscribe((function(t){e.localManagementShelfCollection=t,e.gridData2=e.makeNestedObj1(e.localManagementShelfCollection,e.allManagemtninfo,null),e.selectedNodeTest=e.gridData2})),console.log(t)}},{key:"onDataLoadWareHouse",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allWareHouses=t}},{key:"onDataLoadLocation",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allLocations=t}},{key:"onDataLoadShelf",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allShelfs=t}},{key:"addressDataArray",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,t&&(this.allAddress=t,this.address1=t.address1,this.address2=t.address2,this.address3=t.address3,this.city=t.city,this.country=t.country,this.postalCode=t.postalCode,this.stateOrProvince=t.stateOrProvince)}},{key:"Manufacturerdescription",value:function(t){if(this.allBins)for(var e=0;e<this.actionamecolle.length;e++)t==this.actionamecolle[e][0].binName&&(this.disableSaveManufacturer=!0,this.selectedBin=t)}},{key:"ManufacturerHandler",value:function(t){if(""!=t.target.value){var e=t.target.value.toLowerCase();this.selectedBin&&(e==this.selectedBin.toLowerCase()?this.disableSaveManufacturer=!0:this.disableSaveManufacturer=!1)}}},{key:"filtermanufacturer",value:function(t){this.localCollection=[];for(var e=0;e<this.allBins.length;e++){var a=this.allBins[e].name;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(this.actionamecolle.push([{binId:this.allBins[e].binId,binName:a}]),this.localCollection.push(a))}}},{key:"loadManagementdata",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.manageMentService.getManagemententity().subscribe((function(e){return t.onManagemtntdataLoad(e[0])}),(function(e){return t.onDataLoadFailed(e)})),this.selectedColumns=this.cols}},{key:"onManagemtntdataLoad",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allManagemtninfo=t,this.allManagemtninfo&&(this.gridData=this.makeNestedObj(this.allManagemtninfo,null)),this.cols1=[{field:"code",header:"Code"},{field:"name",header:"Name"},{field:"description",header:"Description"}]}},{key:"makeNestedObj",value:function(t,e){var a=[];for(var n in t)if(t[n].parentId==e){var s=this.makeNestedObj(t,t[n].managementStructureId);t[n]={data:t[n]},s.length&&(t[n].children=s),a.push(t[n])}return a}},{key:"makeNestedObj1",value:function(t,e,a){var n=[];if(t)for(var s=0;s<t.length;s++)for(var i=0;i<e.length;i++)if(e[i].data){if(t[s].managementStructureId==e[i].data.managementStructureId){e[i].data.managementBinId=t[s].managementBinId,e[i].data.binId=t[s].binId,n.push(e[i]),console.log(e[i].data);break}}else if(t[s].managementStructureId==e[i].managementStructureId){e[i].data.managementBinId=t[s].managementBinId,e[i].data.binId=t[s].binId,n.push(e[i]),console.log(e[i].data);break}return n}},{key:"nodeSelect",value:function(t){console.log("selected node",t,t.node)}},{key:"managementStructureClick",value:function(t){this.testLocalNodeSlect=this.selectedNodeTest}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onDataLoadSuccessful",value:function(t){var e=this;this.workFlowtService.getBinList().subscribe((function(t){e.originalTableData=t[0],e.getListByStatus(e.status?e.status:e.currentstatus)}))}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.loadData()}},{key:"open",value:function(t){this.isEditMode=!1,this.isDeleteMode=!1,this.isSaving=!0,this.loadMasterCompanies(),this.loadManagementdata(),this.selectedNodeTest=[],this.disableSaveManufacturer=!1,this.sourceBin={},this.address1="",this.address2="",this.address3="",this.city="",this.country="",this.postalCode="",this.stateOrProvince="",this.name="",this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceBin=e,this.binName=e.name,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"openEdit",value:function(t,e){var a=this;this.isEditMode=!0,this.isSaving=!0,this.showManagement=!0,this.disableSaveManufacturer=!1,this.disableSaveForEdit=!0,this.sourceBin=e,e.siteId&&(this.siteValueChange(e.siteId),this.wareHouseValueChange(e.wareHouseId),this.locationValueChange(e.locationId),this.shelfValueChange(e.shelfId)),this.name=this.sourceBin.name,this.workFlowtService.getManagementBinEditData(this.sourceBin.binId).subscribe((function(t){a.localManagementBinEditCollection=t,a.localManagementBinEditCollection&&(a.gridData?a.gridData1=a.makeNestedObj1(a.localManagementBinEditCollection,a.allManagemtninfo,null):a.gridData=a.makeNestedObj(a.allManagemtninfo,null)),a.selectedNodeTest=a.gridData1})),this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHist",value:function(t,e){var a=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.sourceBin=e,this.workFlowtService.historyBin(this.sourceBin.binId).subscribe((function(e){return a.onHistoryLoadSuccessful(e[0],t)}),(function(t){return a.saveFailedHelper(t)}))}},{key:"openView",value:function(t,e){this.sourceBin=e,this.binId=e.binId,this.binName=e.name,this.shelfName=e.shelfName,this.binName=e.name,this.warehouseName=e.warehouseName,this.shelfName=e.shelfName,this.locationName=e.locationName,this.warehouseName=e.wareHouseName,this.siteName=e.siteName,this.address1=e.address1,this.address2=e.address2,this.address3=e.address3,this.city=e.city,this.stateOrProvince=e.stateOrProvince,this.country=e.country,this.postalCode=e.postalCode,this.memo=e.memo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHelpText",value:function(t){this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceBin.updatedBy=this.userName,this.workFlowtService.deleteBin(this.sourceBin.binId).subscribe((function(e){return t.saveCompleted(t.sourceBin)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured while saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"saveManagement",value:function(t,e){for(var a=this,n=0;n<e.length;n++)null!=e[n].data.managementStructureId&&(e[n].data.binId=t,this.workFlowtService.newManagementBin(e[n].data).subscribe((function(t){a.localManagementSiteCollection=t})));this.loadData()}},{key:"editItemAndCloseModel",value:function(){var t=this;this.isSaving=!0;var e=this.selectedNodeTest&&this.selectedNodeTest.length>0?this.selectedNodeTest.slice():[];0==this.isEditMode?(this.showAddress=!1,this.showManagement=!1,this.sourceBin.createdBy=this.userName,this.sourceBin.updatedBy=this.userName,this.sourceBin.masterCompanyId=1,this.sourceBin.name=this.name,this.workFlowtService.newBin(Object.assign({},this.sourceBin,{isDelete:this.isDeleteMode})).subscribe((function(a){t.alertService.showMessage("Success","Action was created successfully",g.d.success),null!=a&&t.saveManagement(a.binId,e)})),this.loadData()):(this.showAddress=!0,this.showManagement=!0,this.sourceBin.updatedBy=this.userName,this.sourceBin.name=this.name,this.sourceBin.masterCompanyId=1,this.workFlowtService.updateBin(this.sourceBin).subscribe((function(e){return t.saveCompleted(t.sourceBin)}),(function(e){return t.saveFailedHelper(e)})),this.workFlowtService.deleteManagementBinById(this.sourceBin.binId).subscribe((function(a){console.log("deleted structure successfull"),t.saveManagement(t.sourceBin.binId,e)})),this.selectedNodeTest=[]),this.modal.close(),this.loadData()}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData()}},{key:"dismissModel",value:function(){this.showAddress=!1,this.isDeleteMode=!1,this.isDeleteMode=!1,this.isEditMode=!1,this.showManagement=!1,this.modal.close()}},{key:"savesuccessCompleted",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData()}},{key:"showAuditPopup",value:function(t,e){this.auditBin(e),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"auditBin",value:function(t){var e=this;this.AuditDetails=[],this.HasAuditDetails=this.AuditDetails.length>0,this.workFlowtService.getBinAudit(t).subscribe((function(t){t.length>0&&(e.AuditDetails=t[0].result,e.HasAuditDetails=e.AuditDetails.length>0)}))}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.binData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.binData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.binData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.binData=e)),this.totalRecords=this.binData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("Bin","BinId",this.restorerecord.binId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"openEdits",value:function(t){}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();xe.ctorParameters=function(){return[{type:at.a},{type:M.a},{type:A.a},{type:Se.a},{type:ye.a},{type:ve.a},{type:he.a},{type:me.a},{type:u.a},{type:pe.HttpClient},{type:s.ChangeDetectorRef},{type:c.Router},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:m.b},{type:b.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],xe.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],xe.prototype,"sort",void 0),xe=n.b([Object(s.Component)({selector:"app-bin",template:n.c(a("dKwx")).default,animations:[h.a],styles:[n.c(a("fzk4")).default]})],xe);var Ce=function(){function t(e){_classCallCheck(this,t),this.breadCrumb=e}return _createClass(t,[{key:"ngOnInit",value:function(){this.breadCrumb.currentUrl="/singlepages/singlepages/app-capabilities",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"ngAfterViewInit",value:function(){}}]),t}();Ce.ctorParameters=function(){return[{type:u.a}]},Ce=n.b([Object(s.Component)({selector:"app-capabilities",template:n.c(a("5j4Z")).default,animations:[h.a],styles:[n.c(a("WjZq")).default]})],Ce);var Ae=function(){function t(e){_classCallCheck(this,t),this.breadCrumb=e}return _createClass(t,[{key:"ngOnInit",value:function(){this.breadCrumb.currentUrl="/singlepages/singlepages/app-financial-statement-mapping",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"ngAfterViewInit",value:function(){}}]),t}();Ae.ctorParameters=function(){return[{type:u.a}]},Ae=n.b([Object(s.Component)({selector:"app-financial-statement-mapping",template:n.c(a("QSzF")).default,animations:[h.a],styles:[n.c(a("Vy/o")).default]})],Ae);var Me=a("STMh"),Ie=function t(e,a,n,s,i,r,o,l,d,c,u,p){_classCallCheck(this,t),this.glAccountClassId=a,this.gLCID=n,this.glAccountClassName=s,this.glAccountClassMemo=p,this.masterCompanyId=i,this.createdBy=r,this.createdDate=o,this.updatedDate=l,this.updatedBy=d,this.isActive=c,this.isDelete=u},Te=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.authService=n,this.modalService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.glAccountService=l,this.dialog=d,this.masterComapnyService=c,this.configurations=u,this.glAccountClass=[],this.GLAccountTypeList=[],this.isDelete=!1,this.formData=new FormData,this.gLAccountType="",this.auditHistory=[],this.glAccountData=[],this.disableSaveMsg=!1,this.glaccountclassnamecolle=[],this.currentstatus="Active",this.GLCID="",this.GLAccountType="",this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.GL_Account_Type="",this.displayedColumns=[{field:"glAccountClassName",header:"Name"},{field:"glAccountClassMemo",header:"Memo"}],this.allComapnies=[],this.code_Name="",this.title="Create",this.display=!1,this.modelValue=!1,this.isEdit=!1,this.allreasn=[],this.isEditMode=!1,this.isDeleteMode=!1,this.codeName="",this.localCollection=[],this.Active="Active",this.glclassViewFileds={},this.disablesave=!1,this.pageIndex=0,this.pageSize=10,this.newGLAccountClassType={glAccountClassName:"",glAccountClassMemo:null,masterCompanyId:1,isActive:!0,isDeleted:!1},this.addnewGLAccountClassType=Object.assign({},this.newGLAccountClassType),this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.dataSource=new H.a,this.sourceAction=new Ie}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData(),this.selectedColumns=this.displayedColumns,this.breadCrumb.currentUrl="/singlepages/singlepages/app-gl-account-class",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"loadData",value:function(){var t=this;this.glAccountService.getGlAccountClassList().subscribe((function(e){t.originalTableData=e[0].columnData,t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"onDataLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.totalRecords=t.length,this.allGLAccountClass=t}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"validateRecordExistsOrNot",value:function(t,e,a){if(console.log(t,e,a),!(""===t&&void 0===t||""===e&&void 0===e||void 0===a))return a.filter((function(a){return a[t].toLowerCase()===e.toLowerCase()}))}},{key:"open",value:function(t){alert("hitest"),this.disableSave=!0,this.disableSaveMsg=!0,this.isEditMode=!1,this.isDeleteMode=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=new Ie,this.sourceAction.isActive=!0,this.gLAccountType="",this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.addnewGLAccountClassType=Object.assign({},this.newGLAccountClassType)}},{key:"openView",value:function(t){console.log(t),this.viewRowData=t}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceAction=e,this.code_Name=e.gLAccountType,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),console.log(t),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openEdit",value:function(t){console.log(t),this.disableSave=!0,this.disableSaveMsg=!1,this.isEdit=!0,this.addnewGLAccountClassType=Object.assign({},t,{glAccountClassName:Object(D.d)("glAccountClassId",t.glAccountClassId,this.GLAccountTypeList)}),this.selectedRecordForEdit=Object.assign({},this.addnewGLAccountClassType),console.log(this.addnewGLAccountClassType)}},{key:"handleChange",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.glAccountService.updateGlAccountClass(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"eventHandler",value:function(t,e){Object(D.m)(t,e,this.GLAccountTypeList,this.selectedRecordForEdit).length>0?(this.disableSaveMsg=!0,this.disableSave=!0):(this.disableSaveMsg=!1,this.disableSave=!1)}},{key:"partnmId",value:function(t){var e=Object(D.k)("glAccountClassName",t,this.selectedRecordForEdit);this.disableSave=!e,this.disableSaveMsg=!e}},{key:"filterGlAccountclass",value:function(t){this.GLAccountClassTypeList=this.GLAccountTypeList;var e=_toConsumableArray(this.GLAccountTypeList.filter((function(e){return e.glAccountClassName.toLowerCase().includes(t.query.toLowerCase())})));this.GLAccountClassTypeList=e}},{key:"editItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,console.log(this);var e=Object.assign({},this.addnewGLAccountClassType,{createdBy:this.userName,updatedBy:this.userName,name:Object(D.a)("name",this.addnewGLAccountClassType.glAccountClassName)});this.isEdit?this.glAccountService.updateGlAccountClass(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.loadData(),t.alertService.showMessage("Success","Updated Credit Term Successfully",g.d.success)})):this.glAccountService.newGlAccountClass(e).subscribe((function(){t.resetForm(),t.loadData(),t.alertService.showMessage("Success","Added  New Credit Term Successfully",g.d.success)}))}},{key:"getChange",value:function(){0==this.disableSaveMsg&&(this.disableSave=!1)}},{key:"onBlur",value:function(t){var e=t.target.value;this.disableSaveMsg=!1;for(var a=0;a<this.GLAccountTypeList.length;a++){var n=this.GLAccountTypeList[a].glAccountClassName,s=this.GLAccountTypeList[a].glAccountClassId;if(n.toLowerCase()==e.toLowerCase()){this.isEditMode||!this.isEditMode?(this.disableSaveMsg=!0,this.disableSave=!0):s!=this.selectedRecordForEdit.glAccountClassId?(this.disableSaveMsg=!0,this.disableSave=!1):(this.disableSaveMsg=!1,this.disableSave=!1),console.log("glAccountClassName :",n);break}}}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.glAccountService.deleteGlAccountClass(this.sourceAction.glAccountClassId).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"dismissModel",value:function(){this.viewRowData=void 0}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData(),this.alertService.stopLoadingMessage()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDelete?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDelete=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.loadData()}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"getAuditHistoryById",value:function(t){var e=this;this.glAccountService.getGlAudit(t.glAccountClassId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=GLAccountClass&fileName=GLAccountClass.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.glAccountService.GLAccountClassCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getGLAccountClassList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.GLAccountTypeList=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.GLAccountTypeList=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.GLAccountTypeList=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.GLAccountTypeList=e)),this.totalRecords=this.GLAccountTypeList.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("GLAccountClass","GLAccountClassId",this.restorerecord.glAccountClassId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"getGLAccountClassList",value:function(){}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Te.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:Me.a},{type:m.b},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],Te.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],Te.prototype,"sort",void 0),Te=n.b([Object(s.Component)({selector:"app-gl-account-class",template:n.c(a("pNpP")).default,animations:[h.a],styles:[n.c(a("0cMz")).default]})],Te);var Le=a("IQwy"),Re=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.authService=n,this.modalService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.dialog=l,this.masterComapnyService=d,this.glCashFlowClassificationService=c,this.configurations=u,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"glClassFlowClassificationName",header:"GL Cash Flow Classification Name"},{field:"description",header:"Description"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGLCFName=!1,this.new={glClassFlowClassificationName:"",description:"",masterCompanyId:1,isActive:!0,isDelete:0,memo:""},this.addNew=Object.assign({},this.new),this.disableSaveGLCFNameSave=!1,this.currentstatus="Active",this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.breadCrumb.currentUrl="/singlepages/singlepages/app-gl-cash-flow-classification",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset()}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;a.length>0&&(this.formData.append("file",a[0]),this.glCashFlowClassificationService.getGLCashFlowClassificationFileUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.loadAllSiteData(e.constantFilters()),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=CashFlow&fileName=cashflow.xlsx";window.location.assign(t)}},{key:"loadAllSiteData",value:function(t){var e=this;this.loadingIndicator=!0,null==t.globalFilter&&(t.globalFilter="");var a=Object.assign({},t,{filters:Object(D.j)(t.filters)});this.glCashFlowClassificationService.search(a).subscribe((function(t){e.originalTableData=t[0].results,e.getListByStatus(e.status?e.status:e.currentstatus)}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"constantFilters",value:function(){return{first:0,rows:10,sortField:void 0,sortOrder:1,filters:"",globalFilter:"",multiSortMeta:void 0}}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkGLCFNameExists",value:function(t,e){Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit).length>0?(this.disableSaveGLCFName=!0,this.disableSaveGLCFNameSave=!0):(this.disableSaveGLCFName=!1,this.disableSaveGLCFNameSave=!1)}},{key:"filterGLCFName",value:function(t){this.glCashFlowList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.glClassFlowClassificationName.toLowerCase().includes(t.query.toLowerCase())})));this.glCashFlowList=e}},{key:"selectedGLCFName",value:function(t){var e=Object(D.k)("glClassFlowClassificationName",t,this.selectedRecordForEdit);this.disableSaveGLCFName=!e,this.disableSaveGLCFNameSave=!e}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,glClassFlowClassificationName:Object(D.a)("glClassFlowClassificationName",this.addNew.glClassFlowClassificationName)});this.isEdit?this.glCashFlowClassificationService.updateCashFlowClassification(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.loadAllSiteData(t.constantFilters()),t.alertService.showMessage("Success","Updated GL Cash Flow Classification Successfully",g.d.success)})):this.glCashFlowClassificationService.newGlCashFlowClassification(e).subscribe((function(){t.resetForm(),t.loadAllSiteData(t.constantFilters()),t.alertService.showMessage("Success","Added New GL Cash Flow Classification Successfully",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.addNew=Object.assign({},this.new),this.disableSaveGLCFName=!1,this.disableSaveGLCFNameSave=!1}},{key:"getmemo",value:function(t){0==this.disableSaveGLCFName&&(this.disableSaveGLCFName=!1,this.disableSaveGLCFNameSave=!1)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveGLCFName=!1,this.disableSaveGLCFNameSave=!0,this.addNew=Object.assign({},t,{glClassFlowClassificationName:Object(D.d)("glClassFlowClassificationId",t.glClassFlowClassificationId,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.glCashFlowClassificationService.updateCashFlowClassification(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.glCashFlowClassificationService.deleteCashFlowClassification(this.selectedRowforDelete.glClassFlowClassificationId).subscribe((function(){e.loadAllSiteData(e.constantFilters()),e.alertService.showMessage("Success","Deleted GL Cash Flow Classification Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.glCashFlowClassificationService.historyGlCashFlowClassification(t.glClassFlowClassificationId).subscribe((function(t){e.auditHistory=t[0]}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("GlClassFlowClassification","GlClassFlowClassificationId",this.restorerecord.glClassFlowClassificationId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadAllSiteData(event),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Re.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:m.b},{type:b.a},{type:Le.a},{type:A.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],Re.prototype,"modal",void 0),Re=n.b([Object(s.Component)({selector:"app-gl-cash-flow-classification",template:n.c(a("cefv")).default,animations:[h.a],styles:[n.c(a("hOhG")).default]})],Re);var Pe=function(){function t(e){_classCallCheck(this,t),this.breadCrumb=e}return _createClass(t,[{key:"ngOnInit",value:function(){this.breadCrumb.currentUrl="/singlepages/singlepages/app-gl-financial-statement",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"ngAfterViewInit",value:function(){}}]),t}();Pe.ctorParameters=function(){return[{type:u.a}]},Pe=n.b([Object(s.Component)({selector:"app-gl-financial-statement",template:n.c(a("fJLj")).default,animations:[h.a],styles:[n.c(a("+bDa")).default]})],Pe);var Ne=function(){function t(e){_classCallCheck(this,t),this.breadCrumb=e}return _createClass(t,[{key:"ngOnInit",value:function(){this.breadCrumb.currentUrl="/singlepages/singlepages/app-journal-approvals",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"ngAfterViewInit",value:function(){}}]),t}();Ne.ctorParameters=function(){return[{type:u.a}]},Ne=n.b([Object(s.Component)({selector:"app-journal-approvals",template:n.c(a("yBqz")).default,animations:[h.a],styles:[n.c(a("gM3M")).default]})],Ne);var Fe=function(){function t(e){_classCallCheck(this,t),this.breadCrumb=e}return _createClass(t,[{key:"ngOnInit",value:function(){this.breadCrumb.currentUrl="/singlepages/singlepages/app-rfq-engine",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"ngAfterViewInit",value:function(){}}]),t}();Fe.ctorParameters=function(){return[{type:u.a}]},Fe=n.b([Object(s.Component)({selector:"app-rfq-engine",template:n.c(a("4dOk")).default,animations:[h.a],styles:[n.c(a("rLIX")).default]})],Fe);var Ee=function(){function t(e){_classCallCheck(this,t),this._fb=e,this.title="Create",this.employeeForm=this._fb.group({id:0,name:["",[r.Validators.required]],gender:["",[r.Validators.required]],department:["",[r.Validators.required]],city:["",[r.Validators.required]]})}return _createClass(t,[{key:"ngOnInit",value:function(){this.id}},{key:"save",value:function(){alert("sucess"),this.employeeForm.valid}},{key:"name",get:function(){return this.employeeForm.get("name")}},{key:"gender",get:function(){return this.employeeForm.get("gender")}},{key:"department",get:function(){return this.employeeForm.get("department")}},{key:"city",get:function(){return this.employeeForm.get("city")}}]),t}();Ee.ctorParameters=function(){return[{type:r.FormBuilder}]},Ee=n.b([Object(s.Component)({selector:"actions-editor",animations:[h.a],template:n.c(a("IpWk")).default})],Ee);var He=a("MKys"),Be=a("msFR"),Oe=a("Skqz"),Ue=a("slO+"),je=a("S8jn"),Ve=function t(e,a,n,s,i,r,o,l,d,c,u,p,m,h,v,b,g,f,y,w,D,S,k,x){_classCallCheck(this,t),this.chargeId=a,this.glAccountId=m,this.chargeType=r,this.masterCompanyId=v,this.createdBy=g,this.createdDate=f,this.updatedDate=y,this.updatedBy=w,this.isActive=i,this.isDeleted=S,this.memo=D,this.description=k},ze=function(){function t(e,a,n,s,i,r,o,l,d,c,u,p,m,h){_classCallCheck(this,t),this.breadCrumb=e,this.modalService=a,this.commonService=n,this.configurations=s,this.authService=i,this.alertService=r,this.chargeService=o,this.vendorService=l,this.currencyService=d,this.integrationService=c,this.purchaseOrderService=u,this.glAccountService=p,this.legalEntityService=m,this.percentService=h,this.totalRecords=0,this.totalPages=0,this.pageSize=10,this.chargeData=[],this.isEdit=!1,this.addNewCharge=new Ve,this.chargeHeaders=[{field:"chargeType",header:"Charge Type"},{field:"glAccountName",header:"GL Account"},{field:"description",header:"Description"},{field:"memo",header:"Memo"}],this.selectedColumns=this.chargeHeaders,this.selectedCompanyID=0,this.selectedBUId=0,this.selectedDivisionID=0,this.selectedDeptID=0,this.isEditMode=!1,this.disableSaveForChargeMsg=!1,this.disableSaveForGLMsg=!1,this.disableSaveForEdit=!1,this.currentstatus="Active",this.auditHistory=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getChargeList(),this.loadGLAccountData(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-charges",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"getChargeList",value:function(){var t=this;this.chargeService.getChargeList().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"loadGLAccountData",value:function(){var t=this;this.glAccountService.getGlAccountBasic().subscribe((function(e){t.glAccountList=e[0]}))}},{key:"resetChargeForm",value:function(){this.isEdit=!1,this.disableForMgmtStructure=!0,this.disableSaveForChargeMsg=!1,this.disableSaveForGLMsg=!1,this.addNewCharge=new Ve,this.addNewCharge=Object.assign({},this.addNewCharge,{isActive:!0,isDeleted:!1}),this.selectedCompanyID=0,this.selectedDeptID=0,this.selectedBUId=0,this.selectedDivisionID=0}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.chargeService.updateCharge(a).subscribe((function(){e.getChargeList(),e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getChargeList()}},{key:"editCharge",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveForEdit=!0,this.disableSaveForChargeMsg=!1,this.disableSaveForGLMsg=!1,this.addNewCharge=Object.assign({},t,{chargeType:Object(D.d)("chargeId",t.chargeId,this.chargeData),glAccountId:Object(D.d)("glAccountId",t.glAccountId,this.glAccountList)}),this.selectedRecordForEdit=Object.assign({},this.addNewCharge),console.log(this.addNewCharge)}},{key:"customExcelUpload",value:function(t){var e=t.target.files;console.log(e),e.length>0&&this.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConfirmation",value:function(t){var e=this;"Yes"===t?this.chargeService.deleteCharge(this.selectedRowforDelete.chargeId,this.userName).subscribe((function(){e.getChargeList(),e.alertService.showMessage("Success","Deleted Charge Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"saveCharge",value:function(){var t=this,e=Object.assign({},this.addNewCharge,{createdBy:this.userName,updatedBy:this.userName,chargeType:Object(D.a)("chargeType",this.addNewCharge.chargeType),glAccountId:Object(D.a)("glAccountId",this.addNewCharge.glAccountId)});this.isEdit?this.chargeService.updateCharge(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetChargeForm(),t.getChargeList(),t.alertService.showMessage("Success","Updated Charge Successfully",g.d.success)})):this.chargeService.newCharge(e).subscribe((function(){t.resetChargeForm(),t.getChargeList(),t.alertService.showMessage("Success","Added  New Charge Successfully",g.d.success)}),(function(e){t.alertService.showMessage("Error",e,g.d.error)}))}},{key:"selectedCharge",value:function(t){var e=Object(D.k)("chargeType",t,this.selectedRecordForEdit);this.disableSaveForChargeMsg=!e}},{key:"checkChargeExists",value:function(t){this.disableSaveForChargeMsg=!1;for(var e=0;e<this.chargeData.length;e++)if(this.addNewCharge.chargeType==this.chargeData[e].chargeType||t==this.chargeData[e].chargeType)return void(this.disableSaveForChargeMsg=!0)}},{key:"filterCharge",value:function(t){this.filteredChargeList=this.chargeData;var e=_toConsumableArray(this.filteredChargeList.filter((function(e){return e.chargeType.toLowerCase().includes(t.query.toLowerCase())})));this.filteredChargeList=e}},{key:"filterGLAccount",value:function(t){this.filteredGLAccountList=this.glAccountList;var e=_toConsumableArray(this.glAccountList.filter((function(e){return e.accountName.toLowerCase().includes(t.query.toLowerCase())})));this.filteredGLAccountList=e}},{key:"companyselected",value:function(){var t=this;console.log("Company :"+this.selectedCompanyID),"0"!==this.selectedCompanyID.toString()?(this.mgmtStructureId=this.selectedCompanyID,this.disableForMgmtStructure=!1):this.disableForMgmtStructure=!0,this.divisionList=[],this.departmentList=[],this.selectedBUId=0,this.selectedDeptID=0,this.selectedDivisionID=0,this.buList=this.allmgmtData.filter((function(e){return e.parentId===t.selectedCompanyID}))}},{key:"getAuditHistoryById",value:function(t){var e=this;this.chargeService.getChargeAudit(t.chargeId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.chargeData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.chargeData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.chargeData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.chargeData=e)),this.totalRecords=this.chargeData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("Charge","ChargeId",this.restorerecord.chargeId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getChargeList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"sampleExcelDownload",value:function(){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();ze.ctorParameters=function(){return[{type:u.a},{type:w.c},{type:M.a},{type:A.a},{type:f.a},{type:g.b},{type:Be.a},{type:Oe.a},{type:P.a},{type:kt.a},{type:Ue.a},{type:je.a},{type:at.a},{type:L.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],ze.prototype,"table",void 0),ze=n.b([Object(s.Component)({selector:"app-charges",template:n.c(a("PVK1")).default,animations:[h.a],styles:[n.c(a("TtaW")).default]})],ze);var Ge=a("qo9M"),_e=function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.defaultMessageId=a,this.defaultMessageCode=n,this.description=s,this.memo=u,this.masterCompanyId=i,this.createdBy=r,this.createdDate=o,this.updatedDate=l,this.updatedBy=d,this.masterCompany=e,this.isActive=c,this.memo=u},We=function(){function t(e,a,n,s,i,r,o,l,d){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this._fb=n,this.alertService=s,this.masterComapnyService=i,this.commonService=r,this.modalService=o,this.defaultmessageService=l,this.dialog=d,this.defaultMessage=[],this.defaultMessage_Name="",this.description="",this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.displayedColumns=["defaultMessageId","defaultMessageCode","description","memo","createdBy","updatedBy","updatedDate","createdDate"],this.allDefaultMessageInfo=[],this.disableSaveForEdit=!1,this.actionamecolle=[],this.title="Create",this.isEdit=!1,this.isDeleteMode=!1,this.localCollection=[],this.pageSize=10,this.currentstatus="Active",this.Active="Active",this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.displayedColumns.push("action"),this.dataSource=new H.a}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData(),this.cols=[{field:"defaultMessageCode",header:"Default Message Name"},{field:"description",header:"Default Message  Description"},{field:"memo",header:"Memo"}],this.breadCrumb.currentUrl="/singlepages/singlepages/app-default-message",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.selectedColumns=this.cols}},{key:"handleChange",value:function(t,e){var a=this;0==e.checked?(this.sourceAction=t,this.sourceAction.updatedBy=this.userName,this.Active="In Active",this.sourceAction.isActive,this.defaultmessageService.updateDefaultMessage(this.sourceAction).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)}))):(this.sourceAction=t,this.sourceAction.updatedBy=this.userName,this.Active="Active",this.sourceAction.isActive,this.defaultmessageService.updateDefaultMessage(this.sourceAction).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)})))}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"loadData",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.defaultmessageService.getDefaultMessageList().subscribe((function(e){return t.onDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onDataLoadSuccessful",value:function(t){var e=this;this.defaultmessageService.getDefaultMessageList().subscribe((function(t){e.originalTableData=t[0],e.getListByStatus(e.status?e.status:e.currentstatus)}))}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"open",value:function(t){this.isEdit=!1,this.isDeleteMode=!1,this.disableSave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=new _e,this.sourceAction.isActive=!0,this.messageName="",this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEdit=!1,this.isDeleteMode=!0,this.sourceAction=e,this.defaultMessage_Name=e.defaultMessageCode,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"openEdit",value:function(t,e){this.isEdit=!0,this.disableSave=!1,this.isSaving=!0,this.disableSaveForEdit=!0,this.loadMasterCompanies(),this.sourceAction=e,this.messageName=this.sourceAction.defaultMessageCode,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHist",value:function(t,e){var a=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.sourceAction=e,this.isSaving=!0,this.defaultmessageService.historyDefaultMessage(this.sourceAction.defaultMessageId).subscribe((function(e){return a.onHistoryLoadSuccessful(e[0],t)}),(function(t){return a.saveFailedHelper(t)}))}},{key:"openView",value:function(t,e){this.sourceAction=e,this.defaultMessage_Name=e.defaultMessageCode,this.description=e.description,this.memo=e.memo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHelpText",value:function(t){this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"eventHandler",value:function(t){var e=t.target.value.toLowerCase();this.selectedActionName&&(e==this.selectedActionName.toLowerCase()?this.disableSave=!0:this.disableSave=!1)}},{key:"partnmId",value:function(t){for(var e=0;e<this.actionamecolle.length;e++)t==this.actionamecolle[e][0].messageName&&(this.disableSave=!0,this.selectedActionName=t)}},{key:"filterMessageName",value:function(t){this.localCollection=[];for(var e=0;e<this.allDefaultMessageInfo.length;e++){var a=this.allDefaultMessageInfo[e].defaultMessageCode;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(this.actionamecolle.push([{defaultMessageId:this.allDefaultMessageInfo[e].defaultMessageId,messageName:a}]),this.localCollection.push(a))}}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"editItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,0==this.isEdit?(this.sourceAction.createdBy=this.userName,this.sourceAction.updatedBy=this.userName,this.sourceAction.defaultMessageCode=this.messageName,this.sourceAction.masterCompanyId=1,this.defaultmessageService.newDefaultMessage(this.sourceAction).subscribe((function(e){return t.saveSuccessHelper(e)}),(function(e){return t.saveFailedHelper(e)}))):(this.sourceAction.updatedBy=this.userName,this.sourceAction.defaultMessageCode=this.messageName,this.sourceAction.masterCompanyId=1,this.defaultmessageService.updateDefaultMessage(this.sourceAction).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)}))),this.modal.close()}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.defaultmessageService.deleteDefaultMessage(this.sourceAction.defaultMessageId).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEdit=!1,this.modal.close()}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.loadData()}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"getDismissReason",value:function(t){return t===w.a.ESC?"by pressing ESC":t===w.a.BACKDROP_CLICK?"by clicking on a backdrop":"with: "+t}},{key:"showAuditPopup",value:function(t,e){this.auditDefault(e),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"auditDefault",value:function(t){var e=this;this.AuditDetails=[],this.defaultmessageService.getAudit(t).subscribe((function(t){t.length>0&&(e.AuditDetails=t,e.AuditDetails[0].ColumnsToAvoid=["defaultMessageAuditId","defaultMessageId","masterCompanyId","createdBy","createdDate","updatedDate"])}))}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.allDefaultMessageInfo=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.allDefaultMessageInfo=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.allDefaultMessageInfo=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.allDefaultMessageInfo=e)),this.totalRecords=this.allDefaultMessageInfo.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("DefaultMessage","DefaultMessageId",this.restorerecord.defaultMessageId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"openEdits",value:function(t){}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();We.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:r.FormBuilder},{type:g.b},{type:b.a},{type:M.a},{type:w.c},{type:Ge.a},{type:m.b}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],We.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],We.prototype,"sort",void 0),We=n.b([Object(s.Component)({selector:"app-default-message",template:n.c(a("Tbva")).default,animations:[h.a],styles:[n.c(a("chu7")).default]})],We);var qe=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.commonService=n,this.modalService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.taxTypeService=l,this.dialog=d,this.configurations=c,this.masterComapnyService=u,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"description",header:"Certification Type"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveTaxtype=!1,this.new={description:"",masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.currentstatus="Active",this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-tax-type",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.taxTypeService.taxtypeCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=TaxType&fileName=taxType.xlsx";window.location.assign(t)}},{key:"getList",value:function(){var t=this;this.taxTypeService.getWorkFlows().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkTaxTypeExists",value:function(t,e){console.log("this.selectedRecordForEdit",this.selectedRecordForEdit);var a=Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit);console.log(a),a.length>0?(this.disableSaveTaxtype=!0,this.disableSaveTaxtypeMsg=!0):(this.disableSaveTaxtype=!1,this.disableSaveTaxtypeMsg=!1)}},{key:"filterTaxType",value:function(t){this.taxTypeList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.taxTypeList=e}},{key:"selectedTaxType",value:function(t){console.log("selectedTaxType",t);var e=Object(D.k)("description",t,this.selectedRecordForEdit);!this.isEdit||this.isEdit&&t.taxTypeId!=this.selectedRecordForEdit.taxTypeId?this.disableSaveTaxtype=!e:this.disableSaveTaxtype=!1}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,description:Object(D.a)("description",this.addNew.description)});this.isEdit?this.taxTypeService.updateAction(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Updated Tax Type Successfully  ",g.d.success)})):this.taxTypeService.newAction(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added Tax Type  Successfully  ",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.addNew=Object.assign({},this.new)}},{key:"getChange",value:function(){0==this.disableSaveTaxtypeMsg&&(this.disableSaveTaxtype=!1)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveTaxtype=!0,this.disableSaveTaxtypeMsg=!1,this.addNew=Object.assign({},t,{description:Object(D.d)("taxTypeId",t.taxTypeId,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.taxTypeService.updateAction(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.taxTypeService.deleteAcion(this.selectedRowforDelete.taxTypeId).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted  Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"showHistory",value:function(t){var e=this;this.taxTypeService.getTaxTypeAudit(t.taxTypeId).subscribe((function(t){e.auditHistory=t}))}},{key:"onBlur",value:function(t){var e=t.target.value;this.disableSaveTaxtypeMsg=!1;for(var a=0;a<this.originalData.length;a++){var n=this.originalData[a].description,s=this.originalData[a].taxTypeId;if(n.toLowerCase()==e.toLowerCase()){!this.isEdit||this.isEdit?(this.disableSaveTaxtype=!0,this.disableSaveTaxtypeMsg=!0):s!=this.selectedRecordForEdit.taxTypeId?(this.disableSaveTaxtype=!1,this.disableSaveTaxtypeMsg=!0):(this.disableSaveTaxtype=!1,this.disableSaveTaxtypeMsg=!1),console.log("description :",n);break}}}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("TaxType","TaxTypeId",this.restorerecord.taxTypeId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();qe.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:M.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:Kt.a},{type:m.b},{type:A.a},{type:b.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],qe.prototype,"modal",void 0),qe=n.b([Object(s.Component)({selector:"app-tax-type",template:n.c(a("s1W1")).default,animations:[h.a],styles:[n.c(a("ojsO")).default]})],qe);var $e=a("TeDh"),Ye=function(){function t(e,a,n,s,i,r,o,l,d,c){_classCallCheck(this,t),this.router=e,this.commonService=a,this.breadCrumb=n,this.authService=s,this._fb=i,this.alertService=r,this.masterComapnyService=o,this.modalService=l,this.conditionService=d,this.dialog=c,this.actionamecolle=[],this.isEditMode=!1,this.isDeleteMode=!1,this.formData=new FormData,this.localCollection=[],this.Active="Active",this.currentstatus="Active",this.conditionData=[],this.conditionHeaders=[{field:"description",header:"Condition Name"},{field:"memo",header:"Memo"}],this.pageIndex=0,this.pageSize=10,this.newCondition={description:"",masterCompanyId:1,isActive:!0,isDeleted:!1,memo:""},this.addNewCondition=Object.assign({},this.newCondition),this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.selectedColumns=this.conditionHeaders,this.getConditionList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-conditions",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"getConditionList",value:function(){var t=this;this.conditionService.getAllConditionList().subscribe((function(e){t.originalTableData=e[0].columnData,t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"onBlur",value:function(t){var e=t.target.value;this.disableSaveForConditionMsg=!1;for(var a=0;a<this.conditionData.length;a++){var n=this.conditionData[a].description,s=this.conditionData[a].conditionId;if(n.toLowerCase()==e.toLowerCase()){!this.isEditMode||this.isEditMode||s!=this.selectedRecordForEdit.conditionId?this.disableSaveForConditionMsg=!0:this.disableSaveForConditionMsg=!1,console.log("description :",n);break}}}},{key:"resetConditionForm",value:function(){this.isEditMode=!1,this.disableSaveForConditionMsg=!1,this.selectedRecordForEdit=void 0,this.addNewCondition=Object.assign({},this.newCondition)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.conditionService.updateCondition(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"filterConditions",value:function(t){this.conditionList=this.conditionData;var e=_toConsumableArray(this.conditionData.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.conditionList=e}},{key:"getmemo",value:function(t){this.disableSaveForEdit=!1}},{key:"checkConditionExists",value:function(t,e){for(var a=0;a<this.conditionData.length;a++)e.toLowerCase()==this.conditionData[a].description.toLowerCase()?this.disableSaveForConditionMsg=!0:this.disableSaveForConditionMsg=!1}},{key:"selectedCondition",value:function(t){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSaveForConditionMsg=!e}},{key:"refreshList",value:function(){this.table.reset(),this.getConditionList()}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.conditionService.deleteCondition(this.selectedRowforDelete.conditionId).subscribe((function(){e.getConditionList(),e.alertService.showMessage("Success","Deleted Condition Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"edit",value:function(t){console.log(t),this.isEditMode=!0,this.disableSaveForEdit=!0,this.disableSaveForConditionMsg=!1,this.addNewCondition=Object.assign({},t,{description:Object(D.d)("conditionId",t.conditionId,this.conditionData)}),this.selectedRecordForEdit=Object.assign({},this.addNewCondition),console.log(this.addNewCondition)}},{key:"saveCondition",value:function(){var t=this;if(this.conditionData.findIndex((function(e){return e.description==t.addNewCondition.description}))>-1)this.alertService.showMessage("Failed","Condition "+this.addNewCondition.description+" already exists.",g.d.error);else{var e=Object.assign({},this.addNewCondition,{createdBy:this.userName,updatedBy:this.userName,description:Object(D.a)("description",this.addNewCondition.description)});this.isEditMode?this.conditionService.updateCondition(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEditMode=!1,t.resetConditionForm(),t.getConditionList(),t.alertService.showMessage("Success","Updated Condition Successfully",g.d.success)})):this.conditionService.newAddCondition(e).subscribe((function(){t.resetConditionForm(),t.getConditionList(),t.alertService.showMessage("Success","Added  New Condition Successfully",g.d.success)}))}}},{key:"openHelpText",value:function(t){this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"getAuditHistoryById",value:function(t){var e=this;this.conditionService.getConditionAudit(t.conditionId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.conditionService.ConditionCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getConditionList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.conditionData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.conditionData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.conditionData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.conditionData=e)),this.totalRecords=this.conditionData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("Condition","ConditionId",this.restorerecord.conditionId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getConditionList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Ye.ctorParameters=function(){return[{type:c.Router},{type:M.a},{type:u.a},{type:f.a},{type:r.FormBuilder},{type:g.b},{type:b.a},{type:w.c},{type:$e.a},{type:m.b}]},n.b([Object(s.ViewChild)("dt",{static:!1})],Ye.prototype,"table",void 0),Ye=n.b([Object(s.Component)({selector:"app-conditions",template:n.c(a("+SO6")).default,animations:[h.a],styles:[n.c(a("xYn+")).default]})],Ye);var Ke=a("HMU8"),Je=function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.iD=a,this.stockAdjustmentReason=n,this.memo=u,this.masterCompanyId=s,this.createdBy=i,this.createdDate=r,this.updatedDate=o,this.updatedBy=l,this.isActive=d,this.isDelete=c},Qe=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.stocklineAdjustReasonService=n,this.authService=s,this.modalService=i,this.activeModal=r,this._fb=o,this.alertService=l,this.dialog=d,this.masterComapnyService=c,this.configurations=u,this.sourceAdjustmentReason={},this.adjustmentReasonList=[],this.disableSave=!1,this.isDelete=!1,this.actionamecolle=[],this.action_name="",this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.formData=new FormData,this.updatedDate="",this.displayedColumns=["actionId","companyName","description","memo","createdBy","updatedBy","updatedDate","createdDate"],this.allActions=[],this.allComapnies=[],this.auditHistory=[],this.code_Name="",this.StockAdjustmentReasonName="",this.ID="",this.title="Create",this.Active="Active",this.allreasn=[],this.localCollection=[],this.stockAdjustmentReason="",this.pageIndex=0,this.pageSize=10,this.disableSaveForEdit=!1,this.currentstatus="Active",this.isEdit=!1,this.isDeleteMode=!1,this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.displayedColumns.push("action"),this.dataSource=new H.a,this.sourceAction=new Je}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-adjustment-reason",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(){var t=this;this.stocklineAdjustReasonService.getStockLineAdjustmentReasonList().subscribe((function(e){t.originalTableData=e[0].columnData,t.getListByStatus(t.status?t.status:t.currentstatus),t.allunitData=e[0].columHeaders,t.cols=[console.log(t.allunitData),t.selectedColumns=t.allunitData],t.selectedData=t.selectedColumns}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"onDataLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.totalRecords=t.length,this.allActions=t}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"open",value:function(t){this.isEdit=!1,this.isDeleteMode=!1,this.disableSave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=new Je,this.sourceAction.isActive=!0,this.stockAdjustmentReason="",this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEdit=!1,this.isDeleteMode=!0,this.sourceAction=e,this.code_Name=e.stockAdjustmentReason,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),console.log(t),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"openEdit",value:function(t,e){this.isEdit=!0,this.disableSave=!1,this.isSaving=!0,this.disableSaveForEdit=!0,this.loadMasterCompanies(),this.sourceAction=e,this.stockAdjustmentReason=e.stockAdjustmentReason,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"handleChange",value:function(t,e){var a=this,n={createdBy:this.userName,updatedBy:this.userName,AdjustmentReasonId:t.iD,Description:t.stockAdjustmentReason,Memo:t.memo,isActive:t.isActive,IsDeleted:!1,masterCompanyId:1};0==e.checked?(this.Active="In Active",this.stocklineAdjustReasonService.updateStocklineAdjReason(n).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)}))):(this.Active="Active",this.stocklineAdjustReasonService.updateStocklineAdjReason(n).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)})))}},{key:"eventHandler",value:function(t){var e=t.target.value.toLowerCase();this.selectedreason&&(e==this.selectedreason.toLowerCase()?this.disableSave=!0:this.disableSave=!1)}},{key:"partnmId",value:function(t){for(var e=0;e<this.allreasn.length;e++)t==this.allreasn[e][0].stockAdjustmentReason&&(this.disableSave=!0,this.selectedreason=t)}},{key:"filterStockAdjReason",value:function(t){this.localCollection=[];for(var e=0;e<this.adjustmentReasonList.length;e++){var a=this.adjustmentReasonList[e].stockAdjustmentReason;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(this.allreasn.push([{adjustmentReasonId:this.adjustmentReasonList[e].iD,stockAdjustmentReason:a}]),this.localCollection.push(a))}}},{key:"openView",value:function(t,e){this.sourceAdjustmentReason=e,this.StockAdjustmentReasonName=e.stockAdjustmentReason,this.ID=e.iD,this.memo=e.memo,this.isActive=e.isActive,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHelpText",value:function(t){this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHist",value:function(t,e){this.sourceAdjustmentReason=e}},{key:"editItemAndCloseModel",value:function(){var t=this;this.isSaving=!0;var e={createdBy:this.userName,updatedBy:this.userName,Description:this.stockAdjustmentReason,AdjustmentReasonId:this.sourceAction.iD,Memo:this.sourceAction.memo,IsActive:this.sourceAction.isActive,IsDeleted:this.isDelete,masterCompanyId:1};0==this.isEdit?this.stocklineAdjustReasonService.newStocklineAdjReason(e).subscribe((function(e){return t.saveSuccessHelper(e)}),(function(e){return t.saveFailedHelper(e)})):(e.iD=this.sourceAction.iD,this.stocklineAdjustReasonService.updateStocklineAdjReason(e).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)}))),this.modal.close()}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.stocklineAdjustReasonService.deleteStockLineAdjustmentReason(this.sourceAction.iD).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEdit=!1,this.modal.close()}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.loadData()}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"getAuditHistoryById",value:function(t){var e=this;this.stocklineAdjustReasonService.getStockAdjReasonAudit(t.iD).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=StocklineAdjustmentReason&fileName=StocklineAdjustmentReason.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.stocklineAdjustReasonService.stockLineAdjustmentCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.getLStockAdjustmentReasonist(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getLStockAdjustmentReasonist",value:function(){this.loadData()}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.adjustmentReasonList=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.adjustmentReasonList=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.adjustmentReasonList=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.adjustmentReasonList=e)),this.totalRecords=this.adjustmentReasonList.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("StocklineAdjustmentReason","AdjustmentReasonId",this.restorerecord.iD).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Qe.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:Ke.a},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:m.b},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],Qe.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],Qe.prototype,"sort",void 0),Qe=n.b([Object(s.Component)({selector:"app-adjustment-reason",template:n.c(a("8lm4")).default,animations:[h.a],styles:[n.c(a("O8xP")).default]})],Qe);var Ze=function t(e,a,n,s,i,r,o,l,d,c){_classCallCheck(this,t),this.siteId=a,this.masterCompanyId=n,this.createdBy=s,this.createdDate=i,this.updatedDate=r,this.updatedBy=o,this.masterCompany=e,this.isActive=l,this.isDeleted=d,this.memo=c,this.countryId=this.countryId},Xe=a("0zL+"),ta=function(){function t(e,a,n,s,i,r,o,l,d,c,u,p,m,h,v,b,g){_classCallCheck(this,t),this.manageMentService=e,this.commonService=a,this.customerService=n,this.configurations=s,this.breadCrumb=i,this.http=r,this.ataservice=o,this.changeDetectorRef=l,this.router=d,this.authService=c,this.modalService=u,this.activeModal=p,this._fb=m,this.alertService=h,this.workFlowtService=v,this.dialog=b,this.masterComapnyService=g,this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.localCollection=[],this.isEditMode=!1,this.isDeleteMode=!1,this.closeCmpny=!0,this.action_name="",this.allComapnies=[],this.auditHisory=[],this.allSites=[],this.displayedColumns=["name","Address1","Address2","Address3","City","StateOrProvince","Country","PostalCode","Memo","createdBy","updatedBy","updatedDate","createdDate"],this.site_Name="",this.localSelectedManagement=[],this.Active="Active",this.actionamecolle=[],this.AuditHistoryTitle="History of Site",this.auditHistory=[],this.currentstatus="Active",this.isDeleted=!1,this.disableSaveForEdit=!1,this.siteData=[],this.allWorkFlows=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.dataSource=new H.a,this.sourceSite=new Ze}return _createClass(t,[{key:"ngOnInit",value:function(){this.getAllCountries(),this.loadData(),this.cols=[{field:"name",header:"Site Name"},{field:"address1",header:"Address Line 1"},{field:"address2",header:"Address Line 2"},{field:"address3",header:"Address Line 3"},{field:"city",header:"City"},{field:"stateOrProvince",header:"State"},{field:"country",header:"Country"},{field:"postalCode",header:"Zip Code"},{field:"memo",header:"memo"}],this.loadManagementdata(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-site",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.selectedColumns=this.cols,this.HasAuditDetails=!1,this.formData=new FormData}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"getAllCountries",value:function(){var t=this;this.customerService.getCountrylist().subscribe((function(e){t.countryListOriginal=e[0]}))}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.loadManagementdata()}},{key:"filterCountries",value:function(t){this.countrycollection=this.countryListOriginal,this.countrycollection=_toConsumableArray(this.countryListOriginal.filter((function(e){return e.nice_name.toLowerCase().includes(t.query.toLowerCase())})))}},{key:"loadAllSiteData",value:function(t){var e=this;this.lazyLoadEventData=t;var a=parseInt(t.first)/t.rows;this.pageIndex=a,this.pageSize=t.rows,t.first=a,this.loadingIndicator=!0,null==t.globalFilter&&(t.globalFilter="");var n=Object.assign({},t,{filters:Object(D.j)(t.filters)});this.workFlowtService.getSearchData(n).subscribe((function(t){e.originalTableData=t[0].results,e.getListByStatus(e.status?e.status:e.currentstatus)}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"closethis",value:function(){this.closeCmpny=!1}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=Site&fileName=Site.xlsx";window.location.assign(t)}},{key:"loadData",value:function(){var t=this;this.workFlowtService.getSiteList().subscribe((function(e){return t.onDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"handleChange",value:function(t,e){var a=this;console.log(t);var n=Object.assign({},t);this.workFlowtService.updateSite(n).subscribe((function(){a.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"loadManagementdata",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.manageMentService.getManagemententity().subscribe((function(e){return t.onManagemtntdataLoad(e[0])}),(function(e){return t.onDataLoadFailed(e)})),this.selectedColumns=this.cols}},{key:"onManagemtntdataLoad",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allManagemtninfo=t,this.allManagemtninfo&&(this.gridData=this.makeNestedObj(this.allManagemtninfo,null)),this.cols1=[{field:"code",header:"Code"},{field:"name",header:"Name"},{field:"description",header:"Description"}]}},{key:"makeNestedObj",value:function(t,e){var a=[];for(var n in t)if(t[n].parentId==e){var s=this.makeNestedObj(t,t[n].managementStructureId);t[n]={data:t[n]},s.length&&(t[n].children=s),a.push(t[n])}return a}},{key:"makeNestedObj1",value:function(t,e,a){var n=[];if(t)for(var s=0;s<t.length;s++)for(var i=0;i<e.length;i++)if(e[i].data){if(t[s].managementStructureId==e[i].data.managementStructureId){e[i].data.managementSiteId=t[s].managementSiteId,e[i].data.siteId=t[s].siteId,n.push(e[i]),console.log(e[i].data);break}}else if(t[s].managementStructureId==e[i].managementStructureId){e[i].data.managementSiteId=t[s].managementSiteId,e[i].data.siteId=t[s].siteId,n.push(e[i]),console.log(e[i].data);break}return n}},{key:"nodeSelect",value:function(t){console.log("selected node",t,t.node)}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"managementStructureClick",value:function(t){console.log(this.selectedNodeTest)}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onDataLoadSuccessful",value:function(t){var e=this;this.workFlowtService.getSiteList().subscribe((function(t){e.originalTableData=t[0],e.getListByStatus(e.status?e.status:e.currentstatus)}))}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.AuditDetails,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"open",value:function(t){this.isEditMode=!1,this.isDeleteMode=!1,this.isSaving=!0,this.loadMasterCompanies(),this.loadManagementdata(),this.sourceSite=new Ze,this.sourceSite.isActive=!0,this.disableSaveManufacturer=!1,this.sourceSite=new Ze,this.name="",this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceSite=e,this.name=e.name,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"localManagementSiteCollectionEdit",value:function(t){console.log(t)}},{key:"openEdit",value:function(t,e){var a=this;console.log("row",e),e.countryId=Object(D.d)("countries_id",e.countryId,this.countryListOriginal),this.isEditMode=!0,this.disableSaveForEdit=!0,this.isSaving=!0,this.loadMasterCompanies(),this.disableSaveManufacturer=!1,this.sourceSite=e,console.log("source Data",this.sourceSite),this.workFlowtService.getManagementSiteEditData(this.sourceSite.siteId).subscribe((function(t){a.localManagementSiteEditCollection=t,a.localManagementSiteEditCollection&&(a.gridData?a.gridData1=a.makeNestedObj1(a.localManagementSiteEditCollection,a.allManagemtninfo,null):a.gridData=a.makeNestedObj(a.allManagemtninfo,null)),a.selectedNodeTest=a.gridData1})),this.name=this.sourceSite.name,this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHist",value:function(t,e){var a=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.sourceSite=e,this.workFlowtService.historySite(this.sourceSite.siteId).subscribe((function(e){return a.onHistoryLoadSuccessful(e[0],t)}),(function(t){return a.saveFailedHelper(t)}))}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"openView",value:function(t,e){this.sourceSite=e,this.name=e.name,this.address1=e.address1,this.address2=e.address2,this.address3=e.address3,this.city=e.city,this.stateOrProvince=e.stateOrProvince,this.country=e.country,this.postalCode=e.postalCode,this.memo=e.memo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHelpText",value:function(t){this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"Manufacturerdescription",value:function(t){if(this.allSites)for(var e=0;e<this.actionamecolle.length;e++)t==this.actionamecolle[e][0].siteName&&(this.disableSaveManufacturer=!0,this.selectedSite=t)}},{key:"ManufacturerHandler",value:function(t){if(""!=t.target.value){var e=t.target.value.toLowerCase();this.selectedSite&&(e==this.selectedSite.toLowerCase()?this.disableSaveManufacturer=!0:this.disableSaveManufacturer=!1)}}},{key:"filtermanufacturer",value:function(t){this.localCollection=[];for(var e=0;e<this.allSites.length;e++){var a=this.allSites[e].name;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(this.actionamecolle.push([{siteId:this.allSites[e].siteId,siteName:a}]),this.localCollection.push(a))}}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceSite.updatedBy=this.userName,this.workFlowtService.deleteSite(this.sourceSite.siteId).subscribe((function(e){return t.saveCompleted(t.sourceSite)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.loadAllSiteData(this.constantFilters())}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadAllSiteData(this.constantFilters())}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"savesuccessCompleted",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadAllSiteData(this.constantFilters())}},{key:"saveManagement",value:function(t,e){for(var a=this,n=0;n<e.length;n++)null!=e[n].data.managementStructureId&&(e[n].data.siteId=t,this.workFlowtService.newManagementSite(e[n].data).subscribe((function(t){a.localManagementSiteCollection=t})));this.loadAllSiteData(this.constantFilters())}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured while saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"SaveandEditsite",value:function(){var t=this;this.isSaving=!0,0==this.isEditMode?(this.sourceSite.createdBy=this.userName,this.sourceSite.updatedBy=this.userName,this.sourceSite.masterCompanyId=1,this.sourceSite.name=this.name,this.sourceSite.countryId=Object(D.h)("countries_id",this.sourceSite.countryId),this.workFlowtService.newSite(this.sourceSite).subscribe((function(e){t.siteInfo=e,t.alertService.showMessage("Success","Action was created successfully",g.d.success),null!=e&&(t.saveManagement(e.siteId,t.selectedNodeTest),t.alertService.showMessage("Success","Action was created successfully",g.d.success))})),this.loadAllSiteData(this.constantFilters())):(this.sourceSite.updatedBy=this.userName,this.sourceSite.name=this.name,this.sourceSite.masterCompanyId=1,this.sourceSite.countryId=Object(D.h)("countries_id",this.sourceSite.countryId),this.workFlowtService.updateSite(this.sourceSite).subscribe(this.alertService.showMessage("Success","Action was edited successfully",g.d.success)),this.selectedNodeTest&&this.selectedNodeTest.length>0&&this.workFlowtService.deleteManagementSite(this.selectedNodeTest).subscribe((function(t){})),this.selectedNodeTest&&this.selectedNodeTest.length>0&&this.saveManagement(this.selectedNodeTest[0].data.siteId,this.selectedNodeTest),this.selectedNodeTest=[]),this.modal.close(),this.loadAllSiteData(this.constantFilters())}},{key:"showAuditPopup",value:function(t,e){this.auditAssetStatus(e),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"auditAssetStatus",value:function(t){var e=this;this.workFlowtService.getSiteAudit(t).subscribe((function(t){t.length>0&&(e.AuditDetails=t,e.HasAuditDetails=e.AuditDetails.length>0)}))}},{key:"constantFilters",value:function(){return{first:0,rows:10,sortField:void 0,sortOrder:1,filters:"",globalFilter:""}}},{key:"bulkUpload",value:function(t){var e=this;this.formData=new FormData,this.uploadedRecords=null;var a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.workFlowtService.bulkUpload(this.formData).subscribe((function(a){t.target.value="",e.uploadedRecords=a,e.loadAllSiteData(e.constantFilters()),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.siteData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.siteData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.siteData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.siteData=e)),this.totalRecords=this.siteData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("Site","SiteId",this.restorerecord.siteId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadAllSiteData(t.lazyLoadEventData),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();ta.ctorParameters=function(){return[{type:at.a},{type:M.a},{type:Xe.a},{type:A.a},{type:u.a},{type:pe.HttpClient},{type:C.a},{type:s.ChangeDetectorRef},{type:c.Router},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:me.a},{type:m.b},{type:b.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],ta.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],ta.prototype,"sort",void 0),ta=n.b([Object(s.Component)({selector:"app-site",template:n.c(a("FCB4")).default,animations:[h.a],styles:[n.c(a("3tup")).default]})],ta);var ea=function t(e,a,n,s,i,r,o,l,d){_classCallCheck(this,t),this.warehouseId=a,this.masterCompanyId=n,this.createdBy=s,this.createdDate=i,this.updatedDate=r,this.updatedBy=o,this.masterCompany=e,this.isActive=l,this.memo=d},aa=function(){function t(e,a,n,s,i,r,o,l,d,c,u,p,m,h,v,b,g){_classCallCheck(this,t),this.manageMentService=e,this.commonService=a,this.configurations=n,this.workFlowtService1=s,this.breadCrumb=i,this.http=r,this.ataservice=o,this.changeDetectorRef=l,this.router=d,this.authService=c,this.modalService=u,this.activeModal=p,this._fb=m,this.alertService=h,this.workFlowtService=v,this.dialog=b,this.masterComapnyService=g,this.sourceWarehouse={},this.memo="",this.address1="",this.address2="",this.address3="",this.city="",this.state="",this.country="",this.postalCode="",this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.localCollection=[],this.isEditMode=!1,this.isDeleteMode=!1,this.closeCmpny=!0,this.action_name="",this.allComapnies=[],this.auditHisory=[],this.allActions=[],this.displayedColumns=["siteId","name","siteName","address1","address2","address3","city","stateOrProvince","country","postalCode","memo"],this.warehouse_Name="",this.allWareHouses=[],this.disableSaveForEdit=!1,this.allSites=[],this.allAddress=[],this.Active="Active",this.actionamecolle=[],this.disableSaveManufacturer=!1,this.AuditHistoryTitle="History of WareHouse",this.formData=null,this.uploadedRecords=null,this.wareHousedata=[],this.currentstatus="Active",this.isDeleted=!1,this.allWorkFlows=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.dataSource=new H.a,this.sourceWarehouse=new ea}return _createClass(t,[{key:"ngOnInit",value:function(){this.cols=[{field:"warehouseId",header:"Warehosue Id"},{field:"name",header:"Warehouse Name"},{field:"siteName",header:"Site Name"},{field:"address1",header:"Address Line 1"},{field:"address2",header:"Address Line 2"},{field:"address3",header:"Address Line 3"},{field:"city",header:"City"},{field:"stateOrProvince",header:"State"},{field:"country",header:"Country"},{field:"postalCode",header:"Zip Code"},{field:"memo",header:"memo"}],this.loadData(),this.loadManagementdata(),this.loadSiteData(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-warehouse",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.selectedColumns=this.cols,this.formData=new FormData}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"closethis",value:function(){this.closeCmpny=!1}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"loadAllWareHousesData",value:function(t){var e=this;this.lazyLoadEventData=t;var a=parseInt(t.first)/t.rows;this.pageIndex=a,this.pageSize=t.rows,t.first=a,this.loadingIndicator=!0,null==t.globalFilter&&(t.globalFilter="");var n=Object.assign({},t,{filters:Object(D.j)(t.filters)});this.workFlowtService.getSearchData(n).subscribe((function(t){e.originalTableData=t[0].results,e.getListByStatus(e.status?e.status:e.currentstatus)}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"constantFilters",value:function(){return{first:0,rows:10,sortField:void 0,sortOrder:1,filters:"",globalFilter:"",multiSortMeta:void 0}}},{key:"handleChange",value:function(t,e){var a=this;0==e.checked?(this.sourceWarehouse=t,this.sourceWarehouse.updatedBy=this.userName,this.Active="In Active",this.sourceWarehouse.isActive,this.workFlowtService.updateWarehouse(this.sourceWarehouse).subscribe((function(t){a.getListByStatus(a.currentstatus),a.alertService.showMessage("Success","Action was Updated successfully",g.d.success)}))):(this.sourceWarehouse=t,this.sourceWarehouse.updatedBy=this.userName,this.Active="Active",this.sourceWarehouse.isActive,this.workFlowtService.updateWarehouse(this.sourceWarehouse).subscribe((function(t){a.getListByStatus(a.currentstatus),a.saveCompleted(a.sourceWarehouse)}),(function(t){return a.saveFailedHelper(t)}))),this.loadAllWareHousesData(this.constantFilters())}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=Warehouse&fileName=Warehouse.xlsx";window.location.assign(t)}},{key:"siteValueChange",value:function(t){var e=this;this.showAddress=!0,this.showManagement=!0,console.log(this.sourceWarehouse.siteId),this.workFlowtService.getAddressDate(this.sourceWarehouse.siteId).subscribe((function(t){return e.addressDataArray(t[0])}),(function(t){return e.onDataLoadFailed(t)})),this.workFlowtService.getManagementSiteData(this.sourceWarehouse.siteId).subscribe((function(t){e.localSiteManagementWarehouseCollection=t,e.gridData2=e.makeNestedObj1(e.localSiteManagementWarehouseCollection,e.allManagemtninfo,null),e.selectedNodeTest=e.gridData2}))}},{key:"selectedManagementSiteData",value:function(t){}},{key:"addressDataArray",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,t&&(this.allAddress=t,this.address1=t.address1,this.address2=t.address2,this.address3=t.address3,this.city=t.city,this.country=t.country,this.postalCode=t.postalCode,this.stateOrProvince=t.stateOrProvince)}},{key:"loadData",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.workFlowtService.getWarehouseList().subscribe((function(e){return t.onDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)})),this.selectedColumns=this.cols}},{key:"loadSiteData",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.workFlowtService1.getSiteList().subscribe((function(e){return t.onSaiteDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"onSaiteDataLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allSites=t}},{key:"loadManagementdata",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.manageMentService.getManagemententity().subscribe((function(e){return t.onManagemtntdataLoad(e[0])}),(function(e){return t.onDataLoadFailed(e)})),this.selectedColumns=this.cols}},{key:"onManagemtntdataLoad",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allManagemtninfo=t,this.allManagemtninfo&&(this.gridData=this.makeNestedObj(this.allManagemtninfo,null)),this.cols1=[{field:"code",header:"Code"},{field:"name",header:"Name"},{field:"description",header:"Description"}]}},{key:"makeNestedObj",value:function(t,e){var a=[];for(var n in t)if(t[n].parentId==e){var s=this.makeNestedObj(t,t[n].managementStructureId);t[n]={data:t[n]},s.length&&(t[n].children=s),a.push(t[n])}return a}},{key:"makeNestedObj1",value:function(t,e,a){var n=[];if(t)for(var s=0;s<t.length;s++)for(var i=0;i<e.length;i++)if(e[i].data){if(t[s].managementStructureId==e[i].data.managementStructureId){e[i].data.managementWarehouseId=t[s].managementWarehouseId,e[i].data.warehouseId=t[s].warehouseId,n.push(e[i]),console.log(e[i].data);break}}else if(t[s].managementStructureId==e[i].managementStructureId){e[i].data.managementWarehouseId=t[s].managementWarehouseId,e[i].data.warehouseId=t[s].warehouseId,n.push(e[i]),console.log(e[i].data);break}return n}},{key:"saveManagement",value:function(t,e){for(var a=this,n=0;n<e.length;n++)null!=e[n].data.managementStructureId&&(e[n].data.warehouseId=t,this.workFlowtService.newManagementWareHouse(e[n].data).subscribe((function(t){a.localManagementWarehouseCollection=t})));this.loadAllWareHousesData(this.constantFilters())}},{key:"nodeSelect",value:function(t){console.log("selected node",t,t.node)}},{key:"Manufacturerdescription",value:function(t){if(this.allWareHouses)for(var e=0;e<this.actionamecolle.length;e++)t==this.actionamecolle[e][0].warehouseName&&(this.disableSaveManufacturer=!0,this.selectedWareHouse=t)}},{key:"ManufacturerHandler",value:function(t){if(""!=t.target.value){var e=t.target.value.toLowerCase();this.selectedWareHouse&&(e==this.selectedWareHouse.toLowerCase()?this.disableSaveManufacturer=!0:this.disableSaveManufacturer=!1)}}},{key:"filtermanufacturer",value:function(t){this.localCollection=[];for(var e=0;e<this.allWareHouses.length;e++){var a=this.allWareHouses[e].name;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(this.actionamecolle.push([{warehouseId:this.allWareHouses[e].warehouseId,warehouseName:a}]),this.localCollection.push(a))}}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onDataLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allWareHouses=t,this.totalRecords=t.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"open",value:function(t){this.isEditMode=!1,this.isDeleteMode=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceWarehouse=new ea,this.loadManagementdata(),this.selectedNodeTest=[],this.disableSaveManufacturer=!1,this.address1="",this.address2="",this.address3="",this.city="",this.country="",this.postalCode="",this.stateOrProvince="",this.name="",this.name="",this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceWarehouse=e,this.warehouse_Name=e.name,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openEdit",value:function(t,e){var a=this;this.isEditMode=!0,this.isSaving=!0,this.loadMasterCompanies(),this.disableSaveForEdit=!0,this.showManagement=!0,this.disableSaveManufacturer=!1,this.sourceWarehouse=e,e.siteId&&this.siteValueChange(e.siteId),this.workFlowtService.getManagementWarehouseEditData(this.sourceWarehouse.warehouseId).subscribe((function(t){a.localManagementWarehouseCollection=t,a.localManagementWarehouseCollection&&(a.gridData?a.gridData1=a.makeNestedObj1(a.localManagementWarehouseCollection,a.allManagemtninfo,null):a.gridData=a.makeNestedObj(a.allManagemtninfo,null)),a.selectedNodeTest=a.gridData1})),this.name=this.sourceWarehouse.name,this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHist",value:function(t,e){var a=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.sourceWarehouse=e,this.workFlowtService.historyWarehouse(this.sourceWarehouse.warehouseId).subscribe((function(e){return a.onHistoryLoadSuccessful(e[0],t)}),(function(t){return a.saveFailedHelper(t)}))}},{key:"openView",value:function(t,e){this.sourceWarehouse=e,this.warehouseId=e.WarehouseId,this.warehouse_Name=e.name,this.siteName=e.siteName,this.address1=e.address1,this.address2=e.address2,this.address3=e.address3,this.city=e.city,this.stateOrProvince=e.stateOrProvince,this.country=e.country,this.postalCode=e.postalCode,this.memo=e.memo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHelpText",value:function(t){this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceWarehouse.updatedBy=this.userName,this.workFlowtService.deleteWarehouse(this.sourceWarehouse.warehouseId).subscribe((function(){t.alertService.showMessage("Success","Deleted warehouse successfully",g.d.success),t.modal.close(),t.loadAllWareHousesData(t.constantFilters())}))}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHisory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.loadAllWareHousesData(this.constantFilters())}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadAllWareHousesData(this.constantFilters())}},{key:"dismissModel",value:function(){this.showAddress=!1,this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"savesuccessCompleted",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadAllWareHousesData(this.constantFilters())}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured while saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"SaveandEditWarehouse",value:function(){var t=this;this.isSaving=!0,0==this.isEditMode?(this.showAddress=!1,this.showManagement=!1,this.sourceWarehouse.createdBy=this.userName,this.sourceWarehouse.updatedBy=this.userName,this.sourceWarehouse.masterCompanyId=1,this.sourceWarehouse.name=this.name,this.workFlowtService.newWarehouse(this.sourceWarehouse).subscribe((function(e){t.alertService.showMessage("Success","Action was created successfully",g.d.success),null!=e&&t.saveManagement(e.warehouseId,t.selectedNodeTest)})),this.loadAllWareHousesData(this.constantFilters())):(this.showAddress=!0,this.showManagement=!0,this.sourceWarehouse.updatedBy=this.userName,this.sourceWarehouse.name=this.name,this.sourceWarehouse.masterCompanyId=1,this.workFlowtService.updateWarehouse(this.sourceWarehouse).subscribe((function(e){t.alertService.showMessage("Success","Action was edited successfully",g.d.success)})),this.selectedNodeTest&&this.selectedNodeTest.length>0&&this.workFlowtService.deleteManagementWarehouse(this.selectedNodeTest).subscribe((function(t){})),this.selectedNodeTest&&this.selectedNodeTest.length>0&&this.saveManagement(this.selectedNodeTest[0].data.warehouseId,this.selectedNodeTest),this.selectedNodeTest=[]),this.modal.close(),this.loadAllWareHousesData(this.constantFilters())}},{key:"showAuditPopup",value:function(t,e){this.auditWarehouse(e),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"auditWarehouse",value:function(t){var e=this;this.AuditDetails=[],this.HasAuditDetails=this.AuditDetails.length>0,this.workFlowtService.getWarehouseAudit(t).subscribe((function(t){t.length>0&&(e.AuditDetails=t[0].result,e.HasAuditDetails=e.AuditDetails.length>0)}))}},{key:"bulkUpload",value:function(t){var e=this;this.formData=new FormData,this.uploadedRecords=null;var a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.workFlowtService.bulkUpload(this.formData).subscribe((function(a){t.target.value="",e.uploadedRecords=a,e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success),e.loadAllWareHousesData(e.constantFilters())})))}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.wareHousedata=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.wareHousedata=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.wareHousedata=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.wareHousedata=e)),this.totalRecords=this.wareHousedata.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("Warehouse","WarehouseId",this.restorerecord.warehouseId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadAllWareHousesData(t.lazyLoadEventData),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"openEdits",value:function(t){}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();aa.ctorParameters=function(){return[{type:at.a},{type:M.a},{type:A.a},{type:me.a},{type:u.a},{type:pe.HttpClient},{type:C.a},{type:s.ChangeDetectorRef},{type:c.Router},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:he.a},{type:m.b},{type:b.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],aa.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],aa.prototype,"sort",void 0),aa=n.b([Object(s.Component)({selector:"app-warehouse",template:n.c(a("XlmF")).default,animations:[h.a],styles:[n.c(a("V3Xh")).default]})],aa);var na=a("++Ae"),sa=function(){function t(e,a,n,s,i,r,o){_classCallCheck(this,t),this.breadCrumb=e,this.modalService=a,this.commonService=n,this.configurations=s,this.authService=i,this.alertService=r,this.manufacturerService=o,this.ManufactureData=[],this.newManufacturer={name:"",masterCompanyId:1,isActive:!0,isDelete:!1,comments:""},this.addnewManufacturer=Object.assign({},this.newManufacturer),this.disableSaveForUOM=!1,this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.manufacturerHeader=[{field:"name",header:"Manfacturer Name"},{field:"comments",header:"Memo"}],this.selectedColumns=this.manufacturerHeader,this.formData=new FormData,this.auditHistory=[],this.disableSaveForShortName=!1,this.currentstatus="Active",this.isDeleted=!1,this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getManufacturerList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-manufacturer",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getManufacturerList()}},{key:"getmemo",value:function(t){this.disableSaveForUOM=!1}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"constantFilters",value:function(){return{first:0,rows:10,sortField:void 0,sortOrder:1,filters:"",globalFilter:"",multiSortMeta:void 0}}},{key:"loadAllManufacturerData",value:function(t){var e=this;this.lazyLoadEventData=t;var a=parseInt(t.first)/t.rows;this.pageIndex=a,this.pageSize=t.rows,t.first=a,this.loadingIndicator=!0,null==t.globalFilter&&(t.globalFilter="");var n=Object.assign({},t,{filters:Object(D.j)(t.filters)});this.manufacturerService.getSearchData(n).subscribe((function(t){e.ManufactureData=t[0].results,e.totalRecords=t[0].totalRecordsCount,e.totalPages=Math.ceil(e.totalRecords/e.pageSize)}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"onDataLoadFailed",value:function(t){}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;a.length>0&&(this.formData.append("file",a[0]),this.manufacturerService.ManufacturerFileUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getManufacturerList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=Manufacturer&fileName=manufacturer.xlsx";window.location.assign(t)}},{key:"onBlur",value:function(t){var e=t.target.value;this.disableSaveForShortName=!1;for(var a=0;a<this.ManufactureData.length;a++){var n=this.ManufactureData[a].name,s=this.ManufactureData[a].ManufactureId;if(n.toLowerCase()==e.toLowerCase()){!this.isEdit||this.isEdit||s!=this.selectedRecordForEdit.ManufactureId?this.disableSaveForShortName=!0:this.disableSaveForShortName=!1;break}}}},{key:"getManufacturerList",value:function(){var t=this;this.manufacturerService.getWorkFlows().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkManufacturerExists",value:function(t,e){Object(D.m)(t,e,this.ManufactureData,this.selectedRecordForEdit).length>0?this.disableSaveForShortName=!0:this.disableSaveForShortName=!1}},{key:"filterDescription",value:function(t){this.ManufactList=this.ManufactureData;var e=_toConsumableArray(this.ManufactureData.filter((function(e){return e.name.toLowerCase().includes(t.query.toLowerCase())})));this.ManufactList=e}},{key:"selectedManufcaturer",value:function(t){var e=Object(D.k)("name",t,this.selectedRecordForEdit);this.disableSaveForShortName=!e}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"saveManufacturer",value:function(){var t=this,e=Object.assign({},this.addnewManufacturer,{createdBy:this.userName,updatedBy:this.userName,name:Object(D.a)("name",this.addnewManufacturer.name)});this.isEdit?this.manufacturerService.updateManufacturer(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetManufacuterForm(),t.getManufacturerList(),t.alertService.showMessage("Success","Updated   Manufacturer  Successfully  ",g.d.success)})):this.manufacturerService.newManufacturer(e).subscribe((function(){t.resetManufacuterForm(),t.getManufacturerList(),t.alertService.showMessage("Success","Added  New Manufacturer Successfully  ",g.d.success)}))}},{key:"resetManufacuterForm",value:function(){this.isEdit=!1,this.disableSaveForShortName=!1,this.selectedRecordForEdit=void 0,this.addnewManufacturer=Object.assign({},this.newManufacturer)}},{key:"editManufacturer",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveForUOM=!0,this.disableSaveForShortName=!1,this.addnewManufacturer=Object.assign({},t,{name:Object(D.e)("name",t.name,this.ManufactureData)}),this.selectedRecordForEdit=Object.assign({},this.addnewManufacturer)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.manufacturerService.updateManufacturer(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.manufacturerService.deleteManufacturer(this.selectedRowforDelete.manufacturerId).subscribe((function(){e.getManufacturerList(),e.alertService.showMessage("Success","Deleted Manufacturer Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.manufacturerService.getManufacturerAuditDetails(t.manufacturerId).subscribe((function(t){console.log(t),e.auditHistory=t}))}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.ManufactureData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.ManufactureData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.ManufactureData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.ManufactureData=e)),this.totalRecords=this.ManufactureData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("Manufacturer","ManufacturerId",this.restorerecord.manufacturerId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadAllManufacturerData(t.lazyLoadEventData),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();sa.ctorParameters=function(){return[{type:u.a},{type:w.c},{type:M.a},{type:A.a},{type:f.a},{type:g.b},{type:na.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],sa.prototype,"modal",void 0),sa=n.b([Object(s.Component)({selector:"app-manufacturer",template:n.c(a("O3AI")).default,animations:[h.a],styles:[n.c(a("Nagp")).default]})],sa);var ia=a("FL2z"),ra=function t(e,a,n,s,i,r,o,l,d,c,u,p){_classCallCheck(this,t),this.VendorCapabilityId=a,this.CapabilityId=n,this.CapabilityName=s,this.masterCompanyId=i,this.createdBy=r,this.createdDate=o,this.updatedDate=l,this.updatedBy=d,this.masterCompany=e,this.isActive=c,this.isDelete=u,this.memo=p},oa=function(){function t(e,a,n,s,i,r,o,l,d){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.activeModal=s,this._fb=i,this.alertService=r,this.workFlowtService=o,this.dialog=l,this.masterComapnyService=d,this.capabilityViewfield={},this.displayedColumns=["capabilityName","capabilityId","createdDate","companyName"],this.capabilityNamecolle=[],this.allComapnies=[],this.sourcevendorcapabilities={},this.title="Create",this.isEditMode=!1,this.isDeleteMode=!1,this.localCollection=[],this.Active="Active",this.disableSavevendorcapabilities=!1,this.displayedColumns.push("action"),this.dataSource=new H.a,this.sourcevendorcapabilities=new ra}return _createClass(t,[{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"ngOnInit",value:function(){this.loadData(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-vendorcapabilities",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"loadData",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.workFlowtService.getWorkFlows().subscribe((function(e){return t.onDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)})),this.cols=[{field:"capabilityName",header:"Capability Name"},{field:"createdBy",header:"Created By"},{field:"updatedBy",header:"Updated By"}],this.selectedColumns=this.cols}},{key:"onDataLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allvendorcapabilities=t}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"open",value:function(t){this.disableSavevendorcapabilities=!1,this.isEditMode=!1,this.isDeleteMode=!1,this.disableSave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourcevendorcapabilities=new ra,this.capabilityName="",this.sourcevendorcapabilities.isActive=!0,this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourcevendorcapabilities=e,this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"VendorcapabilitiesHandler",value:function(t){if(""!=t.target.value){var e=t.target.value.toLowerCase();this.selectedvendorcapabilities&&(e==this.selectedvendorcapabilities.toLowerCase()?this.disableSavevendorcapabilities=!0:this.disableSavevendorcapabilities=!1)}}},{key:"Vendorcapabilitiesdescription",value:function(t){if(this.allvendorcapabilities)for(var e=0;e<this.allvendorcapabilities.length;e++)t==this.allvendorcapabilities[e].capabilityName&&(this.sourcevendorcapabilities.capabilityName=this.allvendorcapabilities[e].capabilityName,this.disableSavevendorcapabilities=!0,this.selectedvendorcapabilities=t)}},{key:"editItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,0==this.isEditMode?(this.sourcevendorcapabilities.createdBy=this.userName,this.sourcevendorcapabilities.updatedBy=this.userName,this.sourcevendorcapabilities.masterCompanyId=1,this.workFlowtService.newvendorcapabilities(this.sourcevendorcapabilities).subscribe((function(e){return t.saveSuccessHelper(e)}),(function(e){return t.saveFailedHelper(e)}))):(this.sourcevendorcapabilities.updatedBy=this.userName,this.sourcevendorcapabilities.masterCompanyId=1,this.workFlowtService.updatevendorcapabilities(this.sourcevendorcapabilities).subscribe((function(e){return t.saveCompleted(t.sourcevendorcapabilities)}),(function(e){return t.saveFailedHelper(e)}))),this.modal.close()}},{key:"filtervendor",value:function(t){if(this.localCollection=[],this.allvendorcapabilities)for(var e=0;e<this.allvendorcapabilities.length;e++){var a=this.allvendorcapabilities[e].capabilityName;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(this.capabilityNamecolle.push([{vendorCapabilityId:this.allvendorcapabilities[e].vendorCapabilityId,capabilityName:a}]),this.localCollection.push(a))}}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData()}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.loadData()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"openEdit",value:function(t,e){this.disableSavevendorcapabilities=!1,this.isEditMode=!0,this.isSaving=!0,this.loadMasterCompanies(),this.sourcevendorcapabilities=e,this.capabilityName=this.sourcevendorcapabilities.capabilityName,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHist",value:function(t,e){var a=this;this.sourcevendorcapabilities=e,this.workFlowtService.historyvendorcapabilities(this.sourcevendorcapabilities.vendorCapabilityId).subscribe((function(e){return a.onHistoryLoadSuccessful(e[0],t)}),(function(t){return a.saveFailedHelper(t)}))}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourcevendorcapabilities.updatedBy=this.userName,this.workFlowtService.deletevendorcapabilities(this.sourcevendorcapabilities.vendorCapabilityId).subscribe((function(e){return t.saveCompleted(t.sourcevendorcapabilities)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"handleChange",value:function(t,e){var a=this;0==e.checked?(this.sourcevendorcapabilities=t,this.sourcevendorcapabilities.updatedBy=this.userName,this.Active="In Active",this.sourcevendorcapabilities.isActive,this.workFlowtService.updatevendorcapabilities(this.sourcevendorcapabilities).subscribe((function(t){return a.saveCompleted(a.sourcevendorcapabilities)}),(function(t){return a.saveFailedHelper(t)}))):(this.sourcevendorcapabilities=t,this.sourcevendorcapabilities.updatedBy=this.userName,this.Active="Active",this.sourcevendorcapabilities.isActive,this.workFlowtService.updatevendorcapabilities(this.sourcevendorcapabilities).subscribe((function(t){return a.saveCompleted(a.sourcevendorcapabilities)}),(function(t){return a.saveFailedHelper(t)})))}},{key:"openView",value:function(t,e){this.sourcevendorcapabilities=e,this.capabilityViewfield.capabilityName=e.capabilityName,this.capabilityViewfield.capabilityId=e.capabilityId,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"showAuditPopup",value:function(t,e){this.getVendorCapabilityAuditDetails(e),this.modal=this.modalService.open(t,{size:"sm"})}},{key:"getVendorCapabilityAuditDetails",value:function(t){var e=this;this.workFlowtService.getVendorCapabilityAuditDetails(t).subscribe((function(t){t.length>0&&(e.AuditDetails=t,e.AuditDetails[0].ColumnsToAvoid=["vendorCapabiliyAuditId","vendorCapabilityId","capabilityId","masterCompanyId","createdBy","createdDate","updatedDate"])}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();oa.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:ia.a},{type:m.b},{type:b.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],oa.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],oa.prototype,"sort",void 0),oa=n.b([Object(s.Component)({selector:"app-vendorcapabilities",template:n.c(a("jkiE")).default,animations:[h.a],styles:[n.c(a("e8c5")).default]})],oa);var la=a("jF51"),da=function t(e,a,n,s,i,r,o,l,d,c,u,p,m,h,v,b,g,f,y,w){_classCallCheck(this,t),this.LaborOverloadCostId=a,this.UseIndTechLaborRate=s,this.UseAvgRateOfAllTech=r,this.AssignHoursBySpecificAction=p,this.AssignTotalHoursToWO=m,this.AsPercentOfTechHourlyRate=h,this.FlatAmtPerHour=o,this.FlatAmtPerWO=c,this.masterCompanyId=u,this.FLATAMOUNTPERWORKORDER=l,this.FLATAMOUNTPERHOUR=d,this.AsPercentOFTECHNICIANMECHANICHOURLYRATE=i,this.AVERAGERATEOFALLTECHNICIANMECHANIC=n,this.createdBy=v,this.createdDate=b,this.updatedDate=g,this.updatedBy=f,this.masterCompany=e,this.isActive=y,this.memo=w},ca=function(){function t(e,a,n,s,i,r,o,l,d,c){_classCallCheck(this,t),this.labcost=e,this.breadCrumb=a,this.authService=n,this.modalService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.workFlowtService=l,this.dialog=d,this.masterComapnyService=c,this.actionamecolle=[],this.allLaberOverheadCost=[],this.allComapnies=[],this.title="Create",this.isEditMode=!1,this.isDeleteMode=!1,this.localCollection=[],this.Active="Active",this.sourceLaborOverheadCost={},this.showAsPercentOfTechHourlyRate=!1,this.showUseIndTechLaborRate=!1,this.showFlatAmtPerHour=!1,this.showFlatAmtPerWO=!1,this.showUseAvgRateTechByAction=!1,this.showUseAvgRateOfAllTech=!1,this.allWorkFlows=[],this.dataSource=new H.a,this.sourceLaborOverheadCost=new da}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData(),this.cols=[{field:"averagerateofalltechnicianmechanic",header:"USE AVERAGE RATE OF ALL TECHNICIAN/MECHANIC"},{field:"flatamountperworkorder",header:"Flat Amount Per Work order"},{field:"createdBy",header:"Created By"},{field:"updatedBy",header:"Updated By"},{field:"createdDate",header:"Created Date"},{field:"updatedDate",header:"Updated Date"}],this.breadCrumb.currentUrl="/singlepages/singlepages/app-labor-and-overhead-cost-setup",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.selectedColumns=this.cols}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"showinputs",value:function(t){"AsPercentOfTechHourlyRate"==t?(this.showAsPercentOfTechHourlyRate=!0,this.showFlatAmtPerHour=!1,this.showFlatAmtPerWO=!1):"FlatAmtPerHour"==t?(this.showFlatAmtPerHour=!0,this.showAsPercentOfTechHourlyRate=!1,this.showFlatAmtPerWO=!1):"FlatAmtPerWO"==t&&(this.showFlatAmtPerWO=!0,this.showFlatAmtPerHour=!1,this.showAsPercentOfTechHourlyRate=!1)}},{key:"enableinputs",value:function(t){"UseIndTechLaborRate"==t?(this.showUseIndTechLaborRate=!0,this.showUseAvgRateOfAllTech=!1):"UseAvgRateOfAllTech"==t&&(this.showUseIndTechLaborRate=!1,this.showUseAvgRateOfAllTech=!0)}},{key:"applyHours",value:function(t){}},{key:"loadData",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.workFlowtService.getWorkFlows().subscribe((function(e){return t.onDataLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onDataLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allLaberOverheadCost=t}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"open",value:function(t){this.isEditMode=!1,this.isDeleteMode=!1,this.disableSave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceLaborOverheadCost=new da,this.LaborOverheadCostName="",this.sourceLaborOverheadCost.isActive=!0,this.modal=this.modalService.open(t,{size:"lg"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceLaborOverheadCost=e,this.modal=this.modalService.open(t,{size:"lg"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openEdit",value:function(t,e){this.isEditMode=!0,this.isSaving=!0,this.loadMasterCompanies(),this.sourceLaborOverheadCost=e,this.LaborOverheadCostName=this.sourceLaborOverheadCost.description,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"lg"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openHist",value:function(t,e){var a=this;this.sourceLaborOverheadCost=e,this.workFlowtService.historyLaborandOverheadcost(this.sourceLaborOverheadCost.laborOverloadCostId).subscribe((function(e){return a.onHistoryLoadSuccessful(e[0],t)}),(function(t){return a.saveFailedHelper(t)}))}},{key:"handleChange",value:function(t,e){var a=this;0==e.checked?(this.sourceLaborOverheadCost=t,this.sourceLaborOverheadCost.updatedBy=this.userName,this.Active="In Active",this.sourceLaborOverheadCost.isActive,this.workFlowtService.updateLaborandOverheadcost(this.sourceLaborOverheadCost).subscribe((function(t){return a.saveCompleted(a.sourceLaborOverheadCost)}),(function(t){return a.saveFailedHelper(t)}))):(this.sourceLaborOverheadCost=t,this.sourceLaborOverheadCost.updatedBy=this.userName,this.Active="Active",this.sourceLaborOverheadCost.isActive,this.workFlowtService.updateLaborandOverheadcost(this.sourceLaborOverheadCost).subscribe((function(t){return a.saveCompleted(a.sourceLaborOverheadCost)}),(function(t){return a.saveFailedHelper(t)})))}},{key:"eventHandler",value:function(t){var e=t.target.value.toLowerCase();if(this.selectedActionName)e==this.selectedActionName.toLowerCase()?this.disableSave=!0:this.disableSave=!1;else for(var a=0;a<this.actionamecolle.length;a++)e==this.actionamecolle[a][0].LaborOverheadCostName.toLowerCase()&&(this.disableSave=!0,this.selectedActionName=t)}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg"}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"editItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,0==this.isEditMode?(this.sourceLaborOverheadCost.createdBy=this.userName,this.sourceLaborOverheadCost.updatedBy=this.userName,this.sourceLaborOverheadCost.masterCompanyId=1,this.workFlowtService.newLaborandOverheadcost(this.sourceLaborOverheadCost).subscribe((function(e){return t.saveSuccessHelper(e)}),(function(e){return t.saveFailedHelper(e)}))):(this.sourceLaborOverheadCost.updatedBy=this.userName,this.sourceLaborOverheadCost.masterCompanyId=1,this.workFlowtService.updateLaborandOverheadcost(this.sourceLaborOverheadCost).subscribe((function(e){return t.saveCompleted(t.sourceLaborOverheadCost)}),(function(e){return t.saveFailedHelper(e)}))),this.modal.close()}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceLaborOverheadCost.updatedBy=this.userName,this.workFlowtService.deleteLaborandOverheadcost(this.sourceLaborOverheadCost.laborOverloadCostId).subscribe((function(e){return t.saveCompleted(t.sourceLaborOverheadCost)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.loadData()}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"getDismissReason",value:function(t){return t===w.a.ESC?"by pressing ESC":t===w.a.BACKDROP_CLICK?"by clicking on a backdrop":"with: "+t}},{key:"showAuditPopup",value:function(t,e){this.getHistoryLaborandOverheadCostAuditDetails(e),this.modal=this.modalService.open(t,{size:"sm"})}},{key:"getHistoryLaborandOverheadCostAuditDetails",value:function(t){var e=this;this.AuditDetails=[],this.workFlowtService.getHistoryLaborandOverheadCostAuditDetails(t).subscribe((function(t){t.length>0&&(e.AuditDetails=t,e.AuditDetails[0].ColumnsToAvoid=["laborOverloadCostAuditId","laborOverloadCostId","masterCompanyId","createdBy","createdDate","updatedDate"])}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();ca.ctorParameters=function(){return[{type:la.a},{type:u.a},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:la.a},{type:m.b},{type:b.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],ca.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],ca.prototype,"sort",void 0),ca=n.b([Object(s.Component)({selector:"app-laber-and-overhead-cost-setup",template:n.c(a("P8CL")).default,animations:[h.a],styles:[n.c(a("qRqs")).default]})],ca);var ua=a("Ldou"),pa=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.commonService=n,this.modalService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.certificationService=l,this.dialog=d,this.masterComapnyService=c,this.configurations=u,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"description",header:"Certification Type"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveCertification=!1,this.disableSaveCertificationMsg=!1,this.new={description:"",masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.currentstatus="Active",this.existingRecordsResponse=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"OnInit",value:function(){}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-certification-type",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getmemo",value:function(t){this.disableSaveCertificationMsg=!1,this.disableSaveCertification=!1}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"columnsChanges",value:function(){}},{key:"customExcelUpload",value:function(){}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=CertificationType&fileName=certificationType.xlsx";window.location.assign(t)}},{key:"getList",value:function(){var t=this;this.certificationService.getWorkFlows().subscribe((function(e){t.originalTableData=e[0],console.log(t.originalTableData),t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkCertificationName",value:function(t,e){var a=Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit);console.log(a),a.length>0?(this.disableSaveCertification=!0,this.disableSaveCertificationMsg=!0):(this.disableSaveCertification=!1,this.disableSaveCertificationMsg=!1)}},{key:"filterCertificationName",value:function(t){this.certificationList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.certificationList=e}},{key:"selectedCertificationName",value:function(t){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSaveCertification=!e,this.disableSaveCertificationMsg=!e}},{key:"onBlur",value:function(t){var e=t.target.value;this.disableSaveCertificationMsg=!1;for(var a=0;a<this.originalData.length;a++){var n=this.originalData[a].description,s=this.originalData[a].taxTypeId;if(n.toLowerCase()==e.toLowerCase()){!this.isEdit||this.isEdit?(this.disableSaveCertification=!0,this.disableSaveCertificationMsg=!0):s!=this.selectedRecordForEdit.taxTypeId?(this.disableSaveCertification=!1,this.disableSaveCertificationMsg=!0):(this.disableSaveCertification=!1,this.disableSaveCertificationMsg=!1),console.log("description :",n);break}}}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,description:Object(D.a)("description",this.addNew.description)});this.isEdit?this.certificationService.updateCertificationtype(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Updated  Certification Successfully  ",g.d.success)})):this.certificationService.newCertificationtype(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added New Certification  Successfully  ",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.disableSaveCertificationMsg=!1,this.selectedRecordForEdit=void 0,this.addNew=Object.assign({},this.new)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveCertification=!0,this.disableSaveCertificationMsg=!1,this.addNew=Object.assign({},t,{description:Object(D.d)("employeeLicenseTypeId",t.employeeLicenseTypeId,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.certificationService.updateCertificationtype(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.certificationService.deleteCertificationtype(this.selectedRowforDelete.employeeLicenseTypeId).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted  Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("EmployeeLicenseType","EmployeeLicenseTypeId",this.restorerecord.employeeLicenseTypeId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();pa.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:M.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:ua.a},{type:m.b},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],pa.prototype,"table",void 0),pa=n.b([Object(s.Component)({selector:"app-certification-type",template:n.c(a("Jjce")).default,animations:[h.a],styles:[n.c(a("oikv")).default]})],pa);var ma=function t(e,a,n,s,i,r,o,l,d,c,u,p){_classCallCheck(this,t),this.assetStatusId=a,this.code=n,this.name=s,this.memo=i,this.masterCompanyId=r,this.createdBy=o,this.updatedBy=l,this.createdDate=d,this.updatedDate=c,this.isDelete=u,this.isActive=p},ha=a("x2lD"),va=function(){function t(e,a,n,s,i,r,o,l){_classCallCheck(this,t),this.alertService=e,this.commonService=a,this.assetStatusService=n,this.modalService=s,this.authService=i,this.breadCrumb=r,this.masterComapnyService=o,this.configurations=l,this.assetStatusList=[],this.formData=new FormData,this.auditHisory=[],this.isDeleteMode=!1,this.isEditMode=!1,this.display=!1,this.modelValue=!1,this.allComapnies=[],this.code="",this.name="",this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.code_Name="",this.updatedDate="",this.localCollection=[],this.disableSave=!1,this.assetStatusId=0,this.isDelete=!1,this.codeName="",this.allreasn=[],this.auditHistory=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.displayedColumns=["Code","Name","Memo"],this.disableSaveForEdit=!1,this.currentstatus="Active",this.allWorkFlows=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.displayedColumns.push("action"),this.dataSource=new H.a,this.sourceAction=new ma}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData(),this.breadCrumb.currentUrl="/singlepages/singlepages/asset-status",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(){var t=this;this.assetStatusService.getAll().subscribe((function(e){t.originalTableData=e[0].columnData,t.getListByStatus(t.status?t.status:t.currentstatus),t.allunitData=e[0].columHeaders,t.cols=[console.log(t.allunitData),t.selectedColumns=t.allunitData],t.selectedData=t.selectedColumns}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"validateRecordExistsOrNot",value:function(t,e,a){if(console.log(t,e,a),!(""===t&&void 0===t||""===e&&void 0===e||void 0===a))return a.filter((function(a){return a[t].toLowerCase()===e.toLowerCase()}))}},{key:"eventHandler",value:function(t){var e=t.target.value.toLowerCase();this.selectedreason&&(e==this.selectedreason.toLowerCase()?this.disableSave=!0:this.disableSave=!1)}},{key:"partnmId",value:function(t){for(var e=0;e<this.allreasn.length;e++)t==this.allreasn[e][0].codeName&&(this.disableSave=!0,this.selectedreason=t)}},{key:"filterAssetStatus",value:function(t){this.localCollection=[];for(var e=0;e<this.assetStatusList.length;e++){var a=this.assetStatusList[e].code;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(console.log(a),this.allreasn.push([{assetStatusId:this.assetStatusList[e].assetStatusId,codeName:a}]),this.localCollection.push(a))}}},{key:"resetdepriciationmethod",value:function(){this.updateMode=!1,this.currentAssetStatus=new ma}},{key:"open",value:function(t){this.isDeleteMode=!1,this.isEditMode=!1,this.disableSave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=new ma,this.sourceAction.isActive=!0,this.codeName="",this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"openEdit",value:function(t,e){this.isEditMode=!0,this.disableSave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=e,this.disableSaveForEdit=!0,this.codeName=e.code,this.assetStatusId=this.assetStatusId,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"SaveandEditAssetStatus",value:function(){var t=this;this.isSaving=!0,console.log(this);var e={createdBy:this.userName,updatedBy:this.userName,Code:this.codeName,Name:this.sourceAction.name,Memo:this.sourceAction.memo,assetStatusId:this.sourceAction.assetStatusId,IsActive:this.sourceAction.isActive,IsDelete:this.isDelete,masterCompanyId:1};0==this.isEditMode?this.assetStatusService.add(e).subscribe((function(e){return t.saveSuccessHelper(e)}),(function(e){return t.saveFailedHelper(e)})):(e.AssetDisposalTypeId=this.sourceAction.assetStatusId,this.assetStatusService.update(e).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)}))),this.modal.close()}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.assetStatusService.remove(this.sourceAction.assetStatusId).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData(),this.alertService.stopLoadingMessage()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDelete?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDelete=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.loadData()}},{key:"handleChange",value:function(t,e){var a=this,n={createdBy:this.userName,updatedBy:this.userName,Code:t.code,Name:t.name,Memo:t.memo,isActive:t.isActive,IsDelete:!1,masterCompanyId:1,assetStatusId:t.assetStatusId};0==e.checked?(this.Active="In Active",this.assetStatusService.update(n).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)}))):(this.Active="Active",this.assetStatusService.update(n).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)})))}},{key:"openView",value:function(t,e){console.log(t),this.sourceAction=e,this.code=e.code,this.name=e.name,this.memo=e.memo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceAction=e,this.code_Name=e.code,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"resetAddAssetStatus",value:function(){this.currentAssetStatus=new ma}},{key:"resetUpdateAssetStatus",value:function(){this.assetStatusToUpdate=new ma}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"getAuditHistoryById",value:function(t){var e=this;this.assetStatusService.getAssetAudit(t.assetStatusId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=AssetStatus&fileName=AssetStatus.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.assetStatusService.AssetStatusCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getAssetStatusList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getAssetStatusList",value:function(){this.loadData()}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.assetStatusList=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.assetStatusList=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.assetStatusList=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.assetStatusList=e)),this.totalRecords=this.assetStatusList.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("AssetStatus","AssetStatusId",this.restorerecord.assetStatusId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();va.ctorParameters=function(){return[{type:g.b},{type:M.a},{type:ha.a},{type:w.c},{type:f.a},{type:u.a},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],va.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],va.prototype,"sort",void 0),va=n.b([Object(s.Component)({selector:"asset-status",template:n.c(a("aCZK")).default,animations:[h.a],styles:[n.c(a("fjO5")).default]})],va);var ba=a("+rfH"),ga=a("t4m1"),fa=function(){function t(e,a,n,s,i,r,o,l){_classCallCheck(this,t),this.alertService=e,this.commonService=a,this.assetLocationService=n,this.modalService=s,this.authService=i,this.breadCrumb=r,this.masterComapnyService=o,this.configurations=l,this.assetLocationList=[],this.formData=new FormData,this.auditHisory=[],this.isDeleteMode=!1,this.isEditMode=!1,this.display=!1,this.modelValue=!1,this.allComapnies=[],this.code="",this.name="",this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.code_Name="",this.updatedDate="",this.localCollection=[],this.disableSave=!1,this.disableSaveLocation=!1,this.assetLocationId=0,this.isDelete=!1,this.codeName="",this.allreasn=[],this.auditHistory=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.displayedColumns=["Code","Name","Memo"],this.recordExists=!1,this.currentstatus="Active",this.allWorkFlows=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.displayedColumns.push("action"),this.dataSource=new H.a,this.sourceAction=new ba.a}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData(),this.breadCrumb.currentUrl="/singlepages/singlepages/asset-location",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(){var t=this;this.assetLocationService.getAll().subscribe((function(e){t.originalTableData=e[0].columnData,t.getListByStatus(t.status?t.status:t.currentstatus),t.allunitData=e[0].columHeaders,t.cols=[console.log(t.allunitData),t.selectedColumns=t.allunitData],t.selectedData=t.selectedColumns}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"validateRecordExistsOrNot",value:function(t,e,a){if(console.log(t,e,a),!(""===t&&void 0===t||""===e&&void 0===e||void 0===a))return a.filter((function(a){return a[t].toLowerCase()===e.toLowerCase()}))}},{key:"eventHandler",value:function(t){var e=t.target.value.toLowerCase();this.selectedreason&&(console.log(191),e==this.selectedreason.toLowerCase()&&(this.isEditMode&&this.selAssetLocationId!=this.selectedRow.assetLocationId||!this.isEditMode)?(this.disableSave=!0,this.disableSaveLocation=!0,this.recordExists=!0):(this.disableSave=!1,this.recordExists=!1,this.disableSaveLocation=!1))}},{key:"partnmId",value:function(t){for(var e=0;e<this.allreasn.length;e++)t==this.allreasn[e][0].codeName&&(this.selAssetLocationId=this.allreasn[e][0].assetLocationId,this.isEditMode&&this.selAssetLocationId!=this.selectedRow.assetLocationId||!this.isEditMode?(this.disableSave=!0,this.disableSaveLocation=!0,this.recordExists=!0):(this.disableSave=!1,this.disableSaveLocation=!1,this.recordExists=!1),this.selectedreason=t,console.log(this.allreasn[e][0]))}},{key:"filterAssetLocation",value:function(t){this.localCollection=[];for(var e=0;e<this.assetLocationList.length;e++){var a=this.assetLocationList[e].code;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(console.log(a),this.allreasn.push([{assetLocationId:this.assetLocationList[e].assetLocationId,codeName:a}]),this.localCollection.push(a))}}},{key:"resetdepriciationmethod",value:function(){this.updateMode=!1,this.currentAssetLocation=new ba.a}},{key:"getChange",value:function(){this.disableSave=!1,this.disableSaveLocation=!1}},{key:"open",value:function(t){this.recordExists=!1,this.isDeleteMode=!1,this.isEditMode=!1,this.disableSave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=new ba.a,this.sourceAction.isActive=!0,this.codeName="",this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openEdit",value:function(t,e){this.recordExists=!1,this.isEditMode=!0,this.disableSave=!1,this.disableSaveLocation=!0,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=e,this.selectedRow=e,this.codeName=e.code,this.assetLocationId=this.assetLocationId,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"SaveandEditAssetLocation",value:function(){var t=this;this.isSaving=!0,console.log(this);var e={createdBy:this.userName,updatedBy:this.userName,Code:this.codeName,Name:this.sourceAction.name,Memo:this.sourceAction.memo,assetLocationId:this.sourceAction.assetLocationId,IsActive:this.sourceAction.isActive,IsDeleted:this.isDelete,masterCompanyId:1};0==this.isEditMode?this.assetLocationService.add(e).subscribe((function(e){return t.saveSuccessHelper(e)}),(function(e){return t.saveFailedHelper(e)})):(e.assetLocationId=this.sourceAction.assetLocationId,this.assetLocationService.update(e).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)}))),this.modal.close()}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.isDelete=!0,this.sourceAction.updatedBy=this.userName,this.assetLocationService.remove(this.sourceAction.assetLocationId).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Asset Location added successfully",g.d.success),this.loadData(),this.alertService.stopLoadingMessage()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDelete?(this.alertService.showMessage("Success","Asset Location deleted successfully",g.d.success),this.isDelete=!1):this.alertService.showMessage("Success","Asset Location updated successfully",g.d.success),this.loadData()}},{key:"handleChange",value:function(t,e){var a=this,n={createdBy:this.userName,updatedBy:this.userName,Code:t.code,Name:t.name,Memo:t.memo,isActive:t.isActive,IsDeleted:!1,masterCompanyId:1,assetLocationId:t.assetLocationId};0==e.checked?(this.Active="In Active",this.assetLocationService.update(n).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)}))):(this.Active="Active",this.assetLocationService.update(n).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)})))}},{key:"openView",value:function(t,e){console.log(t),this.sourceAction=e,this.code=e.code,this.name=e.name,this.memo=e.memo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceAction=e,this.code_Name=e.code,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"resetAddAssetLocation",value:function(){this.currentAssetLocation=new ba.a}},{key:"resetUpdateAssetLocation",value:function(){this.assetLocationToUpdate=new ba.a}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"getAuditHistoryById",value:function(t){var e=this;this.assetLocationService.getAssetAudit(t.assetLocationId).subscribe((function(t){e.auditHistory=t,e.originalTableData=t[0],e.getListByStatus(e.status?e.status:e.currentstatus)}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=AssetLocation&fileName=AssetLocation.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.assetLocationService.AssetLocationCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getAssetLocationList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getAssetLocationList",value:function(){this.loadData()}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.assetLocationList=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.assetLocationList=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.assetLocationList=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.assetLocationList=e)),this.totalRecords=this.assetLocationList.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("AssetLocation","AssetLocationId",this.restorerecord.assetLocationId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();fa.ctorParameters=function(){return[{type:g.b},{type:M.a},{type:ga.a},{type:w.c},{type:f.a},{type:u.a},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],fa.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],fa.prototype,"sort",void 0),fa=n.b([Object(s.Component)({selector:"asset-location",template:n.c(a("r7+K")).default,animations:[h.a],styles:[n.c(a("mu09")).default]})],fa);var ya=a("9bet"),wa=a("4P69"),Da=function(){function t(e,a,n,s,i,r,o,l){_classCallCheck(this,t),this.alertService=e,this.commonService=a,this.AssetAcquisitionTypeService=n,this.modalService=s,this.authService=i,this.breadCrumb=r,this.masterComapnyService=o,this.configurations=l,this.AssetAcquisitionTypeList=[],this.formData=new FormData,this.auditHisory=[],this.isDeleteMode=!1,this.isEditMode=!1,this.display=!1,this.modelValue=!1,this.allComapnies=[],this.code="",this.name="",this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.code_Name="",this.updatedDate="",this.localCollection=[],this.disableSave=!1,this.AssetAcquisitionTypeId=0,this.isDelete=!1,this.codeName="",this.allreasn=[],this.auditHistory=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.displayedColumns=["Code","Name","Memo"],this.recordExists=!1,this.currentstatus="Active",this.allWorkFlows=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.displayedColumns.push("action"),this.dataSource=new H.a,this.sourceAction=new ya.a}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData(),this.breadCrumb.currentUrl="/singlepages/singlepages/asset-acquisition-type",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(){var t=this;this.AssetAcquisitionTypeService.getAll().subscribe((function(e){t.allunitData=e[0].columHeaders,t.originalTableData=e[0].columnData,t.getListByStatus(t.status?t.status:t.currentstatus),t.cols=[console.log(t.allunitData),t.selectedColumns=t.allunitData],t.selectedData=t.selectedColumns}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"validateRecordExistsOrNot",value:function(t,e,a){if(console.log(t,e,a),!(""===t&&void 0===t||""===e&&void 0===e||void 0===a))return a.filter((function(a){return a[t].toLowerCase()===e.toLowerCase()}))}},{key:"eventHandler",value:function(t){var e=t.target.value.toLowerCase();this.selectedreason&&(console.log(191),e==this.selectedreason.toLowerCase()&&(this.isEditMode&&this.selAssetAcquisitionTypeId!=this.selectedRow.assetAcquisitionTypeId||!this.isEditMode)?(this.disableSave=!0,this.recordExists=!0):(this.disableSave=!1,this.recordExists=!1))}},{key:"onBlurCheck",value:function(t){console.log(t);for(var e=0;e<this.allreasn.length;e++)if(this.selectedreason=t.target.value,this.recordExists=!1,t.target.value==this.allreasn[e][0].codeName){if(this.selAssetAcquisitionTypeId=this.allreasn[e][0].AssetAcquisitionTypeId,this.isEditMode&&this.selAssetAcquisitionTypeId!=this.AssetAcquisitionTypeId||!this.isEditMode)return this.disableSave=!0,void(this.recordExists=!0);console.log(this.allreasn[e][0])}this.disableSave=!1,this.recordExists=!1}},{key:"partnmId",value:function(t){console.log(t);for(var e=0;e<this.allreasn.length;e++)if(t==this.allreasn[e][0].codeName){if(this.selectedreason=t,this.recordExists=!1,console.log(this.allreasn[e][0]),this.selAssetAcquisitionTypeId=this.allreasn[e][0].AssetAcquisitionTypeId,this.isEditMode&&this.selAssetAcquisitionTypeId!=this.AssetAcquisitionTypeId||!this.isEditMode)return this.disableSave=!0,void(this.recordExists=!0);console.log(this.allreasn[e][0])}this.disableSave=!1,this.recordExists=!1}},{key:"filterAssetAcquisitionType",value:function(t){this.localCollection=[];for(var e=0;e<this.AssetAcquisitionTypeList.length;e++){var a=this.AssetAcquisitionTypeList[e].code;null!=a&&0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(console.log(a),this.allreasn.push([{AssetAcquisitionTypeId:this.AssetAcquisitionTypeList[e].assetAcquisitionTypeId,codeName:a}]),this.localCollection.push(a))}}},{key:"resetdepriciationmethod",value:function(){this.updateMode=!1,this.currentAssetAcquisitionType=new ya.a}},{key:"open",value:function(t){this.recordExists=!1,this.isDeleteMode=!1,this.isEditMode=!1,this.disableSave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=new ya.a,this.sourceAction.isActive=!0,this.codeName="",this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openEdit",value:function(t,e){this.recordExists=!1,this.isEditMode=!0,this.disableSave=!0,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=Object.assign({},e),this.selectedRow=Object.assign({},e),this.codeName=e.code,this.AssetAcquisitionTypeId=this.sourceAction.assetAcquisitionTypeId,console.log("281",this.sourceAction),this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"SaveandEditAssetAcquisitionType",value:function(){var t=this;this.isSaving=!0,console.log(this.sourceAction);var e={createdBy:this.userName,updatedBy:this.userName,Code:this.codeName,Name:this.sourceAction.name,Memo:this.sourceAction.memo,IsActive:this.sourceAction.isActive,IsDeleted:this.isDelete,masterCompanyId:1};0==this.isEditMode?this.AssetAcquisitionTypeService.add(e).subscribe((function(e){return t.saveSuccessHelper(e)}),(function(e){return t.saveFailedHelper(e)})):(e.AssetAcquisitionTypeId=this.sourceAction.assetAcquisitionTypeId,this.AssetAcquisitionTypeService.update(e).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)}))),this.modal.close()}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.AssetAcquisitionTypeService.remove(this.sourceAction.assetAcquisitionTypeId).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Asset Acquisition Type created successfully",g.d.success),this.loadData(),this.alertService.stopLoadingMessage()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDelete?(this.alertService.showMessage("Success","Asset Acquisition Type deleted successfully",g.d.success),this.isDelete=!1):this.alertService.showMessage("Success","Asset Acquisition Type updated successfully",g.d.success),this.loadData()}},{key:"handleChange",value:function(t,e){var a=this,n={createdBy:this.userName,updatedBy:this.userName,Code:t.code,Name:t.name,Memo:t.memo,isActive:t.isActive,IsDeleted:!1,masterCompanyId:1,AssetAcquisitionTypeId:t.assetAcquisitionTypeId};0==e.checked?(this.Active="In Active",this.AssetAcquisitionTypeService.update(n).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)}))):(this.Active="Active",this.AssetAcquisitionTypeService.update(n).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)})))}},{key:"openView",value:function(t,e){console.log(t),this.sourceAction=e,this.code=e.code,this.name=e.name,this.memo=e.memo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceAction=e,this.code_Name=e.code,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"resetAddAssetAcquisitionType",value:function(){this.currentAssetAcquisitionType=new ya.a}},{key:"resetUpdateAssetAcquisitionType",value:function(){this.AssetAcquisitionTypeToUpdate=new ya.a}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"getAuditHistoryById",value:function(t){var e=this;this.AssetAcquisitionTypeService.getAssetAudit(t.assetAcquisitionTypeId).subscribe((function(t){console.log(t),console.log(t[0].result),e.auditHistory=t[0].result}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=AssetAcquisitionType&fileName=AssetAcquisitionType.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.AssetAcquisitionTypeService.AssetAcquisitionTypeCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getAssetAcquisitionTypeList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.AssetAcquisitionTypeList=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.AssetAcquisitionTypeList=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.AssetAcquisitionTypeList=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.AssetAcquisitionTypeList=e)),this.totalRecords=this.AssetAcquisitionTypeList.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("AssetAcquisitionType","AssetAcquisitionTypeId",this.restorerecord.assetAcquisitionTypeId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"getAssetAcquisitionTypeList",value:function(){this.loadData()}},{key:"enableSave",value:function(){this.recordExists?this.disableSave=!0:this.disableSave=!1}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Da.ctorParameters=function(){return[{type:g.b},{type:M.a},{type:wa.a},{type:w.c},{type:f.a},{type:u.a},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],Da.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],Da.prototype,"sort",void 0),Da=n.b([Object(s.Component)({selector:"asset-acquisition-type",template:n.c(a("eMHP")).default,animations:[h.a],styles:[n.c(a("NOoL")).default]})],Da);var Sa=function t(e,a,n,s,i,r,o,l,d,c,u,p,m,h){_classCallCheck(this,t),this.assetDepreciationMethodId=a,this.code=n,this.name=i,this.sequenceNo=s,this.depreciationMethod=r,this.memo=o,this.masterCompanyId=l,this.createdBy=d,this.updatedBy=c,this.createdDate=u,this.updatedDate=p,this.isDeleted=m,this.isActive=h},ka=function(){function t(e,a,n,s,i,r,o,l){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.alertService=n,this.authService=s,this.depriciationMethodService=i,this.modalService=r,this.masterComapnyService=o,this.configurations=l,this.depriciationMethodList=[],this.formData=new FormData,this.auditHisory=[],this.isDeleteMode=!1,this.isEditMode=!1,this.display=!1,this.modelValue=!1,this.allComapnies=[],this.code="",this.name="",this.depreciationMethod="",this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.allreasn=[],this.allreasn1=[],this.displayedColumns=["Code","Name","DepreciationMethod","Memo"],this.memoNotes="This is  memo",this.code_Name="",this.localCollection=[],this.localSequenceList=[],this.disableSave=!1,this.isDelete=!1,this.auditHistory=[],this.pageIndex=0,this.pageSize=10,this.codeName="",this.disableSaveForSequence=!1,this.disableSaveForEdit=!1,this.currentstatus="Active",this.allWorkFlows=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.displayedColumns.push("action"),this.dataSource=new H.a,this.sourceAction=new Sa}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-depriciation-method",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(){var t=this;this.depriciationMethodService.getAll().subscribe((function(e){t.originalTableData=e[0].columnData,t.getListByStatus(t.status?t.status:t.currentstatus),t.allunitData=e[0].columHeaders,t.cols=[console.log(t.allunitData),t.selectedColumns=t.allunitData],t.selectedData=t.selectedColumns,t.localSequenceList=[];for(var a=0;a<t.depriciationMethodList.length;a++){var n=t.depriciationMethodList[a].sequenceNo;t.allreasn1.push([{sequenceNo:t.depriciationMethodList[a].sequenceNo,codeName:n}]),t.localSequenceList.push(n)}}))}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"validateRecordExistsOrNot",value:function(t,e,a){if(console.log(t,e,a),!(""===t&&void 0===t||""===e&&void 0===e||void 0===a))return a.filter((function(a){return a[t].toLowerCase()===e.toLowerCase()}))}},{key:"eventHandler",value:function(t){var e=t.target.value.toLowerCase();this.selectedreason&&(e==this.selectedreason.toLowerCase()?this.disableSave=!0:this.disableSave=!1)}},{key:"partnmId",value:function(t){for(var e=0;e<this.allreasn.length;e++)if(t==this.allreasn[e][0].codeName&&!this.isEditMode||t==this.allreasn[e][0].codeName&&1==this.isEditMode&&this.allreasn[e][0].assetDepreciationMethodId!=this.sourceAction.assetDepreciationMethodId)return this.disableSave=!0,void(this.selectedreason=t);this.disableSave=!1}},{key:"eventHandler1",value:function(t){}},{key:"partnmId1",value:function(t){for(var e=0;e<this.allreasn1.length;e++)if(t==this.allreasn1[e][0].codeName&&!this.isEditMode||t==this.allreasn1[e][0].codeName&&1==this.isEditMode&&this.allreasn1[e][0].assetDepreciationMethodId!=this.sourceAction.assetDepreciationMethodId)return this.disableSaveForSequence=!0,void(this.selectedreason1=t);this.selectedreason1="",this.disableSaveForSequence=!1}},{key:"onBlurCheck",value:function(t){console.log(t.target.value);for(var e=t.target.value,a=0;a<this.depriciationMethodList.length;a++)if(e==this.depriciationMethodList[a].sequenceNo&&!this.isEditMode||e==this.depriciationMethodList[a].sequenceNo&&1==this.isEditMode&&this.depriciationMethodList[a].assetDepreciationMethodId!=this.sourceAction.assetDepreciationMethodId)return this.disableSaveForSequence=!0,void(this.selectedreason1=e);this.selectedreason1="",this.disableSaveForSequence=!1}},{key:"filterDepreciationMethod",value:function(t){this.localCollection=[];for(var e=0;e<this.depriciationMethodList.length;e++){var a=this.depriciationMethodList[e].code;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(this.allreasn.push([{assetDepreciationMethodId:this.depriciationMethodList[e].assetDepreciationMethodId,codeName:a}]),this.localCollection.push(a))}}},{key:"filterSequenceNo",value:function(t){this.localSequenceList=[];for(var e=0;e<this.depriciationMethodList.length;e++){var a=this.depriciationMethodList[e].sequenceNo;0==a.toString().indexOf(t.query.toLowerCase())&&(this.allreasn1.push([{sequenceNo:this.depriciationMethodList[e].sequenceNo,codeName:a}]),this.localSequenceList.push(a))}}},{key:"filterSequence",value:function(t){this.sequenceList=this.depriciationMethodList;var e=_toConsumableArray(this.depriciationMethodList.filter((function(e){if(null!==e.sequenceNo&&0!==e.sequenceNo&&null!=e.sequenceNo)return e.sequenceNo=e.sequenceNo,e.sequenceNo.toString().toLowerCase().includes(t.query.toLowerCase())})));this.sequenceList=e}},{key:"selectedSequence",value:function(t){var e=Object(D.k)("sequenceNo",t,this.sourceAction);this.disableSaveForSequence=!e}},{key:"checkSequenceExists",value:function(t){this.disableSaveForSequence=!1;for(var e=0;e<this.depriciationMethodList.length;e++)if(1==this.isEditMode&&this.sourceAction.sequenceNo==this.depriciationMethodList[e].sequenceNo&&this.sourceAction.assetDepreciationMethodId!=this.depriciationMethodList[e].assetDepreciationMethodId||t==this.depriciationMethodList[e].sequenceNo&&!this.isEditMode)return void(this.disableSaveForSequence=!0)}},{key:"getChange",value:function(){this.disableSaveForCondition=!1}},{key:"resetdepriciationmethod",value:function(){this.updateMode=!1,this.currentDepriciationmethod=new Sa}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"open",value:function(t){this.isDeleteMode=!1,this.isEditMode=!1,this.disableSave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.disableSaveForCondition=!1,this.disableSaveForSequence=!1,this.sourceAction=new Sa,this.sourceAction.isActive=!0,this.codeName="",this.sequenceNo="",this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openEdit",value:function(t,e){this.isEditMode=!0,this.disableSave=!1,this.disableSaveForCondition=!0,this.disableSaveForSequence=!1,this.disableSaveForEdit=!0,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=Object.assign({},e),this.codeName=this.sourceAction.code,this.sequenceNo=this.sourceAction.sequenceNo,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"SaveandEditDepreciationMethod",value:function(){var t=this;this.isSaving=!0;var e={createdBy:this.userName,updatedBy:this.userName,AssetDepreciationMethodCode:this.codeName,AssetDepreciationMethodName:this.sourceAction.name,AssetDepreciationMemo:this.sourceAction.memo,SequenceNo:this.sequenceNo,AssetDepreciationMethodBasis:this.sourceAction.depreciationMethod,IsActive:this.sourceAction.isActive,IsDeleted:this.isDelete,masterCompanyId:1};0==this.isEditMode?this.depriciationMethodService.add(e).subscribe((function(e){return t.saveSuccessHelper(e)}),(function(e){return t.saveFailedHelper(e)})):(e.AssetDepreciationMethodId=this.sourceAction.assetDepreciationMethodId,this.depriciationMethodService.update(e).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)}))),this.modal.close()}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.depriciationMethodService.remove(this.sourceAction.assetDepreciationMethodId).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"handleChange",value:function(t,e){var a=this,n={createdBy:this.userName,updatedBy:this.userName,AssetDepreciationMethodId:t.assetDepreciationMethodId,AssetDepreciationMethodCode:t.code,AssetDepreciationMethodName:t.name,AssetDepreciationMemo:t.memo,SequenceNo:t.sequenceNo,AssetDepreciationMethodBasis:t.depreciationMethod,IsActive:t.isActive,IsDeleted:this.isDelete,masterCompanyId:1};0==e.checked?(this.Active="In Active",this.depriciationMethodService.update(n).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)}))):(this.Active="Active",this.depriciationMethodService.update(n).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)})))}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData(),this.alertService.stopLoadingMessage()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDelete?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDelete=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.loadData()}},{key:"openView",value:function(t,e){this.sourceAction=e,this.code=e.code,this.name=e.name,this.depreciationMethod=e.depreciationMethod,this.memo=e.memo,this.sequenceNo=e.sequenceNo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceAction=e,this.code_Name=e.code,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"getAuditHistoryById",value:function(t){var e=this;this.depriciationMethodService.getAssetDepriciationMethodAudits(t.assetDepreciationMethodId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=DepreciationMethod&fileName=DepMethod.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.depriciationMethodService.DepMethodCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getDepMethodList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getDepMethodList",value:function(){this.loadData()}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.depriciationMethodList=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.depriciationMethodList=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.depriciationMethodList=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.depriciationMethodList=e)),this.totalRecords=this.depriciationMethodList.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("AssetDepreciationMethod","AssetDepreciationMethodId",this.restorerecord.assetDepreciationMethodId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"SaveandEditDepreciaionMethod",value:function(){}},{key:"changeStatus",value:function(t){}},{key:"updatedepriciationmethod",value:function(){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();ka.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:g.b},{type:f.a},{type:Dt.a},{type:w.c},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],ka.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],ka.prototype,"sort",void 0),ka=n.b([Object(s.Component)({selector:"app-depriciation-method",template:n.c(a("eeWq")).default,encapsulation:s.ViewEncapsulation.None,animations:[h.a],styles:[n.c(a("9o+e")).default]})],ka);var xa=a("RG0Y"),Ca=function t(e,a,n,s,i,r,o,l,d,c,u,p){_classCallCheck(this,t),this.assetDisposalTypeId=a,this.code=n,this.name=s,this.memo=i,this.masterCompanyId=r,this.createdBy=o,this.updatedBy=l,this.createdDate=d,this.updatedDate=c,this.isDelete=u,this.isActive=p},Aa=function(){function t(e,a,n,s,i,r,o,l){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.alertService=n,this.disposalTypeService=s,this.authService=i,this.modalService=r,this.masterComapnyService=o,this.configurations=l,this.disposalTypeList=[],this.formData=new FormData,this.auditHisory=[],this.isDeleteMode=!1,this.isEditMode=!1,this.display=!1,this.modelValue=!1,this.allComapnies=[],this.code="",this.name="",this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.allreasn=[],this.displayedColumns=["Code","Name","Memo"],this.auditHistory=[],this.memoNotes="This is  memo",this.code_Name="",this.localCollection=[],this.disableSave=!1,this.isDelete=!1,this.codeName="",this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.recordExists=!1,this.currentstatus="Active",this.allWorkFlows=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.displayedColumns.push("action"),this.dataSource=new H.a,this.sourceAction=new Ca}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-disposal-type",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(){var t=this;this.disposalTypeService.getAll().subscribe((function(e){t.originalTableData=e[0].columnData,t.getListByStatus(t.status?t.status:t.currentstatus),t.allunitData=e[0].columHeaders,t.allunitData[0].header="Asset Disposal Type",t.cols=[console.log(t.allunitData),t.selectedColumns=t.allunitData],t.selectedData=t.selectedColumns}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"validateRecordExistsOrNot",value:function(t,e,a){if(console.log(t,e,a),!(""===t&&void 0===t||""===e&&void 0===e||void 0===a))return a.filter((function(a){return a[t].toLowerCase()===e.toLowerCase()}))}},{key:"eventHandler",value:function(t){var e=t.target.value.toLowerCase();this.selectedreason&&(console.log(191),e==this.selectedreason.toLowerCase()&&(this.isEditMode&&this.selAssetDisposalTypeId!=this.selectedRow.assetDisposalTypeId||!this.isEditMode)?(this.disableSave=!0,this.recordExists=!0):(this.disableSave=!1,this.recordExists=!1))}},{key:"partnmId",value:function(t){for(var e=0;e<this.allreasn.length;e++)t==this.allreasn[e][0].codeName&&(this.selAssetDisposalTypeId=this.allreasn[e][0].assetDisposalTypeId,this.isEditMode&&this.selAssetDisposalTypeId!=this.selectedRow.assetDisposalTypeId||!this.isEditMode?(this.disableSave=!0,this.recordExists=!0):(this.disableSave=!1,this.recordExists=!1),this.selectedreason=t,console.log(this.allreasn[e][0]))}},{key:"filterDisposalType",value:function(t){this.localCollection=[];for(var e=0;e<this.disposalTypeList.length;e++){var a=this.disposalTypeList[e].code;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(console.log(a),this.allreasn.push([{assetDisposalTypeId:this.disposalTypeList[e].assetDisposalTypeId,codeName:a}]),this.localCollection.push(a))}}},{key:"resetdepriciationmethod",value:function(){this.updateMode=!1,this.currentDisposalType=new Ca}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"open",value:function(t){this.isDeleteMode=!1,this.isEditMode=!1,this.disableSave=!1,this.isSaving=!0,this.recordExists=!1,this.loadMasterCompanies(),this.sourceAction=new Ca,this.sourceAction.isActive=!0,this.codeName="",this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openEdit",value:function(t,e){this.isEditMode=!0,this.disableSave=!0,this.recordExists=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=Object.assign({},e),this.selectedRow=Object.assign({},e),this.codeName=e.code,this.name=e.name,this.memo=e.memo,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"SaveandEditDisposalType",value:function(){var t=this;this.isSaving=!0,console.log(this);var e={createdBy:this.userName,updatedBy:this.userName,AssetDisposalCode:this.codeName,AssetDisposalName:this.sourceAction.name,AssetDisposalMemo:this.sourceAction.memo,IsActive:this.sourceAction.isActive,IsDeleted:this.isDelete,masterCompanyId:1};0==this.isEditMode?this.disposalTypeService.add(e).subscribe((function(e){return t.saveSuccessHelper(e)}),(function(e){return t.saveFailedHelper(e)})):(e.AssetDisposalTypeId=this.sourceAction.assetDisposalTypeId,console.log(e),this.disposalTypeService.update(e).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)}))),this.modal.close()}},{key:"deleteItemAndCloseModel",value:function(){var t=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.disposalTypeService.remove(this.sourceAction.assetDisposalTypeId).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData(),this.alertService.stopLoadingMessage()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDelete?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDelete=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.loadData()}},{key:"handleChange",value:function(t,e){var a=this,n={createdBy:this.userName,updatedBy:this.userName,AssetDisposalTypeId:t.assetDisposalTypeId,AssetDisposalCode:t.code,AssetDisposalName:t.name,AssetDisposalMemo:t.memo,isActive:t.isActive,IsDeleted:!1,masterCompanyId:1};0==e.checked?(this.Active="In Active",this.disposalTypeService.update(n).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)}))):(this.Active="Active",this.disposalTypeService.update(n).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)})))}},{key:"openView",value:function(t,e){this.sourceAction=e,this.code=e.code,this.name=e.name,this.memo=e.memo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceAction=e,this.code_Name=e.code,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"getAuditHistoryById",value:function(t){var e=this;this.disposalTypeService.getDisposalAudit(t.assetDisposalTypeId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=DisposalType&fileName=DispType.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.disposalTypeService.DispTypeCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getDispTypeList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getDispTypeList",value:function(){this.loadData()}},{key:"onBlurCheck",value:function(t,e){console.log(e),console.log(this.selectedRow),console.log(this.name),this.isEditMode&&("name"==e&&this.name!=t&&(console.log("came here 494"),this.disableSave=!1),"code"==e&&this.selectedRow[e]!=t.target.value&&(console.log("came here 499"),this.disableSave=!1)),console.log(this.disableSave)}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.disposalTypeList=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.disposalTypeList=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.disposalTypeList=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.disposalTypeList=e)),this.totalRecords=this.disposalTypeList.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("AssetDisposalType","AssetDisposalTypeId",this.restorerecord.assetDisposalTypeId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"enableSave",value:function(t,e){this.disableSave=!1}},{key:"updatedepriciationmethod",value:function(){}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Aa.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:g.b},{type:xa.a},{type:f.a},{type:w.c},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],Aa.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],Aa.prototype,"sort",void 0),Aa=n.b([Object(s.Component)({selector:"app-disposal-type",template:n.c(a("rmx5")).default,animations:[h.a],styles:[n.c(a("PWM1")).default]})],Aa);var Ma=function t(e,a,n,s,i,r,o,l,d,c,u,p){_classCallCheck(this,t),this.assetDepConventionId=a,this.code=n,this.name=s,this.memo=i,this.masterCompanyId=r,this.createdBy=o,this.updatedBy=l,this.createdDate=d,this.updatedDate=c,this.isDelete=u,this.isActive=p},Ia=a("EiSC"),Ta=function(){function t(e,a,n,s,i,r,o,l){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.alertService=n,this.assetDepConventionTypeService=s,this.modalService=i,this.authService=r,this.masterComapnyService=o,this.configurations=l,this.assetDepList=[],this.formData=new FormData,this.auditHisory=[],this.isDeleteMode=!1,this.isEdit=!1,this.display=!1,this.modelValue=!1,this.allComapnies=[],this.code="",this.name="",this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.allreasn=[],this.displayedColumns=["Code","Name","Memo"],this.code_Name="",this.localCollection=[],this.auditHistory=[],this.disableSave=!1,this.isDelete=!1,this.codeName="",this.pageIndex=0,this.pageSize=10,this.currentstatus="Active",this.allWorkFlows=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.displayedColumns.push("action"),this.dataSource=new H.a,this.sourceAction=new Ma}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-asset-dep-convention-type",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(){var t=this;this.assetDepConventionTypeService.getAll().subscribe((function(e){t.originalTableData=e[0].columnData,t.getListByStatus(t.status?t.status:t.currentstatus),t.allunitData=e[0].columHeaders,t.cols=[console.log(t.allunitData),t.selectedColumns=t.allunitData],t.selectedData=t.selectedColumns}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"validateRecordExistsOrNot",value:function(t,e,a){if(console.log(t,e,a),!(""===t&&void 0===t||""===e&&void 0===e||void 0===a))return a.filter((function(a){return a[t].toLowerCase()===e.toLowerCase()}))}},{key:"eventHandler",value:function(t){var e=t.target.value.toLowerCase();this.selectedreason&&(e==this.selectedreason.toLowerCase()?this.disableSave=!0:this.disableSave=!1)}},{key:"partnmId",value:function(t){for(var e=0;e<this.allreasn.length;e++)t==this.allreasn[e][0].codeName&&(this.disableSave=!0,this.selectedreason=t)}},{key:"filterDepConvension",value:function(t){this.localCollection=[];for(var e=0;e<this.assetDepList.length;e++){var a=this.assetDepList[e].code;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(console.log(a),this.allreasn.push([{AssetDepConventionId:this.assetDepList[e].assetDepConventionId,codeName:a}]),this.localCollection.push(a))}}},{key:"resetAssetDepConventionType",value:function(){this.updateMode=!1,this.currentAssetDep=new Ma}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEdit=!1,this.modal.close()}},{key:"open",value:function(t){this.isDeleteMode=!1,this.isEdit=!1,this.disableSave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=new Ma,this.sourceAction.isActive=!0,this.codeName="",this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openEdit",value:function(t,e){this.isEdit=!0,this.disableSave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=e,this.codeName=e.code,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"SaveandEditDepConvension",value:function(){var t=this;this.isSaving=!0,console.log(this);var e={createdBy:this.userName,updatedBy:this.userName,AssetDepConventionCode:this.codeName,AssetDepConventionName:this.sourceAction.name,AssetDepConventionMemo:this.sourceAction.memo,IsActive:this.sourceAction.isActive,IsDeleted:this.isDelete,masterCompanyId:1};0==this.isEdit?this.assetDepConventionTypeService.add(e).subscribe((function(e){return t.saveSuccessHelper(e)}),(function(e){return t.saveFailedHelper(e)})):(e.AssetDepConventionId=this.sourceAction.assetDepConventionId,this.assetDepConventionTypeService.update(e).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)}))),this.modal.close()}},{key:"removeAssetDepConventionType",value:function(){var t=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.assetDepConventionTypeService.remove(this.sourceAction.assetDepConventionId).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData(),this.alertService.stopLoadingMessage()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDelete?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDelete=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.loadData()}},{key:"handleChange",value:function(t,e){var a=this,n={createdBy:this.userName,updatedBy:this.userName,AssetDepConventionId:t.assetDepConventionId,AssetDepConventionCode:t.code,AssetDepConventionName:t.name,AssetDepConventionMemo:t.memo,isActive:t.isActive,IsDeleted:!1,masterCompanyId:1};0==e.checked?(this.Active="In Active",this.assetDepConventionTypeService.update(n).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)}))):(this.Active="Active",this.assetDepConventionTypeService.update(n).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)})))}},{key:"openView",value:function(t,e){this.sourceAction=e,this.code=e.code,this.name=e.name,this.memo=e.memo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEdit=!1,this.isDeleteMode=!0,this.sourceAction=e,this.code_Name=e.code,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"getAuditHistoryById",value:function(t){var e=this;this.assetDepConventionTypeService.getAudit(t.assetDepConventionId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=DepreciationConvention&fileName=AssetDepConvention.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.assetDepConventionTypeService.AssetDepConvCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getAssetDepConvList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getAssetDepConvList",value:function(){this.loadData()}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.assetDepList=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.assetDepList=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.assetDepList=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.assetDepList=e)),this.totalRecords=this.assetDepList.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("AssetDepConvention","AssetDepConventionId",this.restorerecord.assetDepConventionId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Ta.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:g.b},{type:Ia.a},{type:w.c},{type:f.a},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],Ta.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],Ta.prototype,"sort",void 0),Ta=n.b([Object(s.Component)({selector:"app-asset-dep-convention-type",template:n.c(a("7mMn")).default,animations:[h.a],styles:[n.c(a("3hyP")).default]})],Ta);var La=a("DLlg"),Ra=function t(e,a,n,s,i,r,o,l,d,c,u,p){_classCallCheck(this,t),this.assetDepreciationIntervalId=a,this.code=n,this.name=s,this.memo=i,this.masterCompanyId=r,this.createdBy=o,this.updatedBy=l,this.createdDate=d,this.updatedDate=c,this.isDelete=u,this.isActive=p},Pa=function(){function t(e,a,n,s,i,r,o,l){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.alertService=n,this.authService=s,this.depreciationIntervalsService=i,this.modalService=r,this.masterComapnyService=o,this.configurations=l,this.depreciationIntervalsList=[],this.formData=new FormData,this.auditHistory=[],this.auditHisory=[],this.isDeleteMode=!1,this.isEdit=!1,this.display=!1,this.modelValue=!1,this.allComapnies=[],this.code="",this.name="",this.memo="",this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.allreasn=[],this.displayedColumns=["Code","Name","Memo"],this.code_Name="",this.localCollection=[],this.disableSave=!1,this.isDelete=!1,this.codeName="",this.pageIndex=0,this.pageSize=10,this.disableSaveForEdit=!1,this.currentstatus="Active",this.allWorkFlows=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={},this.displayedColumns.push("action"),this.dataSource=new H.a,this.sourceAction=new Ra}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadData(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-depreciation-intervals",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"ngAfterViewInit",value:function(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}},{key:"loadData",value:function(){var t=this;this.depreciationIntervalsService.getAll().subscribe((function(e){t.originalTableData=e[0].columnData,t.getListByStatus(t.status?t.status:t.currentstatus),t.allunitData=e[0].columHeaders,t.cols=[console.log(t.allunitData),t.selectedColumns=t.allunitData],t.selectedData=t.selectedColumns}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"loadMasterCompanies",value:function(){var t=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe((function(e){return t.onDataMasterCompaniesLoadSuccessful(e[0])}),(function(e){return t.onDataLoadFailed(e)}))}},{key:"applyFilter",value:function(t){this.dataSource.filter=t}},{key:"refresh",value:function(){this.applyFilter(this.dataSource.filter)}},{key:"onHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"onDataMasterCompaniesLoadSuccessful",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"validateRecordExistsOrNot",value:function(t,e,a){if(console.log(t,e,a),!(""===t&&void 0===t||""===e&&void 0===e||void 0===a))return a.filter((function(a){return a[t].toLowerCase()===e.toLowerCase()}))}},{key:"eventHandler",value:function(t){var e=t.target.value.toLowerCase();this.selectedreason&&(e==this.selectedreason.toLowerCase()?this.disableSave=!0:this.disableSave=!1)}},{key:"partnmId",value:function(t){for(var e=0;e<this.allreasn.length;e++)t==this.allreasn[e][0].codeName&&(this.disableSave=!0,this.selectedreason=t)}},{key:"filterDepreciationInterval",value:function(t){this.localCollection=[];for(var e=0;e<this.depreciationIntervalsList.length;e++){var a=this.depreciationIntervalsList[e].code;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(console.log(a),this.allreasn.push([{assetDepreciationIntervalId:this.depreciationIntervalsList[e].assetDepreciationIntervalId,codeName:a}]),this.localCollection.push(a))}}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEdit=!1,this.modal.close()}},{key:"open",value:function(t){this.isDeleteMode=!1,this.isEdit=!1,this.disableSave=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=new Ra,this.sourceAction.isActive=!0,this.codeName="",this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"openEdit",value:function(t,e){this.isEdit=!0,this.disableSave=!1,this.disableSaveForEdit=!0,this.isSaving=!0,this.loadMasterCompanies(),this.sourceAction=e,this.codeName=e.code,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"SaveandEditDepreciationInterval",value:function(){var t=this;this.isSaving=!0,console.log(this);var e={createdBy:this.userName,updatedBy:this.userName,AssetDepreciationIntervalCode:this.codeName,AssetDepreciationIntervalName:this.sourceAction.name,AssetDepreciationIntervalMemo:this.sourceAction.memo,IsActive:this.sourceAction.isActive,IsDeleted:this.isDelete,masterCompanyId:1};0==this.isEdit?this.depreciationIntervalsService.add(e).subscribe((function(e){return t.saveSuccessHelper(e)}),(function(e){return t.saveFailedHelper(e)})):(e.AssetDepreciationIntervalId=this.sourceAction.assetDepreciationIntervalId,this.depreciationIntervalsService.update(e).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)}))),this.modal.close()}},{key:"removedepreciationIntervals",value:function(){var t=this;this.isSaving=!0,this.sourceAction.updatedBy=this.userName,this.depreciationIntervalsService.remove(this.sourceAction.assetDepreciationIntervalId).subscribe((function(e){return t.saveCompleted(t.sourceAction)}),(function(e){return t.saveFailedHelper(e)})),this.modal.close()}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success),this.loadData(),this.alertService.stopLoadingMessage()}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",g.d.error,t),this.alertService.showStickyMessage(t,null,g.d.error)}},{key:"saveCompleted",value:function(t){this.isSaving=!1,1==this.isDelete?(this.alertService.showMessage("Success","Action was deleted successfully",g.d.success),this.isDelete=!1):this.alertService.showMessage("Success","Action was edited successfully",g.d.success),this.loadData()}},{key:"handleChange",value:function(t,e){var a=this,n={createdBy:this.userName,updatedBy:this.userName,AssetDepreciationIntervalId:t.assetDepreciationIntervalId,AssetDepreciationIntervalCode:t.code,AssetDepreciationIntervalName:t.name,AssetDepreciationIntervalMemo:t.memo,isActive:t.isActive,IsDeleted:!1,masterCompanyId:1};0==e.checked?(this.Active="In Active",this.depreciationIntervalsService.update(n).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)}))):(this.Active="Active",this.depreciationIntervalsService.update(n).subscribe((function(t){return a.saveCompleted(a.sourceAction)}),(function(t){return a.saveFailedHelper(t)})))}},{key:"openView",value:function(t,e){this.sourceAction=e,this.code=e.code,this.name=e.name,this.memo=e.memo,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"openDelete",value:function(t,e){this.isEdit=!1,this.isDeleteMode=!0,this.sourceAction=e,this.code_Name=e.code,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"resetdepreciationIntervals",value:function(){this.updateMode=!1,this.currentDepreciationIntervals=new Ra}},{key:"getAuditHistoryById",value:function(t){var e=this;this.depreciationIntervalsService.getAudit(t.assetDepreciationIntervalId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=DepreciationInterval&fileName=DepInterval.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.depreciationIntervalsService.DepIntervalCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getDepIntervalList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getDepIntervalList",value:function(){this.loadData()}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.depreciationIntervalsList=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.depreciationIntervalsList=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.depreciationIntervalsList=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.depreciationIntervalsList=e)),this.totalRecords=this.depreciationIntervalsList.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("AssetDepreciationInterval","AssetDepreciationIntervalId",this.restorerecord.assetDepreciationIntervalId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadData(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"changeStatus",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Pa.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:g.b},{type:f.a},{type:La.a},{type:w.c},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)(B.a,{static:!1})],Pa.prototype,"paginator",void 0),n.b([Object(s.ViewChild)(O.a,{static:!1})],Pa.prototype,"sort",void 0),Pa=n.b([Object(s.Component)({selector:"app-depreciation-intervals",template:n.c(a("MaRl")).default,animations:[h.a],styles:[n.c(a("bII5")).default]})],Pa);var Na=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.activeModal=s,this._fb=i,this.alertService=r,this.aircraftManufacturerService=o,this.dialog=l,this.masterComapnyService=d,this.commonService=c,this.configurations=u,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"description",header:"Aircraft Manufacturer Name"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.currentstatus="Active",this.disableSave=!1,this.new={description:"",masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.existingRecordsResponse=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-aircraft-manufacturer",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"getmemo",value:function(){this.disableSave=!1}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"customAircraftTypeExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("ModuleName","AircraftType"),this.formData.append("file",a[0]),this.commonService.smartExcelFileUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.getList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"sampleAircraftTypeExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=AircraftType&fileName=AircraftType.xlsx";window.location.assign(t)}},{key:"getList",value:function(){var t=this;this.aircraftManufacturerService.getAll().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkGroupDescriptionExists",value:function(t,e){console.log(this.selectedRecordForEdit),Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit).length>0?this.disableSaveForDescription=!0:this.disableSaveForDescription=!1}},{key:"filterDescription",value:function(t){this.descriptionList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.description.trim().toLowerCase().includes(t.query.trim().toLowerCase())})));this.descriptionList=e}},{key:"selectedDescription",value:function(t){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSaveForDescription=!e}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,description:Object(D.a)("description",this.addNew.description)});this.isEdit?this.aircraftManufacturerService.update(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Updated Aircraft Manufacturer Successfully",g.d.success)}),(function(e){t.alertService.showMessage("Failed",e.error,g.d.error)})):this.aircraftManufacturerService.add(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Aircraft Manufacturer Successfully",g.d.success)}),(function(e){t.alertService.showMessage("Failed",e.error,g.d.error)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.addNew=Object.assign({},this.new)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSave=!0,this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.addNew=Object.assign({},t,{description:Object(D.e)("description",t.description,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.aircraftManufacturerService.updateActive(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.aircraftManufacturerService.remove(this.selectedRowforDelete.aircraftTypeId).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted Aircraft Type Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("AircraftType","AircraftTypeId",this.restorerecord.aircraftTypeId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"getAuditHistoryById",value:function(t){var e=this;this.aircraftManufacturerService.getAudit(t.aircraftTypeId).subscribe((function(t){e.auditHistory=t[0].result}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Na.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:zt.a},{type:m.b},{type:b.a},{type:M.a},{type:A.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],Na.prototype,"modal",void 0),Na=n.b([Object(s.Component)({selector:"app-aircraft-manufacturer",template:n.c(a("pxcQ")).default,animations:[h.a],styles:[n.c(a("5PUh")).default]})],Na);var Fa=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.activeModal=s,this._fb=i,this.alertService=r,this.aircraftmodelService=o,this.dialog=l,this.aicraftManufacturerService=d,this.configurations=c,this.commonService=u,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"aircraftType",header:"Aircraft Manufacturer"},{field:"modelName",header:"Model Name"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.disableSaveForAircraft=!1,this.currentstatus="Active",this.new={aircraftType:"",modelName:"",aircraftTypeId:"",masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.existingRecordsResponse=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-aircraft-model",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"customAircraftModelExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("ModuleName","AircraftModel"),this.formData.append("file",a[0]),this.commonService.smartExcelFileUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.getList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=AircraftModel&fileName=AircraftModel.xlsx";window.location.assign(t)}},{key:"getList",value:function(){var t=this;this.aircraftmodelService.getAll().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus),t.originalData=t.originalTableData.map((function(t){return{aircraftType:t.aircraftType.description,aircraftTypeId:t.aircraftType.aircraftTypeId,modelName:t.modelName,memo:t.memo,aircraftModelId:t.aircraftModelId,createdBy:t.createdBy,updatedBy:t.updatedBy,createdDate:t.createdDate,updatedDate:t.updatedDate,isActive:t.isActive}}))})),this.aicraftManufacturerService.getAll().subscribe((function(e){t.aircraftManufacturerList=e[0]}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"getChange",value:function(){this.disableSaveForAircraft=!1}},{key:"checkGroupDescriptionExists",value:function(t,e){console.log(this.selectedRecordForEdit),Object(D.m)(t,e,this.aircraftModelsList,this.selectedRecordForEdit).length>0?this.disableSaveForDescription=!0:this.disableSaveForDescription=!1}},{key:"filterDescription",value:function(t){this.descriptionList=this.aircraftModelsList;var e=_toConsumableArray(this.aircraftModelsList.filter((function(e){return e.modelName.toLowerCase().includes(t.query.toLowerCase())})));this.descriptionList=e}},{key:"selectedDescription",value:function(t){var e=Object(D.k)("modelName",t,this.selectedRecordForEdit);this.disableSaveForDescription=!e}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,aircraftType:Object(D.a)("aircraftType",this.addNew.aircraftType),modelName:Object(D.a)("modelName",this.addNew.modelName)});if(this.isEdit){e.aircraftType;var a=n.f(e,["aircraftType"]);this.aircraftmodelService.update(a).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Aircraft Model Successfully  ",g.d.success)}))}else this.aircraftmodelService.add(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Aircraft Model Successfully  ",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.addNew=Object.assign({},this.new),this.aircraftModelsList=[]}},{key:"edit",value:function(t){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.aircraftManufacturerChange(t.aircraftTypeId);case 2:console.log(t),this.isEdit=!0,this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.disableSaveForAircraft=!0,this.addNew=Object.assign({},t,{aircraftType:Object(D.e)("aircraftType",t.aircraftType,this.originalData),modelName:Object(D.e)("modelName",t.modelName,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew);case 9:case"end":return e.stop()}}),e,this)})))}},{key:"changeStatus",value:function(t){var e=this;console.log(t);t.aircraftType;var a=n.f(t,["aircraftType"]);this.aircraftmodelService.updateActive(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.aircraftmodelService.remove(this.selectedRowforDelete.aircraftModelId).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted Aircraft Model Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.aircraftmodelService.getAudit(t.aircraftModelId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"aircraftManufacturerChange",value:function(t){var e=this,a=null==t?this.addNew.aircraftTypeId:t;console.log(a),this.aircraftmodelService.getAircraftModelListByManufactureId(a).subscribe((function(t){var a=t[0];e.aircraftModelsList=a.map((function(t){return{modelName:t.modelName,aircraftModelId:t.aircraftModelId}}))}))}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e.map((function(t){return{aircraftType:t.aircraftType.description,aircraftTypeId:t.aircraftType.aircraftTypeId,modelName:t.modelName,memo:t.memo,aircraftModelId:t.aircraftModelId,createdBy:t.createdBy,updatedBy:t.updatedBy,createdDate:t.createdDate,updatedDate:t.updatedDate,isActive:t.isActive}}))):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e.map((function(t){return{aircraftType:t.aircraftType.description,aircraftTypeId:t.aircraftType.aircraftTypeId,modelName:t.modelName,memo:t.memo,aircraftModelId:t.aircraftModelId,createdBy:t.createdBy,updatedBy:t.updatedBy,createdDate:t.createdDate,updatedDate:t.updatedDate,isActive:t.isActive}}))):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e.map((function(t){return{aircraftType:t.aircraftType.description,aircraftTypeId:t.aircraftType.aircraftTypeId,modelName:t.modelName,memo:t.memo,aircraftModelId:t.aircraftModelId,createdBy:t.createdBy,updatedBy:t.updatedBy,createdDate:t.createdDate,updatedDate:t.updatedDate,isActive:t.isActive}}))):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e.map((function(t){return{aircraftType:t.aircraftType.description,aircraftTypeId:t.aircraftType.aircraftTypeId,modelName:t.modelName,memo:t.memo,aircraftModelId:t.aircraftModelId,createdBy:t.createdBy,updatedBy:t.updatedBy,createdDate:t.createdDate,updatedDate:t.updatedDate,isActive:t.isActive}})))),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("AircraftModel","AircraftModelId",this.restorerecord.aircraftModelId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Fa.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:Gt.a},{type:m.b},{type:zt.a},{type:A.a},{type:M.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],Fa.prototype,"modal",void 0),Fa=n.b([Object(s.Component)({selector:"app-aircraft-model",template:n.c(a("WE5w")).default,animations:[h.a],styles:[n.c(a("GcGN")).default]})],Fa);var Ea=function(){function t(e,a,n,s,i,r,o,l,d,c,u,p){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.activeModal=s,this._fb=i,this.alertService=r,this.dashNumberService=o,this.configurations=l,this.dialog=d,this.aircraftManufacturerService=c,this.aircraftModelService=u,this.commonService=p,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"aircraftType",header:"Aircraft Manufacturer"},{field:"aircraftModel",header:"Model Name"},{field:"dashNumber",header:"Dash Number"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGroupId=!1,this.disableSaveDashnumber=!1,this.disableSaveForDescription=!1,this.disableSaveWorkperformed=!1,this.currentstatus="Active",this.new={aircraftTypeId:"",aircraftModelId:"",dashNumber:"",aircraftModel:"",masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.existingRecordsResponse=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-dashnumber",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"customDashNumberExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.dashNumberService.CustomerDashNumberUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.getList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=DashNumber&fileName=DashNumber.xlsx";window.location.assign(t)}},{key:"getList",value:function(){var t=this;this.dashNumberService.getAll().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus),t.originalData=t.originalTableData.map((function(t){return{dashNumberId:t.dashNumberId,aircraftModelId:t.aircraftModelId,aircraftTypeId:t.aircraftTypeId,aircraftType:t.aircraftType.description,createdBy:t.createdBy,updatedBy:t.updatedBy,createdDate:t.createdDate,updatedDate:t.updatedDate,aircraftModel:t.aircraftModel.modelName,dashNumber:t.dashNumber,memo:t.memo,isActive:t.isActive}}))})),this.aircraftManufacturerService.getAll().subscribe((function(e){t.aircraftManufacturerList=e[0]}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"aircraftManufacturerChange",value:function(t){var e=this,a=null==t?this.addNew.aircraftTypeId:t;console.log(a),this.aircraftModelService.getAircraftModelListByManufactureId(a).subscribe((function(t){var a=t[0];e.aircraftModelsList=a.map((function(t){return{aircraftModel:t.modelName,aircraftModelId:t.aircraftModelId}}))}))}},{key:"getmemo",value:function(){this.disableSaveDashnumber=!1}},{key:"getDashNumberByManfacturerandModel",value:function(){var t=this;console.log(this.addNew),this.dashNumberService.getDashNumberByModelTypeId(this.addNew.aircraftModelId,this.addNew.aircraftTypeId).subscribe((function(e){var a=e;t.alldashnumberInfo=e,console.log(t.alldashnumberInfo),t.dashnumbers=a.map((function(t){return{dashNumber:t.dashNumber,dashNumberId:t.dashNumberId}}))}))}},{key:"checkGroupDescriptionExists",value:function(t,e){console.log(this.selectedRecordForEdit),Object(D.m)(t,e,this.dashnumbers,this.selectedRecordForEdit).length>0?this.disableSaveForDescription=!0:this.disableSaveForDescription=!1}},{key:"filterDescription",value:function(t){this.descriptionList=this.dashnumbers;var e=_toConsumableArray(this.dashnumbers.filter((function(e){return e.dashNumber.toLowerCase().includes(t.query.toLowerCase())})));this.descriptionList=e}},{key:"selectedDescription",value:function(t){var e=Object(D.k)("dashNumber",t,this.selectedRecordForEdit);this.disableSaveForDescription=!e}},{key:"save",value:function(){var t=this;console.log(this.addNew);var e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,dashNumber:Object(D.a)("dashNumber",this.addNew.dashNumber)});if(console.log(e),this.isEdit){e.aircraftType,e.aircraftModel;var a=n.f(e,["aircraftType","aircraftModel"]);this.dashNumberService.update(a).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Dash Number Successfully  ",g.d.success)}))}else this.dashNumberService.add(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Dash Number Successfully  ",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.addNew=Object.assign({},this.new),this.aircraftModelsList=[],this.dashnumbers=[]}},{key:"edit",value:function(t){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return console.log(t),this.isEdit=!0,this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.disableSaveDashnumber=!0,e.next=7,this.aircraftManufacturerChange(t.aircraftTypeId);case 7:this.addNew=Object.assign({},t,{dashNumber:Object(D.d)("dashNumber",t.dashNumber,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew);case 9:case"end":return e.stop()}}),e,this)})))}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.dashNumberService.updateActive(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.dashNumberService.remove(this.selectedRowforDelete.dashNumberId).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted Dash Number Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.dashNumberService.getDashNumberAudit(t.dashNumberId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e.map((function(t){return{dashNumberId:t.dashNumberId,aircraftModelId:t.aircraftModelId,aircraftTypeId:t.aircraftTypeId,aircraftType:t.aircraftType.description,createdBy:t.createdBy,updatedBy:t.updatedBy,createdDate:t.createdDate,updatedDate:t.updatedDate,aircraftModel:t.aircraftModel.modelName,dashNumber:t.dashNumber,memo:t.memo,isActive:t.isActive}}))):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e.map((function(t){return{dashNumberId:t.dashNumberId,aircraftModelId:t.aircraftModelId,aircraftTypeId:t.aircraftTypeId,aircraftType:t.aircraftType.description,createdBy:t.createdBy,updatedBy:t.updatedBy,createdDate:t.createdDate,updatedDate:t.updatedDate,aircraftModel:t.aircraftModel.modelName,dashNumber:t.dashNumber,memo:t.memo,isActive:t.isActive}}))):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e.map((function(t){return{dashNumberId:t.dashNumberId,aircraftModelId:t.aircraftModelId,aircraftTypeId:t.aircraftTypeId,aircraftType:t.aircraftType.description,createdBy:t.createdBy,updatedBy:t.updatedBy,createdDate:t.createdDate,updatedDate:t.updatedDate,aircraftModel:t.aircraftModel.modelName,dashNumber:t.dashNumber,memo:t.memo,isActive:t.isActive}}))):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e.map((function(t){return{dashNumberId:t.dashNumberId,aircraftModelId:t.aircraftModelId,aircraftTypeId:t.aircraftTypeId,aircraftType:t.aircraftType.description,createdBy:t.createdBy,updatedBy:t.updatedBy,createdDate:t.createdDate,updatedDate:t.updatedDate,aircraftModel:t.aircraftModel.modelName,dashNumber:t.dashNumber,memo:t.memo,isActive:t.isActive}})))),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("AircraftDashNumber","DashNumberId",this.restorerecord.dashNumberId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Ea.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:_t.a},{type:A.a},{type:m.b},{type:zt.a},{type:Gt.a},{type:M.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],Ea.prototype,"modal",void 0),Ea=n.b([Object(s.Component)({selector:"app-dashnumber",template:n.c(a("EVNn")).default,animations:[h.a],styles:[n.c(a("EtW6")).default]})],Ea);var Ha=a("wd/R"),Ba=a("QBlu"),Oa=function(){function t(e,a,n,s,i,r,o,l,d,c,u,p,m,h,v,b,g,f,y){_classCallCheck(this,t),this.publicationService=e,this.atasubchapter1service=a,this.alertService=n,this.ataMainSer=s,this.inteService=i,this.http=r,this.aircraftManufacturerService=o,this.aircraftModelService=l,this.pubdashNumberService=d,this.authService=c,this.itemMasterService=u,this.Dashnumservice=p,this.employeeService=m,this.route=h,this._actRoute=v,this.commonService=b,this.configurations=g,this.localStorage=f,this.modalService=y,this.activeMenuItem=1,this.revision=!1,this.currentTab="General",this.uploadedFiles=[],this.isEditMode=!1,this.selectedFile=null,this.attachCertificateUpdateFlag=!1,this.publicationGeneralInformation={entryDate:new Date,publicationId:"",description:"",publicationTypeId:null,asd:"",sequence:null,publishby:"",location:"",revisionDate:null,revisionNumber:"",expirationDate:null,nextReviewDate:null,employeeId:null,isActive:!1,inActive:!1,verifiedBy:null,verifiedDate:null,masterCompanyId:1,publishedById:null,tagTypeId:null},this.sourcePublication=Object.assign({},this.publicationGeneralInformation),this.generalInformationDetails={},this.airCraftTypesList=[],this.airCraftModels=[],this.dashModels=[],this.aircraftList=[],this.showModelAircraftModel=!1,this.partNumberList=[],this.selectedPartNumbers=[],this.pnMappingList=[],this.employeeList=[],this.ataList=[],this.headersforPNMapping=[{field:"partNumber",header:"PN"},{field:"partDescription",header:"PN Description"},{field:"manufacturer",header:"Manufacturer"},{field:"itemClassification",header:"Item Classification"},{field:"itemGroup",header:"Item Group"}],this.selectedPNmappingColumns=this.headersforPNMapping,this.selectAircraftManfacturer=[],this.aircraftManfacturerIdsUrl="",this.aircraftModelList=[],this.selectedAircraftModel=[],this.aircraftModelsIdUrl="",this.dashNumberList=[],this.selectedDashNumbers=[],this.dashNumberIdUrl="",this.ataChapterList=[],this.selectedATAchapter=[],this.ataChapterIdUrl="",this.selectedATASubChapter=[],this.ataSubchapterIdUrl="",this.searchParams="",this.searchATAParams="",this.isDisabledSteps=!1,this.attachmentList=[],this.publicationTypes=[],this.pnMappingPageSize=10,this.aircraftPageSize=10,this.atacols=[{field:"partNumber",header:"PN Number"},{field:"partDescription",header:"PN Description"},{field:"manufacturerName",header:"Manufacturer"},{field:"itemGroup",header:"Item Group"},{field:"ataChapter",header:"ATA Chapter"},{field:"ataSubChapter",header:"ATA SubChapter"}],this.selectedatacols=this.atacols,this.status=[{label:"Select Status ",value:"Select Status"},{label:"Active",value:"Active"},{label:"In-Active",value:"In-Active"}],this.isEnableNext=!1,this.formData=new FormData,this.active=!1,this.inactive=!1,this.disableSaveMemo=!0,this.ataPageSize=10,this.showAdvancedSearchCardAta=!1,this.showAdvancedSearchCardAircraft=!1,this.gLocationsList=[],this.pnData=[],this.selectedOnly=!1,this.selectedPartNumber="",this.pnAircraftData=[],this.selectedAircraftPartNumber="",this.viewAircraftData={},this.viewAtaData={},this.fileTagTypesList=[],this.selectedFileAttachment={},this.disableFileAttachmentSubmit=!0,this.publishedByModulesList=[],this.publishedByReferences=[],this.arrayIntegrationlist=[],this.disableSave=!0,this.aircraftInformationCols=[{field:"partNumber",header:"PN Number"},{field:"partDescription",header:"PN Description"},{field:"manufacturerName",header:"Manufacturer"},{field:"itemGroup",header:"Item Group"},{field:"aircraft",header:"Aircraft"},{field:"model",header:"Model"},{field:"dashNumber",header:"Dash Numbers"}],this.selectedaircraftInformationCols=this.aircraftInformationCols,this.headersforAttachment=[{field:"tagTypeName",header:"Tag Type"}],this.first=0,this.totalRecordNew=0,this.pageSizeNew=3,this.totalPagesNew=0,this.sourceViewforDocumentList=[],this.customerDocumentsColumns=[{field:"tagTypeName",header:"Tag Type"},{field:"docName",header:"Name"},{field:"docDescription",header:"Description"},{field:"docMemo",header:"Memo"},{field:"fileName",header:"File Name"},{field:"fileSize",header:"File Size"},{field:"createdBy",header:"Created By"},{field:"updatedBy",header:"Updated By"},{field:"createdDate",header:"Created Date"},{field:"updatedDate",header:"Updated Date"}],this.selectedColumnsDoc=this.customerDocumentsColumns,this.sourceViewforDocument=[],this.sourceViewforDocumentAudit=[],this.isEditButton=!1,this.documentInformation={docName:"",docMemo:"",docDescription:"",attachmentDetailId:0},this.allDocumentListOriginal=[],this.disabledPartNumber=!1}return _createClass(t,[{key:"ngOnInit",value:function(){var t=this;this.getGlobalDateFormat(),this.publicationRecordId=this._actRoute.snapshot.params.id,this.sourcePublication.sequence=1,this.isEditMode||(this.sourcePublication.revisionNum=1),this.getAllEmployeeList(),this.getAllIntegrations(),this.getFileTagTypesList(),this.getPublishedByModulesList(),this.publicationRecordId&&(this.isEnableNext=!0,this.isEditMode=!0,this.isDisabledSteps=!0,this.getPublicationDataonEdit(),this.publicationService.getPublicationPNMapping(this.publicationRecordId).subscribe((function(e){t.pnMappingList=e.map((function(t){return Object.assign({},t,{partNumber:t.partNumber,partDescription:t.partDescription,itemClassification:t.itemClassification,manufacturer:t.manufacturerName})}))})),this.getAircraftInformationByPublicationId(),this.getAtaChapterByPublicationId(),this.getFilesByPublicationId(),this.toGetDocumentsListNew(this.publicationRecordId))}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"getGlobalDateFormat",value:function(){var t=this.localStorage.getDataObject(Rt.a.GLOBAL_SETTINGS)||{};this.globalFormatDate=Ha.localeData(t.cultureName).longDateFormat("L")}},{key:"getPublicationTypes",value:function(){var t=this;this.commonService.smartDropDownList("PublicationType","PublicationTypeId","Name").subscribe((function(e){t.publicationTypes=e}))}},{key:"getAllIntegrations",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var e=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return 0==this.arrayIntegrationlist.length&&this.arrayIntegrationlist.push(0),t.next=3,this.commonService.autoSuggestionSmartDropDownList("PublicationType","PublicationTypeId","Name","",!0,100,this.arrayIntegrationlist.join()).subscribe((function(t){e.publicationTypes=t.map((function(t){return{label:t.label,value:t.value}}))}),(function(t){return e.saveFailedHelper(t)}));case 3:case"end":return t.stop()}}),t,this)})))}},{key:"PNMappingPageIndexChange",value:function(t){this.pnMappingPageSize=t.rows}},{key:"aircraftPageIndexChange",value:function(t){this.aircraftPageSize=t.rows}},{key:"ataPageIndexChange",value:function(t){this.ataPageSize=t.rows}},{key:"getPublicationDataonEdit",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var e=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.publicationService.getAllbyIdPublications(this.publicationRecordId).subscribe((function(t){var a=t.map((function(t){return t.locationId={label:t.location,value:t.locationId},t.publishedByRefId={label:t.publishedByRefName,value:t.publishedByRefId},Object.assign({},t,{entryDate:new Date(t.entryDate),verifiedDate:new Date(t.verifiedDate),revisionDate:new Date(t.revisionDate),expirationDate:new Date(t.expirationDate),nextReviewDate:new Date(t.nextReviewDate)})}));e.sourcePublication=a[0],e.arrayIntegrationlist.push(e.sourcePublication.publicationTypeId),e.getAllIntegrations(),e.publicationType=Object(D.g)("label","value",e.sourcePublication.publicationTypeId,e.publicationTypes)}));case 2:case"end":return t.stop()}}),t,this)})))}},{key:"openAircraftView",value:function(t,e){this.viewAircraftData=t,this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"openAtaView",value:function(t,e){this.viewAtaData=t,this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"closeModal",value:function(){this.viewAircraftData={},this.modal&&this.modal.close()}},{key:"addNewRecord",value:function(){this.route.navigate(["/singlepages/singlepages/app-create-publication"]),this.currentTab="General",this.activeMenuItem=1,this.formData=new FormData,this.sourcePublication={},this.isEnableNext=!1,this.sourcePublication.entryDate=new Date,this.publicationRecordId=null,this.sourcePublication.sequence=1,this.sourcePublication.revisionNum=1}},{key:"changeOfTab",value:function(t){"General"===t?(this.currentTab="General",this.activeMenuItem=1,this.formData=new FormData,this.getFilesByPublicationId()):"PnMap"===t?(this.currentTab="PnMap",this.activeMenuItem=2,this.getPartNumberList()):"Aircraft"===t?(this.currentTab="Aircraft",this.activeMenuItem=3,this.getAllAircraftManufacturer(),this.getAllAircraftModels(),this.getAllDashNumbers()):"Atachapter"===t&&(this.currentTab="Atachapter",this.activeMenuItem=4,this.getAllATAChapter(),this.getAllSubChapters())}},{key:"saveTab",value:function(t){this.alertService.showMessage("Success","Saved "+t+" Info Successfully",g.d.success),"Atachapter"==t&&this.route.navigate(["/singlepages/singlepages/app-publication"])}},{key:"getAllEmployeeList",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var e=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:this.commonService.smartDropDownList("Employee","employeeId","firstName").subscribe((function(t){e.employeeList=t}));case 1:case"end":return t.stop()}}),t,this)})))}},{key:"saveSuccessHelper",value:function(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",g.d.success)}},{key:"saveFailedHelper",value:function(t){this.isSaving=!1,this.formData=new FormData,this.alertService.showStickyMessage("Already exist",t.error,g.d.error)}},{key:"saveGeneralInfo",value:function(){var t=this;this.data=this.sourcePublication,this.data.employeeId=this.data.employeeId?this.data.employeeId:0,this.publicationType=Object(D.g)("label","value",this.sourcePublication.publicationTypeId.toString(),this.publicationTypes),null!=this.data.publishedById&&"null"!=this.data.publishedById||(this.data.publishedById=0),this.formData.append("entryDate",Ha(this.data.entryDate).format("DD/MM/YYYY")),this.formData.append("publicationId",this.data.publicationId),this.formData.append("description",this.data.description),this.formData.append("publicationTypeId",this.data.publicationTypeId),this.formData.append("asd",this.data.asd),this.formData.append("sequence",this.data.sequence),this.formData.append("publishedById",this.data.publishedById),2==this.data.publishedById||3==this.data.publishedById?this.formData.append("publishedByRefId",this.data.publishedByRefId.value):this.formData.append("publishedByRefId",null),this.formData.append("publishedByOthers",this.data.publishedByOthers),this.formData.append("locationId",this.data.locationId.value),this.data.revisionDate?this.formData.append("revisionDate",Ha(this.data.revisionDate).format("DD/MM/YYYY")):this.formData.append("revisionDate",null),this.data.expirationDate?this.formData.append("expirationDate",Ha(this.data.expirationDate).format("DD/MM/YYYY")):this.formData.append("expirationDate",null),this.data.nextReviewDate?this.formData.append("nextReviewDate",Ha(this.data.nextReviewDate).format("DD/MM/YYYY")):this.formData.append("nextReviewDate",null),this.data.verifiedDate?this.formData.append("verifiedDate",Ha(this.data.verifiedDate).format("DD/MM/YYYY")):this.formData.append("verifiedDate",null),this.formData.append("employeeId",this.data.employeeId),this.formData.append("verifiedStatus",!!this.data.verifiedStatus&&this.data.verifiedStatus),this.formData.append("verifiedBy",this.data.verifiedBy),this.formData.append("masterCompanyId",this.data.masterCompanyId),this.formData.append("CreatedBy",this.userName),this.formData.append("UpdatedBy",this.userName),this.formData.append("IsActive","true"),this.formData.append("IsDeleted","false"),this.isEditMode||this.formData.append("revisionNum",this.data.revisionNum),this.formData.append("attachmentdetais",JSON.stringify(this.sourceViewforDocumentList)),""!=this.sourcePublication.PublicationId&&null==this.publicationRecordId&&(this.generalInformationDetails=this.sourcePublication,this.sourcePublication.PublicationId=this.sourcePublication.PublicationId,this.publicationService.newAction(this.formData).subscribe((function(e){t.isEnableNext=!0,t.alertService.showMessage("Success","Publication saved Successfully",g.d.success);var a=e.publicationRecordId;t.publicationRecordId=a}),(function(e){return t.saveFailedHelper(e)}))),this.isEditMode&&this.updatePublicationGeneralInfo()}},{key:"addFileTagsToPublication",value:function(){var t=this;if(this.attachmentList.length>0){var e=this.attachmentList.findIndex((function(e){return e.tagTypeId===t.selectedFileAttachment.tagTypeId}));if(-1!=e)for(var a=0;a<this.selectedFileAttachment.attachmentDetails.length;a++)this.attachmentList[e].attachmentDetails.push(this.selectedFileAttachment.attachmentDetails[a]);else this.attachmentList=[].concat(_toConsumableArray(this.attachmentList),[this.selectedFileAttachment])}else this.attachmentList=[].concat(_toConsumableArray(this.attachmentList),[this.selectedFileAttachment]);this.sourcePublication.tagTypeId=null,this.tagsFileUploadInput&&this.tagsFileUploadInput.clear(),this.disableFileAttachmentSubmit=!0}},{key:"updatePublicationGeneralInfo",value:function(){var t=this;this.formData.append("publicationRecordId",this.publicationRecordId),this.publicationService.updateAction(this.formData).subscribe((function(e){t.isEnableNext=!0,t.getFilesByPublicationId(),t.formData=new FormData,t.alertService.showMessage("Success","Publication Updated Successfully",g.d.success)}))}},{key:"changeRevisionNum",value:function(t){"Yes"===t&&(this.data.revisionNum=this.data.revisionNum+1,this.formData.append("revisionNum",this.data.revisionNum),this.updatePublicationGeneralInfo()),"No"===t&&(this.formData.append("revisionNum",this.data.revisionNum),this.updatePublicationGeneralInfo())}},{key:"getPartNumberList",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var e=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.itemMasterService.getPrtnumberslistList().subscribe((function(t){var a=t[0];e.partNumberList=a.map((function(t){return{label:t.partNumber,value:t}}))}));case 2:case"end":return t.stop()}}),t,this)})))}},{key:"openModelPopups",value:function(t){t.length>0?this.disabledPartNumber=!0:this.disabledPartNumber=!1}},{key:"savePNMapping",value:function(){var t=this,e=this.selectedPartNumbers.map((function(e){return{PublicationRecordId:t.publicationRecordId,PublicationId:t.generalInformationDetails.PublicationId,PartNumber:e.partNumber,PartNumberDescription:e.partDescription,ItemMasterId:e.itemMasterId,ItemClassification:null===e.itemClassification?"-":e.itemClassification,ItemClassificationId:e.itemClassificationId,manufacturer:null===e.manufacturer?"-":e.manufacturer,ItemGroupId:null==e.itemGroupId?1:e.itemGroupId,CreatedBy:t.userName,UpdatedBy:t.userName,MasterCompanyId:e.masterCompanyId,IsActive:!0,IsDeleted:!1,CreatedDate:new Date,UpdatedDate:new Date}}));this.selectedPartNumbers=[],e&&e.length>0&&this.publicationService.postMappedPartNumbers(e).subscribe((function(e){t.isDisabledSteps=!0,t.publicationService.getPublicationPNMapping(t.publicationRecordId).subscribe((function(e){t.pnMappingList=e.map((function(t){return Object.assign({},t,{partNumber:t.partNumber,partDescription:t.partDescription,itemClassification:t.itemClassification,manufacturer:t.manufacturerName})})),t.alertService.showMessage("Success","PN Mapping Done Successfully",g.d.success),t.getAircraftInformationByPublicationId(),t.getAtaChapterByPublicationId()}))}),(function(e){t.saveFailedHelper(e)}))}},{key:"searchByFieldUrlCreateforAircraftInformation",value:function(){if(this.selectAircraftManfacturer.length>0){var t=this.selectAircraftManfacturer.reduce((function(t,e){return"".concat(t,",").concat(e)}),"");this.aircraftManfacturerIdsUrl=t.substr(1)}else this.aircraftManfacturerIdsUrl="";if(this.selectedAircraftModel.length>0){var e=this.selectedAircraftModel.reduce((function(t,e){return"".concat(t,",").concat(e)}),"");this.aircraftModelsIdUrl=e.substr(1)}else this.aircraftModelsIdUrl="";if(this.selectedDashNumbers.length>0){var a=this.selectedDashNumbers.reduce((function(t,e){return"".concat(t,",").concat(e)}),"");this.dashNumberIdUrl=a.substr(1)}else this.dashNumberIdUrl=""}},{key:"getAllAircraftManufacturer",value:function(){var t=this;this.aircraftManufacturerService.getAll().subscribe((function(e){t.showModelAircraftModel=!1;var a=e[0];t.airCraftTypesList=a.map((function(t){return{value:t.aircraftTypeId,label:t.description}}))}))}},{key:"getAllAircraftModels",value:function(){var t=this;this.aircraftModelService.getAll().subscribe((function(e){var a=e[0];t.aircraftModelList=a.map((function(t){return{label:t.modelName,value:t.aircraftModelId}}))}))}},{key:"getAllDashNumbers",value:function(){var t=this;this.Dashnumservice.getAll().subscribe((function(e){var a=e[0];t.dashNumberList=a.map((function(t){return{label:t.dashNumber,value:t.dashNumberId}}))}))}},{key:"getAircraftInformationByPublicationId",value:function(){var t=this;this.publicationService.getAircraftMappedByPublicationId(this.publicationRecordId).subscribe((function(e){t.pnAircraftData=[],t.aircraftList=e.map((function(e){return t.pnAircraftData.push({label:e.partNumber,value:e.partNumber}),Object.assign({},e,{aircraft:e.aircraftType,model:e.aircraftModel,dashNumber:e.dashNumber})}))}))}},{key:"getAircraftModelByManfacturerType",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var e=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.searchByFieldUrlCreateforAircraftInformation();case 2:this.selectedAircraftModel=[],this.selectedDashNumbers=[],this.aircraftModelList=[],this.dashNumberList=[],""!==this.aircraftManfacturerIdsUrl?this.aircraftModelService.getAircraftModelListByManufactureId(this.aircraftManfacturerIdsUrl).subscribe((function(t){var a=t[0];e.aircraftModelList=a.map((function(t){return{label:t.modelName,value:t.aircraftModelId}}))})):(this.getAllAircraftModels(),this.getAllDashNumbers());case 7:case"end":return t.stop()}}),t,this)})))}},{key:"getDashNumberByManfacturerandModel",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var e=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.searchByFieldUrlCreateforAircraftInformation();case 2:this.selectedDashNumbers=[],this.dashNumberList=[],""!==this.aircraftManfacturerIdsUrl&&""!==this.aircraftModelsIdUrl&&this.Dashnumservice.getDashNumberByModelTypeId(this.aircraftModelsIdUrl,this.aircraftManfacturerIdsUrl).subscribe((function(t){var a=t;e.dashNumberList=a.map((function(t){return{label:t.dashNumber,value:t.dashNumberId}}))}));case 5:case"end":return t.stop()}}),t,this)})))}},{key:"searchAircraftInformation",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var e=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.searchByFieldUrlCreateforAircraftInformation();case 2:this.searchParams="",""!==this.aircraftManfacturerIdsUrl&&""!==this.aircraftModelsIdUrl&&""!==this.dashNumberIdUrl&&""!==this.selectedAircraftPartNumber?this.searchParams="aircrafttypeid=".concat(this.aircraftManfacturerIdsUrl,"&aircraftmodelid=").concat(this.aircraftModelsIdUrl,"&dashNumberId=").concat(this.dashNumberIdUrl,"&partNumber=").concat(this.selectedAircraftPartNumber):""!==this.aircraftManfacturerIdsUrl&&""!==this.aircraftModelsIdUrl?this.searchParams="aircrafttypeid=".concat(this.aircraftManfacturerIdsUrl,"&aircraftmodelid=").concat(this.aircraftModelsIdUrl):""!==this.aircraftManfacturerIdsUrl?this.searchParams="aircrafttypeid="+this.aircraftManfacturerIdsUrl:""!==this.aircraftModelsIdUrl?this.searchParams="aircraftmodelid="+this.aircraftModelsIdUrl:""!==this.dashNumberIdUrl?this.searchParams="&dashNumberId="+this.dashNumberIdUrl:""!==this.selectedAircraftPartNumber&&(this.searchParams="&partNumber="+this.selectedAircraftPartNumber),this.publicationService.aircraftInformationSearch(this.searchParams,this.publicationRecordId).subscribe((function(t){var a=t;e.aircraftList=a.map((function(t){return Object.assign({},t,{aircraft:t.aircraftType,model:t.aircraftModel,dashNumber:t.dashNumber,memo:t.memo})}))}));case 5:case"end":return t.stop()}}),t,this)})))}},{key:"getAtaChapterByPublicationId",value:function(){var t=this;this.publicationService.getAtaMappedByPublicationId(this.publicationRecordId).subscribe((function(e){t.pnData=[];var a=e;t.ataList=a.map((function(e){return t.pnData.push({label:e.partNumber,value:e.partNumber}),Object.assign({},e,{ataChapter:"".concat(e.ataChapterCode," - ").concat(e.ataChapterName),ataSubChapter:"".concat(e.ataSubChapterCode," - ").concat(e.ataSubChapterDescription)})}))}))}},{key:"searchByFieldUrlCreateforATA",value:function(){if(this.selectedATAchapter.length>0){var t=this.selectedATAchapter.reduce((function(t,e){return"".concat(t,",").concat(e)}),"");this.ataChapterIdUrl=t.substr(1)}else this.ataChapterIdUrl="";if(this.selectedATASubChapter.length>0){var e=this.selectedATASubChapter.reduce((function(t,e){return"".concat(t,",").concat(e)}),"");this.ataSubchapterIdUrl=e.substr(1)}else this.ataSubchapterIdUrl=""}},{key:"multiSelectMaxLengthAlert",value:function(){this.selectedAircraftModel.length>=30&&alert("You have Selected Max Number of Models"),this.selectedDashNumbers.length>=30&&alert("You have Selected Max Number of DashNumbers")}},{key:"getAllATAChapter",value:function(){var t=this;this.ataMainSer.getAtaMainList().subscribe((function(e){var a=e[0];t.ataChapterList=a.map((function(t){return{value:t.ataChapterId,label:t.ataChapterName}}))}))}},{key:"getAllSubChapters",value:function(){var t=this;this.atasubchapter1service.getAtaSubChapter1List().subscribe((function(e){var a=e[0];t.ataSubChapterList=a.map((function(t){return{label:t.description,value:t.ataSubChapterId}}))}))}},{key:"getSubChapterByATAChapter",value:function(){var t=this;this.searchByFieldUrlCreateforATA(),""!==this.ataChapterIdUrl?this.ataMainSer.getMultiATASubDesc(this.ataChapterIdUrl).subscribe((function(e){var a=e;t.ataSubChapterList=a.map((function(t){return{label:t.description,value:t.ataSubChapterId}}))})):this.getAllSubChapters()}},{key:"searchATA",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var e=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.searchByFieldUrlCreateforATA();case 2:this.searchATAParams="",""!==this.ataChapterIdUrl&&""!==this.ataSubchapterIdUrl&&""!==this.selectedPartNumber?this.searchATAParams="ATAChapterId=".concat(this.ataChapterIdUrl,"&ATASubChapterID=").concat(this.ataSubchapterIdUrl,"&partNumber=").concat(this.selectedPartNumber):""!==this.ataChapterIdUrl?this.searchATAParams="ATAChapterId="+this.ataChapterIdUrl:""!==this.ataSubchapterIdUrl?this.searchATAParams="ATASubChapterID="+this.ataSubchapterIdUrl:""!==this.selectedPartNumber&&(this.searchATAParams="partNumber="+this.selectedPartNumber),this.publicationService.searchgetATAMappedByMultiSubChapterId(this.searchATAParams,this.publicationRecordId).subscribe((function(t){e.ataList=t.map((function(t){return Object.assign({},t,{ataChapter:"".concat(t.ataChapterCode," - ").concat(t.ataChapterName),ataSubChapter:"".concat(t.ataSubChapterCode," - ").concat(t.ataSubChapterDescription)})}))}));case 5:case"end":return t.stop()}}),t,this)})))}},{key:"onDeletePNMappingRow",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.publicationService.deleteItemMasterMapping(this.selectedRowforDelete.publicationItemMasterMappingId).subscribe((function(){e.publicationService.getPublicationPNMapping(e.publicationRecordId).subscribe((function(t){e.pnMappingList=t.map((function(t){return Object.assign({},t,{partNumber:t.partNumber,partNumberDescription:t.partNumberDescription,itemClassification:t.itemClassification,manufacturer:t.manufacturer})})),e.getAtaChapterByPublicationId(),e.getAircraftInformationByPublicationId()})),e.alertService.showMessage("Success","Deleted PN Mapping Successfully",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"downloadFileUpload",value:function(t){var e="".concat(this.configurations.baseUrl,"/api/FileUpload/downloadattachedfile?filePath=").concat(t);window.location.assign(e)}},{key:"dismissModelNew",value:function(){this.isEditMode=!1,this.modal.close()}},{key:"addDocumentDetails",value:function(){this.selectedFileAttachment=[],this.index=0,this.disableFileAttachmentSubmit=!1,this.isEditButton=!1,this.sourcePublication.tagTypeId=null,this.documentInformation={docName:"",docMemo:"",docDescription:"",attachmentDetailId:0}}},{key:"dismissDocumentPopupModel",value:function(t){this.fileUploadInput.clear(),this.closeMyModel(t)}},{key:"closeMyModel",value:function(t){y(t).modal("hide"),this.disableSave=!0}},{key:"downloadFileUploadNew",value:function(t){var e="".concat(this.configurations.baseUrl,"/api/FileUpload/downloadattachedfile?filePath=").concat(t);window.location.assign(e)}},{key:"fileUpload",value:function(t){0===t.files.length?this.disableFileAttachmentSubmit=!1:this.disableFileAttachmentSubmit=!0;var e=[];this.selectedFileAttachment=[];var a,n=_createForOfIteratorHelper(t.files);try{for(n.s();!(a=n.n()).done;){for(var s=a.value,i=!1,r=0;r<this.sourceViewforDocumentList.length;r++)this.sourceViewforDocumentList[r].fileName==s.name&&this.sourceViewforDocumentList[r].tagType==this.sourcePublication.tagTypeId&&(i=!0,this.alertService.showMessage("Duplicate","Already Exists this file ",g.d.warn),this.disableFileAttachmentSubmit=!1,this.fileUploadInput&&this.fileUploadInput.clear());i||(e.push({link:s.objectURL,fileName:s.name,isFileFromServer:!1,fileSize:s.size}),this.formData.append(s.name,s))}}catch(o){n.e(o)}finally{n.f()}for(r=0;r<e.length;r++)this.selectedFileAttachment.push({docName:this.documentInformation.docName,docMemo:this.documentInformation.docMemo,docDescription:this.documentInformation.docDescription,createdBy:this.userName,updatedBy:this.userName,link:e[r].link,fileName:e[r].fileName,fileSize:e[r].fileSize,tagType:this.sourcePublication.tagTypeId,isFileFromServer:!1,attachmentDetailId:0})}},{key:"onFileChanged",value:function(t){this.selectedFile=t.target.files[0]}},{key:"removeFile",value:function(t){}},{key:"enableSave",value:function(){this.disableSave=!1}},{key:"addDocumentInformation",value:function(t,e){if(this.selectedFileAttachment!=[])for(var a=0;a<this.selectedFileAttachment.length;a++)this.sourceViewforDocumentList.push({docName:e.docName,docMemo:e.docMemo,docDescription:e.docDescription,link:this.selectedFileAttachment[a].link,fileName:this.selectedFileAttachment[a].fileName,isFileFromServer:!1,attachmentDetailId:0,createdBy:this.userName,updatedBy:this.userName,createdDate:Date.now(),updatedDate:Date.now(),tagType:this.sourcePublication.tagTypeId,tagTypeName:Object(D.g)("label","value",this.sourcePublication.tagTypeId.toString(),this.fileTagTypesList),fileSize:(this.selectedFileAttachment[a].fileSize/1048576).toFixed(2)});if(e.attachmentDetailId>0||this.index>0){for(a=0;a<=this.sourceViewforDocumentList.length;a++)if(this.sourceViewforDocumentList[a].attachmentDetailId>0){if(this.sourceViewforDocumentList[a].attachmentDetailId==e.attachmentDetailId){this.sourceViewforDocumentList[a].docName=e.docName,this.sourceViewforDocumentList[a].docMemo=e.docMemo,this.sourceViewforDocumentList[a].docDescription=e.docDescription;break}}else if(a==this.index){this.sourceViewforDocumentList[a].docName=e.docName,this.sourceViewforDocumentList[a].docMemo=e.docMemo,this.sourceViewforDocumentList[a].docDescription=e.docDescription,this.sourceViewforDocumentList[a].tagTypeName=Object(D.g)("label","value",this.sourcePublication.tagTypeId.toString(),this.fileTagTypesList);break}this.index=0,this.isEditButton=!1,this.disableFileAttachmentSubmit,this.dismissDocumentPopupModel(t)}this.dismissDocumentPopupModel(t),this.sourceViewforDocumentList=_toConsumableArray(this.sourceViewforDocumentList),this.sourceViewforDocumentList.length>0&&(this.totalRecordNew=this.sourceViewforDocumentList.length,this.totalPagesNew=Math.ceil(this.totalRecordNew/this.pageSizeNew)),this.index=0,this.isEditButton=!1,this.disableFileAttachmentSubmit,this.alertService.showMessage("Success","Sucessfully Attached document",g.d.success),this.fileUploadInput&&this.fileUploadInput.clear()}},{key:"onClickMemo",value:function(){this.memoPopupContent=this.documentInformation.docMemo,this.enableSave(),this.disableSaveMemo=!0}},{key:"enableSaveMemo",value:function(){this.disableSaveMemo=!1}},{key:"closeDeleteModal",value:function(){y("#downloadPublicationConfirmation").modal("hide")}},{key:"closeDeleteAircraftModal",value:function(){y("#downloadAircraftConfirmation").modal("hide")}},{key:"closeDeleteAtaModal",value:function(){y("#downloadAtaConfirmation").modal("hide")}},{key:"parsedText",value:function(t){if(t)return(new DOMParser).parseFromString("<!doctype html><body>"+t,"text/html").body.textContent}},{key:"onClickPopupSave",value:function(){this.documentInformation.docMemo=this.memoPopupContent,this.memoPopupContent="",y("#memo-popup-Doc").modal("hide")}},{key:"closeMemoModel",value:function(){y("#memo-popup-Doc").modal("hide")}},{key:"editCustomerDocument",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this.selectedFileAttachment=[],this.isEditButton=!0,this.index=e,this.sourcePublication.tagTypeId=t.tagType,this.documentInformation=t,t.attachmentDetailId>0?this.toGetDocumentView(t.attachmentDetailId):this.sourceViewforDocument=t}},{key:"deleteAttachmentRow",value:function(t,e,a){this.selectedRowForDelete=t,this.rowIndex=e,this.modal=this.modalService.open(a,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"deleteItemAndCloseModelNew",value:function(){var t=this,e=this.selectedRowForDelete.attachmentDetailId;e>0?this.commonService.GetAttachmentDeleteById(e,this.userName).subscribe((function(e){t.toGetDocumentsListNew(t.publicationId),t.alertService.showMessage("Success","Deleted Attachment  Successfully",g.d.success)})):(this.sourceViewforDocumentList.splice(this.rowIndex,1),this.totalRecordNew=this.sourceViewforDocumentList.length,this.totalPagesNew=Math.ceil(this.totalRecordNew/this.pageSizeNew)),this.modal.close()}},{key:"onUploadDocumentListNew",value:function(){var t=this,e={referenceId:this.publicationId,masterCompanyId:1,createdBy:this.userName,updatedBy:this.userName,moduleId:5};for(var a in e)this.formData.append(a,e[a]);this.formData.append("attachmentdetais",JSON.stringify(this.sourceViewforDocumentList)),this.commonService.uploadDocumentsEndpoint(this.formData).subscribe((function(e){t.formData=new FormData,t.toGetDocumentsListNew(t.publicationId)}))}},{key:"toGetDocumentsListNew",value:function(t){var e=this;this.publicationService.getFilesBypublicationNew(this.publicationRecordId).subscribe((function(t){e.sourceViewforDocumentList=t||[],e.allDocumentListOriginal=t,e.sourceViewforDocumentList.length>0&&e.sourceViewforDocumentList.forEach((function(t){t.isFileFromServer=!0})),e.totalRecordNew=e.sourceViewforDocumentList.length,e.totalPagesNew=Math.ceil(e.totalRecordNew/e.pageSizeNew)}))}},{key:"toGetDocumentView",value:function(t){var e=this;this.commonService.GetAttachment(t).subscribe((function(t){e.sourceViewforDocument=t||[]}))}},{key:"dateFilterForTableNew",value:function(t,e){if(""!==t&&Ha(t).format("MMMM DD YYYY")){var a=_toConsumableArray(this.sourceViewforDocumentList.filter((function(a){return Ha(a.createdDate).format("MMMM DD YYYY")===Ha(t).format("MMMM DD YYYY")&&"createdDate"===e||Ha(a.updatedDate).format("MMMM DD YYYY")===Ha(t).format("MMMM DD YYYY")&&"updatedDate"===e?a:void 0})));this.sourceViewforDocumentList=a}else this.sourceViewforDocumentList=this.allDocumentListOriginal}},{key:"onAuditHistoryLoadSuccessful",value:function(t,e){this.alertService.stopLoadingMessage(),this.sourceViewforDocumentAudit=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){}),(function(){}))}},{key:"openHistory",value:function(t,e){var a=this;this.alertService.startLoadingMessage(),this.commonService.GetAttachmentPublicationAudit(e.attachmentDetailId).subscribe((function(e){return a.onAuditHistoryLoadSuccessful(e,t)}),(function(t){return a.saveFailedHelper(t)}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.sourceViewforDocumentAudit,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"enableDisableAdvancedSearchAta",value:function(t){this.showAdvancedSearchCardAta=t,this.selectedATAchapter=[],this.selectedATASubChapter=[],this.selectedPartNumber="",this.getAtaChapterByPublicationId()}},{key:"enableDisableAdvancedSearchAircraft",value:function(t){this.showAdvancedSearchCardAircraft=t,this.selectAircraftManfacturer=[],this.selectedAircraftModel=[],this.selectedDashNumbers=[],this.selectedAircraftPartNumber="",this.getAircraftInformationByPublicationId()}},{key:"getFileTagTypesList",value:function(){var t=this;this.commonService.smartDropDownList("TagType","TagTypeID","Name").subscribe((function(e){t.fileTagTypesList=e}))}},{key:"getGlocationsList",value:function(t){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function e(){var a=this;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.commonService.autoSuggestionSmartDropDownList("Location","LocationId","Name",t.query,!1,Rt.a.AUTO_COMPLETE_COUNT_LENGTH).subscribe((function(t){a.gLocationsList=t}));case 2:case"end":return e.stop()}}),e,this)})))}},{key:"getFilesByPublicationId",value:function(){var t=this;this.publicationService.getFilesBypublication(this.publicationRecordId).subscribe((function(e){t.attachmentList=e||[],t.attachmentList.length>0&&t.attachmentList.forEach((function(t){t.isFileFromServer=!0,t.attachmentDetails.forEach((function(t){t.isFileFromServer=!0}))}))}))}},{key:"getLocationNameById",value:function(t){this.sourcePublication.location=this.sourcePublication.locationId.label}},{key:"getPublishedByModulesList",value:function(){var t=this;this.publicationService.getPublishedByModuleList().subscribe((function(e){t.publishedByModulesList=e}))}},{key:"getPublishedByReferencesList",value:function(t,e){var a=this,n="",s="",i="";2==e&&(n="Vendor",s="VendorId",i="VendorName"),3==e&&(n="Manufacturer",s="ManufacturerId",i="Name"),this.commonService.autoSuggestionSmartDropDownList(n,s,i,t.query,!1,Rt.a.AUTO_COMPLETE_COUNT_LENGTH).subscribe((function(t){a.publishedByReferences=t}))}},{key:"changePublishedById",value:function(){this.sourcePublication.publishedByRefId=null,this.sourcePublication.publishedByOthers=""}},{key:"nextClick",value:function(t){this.nextOrPreviousTab=t;var e=this.tabRedirectConfirmationModal;this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"redirectToTab",value:function(){this.dismissModel(),this.changeOfTab("PnMap")}},{key:"clearValue",value:function(){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Oa.ctorParameters=function(){return[{type:jt.a},{type:oe.a},{type:g.b},{type:C.a},{type:kt.a},{type:pe.HttpClient},{type:zt.a},{type:Gt.a},{type:jt.a},{type:f.a},{type:Tt.a},{type:_t.a},{type:Vt.a},{type:c.Router},{type:c.ActivatedRoute},{type:M.a},{type:A.a},{type:Ba.a},{type:w.c}]},n.b([Object(s.ViewChild)("tagsFileUploadInput",{static:!1})],Oa.prototype,"tagsFileUploadInput",void 0),n.b([Object(s.ViewChild)("tabRedirectConfirmationModal",{static:!1})],Oa.prototype,"tabRedirectConfirmationModal",void 0),n.b([Object(s.ViewChild)("fileUploadInput",{static:!1})],Oa.prototype,"fileUploadInput",void 0),Oa=n.b([Object(s.Component)({selector:"app-create-publication",template:n.c(a("vG9V")).default,styles:[n.c(a("BlHu")).default]})],Oa);var Ua=a("1bHX"),ja=a("bv+N"),Va=a("NGzr"),za=a("3/N/"),Ga=function(){function t(e,a,n,s,i,r,o,l,d,c){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.commonService=n,this.modalService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.percentService=l,this.dialog=d,this.masterComapnyService=c,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"percentValue",header:"Percent"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.disableSaveForDescriptionMsg=!1,this.new={percentValue:"",masterCompanyId:1,isActive:!0},this.addNew=Object.assign({},this.new),this.currentstatus="Active",this.existingRecordsResponse=[],this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-percent",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"onBlur",value:function(t){var e=t.target.value;this.disableSaveForDescriptionMsg=!1;for(var a=0;a<this.originalData.length;a++){var n=this.originalData[a].percentValue,s=this.originalData[a].percenteId;if(n==e){this.isEdit?s!=this.selectedRecordForEdit.percenteId?(this.disableSaveForDescriptionMsg=!0,this.disableSaveForDescription=!1):(this.disableSaveForDescriptionMsg=!1,this.disableSaveForDescription=!1):(this.disableSaveForDescriptionMsg=!0,this.disableSaveForDescription=!0),console.log("percentValue :",n);break}}}},{key:"customExcelUpload",value:function(t){}},{key:"sampleExcelDownload",value:function(){}},{key:"getList",value:function(){var t=this;this.percentService.getPercentages().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkGroupDescriptionExists",value:function(t,e){console.log(this.selectedRecordForEdit),Object(D.m)(t,parseInt(e),this.originalData,this.selectedRecordForEdit).length>0?(this.disableSaveForDescription=!0,this.disableSaveForDescriptionMsg=!0):(this.disableSaveForDescription=!1,this.disableSaveForDescriptionMsg=!1)}},{key:"filterDescription",value:function(t){this.descriptionList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.percentValue.toString().toLowerCase().includes(t.query.toString().toLowerCase())})));this.descriptionList=e}},{key:"selectedDescription",value:function(t){var e=Object(D.k)("percentValue",t,this.selectedRecordForEdit);this.disableSaveForDescription=!e}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,percentValue:Object(D.a)("percentValue",this.addNew.percentValue)});this.isEdit?this.percentService.updatePercentage(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Updated Percent Successfully",g.d.success)})):(e.percentValue=parseFloat(this.addNew.percentValue),this.percentService.newPercentage(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Percent Successfully",g.d.success)})))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.addNew=Object.assign({},this.new)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveGroupId=!1,this.disableSaveForDescription=!0,this.disableSaveForDescriptionMsg=!1,this.addNew=Object.assign({},t,{percentValue:Object(D.d)("percentId",t.percentId,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.percentService.updatePercentage(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.percentService.deletePercentage(this.selectedRowforDelete.percentId,this.selectedRowforDelete.userName).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted Percent Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("[Percent]","PercentId",this.restorerecord.percentId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"getAuditHistoryById",value:function(t){var e=this;this.percentService.historyAcion(t.percentId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Ga.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:M.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:L.a},{type:m.b},{type:b.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],Ga.prototype,"modal",void 0),Ga=n.b([Object(s.Component)({selector:"app-percent",template:n.c(a("0Vn7")).default,animations:[h.a],styles:[n.c(a("8xXy")).default]})],Ga);var _a=a("Pkv0"),Wa=function(){function t(e,a,n,s,i,r){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.configurations=n,this.authService=s,this.alertService=i,this.jobTypeService=r,this.disableSaveForJobTypeMSG=!1,this.newJobType={jobTypeName:"",jobTypeMemo:"",masterCompanyId:1,isActive:!0,isDeleted:!1},this.addNewJobType=Object.assign({},this.newJobType),this.disableSaveForJobType=!1,this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.jobTypeHeaders=[{field:"jobTypeName",header:"Job Type"},{field:"jobTypeMemo",header:"Memo"}],this.selectedColumns=this.jobTypeHeaders,this.formData=new FormData,this.auditHistory=[],this.disableSaveForShortName=!1}return _createClass(t,[{key:"ngOnInit",value:function(){this.getJobTypeList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-job-title",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getJobTypeList()}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("ModuleName","JobType"),this.formData.append("file",a[0]),this.commonService.smartExcelFileUpload(this.formData).subscribe((function(t){e.formData=new FormData,e.getJobTypeList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=JobType&fileName=JobType.xlsx";window.location.assign(t)}},{key:"onBlur",value:function(t){var e=t.target.value;this.disableSaveForJobTypeMSG=!1;for(var a=0;a<this.jobTypeData.length;a++){var n=this.jobTypeData[a].jobTypeName,s=this.jobTypeData[a].JobTypeId;if(n.toLowerCase()==e.toLowerCase()){!this.isEdit||this.isEdit?(this.disableSaveForJobType=!0,this.disableSaveForJobTypeMSG=!0):s!=this.selectedRecordForEdit.JobTypeId?(this.disableSaveForJobType=!1,this.disableSaveForJobTypeMSG=!0):(this.disableSaveForJobType=!1,this.disableSaveForJobTypeMSG=!1);break}}}},{key:"getJobTypeList",value:function(){var t=this;this.jobTypeService.getAllJobTypeList().subscribe((function(e){var a=e[0];t.jobTypeData=a,t.totalRecords=a.length,t.totalPages=Math.ceil(t.totalRecords/t.pageSize)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkJobTypeExists",value:function(t,e){Object(D.m)(t,e,this.jobTypeData,this.selectedRecordForEdit).length>0?(this.disableSaveForJobType=!0,this.disableSaveForJobTypeMSG=!0):(this.disableSaveForJobType=!1,this.disableSaveForJobTypeMSG=!1)}},{key:"filterJobTypes",value:function(t){this.jobTypeList=this.jobTypeData;var e=_toConsumableArray(this.jobTypeData.filter((function(e){return e.jobTypeName.toLowerCase().includes(t.query.toLowerCase())})));this.jobTypeList=e}},{key:"selectedJobType",value:function(t){var e=Object(D.k)("jobTypeMemo",t,this.selectedRecordForEdit);this.disableSaveForJobType=!e,this.disableSaveForJobTypeMSG=!e}},{key:"saveJobType",value:function(){var t=this,e=Object.assign({},this.addNewJobType,{createdBy:this.userName,updatedBy:this.userName,jobTypeName:Object(D.a)("jobTypeName",this.addNewJobType.jobTypeName),jobTypeMemo:Object(D.a)("jobTypeMemo",this.addNewJobType.jobTypeMemo)});this.isEdit?this.jobTypeService.updateAction(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetJobTypeForm(),t.getJobTypeList(),t.alertService.showMessage("Success","Updated Job Type Successfully",g.d.success)})):this.jobTypeService.newJobType(e).subscribe((function(){t.resetJobTypeForm(),t.getJobTypeList(),t.alertService.showMessage("Success","Added  New Job Type Successfully",g.d.success)}))}},{key:"resetJobTypeForm",value:function(){this.isEdit=!1,this.disableSaveForJobType=!1,this.disableSaveForJobTypeMSG=!1,this.selectedRecordForEdit=void 0,this.addNewJobType=Object.assign({},this.newJobType)}},{key:"editJobType",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveForJobType=!0,this.addNewJobType=Object.assign({},t,{jobTypeName:Object(D.d)("jobTypeId",t.jobTypeId,this.jobTypeData)}),this.selectedRecordForEdit=Object.assign({},this.addNewJobType)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.jobTypeService.updateAction(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.jobTypeService.deleteAcion(this.selectedRowforDelete.jobTypeId).subscribe((function(){e.getJobTypeList(),e.alertService.showMessage("Success","Deleted Job Type Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.jobTypeService.getJobTypeAudit(t.jobTypeId).subscribe((function(t){e.auditHistory=t[0].result}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"dismissModel",value:function(){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Wa.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:A.a},{type:f.a},{type:g.b},{type:_a.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],Wa.prototype,"table",void 0),Wa=n.b([Object(s.Component)({selector:"app-job-type",template:n.c(a("v+6v")).default,animations:[h.a],styles:[n.c(a("d33W")).default]})],Wa);var qa=a("tOyL"),$a=function(){function t(e,a,n){_classCallCheck(this,t),this.http=e,this.configurations=a,this.authService=n,this.baseUrl=this.configurations.baseUrl}return _createClass(t,[{key:"getAllVendorProcess1099Endpoint",value:function(t){return this.http.get("".concat(this.baseUrl,"/api/Vendor/getVendorProcess1099List?companyId=").concat(t),this.authService.getRequestHeaders())}},{key:"getNewVendorProcess1099Endpoint",value:function(t){return this.http.post(this.baseUrl+"/api/Vendor/vendorProcessSave",JSON.stringify(t),this.authService.getRequestHeaders())}},{key:"getStatusVendorProcess1099Endpoint",value:function(t,e,a){return this.http.put("".concat(this.baseUrl,"/api/Vendor/vendorProcessStatus?id=").concat(t,"&status=").concat(a,"&updatedBy=").concat(e),this.authService.getRequestHeaders())}},{key:"getDeleteVendorProcess1099Endpoint",value:function(t,e){return this.http.put("".concat(this.baseUrl,"/api/Vendor/vendorProcessDelete?id=").concat(t,"&updatedBy=").concat(e),this.authService.getRequestHeaders())}},{key:"getAllVendorProcess1099Audit",value:function(t){return this.http.get("".concat(this.baseUrl,"/api/Vendor/getVendorProcess1099Audit?id=").concat(t),this.authService.getRequestHeaders())}}]),t}();$a.ctorParameters=function(){return[{type:pe.HttpClient},{type:A.a},{type:qa.a}]},$a=n.b([Object(s.Injectable)()],$a);var Ya=function(){function t(e,a,n,s,i,r,o,l){_classCallCheck(this,t),this.breadCrumb=e,this.configurations=a,this.authService=n,this.alertService=s,this.modalService=i,this.commonService=r,this.vendor1099Service=o,this.vendorservice=l,this.vendorProcess1099Data=[],this.newVendorProcess1099={master1099Id:0,description:"",masterCompanyId:1,isActive:!0,isDeleted:!1,memo:""},this.addNewVendorProcess1099=Object.assign({},this.newVendorProcess1099),this.currentstatus="Active",this.disableSaveForVendorProcess1099=!1,this.disableSave=!1,this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.vendorProcess1099Headers=[{field:"description",header:"1099 Name"},{field:"memo",header:"Memo"}],this.selectedColumns=this.vendorProcess1099Headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveForShortName=!1,this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getVendorProcess1099List(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-vendor-process1099",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"getmemo",value:function(){this.disableSave=!1}},{key:"refreshList",value:function(){this.getVendorProcess1099List()}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("ModuleName","Master1099"),this.formData.append("file",a[0]),this.commonService.smartExcelFileUpload(this.formData).subscribe((function(t){e.formData=new FormData,e.getVendorProcess1099List(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=Master1099&fileName=Master1099.xlsx";window.location.assign(t)}},{key:"getVendorProcess1099List",value:function(){var t=this;this.vendor1099Service.getAllVendorProcess1099Endpoint(1).subscribe((function(e){e.length>0&&(t.originalTableData=e,t.getListByStatus(t.status?t.status:t.currentstatus))}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkVendorProcess1099nExists",value:function(t){this.disableSaveForVendorProcess1099=!1;for(var e=0;e<this.vendorProcess1099Data.length;e++)if(this.addNewVendorProcess1099.description==this.vendorProcess1099Data[e].description||t==this.vendorProcess1099Data[e].description)return void(this.disableSaveForVendorProcess1099=!0)}},{key:"filterVendorProcess1099",value:function(t){this.vendorProcess1099List=this.vendorProcess1099Data;var e=_toConsumableArray(this.vendorProcess1099Data.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.vendorProcess1099List=e}},{key:"selectedVendorProcess1099",value:function(t){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSaveForVendorProcess1099=!e}},{key:"saveVendoProcess1099",value:function(){var t=this,e=Object.assign({},this.addNewVendorProcess1099,{createdBy:this.userName,updatedBy:this.userName,description:Object(D.a)("description",this.addNewVendorProcess1099.description)});this.isEdit?this.vendor1099Service.getNewVendorProcess1099Endpoint(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetVendorProcess1099Form(),t.getVendorProcess1099List(),t.alertService.showMessage("Success","Updated Vendor Process1099 Successfully",g.d.success)})):this.vendor1099Service.getNewVendorProcess1099Endpoint(e).subscribe((function(){t.resetVendorProcess1099Form(),t.getVendorProcess1099List(),t.alertService.showMessage("Success","Added  New Vendor Process1099 Successfully",g.d.success)}))}},{key:"resetVendorProcess1099Form",value:function(){this.isEdit=!1,this.disableSaveForVendorProcess1099=!1,this.selectedRecordForEdit=void 0,this.addNewVendorProcess1099=Object.assign({},this.newVendorProcess1099)}},{key:"editVendorProcess1099",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveForVendorProcess1099=!1,this.disableSave=!0,this.addNewVendorProcess1099=Object.assign({},t,{description:Object(D.d)("master1099Id",t.master1099Id,this.vendorProcess1099Data)}),this.selectedRecordForEdit=Object.assign({},this.addNewVendorProcess1099)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.vendor1099Service.getStatusVendorProcess1099Endpoint(a.master1099Id,a.updatedBy,a.isActive).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.vendor1099Service.getDeleteVendorProcess1099Endpoint(this.selectedRowforDelete.master1099Id,this.selectedRowforDelete.updatedBy).subscribe((function(){e.getVendorProcess1099List(),e.alertService.showMessage("Success","Deleted Vendor Process1099 Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.vendorProcess1099Data=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.vendorProcess1099Data=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.vendorProcess1099Data=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.vendorProcess1099Data=e)),this.totalRecords=this.vendorProcess1099Data.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("Master1099","Master1099Id",this.restorerecord.master1099Id).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getVendorProcess1099List(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"getAuditHistoryById",value:function(t){var e=this;this.vendor1099Service.getAllVendorProcess1099Audit(t).subscribe((function(t){e.auditHistory=t}))}},{key:"showAuditPopup",value:function(t){this.getAuditHistoryById(t.master1099Id)}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Ya.ctorParameters=function(){return[{type:u.a},{type:A.a},{type:f.a},{type:g.b},{type:w.c},{type:M.a},{type:$a},{type:Oe.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],Ya.prototype,"modal",void 0),Ya=n.b([Object(s.Component)({selector:"app-vendor-process1099",template:n.c(a("y38n")).default,animations:[h.a],styles:[n.c(a("sbbx")).default]})],Ya);var Ka=function(){function t(e,a,n,s){_classCallCheck(this,t),this.breadCrumb=e,this.configurations=a,this.authService=n,this.alertService=s}return _createClass(t,[{key:"ngOnInit",value:function(){this.breadCrumb.currentUrl="/singlepages/singlepages/app-caps-report",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Ka.ctorParameters=function(){return[{type:u.a},{type:A.a},{type:f.a},{type:g.b}]},Ka=n.b([Object(s.Component)({selector:"app-caps-report",template:n.c(a("jNML")).default,animations:[h.a],styles:[n.c(a("fO72")).default]})],Ka);var Ja=function(){function t(e,a,n){_classCallCheck(this,t),this.http=e,this.configurations=a,this.authService=n,this.baseUrl=this.configurations.baseUrl}return _createClass(t,[{key:"getAllCapabilityTypeEndpoint",value:function(){return this.http.get(this.baseUrl+"/api/CapabilityType/Get",this.authService.getRequestHeaders())}},{key:"getNewCapabilityTypeEndpoint",value:function(t){return this.http.post(this.baseUrl+"/api/CapabilityType/capabilityTypeSave",JSON.stringify(t),this.authService.getRequestHeaders())}},{key:"getStatusCapabilityTypeEndpoint",value:function(t,e,a){return this.http.put("".concat(this.baseUrl,"/api/CapabilityType/capabilityTypeStatusUpdate/").concat(t,"?status=").concat(a,"&updatedBy=").concat(e),this.authService.getRequestHeaders())}},{key:"getDeleteCapabilityTypeEndpoint",value:function(t,e){return this.http.delete("".concat(this.baseUrl,"/api/CapabilityType/CapabilityTypeDelete/").concat(t,"?updatedBy=").concat(e),this.authService.getRequestHeaders())}},{key:"getAllCapabilityTypeAudit",value:function(t){return this.http.get("".concat(this.baseUrl,"/api/CapabilityType/CapabilityTypeAuditHistory/").concat(t),this.authService.getRequestHeaders())}}]),t}();Ja.ctorParameters=function(){return[{type:pe.HttpClient},{type:A.a},{type:qa.a}]},Ja=n.b([Object(s.Injectable)()],Ja);var Qa=function(){function t(e,a,n,s,i,r,o){_classCallCheck(this,t),this.breadCrumb=e,this.configurations=a,this.authService=n,this.modalService=s,this.alertService=i,this.commonService=r,this.capabilityService=o,this.capabilityTypeData=[],this.capabilityTypeHeaders=[{field:"description",header:"Vendor Capability Type"},{field:"capabilityTypeDesc",header:"Description"},{field:"sequenceMemo",header:"Memo"},{field:"sequenceNo",header:"Sequence"}],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.auditHistory=[],this.disableSaveForSequence=!1,this.newCapabilityType={capabilityTypeId:null,description:"",isActive:!0,isDeleted:!1,sequenceMemo:"",masterCompanyId:1,sequenceNo:"",capabilityTypeDesc:""},this.disableSaveForCapabilityType=!1,this.addNewCapabilityType=Object.assign({},this.newCapabilityType),this.currentstatus="Active",this.selectedColumns=this.capabilityTypeHeaders,this.formData=new FormData,this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getCapabilityTypeList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-capability-type",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"getCapabilityTypeList",value:function(){var t=this;this.capabilityService.getAllCapabilityTypeEndpoint().subscribe((function(e){t.originalTableData=e,t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"editCapabilityType",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveForCapabilityType=!1,this.disableSaveForCondition=!0,this.addNewCapabilityType=Object.assign({},t,{description:Object(D.d)("capabilityTypeId",t.capabilityTypeId,this.capabilityTypeData),sequenceNo:Object(D.d)("capabilityTypeId",t.capabilityTypeId,this.capabilityTypeData)}),this.selectedRecordForEdit=Object.assign({},this.addNewCapabilityType)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("ModuleName","CapabilityType"),this.formData.append("file",a[0]),this.commonService.smartExcelFileUpload(this.formData).subscribe((function(t){e.getCapabilityTypeList(),e.formData=new FormData,e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=CapabilityType&fileName=CapabilityType.xlsx";window.location.assign(t)}},{key:"checkCapabilityTypeExists",value:function(t){this.disableSaveForCapabilityType=!1;for(var e=0;e<this.capabilityTypeData.length;e++)if(this.addNewCapabilityType.description==this.capabilityTypeData[e].description||t==this.capabilityTypeData[e].description)return void(this.disableSaveForCapabilityType=!0)}},{key:"checkSequenceExists",value:function(t){this.disableSaveForSequence=!1;for(var e=0;e<this.capabilityTypeData.length;e++)if(this.addNewCapabilityType.sequenceNo==this.capabilityTypeData[e].sequenceNo||t==this.capabilityTypeData[e].sequenceNo)return void(this.disableSaveForSequence=!0)}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"selectedCapabilityType",value:function(t){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSaveForCapabilityType=!e}},{key:"selectedSequence",value:function(t){var e=Object(D.k)("sequenceNo",t,this.selectedRecordForEdit);this.disableSaveForSequence=!e}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.capabilityService.getStatusCapabilityTypeEndpoint(a.capabilityTypeId,a.updatedBy,a.isActive).subscribe((function(){e.getCapabilityTypeList(),e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"getChange",value:function(){this.disableSaveForCondition=!1}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.capabilityService.getDeleteCapabilityTypeEndpoint(this.selectedRowforDelete.capabilityTypeId,this.selectedRowforDelete.updatedBy).subscribe((function(){e.getCapabilityTypeList(),e.alertService.showMessage("Success","Deleted Capability Type Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"filterCapabilityType",value:function(t){this.capabilityTypeList=this.capabilityTypeData;var e=_toConsumableArray(this.capabilityTypeData.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.capabilityTypeList=e}},{key:"filterSequence",value:function(t){this.sequenceList=this.capabilityTypeData;var e=_toConsumableArray(this.capabilityTypeData.filter((function(e){if(null!==e.sequenceNo&&""!==e.sequenceNo)return e.sequenceNo=String(e.sequenceNo),e.sequenceNo.toLowerCase().includes(t.query.toLowerCase())})));this.sequenceList=e}},{key:"resetCapabilityTypeForm",value:function(){this.isEdit=!1,this.disableSaveForCapabilityType=!1,this.selectedRecordForEdit=void 0,this.disableSaveForCondition=!1,this.disableSaveForSequence=!1,this.addNewCapabilityType=Object.assign({},this.newCapabilityType)}},{key:"saveCapabilityType",value:function(){var t=this,e=Object.assign({},this.addNewCapabilityType,{createdBy:this.userName,updatedBy:this.userName,description:Object(D.a)("description",this.addNewCapabilityType.description),sequenceNo:Object(D.a)("sequenceNo",this.addNewCapabilityType.sequenceNo)});this.isEdit?this.capabilityService.getNewCapabilityTypeEndpoint(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.disableSaveForCondition=!1,t.resetCapabilityTypeForm(),t.getCapabilityTypeList(),t.alertService.showMessage("Success","Updated Capability Type Successfully",g.d.success)})):this.capabilityService.getNewCapabilityTypeEndpoint(e).subscribe((function(){t.resetCapabilityTypeForm(),t.getCapabilityTypeList(),t.alertService.showMessage("Success","Added  Capability Type Successfully",g.d.success)}))}},{key:"getAuditHistoryById",value:function(t){var e=this;this.capabilityService.getAllCapabilityTypeAudit(t).subscribe((function(t){e.auditHistory=t}))}},{key:"showAuditPopup",value:function(t){this.historyName="Vendor Capability Type",this.getAuditHistoryById(t.capabilityTypeId)}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.capabilityTypeData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.capabilityTypeData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.capabilityTypeData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.capabilityTypeData=e)),this.totalRecords=this.capabilityTypeData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("CapabilityType","CapabilityTypeId",this.restorerecord.capabilityTypeId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getCapabilityTypeList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"columnsChanges",value:function(){}},{key:"resetViewData",value:function(){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Qa.ctorParameters=function(){return[{type:u.a},{type:A.a},{type:f.a},{type:w.c},{type:g.b},{type:M.a},{type:Ja}]},Qa=n.b([Object(s.Component)({selector:"app-capability-type",template:n.c(a("3K5C")).default,animations:[h.a],styles:[n.c(a("MMfO")).default]})],Qa);var Za=a("N/od"),Xa=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.commonService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.leadSourceService=l,this.dialog=d,this.masterComapnyService=c,this.configurations=u,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"leadSources",header:"LeadSource"},{field:"description",header:"Description"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.disableSaveForDescriptionMsg=!1,this.currentstatus="Active",this.new={leadSources:"",description:"",masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-lead-source",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"getList",value:function(){var t=this;this.leadSourceService.getAllWorkFlows().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkGroupDescriptionExists",value:function(t,e){Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit).length>0?(this.disableSaveForDescription=!0,this.disableSaveForDescriptionMsg=!0):(this.disableSaveForDescription=!1,this.disableSaveForDescriptionMsg=!1)}},{key:"filterDescription",value:function(t){this.descriptionList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.description.toLowerCase().includes(t.query.toLowerCase())})));this.descriptionList=e}},{key:"selectedDescription",value:function(t){var e=Object(D.k)("description",t,this.selectedRecordForEdit);this.disableSaveForDescription=!e,this.disableSaveForDescriptionMsg=!e}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,leadSources:Object(D.a)("leadSources",this.addNew.leadSources),description:Object(D.a)("description",this.addNew.description)});this.isEdit?this.leadSourceService.updateAction(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Lead Source Successfully  ",g.d.success)})):this.leadSourceService.newAction(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Lead Source Successfully  ",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.disableSaveForDescriptionMsg=!1,this.selectedRecordForEdit=void 0,this.addNew=Object.assign({},this.new)}},{key:"getChange",value:function(){this.disableSaveForDescriptionMsg=!1,this.disableSaveForDescription=!1,this.disableSaveGroupId=!1}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveGroupId=!1,this.disableSaveForDescription=!0,this.disableSaveForDescriptionMsg=!1,this.addNew=Object.assign({},t,{leadSources:Object(D.e)("leadSources",t.leadSources,this.originalData)}),console.log(this.addNew+"Helooooooooooooooooo"),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.leadSourceService.updateAction(a).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t,console.log(this.selectedRowforDelete+"selectedRowforDelete")}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.leadSourceService.deleteAcion(this.selectedRowforDelete.leadSourceId).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted Lead Source Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.leadSourceService.historyintegration(t.leadSourceId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("LeadSource","LeadSourceId",this.restorerecord.leadSourceId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=LeadSource&fileName=LeadSource.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.leadSourceService.IntegrationCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();Xa.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:M.a},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:Za.a},{type:m.b},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],Xa.prototype,"modal",void 0),Xa=n.b([Object(s.Component)({selector:"app-lead-source",template:n.c(a("Q0zJ")).default,animations:[h.a],styles:[n.c(a("FAFl")).default]})],Xa);var tn=a("ipvX"),en=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.commonService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.tagTypeervice=l,this.dialog=d,this.masterComapnyService=c,this.configurations=u,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"name",header:"Name"},{field:"description",header:"Description"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.disableSaveForDescriptionmsg=!1,this.new={name:"",description:"",masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.currentstatus="Active",this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-tag-type",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"getList",value:function(){var t=this;this.tagTypeervice.getAllWorkFlows().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"getChange",value:function(){0==this.disableSaveForDescriptionmsg&&(this.disableSaveForDescription=!1)}},{key:"filterDescription",value:function(t){this.descriptionList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.name.toLowerCase().includes(t.query.toLowerCase())})));this.descriptionList=e}},{key:"selectedDescription",value:function(t){if(t.description!==this.selectedRecordForEdit){var e=Object(D.k)("Name",t,this.selectedRecordForEdit);this.disableSaveForDescription=!e,this.disableSaveForDescriptionmsg=!e}else this.disableSaveForDescription=!1,this.disableSaveForDescriptionmsg=!1}},{key:"checkGroupDescriptionExists",value:function(t){for(var e=0;e<this.originalData.length;e++){if(t==this.originalData[e].name){var a=Object(D.k)("Name",t,this.selectedRecordForEdit);return this.disableSaveForDescription=!a,void(this.disableSaveForDescriptionmsg=!a)}this.disableSaveForDescription=!1,this.disableSaveForDescriptionmsg=!1}}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,name:Object(D.a)("name",this.addNew.name),description:Object(D.a)("description",this.addNew.description)});this.isEdit?this.tagTypeervice.updateAction(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Tag Type Successfully  ",g.d.success)})):this.tagTypeervice.newAction(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Tag Type Successfully  ",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.disableSaveForDescriptionmsg=!1,this.addNew=Object.assign({},this.new)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveGroupId=!1,this.disableSaveForDescription=!0,this.disableSaveForDescriptionmsg=!1,this.addNew=Object.assign({},t,{name:Object(D.e)("name",t.name,this.originalData)}),console.log(this.addNew+"Helooooooooooooooooo"),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.tagTypeervice.updateAction(a).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t,console.log(this.selectedRowforDelete+"selectedRowforDelete")}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.tagTypeervice.deleteAcion(this.selectedRowforDelete.tagTypeId,this.userName).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted Tag Type Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.tagTypeervice.historyintegration(t.tagTypeId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=TagType&fileName=TagType.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.tagTypeervice.IntegrationCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("TagType","TagTypeId",this.restorerecord.tagTypeId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();en.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:M.a},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:tn.a},{type:m.b},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],en.prototype,"modal",void 0),en=n.b([Object(s.Component)({selector:"app-tag-type",template:n.c(a("Uitb")).default,animations:[h.a],styles:[n.c(a("2tv4")).default]})],en);var an=a("DN4R"),nn=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.activeModal=s,this._fb=i,this.alertService=r,this.commonService=o,this.teardownReasonService=l,this.dialog=d,this.masterComapnyService=c,this.configurations=u,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"teardownType",header:"Type"},{field:"reason",header:"Reason"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGroupId=!1,this.disableSaveForEdit=!1,this.disableSaveForDescriptionmsg=!1,this.currentstatus="Active",this.new={teardownTypeId:"",reason:"",masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.getTearDowntypes(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-teardown-reason",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"getTearDowntypes",value:function(){return n.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var e=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.commonService.smartDropDownList("TeardownType","TeardownTypeId","Name").subscribe((function(t){console.log("tearodown types list",t),e.teadownTypesList=t.map((function(t){return Object.assign({},t,{teardownTypeId:t.value,name:t.label})}))}));case 2:case"end":return t.stop()}}),t,this)})))}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"getList",value:function(){var t=this;this.teardownReasonService.getAll().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"filterDescription",value:function(t){this.descriptionList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.reason.toLowerCase().includes(t.query.toLowerCase())})));this.descriptionList=e}},{key:"selectedDescription",value:function(t){var e=Object(D.k)("Reason",t,this.selectedRecordForEdit);this.disableSaveForDescriptionmsg=!e}},{key:"checkGroupDescriptionExists",value:function(t){for(var e=0;e<this.originalData.length;e++){if(t==this.originalData[e].Reason)return Object(D.k)("Reason",t,this.selectedRecordForEdit),void(this.disableSaveForDescriptionmsg=!0);this.disableSaveForDescriptionmsg=!1}}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,reason:Object(D.a)("reason",this.addNew.reason)});console.log("tearDown add",e),this.isEdit?this.teardownReasonService.updateAction(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Teardown Reason Successfully  ",g.d.success)})):this.teardownReasonService.add(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Teardown Reason Successfully  ",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.disableSaveForDescriptionmsg=!1,this.addNew=Object.assign({},this.new)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveForEdit=!0,this.disableSaveForDescriptionmsg=!1,this.addNew=Object.assign({},t,{reason:Object(D.e)("reason",t.reason,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.teardownReasonService.updateAction(a).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),console.log("this.viewRowData"),console.log(this.viewRowData),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t,console.log(this.selectedRowforDelete+"selectedRowforDelete")}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.teardownReasonService.deleteAcion(this.selectedRowforDelete.teardownReasonId,this.userName).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted Teardown Reason Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.teardownReasonService.history(t.teardownReasonId).subscribe((function(t){e.auditHistory=t,console.log(e.auditHistory)}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=TeardownReason&fileName=TeardownReason.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("TeardownReason","TeardownReasonId",this.restorerecord.teardownReasonId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();nn.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:M.a},{type:an.a},{type:m.b},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],nn.prototype,"modal",void 0),nn=n.b([Object(s.Component)({selector:"app-teardown-reason",template:n.c(a("FOlm")).default,animations:[h.a],styles:[n.c(a("iWuQ")).default]})],nn);var sn=a("t346"),rn=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.commonService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.PublicationTypeService=l,this.dialog=d,this.masterComappublicationTypeServicenyService=c,this.configurations=u,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"name",header:"Name"},{field:"description",header:"Description"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.disableSaveForDescriptionmsg=!1,this.new={name:"",description:"",masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.currentstatus="Active",this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-publication-type",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"getList",value:function(){var t=this;this.PublicationTypeService.getAllWorkFlows().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"getChange",value:function(){0==this.disableSaveForDescriptionmsg&&(this.disableSaveForDescription=!1)}},{key:"filterDescription",value:function(t){this.descriptionList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.name.toLowerCase().includes(t.query.toLowerCase())})));this.descriptionList=e}},{key:"selectedDescription",value:function(t){if(t.description!==this.selectedRecordForEdit){var e=Object(D.k)("Name",t,this.selectedRecordForEdit);this.disableSaveForDescription=!e,this.disableSaveForDescriptionmsg=!e}else this.disableSaveForDescription=!1,this.disableSaveForDescriptionmsg=!1}},{key:"checkGroupDescriptionExists",value:function(t){for(var e=0;e<this.originalData.length;e++){if(t==this.originalData[e].name){var a=Object(D.k)("Name",t,this.selectedRecordForEdit);return this.disableSaveForDescription=!a,void(this.disableSaveForDescriptionmsg=!a)}this.disableSaveForDescription=!1,this.disableSaveForDescriptionmsg=!1}}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,name:Object(D.a)("name",this.addNew.name),description:Object(D.a)("description",this.addNew.description)});this.isEdit?this.PublicationTypeService.updateAction(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Publication Type Successfully  ",g.d.success)})):this.PublicationTypeService.newAction(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Publication Type Successfully  ",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.disableSaveForDescriptionmsg=!1,this.addNew=Object.assign({},this.new)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveGroupId=!1,this.disableSaveForDescription=!0,this.disableSaveForDescriptionmsg=!1,this.addNew=Object.assign({},t,{name:Object(D.e)("name",t.name,this.originalData)}),console.log(this.addNew+"Helooooooooooooooooo"),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.PublicationTypeService.updateAction(a).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t,console.log(this.selectedRowforDelete+"selectedRowforDelete")}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.PublicationTypeService.deleteAcion(this.selectedRowforDelete.publicationTypeId,this.userName).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted Publication Type Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;alert(JSON.stringify(t)),this.PublicationTypeService.historyintegration(t.publicationTypeId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=PublicationType&fileName=PublicationType.xlsx";window.location.assign(t)}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("PublicationType","PublicationTypeId",this.restorerecord.publicationTypeId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"customExcelUpload",value:function(t){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();rn.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:M.a},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:sn.a},{type:m.b},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],rn.prototype,"modal",void 0),rn=n.b([Object(s.Component)({selector:"app-publication-type",template:n.c(a("ovBF")).default,animations:[h.a],styles:[n.c(a("DE1C")).default]})],rn);var on=a("czqF"),ln=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.commonService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.documentTypeService=l,this.dialog=d,this.masterComapnyService=c,this.configurations=u,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"name",header:"Name"},{field:"description",header:"Description"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGroupId=!1,this.disableSaveForDescription=!1,this.disableSaveForDescriptionmsg=!1,this.new={name:"",description:"",masterCompanyId:1,isActive:!0,memo:""},this.addNew=Object.assign({},this.new),this.currentstatus="Active",this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.getList(),this.breadCrumb.currentUrl="/singlepages/singlepages/app-document-type",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"getList",value:function(){var t=this;this.documentTypeService.getAllWorkFlows().subscribe((function(e){t.originalTableData=e[0],t.getListByStatus(t.status?t.status:t.currentstatus)}))}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"getChange",value:function(){0==this.disableSaveForDescriptionmsg&&(this.disableSaveForDescription=!1)}},{key:"filterDescription",value:function(t){this.descriptionList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.name.toLowerCase().includes(t.query.toLowerCase())})));this.descriptionList=e}},{key:"selectedDescription",value:function(t){if(t.description!==this.selectedRecordForEdit){var e=Object(D.k)("Name",t,this.selectedRecordForEdit);this.disableSaveForDescription=!e,this.disableSaveForDescriptionmsg=!e}else this.disableSaveForDescription=!1,this.disableSaveForDescriptionmsg=!1}},{key:"checkGroupDescriptionExists",value:function(t){for(var e=0;e<this.originalData.length;e++){if(t==this.originalData[e].name){var a=Object(D.k)("Name",t,this.selectedRecordForEdit);return this.disableSaveForDescription=!a,void(this.disableSaveForDescriptionmsg=!a)}this.disableSaveForDescription=!1,this.disableSaveForDescriptionmsg=!1}}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,name:Object(D.a)("name",this.addNew.name),description:Object(D.a)("description",this.addNew.description)});this.isEdit?this.documentTypeService.updateAction(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Document Type Successfully  ",g.d.success)})):this.documentTypeService.newAction(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  New Document Type Successfully  ",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.disableSaveForDescriptionmsg=!1,this.addNew=Object.assign({},this.new)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveGroupId=!1,this.disableSaveForDescription=!0,this.disableSaveForDescriptionmsg=!1,this.addNew=Object.assign({},t,{name:Object(D.e)("name",t.name,this.originalData)}),console.log(this.addNew+"Helooooooooooooooooo"),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.documentTypeService.updateAction(a).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t,console.log(this.selectedRowforDelete+"selectedRowforDelete")}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.documentTypeService.deleteAcion(this.selectedRowforDelete.documentTypeId,this.userName).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted Document Type Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.documentTypeService.historyintegration(t.documentTypeId).subscribe((function(t){e.auditHistory=t}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("DocumentType","DocumentTypeId",this.restorerecord.documentTypeId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=DocumentType&fileName=DocumentType.xlsx";window.location.assign(t)}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.documentTypeService.IntegrationCustomUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.getList(),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();ln.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:M.a},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:on.a},{type:m.b},{type:b.a},{type:A.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],ln.prototype,"modal",void 0),ln=n.b([Object(s.Component)({selector:"app-document-type",template:n.c(a("7E03")).default,animations:[h.a],styles:[n.c(a("IdXp")).default]})],ln);var dn=a("i+oX"),cn=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.commonService=n,this.modalService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.dialog=l,this.masterComapnyService=d,this.glCashFlowClassificationService=c,this.configurations=u,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"nodeTypeName",header:"Node Type Name"},{field:"description",header:"Description"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGLCFName=!1,this.disableSaveForEdit=!1,this.currentstatus="Active",this.new={nodeTypeName:"",description:"",masterCompanyId:1,isActive:!0,isDelete:0,memo:""},this.addNew=Object.assign({},this.new),this.disableSaveGLCFNameSave=!1,this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.loadAllSiteData(event),this.breadCrumb.currentUrl="/singlepages/singlepages/app-node-type",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset()}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;a.length>0&&(this.formData.append("file",a[0]),this.glCashFlowClassificationService.getGLCashFlowClassificationFileUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.loadAllSiteData(e.constantFilters()),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=NodeType&fileName=NodeType.xlsx";window.location.assign(t)}},{key:"loadAllSiteData",value:function(t){var e=this;this.lazyLoadEventData=t;var a=parseInt(t.first)/t.rows;this.pageIndex=a,this.pageSize=t.rows,t.first=a,this.loadingIndicator=!0,null==t.globalFilter&&(t.globalFilter="");var n=Object.assign({},t,{filters:Object(D.j)(t.filters)});this.glCashFlowClassificationService.search(n).subscribe((function(t){e.originalTableData=t[0].results,e.getListByStatus(e.status?e.status:e.currentstatus)}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"constantFilters",value:function(){return{first:0,rows:10,sortField:void 0,sortOrder:1,filters:"",globalFilter:"",multiSortMeta:void 0}}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkGLCFNameExists",value:function(t,e){Object(D.m)(t,e,this.originalData,this.selectedRecordForEdit).length>0?(this.disableSaveGLCFName=!0,this.disableSaveGLCFNameSave=!0):(this.disableSaveGLCFName=!1,this.disableSaveGLCFNameSave=!1)}},{key:"filterGLCFName",value:function(t){this.glCashFlowList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.nodeTypeName.toLowerCase().includes(t.query.toLowerCase())})));this.glCashFlowList=e}},{key:"selectedGLCFName",value:function(t){var e=Object(D.k)("nodeTypeName",t,this.selectedRecordForEdit);this.disableSaveGLCFName=!e,this.disableSaveGLCFNameSave=!e}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,nodeTypeName:Object(D.a)("nodeTypeName",this.addNew.nodeTypeName)});this.isEdit?this.glCashFlowClassificationService.updateCashFlowClassification(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.loadAllSiteData(t.constantFilters()),t.alertService.showMessage("Success","Updated Node Type Successfully",g.d.success)})):this.glCashFlowClassificationService.newGlCashFlowClassification(e).subscribe((function(){t.resetForm(),t.loadAllSiteData(t.constantFilters()),t.alertService.showMessage("Success","Added New Node Type Successfully",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.addNew=Object.assign({},this.new),this.disableSaveGLCFName=!1,this.disableSaveGLCFNameSave=!1}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveGLCFName=!1,this.disableSaveGLCFNameSave=!1,this.disableSaveForEdit=!0,this.addNew=Object.assign({},t,{nodeTypeName:Object(D.d)("nodeTypeId",t.nodeTypeId,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.glCashFlowClassificationService.updateCashFlowClassification(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.glCashFlowClassificationService.deleteCashFlowClassification(this.selectedRowforDelete.nodeTypeId,this.userName).subscribe((function(){e.loadAllSiteData(e.constantFilters()),e.alertService.showMessage("Success","Deleted Node Type Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.glCashFlowClassificationService.historyGlCashFlowClassification(t.nodeTypeId).subscribe((function(t){e.auditHistory=t[0]}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("NodeType","NodeTypeId",this.restorerecord.nodeTypeId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadAllSiteData(t.lazyLoadEventData),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();cn.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:M.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:m.b},{type:b.a},{type:dn.a},{type:A.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],cn.prototype,"modal",void 0),cn=n.b([Object(s.Component)({selector:"app-node-type",template:n.c(a("lena")).default,animations:[h.a],styles:[n.c(a("RzBQ")).default]})],cn);var un=a("oidc"),pn=function(){function t(e,a,n,s,i,r,o){_classCallCheck(this,t),this.breadCrumb=e,this.authService=a,this.modalService=n,this.commonService=s,this.alertService=i,this.employeeService=r,this.configurations=o,this.originalData=[],this.isEdit=!1,this.localCollection=[],this.pageIndex=0,this.pageSize=10,this.headers=[{field:"trainingType",header:" Training Type "},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveEmpTrainingType=!1,this.disableSaveDescriptrion=!1,this.actionamecolle=[],this.new={description:"",masterCompanyId:1,isActive:!0,memo:"",trainingType:""},this.addNew=Object.assign({},this.new),this.currentstatus="Active",this.disableSaveForEdit=!1,this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.breadCrumb.currentUrl="/singlepages/singlepages/app-employee-training-type",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"loadAllTryningData",value:function(t){var e=this;this.lazyLoadEventData=t;var a=parseInt(t.first)/t.rows;this.pageIndex=a,this.pageSize=t.rows,t.first=a,this.loadingIndicator=!0,null==t.globalFilter&&(t.globalFilter="");var n=Object.assign({},t,{filters:Object(D.j)(t.filters)});this.employeeService.getSearchData(n).subscribe((function(t){e.originalTableData=t[0].results,e.getListByStatus(e.status?e.status:e.currentstatus)}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"constantFilters",value:function(){return{first:0,rows:10,sortField:void 0,sortOrder:1,filters:"",globalFilter:"",multiSortMeta:void 0}}},{key:"getmemo",value:function(){this.disableSaveForEdit=!1}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset(),this.getList()}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;console.log(a),a.length>0&&(this.formData.append("file",a[0]),this.employeeService.EmployeeExpertiseFileUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a;var n=e.existingRecordsResponse[0].uploadStatus;"Duplicate"==n&&e.alertService.showMessage("Duplicate","Duplicate Records found ",g.d.success),"Success"===n&&e.alertService.showMessage("Success","Success Records found ",g.d.success),"Failed"===n&&e.alertService.showMessage("Failed","Failed ",g.d.success),e.getList()})))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=EmployeeTrainingType&fileName=employeeTrainingType.xlsx";window.location.assign(t)}},{key:"getList",value:function(){this.loadAllTryningData(this.constantFilters())}},{key:"changePage",value:function(t){console.log(t),this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkEmployeeTrainingTypeExists",value:function(t){if(""!=t.target.value){var e=t.target.value.toLowerCase();this.selectedSite&&(e==this.selectedSite.toLowerCase()?this.disableSaveEmpTrainingType=!0:this.disableSaveEmpTrainingType=!1)}}},{key:"filterEmployeeTrainingType",value:function(t){this.localCollection=[];for(var e=0;e<this.originalData.length;e++){var a=this.originalData[e].trainingType;0==a.toLowerCase().indexOf(t.query.toLowerCase())&&(this.actionamecolle.push([{employeeTrainingTypeId:this.originalData[e].employeeTrainingTypeId,trainingType:a}]),this.localCollection.push(a))}}},{key:"selectedEmpTrainingType",value:function(t){if(this.originalData)for(var e=0;e<this.actionamecolle.length;e++)t==this.actionamecolle[e][0].trainingType&&(this.disableSaveEmpTrainingType=!0,this.disableSaveDescriptrion=!0,this.selectedSite=t)}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,trainingType:Object(D.a)("trainingType",this.addNew.trainingType),description:Object(D.a)("description",this.addNew.description)});this.isEdit?this.employeeService.updateAction(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added  Employee TrainingType  Successfully  ",g.d.success)})):this.employeeService.newAction(e).subscribe((function(){t.resetForm(),t.getList(),t.alertService.showMessage("Success","Added Employee TrainingType  Successfully  ",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.disableSaveEmpTrainingType=!1,this.disableSaveDescriptrion=!1,this.addNew=Object.assign({},this.new)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveForEdit=!0,this.disableSaveDescriptrion=!0,this.addNew=Object.assign({},t),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.employeeService.updateAction(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully  ",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.employeeService.deleteAcion(this.selectedRowforDelete.employeeTrainingTypeId,this.selectedRowforDelete.userName).subscribe((function(){e.getList(),e.alertService.showMessage("Success","Deleted  Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.employeeService.historyAcion(t.employeeTrainingTypeId).subscribe((function(t){e.auditHistory=t[0],console.log(e.auditHistory)}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("EmployeeTrainingType","EmployeeTrainingTypeId",this.restorerecord.employeeTrainingTypeId).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.getList(),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();pn.ctorParameters=function(){return[{type:u.a},{type:f.a},{type:w.c},{type:M.a},{type:g.b},{type:un.a},{type:A.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],pn.prototype,"modal",void 0),pn=n.b([Object(s.Component)({selector:"app-employee-training-type",template:n.c(a("LZLZ")).default,animations:[h.a],styles:[n.c(a("efKV")).default]})],pn);var mn=a("lA/g"),hn=function(){function t(e,a,n,s,i,r,o,l,d,c,u){_classCallCheck(this,t),this.breadCrumb=e,this.commonService=a,this.authService=n,this.modalService=s,this.activeModal=i,this._fb=r,this.alertService=o,this.dialog=l,this.masterComapnyService=d,this.master1099Services=c,this.configurations=u,this.originalData=[],this.isEdit=!1,this.pageIndex=0,this.pageSize=10,this.headers=[{field:"name",header:"Master 1099 Name"},{field:"description",header:"Description"},{field:"memo",header:"Memo"}],this.selectedColumns=this.headers,this.formData=new FormData,this.auditHistory=[],this.disableSaveGLCFName=!1,this.new={name:"",description:"",masterCompanyId:1,isActive:!0,isDelete:0,memo:""},this.addNew=Object.assign({},this.new),this.currentstatus="Active",this.disableSaveGLCFNameSave=!1,this.originalTableData=[],this.currentDeletedstatus=!1,this.status="Active",this.restorerecord={}}return _createClass(t,[{key:"ngOnInit",value:function(){this.breadCrumb.currentUrl="/singlepages/singlepages/app-master-1099",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl)}},{key:"getPageCount",value:function(t,e){return Math.ceil(t/e)}},{key:"columnsChanges",value:function(){this.refreshList()}},{key:"refreshList",value:function(){this.table.reset()}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"customExcelUpload",value:function(t){var e=this,a=t.target.files;a.length>0&&(this.formData.append("file",a[0]),this.master1099Services.master1099FileUpload(this.formData).subscribe((function(a){t.target.value="",e.formData=new FormData,e.existingRecordsResponse=a,e.loadAllSiteData(e.constantFilters()),e.alertService.showMessage("Success","Successfully Uploaded  ",g.d.success)})))}},{key:"sampleExcelDownload",value:function(){var t=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=master1099&fileName=1099.xlsx";window.location.assign(t)}},{key:"loadAllSiteData",value:function(t){var e=this;this.lazyLoadEventData=t;var a=parseInt(t.first)/t.rows;this.pageIndex=a,this.pageSize=t.rows,t.first=a,this.loadingIndicator=!0,null==t.globalFilter&&(t.globalFilter="");var n=Object.assign({},t,{filters:Object(D.j)(t.filters)});this.master1099Services.search(n).subscribe((function(t){e.originalTableData=t[0].results,e.getListByStatus(e.status?e.status:e.currentstatus)}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"onDataLoadFailed",value:function(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"constantFilters",value:function(){return{first:0,rows:10,sortField:void 0,sortOrder:1,filters:"",globalFilter:"",multiSortMeta:void 0}}},{key:"changePage",value:function(t){console.log(t),t.first,t.rows,this.pageSize=t.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"checkGLCFNameExists",value:function(t,e){Object(D.m)(t,e,this.glCashFlowList,this.isEdit).length>0?(this.disableSaveGLCFName=!0,this.disableSaveGLCFNameSave=!0):(this.disableSaveGLCFName=!1,this.disableSaveGLCFNameSave=!1)}},{key:"filterGLCFName",value:function(t){this.glCashFlowList=this.originalData;var e=_toConsumableArray(this.originalData.filter((function(e){return e.name.toLowerCase().includes(t.query.toLowerCase())})));this.glCashFlowList=e}},{key:"selectedGLCFName",value:function(t){var e=Object(D.k)("name",t,this.isEdit);this.disableSaveGLCFName=!e,this.disableSaveGLCFNameSave=!e}},{key:"save",value:function(){var t=this,e=Object.assign({},this.addNew,{createdBy:this.userName,updatedBy:this.userName,name:Object(D.a)("name",this.addNew.name)});this.isEdit?this.master1099Services.updateMaster1099(e).subscribe((function(){t.selectedRecordForEdit=void 0,t.isEdit=!1,t.resetForm(),t.loadAllSiteData(t.constantFilters()),t.alertService.showMessage("Success","Updated Master 1099 Successfully",g.d.success)})):this.master1099Services.newGlCashFlowClassification(e).subscribe((function(){t.resetForm(),t.loadAllSiteData(t.constantFilters()),t.alertService.showMessage("Success","Added New Master 1099 Successfully",g.d.success)}))}},{key:"resetForm",value:function(){this.isEdit=!1,this.selectedRecordForEdit=void 0,this.addNew=Object.assign({},this.new),this.disableSaveGLCFName=!1,this.disableSaveGLCFNameSave=!1}},{key:"getmemo",value:function(t){0==this.disableSaveGLCFName&&(this.disableSaveGLCFName=!1,this.disableSaveGLCFNameSave=!1)}},{key:"edit",value:function(t){console.log(t),this.isEdit=!0,this.disableSaveGLCFName=!1,this.disableSaveGLCFNameSave=!0,this.addNew=Object.assign({},t,{name:Object(D.d)("master1099Id",t.master1099Id,this.originalData)}),this.selectedRecordForEdit=Object.assign({},this.addNew)}},{key:"changeStatus",value:function(t){var e=this;console.log(t);var a=Object.assign({},t);this.master1099Services.updateMaster1099(a).subscribe((function(){e.alertService.showMessage("Success","Updated Status Successfully",g.d.success)}))}},{key:"viewSelectedRow",value:function(t){console.log(t),this.viewRowData=t}},{key:"resetViewData",value:function(){this.viewRowData=void 0}},{key:"delete",value:function(t){this.selectedRowforDelete=t}},{key:"deleteConformation",value:function(t){var e=this;"Yes"===t?this.master1099Services.deleteMaster1099(this.selectedRowforDelete.master1099Id).subscribe((function(){e.loadAllSiteData(e.constantFilters()),e.alertService.showMessage("Success","Deleted Master 1099 Successfully  ",g.d.success)})):this.selectedRowforDelete=void 0}},{key:"getAuditHistoryById",value:function(t){var e=this;this.master1099Services.historyGlCashFlowClassification(t.master1099Id).subscribe((function(t){e.auditHistory=t[0]}))}},{key:"getColorCodeForHistory",value:function(t,e,a){var n=this.auditHistory,s=n.length;if(t>=0&&t<=s)return t+1===s||n[t+1][e]===a}},{key:"getDeleteListByStatus",value:function(t){this.currentDeletedstatus=!!t,this.getListByStatus(this.status?this.status:this.currentstatus)}},{key:"getListByStatus",value:function(t){var e=[];"Active"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){1==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){1==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"InActive"==t?(this.status=t,0==this.currentDeletedstatus?this.originalTableData.forEach((function(t){0==t.isActive&&0==t.isDeleted&&e.push(t)})):this.originalTableData.forEach((function(t){0==t.isActive&&1==t.isDeleted&&e.push(t)})),this.originalData=e):"ALL"==t&&(this.status=t,0==this.currentDeletedstatus?(this.originalTableData.forEach((function(t){0==t.isDeleted&&e.push(t)})),this.originalData=e):(this.originalTableData.forEach((function(t){1==t.isDeleted&&e.push(t)})),this.originalData=e)),this.totalRecords=this.originalData.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"restore",value:function(t,e){this.restorerecord=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"restoreRecord",value:function(){var t=this;this.commonService.updatedeletedrecords("Master1099","Master1099Id",this.restorerecord.master1099Id).subscribe((function(e){t.currentDeletedstatus=!0,t.modal.close(),t.loadAllSiteData(t.lazyLoadEventData),t.alertService.showMessage("Success","Successfully Updated Status",g.d.success)}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),t}();hn.ctorParameters=function(){return[{type:u.a},{type:M.a},{type:f.a},{type:w.c},{type:w.b},{type:r.FormBuilder},{type:g.b},{type:m.b},{type:b.a},{type:mn.a},{type:A.a}]},n.b([Object(s.ViewChild)("dt",{static:!1})],hn.prototype,"modal",void 0),hn=n.b([Object(s.Component)({selector:"app-master1099",template:n.c(a("uPCL")).default,animations:[h.a],styles:[n.c(a("WLdk")).default]})],hn);var vn=[{path:"singlepages",component:p,children:[{path:"asset-status",component:va,data:{title:"Asset Status"}},{path:"asset-location",component:fa,data:{title:"Asset Location"}},{path:"acquisition-type",component:Da,data:{title:"Asset Acquistion Type"}},{path:"app-tasks",component:S,data:{title:"Tasks"}},{path:"app-task-attributes",component:x,data:{title:"Task Attributes"}},{path:"app-ata-main",component:I,data:{title:"Ata Chapter"}},{path:"app-charges",component:ze,data:{title:"Charges"}},{path:"app-conditions",component:Ye,data:{title:"Conditions"}},{path:"app-credit-terms",component:R,data:{title:"Credit Terms"}},{path:"app-currency",component:N,data:{title:"Currency"}},{path:"app-customer-classification",component:U,data:{title:"Customer Classification"}},{path:"app-documents",component:z,data:{title:"Documents"}},{path:"app-employee-expertise",component:_,data:{title:"Employee Expertise"}},{path:"app-findings",component:$,data:{title:"Findings"}},{path:"app-asset-type",component:rt,data:{title:"Asset Class"}},{path:"app-asset-intangible-class",component:Z,data:{title:"Asset Intangible Class"}},{path:"app-stage-code",component:pt,data:{title:"Stage Code"}},{path:"app-gl-account-category",component:vt,data:{title:"GL Account Category"}},{path:"app-expenditure-category",component:ft,data:{title:"Expenditure Category"}},{path:"app-asset-attribute-type",component:St,data:{title:"Asset Attribute Type"}},{path:"app-asset-intangible-attribute-type",component:nt,data:{title:"Asset Intangible Attribute Type"}},{path:"app-integration",component:xt,data:{title:"Integration"}},{path:"app-item-classification",component:Mt,data:{title:"Item Classification"}},{path:"app-item-group",component:Pt,data:{title:"Item Group"}},{path:"app-job-title",component:Ft,data:{title:"Job Title"}},{path:"app-job-type",component:Wa,data:{title:"Job Type"}},{path:"app-priority",component:Ht,data:{title:"Priority"}},{path:"app-provision",component:Ot,data:{title:"Provision"}},{path:"app-publication",component:Wt,data:{title:"Publication"}},{path:"app-reason",component:Yt,data:{title:"Reason"}},{path:"app-tax-rate",component:Zt,data:{title:"Tax Rate"}},{path:"app-unit-of-measure",component:te,data:{title:"Unit of Measure"}},{path:"app-vendor-classification",component:ee.a,data:{title:"Vendor Classification"}},{path:"app-work-performed",component:ne,data:{title:"Work Performed"}},{path:"app-work-scope",component:ie,data:{title:"Work Scope"}},{path:"edit-action",component:Ee,data:{title:"Edit Action"}},{path:"app-defaultmessage",component:We,data:{title:"Defualt message"}},{path:"app-tax-type",component:qe,data:{title:"Tax type"}},{path:"app-action-attribute-mapping",component:re,data:{title:"Action Attribute Mapping"}},{path:"app-ata-sub-chapter1",component:le,data:{title:"Ata Sub Chapter"}},{path:"app-ata-sub-chapter2",component:ue,data:{title:"Ata Sub Chapter 2"}},{path:"app-site",component:ta,data:{title:"Site"}},{path:"app-location",component:ge,data:{title:"Location"}},{path:"app-shelf",component:we,data:{title:"Shelf"}},{path:"app-shipvia",component:De,data:{title:"Ship Via"}},{path:"app-bin",component:xe,data:{title:"Bin"}},{path:"app-capabilities",component:Ce,data:{title:"Capabilities"}},{path:"app-financial-statement-mapping",component:Ae,data:{title:"Financial Statement Mapping"}},{path:"app-gl-account-class",component:Te,data:{title:"Gl Account Class"}},{path:"app-gl-cash-flow-classification",component:Re,data:{title:"Gl CashFlow Classification"}},{path:"app-node-type",component:cn,data:{title:"Node Type"}},{path:"app-master-1099",component:hn,data:{title:"Master 1099"}},{path:"app-gl-financial-statement",component:Pe,data:{title:"GL Financial Statement"}},{path:"app-journal-approvals",component:Ne,data:{title:"Journal Approvals"}},{path:"app-rfq-engine",component:Fe,data:{title:"RFQ Engine"}},{path:"app-warehouse",component:aa,data:{title:"Ware House"}},{path:"app-manufacturer",component:sa,data:{title:"Manufacturer"}},{path:"app-vendorcapabilities",component:oa,data:{title:"Vendor Setup"}},{path:"app-labor-and-overhead-cost-setup",component:ca,data:{title:"Labor And Overhead Cost SetUp"}},{path:"app-certification-type",component:pa,data:{title:"Certification Type"}},{path:"app-depriciation-method",component:ka,data:{title:"Depreciation Method"}},{path:"app-adjustment-reason",component:Qe,data:{title:"Adjustment Reason"}},{path:"app-disposal-type",component:Aa,data:{title:"Asset Disposal Type"}},{path:"app-asset-dep-convention-type",component:Ta,data:{title:"Depreciation Convention"}},{path:"app-depreciation-intervals",component:Pa,data:{title:"Depreciation Intervals"}},{path:"app-aircraft-manufacturer",component:Na,data:{title:"Aircraft Manufacturer"}},{path:"app-aircraft-model",component:Fa,data:{title:"Aircraft Model"}},{path:"app-dashnumber",component:Ea,data:{title:"Dash Numbers"}},{path:"app-percent",component:Ga,data:{title:"Percent"}},{path:"app-create-publication",component:Oa,data:{title:"create publication"}},{path:"app-create-publication/edit/:id",component:Oa,data:{title:"create publication"}},{path:"app-vendor-process1099",component:Ya,data:{title:"Vendor Process1099"}},{path:"app-caps-report",component:Ka,data:{title:"Caps Report"}},{path:"app-capability-type",component:Qa,data:{title:"Capability Type"}},{path:"app-lead-source",component:Xa,data:{title:"Lead Source Setup"}},{path:"app-tag-type",component:en,data:{title:"Tag Type Setup"}},{path:"app-publication-type",component:rn,data:{title:"Publication Type"}},{path:"app-document-type",component:ln,data:{title:"Document Type Setup"}},{path:"app-teardown-reason",component:nn,data:{title:"Tear down Reason Setup"}},{path:"app-employee-training-type",component:pn,data:{title:"Employee Training Type"}}]}],bn=function t(){_classCallCheck(this,t)};bn=n.b([Object(s.NgModule)({imports:[c.RouterModule.forChild(vn)],exports:[c.RouterModule,Ua.CalendarModule,ja.InputTextModule,Va.FileUploadModule,za.CheckboxModule],providers:[f.a,He.a]})],bn);var gn=a("DgWh"),fn=a("8YFm"),yn=a("MCl+"),wn=a("CYTX"),Dn=a("Jfay"),Sn=a("sa3O"),kn=a("I0ai"),xn=a("AkAD"),Cn=a("ldMm"),An=a("wB/n"),Mn=a("a4ce"),In=a("3MQt"),Tn=a("leyI"),Ln=a("WP8D"),Rn=a("hnPq"),Pn=a("Gia7"),Nn=a("I/gs"),Fn=a("ffFb"),En=a("lVB5"),Hn=a("fJPa"),Bn=a("vBog"),On=a("O5oD"),Un=a("Yqac"),jn=a("P4X9"),Vn=a("eNCC"),zn=a("lSuX"),Gn=a("qbUZ"),_n=a("t2eO"),Wn=a("YsG+"),qn=function(){function t(){_classCallCheck(this,t),this.goPrev=new s.EventEmitter,this.goNext=new s.EventEmitter,this.goPage=new s.EventEmitter}return _createClass(t,[{key:"getMin",value:function(){return this.perPage*this.page-this.perPage+1}},{key:"getMax",value:function(){var t=this.perPage*this.page;return t>this.count&&(t=this.count),t}},{key:"onPage",value:function(t){this.goPage.emit(t)}},{key:"onPrev",value:function(){this.goPrev.emit(!0)}},{key:"onNext",value:function(t){this.goNext.emit(t)}},{key:"totalPages",value:function(){return Math.ceil(this.count/this.perPage)||0}},{key:"lastPage",value:function(){return this.perPage*this.page>this.count}},{key:"getPages",value:function(){var t=Math.ceil(this.count/this.perPage),e=this.page||1,a=this.pagesToShow||9,n=[];n.push(e);for(var s=a-1,i=0;i<s;i++)n.length<a&&Math.min.apply(null,n)>1&&n.push(Math.min.apply(null,n)-1),n.length<a&&Math.max.apply(null,n)<t&&n.push(Math.max.apply(null,n)+1);return n.sort((function(t,e){return t-e})),n}}]),t}();n.b([Object(s.Input)()],qn.prototype,"page",void 0),n.b([Object(s.Input)()],qn.prototype,"count",void 0),n.b([Object(s.Input)()],qn.prototype,"perPage",void 0),n.b([Object(s.Input)()],qn.prototype,"loading",void 0),n.b([Object(s.Input)()],qn.prototype,"pagesToShow",void 0),n.b([Object(s.Output)()],qn.prototype,"goPrev",void 0),n.b([Object(s.Output)()],qn.prototype,"goNext",void 0),n.b([Object(s.Output)()],qn.prototype,"goPage",void 0),qn=n.b([Object(s.Component)({selector:"app-pagination",template:n.c(a("jQJe")).default,styles:[n.c(a("r7lI")).default]})],qn),a("tcIq"),a("H4X+"),a("AJX/");var $n=function(){function t(e,a){_classCallCheck(this,t),this.router=e,this.http=a}return _createClass(t,[{key:"getMessages",value:function(t){return t}}]),t}();$n.ctorParameters=function(){return[{type:c.Router},{type:pe.HttpClient}]},$n=n.b([Object(s.Injectable)()],$n);var Yn=a("r5xa"),Kn=a("agHx"),Jn=a("HkNw");a.d(e,"SinglePgesModule",(function(){return Qn}));var Qn=function t(){_classCallCheck(this,t)};Qn=n.b([Object(s.NgModule)({imports:[i.a,Kn.KeyFilterModule,r.FormsModule,r.ReactiveFormsModule,l.a,o.b,d.CommonModule,bn,fn.TableModule,Yn.TooltipModule,yn.ButtonModule,wn.SelectButtonModule,ja.InputTextModule,Dn.MultiSelectModule,Sn.AutoCompleteModule,gn.EditorModule,kn.InputSwitchModule,za.CheckboxModule,xn.BreadcrumbModule,Cn.TreeTableModule,za.CheckboxModule,An.TreeModule,Mn.DialogModule,Vn.a,Wn.PaginatorModule],declarations:[Oa,p,Ga,en,nn,S,Xa,x,I,R,N,U,z,_,$,Z,nt,rt,pt,vt,ft,St,xt,Mt,Pt,Ft,Wa,Ht,ln,Ot,Wt,Yt,Zt,te,ee.a,rn,ne,ie,Ee,We,ze,qe,Ye,re,le,ue,ta,xe,Ce,Ae,Te,Re,cn,hn,Pe,Ne,Fe,aa,Qe,vt,sa,oa,ge,ca,we,De,pa,va,fa,Da,Aa,ka,Ta,Pa,Na,Fa,Ea,qn,Ya,Ka,Qa,pn],providers:[L.a,Jn.a,u.a,ha.a,In.a,In.a,ga.a,Tn.a,wa.a,Ln.a,Dt.a,Rn.a,Pn.a,xa.a,La.a,Nn.a,Ia.a,Fn.a,st.a,En.a,Q.a,Hn.a,tt.a,Bn.a,lt.a,ht.a,On.a,gt.a,Un.a,wt.a,jn.a,zt.a,zn.a,Gt.a,Gn.a,_t.a,_n.a,$n,M.a,$a,Ja],exports:[i.a,r.FormsModule,r.ReactiveFormsModule,l.a,o.b],entryComponents:[]})],Qn)},"YsG+":function(t,e,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),function(t){for(var a in t)e.hasOwnProperty(a)||(e[a]=t[a])}(a("mU/a"))},ZDcS:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                <div class="card">\r\n                    <div class="card-body">\r\n                        \x3c!--header--\x3e\r\n                        <div class="inline-block display-flex">\r\n                            \x3c!--Set Title--\x3e\r\n                            <h3 class="po-head lead">{{header}}</h3>\r\n                            &nbsp;&nbsp;\r\n                            \x3c!--Step x: Customize the data-target--\x3e\r\n                            <a class="plusicon-cstm new-margin" matTooltip="Add {{rowName}}" matTooltipPosition="above" data-target="#editItem"\r\n                               data-toggle="modal" (click)="addNewItem()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div>\r\n                        <div class="form-row status-radio">\r\n                            <div class="col-md-8">\r\n                                <div class="form-group">\r\n                                    <label class="radiobtn-label">Status:</label>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                            <span class="checkmark"></span>Active\r\n                                        </label>\r\n                                    </div>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                            <span class="checkmark"></span>In-Active\r\n                                        </label>\r\n                                    </div>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                            <span class="checkmark"></span>All\r\n                                        </label>\r\n                                    </div>\r\n                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                          <label style="width: auto !important;margin-top: 3px;">\r\n                                            \x3c!--  --\x3e\r\n                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                             (click)="getDeleteListByStatus($event.target.checked)"\r\n                                              />\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                          Show  Deleted List \r\n                                          </label>\r\n                                        </div>\r\n                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                \r\n                        \x3c!--Step x: Add/update table taking grid data (itemList) and selected columns --\x3e\r\n                        \x3c!--(onLazyLoad)="changePage($event)"--\x3e\r\n                        <p-table #dt\r\n                                 class="rpo-table-cstm rro-table-cstm"\r\n                                 [value]="itemList"\r\n                                 [first]="pageIndex"\r\n                                 [rows]="pageSize"\r\n                                 [paginator]="true"\r\n                                 [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]"\r\n                                 [columns]="selectedColumns"\r\n                                 selectionMode="multiple"\r\n                                 [metaKeySelection]="true"\r\n                                 [resizableColumns]="true"\r\n                                 [reorderableColumns]="true"\r\n                                 [scrollable]="true"\r\n                                 [totalRecords]="totalRecords"\r\n                                 scrollHeight="450px">\r\n                            \x3c!--caption--\x3e\r\n                            <ng-template pTemplate="caption">\r\n                                <div style="text-align: right; margin-left: -6px !important;">\r\n                                    \x3c!--column names dropdown taking selectedColumns--\x3e\r\n                                    \x3c!--Step x: Update the dropdown with options--\x3e\r\n                                    \x3c!--(onChange)="reorderValues($event)"--\x3e\r\n                                    \x3c!--to-do:add (change)=>--\x3e\r\n                                    <p-multiSelect [maxSelectedLabels]="2"\r\n                                                   [options]="columnHeaders"\r\n                                                   optionLabel="header"\r\n                                                   [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                                   selectedItemsLabel="{0} columns selected"\r\n                                                   defaultLabel="Choose Columns">\r\n                                    </p-multiSelect>\r\n                                    <button type="button" class="btn btn-primary"  style="padding: 5px 12px !important;" matTooltip="Download Data" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary"  style="padding: 5px 12px !important;" matTooltip="Download Selected Data" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" label="Export Selected Data" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    \x3c!--\r\n                                    <div class="excel-upload excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" class="uploaddoc upload-file" data-multiple-caption="{count} files selected"\r\n                                               accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" (change)="bulkUpload($event)">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>--\x3e\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()" matTooltip="Download Sample File" matTooltipPosition="above">Sample File Download</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </ng-template>\r\n                            \x3c!--header with search--\x3e\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position: sticky" *ngIf="selectedColumns.length> 0">Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position: sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            \x3c!--body--\x3e\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="viewItemDetailsClick(viewClick, rowData)">\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                       \r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']"\r\n                                                       name="isActive{{rowIndex}}" (onChange)="toggleActiveStatus(rowData)"\r\n                                                       [matTooltip]="rowData[\'isActive\'] ? \'Active\' : \'Inactive\' " matTooltipPosition="above">\r\n                                        </p-inputSwitch>\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" \r\n                                            (click)="viewItemDetails(rowData)" data-target="#view" data-toggle="modal" matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \x3c!--Step x: update the on-click event--\x3e\r\n                                       \r\n                                        <span data-target="#editItem" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="showItemEdit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                        (click)="showItemEdit(rowData)" matTooltip="Edit"\r\n                                         matTooltipPosition="above" data-target="#editItem"\r\n                                          data-toggle="modal">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="confirmItemDelete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete"\r\n                                         matTooltipPosition="above" (click)="confirmItemDelete(rowData)" \r\n                                         data-target="#delete" data-toggle="modal">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#itemHistory" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="showHistory(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" (click)="showHistory(rowData)" \r\n                                         data-target="#itemHistory" data-toggle="modal">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="itemList && itemList.length == 0 || itemList && itemList.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <div style="text-align: right;">\r\n                                    <label id="footer" class="footer1">Total:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                    <label id="footer" class="footer1">Pages Count:</label>\r\n                                    <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)"\r\n                                     [disabled]="true" pInputText type="text" />\r\n                                </div>\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \x3c!--to-do:use same modal to view, add, update, and delete--\x3e\r\n    \x3c!--Modal for view only--\x3e\r\n\r\n    <ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n      \r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n           \r\n        </div>\r\n        <div class="modal-body">\r\n            <strong>\r\n                Asset Intangible Attribute:\r\n                <span class="new-label">{{restorerecord.intangibleClass}}</span>\r\n            </strong>\r\n        </div>\r\n      \r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n      </ng-template> \r\n\r\n    <div #view *ngIf="itemDetails" class="modal fade" id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-sm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">\xd7</button>\r\n                    <h4 class="modal-title">{{rowName}} Details</h4>\r\n                </div>\r\n                <div class="modal-body viewform">\r\n                    <div class="col-sm-12">\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Intangible Class: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.assetIntangibleName}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Amortization Method: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.depreciationMethodName}}</span>\r\n                        </p>\r\n\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Intangible Life: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.intangibleLifeYears}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Amort Expense GL: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.amortExpenseGL}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Acc Amort Depr GL: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.accAmortdeprGL}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Intangible GL: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.intangibleGL}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Intangible Write Down: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.intangiblewritedDownGL}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Intangible Write Off: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.intangiblewritedoffGL}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Active: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.isActive ? \'true\' : \'false\'}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Legal Entity: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.selectedCompanyNames}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Created By: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.createdBy}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Created Date: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Last Updated By: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.updatedBy}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Last Updated Date: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    \x3c!--Step x: Modal for Edit--\x3e\r\n    <div #editItem id="editItem" class="modal fade editModal" role="dialog" *ngIf="currentModeOfOperation === 2 || currentModeOfOperation === 3" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">{{currentModeOfOperation === 3 ? "Edit" : "Add"}} {{rowName}} </h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <form #IntangibleAttrType="ngForm">\r\n                        <div class="form-group">\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="description" class="control-label">\r\n                                        Intangible Class\r\n                                        <span class="clr-red">*</span>\r\n                                    </label>\r\n\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    \x3c!--<p-autoComplete field="assetIntangibleName"\r\n                                                    [(ngModel)]="currentRow.assetIntangibleTypeId"\r\n                                                    name="assetIntangibleTypeId"\r\n                                                    [suggestions]="filteredAssetIntangibleTypes"\r\n                                                    (completeMethod)="filterIntangibleType($event)"\r\n                                                    [size]="30" [minLength]="1"\r\n                                                    (onSelect)="selectedIntangibleType($event)"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                    </p-autoComplete>--\x3e\r\n                                    <select name="assetTypeId" [(ngModel)]="currentRow.assetIntangibleTypeId"\r\n                                            (ngModelChange)="selectedIntangibleType($event)" required\r\n                                            (onBlur)="onBlurCheck($event, \'assetIntangibleTypeId\')">\r\n                                        <option *ngFor="let intangibleType of allAssetIntangibleTypes"\r\n                                                [ngValue]="intangibleType">\r\n                                            {{intangibleType.assetIntangibleName}}\r\n                                        </option>\r\n                                    </select>\r\n                                    <div *ngIf="recordExists && currentRow.assetIntangibleTypeId" class="clr-red">Already Exists</div>\r\n                                    <div class="clear"></div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="assetDepreciationMethodId" class="control-label">Amortization Method <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <select name="assetDepreciationMethodId" [(ngModel)]="currentRow.assetDepreciationMethodId"\r\n                                            (ngModelChange)="onBlurCheck($event, \'assetDepreciationMethodId\')" required>\r\n                                        <option *ngFor="let depMethod of depreciationMethodList" [ngValue]="depMethod">{{depMethod.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="assetLife" class="control-label">Intangible Life <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <input type="number" min="0" max="12" name="intangibleLifeYears" class="form-control"\r\n                                           [(ngModel)]="currentRow.intangibleLifeYears"\r\n                                           (ngModelChange)="onBlurCheck($event, \'intangibleLifeYears\')"\r\n                                           required>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="assetAmortizationIntervalId" class="control-label">Amort Frequency<span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <select name="assetAmortizationIntervalId" [(ngModel)]="currentRow.assetAmortizationIntervalId"\r\n                                            (ngModelChange)="onBlurCheck($event, \'assetAmortizationIntervalId\')"\r\n                                            required>\r\n                                        <option *ngFor="let freq of depreciationFreqList" [ngValue]="freq">{{freq.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="description" class="control-label">\r\n                                        Amort Expense GL\r\n                                        <span class="clr-red">*</span>\r\n                                    </label>\r\n\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <p-autoComplete field="accountCode"\r\n                                                    [(ngModel)]="currentRow.amortExpenseGLAccountId"\r\n                                                    name="amortExpenseGLAccountId"\r\n                                                    [suggestions]="filteredGLAccountList" (completeMethod)="filterGLAccount($event)"\r\n                                                    [size]="30" [minLength]="1"\r\n                                                    (ngModelChange)="onBlurCheck($event, \'amortExpenseGLAccountId\')"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="description" class="control-label">\r\n                                        Acc Amort Depr GL\r\n                                        <span class="clr-red">*</span>\r\n                                    </label>\r\n\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <p-autoComplete field="accountCode"\r\n                                                    [(ngModel)]="currentRow.accAmortDeprGLAccountId"\r\n                                                    name="accAmortDeprGLAccountId"\r\n                                                    [suggestions]="filteredGLAccountList" (completeMethod)="filterGLAccount($event)"\r\n                                                    [size]="30" [minLength]="1"\r\n                                                    (ngModelChange)="onBlurCheck($event, \'accAmortDeprGLAccountId\')"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="description" class="control-label">\r\n                                        Intangible GL\r\n                                        <span class="clr-red">*</span>\r\n                                    </label>\r\n\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <p-autoComplete field="accountCode"\r\n                                                    [(ngModel)]="currentRow.intangibleGLAccountId"\r\n                                                    name="intangibleGLAccountId"\r\n                                                    [suggestions]="filteredGLAccountList" (completeMethod)="filterGLAccount($event)"\r\n                                                    [size]="30" [minLength]="1"\r\n                                                    (ngModelChange)="onBlurCheck($event, \'intangibleGLAccountId\')"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="description" class="control-label">\r\n                                        Intangible Write Down GL\r\n                                        <span class="clr-red">*</span>\r\n                                    </label>\r\n\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <p-autoComplete field="accountCode"\r\n                                                    [(ngModel)]="currentRow.intangibleWriteDownGLAccountId"\r\n                                                    name="intangibleWriteDownGLAccountId"\r\n                                                    [suggestions]="filteredGLAccountList" (completeMethod)="filterGLAccount($event)"\r\n                                                    [size]="30" [minLength]="1"\r\n                                                    (ngModelChange)="onBlurCheck($event, \'intangibleWriteDownGLAccountId\')"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="description" class="control-label">\r\n                                        Intangible Write Off GL\r\n                                        <span class="clr-red">*</span>\r\n                                    </label>\r\n\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <p-autoComplete field="accountCode"\r\n                                                    [(ngModel)]="currentRow.intangibleWriteOffGLAccountId"\r\n                                                    name="intangibleWriteOffGLAccountId"\r\n                                                    [suggestions]="filteredGLAccountList" (completeMethod)="filterGLAccount($event)"\r\n                                                    [size]="30" [minLength]="1"\r\n                                                    (ngModelChange)="onBlurCheck($event, \'intangibleWriteOffGLAccountId\')"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="managementStructure" class="control-label">Legal Entity <span class="clr-red">*</span></label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <div style="margin: 2px 0">\r\n                                    <p-multiSelect [options]="companyListData"\r\n                                                   [ngModelOptions]="{standalone: true}"\r\n                                                   [(ngModel)]="selectedCompanyID" [panelStyle]="{minWidth:\'12em\'}"\r\n                                                   (onChange)="companySelected()">\r\n                                    </p-multiSelect>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <div class="col-sm-6">\r\n                                <div class="checkbox-cstm">\r\n                                    <label>\r\n                                        <input type="checkbox" name="isActive" [(ngModel)]="currentRow.isActive"\r\n                                               (change)="onActiveClick()">\r\n                                        <span class="cr">\r\n                                            <i class="cr-icon pi pi-check"></i>\r\n                                        </span>\r\n                                        Active\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button class="btn btn-primary" data-dismiss="modal"\r\n                            [disabled]="IntangibleAttrType.invalid || disableSave || disableForMgmtStructure "\r\n                            (click)="currentModeOfOperation === 2 ? saveNewItem() : updateItem();">\r\n                        {{currentModeOfOperation == 3 ? \'Update\' : \'Save\' }}\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    \x3c!--Modal for delete only--\x3e\r\n    <div #delete *ngIf="currentModeOfOperation === 4" id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <strong>\r\n                        Asset Intangible Attribute:\r\n                                 <span class="new-label">{{assetIntangibleName}}</span>\r\n                                 </strong>\r\n                    <span class="new-label"></span>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteItem()">Yes</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModal()">No</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n    \x3c!--Step x: Audit modal--\x3e\r\n    <div #itemHistory *ngIf="auditHistory" class="modal fade" id="itemHistory" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-xl">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">History of Intangible Attribute Type</h4>\r\n    \r\n                    \x3c!-- <h4 class="modal-title">History of {{rowName}}</h4>\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button> --\x3e\r\n                </div>\r\n\r\n                <div class="modal-body">\r\n                    <div class="table-responsive rro-table-cstm">\r\n                        <table class="table table-bordered" >\r\n                            <thead>\r\n                                \x3c!--<tr *ngFor="let item of currentRow | keyvalue">\r\n                                    <th>{{item.key | titlecase}}</th>--\x3e\r\n                                <tr>\r\n                                    <th>Intangible Class</th>\r\n                                    <th>Amortization Method</th>\r\n                                    <th>Intangible Life</th>\r\n                                    <th>Amort Expense GL</th>\r\n                                    <th>Acc Amort Depr GL</th>\r\n                                    <th>Intangible GL</th>\r\n                                    <th>Intangible Write Down</th>\r\n                                    <th>Intangible Write Off</th>\r\n                                    <th>Active</th>\r\n                                    <th>Last Updated By</th>\r\n                                    <th>Last Updated Time</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'assetIntangibleName\', audit.assetIntangibleNames)  ? \'black\' : \'red\'  }">{{audit.assetIntangibleName}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'depreciationMethodName\', audit.depreciationMethodName)  ? \'black\' : \'red\'  }">{{audit.depreciationMethodName}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'intangibleLifeYears\', audit.intangibleLifeYears)  ? \'black\' : \'red\'  }">{{audit.intangibleLifeYears}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'amortExpenseGL\', audit.amortExpenseGL)  ? \'black\' : \'red\'  }">{{audit.amortExpenseGL}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'accAmortdeprGL\', audit.accAmortdeprGL)  ? \'black\' : \'red\'  }">{{audit.accAmortdeprGL}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'intangibleGL\', audit.intangibleGL)  ? \'black\' : \'red\'  }">{{audit.intangibleGL}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'intangiblewritedDownGL\', audit.intangiblewritedDownGL)  ? \'black\' : \'red\'  }">{{audit.intangiblewritedDownGL}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'intangiblewritedoffGL\', audit.intangiblewritedoffGL)  ? \'black\' : \'red\'  }">{{audit.intangiblewritedoffGL}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive ? \'true\' : \'false\'}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate| date: \'MM/dd/yyyy h:mm:ss a\'}}</td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModal()">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #viewClick class="modal fade " id="viewClick" role="dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">\xd7</button>\r\n                <h4 class="modal-title">{{rowName}} Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Intangible Class: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.assetIntangibleName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Amortization Method: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.depreciationMethodName}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Intangible Life: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.intangibleLifeYears}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Amort Expense GL: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.amortExpenseGL}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Acc Amort Depr GL: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.accAmortdeprGL}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Intangible GL: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.intangibleGL}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Intangible Write Down: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.intangiblewritedDownGL}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Intangible Write Off: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.intangiblewritedoffGL}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Active: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.isActive ? \'true\' : \'false\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Legal Entity: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.selectedCompanyNames}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.createdBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Last Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Last Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n</div>'},aCZK:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead"> Asset Status</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" \r\n                            matTooltip="Add Asset Status" matTooltipPosition="above"\r\n                             (click)="open(contentEdit)">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        \r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading"> Asset Status</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="open(contentEdit)"\r\n                                  >\r\n                                  Add Asset Status\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm"\r\n                         [value]="assetStatusList" [first]="0"\r\n                         [rows]="pageSize"\r\n                         [paginator]="true"\r\n                         [pageLinks]="3"\r\n                         [rowsPerPageOptions]="[10,20,50,100]" \r\n                         [columns]="selectedColumns"\r\n                         selectionMode="multiple"\r\n                         [metaKeySelection]="true" \r\n                         (onPage)="changePage($event)" \r\n                         [resizableColumns]="true"\r\n                                  [reorderableColumns]="true"\r\n                                  [scrollable]="true"\r\n                         [totalRecords]="totalRecords" \r\n                                  scrollHeight="450px">\r\n\r\n                            <ng-template pTemplate="caption">\r\n\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="selectedData" optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left"></p-multiSelect>\r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  \r\n                                                      <div\r\n                                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                                      >\r\n                                                        <div class="form-group">\r\n                                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                          <div\r\n                                                            class="pull-left"\r\n                                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                                          >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                   \r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                                   \r\n                                                   <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"  style="padding: 5px 12px !important;" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"  style="padding: 5px 12px !important;" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" label="Export Selected Data" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()" matTooltip="Download Sample File" matTooltipPosition="above">Sample File Download</button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position: sticky" *ngIf="selectedColumns.length> 0">Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openView(view,rowData)">\r\n                                    <td style="width:200px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                             (click)="openView(view,rowData)" matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                       \r\n                                        <span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openEdit(contentEdit,rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                        (click)="openEdit(contentEdit,rowData)" matTooltip="Edit"\r\n                                         matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="openDelete(content,rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete"\r\n                                         matTooltipPosition="above" (click)="openDelete(content,rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal" ><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" data-target="#contentHist" data-toggle="modal"\r\n                                          (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view">\r\n                                           <a class="btn nobg" (click)="openView(view,rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                       \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                           \r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="assetStatusList && assetStatusList.length == 0 || assetStatusList && assetStatusList.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label> \r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Asset Status:\r\n            <span class="new-label">{{restorerecord.name}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<ng-template #view class="modal fade " id="view" role="dialog">\r\n\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n            <h4 class="modal-title"> Asset Status Details</h4>\r\n        </div>\r\n        <div class="modal-body viewform">\r\n            <div class="col-sm-12">\r\n                <p>\r\n                    <span class="label">\r\n                        <b> Asset Status Code: </b>\r\n                    </span>\r\n                    <span class="value">{{code}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b> Asset Status Name: </b>\r\n                    </span>\r\n                    <span class="value">{{name}}</span>\r\n                </p>\r\n\r\n                <p>\r\n                    <span class="label">\r\n                        <b> Asset Status Memo: </b>\r\n                    </span>\r\n                    <span class="value">{{memo}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Created By: </b>\r\n                    </span>\r\n                    <span class="value">{{createdBy}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Created Date: </b>\r\n                    </span>\r\n                    <span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Updated By: </b>\r\n                    </span>\r\n                    <span class="value">{{updatedBy}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Updated Date: </b>\r\n                    </span>\r\n                    <span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n            </div>\r\n            <div class="clear"></div>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are you sure you want to delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Asset Status Code:\r\n            <span class="new-label">{{code_Name}}</span>\r\n        </strong>\r\n    </div>\r\n\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="deleteItemAndCloseModel()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title" *ngIf="isEditMode">Edit Asset Status</h4>\r\n        <h4 class="modal-title" *ngIf="!isEditMode">Add Asset Status</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="SaveandEditAssetStatus()">\r\n            <div class="form-group">\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label for="name" class="control-label">\r\n                            Asset Status Code\r\n                            <span class="clr-red">*</span>\r\n                        </label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        \x3c!--<p-autoComplete field="code" [(ngModel)]="codeName" (onSelect)="partnmId($event)" (onKeyUp)="eventHandler(\'code\', $event.target.value)" name="code"\r\n                                        [suggestions]="localCollection" (completeMethod)="filterDisposalType($event)" [size]="30" [minLength]="1"\r\n                                        [dropdown]="true" class="p-autoComplete-ctsm" required>--\x3e\r\n                        <p-autoComplete [(ngModel)]="codeName"  (ngModelChange)="getmemo()" name="codeName" (onSelect)="partnmId($event)" (onKeyUp)="eventHandler($event)" [suggestions]="localCollection" (completeMethod)="filterAssetStatus($event)" [size]="30"\r\n                                        [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                            <ng-template let-codeName pTemplate="item">\r\n                                <div class="ui-helper-clearfix">{{codeName}}</div>\r\n                            </ng-template>\r\n\r\n                        </p-autoComplete>\r\n                        <div *ngIf="disableSave" class="clr-red">Already Exists</div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label for="AssetStatusName" class="control-label control-item">\r\n                            Name\r\n                            <span class="clr-red">*</span>\r\n                        </label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <input type="text" name="name"  (ngModelChange)="getmemo()" class="form-control" required #Name="ngModel" [(ngModel)]="sourceAction.name" minlength="2">\r\n                        <div *ngIf="Name.dirty && Name.errors?.required && Name.errors" class="invalid-form-error-message">\r\n                            Asset Status Name required.\r\n                        </div>\r\n                        <div *ngIf="Name.dirty && Name.errors?.minlength && Name.errors" class="invalid-form-error-message">\r\n                            Asset Status Name must be at least 2 characters long.\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label for="AssetStatusMemo" (ngModelChange)="getmemo()" class="control-label">Memo</label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <textarea class="text-item" (ngModelChange)="getmemo()" #memo="ngModel" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceAction.memo" minlength="2"></textarea>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <div class="col-sm-6">\r\n                    <div class="checkbox-cstm check-value">\r\n                        <label>\r\n                            <input type="checkbox" name="isActive"  (ngModelChange)="getmemo()" #isActive="ngModel" class="form-check-input trigger2" checked id="isActive" [(ngModel)]="sourceAction.isActive" [ngModelOptions]="{standalone: true}">\r\n                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                            Active\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button class="btn btn-primary" [disabled]="!userForm.valid || disableSave || disableSaveForEdit" (click)="SaveandEditAssetStatus()">{{isEditMode == true ? \'Update\' : \'Save\' }}</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n<div class="modal-dialog modal-xl">\r\n\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n            <h4 class="modal-title">History of Asset Status</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <div class="table-responsive rro-table-cstm">\r\n                <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                    <thead>\r\n                        <tr>\r\n                            \x3c!-- <th>UMID</th> --\x3e\r\n                            <th>Code</th>\r\n                            <th>Name</th>\r\n                            <th>Memo</th>\r\n                            <th>IsActive</th>\r\n                            <th>Updated By</th>\r\n                            <th>Updated Time</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf="auditHistory.length> 0">\r\n                        <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                            \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                            <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'code\', audit.code)  ? \'black\' : \'red\'  }">{{audit.code}}</td>\r\n                            <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'name\', audit.name)  ? \'black\' : \'red\'  }">{{audit.name}}</td>\r\n                            <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                            <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                            <td>{{audit.updatedBy}}</td>\r\n                            <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n\r\n                </table>\r\n                <ng-template #noDatavailable>\r\n                    <div class="text-center">\r\n                        <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                        <h4 style="color: #ff5663;">No History Found </h4>\r\n                    </div>\r\n\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n</div>\r\n'},b9cX:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Unit Of Measure</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltipPosition="above"\r\n                              matTooltip="Add Unit of Measure"\r\n                               tooltipPosition="right" (click)="resetUOMForm()"\r\n                                data-target="#addUOM" data-toggle="modal">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Unit Of Measure</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="resetUOMForm()"\r\n                                    data-target="#addUOM" data-toggle="modal"\r\n                                  >\r\n                                    Add Unit of Measure\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="uomData" [first]="0" \r\n                        [rows]="pageSize" [paginator]="true" \r\n                        [pageLinks]="3"\r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple" \r\n                        [metaKeySelection]="true"\r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [scrollable]="true" \r\n                        [totalRecords]="totalRecords" \r\n                        scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" \r\n                                    [options]="uomHeaders" \r\n                                    optionLabel="header" \r\n                                    [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}"\r\n                                                    style="float:left;padding:0px 2px !important" \r\n                                                    (onChange)="columnsChanges()"></p-multiSelect>\r\n                                    </div>\r\n                                    <div class="col">\r\n                                      \r\n                                          <div\r\n                                            style="width: 370px; float: right; padding-top: 3px;"\r\n                                          >\r\n                                            <div class="form-group">\r\n                                              \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                              <div\r\n                                                class="pull-left"\r\n                                                style="margin-top: 4px; margin-right: 15px;"\r\n                                              >\r\n                                                <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>In-Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                        (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>All\r\n                                                    </label>\r\n                                                </div>\r\n                                                    <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                      <label style="width: auto !important;margin-top: 3px;">\r\n                                                     \r\n                                                        <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                         (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                          />\r\n                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                      Show  Deleted List \r\n                                                      </label>\r\n                                                    </div>\r\n                                                    </div>\r\n                            \r\n                                            </div>\r\n                                        </div>\r\n                                </div>\r\n                                <div class="row">\r\n                                  <div class="col">\r\n                                     <button type="button" class="btn btn-primary new-table-button" matTooltip="Download All Data" tooltipPosition="top" matTooltipPosition="above" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export All Data" style="padding: 5px 12px !important;" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Selected"\r\n                                     matTooltipPosition="above" matTooltipPosition="above" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Selection Only"  style="padding: 5px 12px !important"\r\n                                            (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n\r\n\r\n\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above" tooltipPosition="top">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" (click)="sampleExcelDownload()"  style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download Sample File" tooltipPosition="top">Sample File Download</button>\r\n                                    </div>\r\n                                    </div>\r\n                                    </div>\r\n\r\n                                   \r\n                            </ng-template>\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                    <col *ngFor="let col of columns" [style.width]="col.width">\r\n                                </colgroup>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                     pReorderableRowHandle data-toggle="modal" data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                      \r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active"\r\n                                         matTooltipPosition="above" onLabel="on" offLabel="off"\r\n                                          (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active"\r\n                                         matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)"\r\n                                          [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active"\r\n                                         matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)"\r\n                                          [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" \r\n                                            (click)="viewSelectedRow(rowData)" data-target="#view" data-toggle="modal" matTooltip="View"\r\n                                            matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        <span data-target="#addUOM" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="editUOM(rowData)" \r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">\r\n                      \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                        (click)="editUOM(rowData)" data-target="#addUOM"\r\n                                         data-toggle="modal" matTooltip="Edit"\r\n                                          matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span  data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                      \r\n                                      \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete" data-target="#delete" \r\n                                        data-toggle="modal" (click)="delete(rowData)" matTooltipPosition="above">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" data-target="#contentHist" data-toggle="modal"\r\n                                          (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" \r\n                                        [disabled]="true" name="isActive{{ rowIndex }}" \r\n                                          matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                           \r\n                            <ng-template pTemplate="emptymessage" let-columns *ngIf="uomData?.length == 0">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t  <td [attr.colspan]="5" style="color: red; font-weight: bold; text-align: center">\r\n\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t  </td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Unit of Measure:\r\n            <span class="new-label">{{restorerecord.description}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                    Unit of Measure:\r\n                    <span class="new-label">{{selectedRowforDelete.description}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div #addUOM id="addUOM" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Unit Of Measure  </h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #UOM="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">\r\n                                    Unit Of Measure\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="description" [(ngModel)]="addNewUOM.unitName" (onSelect)="selectedUOM($event)" (onKeyUp)="checkUOMExists(\'description\', $event.target.value)" name="uom"\r\n                                                [suggestions]="uomList" (completeMethod)="filterUnitOfMeasures($event)" [size]="30" [minLength]="1"\r\n                                                [dropdown]="true" class="p-autoComplete-ctsm" required (ngModelChange)="getmemo()">\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForUOMMsg" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="shortName" class="control-label">\r\n                                    Short Name\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="shortName"\r\n                                 [(ngModel)]="addNewUOM.shortName"\r\n                                  (onSelect)="selectedShortName($event)" (onKeyUp)="checkShortNameExists(\'shortName\', $event.target.value)"\r\n                                                name="shortName"\r\n                                                [suggestions]="shortNameList" (completeMethod)="filterShortName($event)" [size]="30" [minLength]="1"\r\n                                                [dropdown]="true" class="p-autoComplete-ctsm" required (ngModelChange)="getmemo()">\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForShortNameMsg" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="standard" class="control-label">\r\n                                    Standard\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <input type="text" name="standard" class="form-control" \r\n                                #standard="ngModel" [(ngModel)]="addNewUOM.standard" \r\n                                required (ngModelChange)="getmemo()">\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription" [(ngModel)]="addNewUOM.memo" minlength="2" (ngModelChange)="getmemo()"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" \r\n                                    [(ngModel)]="addNewUOM.isActive" \r\n                                    (ngModelChange)="getmemo()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" \r\n                [disabled]="UOM.invalid || disableSaveForShortName || disableSaveForEdit" (click)="saveUOM();"> {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetUOMForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>UOM</th>\r\n                                <th>Short Name</th>\r\n                                <th>Standard</th>\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                <td>{{ext.description}}</td>\r\n                                <td>{{ext.shortName}}</td>\r\n                                <td>{{ext.standard}}</td>\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Unit of Measure</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>UOM</th>\r\n                                <th>Short Name</th>\r\n                                <th>Standard</th>\r\n                                <th>Memo</th>\r\n                                <th>Is Active</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'shortName\', audit.shortName)  ? \'black\' : \'red\'  }">{{audit.shortName}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'standard\', audit.standard)  ? \'black\' : \'red\'  }">{{audit.standard}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Unit Of Measure Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Unit Of Measure: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">ShortName: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.shortName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header"> Standard: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.standard}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Is Active</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>\r\n                    Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},bII5:function(t,e,a){"use strict";a.r(e),e.default=""},bUQL:function(t,e,a){"use strict";a.r(e),e.default=".search-box {\n  flex-direction: column;\n  box-sizing: border-box;\n  display: flex;\n}\n\n.search-box .mat-form-field {\n  padding: 0 2em;\n}"},cefv:function(t,e,a){"use strict";a.r(e),e.default='\r\n<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">GL Cash Flow Classification</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltipPosition="above" \r\n                             matTooltip="Add GL Cash Flow Classification" \r\n                             tooltipPosition="right" data-target="#add" \r\n                             data-toggle="modal" (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">GL Cash Flow Classification</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" \r\n                             data-toggle="modal" (click)="resetForm()"\r\n                                  >\r\n                                  Add GL Cash Flow Classification\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n\r\n                       \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm"\r\n                                 [value]="originalData"\r\n                                 [lazy]="true" (onLazyLoad)="loadAllSiteData($event)"\r\n                                 [first]="0" [rows]="pageSize"\r\n                                 [paginator]="true" [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]"\r\n                                 [columns]="selectedColumns"\r\n                                  (onPage)="changePage($event)"\r\n                                 selectionMode="multiple"\r\n                                 [metaKeySelection]="true"\r\n                                 [resizableColumns]="true"\r\n                                 [reorderableColumns]="true"\r\n                                 [scrollable]="true"\r\n                                 [totalRecords]="totalRecords"\r\n                                 scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="1" [options]="headers" optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n                                   \r\n                                   \r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  \r\n                                                      <div\r\n                                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                                      >\r\n                                                        <div class="form-group">\r\n                                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                          <div\r\n                                                            class="pull-left"\r\n                                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                                          >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                   \r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                        \r\n                                   \r\n                                    <button type="button" class="btn btn-primary " style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download Data" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary " style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download Selected" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltip="Download Sample file" matTooltipPosition="above" style="padding: 5px 12px !important;" (click)="sampleExcelDownload()">Sample File Download</button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle [pSelectableRowIndex]="rowIndex">\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal"\r\n                                        data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                            (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}"\r\n                                        (onChange)="changeStatus(rowData)" matTooltip="Active" matTooltipPosition="above"></p-inputSwitch>--\x3e\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                               (click)="viewSelectedRow(rowData)" data-target="#view" data-toggle="modal"\r\n                                               matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg"\r\n                                               (click)="edit(rowData)"\r\n                                               matTooltip="Edit"\r\n                                               matTooltipPosition="above">\r\n                                                <i class="fa fa-pencil">\r\n                                                </i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                         data-target="#add" data-toggle="modal" matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg"\r\n                                               (click)="delete(rowData)"\r\n                                               matTooltip="Delete" matTooltipPosition="above">\r\n                                                <i class="fa fa-trash"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button\r\n                                        matTooltip="Delete" matTooltipPosition="above"\r\n                                         data-target="#delete" data-toggle="modal"\r\n                                          (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal">\r\n                                            <a class="btn nobg"\r\n                                               (click)="getAuditHistoryById(rowData)"\r\n                                               matTooltip="History" matTooltipPosition="above">\r\n                                                <i class="fa fa-history"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" data-target="#contentHist"\r\n                                         data-toggle="modal" (click)="getAuditHistoryById(rowData)" >\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                                         *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                                <tr>\r\n                                    <td [attr.colspan]="7" class="no-records-cstm">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n           GL Cashflow Classification\r\n            <span class="new-label">{{restorerecord.glClassFlowClassificationName}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                    GL Cash Flow Classification:\r\n                    <span class="new-label">{{selectedRowforDelete.glClassFlowClassificationName}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="resetForm()" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} GL Cash Flow Classification</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-6">\r\n                                <label for="description" class="control-label">\r\n                                    GL Cash Flow Classification Name\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="glClassFlowClassificationName" [(ngModel)]="addNew.glClassFlowClassificationName"\r\n                                                (onSelect)="selectedGLCFName($event)" (onKeyUp)="checkGLCFNameExists(\'glClassFlowClassificationName\',\r\n                                                $event.target.value)" name="GLCFName" [suggestions]="glCashFlowList" (completeMethod)="filterGLCFName($event)"\r\n                                                [size]="30" [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveGLCFName" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-6">\r\n\r\n                                <label for="description" class="control-label">Description</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" [(ngModel)]="addNew.description" id="description" name="description" (ngModelChange)="getmemo($event)" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-6">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" [(ngModel)]="addNew.memo" id="memo" name="memodescription" (ngModelChange)="getmemo($event)" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive" (ngModelChange)="getmemo($event)">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" [disabled]="create.invalid || disableSaveGLCFNameSave" (click)="save();"> {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of GL Cash Flow Classification</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n\r\n                                <th>GL Cash Flow Classification</th>\r\n                                <th>Description</th>\r\n                                <th>Memo</th>\r\n                                <th>Active</th>\r\n                                <th>Last Updated By</th>\r\n                                <th>Last Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'glClassFlowClassificationName\', audit.glClassFlowClassificationName)  ? \'black\' : \'red\'  }">{{audit.glClassFlowClassificationName}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">GL Cash Flow Classification Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">GL Cash Flow Classification Name: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.glClassFlowClassificationName}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Description: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.description}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Is Active: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n\r\n                 \r\n\r\n\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>'},chu7:function(t,e,a){"use strict";a.r(e),e.default=".footer1 {\n  margin-right: 0px;\n}\n\n.control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}"},d33W:function(t,e,a){"use strict";a.r(e),e.default=".footer {\n  margin-left: 65%;\n}\n\n.footer1 {\n  margin-right: 0px;\n}\n\n.control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}"},dKwx:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n\t<div class="right_col" role="main">\r\n\t\t<div class="x_panel">\r\n\t\t\t<div class="x_content">\r\n\t\t\t\t\x3c!-- <div class="card">\r\n\t\t\t\t\t<div class="card-body">\r\n\t\t\t\t\t\t<div class="inline-block display-flex">\r\n\t\t\t\t\t\t\t<h3 class="po-head lead">Bin</h3>\r\n\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t<a class="plusicon-cstm new-margin" matTooltipPosition="above"\r\n\t\t\t\t\t\t\t matTooltip="Add Bin" tooltipPosition="right" \r\n\t\t\t\t\t\t\t (click)="open(contentEdit)">\r\n\t\t\t\t\t\t\t\t<i class="fa fa-plus-circle fa-lg"></i>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div> --\x3e\r\n\t\t\t\t\t\t<div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Bin</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="open(contentEdit)"\r\n                                  >\r\n\t\t\t\t\t\t\t\t  Add Bin\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="binData" [rows]="pageSize"  [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[10,20,50,100]"\r\n\t\t\t\t\t\t [columns]="selectedColumns" selectionMode="multiple" [(selection)]="selectedColumn" [resizableColumns]="true" [reorderableColumns]="true"\r\n\t\t\t\t\t\t [scrollable]="true" scrollHeight="450px">\r\n\t\t\t\t\t\t\t<ng-template pTemplate="caption">\r\n\t\t\t\t\t\t\t\t<div class="row">\r\n                                    <div class="col">\r\n\t\t\t\t\t\t\t\t\t<p-multiSelect [options]="cols" [(ngModel)]="selectedColumns" optionLabel="header" selectedItemsLabel="{0} columns selected"\r\n\t\t\t\t\t\t\t\t\t [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n\r\n\t\t\t\t\t\t\t\t\t\x3c!-- <div class="inner-addon right-addon w200 inline-block g-filter-search-cstm">\r\n\t\t\t\t\t\t\t\t\t\t<i class="fa fa-search"></i>\r\n\t\t\t\t\t\t\t\t\t\t<input type="text" pInputText size="50" class="form-control ui-autocomplete-input" (input)="dt.filterGlobal($event.target.value, \'contains\')"\r\n\t\t\t\t\t\t\t\t\t\t placeholder="Global Filter">\r\n\t\t\t\t\t\t\t\t\t</div> --\x3e\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class="col">\r\n\t\t\t\t\t\t\t\t  \r\n\t\t\t\t\t\t\t\t\t  <div\r\n\t\t\t\t\t\t\t\t\t\tstyle="width: 370px; float: right; padding-top: 3px;"\r\n\t\t\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t\t\t\t\t  \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n\t\t\t\t\t\t\t\t\t\t  <div\r\n\t\t\t\t\t\t\t\t\t\t\tclass="pull-left"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle="margin-top: 4px; margin-right: 15px;"\r\n\t\t\t\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t\t\t  <label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>Active\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n\t\t\t\t\t\t\t\t\t\t<label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>In-Active\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n\t\t\t\t\t\t\t\t\t\t<label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>All\r\n\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class="checkbox-cstm" style="margin-left: 0;">\r\n\t\t\t\t\t\t\t\t\t\t  <label style="width: auto !important;margin-top: 3px;">\r\n\t\t\t\t\t\t\t\t\t\t\t\x3c!--  --\x3e\r\n\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n\t\t\t\t\t\t\t\t\t\t\t (click)="getDeleteListByStatus($event.target.checked)"\r\n\t\t\t\t\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t\t\t\t\t\t<span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t  Show  Deleted List \r\n\t\t\t\t\t\t\t\t\t\t  </label>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="row">\r\n\t\t\t\t\t\t<div class="col">\r\n\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-primary new-table-button" pButton icon="fa-download" iconPos="left"  style="padding: 5px 12px !important;" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-primary new-table-button" pButton icon="fa-download" iconPos="left" style="padding: 5px 12px !important" label="Export Selection Only"\r\n\t\t\t\t\t\t\t\t\t (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" class="uploaddoc upload-file" data-multiple-caption="{count} files selected"\r\n                                               accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()">Sample File Download</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\t\t\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\x3c!-- <ng-template pTemplate="colgroup" let-columns>\r\n\t\t\t\t\t\t\t\t<colgroup>\r\n\t\t\t\t\t\t\t\t\t<col *ngFor="let col of columns" style="width:140px">\r\n\t\t\t\t\t\t\t\t</colgroup>\r\n\t\t\t\t\t\t\t</ng-template> --\x3e\r\n\t\t\t\t\t\t\t<ng-template pTemplate="header" let-columns>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n\t\t\t\t\t\t\t\t\t\t{{col.header}}\r\n\t\t\t\t\t\t\t\t\t\t<p-sortIcon [field]="col.field"></p-sortIcon>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n\t\t\t\t\t\t\t\t\t\t<input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field, \'contains\')">\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th style="width:180px;position:sticky"></th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n\t\t\t\t\t\t\t\t<tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openEdits(rowData)">\r\n\t\t\t\t\t\t\t\t\t<td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n\t\t\t\t\t\t\t\t\t\t{{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n\t\t\t\t\t\t\t\t\t\t(rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf="currentDeletedstatus==false">\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<span data-toggle="modal" data-target="#view">\r\n\t\t\t\t\t\t\t\t\t\t\t<a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="openView(view,rowData)" matTooltip="View" matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-eye"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openEdit(contentEdit,rowData)" \r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-edit" mat-icon-button \r\n\t\t\t\t\t\t\t\t\t\t(click)="openEdit(contentEdit,rowData)" \r\n\t\t\t\t\t\t\t\t\t\tmatTooltip="Edit" matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n                                            <a class="btn nobg" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="openDelete(content,rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-delete" mat-icon-button\r\n\t\t\t\t\t\t\t\t\t\t matTooltip="Delete" matTooltipPosition="above"\r\n\t\t\t\t\t\t\t\t\t\t  (click)="openDelete(content,rowData)">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon color="warn">delete</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span><a class="btn nobg" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="showAuditPopup(auditContent,rowData.binId)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n\t\t\t\t\t\t\t\t\t\t matTooltipPosition="above" (click)="showAuditPopup(auditContent,rowData.binId)" >\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon color="green">history</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div *ngIf="currentDeletedstatus==true">\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n\t\t\t\t\t\t\t\t\t\tmatTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n\t\t\t\t\t\t\t\t\t   <span data-toggle="modal" data-target="#view">\r\n\t\t\t\t\t\t\t\t\t\t   <a class="btn nobg" (click)="openView(view,rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t  <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t</div> \r\n\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template #auditContent let-c="close" let-d="dismiss">\r\n\t\t\t\t\t\t\t\t<div class="audit-template-launcher">\r\n\t\t\t\t\t\t\t\t\t<bin-audit [Data]="AuditDetails" [Modal]="modal" *ngIf= "HasAuditDetails"></bin-audit>\r\n\t\t\t\t\t\t\t\t\t<audit-no-history [Modal]="modal" [Title]="AuditHistoryTitle" *ngIf="!HasAuditDetails"></audit-no-history>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="emptymessage" let-columns\r\n\t\t\t\t\t\t\t\t\t\t *ngIf="allBins && allBins.length == 0 || allBins && allBins.length ==null">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td [attr.colspan]="7" class="no-records-cstm">\r\n\t\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="summary" id="footer">\r\n\t\t\t\t\t\t\t\t<label id="footer" class="footer1">Total:</label>\r\n\t\t\t\t\t\t\t\t<input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t<label id="footer" class="footer1">Pages Count:</label>\r\n\t\t\t\t\t\t\t\t<input style="width: 5%;" \r\n\t\t\t\t\t\t\t\t[ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t</p-table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n\t</div>\r\n\t<div class="modal-body">\r\n\t\t<strong>Bin Name:\r\n\t\t\t<span class="new-label">{{restorerecord.name}}</span>\r\n\t\t</strong>\r\n\t</div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto">\r\n\t<div class="modal-header">\r\n\t\t<h4 class="modal-title" *ngIf="isEditMode">Edit Bin</h4>\r\n\t\t<h4 class="modal-title" *ngIf="!isEditMode">Add Bin</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\r\n\t<div class="modal-body">\r\n\t\t<form #userForm="ngForm" class="form-horizontal" (ngSubmit)="editItemAndCloseModel()">\r\n\t\t\t<div class="col-sm-12">\r\n\t\t\t\t<div class="col-sm-6">\r\n\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label class="control-label">Site Name\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<select [(ngModel)]="sourceBin.siteId" (ngModelChange)="getmemo()" name="site" (change)="siteValueChange($event.target.value)" required>\r\n\t\t\t\t\t\t\t\t\t<option *ngFor="let site of allSites" [ngValue]="site.siteId">{{site.name}}</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label class="control-label">Warehouse Name\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<select [(ngModel)]="sourceBin.warehouseId" (ngModelChange)="getmemo()" required name="warehouse" (change)="wareHouseValueChange($event.target.value)">\r\n\t\t\t\t\t\t\t\t\t<option *ngFor="let site of allWareHouses" [ngValue]="site.warehouseId">{{site.warehouseName}}</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label class="control-label">Location Name\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<select [(ngModel)]="sourceBin.locationId" (ngModelChange)="getmemo()" name="locationName" (change)="locationValueChange($event.target.value)">\r\n\t\t\t\t\t\t\t\t\t<option *ngFor="let site of allLocations" [ngValue]="site.locationId">{{site.name}}</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label class="control-label">Shelf Name\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<select [(ngModel)]="sourceBin.shelfId" (ngModelChange)="getmemo()" [ngModelOptions]="{standalone: true}" (change)="shelfValueChange(sourceBin.shelfId)">\r\n\t\t\t\t\t\t\t\t\t<option *ngFor="let site of allShelfs" [ngValue]="site.shelfId">{{site.name}}</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="name" class="control-label">Bin Name\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<p-autoComplete (onSelect)="Manufacturerdescription($event)" (ngModelChange)="getmemo()" (onKeyUp)=ManufacturerHandler($event) (completeMethod)="filtermanufacturer($event)"\r\n\t\t\t\t\t\t\t\t [(ngModel)]="name" name="manufacturer" [suggestions]="localCollection" [size]="30" [minLength]="2" [dropdown]="true" required\r\n\t\t\t\t\t\t\t\t class="p-autoComplete-ctsm">\r\n\t\t\t\t\t\t\t\t\t<ng-template let-name pTemplate="item">\r\n\t\t\t\t\t\t\t\t\t\t<div class="ui-helper-clearfix">{{name}}</div>\r\n\t\t\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\t</p-autoComplete>\r\n\t\t\t\t\t\t\t\t<div *ngIf="disableSaveManufacturer" class="clr-red">Already Exists</div>\r\n\t\t\t\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Address Line 1</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input type="text" (ngModelChange)="getmemo()" class="form-control" disabled placeholder="Address Line 2" minlength="2" required value={{address1}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Address Line 2</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input disabled type="text" (ngModelChange)="getmemo()" class="form-control" placeholder="Address Line 2" minlength="2" required value={{address2}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Address Line 3</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input disabled type="text" (ngModelChange)="getmemo()" class="form-control" placeholder="Address Line 3" minlength="2" required value={{address3}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">City</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input disabled type="text" (ngModelChange)="getmemo()" class="form-control" placeholder="City" minlength="2" required value={{city}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">State</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input disabled type="text" (ngModelChange)="getmemo()" class="form-control" placeholder="State" minlength="2" required value={{stateOrProvince}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Country</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input disabled type="text" (ngModelChange)="getmemo()" class="form-control" placeholder="Country" minlength="2" required value={{country}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Zip Code</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input disabled type="text" (ngModelChange)="getmemo()" class="form-control" placeholder="Zip Code" minlength="2" required value={{postalCode}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Memo</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<textarea name="memo" (ngModelChange)="getmemo()" [(ngModel)]="sourceBin.memo" required></textarea>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t<div class="col-sm-6">\r\n\t\t\t\t\t\t\t<div class="checkbox-cstm check-value">\r\n\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t<input type="checkbox" name="isActive" (ngModelChange)="getmemo()" #isActive="ngModel" class="form-check-input trigger2" checked id="isActive" [(ngModel)]="sourceBin.isActive">\r\n\t\t\t\t\t\t\t\t\t<span class="cr">\r\n\t\t\t\t\t\t\t\t\t\t<i class="cr-icon pi pi-check"></i>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\tActive\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="col-sm-6" *ngIf="showManagement">\r\n\t\t\t\t\t<p-treeTable [value]="gridData" [columns]="cols1" class="p-Treetable-view" [(selection)]="selectedNodeTest">\r\n\t\t\t\t\t\t<ng-template pTemplate="header" let-columns>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th *ngFor="let col of columns">\r\n\t\t\t\t\t\t\t\t\t{{col.header}}\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template pTemplate="body" let-rowNode let-rowData="rowData" let-columns="columns">\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td *ngFor="let col of columns; let i = index">\r\n\t\t\t\t\t\t\t\t\t<p-treeTableToggler [rowNode]="rowNode" *ngIf="i == 0"></p-treeTableToggler>\r\n\t\t\t\t\t\t\t\t\t<p-treeTableCheckbox class="p-Tree-checkbox" [value]="rowNode" *ngIf="i == 0" (click)="managementStructureClick(rowData)"></p-treeTableCheckbox>\r\n\t\t\t\t\t\t\t\t\t{{rowData[col.field]}}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</p-treeTable>\r\n\t\t\t\t</div>\r\n\t\t\t\t\x3c!-- <div class="col-sm-6" *ngIf="showManagement">\r\n\t\t\t\t\t<p-tree [value]="filesTree3" selectionMode="multiple" [(selection)]="selectedFiles" (onNodeSelect)="nodeSelect($event)" (onNodeUnselect)="nodeUnselect($event)"></p-tree>\r\n\t\t\t\t</div> --\x3e\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button class="btn btn-primary" [disabled]="!userForm.valid || disableSaveManufacturer || disableSaveForEdit">{{isEditMode ? \'Update\' : \'Save\' }}</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n\r\n\r\n</ng-template>\r\n\r\n\x3c!-- Delete --\x3e\r\n<ng-template #content let-c="close" let-d="dismiss">\r\n\t<div class="modal-header">\r\n\t\t<h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\t<div class="modal-body">\r\n\t\t<strong>Bin Name:\r\n\t\t\t<span class="new-label">{{binName}}</span>\r\n\t\t</strong>\r\n\t</div>\r\n\t<div class="modal-footer">\r\n\t\t<button type="button" class="btn btn-primary" (click)="deleteItemAndCloseModel()">Yes</button>\r\n\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n\t</div>\r\n</ng-template>\r\n\r\n\r\n\r\n\x3c!-- History --\x3e\r\n\r\n\r\n<ng-template #contentHist let-c="close" let-d="dismiss" style="width:auto">\r\n\t<div class="modal-header">\r\n\r\n\t\t<h4 class="modal-title">History of Credit Terms</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\r\n\r\n\t</div>\r\n\t<div class="modal-body">\r\n\r\n\t\t<table class="table table-bordered">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>warehouseId</th>\r\n\t\t\t\t\t<th>siteId</th>\r\n\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t<th>Previous Value</th>\r\n\t\t\t\t\t<th>New Value</th>\r\n\t\t\t\t\t<th>Last Updated By</th>\r\n\t\t\t\t\t<th>Last Updated Time</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tr *ngFor="let audit of auditHisory">\r\n\t\t\t\t<td>{{audit.auditHistoryId}}</td>\r\n\t\t\t\t<td>{{audit.columnName}}</td>\r\n\t\t\t\t<td>{{audit.previousValue}}</td>\r\n\t\t\t\t<td>{{audit.newValue}}</td>\r\n\t\t\t\t<td>{{audit.updatedBy}}</td>\r\n\t\t\t\t<td>{{audit.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</td>\r\n\t\t\t</tr>\r\n\t\t</table>\r\n\t</div>\r\n\t<div class="modal-footer">\r\n\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n\t</div>\r\n</ng-template>\r\n\r\n\x3c!-- View --\x3e\r\n\r\n<ng-template #view class="modal fade " id="view" role="dialog">\r\n\r\n\t<div class="modal-content">\r\n\t\t<div class="modal-header">\r\n\t\t\t<button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\t\t\t<h4 class="modal-title">Bin Details</h4>\r\n\t\t</div>\r\n\t\t<div class="modal-body viewform">\r\n\t\t\t<div class="col-sm-12">\r\n\t\t\t\t<div class="col-sm-6">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t\t<b> Bin Name : </b>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="value">{{binName}}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t\t<b> Shelf Name : </b>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="value">{{shelfName}}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t\t<b> Location Name : </b>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="value">{{locationName}}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t\t<b> Warehouse Name : </b>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="value">{{warehouseName}}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t\t<b> Site Name : </b>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="value">{{siteName}}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t\t<b> Address1: </b>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="value">{{address1}}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t\t<b> Address2: </b>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="value">{{address2}}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t\t<b> Address3: </b>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="value">{{address3}}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t\t<b> City: </b>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="value">{{city}}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="col-sm-6">\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t\t<b> State: </b>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="value">{{stateOrProvince}}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t\t<b> Country: </b>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="value">{{country}}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t\t<b> ZipCode: </b>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="value">{{postalCode}}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t\t<b>Memo: </b>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="value">{{memo}}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t\t<b>Created By: </b>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="value">{{createdBy}}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t\t<b>Created Date: </b>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t\t<b>Updated By: </b>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="value">{{updatedBy}}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t\t<b>Updated Date: </b>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="clear"></div>\r\n\t\t</div>\r\n\t\t<div class="modal-footer">\r\n\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</ng-template>'},dn1Q:function(t,e,a){"use strict";a.r(e),e.default=".x_panel {\n  border: none;\n}"},e8c5:function(t,e,a){"use strict";a.r(e),e.default=""},eMHP:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead"> Acquisition Type</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltip="Add Acquisition Type" \r\n                             matTooltipPosition="above" (click)="open(contentEdit)">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Acquisition Type</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="open(contentEdit)"\r\n                                  >\r\n                                  Add Acquisition Type\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                      \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm"\r\n                         [value]="AssetAcquisitionTypeList" \r\n                        [metaKeySelection]="true" [totalRecords]="totalRecords" [rows]="pageSize" [paginator]="true" [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" (onPage)="changePage($event)" selectionMode="multiple"\r\n                                 [resizableColumns]="true" [reorderableColumns]="true" [scrollable]="true" scrollHeight="450px">\r\n\r\n                            <ng-template pTemplate="caption">\r\n\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="selectedData" optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left"></p-multiSelect>\r\n                                   \r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  \r\n                                                      <div\r\n                                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                                      >\r\n                                                        <div class="form-group">\r\n                                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                          <div\r\n                                                            class="pull-left"\r\n                                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                                          >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                    \x3c!--  --\x3e\r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"  style="padding: 5px 12px !important;" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"  style="padding: 5px 12px !important;" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" label="Export Selected Data" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()" matTooltip="Download Sample File" matTooltipPosition="above">Sample File Download</button>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position: sticky" *ngIf="selectedColumns.length> 0">Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openView(view,rowData)">\r\n                                    <td style="width:200px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                             (click)="openView(view,rowData)" matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                       \r\n                                        <span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openEdit(contentEdit,rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="openEdit(contentEdit,rowData)"\r\n                                        matTooltipPosition="above" matTooltip="Edit">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span><a class="btn nobg" \r\n                                            (click)="openDelete(content,rowData)" \r\n                                            matTooltip="Delete"  matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete"\r\n                                         matTooltipPosition="above" (click)="openDelete(content,rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" data-target="#contentHist" data-toggle="modal"\r\n                                          (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view">\r\n                                           <a class="btn nobg" (click)="openView(view,rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="AssetAcquisitionTypeList && AssetAcquisitionTypeList.length == 0 || AssetAcquisitionTypeList && AssetAcquisitionTypeList.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                 <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <ng-template #view class="modal fade " id="view" role="dialog">\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n                <h4 class="modal-title"> Acquisition Type Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label">\r\n                            <b> Acquisition Type Code: </b>\r\n                        </span>\r\n                        <span class="value">{{code}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b> Acquisition Type: </b>\r\n                        </span>\r\n                        <span class="value">{{name}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label">\r\n                            <b> Acquisition Type Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{createdBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </ng-template>\r\n\r\n\r\n    <ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n      \r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n           \r\n        </div>\r\n        <div class="modal-body">\r\n            <strong>\r\n                Acquisition Type:\r\n                <span class="new-label">{{restorerecord.name}}</span>\r\n            </strong>\r\n        </div>\r\n      \r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n      </ng-template>\r\n\r\n    <ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n        <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n            <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are you sure you want to delete?</h4>\r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n        </div>\r\n        <div class="modal-body">\r\n            <strong>\r\n                Acquisition Type Code:\r\n                <span class="new-label">{{code_Name}}</span>\r\n            </strong>\r\n        </div>\r\n\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" (click)="deleteItemAndCloseModel()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n\r\n    </ng-template>\r\n\r\n    <ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n        <div class="modal-header">\r\n            <h4 class="modal-title" *ngIf="isEditMode">Edit Acquisition Type</h4>\r\n            <h4 class="modal-title" *ngIf="!isEditMode">Add Acquisition Type</h4>\r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n        </div>\r\n        <div class="modal-body">\r\n            <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="SaveandEditAssetAcquisitionType()">\r\n                <div class="form-group">\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-4">\r\n                            <label for="name" class="control-label" style="width:100% !important;">\r\n                                Acquisition Type Code\r\n                                <span class="clr-red">*</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            \x3c!--<p-autoComplete field="code" [(ngModel)]="codeName" (onSelect)="partnmId($event)" (onKeyUp)="eventHandler(\'code\', $event.target.value)" name="code"\r\n                                            [suggestions]="localCollection" (completeMethod)="filterDisposalType($event)" [size]="30" [minLength]="1"\r\n                                            [dropdown]="true" class="p-autoComplete-ctsm" required>--\x3e\r\n                            <p-autoComplete [(ngModel)]="codeName" name="codeName" (onSelect)="partnmId($event)" \r\n                                            (onKeyUp)="eventHandler($event)" [suggestions]="localCollection" \r\n                                            (completeMethod)="filterAssetAcquisitionType($event)" [size]="30"\r\n                                            (onBlur)="onBlurCheck($event)"\r\n                                            [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                <ng-template let-codeName pTemplate="item">\r\n                                    <div class="ui-helper-clearfix">{{codeName}}</div>\r\n                                </ng-template>\r\n\r\n                            </p-autoComplete>\r\n                            <div *ngIf="recordExists && codeName" class="clr-red">Already Exists</div>\r\n                            <div class="clear"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-4">\r\n                            <label for="AssetAcquisitionTypeName" class="control-label control-item">\r\n                                Acquisition Type\r\n                                <span class="clr-red">*</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <input type="text" name="name" class="form-control" required #Name="ngModel" \r\n                                   [(ngModel)]="sourceAction.name" minlength="2"\r\n                                   (ngModelChange)="enableSave()">\r\n                            <div *ngIf="Name.dirty && Name.errors?.required && Name.errors" class="invalid-form-error-message">\r\n                                Acquisition Type required.\r\n                            </div>\r\n                            <div *ngIf="Name.dirty && Name.errors?.minlength && Name.errors" class="invalid-form-error-message">\r\n                                Acquisition Type must be at least 2 characters long.\r\n                            </div>\r\n                            <div class="clear"></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-4">\r\n                            <label for="AssetAcquisitionTypeMemo" class="control-label">Memo</label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <textarea class="text-item" #memo="ngModel" id="memo" \r\n                                      [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceAction.memo" minlength="2"\r\n                                      (ngModelChange)="enableSave()"></textarea>\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="col-sm-6">\r\n                        <div class="checkbox-cstm check-value">\r\n                            <label>\r\n                                <input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input trigger2" checked id="isActive" [(ngModel)]="sourceAction.isActive" [ngModelOptions]="{standalone: true}">\r\n                                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                Active\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button class="btn btn-primary" [disabled]="!userForm.valid || disableSave" (click)="SaveandEditAssetAcquisitionType()">{{isEditMode == true ? \'Update\' : \'Save\' }}</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-xl">\r\n\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">History of Acquisition Type</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="table-responsive rro-table-cstm">\r\n                        <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                            <thead>\r\n                                <tr>\r\n                                    \x3c!-- <th>UMID</th> --\x3e\r\n                                    <th>Acquisition Type Code</th>\r\n                                    <th>Acquisition Type</th>\r\n                                    <th>Memo</th>\r\n                                    <th>IsActive</th>\r\n                                    <th>Updated By</th>\r\n                                    <th>Updated Time</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf="auditHistory.length> 0">\r\n                                <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                    \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'code\', audit.code)  ? \'black\' : \'red\'  }">{{audit.code}}</td>\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'name\', audit.name)  ? \'black\' : \'red\'  }">{{audit.name}}</td>\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                    <td>{{audit.updatedBy}}</td>\r\n                                    <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                                </tr>\r\n                            </tbody>\r\n\r\n\r\n                        </table>\r\n                        <ng-template #noDatavailable>\r\n                            <div class="text-center">\r\n                                <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                                <h4 style="color: #ff5663;">No History Found </h4>\r\n                            </div>\r\n\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>'},eeWq:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Depreciation Method</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                               matTooltip="Add Depreciation Method" \r\n                               matTooltipPosition="above"\r\n                               (click)="open(contentEdit)">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Depreciation Method</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="open(contentEdit)"\r\n                                  >\r\n                                  Add Depreciation Method\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <div class="form-row col-row col-row1" *ngIf="this.updateMode || this.updateMode">\r\n                            <div class="col-md-4 display-flex inline-block" style="margin-top: 25px;">\r\n                                <div>\r\n                                    <button type="button" id="btnUpdatedepriciationMethod" *ngIf="this.updateMode" (click)="updatedepriciationmethod()" name="" class="btn btn-success nobg btn-cstm" data-toggle="tooltip" data-original-title="Update"><i class="fa fa-edit"></i></button>\r\n                                    <button type="button" id="btnResetdepriciationMethod" *ngIf="this.updateMode" (click)="resetdepriciationmethod()" name="" class="btn btn-default nobg btn-cstm" data-toggle="tooltip" data-original-title="Reset"><i class="fa fa-edit"></i></button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                      \r\n                \r\n\r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm"\r\n                         [value]="depriciationMethodList" [metaKeySelection]="true"\r\n                          [totalRecords]="totalRecords" [rows]="pageSize" [paginator]="true" [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" selectionMode="multiple" [(selection)]="selectedColumn"\r\n                                 [resizableColumns]="true" [reorderableColumns]="true" [scrollable]="true" scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="selectedData" optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left"></p-multiSelect>\r\n                                   \r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  \r\n                                                      <div\r\n                                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                                      >\r\n                                                        <div class="form-group">\r\n                                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                          <div\r\n                                                            class="pull-left"\r\n                                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                                          >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                    \x3c!--  --\x3e\r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                                                   <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"  style="padding: 5px 12px !important;" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"  style="padding: 5px 12px !important;" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" label="Export Selected Data" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"\r\n                                                (click)="sampleExcelDownload()"  style="padding: 5px 12px !important;" matTooltip="Download Sample File" matTooltipPosition="above" c>\r\n                                            Sample File Download\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openView(view,rowData)">\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px">\r\n                                        <div *ngIf="currentDeletedstatus==false">                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                             (click)="openView(view,rowData)" matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                       \r\n                                        <span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openEdit(contentEdit,rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                        (click)="openEdit(contentEdit,rowData)" matTooltip="Edit" \r\n                                        matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openDelete(content,rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                        \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete" \r\n                                        matTooltipPosition="above" (click)="openDelete(content,rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n                                        <span data-target="#contentHist" data-toggle="modal" ><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button\r\n                                         matTooltip="History" matTooltipPosition="above" \r\n                                         data-target="#contentHist" data-toggle="modal" (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view">\r\n                                           <a class="btn nobg" (click)="openView(view,rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="depriciationMethodList && depriciationMethodList.length == 0 || depriciationMethodList && depriciationMethodList.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label> \r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n      \r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n           \r\n        </div>\r\n        <div class="modal-body">\r\n            <strong>\r\n                Depriciation Method:\r\n                <span class="new-label">{{restorerecord.name}}</span>\r\n            </strong>\r\n        </div>\r\n      \r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n      </ng-template> \r\n\r\n    <ng-template #view class="modal fade " id="view" role="dialog">\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n                <h4 class="modal-title">Depreciation Method Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Depreciation Method Code: </b>\r\n                        </span>\r\n                        <span class="value">{{code}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Depreciation Method Name: </b>\r\n                        </span>\r\n                        <span class="value">{{name}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Depreciation Method: </b>\r\n                        </span>\r\n                        <span class="value">{{depreciationMethod}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Sequence </b>\r\n                        </span>\r\n                        <span class="value">{{sequenceNo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Depreciation Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{createdBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </ng-template>\r\n\r\n    <ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n        </div>\r\n        <div class="modal-body">\r\n            <strong>\r\n                Depreciation Method Code:\r\n                <span class="new-label">{{code_Name}}</span>\r\n            </strong>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-primary" (click)="deleteItemAndCloseModel()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n        <div class="modal-header">\r\n            <h4 class="modal-title" *ngIf="isEditMode">Edit Depreciation Method</h4>\r\n            <h4 class="modal-title" *ngIf="!isEditMode">Add Depreciation Method</h4>\r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n        </div>\r\n        <div class="modal-body editdepriciation">\r\n            <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="SaveandEditDepreciaionMethod()">\r\n                <div class="form-group">\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-5">\r\n                            <label for="description" class="control-label">\r\n                                Depreciation Method Code\r\n                                <span class="clr-red">*</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <p-autoComplete [(ngModel)]="codeName" (ngModelChange)="getmemo()" name="code" (onSelect)="partnmId($event)"\r\n                                            (onKeyUp)="eventHandler($event)" [suggestions]="localCollection"\r\n                                            (completeMethod)="filterDepreciationMethod($event)" [size]="30"\r\n                                            [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                <ng-template let-codeName pTemplate="item">\r\n                                    <div class="ui-helper-clearfix">{{codeName}}</div>\r\n                                </ng-template>\r\n\r\n                            </p-autoComplete>\r\n                            <div *ngIf="disableSave" class="clr-red">Already Exists</div>\r\n                            <div class="clear"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-5">\r\n                            <label for="shortName" class="control-label">\r\n                                Depreciation Method Name\r\n                                <span class="clr-red">*</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <input type="text" (ngModelChange)="getmemo()" name="assetDepreciationMethodName" class="form-control" #Name="ngModel" [(ngModel)]="sourceAction.name" required>\r\n                            <div *ngIf="Name.dirty && Name.errors?.required && Name.errors" class="invalid-form-error-message">\r\n                                Depreciation Name required.\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-5">\r\n                            <label for="standard" class="control-label">\r\n                                Depreciation Method\r\n                                <span class="clr-red">*</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <input type="text" (ngModelChange)="getmemo()" name="assetDepreciationBasis" class="form-control" #depreciationMethod="ngModel" [(ngModel)]="sourceAction.depreciationMethod" required>\r\n                            <div *ngIf="depreciationMethod.dirty && depreciationMethod.errors?.required && depreciationMethod.errors" class="invalid-form-error-message">\r\n                                Depreciation Method required.\r\n                            </div>\r\n                            <div *ngIf="depreciationMethod.dirty && depreciationMethod.errors?.minlength && depreciationMethod.errors" class="invalid-form-error-message">\r\n                                Depreciation Method must be at least 2 characters long.\r\n                            </div>\r\n                            <div class="clear"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-5">\r\n                            <label for="description" class="control-label">Sequence <span class="clr-red">*</span></label>\r\n\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <p-autoComplete [(ngModel)]="sequenceNo" (ngModelChange)="getmemo()" name="sequenceNo" \r\n                                            (onSelect)="partnmId1($event)"\r\n                                            (onBlur)="onBlurCheck($event)" (onKeyUp)="eventHandler1($event)" \r\n                                            [suggestions]="localSequenceList"\r\n                                            (completeMethod)="filterSequenceNo($event)" [size]="30"\r\n                                            [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                <ng-template let-codeName pTemplate="item">\r\n                                    <div class="ui-helper-clearfix">{{codeName}}</div>\r\n                                </ng-template>\r\n\r\n                            </p-autoComplete>\r\n                            <div *ngIf="disableSaveForSequence && sequenceNo" class="clr-red">Already Exists</div>\r\n                            <div class="clear"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-5">\r\n                            <label for="description" class="control-label">Memo</label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <textarea class="text-item" (ngModelChange)="getmemo()" #memo="ngModel" id="memo" name="assetDepreciationMemo" [(ngModel)]="sourceAction.memo" minlength="2"></textarea>\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="col-sm-6">\r\n                        <div class="checkbox-cstm check-value">\r\n                            <label>\r\n                                <input type="checkbox" (ngModelChange)="getmemo()" name="isActive" #isActive="ngModel" class="form-check-input trigger2" checked id="isActive" [(ngModel)]="sourceAction.isActive" [ngModelOptions]="{standalone: true}">\r\n                                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                Active\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button class="btn btn-primary" [disabled]="!userForm.valid || disableSave || disableSaveForSequence || disableSaveForEdit" (click)="SaveandEditDepreciationMethod()">{{isEditMode == true ? \'Update\' : \'Save\' }}</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n        <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n            <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-xl">\r\n\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">History of Depreciation Method</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="table-responsive rro-table-cstm">\r\n                        <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                            <thead>\r\n                                <tr>\r\n                                    \x3c!-- <th>UMID</th> --\x3e\r\n                                    <th>Depreciation Method Code</th>\r\n                                    <th>Depreciation Method Name</th>\r\n                                    <th>Depreciation Method</th>\r\n                                    <th>Memo</th>\r\n                                    <th>IsActive</th>\r\n                                    <th>Updated By</th>\r\n                                    <th>Updated Time</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf="auditHistory.length> 0">\r\n                                <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                    \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'assetDepreciationMethodCode\', audit.assetDepreciationMethodCode)  ? \'black\' : \'red\'  }">{{audit.assetDepreciationMethodCode}}</td>\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'assetDepreciationMethodName\', audit.assetDepreciationMethodName)  ? \'black\' : \'red\'  }">{{audit.assetDepreciationMethodName}}</td>\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'assetDepreciationMethodBasis\', audit.assetDepreciationMethodBasis)  ? \'black\' : \'red\'  }">{{audit.assetDepreciationMethodBasis}}</td>\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'assetDepreciationMemo\', audit.assetDepreciationMemo)  ? \'black\' : \'red\'  }">{{audit.assetDepreciationMemo}}</td>\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                    <td>{{audit.updatedBy}}</td>\r\n                                    <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                                </tr>\r\n                            </tbody>\r\n\r\n\r\n                        </table>\r\n                        <ng-template #noDatavailable>\r\n                            <div class="text-center">\r\n                                <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                                <h4 style="color: #ff5663;">No History Found </h4>\r\n                            </div>\r\n\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>'},efKV:function(t,e,a){"use strict";a.r(e),e.default=".search-box {\n  flex-direction: column;\n  box-sizing: border-box;\n  display: flex;\n}\n\n.search-box .mat-form-field {\n  padding: 0 2em;\n}\n\n.control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}"},eq1Q:function(t,e,a){"use strict";a.r(e),e.default=".search-box {\n  flex-direction: column;\n  box-sizing: border-box;\n  display: flex;\n}\n\n.search-box .mat-form-field {\n  padding: 0 2em;\n}\n\n.new-margin {\n  margin-top: 10px;\n}\n\n.x_panel {\n  border: none;\n}\n\n.control-label {\n  width: 150px !important;\n}"},f3dK:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                            <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Reason</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" \r\n                            matTooltipPosition="above" matTooltip="Add Reason" \r\n                            tooltipPosition="right" (click)="resetReasonForm()"\r\n                             data-target="#addReason" data-toggle="modal">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Reason</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="resetReasonForm()"\r\n                             data-target="#addReason" data-toggle="modal"\r\n                                  >\r\n                                  Add Reason\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n\r\n                      \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="reasonPagination" \r\n                        [first]="0" \r\n                        [totalRecords]="totalRecords"\r\n                                 [rows]="pageSize" [metaKeySelection]="true" [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[10,20,50,100]"\r\n                                 [columns]="selectedColumns" selectionMode="multiple" (onPage)="changePage($event)"\r\n                                 [resizableColumns]="true" [reorderableColumns]="true" [scrollable]="true" scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="cols" optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n                                    \x3c!--<div class="inner-addon right-addon w200 inline-block">\r\n        <i class="fa fa-search"></i>\r\n        <input type="text" pInputText size="50" class="form-control ui-autocomplete-input" (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder="Global Filter">\r\n    </div>--\x3e\r\n</div>\r\n<div class="col">\r\n  \r\n      <div\r\n        style="width: 370px; float: right; padding-top: 3px;"\r\n      >\r\n        <div class="form-group">\r\n          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n          <div\r\n            class="pull-left"\r\n            style="margin-top: 4px; margin-right: 15px;"\r\n          >          \r\n          <label class="radio-cstm wauto">\r\n            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n            <span class="checkmark"></span>Active\r\n        </label>\r\n    </div>\r\n    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n        <label class="radio-cstm wauto">\r\n            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n            <span class="checkmark"></span>In-Active\r\n        </label>\r\n    </div>\r\n    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n        <label class="radio-cstm wauto">\r\n            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n            <span class="checkmark"></span>All\r\n        </label>\r\n    </div>\r\n        <div class="checkbox-cstm" style="margin-left: 0;">\r\n          <label style="width: auto !important;margin-top: 3px;">\r\n            \x3c!--  --\x3e\r\n            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n             (click)="getDeleteListByStatus($event.target.checked)"\r\n              />\r\n            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n          Show  Deleted List \r\n          </label>\r\n        </div>\r\n\r\n</div>\r\n</div>\r\n</div>\r\n\r\n</div>\r\n<div class="row">\r\n    <div class="col">\r\n\r\n    <button type="button" class="btn btn-primary new-table-button" matTooltipPosition="above" matTooltip="Download Selected"   pButton icon="fa-download"\r\n                                            iconPos="left" label="Export All Data"  style="padding: 5px 12px !important;" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltipPosition="above" matTooltip="Download All Data"   pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Selection Only"  style="padding: 5px 12px !important;" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    \x3c!--<a (click)="open(contentEdit)" matTooltip="Add Reason" class="btn btn-success nobg"><span><i class="fa fa-plus"></i></span></a>--\x3e\r\n                                    \x3c!--<div class="excel-upload">\r\n                                        <input type="file" name="upload[]" id="upload" class="uploaddoc upload-file" data-multiple-caption="{count} files selected" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)"><i class="fa fa-upload"></i></span>\r\n                                        </label>\r\n                                    </div>--\x3e\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()">Sample File Download</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                                  \r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n\r\n\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{col.field == \'createdDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\'):rowData[col.field] && col.field == \'updatedDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\'):rowData[col.field]}}\r\n                                    </td>\r\n\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}" (onChange)="handleChange(rowData,$event)"></p-inputSwitch>--\x3e\r\n\r\n                                        <span data-toggle="modal" data-target="#view"> \r\n                                            <a class="btn btn-info boxed-float-btn nobg"\r\n                                             data-toggle="tooltip" (click)="openView(view,rowData)" matTooltip="View"\r\n                                            matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n\r\n                                        \r\n                                            <span data-target="#addReason" data-toggle="modal">\r\n                                                <a class="btn nobg" \r\n                                                (click)="editReason(rowData)" \r\n                                                matTooltip="Edit" \r\n                                                matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                                </i></a> </span>\r\n                                        \r\n                                            \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                            (click)="editReason(rowData)" \r\n                                        data-target="#addReason" data-toggle="modal"\r\n                                         matTooltip="edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openDelete(content,rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button\r\n                                         matTooltip="delete" matTooltipPosition="above"\r\n                                          (click)="openDelete(content,rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History" \r\n                                        matTooltipPosition="above"\r\n                                                data-target="#contentHist" data-toggle="modal"\r\n                                                (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view">\r\n                                           <a class="btn nobg" (click)="openView(view,rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n\t\t\t\t\t\t\t\t\t\t *ngIf="reasonPagination && reasonPagination.length == 0 || reasonPagination && reasonPagination.length ==null">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td [attr.colspan]="7" class="no-records-cstm">\r\n\t\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label> <input style="width: 5%;"\r\n                                [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label> <input style="width: 5%;"\r\n                                [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n\r\n                            </ng-template>\r\n\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\x3c!-- Delete Contact Modal --\x3e\r\n\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Reason:\r\n            <span class="new-label">{{reason_Name}}</span>\r\n        </strong>\r\n    </div>\r\n\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="deleteItemAndCloseModel()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Reason:\r\n            <span class="new-label">{{restorerecord.reasonCode}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title" *ngIf="isEditMode">Edit Reason</h4>\r\n        <h4 class="modal-title" *ngIf="!isEditMode">Add Reason</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="editItemAndCloseModel()">\r\n            <div class="form-group">\r\n                <label for="reasonCode" class="control-label">Reason Code<span class="clr-red">*</span></label>\r\n                <div class="inner-addon right-addon inline-block">\r\n                    <p-autoComplete [(ngModel)]="reasonName" (onSelect)="itemId($event)" (onKeyUp)="eventHandler($event)" [ngModelOptions]="{standalone: true}" [suggestions]="localCollection" (completeMethod)="filterReasons($event)" [size]="30"\r\n                                    [minLength]="1" [dropdown]="true">\r\n                        <ng-template let-reasonName pTemplate="item">\r\n                            <div class="ui-helper-clearfix">{{reasonName}}</div>\r\n                        </ng-template>\r\n                    </p-autoComplete>\r\n                    <div *ngIf="disableSave" style="color:red">Already Exists</div>\r\n\r\n                    <div class="clear"></div>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="reasonForRemoval" class="control-label">Reason For Removal<span class="clr-red">*</span></label>\r\n                <div class="control-data">\r\n                    <input type="text" name="reasonForRemoval" class="form-control" #reasonForRemoval="ngModel" [(ngModel)]="sourceAction.reasonForRemoval">\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="form-group">\r\n                <label for="description" class="control-label">Memo</label>\r\n                <div class="control-data">\r\n                    <input #memo="ngModel" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceAction.memo" minlength="2">\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="form-group">\r\n                <div class="col-sm-6">\r\n                    <label class="form-check-label" for="isActive">\r\n                        <input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input" checked id="isActive" [(ngModel)]="sourceAction.isActive"> Active\r\n                    </label>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n\r\n\r\n            <div class="modal-footer">\r\n\r\n                <button class="btn btn-success" [disabled]="disableSave">Submit</button>\r\n                <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n\r\n</ng-template>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Reason</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Reason Code</th>\r\n                                <th>Reason For Removal</th>\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n\r\n                                <td [ngStyle]="{\'color\': auditHistory[i>0 ? i-1 : i].reasonCode === audit.reasonCode ? \'black\' : \'red\'  }">\r\n                                    {{audit.reasonCode}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': auditHistory[i>0 ? i-1 : i].reasonForRemoval === audit.reasonForRemoval ? \'black\' : \'red\'  }">\r\n                                    {{audit.reasonForRemoval}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': auditHistory[i>0 ? i-1 : i].memo === audit.memo ? \'black\' : \'red\'  }">\r\n                                    {{audit.memo}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': auditHistory[i>0 ? i-1 : i].isActive === audit.isActive ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}\r\n                                </td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<ng-template #view class="modal fade " id="view" role="dialog">\r\n\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n            <h4 class="modal-title">Reason Details</h4>\r\n        </div>\r\n        <div class="modal-body viewform">\r\n            <div class="col-sm-12">\r\n                <p><span class="label"><b>Reason Name: </b></span><span class="value">{{ reason_Name}}</span></p>\r\n                <p><span class="label"><b>ReasonFor Removal: </b></span><span class="value">{{ reasonForRemoval}}</span></p>\r\n                <p><span class="label"><b>Memo: </b></span><span class="value">{{memo}}</span></p>\r\n            </div>\r\n\r\n            <div class="clear"></div>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-info" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<div #addReason id="addReason" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Reason  </h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #RSN="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="reasonCode" class="control-label">\r\n                                    Reason Code\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="reasonCode" [(ngModel)]="addNewReason.reasonCode" (onSelect)="selectedRSN($event)" (onKeyUp)="checkReasonCodeExists(\'reasonCode\', $event.target.value)" name="rsnCode"\r\n                                                [suggestions]="reasonList" (completeMethod)="filterReasonCodes($event)" [size]="30" [minLength]="1"\r\n                                                [dropdown]="true" class="p-autoComplete-ctsm" required (ngModelChange)="getmemo()">\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForReason" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Reason For Removal</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="reasonForRemoval" name="reasonForRemoval" [(ngModel)]="addNewReason.reasonForRemoval" \r\n                                (ngModelChange)="getmemo()" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        \x3c!--<div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="reasonForRemoval" class="control-label">\r\n                                    Reason For Removal\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="reasonForRemoval" [(ngModel)]="addNewReason.reasonForRemoval" (onSelect)="selectedReasonForRemoval($event)" (onKeyUp)="checkReasonForRemovalExists(\'reasonForRemoval\', $event.target.value)"\r\n                                                name="reasonForRemoval"\r\n                                                [suggestions]="reasonForRemovalList" (completeMethod)="filterReasonForRemoval($event)" [size]="30" [minLength]="1"\r\n                                                [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForReasonForRemoval" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>--\x3e\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription" [(ngModel)]="addNewReason.memo" minlength="2" (ngModelChange)="getmemo()"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNewReason.isActive" (ngModelChange)="getmemo()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" [disabled]="RSN.invalid || disableSaveForReason || disableSaveForEdit " (click)="saveReason();"> {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetReasonForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n'},fJLj:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n\t<div class="right_col" role="main">\r\n\t\t<div class="x_panel">\r\n\t\t\t<div class="x_content">\r\n\t\t\t\t\x3c!--<nav aria-label="breadcrumb">\r\n\t\t\t\t\t<ol class="breadcrumb">\r\n\t\t\t\t\t\t<li class="breadcrumb-item"><a routerLink="/">Dashboard</a></li>\r\n\t\t\t\t\t\t<li class="breadcrumb-item active" aria-current="page">GL Financial Statement</li>\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</nav>--\x3e\r\n\r\n\t\t\t\t<h4 class="page-heading clr-green">GL Financial Statement</h4>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>'},fO72:function(t,e,a){"use strict";a.r(e),e.default=""},fjO5:function(t,e,a){"use strict";a.r(e),e.default="control-label {\n  margin-top: 10px;\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}\n\n.modal.editModal .modal-body div.form-group label, .modal.editModal label {\n  font-weight: normal;\n  width: 100%;\n  text-align: left;\n}"},fzk4:function(t,e,a){"use strict";a.r(e),e.default="#footer {\n  font-size: 11px !important;\n  font-weight: 12px !important;\n}\n\n.footer1 {\n  margin-right: 0px;\n}\n\n.new-label {\n  color: cadetblue;\n}\n\n.control-label {\n  text-align: left;\n  font-size: 12px !important;\n  width: 100% !important;\n  font-weight: 500;\n}\n\n.x_panel {\n  border: none;\n}"},gM3M:function(t,e,a){"use strict";a.r(e),e.default=""},gvp4:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Integration</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" matTooltipPosition="above" matTooltip="Add Integration" tooltipPosition="right"\r\n                                data-target="#add" data-toggle="modal" (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Integration</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal" (click)="resetForm()"\r\n                                  >\r\n                                  Add Integration\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n\r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm"\r\n                         [value]="originalData" [first]="0"\r\n                            [rows]="pageSize" [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[10,20,50,100]"\r\n                            [columns]="selectedColumns" selectionMode="multiple" (onPage)="changePage($event)"\r\n                            [resizableColumns]="true" [reorderableColumns]="true" [scrollable]="true"\r\n                            [totalRecords]="totalRecords" scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header"\r\n                                        [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                        (onChange)="columnsChanges()"></p-multiSelect>\r\n\r\n                                  \r\n                                    </div>\r\n                                    <div class="col">\r\n                                      \r\n                                          <div\r\n                                            style="width: 370px; float: right; padding-top: 3px;"\r\n                                          >\r\n                                            <div class="form-group">\r\n                                              \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                              <div\r\n                                                class="pull-left"\r\n                                                style="margin-top: 4px; margin-right: 15px;"\r\n                                              >\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>In-Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>All\r\n                                                        </label>\r\n                                                    </div>\r\n                                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                          <label style="width: auto !important;margin-top: 3px;">\r\n                                                            \x3c!--  --\x3e\r\n                                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                             (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                              />\r\n                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                          Show  Deleted List \r\n                                                          </label>\r\n                                                        </div>\r\n                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="row">\r\n                                      <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download  Data" matTooltipPosition="above"\r\n                                         pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Selected" matTooltipPosition="above"\r\n                                         pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Selection Only"\r\n                                        (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload"\r\n                                            (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                            accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltipPosition="above"  style="padding: 5px 12px !important;" matTooltip="Sample File download" (click)="sampleExcelDownload()">Sample File\r\n                                            Download</button>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                            (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle data-toggle="modal" data-target="#view"\r\n                                        (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                       \r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}" matTooltipPosition="above" name="isActive{{rowIndex}}"\r\n                                            (onChange)="changeStatus(rowData)"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                                (click)="viewSelectedRow(rowData)" matTooltip="view" matTooltipPosition="above" data-target="#view"\r\n                                                data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        \r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                            data-target="#add" data-toggle="modal" matTooltip="Edit"\r\n                                            matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete"\r\n                                         matTooltipPosition="above"\r\n                                            data-target="#delete" data-toggle="modal" (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n                                      \r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n                                      \r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History" \r\n                                        matTooltipPosition="above"\r\n                                            data-target="#contentHist" data-toggle="modal"\r\n                                            (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                             <tr>\r\n                               <td [attr.colspan]="7" class="no-records-cstm">\r\n                                  No records found\r\n                                </td>\r\n                            </tr>\r\n                          </ng-template>\r\n                        \r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText\r\n                                    type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText\r\n                                    type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Integration:\r\n            <span class="new-label">{{restorerecord.description}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>Integration:\r\n                    <span class="new-label">{{selectedRowforDelete.description}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Integration</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n                       \r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Integration\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="description" [(ngModel)]="addNew.description"\r\n                                    (onSelect)="selectedDescription($event)"\r\n                                    (onKeyUp)="checkGroupDescriptionExists($event.target.value)"\r\n                                    name="description" [suggestions]="descriptionList"\r\n                                    (completeMethod)="filterDescription($event)" [size]="30" [minLength]="1"\r\n                                    [dropdown]="true" class="p-autoComplete-ctsm" required (ngModelChange)="getmemo()">\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForDescription" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Website URL\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                               <input type="text" class="form-control" name="portalURL" [(ngModel)]="addNew.portalUrl" required (ngModelChange)="getmemo()" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" (ngModelChange)="getmemo()" name="memodescription"\r\n                                    [(ngModel)]="addNew.memo" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive" (ngModelChange)="getmemo()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal"\r\n                    [disabled]="create.invalid  || disableSaveForDescription || disableSaveIntegration " (click)="save();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n\r\n                                <th>Website URL</th>\r\n                                <th>Description</th>\r\n\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                <td>{{ext.portalUrl}}</td>\r\n                                <td>{{ext.description}}</td>\r\n\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Integration</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Integration</th>\r\n                                <th>Website Url</th>\r\n\r\n                                <th>Memo</th>\r\n                                <th>Is Active</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td\r\n                                    [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.description}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'portalURL\', audit.portalURL)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.portalURL}}\r\n                                </td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.memo}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Integration Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Website URL: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.portalUrl}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Integration: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n                    \x3c!-- <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header"> Standard: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.standard}}</span>\r\n                </p> --\x3e\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">IsActive</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},hOhG:function(t,e,a){"use strict";a.r(e),e.default=".new-label {\n  color: cadetblue;\n}\n\n.text-item {\n  width: 100%;\n  border-radius: 5px !important;\n  margin-left: 0px;\n}\n\n.control-label {\n  margin-top: 5px;\n  text-align: left;\n  width: 100% !important;\n}"},iWuQ:function(t,e,a){"use strict";a.r(e),e.default=".footer {\n  margin-left: 65%;\n}\n\n.footer1 {\n  margin-right: 0px;\n}\n\n.new-label {\n  color: cadetblue;\n}\n\n.text-item {\n  width: 100%;\n  border-radius: 5px !important;\n  margin-left: 0px;\n}\n\n.control-label {\n  margin-top: 5px;\n  text-align: left;\n  width: 100% !important;\n}"},j7KC:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Work Performed</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" \r\n                            matTooltipPosition="above" matTooltip="Add Work Performed" tooltipPosition="right"\r\n                             data-target="#add" data-toggle="modal"\r\n                                (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Work Performed</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal"\r\n                                    (click)="resetForm()"\r\n                                  >\r\n                                  Add Work Performed\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" [first]="0" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true"\r\n                            [pageLinks]="3" \r\n                            [rowsPerPageOptions]="[10,20,50,100]" \r\n                            [columns]="selectedColumns" \r\n                            selectionMode="multiple"\r\n                            [metaKeySelection]="true"\r\n                            (onPage)="changePage($event)" \r\n                            [resizableColumns]="true" \r\n                            [reorderableColumns]="true" \r\n                            [scrollable]="true"\r\n                            [totalRecords]="totalRecords" \r\n                            scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header" [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}"\r\n                                        style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n                                   \r\n                                    </div>\r\n                                    <div class="col">\r\n                                      \r\n                                          <div\r\n                                            style="width: 370px; float: right; padding-top: 3px;"\r\n                                          >\r\n                                            <div class="form-group">\r\n                                              \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                              <div\r\n                                                class="pull-left"\r\n                                                style="margin-top: 4px; margin-right: 15px;"\r\n                                              >\r\n                                              <label class="radio-cstm wauto">\r\n                                                <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                <span class="checkmark"></span>Active\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                            <label class="radio-cstm wauto">\r\n                                                <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                <span class="checkmark"></span>In-Active\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                            <label class="radio-cstm wauto">\r\n                                                <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                <span class="checkmark"></span>All\r\n                                            </label>\r\n                                        </div>\r\n                                            <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                              <label style="width: auto !important;margin-top: 3px;">\r\n                                                \x3c!--  --\x3e\r\n                                                <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                 (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                  />\r\n                                                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                              Show  Deleted List \r\n                                              </label>\r\n                                            </div>\r\n                    \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                    \r\n                        </div>\r\n                        <div class="row">\r\n                            <div class="col">\r\n                                        <button type="button" class="btn btn-primary " matTooltip="Download All Data"  style="padding: 5px 12px !important;" matTooltipPosition="above"   pButton icon="fa-download"\r\n                                        iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary " matTooltip="Download Selected"  style="padding: 5px 12px !important;" matTooltipPosition="above"   pButton icon="fa-download"\r\n                                        iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file" accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" (click)="sampleExcelDownload()"  style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download Sample File"  >Sample File Download\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>                \r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal"\r\n                                        data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" matTooltip="Update" name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" (click)="viewSelectedRow(rowData)" \r\n                                            matTooltip="view" data-target="#view" matTooltipPosition="above"\r\n                                               data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                       \r\n                                        <span  data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                         data-target="#add" \r\n                                        data-toggle="modal" matTooltip="Edit" matTooltipPosition="above" >\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button \r\n                                        matTooltip="Delete" data-target="#delete"\r\n                                         data-toggle="modal" matTooltipPosition="above"\r\n                                          (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" data-target="#contentHist" data-toggle="modal" \r\n                                         (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                        </div>\r\n\r\n                                        <div *ngIf="currentDeletedstatus==true">\r\n                                            <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                            matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                           <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                          <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                            \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                         \r\n                                        </div> \r\n\r\n\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n\t\t\t\t\t\t\t\t\t\t *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td [attr.colspan]="7" class="no-records-cstm">\r\n\t\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>Work Performed Description:\r\n            <span class="new-label">{{restorerecord.description}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>Work Performed Description:\r\n                    <span class="new-label">{{selectedRowforDelete.description}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Work Performed</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">Work Performed Code\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                    <p-autoComplete field="workPerformedCode" [(ngModel)]="addNew.workPerformedCode" (onSelect)="selectedWorkperformed($event)" (onKeyUp)="checkGroupworkPerformedExists(\'workPerformedCode\', $event.target.value)"\r\n                                    name="workPerformedCode" [suggestions]="workPerformedCodeList" (completeMethod)="filterWorkperformed($event)" (onBlur)="onBlur($event)"\r\n                                    [size]="30" [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required (ngModelChange)="getmemo()">\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveWorkperformedMsg" class="clr-red">Already Exist</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">Work Performed Description\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="description" [(ngModel)]="addNew.description" (onSelect)="selectedDescription($event)" (onKeyUp)="checkGroupDescriptionExists1(\'description\', $event.target.value)"\r\n                                    name="description" [suggestions]="descriptionList" (completeMethod)="filterDescription($event)"\r\n                                    [size]="30" [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required (ngModelChange)="getmemo()">\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForDescriptionMSG" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription" [(ngModel)]="addNew.memo" minlength="2" (ngModelChange)="getmemo()"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive" (ngModelChange)="getmemo()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" [disabled]="create.invalid || disableSaveWorkperformedMsg || disableSaveForDescriptionMSG || disableSaveForEdit "\r\n                    (click)="save();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n\r\n                                <th>Work Performed Code</th>\r\n                                <th>Description</th>\r\n\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                <td>{{ext.workPerformedCode}}</td>\r\n                                <td>{{ext.description}}</td>\r\n\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Work Performed</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>work Performed Code</th>\r\n                                <th>Work Performed</th>\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'workPerformedCode\', audit.workPerformedCode)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.workPerformedCode}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.description}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }"> {{audit.memo}}</td>\r\n                                   \r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Work Performed Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Work Performed Code: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.workPerformedCode}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Description: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n                    \x3c!-- <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header"> Standard: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.standard}}</span>\r\n                </p> --\x3e\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">IsActive</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},jNML:function(t,e,a){"use strict";a.r(e),e.default='<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <meta charset="utf-8" />\r\n    <title></title>\r\n</head>\r\n<body>\r\n<h2 style="text-align:center">This page is under Development</h2>\r\n</body>\r\n</html>'},jQJe:function(t,e,a){"use strict";a.r(e),e.default='<div class="pagination" >\r\n    <div class="description">\r\n        <p>Pagination</p>\r\n        <span class="page-counts">{{ getMin() }} - {{ getMax() }} of {{ count }}</span>\r\n        <span class="page-totals">{{ totalPages() }} pages</span>\r\n    </div>\r\n    <div class="numbers">\r\n        <button class="link" (click)="onPrev()" [disabled]="page === 1 || loading" [ngClass]="{ \'disabled\': page === 1 || loading }">&lt; Previous</button>\r\n\r\n        <button *ngFor="let pageNum of getPages()"\r\n                (click)="onPage(pageNum)"\r\n                [ngClass]="{\'active\': pageNum === page, \'disabled\': loading}">\r\n            {{ pageNum }}\r\n        </button>\r\n\r\n        <button class="link" (click)="onNext(true)" [disabled]="lastPage() || loading" [ngClass]="{ \'disabled\': lastPage() || loading }">Next &gt;</button>\r\n    </div>\r\n</div>'},jkiE:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                <h4 class="page-heading clr-green"> Vendor Capabilities</h4>\r\n                <p-table #dt [value]="allvendorcapabilities" [metaKeySelection]="true" [rows]="10" [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" selectionMode="multiple" [(selection)]="selectedColumn" [resizableColumns]="true" [reorderableColumns]="true">\r\n                    <ng-template pTemplate="caption">\r\n                        <div style="text-align: right">\r\n                            <p-multiSelect [options]="cols" [(ngModel)]="selectedColumns" optionLabel="header"\r\n                                           selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n\r\n                            <div class="inner-addon right-addon w200 inline-block">\r\n                                <i class="fa fa-search"></i>\r\n                                <input type="text" pInputText size="50" class="form-control ui-autocomplete-input" (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter">\r\n                            </div>\r\n                            <button type="button" pButton icon="fa-download" iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                            <button type="button" pButton icon="fa-download" iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                            <a (click)="open(contentEdit)" matTooltip="Add Vendor Capability" matTooltipPosition="above" class="btn btn-success nobg"><span><i class="fa fa-plus"></i></span></a>\r\n                            <div class="excel-upload">\r\n                                <input type="file" name="upload[]" id="upload" class="uploaddoc upload-file" data-multiple-caption="{count} files selected" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet">\r\n                                <label for="upload">\r\n                                    <span matTooltip="Upload Data (Excel)"><i class="fa fa-upload"></i></span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate="header" let-columns>\r\n                        <tr>\r\n                            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                {{col.header}}\r\n                                <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                            </th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                        <tr [pSelectableRow]="rowData">\r\n                            <td *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                {{col.field == \'createdDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\'):rowData[col.field] && col.field == \'updatedDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\'):rowData[col.field]}}\r\n                            </td>\r\n                            <td>\r\n                                <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                <span data-toggle="modal" data-target="#view"> <a class="btn btn-info boxed-float-btn nobg" matTooltip="View" matTooltipPosition="above" (click)="openView(view,rowData)" ><i class="fa fa-eye"></i></a> </span>\r\n                                <button class="btn-edit" mat-icon-button (click)="openEdit(contentEdit,rowData)" matTooltip="edit" matTooltipPosition="above">\r\n                                    <mat-icon>edit</mat-icon>\r\n                                </button>\r\n                                <button class="btn-delete" mat-icon-button matTooltip="delete" matTooltipPosition="above" (click)="openDelete(content,rowData);dt.reset()">\r\n                                    <mat-icon color="warn">delete</mat-icon>\r\n                                </button>\r\n                                <button class="btn-history" mat-icon-button matTooltip="history" matTooltipPosition="above" (click)="showAuditPopup(auditContent,rowData.vendorCapabilityId)">\r\n                                    <mat-icon color="green">history</mat-icon>\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="deleteItemAndCloseModel()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title" *ngIf="isEditMode">Edit Vendor capabilities</h4>\r\n        <h4 class="modal-title" *ngIf="!isEditMode">Add  Vendor capabilities</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="editItemAndCloseModel()">\r\n\r\n            <div class="form-group">\r\n                <label for="description" class="control-label"> VCID </label>\r\n                <div class="control-data">\r\n                    <input #GLCID="ngModel" id="capabilityId" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcevendorcapabilities.capabilityId" minlength="2" required>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div class="form-group">\r\n                <label for="netdays" class="control-label">Capability Name<span class="clr-red">*</span></label>\r\n                <div class="inner-addon right-addon inline-block">\r\n                    <p-autoComplete (onSelect)="Vendorcapabilitiesdescription($event)" (onKeyUp)=VendorcapabilitiesHandler($event) [(ngModel)]="sourcevendorcapabilities.capabilityName" [ngModelOptions]="{standalone: true}" [suggestions]="localCollection" (completeMethod)="filtervendor($event)" [size]="30"\r\n                                    [minLength]="1" [dropdown]="true">\r\n                        <ng-template let-capabilityName pTemplate="item">\r\n                            <div class="ui-helper-clearfix">{{capabilityName}}</div>\r\n                        </ng-template>\r\n                    </p-autoComplete>\r\n\r\n                    <div *ngIf="disableSavevendorcapabilities" class="clr-red">Already Exists</div>\r\n                </div>\r\n\r\n            </div>\r\n            <div class="modal-footer">\r\n\r\n                <button class="btn btn-success" [disabled]="disableSavevendorcapabilities">Submit</button>\r\n                <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #view class="modal fade " id="view" role="dialog" data-backdrop="static">\r\n\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n            <h4 class="modal-title">Vendor setup Details</h4>\r\n        </div>\r\n        <div class="modal-body viewform">\r\n            <p><span class="label"><b>Capability Name: </b></span><span class="value">{{capabilityViewfield.capabilityName}}</span></p>\r\n            <p><span class="label"><b>VCID: </b></span><span class="value">{{capabilityViewfield.capabilityId}}</span></p>\r\n            <div class="clear"></div>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-info" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #contentHist let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n\r\n        <h4 class="modal-title">History of Vendor Capabilities</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n\r\n\r\n    </div>\r\n    <div class="modal-body">\r\n\r\n        <div class="table-responsive">\r\n            <table class="table table-bordered">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Capability Name</th>\r\n                        <th>Field Name</th>\r\n                        <th>Previous Value</th>\r\n                        <th>After Value</th>\r\n                        <th>Last Updated By</th>\r\n                        <th>Last Updated Time</th>\r\n                    </tr>\r\n                </thead>\r\n                <tr *ngFor="let audit of auditHisory">\r\n                    <td>{{audit.auditHistoryId}}</td>\r\n                    <td>{{audit.columnName}}</td>\r\n                    <td>{{audit.previousValue}}</td>\r\n                    <td>{{audit.newValue}}</td>\r\n                    <td>{{audit.updatedBy}}</td>\r\n                    <td>{{audit.updatedDate| date: \'MM/dd/yyyy\'}}</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n    </div>\r\n</ng-template>'},k7KX:function(t,e,a){"use strict";a.r(e),e.default=".search-box {\n  flex-direction: column;\n  box-sizing: border-box;\n  display: flex;\n}\n\n.search-box .mat-form-field {\n  padding: 0 2em;\n}\n\n.new-label {\n  color: cadetblue;\n}\n\n.text-item {\n  width: 100%;\n  border-radius: 5px !important;\n  margin-left: 0px;\n}\n\n.control-label {\n  margin-top: 5px;\n  text-align: left;\n  width: 100% !important;\n}"},kKLg:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Provision</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" \r\n                            matTooltipPosition="above" matTooltip="Add Provision" tooltipPosition="right"\r\n                                data-target="#addProvision" data-toggle="modal"\r\n                                 (click)="resetProvisionForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Provision</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#addProvision" data-toggle="modal"\r\n                                 (click)="resetProvisionForm()"\r\n                                  >\r\n                                  Add Provision\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                        \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="provisionData" [first]="0"\r\n                            [rows]="pageSize" [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[10,20,50,100]"\r\n                            [columns]="selectedColumns" selectionMode="multiple" (onPage)="changePage($event)"\r\n                            [resizableColumns]="true" [reorderableColumns]="true" [scrollable]="true"\r\n                            [totalRecords]="totalRecords" scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="provisionHeader"\r\n                                        optionLabel="header" [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}"\r\n                                        style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n\r\n                                   \r\n                                    </div>\r\n                                    <div class="col">\r\n                                      \r\n                                          <div\r\n                                            style="width: 370px; float: right; padding-top: 3px;"\r\n                                          >\r\n                                            <div class="form-group">\r\n                                              \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                              <div\r\n                                                class="pull-left"\r\n                                                style="margin-top: 4px; margin-right: 15px;"\r\n                                              >\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>In-Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>All\r\n                                                        </label>\r\n                                                    </div>\r\n                                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                          <label style="width: auto !important;margin-top: 3px;">\r\n                                                            \x3c!--  --\x3e\r\n                                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                             (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                              />\r\n                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                          Show  Deleted List \r\n                                                          </label>\r\n                                                        </div>\r\n                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="row">\r\n                                      <div class="col">                               \r\n                                   \r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Selected"\r\n                                          pButton icon="fa-download" iconPos="left"\r\n                                        label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download All Data"\r\n                                          pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Selection Only"\r\n                                        (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload"\r\n                                            (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                            accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" matTooltip="Download Sample file"\r\n                                            (click)="sampleExcelDownload()">Sample File\r\n                                            Download</button>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                            (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle data-toggle="modal" data-target="#view"\r\n                                        (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}"\r\n        (onChange)="changeStatus(rowData)" matTooltip="isActive"></p-inputSwitch>--\x3e\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                               (click)="viewSelectedRow(rowData)" matTooltip="View" matTooltipPosition="above" data-target="#view"\r\n                                               data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                       \r\n                                        <span data-target="#addProvision" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="editProvision(rowData)" \r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="editProvision(rowData)"\r\n                                                data-target="#addProvision" data-toggle="modal" matTooltip="Edit" \r\n                                                matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete" matTooltipPosition="above"\r\n                                                data-target="#delete" data-toggle="modal" (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-toggle="modal" data-target="#contentHist"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History" matTooltipPosition="above"\r\n                                                data-target="#contentHist" data-toggle="modal"\r\n                                                (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="provisionData && provisionData.length == 0 || provisionData && provisionData.length ==null">\r\n                             <tr>\r\n                               <td [attr.colspan]="7" class="no-records-cstm">\r\n                                  No records found\r\n                                </td>\r\n                            </tr>\r\n                          </ng-template>\r\n                            \r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                \x3c!-- <p>{{uomData.length}}</p> --\x3e\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText\r\n                                    type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText\r\n                                    type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Provision Name:\r\n            <span class="new-label">{{restorerecord.description}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>Provision Name:\r\n                    <span class="new-label">{{selectedRowforDelete.description}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div #addProvision id="addProvision" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="resetProvisionForm()"\r\n                    data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Provision </h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #provision="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Provision Name\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="description" [(ngModel)]="addnewProvision.description"\r\n                                    (onSelect)="selectedProvision($event)" name="description"\r\n                                    (onKeyUp)="checkProvisionExists(\'description\', $event.target.value)" \r\n                                    [suggestions]="provisionList" (completeMethod)="filterDescription($event)"\r\n                                    [size]="30" [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required (ngModelChange)="getmemo()">\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForProvision" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription"\r\n                                    [(ngModel)]="addnewProvision.memo" (ngModelChange)="getmemo()" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addnewProvision.isActive" (ngModelChange)="getmemo()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal"\r\n                    [disabled]="provision.invalid || disableSaveForProvision || disableSave " (click)="saveProvision();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="resetProvisionForm()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Provision Name</th> >\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                <td>{{ext.description}}</td>\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Provision</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Provision Name</th>\r\n                                <th>Memo</th>\r\n                                <th>Is Active</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog"data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Provision Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Provision Name: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Is Active</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>\r\n'},kkxK:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">ATA Sub Chapter</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltipPosition="above" matTooltip="Add ATA Sub Chapter"\r\n                              tooltipPosition="right" data-target="#add" \r\n                              data-toggle="modal"\r\n                                (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">ATA Sub Chapter</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" \r\n                              data-toggle="modal"\r\n                                (click)="resetForm()"\r\n                                  >\r\n                                  Add ATA Sub Chapter\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" \r\n                        [first]="0" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true" \r\n                        [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple" \r\n                        [metaKeySelection]="true"\r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [totalRecords]="totalRecords" \r\n                        scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header" [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}"\r\n                                        style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n                                   \r\n                                    </div>\r\n                                    <div class="col">\r\n                                      \r\n                                          <div\r\n                                            style="width: 370px; float: right; padding-top: 3px;"\r\n                                          >\r\n                                            <div class="form-group">\r\n                                              \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                              <div\r\n                                                class="pull-left"\r\n                                                style="margin-top: 4px; margin-right: 15px;"\r\n                                              >\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>In-Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>All\r\n                                                        </label>\r\n                                                    </div>\r\n                                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                          <label style="width: auto !important;margin-top: 3px;">\r\n                                                            \x3c!--  --\x3e\r\n                                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                             (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                              />\r\n                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                          Show  Deleted List \r\n                                                          </label>\r\n                                                        </div>\r\n                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="row">\r\n                                      <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Data" matTooltipPosition="above" pButton icon="fa-download"\r\n                                        iconPos="left" label="Export Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Selected" matTooltipPosition="above" pButton icon="fa-download"\r\n\r\n                                        iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file" accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;"  matTooltipPosition="above" matTooltip="Sample File download" (click)="sampleExcelDownload()">Sample File Download\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:150px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:150px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns"  let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle [pSelectableRowIndex]="rowIndex">\r\n                                    <td style="width:150px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal"\r\n                                        data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" matTooltip="Update" name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n                                     \r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                             (click)="viewSelectedRow(rowData)" matTooltip="view" matTooltipPosition="above" data-target="#view"\r\n                                               data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                         data-target="#add" data-toggle="modal" matTooltip="Edit"\r\n                                          matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span  data-target="#delete" data-toggle="modal" >\r\n                                            <a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button\r\n                                         matTooltip="Delete" matTooltipPosition="above"\r\n                                          data-target="#delete"\r\n                                         data-toggle="modal" (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button \r\n                                        matTooltip="History" matTooltipPosition="above"\r\n                                         data-target="#contentHist" data-toggle="modal" \r\n                                         (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="6" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            ATA Sub Chapter:\r\n            <span class="new-label">{{restorerecord.description}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>ATA Sub Chapter:\r\n                    <span class="new-label">{{selectedRowforDelete.description}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} ATA Sub Chapter</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">ATA Sub Chapter Code\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <input type="text" [(ngModel)]="addNew.ataSubChapterCode" pInputText pKeyFilter="pnum" name="code" (ngModelChange)="getmemo($event)" class="form-control"  minlength="2">\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">ATA Sub Chapter\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="description" [(ngModel)]="addNew.description" (onSelect)="selectedDescription($event)" (onKeyUp)="checkGroupDescriptionExists(\'description\', $event.target.value)"\r\n                                    name="description" [suggestions]="descriptionList" (completeMethod)="filterDescription($event)" (onBlur)="onBlur($event)"\r\n                                    [size]="30" [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForDescriptionMsg" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">ATA Chapter\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <select name="chapterName" [(ngModel)]="addNew.ataChapterId" (ngModelChange)="getmemo($event)" #ataChapterId="ngModel" required>\r\n                                    <option>-- Select --</option>\r\n                                    <option *ngFor="let object of ataList" [ngValue]="object.ataChapterId">{{object.ataChapterName}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">ATA Chapter Category\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <select name="chapterCategory" [(ngModel)]="addNew.ataChapterCategory" (ngModelChange)="getmemo($event)" #ataChapterCategory="ngModel" required>\r\n                                    <option>-- Select --</option>\r\n                                    <option *ngFor="let object of ataList" [ngValue]="object.ataChapterCategory">{{object.ataChapterCategory}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription" (ngModelChange)="getmemo($event)" [(ngModel)]="addNew.memo" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" [disabled]="create.invalid || disableSaveForDescription"\r\n                    (click)="save();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n\r\n                                <th>ATA Sub ChapterCode r</th>\r\n                                <th>ATA Sub Chapter</th>\r\n                                <th>ATA Chapter</th>\r\n                                <th>ATA Chapter Category</th>\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                <td>{{ext.ataSubChapterCode}}</td>\r\n                                <td>{{ext.description}}</td>\r\n                                <td>{{ext.ataChapterName}}</td>\r\n                                <td>{{ext.ataChapterCategory}}</td>\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of ATA Sub Chapter</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>ATA Sub ChapterCode r</th>\r\n                                <th>ATA Sub Chapter</th>\r\n                                <th>ATA Chapter</th>\r\n                                <th>ATA Chapter Category</th>\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'ataSubChapterCode\', audit.ataSubChapterCode)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.ataSubChapterCode}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.description}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'ataChapterName\', audit.ataChapterName)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.ataChapterName}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'ataChapterCategory\', audit.ataChapterCategory)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.ataChapterCategory}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.memo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">ATA Sub Chapter Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">ATA Subchapter Code: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.ataSubChapterCode}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">ATA Subchapter: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">ATA Chapter : </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.ataChapterName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">ATA Chapter Category: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.ataChapterCategory}}</span>\r\n                    </p>\r\n                    \x3c!-- <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header"> Standard: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.standard}}</span>\r\n                </p> --\x3e\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">IsActive</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},lSbY:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">ATA Chapter</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" \r\n                            matTooltip="Add ATA Chapter" matTooltipPosition="above"\r\n                                data-target="#add" data-toggle="modal"\r\n                                 (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">ATA Chapter</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal"\r\n                                 (click)="resetForm()"\r\n                                  >\r\n                                  Add ATA Chapter\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                      \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" \r\n                        [first]="0" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true" \r\n                        [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple" \r\n                        [metaKeySelection]="true"\r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [scrollable]="true" \r\n                        [totalRecords]="totalRecords" \r\n                        scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header"\r\n                                                   [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}" style="float:left" [resetFilterOnHide]="true"\r\n                                                   (onChange)="columnsChanges()"></p-multiSelect>\r\n                                   \r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  \r\n                                                      <div\r\n                                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                                      >\r\n                                                        <div class="form-group">\r\n                                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                          <div\r\n                                                            class="pull-left"\r\n                                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                                          >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                    \x3c!--  --\x3e\r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download All Data" matTooltipPosition="above"\r\n                                             pButton icon="fa-download" iconPos="left"\r\n                                            label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Selected" matTooltipPosition="above"\r\n                                             pButton icon="fa-download" iconPos="left"\r\n                                            label="Export Selection Only"\r\n                                            (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload"\r\n                                               (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above" >\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltip="Sample File download"  style="padding: 5px 12px !important;" matTooltipPosition="above"\r\n                                                (click)="sampleExcelDownload()">\r\n                                            Sample File\r\n                                            Download\r\n                                        </button>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                    <col *ngFor="let col of columns" [style.width]="col.width">\r\n                                </colgroup>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0">\r\n                                        Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                               (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle data-toggle="modal" data-target="#view"\r\n                                        (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" matTooltip="Update"\r\n                                   name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)">\r\n                </p-inputSwitch>--\x3e<div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                               (click)="viewSelectedRow(rowData)" matTooltip="view" matTooltipPosition="above" data-target="#view"\r\n                                               data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                                data-target="#add" data-toggle="modal" matTooltip="Edit"\r\n                                                 matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span  data-target="#delete" data-toggle="modal" >\r\n                                            <a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button \r\n                                        matTooltip="Delete" matTooltipPosition="above"\r\n                                                data-target="#delete" data-toggle="modal" \r\n                                                (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button \r\n                                        matTooltip="History" matTooltipPosition="above"\r\n                                                data-target="#contentHist" data-toggle="modal"\r\n                                                (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                           \r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText\r\n                                       type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText\r\n                                       type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            ATA Chapter:\r\n            <span class="new-label">{{restorerecord.ataChapterName}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>ATA Chapter Name:\r\n                    <span class="new-label">{{selectedRowforDelete.ataChapterName}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} ATA Chapter</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">ATA Chapter Name\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="ataChapterName" [(ngModel)]="addNew.ataChapterName"\r\n                                    (onSelect)="selectedDescription($event)"\r\n                                    (onKeyUp)="checkGroupDescriptionExists(\'ataChapterName\', $event.target.value)"\r\n                                    name="ataChapterName" [suggestions]="descriptionList"\r\n                                    (onBlur)="onBlur($event)"\r\n                                    (completeMethod)="filterDescription($event)" [size]="30" [minLength]="1"\r\n                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForDescriptionMsg" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">ATA Chapter Category\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <input type="text" class="form-control" name="ataChapterCategory"\r\n                                    [(ngModel)]="addNew.ataChapterCategory"  (ngModelChange)="getChange()"/>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">ATA Chapter Code\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <input type="text" class="form-control" name="ataChapterCode" pKeyFilter="pnum"\r\n                                    [(ngModel)]="addNew.ataChapterCode" (ngModelChange)="getChange()"  minlength="2"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription"\r\n                                    [(ngModel)]="addNew.memo" minlength="2" (ngModelChange)="getChange()"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive" (ngModelChange)="getChange()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal"\r\n                    [disabled]="create.invalid || disableSaveForDescription" (click)="save();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ATA Chapter Code</th>\r\n                                <th>ATA chapter Name</th>\r\n                                <th>ATA Chapter Category</th>\r\n\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                <td>{{ext.ataChapterCode}}</td>\r\n                                <td>{{ext.ataChapterName}}</td>\r\n                                <td>{{ext.ataChapterCategory}}</td>\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of ATA Chapter</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>ATA Chapter Code</th>\r\n                                <th>ATA Chapter Name</th>\r\n                                <th>ATA Chapter Category</th>\r\n                                <th>Memo</th>\r\n                                <th>Is Active</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td\r\n                                    [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'ataChapterCode\', audit.ataChapterCode)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.ataChapterCode}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'ataChapterName\', audit.ataChapterName)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.ataChapterName}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'ataChapterCategory\', audit.ataChapterCategory)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.ataChapterCategory}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.memo}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">ATA Chapter Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">ATA Chapter Code: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.ataChapterCode}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">ATA Chapter Name: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.ataChapterName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header"> ATA Chapter Category: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.ataChapterCategory}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Is Active</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},lena:function(t,e,a){"use strict";a.r(e),e.default='\r\n<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Node Type</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltipPosition="above"\r\n                              matTooltip="Add Node Type" tooltipPosition="right"\r\n                               data-target="#add" data-toggle="modal" \r\n                               (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Node Type</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal" \r\n                               (click)="resetForm()"\r\n                                  >\r\n                                  Add Node Type\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm"\r\n                                 [value]="originalData"\r\n                                 [lazy]="true" (onLazyLoad)="loadAllSiteData($event)"\r\n                                 [first]="0" [rows]="pageSize"\r\n                                 [paginator]="true" [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]" \r\n                                 [columns]="selectedColumns"\r\n                                 (onPage)="changePage($event)"\r\n                                 selectionMode="multiple"\r\n                                 [metaKeySelection]="true"\r\n                                 [resizableColumns]="true"\r\n                                 [reorderableColumns]="true"\r\n                                 [scrollable]="true"\r\n                                 [totalRecords]="totalRecords"\r\n                                 scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="1" [options]="headers" optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left" (onChange)="columnsChanges()">\r\n                                                </p-multiSelect>\r\n\r\n                                            </div>\r\n                                            <div class="col">\r\n                                              \r\n                                                  <div\r\n                                                    style="width: 370px; float: right; padding-top: 3px;"\r\n                                                  >\r\n                                                    <div class="form-group">\r\n                                                      \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                      <div\r\n                                                        class="pull-left"\r\n                                                        style="margin-top: 4px; margin-right: 15px;"\r\n                                                      >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                    \x3c!--  --\x3e\r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                                    <button type="button" class="btn btn-primary " style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download Data" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary " style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download Selected" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltip="Download Sample file" matTooltipPosition="above" style="padding: 5px 12px !important;" (click)="sampleExcelDownload()">Sample File Download</button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle [pSelectableRowIndex]="rowIndex">\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal"\r\n                                        data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                            (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}"\r\n                                        (onChange)="changeStatus(rowData)" matTooltip="Active" matTooltipPosition="above"></p-inputSwitch>--\x3e\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                       \r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                               (click)="viewSelectedRow(rowData)" data-target="#view" data-toggle="modal"\r\n                                               matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg"\r\n                                               (click)="edit(rowData)"\r\n                                               matTooltip="Edit"\r\n                                               matTooltipPosition="above">\r\n                                                <i class="fa fa-pencil">\r\n                                                </i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                         data-target="#add" data-toggle="modal" matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg"\r\n                                               (click)="delete(rowData)"\r\n                                               matTooltip="Delete" matTooltipPosition="above">\r\n                                                <i class="fa fa-trash"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button\r\n                                        matTooltip="Delete" matTooltipPosition="above"\r\n                                         data-target="#delete" data-toggle="modal"\r\n                                          (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal">\r\n                                            <a class="btn nobg"\r\n                                               (click)="getAuditHistoryById(rowData)"\r\n                                               matTooltip="History" matTooltipPosition="above">\r\n                                                <i class="fa fa-history"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" data-target="#contentHist"\r\n                                         data-toggle="modal" (click)="getAuditHistoryById(rowData)" >\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                                         *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                                <tr>\r\n                                    <td [attr.colspan]="7" class="no-records-cstm">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Node Type:\r\n            <span class="new-label">{{restorerecord.nodeTypeName}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                    Node Type:\r\n                    <span class="new-label">{{selectedRowforDelete.nodeTypeName}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="resetForm()" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Node Type</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-6">\r\n                                <label for="description" class="control-label">\r\n                                    Node Type Name\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="nodeTypeName" [(ngModel)]="addNew.nodeTypeName"\r\n                                                (onSelect)="selectedGLCFName($event)" (onKeyUp)="checkGLCFNameExists(\'nodeTypeName\',\r\n                                                $event.target.value)" name="nodeTypeName" [suggestions]="glCashFlowList" \r\n                                                (completeMethod)="filterGLCFName($event)" (ngModelChange)="getmemo()"\r\n                                                [size]="30" [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveGLCFName" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-6">\r\n\r\n                                <label for="description" class="control-label">Description</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" [(ngModel)]="addNew.description" id="description" name="description" \r\n                                (ngModelChange)="getmemo()" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-6">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" [(ngModel)]="addNew.memo" id="memo" name="memodescription" (ngModelChange)="getmemo()" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive" (ngModelChange)="getmemo()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" [disabled]="create.invalid || disableSaveGLCFNameSave || disableSaveForEdit" (click)="save();"> {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Node Type</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n\r\n                                <th>Node Type</th>\r\n                                <th>Description</th>\r\n                                <th>Memo</th>\r\n                                <th>Active</th>\r\n                                <th>Last Updated By</th>\r\n                                <th>Last Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'nodeTypeName\', audit.nodeTypeName)  ? \'black\' : \'red\'  }">{{audit.nodeTypeName}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Node Type Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Node Type Name: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.nodeTypeName}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Description: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.description}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Is Active: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n\r\n\r\n                   \r\n\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>'},"mmB/":function(t,e,a){"use strict";a.r(e),e.default=".pub-global-filter label {\n  width: auto !important;\n  text-align: left !important;\n}\n\n.audithistory-cstm tr td {\n  padding: 3px 2px !important;\n}\n\n.pubHistory-table.table-bordered thead tr th {\n  width: 110px;\n  padding: 8px 5px !important;\n}\n\n.modal-body p .value {\n  width: 60%;\n}\n\n.modal-body p .label {\n  width: 40%;\n}\n\n.aligin_cer {\n  display: inline-flex;\n  width: 72%;\n  text-align: center;\n  padding-left: 8%;\n}\n\n.aligin_cer .value {\n  color: #ff5663;\n  padding-left: 4px;\n}\n\n.atv_cv {\n  position: relative;\n  top: 0px;\n  left: 5px;\n}"},mu09:function(t,e,a){"use strict";a.r(e),e.default="control-label {\n  margin-top: 10px;\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}\n\n.modal.editModal .modal-body div.form-group label, .modal.editModal label {\n  font-weight: normal;\n  width: 100%;\n  text-align: left;\n}"},oikv:function(t,e,a){"use strict";a.r(e),e.default=".control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}"},ojsO:function(t,e,a){"use strict";a.r(e),e.default=""},ovBF:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Publication Type</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" pTooltip="Add Publication Type" tooltipPosition="right"\r\n                                data-target="#add" data-toggle="modal" (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Publication Type</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal"\r\n                                     (click)="resetForm()"\r\n                                  >\r\n                                  Add Publication Type\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" \r\n                        [first]="0" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true" \r\n                        [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple" \r\n                        [metaKeySelection]="true"\r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [scrollable]="true" \r\n                        [totalRecords]="totalRecords" \r\n                        scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header"\r\n                                        [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                        (onChange)="columnsChanges()"></p-multiSelect>\r\n\r\n                                   \r\n                                    </div>\r\n                                    <div class="col">\r\n                                      \r\n                                          <div\r\n                                            style="width: 370px; float: right; padding-top: 3px;"\r\n                                          >\r\n                                            <div class="form-group">\r\n                                              \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                              <div\r\n                                                class="pull-left"\r\n                                                style="margin-top: 4px; margin-right: 15px;"\r\n                                              >\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>In-Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>All\r\n                                                        </label>\r\n                                                    </div>\r\n                                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                          <label style="width: auto !important;margin-top: 3px;">\r\n                                                            \x3c!--  --\x3e\r\n                                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                             (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                              />\r\n                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                          Show  Deleted List \r\n                                                          </label>\r\n                                                        </div>\r\n                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="row">\r\n                                      <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download  Data" matTooltipPosition="above"\r\n                                         pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Selected" matTooltipPosition="above"\r\n                                         pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Selection Only"\r\n                                        (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload"\r\n                                            (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                            accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltipPosition="above"  style="padding: 5px 12px !important;" matTooltip="Sample File download" (click)="sampleExcelDownload()">Sample File\r\n                                            Download</button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                            (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle data-toggle="modal" data-target="#view"\r\n                                        (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" matTooltip="Update" name="isActive{{rowIndex}}"\r\n        (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n                                 <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                               (click)="viewSelectedRow(rowData)" matTooltip="view" matTooltipPosition="above" data-target="#view"\r\n                                               data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                                data-target="#add" data-toggle="modal" matTooltip="Edit"\r\n                                                matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n                                        \r\n                                        <span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete"\r\n                                         matTooltipPosition="above"\r\n                                                data-target="#delete" data-toggle="modal" (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-toggle="modal" data-target="#contentHist"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History" \r\n                                        matTooltipPosition="above"\r\n                                                data-target="#contentHist" data-toggle="modal"\r\n                                                (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText\r\n                                    type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText\r\n                                    type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>Publication Type:\r\n                    <span class="new-label">{{selectedRowforDelete.name}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Publication Type</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n                       \r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="name" class="control-label">Name\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="name" [(ngModel)]="addNew.name"\r\n                                    (onSelect)="selectedDescription($event)"\r\n                                    (onKeyUp)="checkGroupDescriptionExists($event.target.value)"\r\n                                    name="name" [suggestions]="descriptionList"\r\n                                    (completeMethod)="filterDescription($event)" [size]="30" [minLength]="1"\r\n                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForDescriptionmsg" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Description\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                               <input type="text" class="form-control" name="description" [(ngModel)]="addNew.description" required (ngModelChange)="getChange()"/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription" (ngModelChange)="getChange()"\r\n                                    [(ngModel)]="addNew.memo" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive" (ngModelChange)="getChange()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal"\r\n                    [disabled]="create.invalid  || disableSaveForDescription " (click)="save();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Publication Type:\r\n            <span class="new-label">{{restorerecord.name}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.Name}}</td> --\x3e\r\n                                <td>{{ext.name}}</td>\r\n                                <td>{{ext.description}}</td>\r\n\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Publication Type</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Name</th>\r\n                                <th>Description</th>\r\n\r\n                                <th>Memo</th>\r\n                                <th>Is Active</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'name\', audit.name)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.name}}\r\n                                </td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.description}}</td>\r\n                                \r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.memo}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Publication Type Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Publication Type: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.name}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Description: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n                   \r\n                    \x3c!-- <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header"> Standard: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.standard}}</span>\r\n                </p> --\x3e\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">IsActive</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},"p3/t":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                       \r\n                        <div class="inline-block display-flex">\r\n                           \r\n                            <h3 class="po-head lead">{{header}}</h3>\r\n                            &nbsp;&nbsp;\r\n                           \r\n                            <a class="plusicon-cstm new-margin" \r\n                            matTooltipPosition="above" matTooltip="Add {{rowName}}"\r\n                             tooltipPosition="right" data-target="#editItem"\r\n                              data-toggle="modal" (click)="addNewItem()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">{{header}}</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#editItem"\r\n                                    data-toggle="modal" (click)="addNewItem()" >\r\n                                    Add {{rowName}}\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                        \r\n                      \r\n                        <p-table #dt\r\n                                 class="rpo-table-cstm rro-table-cstm"\r\n                                 [value]="itemList"\r\n                                 [first]="pageIndex"\r\n                                 [rows]="pageSize"\r\n                                 [paginator]="true"\r\n                                 [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]"\r\n                                 [columns]="selectedColumns"\r\n                                 selectionMode="multiple"\r\n                                 [metaKeySelection]="true"\r\n                                 [resizableColumns]="true"\r\n                                 [reorderableColumns]="true"\r\n                                 [scrollable]="true"\r\n                                 [totalRecords]="totalRecords"\r\n                                 scrollHeight="450px">\r\n                            \x3c!--caption--\x3e\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    \x3c!--column names dropdown taking selectedColumns--\x3e\r\n                                    \x3c!--Step x: Update the dropdown with options--\x3e\r\n                                    \x3c!--(onChange)="reorderValues($event)"--\x3e\r\n                                    \x3c!--to-do:add (change)=>--\x3e\r\n                                    <p-multiSelect [maxSelectedLabels]="2"\r\n                                                   [options]="columnHeaders"\r\n                                                   optionLabel="header"\r\n                                                   [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                                   selectedItemsLabel="{0} columns selected"\r\n                                                   defaultLabel="Choose Columns">\r\n                                    </p-multiSelect>\r\n\r\n                                </div>\r\n                                <div class="col">\r\n                                  \r\n                                      <div\r\n                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                      >\r\n                                        <div class="form-group">\r\n                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                          <div\r\n                                            class="pull-left"\r\n                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                          >\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>In-Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                        (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>All\r\n                                                    </label>\r\n                                                </div>\r\n                                                    <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                      <label style="width: auto !important;margin-top: 3px;">\r\n                                                        \x3c!--  --\x3e\r\n                                                        <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                         (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                          />\r\n                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                      Show  Deleted List \r\n                                                      </label>\r\n                                                    </div>\r\n                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="row">\r\n                                  <div class="col">\r\n            \r\n                                    <button type="button" class="btn btn-primary" matTooltipPosition="above"  style="padding: 5px 12px !important;" matTooltip="Download Selected"  \r\n                                            pButton icon="fa-download" iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary" matTooltipPosition="above"  style="padding: 5px 12px !important;" matTooltip="Download All Data"  \r\n                                            pButton icon="fa-download" iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" class="uploaddoc upload-file" data-multiple-caption="{count} files selected"\r\n                                               accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" (change)="bulkUpload($event)">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n\r\n                            </ng-template>\r\n                            \x3c!--header with search--\x3e\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position: sticky" *ngIf="selectedColumns.length> 0">Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position: sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            \x3c!--body--\x3e\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                       \r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}" \r\n                                        (onChange)="toggleActiveStatus(rowData)" matTooltip="Toggle Status" matTooltipPosition="above"></p-inputSwitch>\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" \r\n                                            (click)="viewItemDetails(rowData)" data-target="#view" data-toggle="modal" matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \x3c!--Step x: update the on-click event--\x3e\r\n                                        \r\n                                        <span data-target="#editItem" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="showItemEdit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button\r\n                                         (click)="showItemEdit(rowData)" matTooltip="Edit"\r\n                                          matTooltipPosition="above" data-target="#editItem" \r\n                                          data-toggle="modal">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span  data-target="#delete" data-toggle="modal" >\r\n                                            <a class="btn nobg" \r\n                                            (click)="confirmItemDelete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button \r\n                                        matTooltip="Delete" matTooltipPosition="above" \r\n                                        (click)="confirmItemDelete(rowData)"\r\n                                         data-target="#delete" data-toggle="modal">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-target="#itemHistory" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="showHistory(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History" \r\n                                        matTooltipPosition="above" (click)="showHistory(rowData)"\r\n                                         data-target="#itemHistory" data-toggle="modal">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view">\r\n                                           <a class="btn nobg" (click)="viewItemDetails(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n\t\t\t\t\t\t\t\t\t\t *ngIf="itemList && itemList.length == 0 || itemList && itemList.length ==null">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td [attr.colspan]="7" class="no-records-cstm">\r\n\t\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n                        \r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \x3c!--to-do:use same modal to view, add, update, and delete--\x3e\r\n    \x3c!--Modal for view only--\x3e\r\n\r\n    <ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n      \r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n           \r\n        </div>\r\n        <div class="modal-body">\r\n            <strong>\r\n                Expenditure Category:\r\n                <span class="new-label">{{restorerecord.description}}</span>\r\n            </strong>\r\n        </div>\r\n      \r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n      </ng-template> \r\n\r\n    <div #view *ngIf="itemDetails" class="modal fade" id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-sm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">\xd7</button>\r\n                    <h4 class="modal-title">{{rowName}} Details</h4>\r\n                </div>\r\n                <div class="modal-body viewform">\r\n                    <div class="col-sm-12">\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Description: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.description}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Memo: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.memo}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Active: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.isActive ? \'true\' : \'false\'}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Created By: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.createdBy}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Created Date: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Last Updated By: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.updatedBy}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Last Updated Date: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    \x3c!--Step x: Modal for Edit--\x3e\r\n    <div #editItem id="editItem" class="modal fade" role="dialog" *ngIf="currentModeOfOperation === 2 || currentModeOfOperation === 3" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">{{currentModeOfOperation === 3 ? "Edit" : "Add"}} {{rowName}} </h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <form #AssetType="ngForm">\r\n                        <div class="form-group">\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-4">\r\n                                    <label for="description" class="control-label">Description</label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <textarea class="text-item" #memo="ngModel" id="description"\r\n                                    (ngModelChange)="getmemo()" name="description" [(ngModel)]="currentRow.description" minlength="2" format="number" (onChange)="check"></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-4">\r\n                                    <label for="memo" class="control-label">Memo</label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <textarea class="text-item" #memo="ngModel" id="memo" name="memo"\r\n                                    (ngModelChange)="getmemo()"  [(ngModel)]="currentRow.memo" minlength="2"></textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <div class="col-sm-6">\r\n                                <div class="checkbox-cstm">\r\n                                    <label>\r\n                                        <input type="checkbox" name="isActive" [(ngModel)]="currentRow.isActive" (ngModelChange)="getmemo()">\r\n                                        <span class="cr">\r\n                                            <i class="cr-icon pi pi-check"></i>\r\n                                        </span>\r\n                                        Active\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button class="btn btn-primary" data-dismiss="modal" [disabled]="disableSave || disableSaveForEdit" (click)="currentModeOfOperation === 2 ? saveNewItem() : updateItem();"> {{currentModeOfOperation == 3 ? \'Update\' : \'Save\' }}</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    \x3c!--Modal for delete only--\x3e\r\n    <div #delete *ngIf="currentModeOfOperation === 4" id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <strong>\r\n                        Expenditure Category:\r\n                        <span class="new-label">{{selectedRowforDelete.description}}</span>\r\n                    </strong>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                     (click)="deleteItem()">Yes</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" \r\n                    (click)="dismissModal()">No</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n    \x3c!--Step x: Audit modal--\x3e\r\n    <div #itemHistory *ngIf="currentModeOfOperation === 5" class="modal fade" id="itemHistory" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <h4 class="modal-title">History of {{rowName}}</h4>\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="table-responsive">\r\n                        <table class="table table-bordered">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Description</th>\r\n                                    <th>Memo</th>\r\n                                    <th>Active</th>\r\n                                    <th>Last Updated By</th>\r\n                                    <th>Last Updated Time</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tr *ngFor="let audit of auditHistory">\r\n                                <td>{{audit.description}}</td>\r\n                                <td>{{audit.memo}}</td>\r\n                                <td>{{audit.isActive ? \'true\' : \'false\'}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate| date: \'MM/dd/yyyy h:mm:ss a\'}}</td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModal()">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>'},p69J:function(t,e,a){"use strict";a.r(e),e.default='<p-breadcrumb [model]="items" [home]="home"></p-breadcrumb>\r\n<router-outlet></router-outlet>'},pLYG:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n\t<div class="right_col" role="main">\r\n\t\t<div class="x_panel">\r\n\t\t\t<div class="x_content">\r\n\t\t\t\t\x3c!-- <div class="card">\r\n\t\t\t\t\t<div class="card-body">\r\n\t\t\t\t\t\t<div class="inline-block display-flex">\r\n\t\t\t\t\t\t\t<h3 class="po-head lead">Shelf</h3>\r\n\t\t\t\t\t\t\t&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t<a class="plusicon-cstm new-margin" matTooltipPosition="above"\r\n\t\t\t\t\t\t\t matTooltip="Add Shelf" tooltipPosition="right" \r\n\t\t\t\t\t\t\t (click)="open(contentEdit)">\r\n\t\t\t\t\t\t\t\t<i class="fa fa-plus-circle fa-lg"></i>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div> --\x3e\r\n\t\t\t\t\t\t<div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Shelf</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n\t\t\t\t\t\t\t\t\t(click)="open(contentEdit)"\r\n                                  >\r\n\t\t\t\t\t\t\t\t  Add Shelf\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n\t\t\t\t\t\t[value]="shelfData" [rows]="pageSize" \r\n\t\t\t\t\t\t[paginator]="true" [pageLinks]="3" \r\n\t\t\t\t\t\t[rowsPerPageOptions]="[10,20,50,100]"\r\n\t\t\t\t\t\t [columns]="selectedColumns" \r\n\t\t\t\t\t\t selectionMode="multiple" \r\n\t\t\t\t\t\t [metaKeySelection]="true"\r\n\t\t\t\t\t\t [(selection)]="selectedColumn" \r\n\t\t\t\t\t\t [resizableColumns]="true" \r\n\t\t\t\t\t\t [reorderableColumns]="true"\r\n\t\t\t\t\t\t [scrollable]="true" \r\n\t\t\t\t\t\t scrollHeight="450px">\r\n\t\t\t\t\t\t\t<ng-template pTemplate="caption">\r\n\t\t\t\t\t\t\t\t<div class="row">\r\n                                    <div class="col">\r\n\t\t\t\t\t\t\t\t\t<p-multiSelect [options]="cols" [(ngModel)]="selectedColumns" optionLabel="header" selectedItemsLabel="{0} columns selected"\r\n\t\t\t\t\t\t\t\t\t [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n                                    <div class="col">\r\n                                      \r\n                                          <div\r\n                                            style="width: 370px; float: right; padding-top: 3px;"\r\n                                          >\r\n                                            <div class="form-group">\r\n                                              \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                              <div\r\n                                                class="pull-left"\r\n                                                style="margin-top: 4px; margin-right: 15px;"\r\n\t\t\t\t\t\t\t\t\t\t\t  >\r\n\t\t\t\t\t\t\t\t\t\t\t  <label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>Active\r\n\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n\t\t\t\t\t\t\t\t\t\t\t<label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>In-Active\r\n\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n\t\t\t\t\t\t\t\t\t\t\t<label class="radio-cstm wauto">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n\t\t\t\t\t\t\t\t\t\t\t\t(click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class="checkmark"></span>All\r\n\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class="checkbox-cstm" style="margin-left: 0;">\r\n\t\t\t\t\t\t\t\t\t\t\t  <label style="width: auto !important;margin-top: 3px;">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\x3c!--  --\x3e\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n\t\t\t\t\t\t\t\t\t\t\t\t (click)="getDeleteListByStatus($event.target.checked)"\r\n\t\t\t\t\t\t\t\t\t\t\t\t  />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t\t  Show  Deleted List \r\n\t\t\t\t\t\t\t\t\t\t\t  </label>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="row">\r\n\t\t\t\t\t\t\t<div class="col">\r\n\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download Selected"   pButton icon="fa-download"\r\n\t\t\t\t\t\t\t\t\t iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-primary new-table-button" matTooltipPosition="above" matTooltip="Download All Data"   pButton icon="fa-download"\r\n\t\t\t\t\t\t\t\t\t iconPos="left" label="Export Selection Only" style="padding: 5px 12px !important" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" class="uploaddoc upload-file" data-multiple-caption="{count} files selected"\r\n                                               accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"\r\n                                               (change)="bulkUpload($event)">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()">Sample File Download</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t\x3c!-- <ng-template pTemplate="colgroup" let-columns>\r\n\t\t\t\t\t\t\t\t<colgroup>\r\n\t\t\t\t\t\t\t\t\t<col *ngFor="let col of columns" style="width:140px">\r\n\t\t\t\t\t\t\t\t</colgroup>\r\n\t\t\t\t\t\t\t</ng-template> --\x3e\r\n\t\t\t\t\t\t\t<ng-template pTemplate="header" let-columns>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n\t\t\t\t\t\t\t\t\t\t{{col.header}}\r\n\t\t\t\t\t\t\t\t\t\t<p-sortIcon [field]="col.field"></p-sortIcon>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th style="widows: 120px;" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n\t\t\t\t\t\t\t\t\t\t<input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t\t<th style="width:180px;position:sticky"></th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n\t\t\t\t\t\t\t\t<tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openEdits(rowData)">\r\n\t\t\t\t\t\t\t\t\t<td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n\t\t\t\t\t\t\t\t\t\t{{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n\t\t\t\t\t\t\t\t\t\t(rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf="currentDeletedstatus==false">\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n\t\t\t\t\t\t\t\t\t\t [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t\t\t<span data-toggle="modal" data-target="#view">\r\n\t\t\t\t\t\t\t\t\t\t\t<a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="openView(view,rowData)" matTooltip="View" matTooltipPosition="above">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i class="fa fa-eye"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openEdit(contentEdit,rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-edit" mat-icon-button\r\n\t\t\t\t\t\t\t\t\t\t (click)="openEdit(contentEdit,rowData)" \r\n\t\t\t\t\t\t\t\t\t\t matTooltipPosition="above" matTooltip="Edit">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n                                            <a class="btn nobg" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="openDelete(content,rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-delete" mat-icon-button \r\n\t\t\t\t\t\t\t\t\t\tmatTooltip="Delete" matTooltipPosition="above" \r\n\t\t\t\t\t\t\t\t\t\t(click)="openDelete(content,rowData)">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon color="warn">delete</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\r\n\t\t\t\t\t\t\t\t\t\t<span><a class="btn nobg" \r\n\t\t\t\t\t\t\t\t\t\t\t(click)="showAuditPopup(auditContent,rowData.shelfId)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <button class="btn-history" mat-icon-button\r\n\t\t\t\t\t\t\t\t\t\t matTooltip="History" matTooltipPosition="above"\r\n\t\t\t\t\t\t\t\t\t\t  (click)="showAuditPopup(auditContent,rowData.shelfId)">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon color="green">history</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button> --\x3e\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div *ngIf="currentDeletedstatus==true">\r\n\t\t\t\t\t\t\t\t\t\t<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n\t\t\t\t\t\t\t\t\t\tmatTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n\t\t\t\t\t\t\t\t\t   <span data-toggle="modal" data-target="#view">\r\n\t\t\t\t\t\t\t\t\t\t   <a class="btn nobg" (click)="openView(view,rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t  <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t</div> \r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template #auditContent let-c="close" let-d="dismiss">\r\n\t\t\t\t\t\t\t\t<div class="audit-template-launcher">\r\n\t\t\t\t\t\t\t\t\t<shelf-audit [Data]="AuditDetails" [Modal]="modal" *ngIf= "HasAuditDetails"></shelf-audit>\r\n\t\t\t\t\t\t\t\t\t<audit-no-history [Modal]="modal" [Title]="AuditHistoryTitle" *ngIf="!HasAuditDetails"></audit-no-history>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="emptymessage" let-columns\r\n\t\t\t\t\t\t\t\t\t\t *ngIf="allSelfs && allSelfs.length == 0 || allSelfs && allSelfs.length ==null">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td [attr.colspan]="7" class="no-records-cstm">\r\n\t\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="summary" id="footer">\r\n\t\t\t\t\t\t\t\t<label id="footer" class="footer">Total:</label>\r\n\t\t\t\t\t\t\t\t<input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n\t\t\t\t\t\t\t\t<label id="footer" class="footer1">Pages Count:</label>\r\n\t\t\t\t\t\t\t\t<input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t</p-table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n\t</div>\r\n\t<div class="modal-body">\r\n\t\t<strong>Shelf Name:\r\n\t\t\t<span class="new-label">{{restorerecord.name}}</span>\r\n\t\t</strong>\r\n\t</div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n\t<div class="modal-header">\r\n\t\t<h4 class="modal-title" *ngIf="isEditMode">Edit Shelf</h4>\r\n\t\t<h4 class="modal-title" *ngIf="!isEditMode">Add Shelf</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\r\n\t<div class="modal-body">\r\n\t\t<form #userForm="ngForm" class="form-horizontal" (ngSubmit)="editItemAndCloseModel()">\r\n\t\t\t<div class="col-sm-12">\r\n\t\t\t\t<div class="col-sm-6">\r\n\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label class="control-label">Site Name\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<select [(ngModel)]="sourceShelf.siteId" (ngModelChange)="getmemo()" name="site" (change)="siteValueChange($event.target.value)" required>\r\n\t\t\t\t\t\t\t\t\t<option *ngFor="let site of allSites" [ngValue]="site.siteId">{{site.name}}</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label class="control-label">Warehouse Name\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<select [(ngModel)]="sourceShelf.warehouseId" (ngModelChange)="getmemo()" name="warehouse" (change)="wareHouseValueChange($event.target.value)" required>\r\n\t\t\t\t\t\t\t\t\t<option *ngFor="let site of allWareHouses" [ngValue]="site.warehouseId">{{site.warehouseName}}</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label class="control-label">Location Name\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<select [(ngModel)]="sourceShelf.locationId" (ngModelChange)="getmemo()" name="locationid" required (change)="locationValueChange(sourceShelf.locationId)">\r\n\t\t\t\t\t\t\t\t\t<option *ngFor="let site of allLocations" [ngValue]="site.locationId">{{site.name}}</option>\r\n\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="actionname" class="control-label">Shelf Name\r\n\t\t\t\t\t\t\t\t\t<span class="clr-red">*</span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<p-autoComplete (onSelect)="Manufacturerdescription($event)" (onKeyUp)=ManufacturerHandler($event) (completeMethod)="filtermanufacturer($event)"\r\n\t\t\t\t\t\t\t\t [(ngModel)]="name" (ngModelChange)="getmemo()" [ngModelOptions]="{standalone: true}" [suggestions]="localCollection" [size]="30" [minLength]="2"\r\n\t\t\t\t\t\t\t\t [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\t\t\t\t\t\t\t\t</p-autoComplete>\r\n\t\t\t\t\t\t\t\t<div *ngIf="disableSaveManufacturer" class="clr-red">Already Exists</div>\r\n\t\t\t\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Address Line 1</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input type="text" (ngModelChange)="getmemo()" class="form-control" disabled placeholder="Address Line 1" id="memo" minlength="2" required value={{address1}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Address Line 2</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input type="text" disabled (ngModelChange)="getmemo()" class="form-control" placeholder="Address Line 2" minlength="2" required value={{address2}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Address Line 3</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input type="text" disabled (ngModelChange)="getmemo()" class="form-control" placeholder="Address Line 3" minlength="2" required value={{address3}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">City</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input type="text" disabled class="form-control" (ngModelChange)="getmemo()" placeholder="City" minlength="2" required value={{city}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">State</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input type="text" disabled (ngModelChange)="getmemo()" class="form-control" placeholder="State" minlength="2" required value={{stateOrProvince}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Country</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input type="text" disabled (ngModelChange)="getmemo()" class="form-control" placeholder="Country" minlength="2" required value={{country}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12" *ngIf="showAddress">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Zip Code</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<input type="text" (ngModelChange)="getmemo()" disabled class="form-control" placeholder="Zip Code" minlength="2" required value={{postalCode}}>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t\t\t<div class="col-sm-4">\r\n\t\t\t\t\t\t\t\t<label for="description" class="control-label">Memo</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class="col-sm-5">\r\n\t\t\t\t\t\t\t\t<textarea [(ngModel)]="sourceShelf.memo" (ngModelChange)="getmemo()" name="memo" required></textarea>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t<div class="col-sm-6">\r\n\t\t\t\t\t\t\t<div class="checkbox-cstm check-value">\r\n\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t\x3c!-- <input type="checkbox" name="isActive" \r\n\t\t\t\t\t\t\t\t\t#isActive="ngModel" (ngModelChange)="getmemo()"\r\n\t\t\t\t\t\t\t\t\tclass="form-check-input trigger2" value="true"\r\n\t\t\t\t\t\t\t\t\t id="isActive" [(ngModel)]="sourceShelf.isActive">\r\n\t\t\t\t\t\t\t\t\t<span class="cr">\r\n\t\t\t\t\t\t\t\t\t\t<i class="cr-icon pi pi-check"></i>\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\tActive --\x3e\r\n\t\t\t\t\t\t\t\t\t<input type="checkbox" name="isActive" [(ngModel)]="sourceShelf.isActive" (ngModelChange)="getmemo()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="col-6" *ngIf="showManagement">\r\n\t\t\t\t\t<p-treeTable [value]="gridData" [columns]="cols1" class="p-Treetable-view" [(selection)]="selectedNodeTest">\r\n\t\t\t\t\t\t<ng-template pTemplate="header" let-columns>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th *ngFor="let col of columns">\r\n\t\t\t\t\t\t\t\t\t{{col.header}}\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template pTemplate="body" let-rowNode let-rowData="rowData" let-columns="columns">\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td *ngFor="let col of columns; let i = index">\r\n\t\t\t\t\t\t\t\t\t<p-treeTableToggler [rowNode]="rowNode" *ngIf="i == 0"></p-treeTableToggler>\r\n\t\t\t\t\t\t\t\t\t<p-treeTableCheckbox [value]="rowNode" class="p-Tree-checkbox" *ngIf="i == 0" (click)="managementStructureClick(rowData)"></p-treeTableCheckbox>\r\n\t\t\t\t\t\t\t\t\t{{rowData[col.field]}}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\x3c!--<ng-template pTemplate="summary">\r\n\t\t\t\t\t<div style="text-align: left">\r\n\t\t\t\t\t\tSelected Nodes: <span *ngIf="!selectedNodeTest || selectedNodeTest.length === 0" style="font-weight: normal">none</span>\r\n\t\t\t\t\t\t<ul *ngIf="selectedNodeTest && selectedNodeTest.length">\r\n\t\t\t\t\t\t\t<li *ngFor="let node of selectedNodeTest">\r\n\t\t\t\t\t\t\t\t<span style="font-weight: normal">{{\'Management Id:\'+node.data.managementStructureId + \'  Code:\' + node.data.code + \'  Legal Entity ID:\' + node.data.legalEntityId}}</span>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ng-template>--\x3e\r\n\t\t\t\t\t</p-treeTable>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class="modal-footer">\r\n\r\n\t\t\t\t<button class="btn btn-primary" [disabled]="!userForm.valid ||disableSaveManufacturer || disableSaveForEdit">{{isEditMode ? \'Update\' : \'Save\' }}</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n\t\t\t</div>\r\n\r\n\t\t</form>\r\n\r\n\t</div>\r\n\r\n\r\n</ng-template>\r\n\x3c!-- Delete --\x3e\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n\t<div class="modal-header">\r\n\t\t<h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\t<div class="modal-body">\r\n\t\t<strong>Shelf Name:\r\n\t\t\t<span class="new-label">{{shelf_Name}}</span>\r\n\t\t</strong>\r\n\t</div>\r\n\t<div class="modal-footer">\r\n\t\t<button type="button" class="btn btn-primary" (click)="deleteItemAndCloseModel()">Yes</button>\r\n\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n\t</div>\r\n\r\n</ng-template>\r\n\x3c!-- History --\x3e\r\n<ng-template #contentHist let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n\t<div class="modal-header">\r\n\r\n\t\t<h4 class="modal-title">History of Credit Terms</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\r\n\r\n\t</div>\r\n\t<div class="modal-body">\r\n\r\n\t\t<table class="table table-bordered">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>warehouseId</th>\r\n\t\t\t\t\t<th>siteId</th>\r\n\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t<th>Previous Value</th>\r\n\t\t\t\t\t<th>New Value</th>\r\n\t\t\t\t\t<th>Last Updated By</th>\r\n\t\t\t\t\t<th>Last Updated Time</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tr *ngFor="let audit of auditHisory">\r\n\t\t\t\t<td>{{audit.auditHistoryId}}</td>\r\n\t\t\t\t<td>{{audit.columnName}}</td>\r\n\t\t\t\t<td>{{audit.previousValue}}</td>\r\n\t\t\t\t<td>{{audit.newValue}}</td>\r\n\t\t\t\t<td>{{audit.updatedBy}}</td>\r\n\t\t\t\t<td>{{audit.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</td>\r\n\t\t\t</tr>\r\n\t\t</table>\r\n\t</div>\r\n\t<div class="modal-footer">\r\n\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n\t</div>\r\n</ng-template>\r\n\x3c!-- View --\x3e\r\n<ng-template #view class="modal fade " id="view" role="dialog">\r\n\r\n\t<div class="modal-content">\r\n\t\t<div class="modal-header">\r\n\t\t\t<button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\t\t\t<h4 class="modal-title">Shelf Details</h4>\r\n\t\t</div>\r\n\t\t<div class="modal-body viewform">\r\n\t\t\t<div class="col-sm-6">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Shelf Name : </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{shelf_Name}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Location Name : </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{location_Name}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Warehouse Name : </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{warehouseName}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Site Name : </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{siteName}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Address1: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{address1}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Address2: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{address2}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Address3: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{address3}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> City: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{city}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div class="col-sm-6">\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> State: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{stateOrProvince}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> Country: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{country}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b> ZipCode: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{postalCode}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Memo: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{memo}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Created By: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{createdBy}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Created Date: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Updated By: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{updatedBy}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t<span class="label view-Header">\r\n\t\t\t\t\t\t<b>Updated Date: </b>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class="clear"></div>\r\n\t\t</div>\r\n\t\t<div class="modal-footer">\r\n\t\t\t<button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</ng-template>'},pNpP:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                <h3 class="page-heading clr-green"> GL Account Class Type</h3>\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead"> GL Account Type</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" \r\n                            matTooltipPosition="above" \r\n                            matTooltip="Add  GL Account Type" \r\n                            tooltipPosition="right"\r\n                             data-target="#addglaccount" data-toggle="modal"\r\n                              (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">GL Account Type</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#addglaccount" data-toggle="modal"\r\n                                    (click)="resetForm()"\r\n                                  >\r\n                                  Add  GL Account Type\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                        \x3c!-- <div class="form-row col-row col-row1">\r\n                            <div class="col-md-4 display-flex inline-block" style="margin-top: 25px;">\r\n                                <div>\r\n                                </div>\r\n                            </div>\r\n                        </div> --\x3e\r\n                       \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="GLAccountTypeList" [metaKeySelection]="true" [totalRecords]="totalRecords" [rows]="10" [paginator]="true" [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" (onPage)="changePage($event)" selectionMode="multiple"\r\n                                 [resizableColumns]="true" [reorderableColumns]="true" [scrollable]="true" scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="selectedData" optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left"></p-multiSelect>\r\n                                   \r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  \r\n                                                      <div\r\n                                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                                      >\r\n                                                        <div class="form-group">\r\n                                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                          <div\r\n                                                            class="pull-left"\r\n                                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                                          >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                   \r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                        \r\n                                    <button type="button" class="btn btn-primary " matTooltip="Download All Data" matTooltipPosition="above"   pButton icon="fa-download"\r\n                                            iconPos="left" label="Export All Data"  style="padding: 5px 12px !important;" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary " matTooltip="Download Selected" matTooltipPosition="above"   pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Selection Only"  style="padding: 5px 12px !important;" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above"  >\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()"  matTooltipPosition="above" matTooltip="Download Sample File"  >Sample File Download</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openEdit(rowData)">\r\n                                    <td style="width:200px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" >\r\n\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="modal" \r\n                                            (click)="openView(rowData)" \r\n                                            data-target="#view" matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="openEdit(rowData)" \r\n                                        matTooltip="Edit" data-target="#addglaccount" data-toggle="modal"\r\n                                         matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-target="#addglaccount" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="openEdit(rowData)" \r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n\r\n                                            <span data-target="#delete" data-toggle="modal">\r\n                                                <a class="btn nobg" \r\n                                                (click)="openDelete(content,rowData)" \r\n                                                matTooltip="Delete"  matTooltipPosition="above">\r\n                                                <i class="fa fa-trash"></i></a> </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button \r\n                                        matTooltip="Delete" \r\n                                        (click)="openDelete(content,rowData)" \r\n                                        matTooltipPosition="above">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         data-target="#contentHist" data-toggle="modal" \r\n                                         (click)="getAuditHistoryById(rowData)" matTooltipPosition="above">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg"\r\n                                         (click)="openView(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="GLAccountTypeList && GLAccountTypeList.length == 0 || GLAccountTypeList && GLAccountTypeList.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label> \r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n           GL Account Class:\r\n            <span class="new-label">{{restorerecord.glAccountClassName}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<div *ngIf="viewRowData" #view class="modal fade" id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n                <h4 class="modal-title"> GL Account Class Type Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform">\r\n                <div class="col-sm-12">\r\n                    \x3c!--<p>\r\n                        <span class="label">\r\n                            <b> Gl Account Id: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.GLCID}}</span>\r\n                    </p>--\x3e\r\n                    <p>\r\n                        <span class="label">\r\n                            <b> GL Account Class Name: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.glAccountClassName}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label">\r\n                            <b> GL Account Class  Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.glAccountClassMemo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div #content id="delete" class="modal fade" role="dialog" data-backdrop="static"\r\n data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                    GL Account Type:\r\n                    <span class="new-label">{{code_Name}}</span>\r\n                </strong>  \r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                 (click)="deleteItemAndCloseModel()">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                (click)="dismissModel()">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\x3c!-- <div #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            GL Account Type:\r\n            <span class="new-label">{{code_Name}}</span>\r\n        </strong>   \r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" (click)="deleteItemAndCloseModel()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n    </div>\r\n</div>\r\n</div> --\x3e\r\n\r\n\x3c!--<ng-template #auditContent  data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>--\x3e\r\n\r\n<div #addglaccount id="addglaccount" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} GL Account Class  </h4>\r\n     \r\n            </div>\r\n            <div class="modal-body">\r\n                \x3c!--// <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="editItemAndCloseModel()">--\x3e\r\n                <form #userForm="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="name" class="control-label">\r\n                                    GL Account Type Name\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete [(ngModel)]="addnewGLAccountClassType.glAccountClassName" field="glAccountClassName" name="glAccountClassName" \r\n                                                (onSelect)="partnmId($event)" (onKeyUp)="eventHandler(\'glAccountClassName\',$event.target.value)" \r\n                                                (onBlur)="onBlur($event)"\r\n                                                [suggestions]="GLAccountClassTypeList" (completeMethod)="filterGlAccountclass($event)" [size]="30"\r\n                                                [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveMsg" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        \x3c!--<div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="GLCID" class="control-label">GLCID</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="gLCID" [ngModelOptions]="{standalone: true}" [(ngModel)]="addnewGLAccountClassType.gLCID" minlength="2"></textarea>\r\n                            </div>\r\n                            <div class="clear"></div>\r\n                        </div>--\x3e\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="GLAccountClassMemo" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="addnewGLAccountClassType.glAccountClassMemo" minlength="2" (ngModelChange)="getChange()"></textarea>\r\n                            </div>\r\n                            <div class="clear"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm check-value">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" (ngModelChange)="getChange()" #isActive="ngModel" class="form-check-input trigger2" checked id="isActive" [(ngModel)]="addnewGLAccountClassType.isActive" [ngModelOptions]="{standalone: true}">\r\n                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" [disabled]="!userForm.valid || disableSave" data-dismiss="modal" (click)="editItemAndCloseModel()">{{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Gl Account Type</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>GLCID</th>\r\n                                <th>GLAccount Type</th>\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'glcid\', audit.glcid)  ? \'black\' : \'red\'  }">{{audit.glcid}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'glAccountClassName\', audit.glAccountClassName)  ? \'black\' : \'red\'  }">{{audit.glAccountClassName}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'glAccountClassMemo\', audit.glAccountClassMemo)  ? \'black\' : \'red\'  }">{{audit.glAccountClassMemo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n'},pxcQ:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Aircraft Manufacturer</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" matTooltipPosition="above"\r\n                             matTooltip="Add Aircraft Manufacturer"\r\n                                tooltipPosition="right" data-target="#add" data-toggle="modal" (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Aircraft Manufacturer</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal"\r\n                                     (click)="resetForm()"\r\n                                  >\r\n                                  Add Aircraft Manufacturer\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" [first]="0"\r\n                            [rows]="pageSize" \r\n                            [paginator]="true" \r\n                            [pageLinks]="3" \r\n                            [rowsPerPageOptions]="[10,20,50,100]"\r\n                            [columns]="selectedColumns" \r\n                            selectionMode="multiple" \r\n                            [metaKeySelection]="true"\r\n                            (onPage)="changePage($event)"\r\n                            [resizableColumns]="true" \r\n                            [reorderableColumns]="true" \r\n                            [scrollable]="true"\r\n                            [totalRecords]="totalRecords" scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers"\r\n                                     optionLabel="header"\r\n                                                   [(ngModel)]="selectedColumns" \r\n                                                   [style]="{minWidth: \'200px\'}"\r\n                                                    style="float:left;padding:0px 2px !important"\r\n                                                   (onChange)="columnsChanges()"></p-multiSelect>\r\n                                   \r\n                                   \r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  \r\n                                                      <div\r\n                                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                                      >\r\n                                                        <div class="form-group">\r\n                                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                          <div\r\n                                                            class="pull-left"\r\n                                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                                          >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                    \x3c!--  --\x3e\r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button" label="Export Data"  style="padding: 5px 12px !important;" matTooltip="Download Data" matTooltipPosition="above" pButton icon="fa-download" iconPos="left" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" label="Export Selected Data"  style="padding: 5px 12px !important;" matTooltip="Download Selected Data" matTooltipPosition="above" pButton icon="fa-download" iconPos="left" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customAircraftTypeExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" (click)="sampleAircraftTypeExcelDownload()"  style="padding: 5px 12px !important;" matTooltip="Download Sample File" matTooltipPosition="above" style="padding: 5px 10px !important;">Sample File Download</button>\r\n                                    </div>\r\n                                 </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                            (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle data-toggle="modal" data-target="#view"\r\n                                        (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" matTooltipPosition="above"\r\n                                               (click)="viewSelectedRow(rowData)" matTooltip="view" data-target="#view"\r\n                                               data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                       \r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)" \r\n                                        matTooltipPosition="above"\r\n                                                data-target="#add" data-toggle="modal" matTooltip="Edit">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span  data-target="#delete" data-toggle="modal" >\r\n                                            <a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button\r\n                                         matTooltip="Delete" matTooltipPosition="above"\r\n                                                data-target="#delete" data-toggle="modal" \r\n                                                (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button \r\n                                        matTooltip="History" matTooltipPosition="above"\r\n                                                data-target="#contentHist" data-toggle="modal"\r\n                                                (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords"  [disabled]="true" pInputText\r\n                                    type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText\r\n                                    type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Aircraft Manufacturer:\r\n            <span class="new-label">{{restorerecord.description}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>Aircraft Manufacturer Name:\r\n                    <span class="new-label">{{selectedRowforDelete.description}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Aircraft Manufacturer</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">Aircraft Manufacturer Name\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="description" [(ngModel)]="addNew.description"\r\n                                    (onSelect)="selectedDescription($event)"\r\n                                    (onKeyUp)="checkGroupDescriptionExists(\'description\', $event.target.value)"\r\n                                    name="description" [suggestions]="descriptionList"\r\n                                    (completeMethod)="filterDescription($event)" [size]="30" [minLength]="1"\r\n                                    [dropdown]="true" class="p-autoComplete-ctsm" required (ngModelChange)="getmemo()">\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForDescription" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                \r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription" (ngModelChange)="getmemo()"\r\n                                    [(ngModel)]="addNew.memo" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive" (ngModelChange)="getmemo()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal"\r\n                    [disabled]="create.invalid || disableSaveForDescription ||disableSave " (click)="save();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Aircraft Manufacturer NAme</th>\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                <td>{{ext.description}}</td>                               \r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Aircraft Manufacturer</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Aircraft Manufacturer Name</th>\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td\r\n                                    [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.description}}</td>\r\n                              \r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.memo}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Aircraft Manufacturer Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Aircraft Manufacturer: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">IsActive</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},qIaw:function(t,e,a){"use strict";a.r(e),e.default=".search-box {\n  flex-direction: column;\n  box-sizing: border-box;\n  display: flex;\n}\n\n.search-box .mat-form-field {\n  padding: 0 2em;\n}\n\n.control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}"},qLUK:function(t,e,a){"use strict";a.r(e),e.default=""},qRqs:function(t,e,a){"use strict";a.r(e),e.default=""},qSll:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Currency</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" \r\n                            matTooltipPosition="above" matTooltip="Add Currency"\r\n                             tooltipPosition="right"  data-target="#add" \r\n                             data-toggle="modal" (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Currency</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" \r\n                             data-toggle="modal" (click)="resetForm()"\r\n                                  >\r\n                                    Add Currency\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <p-table #dt \r\n                        class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" \r\n                        [first]="0" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true" \r\n                        [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple"\r\n                        [metaKeySelection]="true"\r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [scrollable]="true" \r\n                        [totalRecords]="totalRecords" \r\n                        scrollHeight="450px" >\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect  [maxSelectedLabels]="2" [options]="headers"  optionLabel="header" [(ngModel)]="selectedColumns"  \r\n                                        [style]="{minWidth: \'200px\'}"  style="float:left" (onChange)="columnsChanges()"  ></p-multiSelect>\r\n                                   \r\n                                   \r\n                                    </div>\r\n                                    <div class="col">\r\n                                      \r\n                                          <div\r\n                                            style="width: 370px; float: right; padding-top: 3px;"\r\n                                          >\r\n                                            <div class="form-group">\r\n                                              \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                              <div\r\n                                                class="pull-left"\r\n                                                style="margin-top: 4px; margin-right: 15px;"\r\n                                              >\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>In-Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>All\r\n                                                        </label>\r\n                                                    </div>\r\n                                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                          <label style="width: auto !important;margin-top: 3px;">\r\n                                                            \x3c!--  --\x3e\r\n                                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                             (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                              />\r\n                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                          Show  Deleted List \r\n                                                          </label>\r\n                                                        </div>\r\n                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="row">\r\n                                      <div class="col">\r\n                                        <button type="button" class="btn btn-primary " matTooltipPosition="above"  style="padding: 5px 12px !important;" matTooltip="Download Selected"   pButton icon="fa-download"\r\n                                        iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary " matTooltipPosition="above"  style="padding: 5px 12px !important;" matTooltip="Download All Data"   pButton icon="fa-download"\r\n                                        iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button> \r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        \r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)"   class="uploaddoc upload-file" \r\n                                        accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()" >Sample File Download</button>\r\n                                    </div>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </ng-template>\r\n                         \r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th  style="width:120px" *ngFor="let col of columns"  pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th  style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template  pTemplate="body" let-rowData let-columns="columns"  >\r\n                                <tr    [pSelectableRow]="rowData" pReorderableRowHandle  >\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal" data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}" \r\n                                        matTooltipPosition="above" matTooltip="Active"\r\n                                         (onChange)="changeStatus(rowData)"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" matTooltip="View" matTooltipPosition="above" (click)="viewSelectedRow(rowData)" data-target="#view" data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                        (click)="edit(rowData)" data-target="#add" data-toggle="modal" \r\n                                        matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button \r\n                                            matTooltip="Delete"  data-target="#delete"\r\n                                         data-toggle="modal"  (click)="delete(rowData)"\r\n                                          matTooltipPosition="above">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History" \r\n                                        matTooltipPosition="above" data-target="#contentHist" data-toggle="modal"\r\n                                         (click)="getAuditHistoryById(rowData)" >\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n                                        <div *ngIf="currentDeletedstatus==true">\r\n                                            <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                            matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                           <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                          <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                            \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                         \r\n                                        </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp; \r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" /> \r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Currency:\r\n            <span class="new-label">{{restorerecord.displayName}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<div  *ngIf="selectedRowforDelete" #delete id="delete"  class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n          <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n          <strong>Currency:\r\n            <span class="new-label">{{selectedRowforDelete.code}}</span>\r\n        </strong>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n        </div>\r\n      </div>\r\n  \r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div #add  id="add"class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n  \r\n      \x3c!-- Modal content--\x3e\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n          <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Currency   </h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <form #create="ngForm" >\r\n                <div class="form-group">\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-4">\r\n                            <label for="description" class="control-label">\r\n                                Currency Name\r\n                                <span class="clr-red">*</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <p-autoComplete field="displayName" [(ngModel)]="addNew.displayName" (onSelect)="selectedCurrencyName($event)" (onKeyUp)="checkCurrencyNameExists(\'displayName\', $event.target.value)" name="currencyName"\r\n                                            [suggestions]="currencyNameList" (completeMethod)="filterCurrencyName($event)" [size]="30" [minLength]="1"\r\n                                            [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\r\n                            </p-autoComplete>\r\n                            <div *ngIf="disableSaveCurrencyName" class="clr-red">Already Exists</div>\r\n                            <div class="clear"></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-4">\r\n                            <label for="description" class="control-label">\r\n                                Currency Code\r\n                                <span class="clr-red">*</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <p-autoComplete field="code" [(ngModel)]="addNew.code" (onSelect)="selectedCurrencyCode($event)" (onKeyUp)="checkCurrencyCodeExists(\'code\', $event.target.value)" name="currencyCode"\r\n                                            [suggestions]="currencyCodeList" (completeMethod)="filterCurrencyCode($event)" [size]="30" [minLength]="1"\r\n                                            [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\r\n                            </p-autoComplete>\r\n                            <div *ngIf="disableSaveCurrencyCode" class="clr-red">Already Exists</div>\r\n                            <div class="clear"></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-4">\r\n                            <label for="description" class="control-label">\r\n                                Currency Symbol\r\n                                <span class="clr-red">*</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <p-autoComplete field="symbol" [(ngModel)]="addNew.symbol" (onSelect)="selectedCurrencySymbol($event)" (onKeyUp)="checkCurrencySymbolExists(\'symbol\', $event.target.value)" name="currencySymbol"\r\n                                            [suggestions]="currencySymbolList" (completeMethod)="filterCurrencySymbol($event)" [size]="30" [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\r\n                            </p-autoComplete>\r\n                            <div *ngIf="disableSaveCurrencySymbol" class="clr-red">Already Exists</div>\r\n                            <div class="clear"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-4">\r\n                            <label for="description" class="control-label">\r\n                                Country\r\n                                <span class="clr-red">*</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <p-autoComplete  class="autocomp-customer-cstm" filter="true"\r\n                                            [(ngModel)]="addNew.countryId" emptyMessage="No Match Found" name="country1"\r\n                                            [suggestions]="countrycollection" field="nice_name"\r\n                                            (completeMethod)="filterCountries($event)" [size]="30" [minLength]="1" [dropdown]="true"\r\n                                            [forceSelection]="true" required>\r\n                            </p-autoComplete>\r\n                            <div class="clear"></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                  \r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-4">\r\n                            <label for="description" class="control-label">Memo</label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <textarea class="text-item" #memo="ngModel" id="memo" \r\n                            (ngModelChange)="getChange()" name="memodescription" [(ngModel)]="addNew.memo" minlength="2"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="col-sm-6">\r\n                        <div class="checkbox-cstm">\r\n                            <label>\r\n                                <input type="checkbox" name="isActive"  [(ngModel)]="addNew.isActive">\r\n                                <span class="cr">\r\n                                    <i class="cr-icon pi pi-check"></i>\r\n                                </span>\r\n                                Active\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n           </form>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button class="btn btn-primary"  data-dismiss="modal" [disabled]="create.invalid || disableSaveCurrencyCode || disableSaveCurrencyName || disableSaveCurrencySymbol || disableSaveCurrency" (click)="save();"> {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n            <button type="button" class="btn btn-danger"  data-dismiss="modal" (click)="resetForm()">Close</button>\r\n    \r\n        </div>\r\n      </div>\r\n  \r\n    </div>\r\n  </div>\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n                            <div class="modal-dialog modal-xl">\r\n                          \r\n                             \r\n                              <div class="modal-content">\r\n                                <div class="modal-header">\r\n                                  <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                                  <h4 class="modal-title">Duplicate Records</h4>\r\n                                </div>\r\n                                <div class="modal-body">\r\n                                    <div class="table-responsive rro-table-cstm">\r\n                                        <table class="table table-bordered"  >\r\n                                            <thead>\r\n                                                <tr>\r\n                                  \r\n                                                    <th>Item Group</th>\r\n                                                    <th>Description</th>\r\n                                             \r\n                                                    <th>Memo</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody *ngIf="existingRecordsResponse.length> 0" >\r\n                                                    <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n                                      \r\n                                                            \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                                            <td >{{ext.itemGroupCode}}</td>\r\n                                                            <td>{{ext.description}}</td>\r\n                                                    \r\n                                                            <td >{{ext.memo}}</td>\r\n                                                        </tr>\r\n                                            </tbody>\r\n                                            \r\n\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="modal-footer">\r\n                                  <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                                </div>\r\n                              </div>\r\n                          \r\n                            </div>\r\n</div>\r\n\r\n                          <div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n                            <div class="modal-dialog modal-xl">\r\n                          \r\n                              \x3c!-- Modal content--\x3e\r\n                              <div class="modal-content">\r\n                                <div class="modal-header">\r\n                                  <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                                  <h4 class="modal-title">History of Currency</h4>\r\n                                </div>\r\n                                <div class="modal-body">\r\n                                    <div class="table-responsive rro-table-cstm">\r\n                                        <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable" >\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Name</th>\r\n                                                    <th>Code</th>\r\n                                                    <th>Symbol</th>\r\n                                                    <th>Country</th>\r\n                                                    <th>Memo</th>\r\n                                                    <th>Is Active</th>\r\n                                                    <th> Created By</th>\r\n                                                    <th> Created Time</th>\r\n\r\n                                                    <th> Updated By</th>\r\n                                                    <th> Updated Time</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody *ngIf="auditHistory.length> 0" >\r\n                                                <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                                    \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'displayName\', audit.displayName)  ? \'black\' : \'red\'  }">{{audit.displayName}}</td>\r\n                                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'code\', audit.code)  ? \'black\' : \'red\'  }">{{audit.code}}</td>\r\n                                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'symbol\', audit.symbol)  ? \'black\' : \'red\'  }">{{audit.symbol}}</td>\r\n                                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'countryName\', audit.countryName)  ? \'black\' : \'red\'  }">{{audit.countryName}}</td>\r\n\r\n                                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'is Active\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                                    <td>{{audit.createdBy}}</td>\r\n                                                    <td>{{audit.createdDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n\r\n                                                    <td>{{audit.updatedBy}}</td>\r\n                                                    <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                            \r\n\r\n                                        </table>\r\n                                        <ng-template #noDatavailable>\r\n                                            <div class="text-center"> \r\n                                                    <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                                                    <h4 style="color: #ff5663;">No History Found </h4>\r\n                                            </div>\r\n\r\n                                        </ng-template>  \r\n                                    </div>\r\n                                </div>\r\n                                <div class="modal-footer">\r\n                                  <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                                </div>\r\n                              </div>\r\n                          \r\n                            </div>\r\n                          </div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n<div class="modal-dialog modal-sm">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n            <h4 class="modal-title">Currency Details</h4>\r\n        </div>\r\n        <div class="modal-body viewform ">\r\n            <div class="col-sm-12">\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">ID: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.currencyId}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Currency Name: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.displayName}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Currency Code: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.code}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Currency Symbol: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.symbol}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Country: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.countryName}}</span>\r\n                </p>\r\n\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Memo: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.memo}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Is Active</b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Created By: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.createdBy }}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Created Date: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Updated By: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.updatedBy}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b class="view-Header">Updated Date: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n            </div>\r\n            <div class="clear"></div>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n</div>'},qmdr:function(t,e,a){"use strict";a.r(e),e.default=".new-label {\n  color: cadetblue;\n}\n\n.text-item {\n  width: 100%;\n  border-radius: 5px !important;\n  margin-left: 0px;\n}\n\n.control-label {\n  margin-top: 5px;\n  text-align: left;\n  width: 100% !important;\n}"},qr7J:function(t,e,a){"use strict";a.r(e),e.default='.x_panel {\n  border: none;\n}\n\n.rpo-bcrumb {\n  background-color: transparent;\n  color: #295d92;\n}\n\n.rpo-bcrumb li {\n  font-family: "Roboto";\n  font-weight: bold;\n}\n\n.search-box {\n  flex-direction: column;\n  box-sizing: border-box;\n  display: flex;\n}\n\n.search-box .mat-form-field {\n  padding: 0 2em;\n}'},r34A:function(t,e,a){"use strict";a.r(e),e.default=".control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}"},"r7+K":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead"> Asset Location</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltip="Add Asset Location" \r\n                             matTooltipPosition="above"\r\n                              (click)="open(contentEdit)">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading"> Asset Location</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="open(contentEdit)"\r\n                                  >\r\n                                  Add Asset Location\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                       \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="assetLocationList" [metaKeySelection]="true" \r\n                        [totalRecords]="totalRecords" [rows]="pageSize" [paginator]="true" [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" (onPage)="changePage($event)" selectionMode="multiple"\r\n                                 [resizableColumns]="true" [reorderableColumns]="true" [scrollable]="true" scrollHeight="450px">\r\n\r\n                            <ng-template pTemplate="caption">\r\n\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="selectedData" optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left"></p-multiSelect>\r\n                                   \r\n                                   \r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  \r\n                                                      <div\r\n                                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                                      >\r\n                                                        <div class="form-group">\r\n                                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                          <div\r\n                                                            class="pull-left"\r\n                                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                                          >                                                              \r\n                                                            <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                    \x3c!--  --\x3e\r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                                        \r\n                                                   <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"  style="padding: 5px 12px !important;" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"  style="padding: 5px 12px !important;" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" label="Export Selected Data" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()" matTooltip="Download Sample File" matTooltipPosition="above">Sample File Download</button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position: sticky" *ngIf="selectedColumns.length> 0">Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openView(view,rowData)">\r\n                                    <td style="width:200px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg"\r\n                                             data-toggle="tooltip" (click)="openView(view,rowData)"\r\n                                             matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                      \r\n                                      \r\n                                        <span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openEdit(contentEdit,rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                      \r\n                                      \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="openEdit(contentEdit,rowData)"\r\n                                         matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="openDelete(content,rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete"\r\n                                         matTooltipPosition="above" (click)="openDelete(content,rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal" ><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" data-target="#contentHist" data-toggle="modal"\r\n                                          (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view">\r\n                                           <a class="btn nobg" (click)="openView(view,rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="assetLocationList && assetLocationList.length == 0 || assetLocationList && assetLocationList.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label> \r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n      \r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n           \r\n        </div>\r\n        <div class="modal-body">\r\n            <strong>\r\n                Asset Location:\r\n                <span class="new-label">{{restorerecord.name}}</span>\r\n            </strong>\r\n        </div>\r\n      \r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n      </ng-template> \r\n\r\n    <ng-template #view class="modal fade " id="view" role="dialog">\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n                <h4 class="modal-title"> Asset Location Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label">\r\n                            <b> Asset Location Code: </b>\r\n                        </span>\r\n                        <span class="value">{{code}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b> Asset Location: </b>\r\n                        </span>\r\n                        <span class="value">{{name}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label">\r\n                            <b> Asset Location Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{createdBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </ng-template>\r\n\r\n    <ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n        <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n            <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are you sure you want to delete?</h4>\r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n        </div>\r\n        <div class="modal-body">\r\n            <strong>\r\n                Asset Location Code:\r\n                <span class="new-label">{{code_Name}}</span>\r\n            </strong>\r\n        </div>\r\n\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" (click)="deleteItemAndCloseModel()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n\r\n    </ng-template>\r\n\r\n    <ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n        <div class="modal-header">\r\n            <h4 class="modal-title" *ngIf="isEditMode">Edit Asset Location</h4>\r\n            <h4 class="modal-title" *ngIf="!isEditMode">Add Asset Location</h4>\r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n        </div>\r\n        <div class="modal-body">\r\n            <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="SaveandEditAssetLocation()">\r\n                <div class="form-group">\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-4">\r\n                            <label for="name" class="control-label">\r\n                                Asset Location Code\r\n                                <span class="clr-red">*</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            \x3c!--<p-autoComplete field="code" [(ngModel)]="codeName" (onSelect)="partnmId($event)" (onKeyUp)="eventHandler(\'code\', $event.target.value)" name="code"\r\n                    [suggestions]="localCollection" (completeMethod)="filterDisposalType($event)" [size]="30" [minLength]="1"\r\n                    [dropdown]="true" class="p-autoComplete-ctsm" required>--\x3e\r\n                            <p-autoComplete [(ngModel)]="codeName" name="codeName"\r\n                                            (onSelect)="partnmId($event)" (onKeyUp)="eventHandler($event)" [suggestions]="localCollection" (completeMethod)="filterAssetLocation($event)" [size]="30"\r\n                                            [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                <ng-template let-codeName pTemplate="item">\r\n                                    <div class="ui-helper-clearfix">{{codeName}}</div>\r\n                                </ng-template>\r\n\r\n                            </p-autoComplete>\r\n                            <div *ngIf="recordExists && codeName" class="clr-red">Already Exists</div>\r\n                            <div class="clear"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-4">\r\n                            <label for="AssetLocationName" class="control-label control-item">\r\n                                Asset Location\r\n                                <span class="clr-red">*</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <input type="text" name="name" class="form-control" required #Name="ngModel" [(ngModel)]="sourceAction.name" minlength="2">\r\n                            <div *ngIf="Name.dirty && Name.errors?.required && Name.errors" class="invalid-form-error-message">\r\n                                Asset Location required.\r\n                            </div>\r\n                            <div *ngIf="Name.dirty && Name.errors?.minlength && Name.errors" class="invalid-form-error-message">\r\n                                Asset Location must be at least 2 characters long.\r\n                            </div>\r\n                            <div class="clear"></div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-4">\r\n                            <label for="AssetLocationMemo" class="control-label">Memo</label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <textarea class="text-item" #memo="ngModel" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceAction.memo" \r\n                            (ngModelChange)="getChange()" minlength="2"></textarea>\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="col-sm-6">\r\n                        <div class="checkbox-cstm check-value">\r\n                            <label>\r\n                                <input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input trigger2" checked id="isActive" [(ngModel)]="sourceAction.isActive" [ngModelOptions]="{standalone: true}">\r\n                                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                Active\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button class="btn btn-primary" [disabled]="!userForm.valid || disableSave || disableSaveLocation" (click)="SaveandEditAssetLocation()">{{isEditMode == true ? \'Update\' : \'Save\' }}</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-xl">\r\n\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">History of Asset Location</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="table-responsive rro-table-cstm">\r\n                        <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                            <thead>\r\n                                <tr>\r\n                                    \x3c!-- <th>UMID</th> --\x3e\r\n                                    <th>Asset Location Code</th>\r\n                                    <th>Asset Location</th>\r\n                                    <th>Memo</th>\r\n                                    <th>IsActive</th>\r\n                                    <th>Updated By</th>\r\n                                    <th>Updated Time</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf="auditHistory.length> 0">\r\n                                <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                    \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'code\', audit.code)  ? \'black\' : \'red\'  }">{{audit.code}}</td>\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'name\', audit.name)  ? \'black\' : \'red\'  }">{{audit.name}}</td>\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                    <td>{{audit.updatedBy}}</td>\r\n                                    <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                                </tr>\r\n                            </tbody>\r\n\r\n\r\n                        </table>\r\n                        <ng-template #noDatavailable>\r\n                            <div class="text-center">\r\n                                <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                                <h4 style="color: #ff5663;">No History Found </h4>\r\n                            </div>\r\n\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n'},r7lI:function(t,e,a){"use strict";a.r(e),e.default=":host {\n  flex: 0 0 30px;\n  display: flex;\n}\n:host .pagination {\n  width: 100%;\n  position: relative;\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n}\n:host .pagination .description {\n  position: absolute;\n  top: 50%;\n  transform: translate(0, -50%);\n}\n:host .pagination .numbers {\n  display: block;\n  text-align: center;\n  flex: 1;\n}\n:host .pagination .numbers button {\n  flex: 0 0 auto;\n  outline: none;\n  border: 0;\n  background: transparent;\n  cursor: pointer;\n}"},r8Qk:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Add Credit Terms</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" \r\n                            matTooltipPosition="above"\r\n                             matTooltip="Add Credit Terms"\r\n                              tooltipPosition="right" \r\n                              data-target="#addCreditTerm" data-toggle="modal" \r\n                              (click)="resetCreditTermsForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Add Credit Terms</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#addCreditTerm" data-toggle="modal" \r\n                                    (click)="resetCreditTermsForm()"\r\n                                  >\r\n                                  Add Credit Terms\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm"\r\n                                 [value]="creditTermData"\r\n                                 [first]="0"\r\n                                 [rows]="pageSize" [metaKeySelection]="true" [paginator]="true"\r\n                                 [pageLinks]="3" [rowsPerPageOptions]="[10,20,50,100]"\r\n                                 [columns]="selectedColumns" \r\n                                 selectionMode="multiple" \r\n                                 (onPage)="changePage($event)"\r\n                                 [(selection)]="selectedColumn"\r\n                                 [resizableColumns]="true"\r\n                                 [reorderableColumns]="true"\r\n                                 [scrollable]="true"\r\n                                 [totalRecords]="totalRecords"\r\n                                 scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [options]="creditTermHeaders" [(ngModel)]="selectedColumns" optionLabel="header"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left" (onChange)="columnsChanges()">\r\n                                                </p-multiSelect>\r\n                                            </div>\r\n                                            <div class="col">\r\n                                              \r\n                                                  <div\r\n                                                    style="width: 370px; float: right; padding-top: 3px;"\r\n                                                  >\r\n                                                    <div class="form-group">\r\n                                                      \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                      <div\r\n                                                        class="pull-left"\r\n                                                        style="margin-top: 4px; margin-right: 15px;"\r\n                                                      >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                    \x3c!--  --\x3e\r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">                                             \r\n                                   \r\n                                                   <button type="button" class="btn btn-primary" pButton icon="fa-download" iconPos="left"  style="padding: 5px 12px !important;" label="Export All Data" matTooltipPosition="above" matTooltip="Download All Data"   (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary" pButton icon="fa-download" iconPos="left"  style="padding: 5px 12px !important;" label="Export Selection Only" matTooltipPosition="above" matTooltip="Download Selected"  \r\n                                            (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above"  >\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" (click)="sampleExcelDownload()"  style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download Sample File"  >Sample File Download</button>\r\n\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                    <col *ngFor="let col of columns" style="width:140px">\r\n                                </colgroup>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:150px;position:sticky" *ngIf="selectedColumns.length> 0">Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:150px;position:sticky"></th>\r\n                                </tr>\r\n\r\n                            </ng-template>\r\n                            -<ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                \r\n                                    <td *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal" data-target="#view">\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width: 150px" *ngIf="selectedColumns.length> 0">\r\n                                      \r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="modal" \r\n                                            (click)="viewSelectedRow(rowData)" data-target="#view" matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \r\n                                        \r\n                                        <span data-target="#addCreditTerm" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)" \r\n                                        data-target="#addCreditTerm" data-toggle="modal" matTooltip="edit" \r\n                                        matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n                                      \r\n                                        <span  data-target="#delete" data-toggle="modal" >\r\n                                            <a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                      \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button\r\n                                         matTooltip="delete" matTooltipPosition="above"\r\n                                          data-target="#delete" data-toggle="modal" \r\n                                          (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="history"\r\n                                         matTooltipPosition="above" data-target="#contentHist"\r\n                                          data-toggle="modal" (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n\t\t\t\t\t\t\t\t\t\t *ngIf="creditTermData && creditTermData.length == 0 || creditTermData && creditTermData.length ==null">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td [attr.colspan]="7" class="no-records-cstm">\r\n\t\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n                        \r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n      \r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n           \r\n        </div>\r\n        <div class="modal-body">\r\n            <strong>\r\n                Credit Terms:\r\n                <span class="new-label">{{restorerecord.name}}</span>\r\n            </strong>\r\n        </div>\r\n      \r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n      </ng-template> \r\n    <div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <strong>\r\n                       Credit Terms:\r\n                        <span class="new-label">{{selectedRowforDelete.name}}</span>\r\n                    </strong>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div #addCreditTerm id="addCreditTerm" class="modal fade" role="dialog"data-backdrop="static" data-keyboard="false">\r\n\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <h4 class="modal-title" *ngIf="isEditMode">Edit Credit Terms</h4>\r\n                    <h4 class="modal-title" *ngIf="!isEditMode">Add Credit Terms</h4>\r\n                    <button type="button" class="close" aria-label="Close" data-dismiss="modal">\r\n                        <span aria-hidden="true">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <form #userForm="ngForm">\r\n                        <div class="form-group">\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-4">\r\n                                    <label for="name" class="control-label">\r\n                                        Credit Term Name\r\n                                        <span class="clr-red">*</span>\r\n                                    </label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <p-autoComplete field="name"\r\n                                                    [(ngModel)]="addNewCreditTerm.name"\r\n                                                    [suggestions]="creditTermsList"\r\n                                                    (onBlur)="onBlur($event)"\r\n                                                    (completeMethod)="filterCreditTerms($event)"\r\n                                                    (onSelect)="selectedCreditTerm($event)"\r\n                                                    (onKeyUp)="checkCreditTermExists(\'name\', $event.target.value)"\r\n                                                    name="name" [size]="30" [minLength]="1" [dropdown]="true"\r\n                                                    class="p-autoComplete-ctsm" required (ngModelChange)="getmemo()">\r\n                                    </p-autoComplete>\r\n                                    <div *ngIf="disableSaveForCreditTermMSg" style="color:red">Already exists</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-4">\r\n                                    <label for="percentage" class="control-label">\r\n                                        Percentage\r\n                                        <span class="clr-red">*</span>\r\n                                    </label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                               \t   <select [(ngModel)]="addNewCreditTerm.percentage" name="percentage" required (ngModelChange)="getmemo()">\r\n                                           <option *ngFor="let per of percentageList" [ngValue]="per.percentValue">{{per.percentValue}}</option>\r\n                                   </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-4">\r\n                                    <label for="days" class="control-label">\r\n                                        Days\r\n                                        <span class="clr-red">*</span>\r\n                                    </label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <select [(ngModel)]="addNewCreditTerm.days" name="days" required (ngModelChange)="getmemo()">\r\n                                        <option *ngFor="let d of dayList" [ngValue]="d">{{d}}</option>\r\n                                   </select>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-4">\r\n                                    <label for="netdays" class="control-label">\r\n                                        Net Days\r\n                                        <span class="clr-red">*</span>\r\n                                    </label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                   <select [(ngModel)]="addNewCreditTerm.netDays" name="netdays" required (ngModelChange)="getmemo()">\r\n                                        <option *ngFor="let nd of netDayList" [ngValue]="nd">{{nd}}</option>\r\n                                   </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-4">\r\n                                    <label for="memo" class="control-label">Memo</label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <textarea #memo="ngModel" id="memo" name="memo" [(ngModel)]="addNewCreditTerm.memo" (ngModelChange)="getmemo()"></textarea>\r\n                                </div>\r\n                            </div>\r\n                          \r\n                        </div>\r\n                        <div class="form-group">\r\n                            <div class="col-sm-6">\r\n                                <div class="checkbox-cstm check-value">\r\n                                    <label>\r\n                                        <input type="checkbox" name="isActive" class="form-check-input trigger2" [(ngModel)]="addNewCreditTerm.isActive" (ngModelChange)="getmemo()">\r\n                                        <span class="cr">\r\n                                            <i class="cr-icon pi pi-check"></i>\r\n                                        </span>\r\n                                        Active\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div class="clear"></div>\r\n                        </div>\r\n                        <div class="modal-footer">\r\n                            <button class="btn btn-primary" data-dismiss="modal" [disabled]="!userForm.valid || disableSaveForCreditTermMSg || disableSaveForEdit" (click)="saveCreditTerms();">{{isEditMode ? \'Update\' : \'Save\'}}</button>\r\n                            <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetCreditTermsForm()">Close</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-sm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                    <h4 class="modal-title">Credit Term Details</h4>\r\n                </div>\r\n                <div class="modal-body viewform ">\r\n                    <div class="col-sm-12">\r\n                        <p>\r\n                            <span class="label ">\r\n                                <b class="view-Header">Credit Term Name: </b>\r\n                            </span>\r\n                            <span class="value">{{ viewRowData.name}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label ">\r\n                                <b class="view-Header">Percentage: </b>\r\n                            </span>\r\n                            <span class="value">{{ viewRowData.percentage }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label ">\r\n                                <b class="view-Header">Days: </b>\r\n                            </span>\r\n                            <span class="value">{{ viewRowData.days}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label ">\r\n                                <b class="view-Header">Net Days: </b>\r\n                            </span>\r\n                            <span class="value">{{ viewRowData.netDays}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label ">\r\n                                <b class="view-Header">Condtion Memo </b>\r\n                            </span>\r\n                            <span class="value">{{ viewRowData.memo}}</span>\r\n                        </p>\r\n\r\n                        <p>\r\n                            <span class="label ">\r\n                                <b class="view-Header">Is Active</b>\r\n                            </span>\r\n                            <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label ">\r\n                                <b class="view-Header">Created By: </b>\r\n                            </span>\r\n                            <span class="value">{{viewRowData.createdBy }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label ">\r\n                                <b class="view-Header">Created Date: </b>\r\n                            </span>\r\n                            <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label ">\r\n                                <b class="view-Header">Updated By: </b>\r\n                            </span>\r\n                            <span class="value">{{viewRowData.updatedBy}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label ">\r\n                                <b class="view-Header">Updated Date: </b>\r\n                            </span>\r\n                            <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetCreditTermsForm()">Close</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n    <div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-xl">\r\n\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">History of Credit Terms</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="table-responsive rro-table-cstm">\r\n                        <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                            <thead>\r\n                                <tr>\r\n                                    \x3c!-- <th>UMID</th> --\x3e\r\n                                    <th>Credit Term Name</th>\r\n                                    <th>Percentage</th>\r\n                                    <th>Days</th>\r\n                                    <th>Net Days</th>\r\n                                    <th>Memo</th>\r\n                                    <th>Is Active</th>\r\n                                    <th>Updated By</th>\r\n                                    <th>Updated Time</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf="auditHistory.length> 0">\r\n                                <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                    \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'name\', audit.name)  ? \'black\' : \'red\'  }">{{audit.name}}</td>\r\n                                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'percentage\', audit.percentage)  ? \'black\' : \'red\'  }">{{audit.percentage}}</td>\r\n                                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'days\', audit.days)  ? \'black\' : \'red\'  }">{{audit.days}}</td>\r\n                                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'netDays\', audit.netDays)  ? \'black\' : \'red\'  }">{{audit.netDays}}</td>\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                    <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                    <td>{{audit.updatedBy}}</td>\r\n                                    <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                                </tr>\r\n                            </tbody>\r\n\r\n\r\n                        </table>\r\n                        <ng-template #noDatavailable>\r\n                            <div class="text-center">\r\n                                <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                                <h4 style="color: #ff5663;">No History Found </h4>\r\n                            </div>\r\n\r\n                        </ng-template>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n                <h4 class="modal-title">Help text about the page</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <p>Sample Point 1 about Page Description</p>\r\n                <p>Sample Point 2 about Page Description</p>\r\n                <p>Sample Point 3 about Page Description</p>\r\n                <p>Sample Point 4 about Page Description</p>\r\n                <p>Sample Point 5 about Page Description</p>\r\n                <hr />\r\n                <p>\r\n                    <b>\r\n                        Excell format to upload the Data -\r\n                        <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                    </b>\r\n                </p>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n'},rLIX:function(t,e,a){"use strict";a.r(e),e.default=""},rmx5:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Asset Disposal Type</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" \r\n                            matTooltip="Add Asset Disposal Type"\r\n                             matTooltipPosition="right"\r\n                               (click)="open(contentEdit)">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Asset Disposal Type</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="open(contentEdit)"\r\n                                  >\r\n                                  Add Asset Disposal Type\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n\r\n                        <div class="form-row col-row col-row1" *ngIf="this.updateMode">\r\n                            <div class="col-md-4 display-flex inline-block" style="margin-top: 25px;">\r\n                                <div>\r\n                                    <button type="button" id="btnUpdatedepriciationMethod" *ngIf="this.updateMode" (click)="updatedepriciationmethod()" name="" class="btn btn-success nobg btn-cstm" data-toggle="tooltip" data-original-title="Update"><i class="fa fa-edit"></i></button>\r\n                                    <button type="button" id="btnResetdepriciationMethod" *ngIf="this.updateMode" (click)="resetdepriciationmethod()" name="" class="btn btn-default nobg btn-cstm" data-toggle="tooltip" data-original-title="Reset"><i class="fa fa-edit"></i></button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                       \r\n                \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm"\r\n                         [value]="disposalTypeList" [metaKeySelection]="true" \r\n                         [totalRecords]="totalRecords" [rows]="pageSize" [paginator]="true" [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" (onPage)="changePage($event)" selectionMode="multiple"\r\n                                 [resizableColumns]="true" [reorderableColumns]="true" [scrollable]="true" scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="selectedData" optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left">\r\n                                    </p-multiSelect>\r\n\r\n                                </div>\r\n                                <div class="col">\r\n                                  \r\n                                      <div\r\n                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                      >\r\n                                        <div class="form-group">\r\n                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                          <div\r\n                                            class="pull-left"\r\n                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                          >\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>In-Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                        (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>All\r\n                                                    </label>\r\n                                                </div>\r\n                                                    <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                      <label style="width: auto !important;margin-top: 3px;">\r\n                                                        \x3c!--  --\x3e\r\n                                                        <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                         (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                          />\r\n                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                      Show  Deleted List \r\n                                                      </label>\r\n                                                    </div>\r\n                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="row">\r\n                                  <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button" style="padding: 5px 12px !important;" matTooltip="Download Data" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" style="padding: 5px 12px !important;" matTooltip="Download Selected Data" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" label="Export Selected Data" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" \r\n                                                (click)="sampleExcelDownload()"  style="padding: 5px 12px !important;" matTooltip="Download Sample File" matTooltipPosition="above"c>\r\n                                            Sample File Download\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:200px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openView(view,rowData)">\r\n                                    <td style="width:200px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" \r\n                                            (click)="openView(view,rowData)" \r\n                                            matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                       \r\n                                        <span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openEdit(contentEdit,rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                        (click)="openEdit(contentEdit,rowData)"\r\n                                         matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span>\r\n                                            <a class="btn nobg" \r\n                                            (click)="openDelete(content,rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete" \r\n                                        matTooltipPosition="above" (click)="openDelete(content,rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" data-target="#contentHist" data-toggle="modal" \r\n                                         (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view">\r\n                                           <a class="btn nobg" (click)="openView(view,rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="disposalTypeList && disposalTypeList.length == 0 || disposalTypeList && disposalTypeList.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label> \r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" />\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Disposal Type:\r\n            <span class="new-label">{{restorerecord.name}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<ng-template #view class="modal fade " id="view" role="dialog">\r\n\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n            <h4 class="modal-title"> Asset Disposal Type Details</h4>\r\n        </div>\r\n        <div class="modal-body viewform">\r\n            <div class="col-sm-12">\r\n                <p>\r\n                    <span class="label">\r\n                        <b> Asset Disposal Type: </b>\r\n                    </span>\r\n                    <span class="value">{{code}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b> Name: </b>\r\n                    </span>\r\n                    <span class="value">{{name}}</span>\r\n                </p>\r\n\r\n                <p>\r\n                    <span class="label">\r\n                        <b> Memo: </b>\r\n                    </span>\r\n                    <span class="value">{{memo}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Created By: </b>\r\n                    </span>\r\n                    <span class="value">{{createdBy}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Created Date: </b>\r\n                    </span>\r\n                    <span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Updated By: </b>\r\n                    </span>\r\n                    <span class="value">{{updatedBy}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label">\r\n                        <b>Updated Date: </b>\r\n                    </span>\r\n                    <span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n            </div>\r\n            <div class="clear"></div>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Asset Disposal Type Code:\r\n            <span class="new-label">{{code_Name}}</span>\r\n        </strong>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" (click)="deleteItemAndCloseModel()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #contentEdit let-c="close" class="editdisposaltype"  let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title" *ngIf="isEditMode">\r\n            \r\n             Disposal Type</h4>\r\n        <h4 class="modal-title" *ngIf="!isEditMode">Add Asset Disposal Type</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body editdisposaltype">\r\n        <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="SaveandEditDisposalType()">\r\n            <div class="form-group">\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label for="name" class="control-label">\r\n                            Asset Disposal Type\r\n                            <span class="clr-red">*</span>\r\n                        </label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <p-autoComplete [(ngModel)]="codeName" name="codeName" (onSelect)="partnmId($event)" \r\n                                        (onKeyUp)="eventHandler($event)" [suggestions]="localCollection" \r\n                                        (completeMethod)="filterDisposalType($event)" [size]="30"\r\n                                        (onBlur)="onBlurCheck($event, \'code\')"\r\n                                        [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                            <ng-template let-codeName pTemplate="item">\r\n                                <div class="ui-helper-clearfix">{{codeName}}</div>\r\n                            </ng-template>\r\n\r\n                        </p-autoComplete>\r\n                        <div *ngIf="recordExists && codeName" class="clr-red">Already Exists</div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label for="AssetDisposalName" class="control-label control-item">\r\n                            Name\r\n                            <span class="clr-red">*</span>\r\n                        </label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <input type="text" name="name" class="form-control" \r\n                               required #Name="ngModel" [(ngModel)]="sourceAction.name" minlength="2" \r\n                               (ngModelChange)="onBlurCheck($event,\'name\')"  >\r\n                        <div *ngIf="Name.dirty && Name.errors?.required && Name.errors" class="invalid-form-error-message">\r\n                            Asset Disposal Type Name required.\r\n                        </div>\r\n                        <div *ngIf="Name.dirty && Name.errors?.minlength && Name.errors" class="invalid-form-error-message">\r\n                            Asset Disposal Type Name must be at least 2 characters long.\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="col-sm-12">\r\n                    <div class="col-sm-4">\r\n                        <label for="AssetDisposalMemo" class="control-label">Memo</label>\r\n                    </div>\r\n                    <div class="col-sm-5">\r\n                        <textarea class="text-item" #memo="ngModel" (ngModelChange)="enableSave($event,\'memo\')" \r\n                                  id="memo" [ngModelOptions]="{standalone: true}" \r\n                                  [(ngModel)]="sourceAction.memo" \r\n                                  minlength="2"></textarea>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n            </div>\r\n            <div class="form-group">\r\n                <div class="col-sm-6">\r\n                    <div class="checkbox-cstm check-value">\r\n                        <label>\r\n                            <input type="checkbox" name="isActive" (ngModelChange)="enableSave($event, \'isActive\')" \r\n                                   #isActive="ngModel" class="form-check-input trigger2" checked id="isActive" \r\n                                   [(ngModel)]="sourceAction.isActive" [ngModelOptions]="{standalone: true}">\r\n                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                            Active\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button class="btn btn-primary" [disabled]="!userForm.valid || disableSave || recordExists" (click)="SaveandEditDisposalType()">{{isEditMode ? \'Update\' : \'Save\' }}</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Asset Disposal Type</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Asset Disposal Type</th>\r\n                                <th>Name</th>\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'assetDisposalCode\', audit.assetDisposalCode)  ? \'black\' : \'red\'  }">{{audit.assetDisposalCode}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'assetDisposalName\', audit.assetDisposalName)  ? \'black\' : \'red\'  }">{{audit.assetDisposalName}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'assetDisposalMemo\', audit.assetDisposalMemo)  ? \'black\' : \'red\'  }">{{audit.assetDisposalMemo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n\r\n'},rq7G:function(t,e,a){"use strict";a.r(e),e.default=""},ruAf:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n\t<div class="right_col" role="main">\r\n\t\t<div class="x_panel">\r\n\t\t\t<div class="x_content">\r\n\t\t\t\t<h4 class="page-heading clr-green">ATA Sub Chapter 2</h4>\r\n\r\n\t\t\t\t<span class="help-icon" (click)="openHelpText(helpText)" data-original-title="Help" data-toggle="tooltip"><i class="fa fa-info" data-toggle="modal" data-target="#help-popup"></i></span>\r\n\t\t\t\t<p-table #dt [value]="allATAMaininfo" [metaKeySelection]="true" [rows]="20" [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[20,50,100]" [columns]="selectedColumns" selectionMode="multiple" [(selection)]="selectedColumn" [resizableColumns]="true" [reorderableColumns]="true">\r\n\t\t\t\t\t<ng-template pTemplate="caption">\r\n\r\n\t\t\t\t\t\t<div style="text-align: right">\r\n\t\t\t\t\t\t\t<p-multiSelect [options]="cols" [(ngModel)]="selectedColumns" optionLabel="header"\r\n\t\t\t\t\t\t\t\t\t\t   selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n\r\n\t\t\t\t\t\t\t<div class="inner-addon right-addon w200 inline-block">\r\n\t\t\t\t\t\t\t\t<i class="fa fa-search"></i>\r\n\t\t\t\t\t\t\t\t<input type="text" pInputText size="50" class="form-control ui-autocomplete-input" (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder="Filter">\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<button type="button" pButton icon="fa-download" iconPos="left" label="ExportAll Data" (click)="dt.exportCSV()"></button>\r\n\t\t\t\t\t\t\t<button type="button" pButton icon="fa-download" iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n\t\t\t\t\t\t\t<a (click)="open(contentEdit)" matTooltip="Add" class="btn btn-success nobg"><span><i class="fa fa-plus"></i></span></a>\r\n\t\t\t\t\t\t\t<div class="excel-upload">\r\n\t\t\t\t\t\t\t\t<input type="file" name="upload[]" id="upload" class="uploaddoc upload-file" data-multiple-caption="{count} files selected" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet">\r\n\t\t\t\t\t\t\t\t<label for="upload">\r\n\t\t\t\t\t\t\t\t\t<span matTooltip="Upload Data (Excel)"><i class="fa fa-upload"></i></span>\r\n\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t</ng-template>\r\n\r\n\t\t\t\t\t<ng-template pTemplate="header" let-columns>\r\n\t\t\t\t\t\t<tr>\r\n\r\n\t\t\t\t\t\t\t<th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n\t\t\t\t\t\t\t\t{{col.header}}\r\n\t\t\t\t\t\t\t\t<p-sortIcon [field]="col.field"></p-sortIcon>\r\n\t\t\t\t\t\t\t</th>\r\n\r\n\t\t\t\t\t\t\t<th></th>\r\n\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</ng-template>\r\n\r\n\t\t\t\t\t<ng-template pTemplate="body" let-rowData let-columns="columns">\r\n\t\t\t\t\t\t<tr [pSelectableRow]="rowData">\r\n\r\n\r\n\t\t\t\t\t\t\t<td *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n\t\t\t\t\t\t\t\t{{col.field == \'createdDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\'):rowData[col.field] && col.field == \'updatedDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\'):rowData[col.field]}}\r\n\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t<span data-toggle="modal" data-target="#view"> <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" (click)="openView(view,rowData)" matTooltip="View"><i class="fa fa-eye"></i></a> </span>\r\n\t\t\t\t\t\t\t\t<button class="btn-edit" mat-icon-button (click)="openEdit(contentEdit,rowData)" matTooltip="edit">\r\n\t\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t<button class="btn-delete" mat-icon-button matTooltip="delete" (click)="openDelete(content,rowData)">\r\n\t\t\t\t\t\t\t\t\t<mat-icon color="warn">delete</mat-icon>\r\n\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t<button class="btn-history" mat-icon-button matTooltip="history" (click)="openHist(contentHist,rowData)">\r\n\t\t\t\t\t\t\t\t\t<mat-icon color="green">history</mat-icon>\r\n\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</ng-template>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t</p-table>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n\x3c!-- Delete Contact Modal --\x3e\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n\t<div class="modal-header">\r\n\t\t<h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\r\n\t<div class="modal-footer">\r\n\t\t<button type="button" class="btn btn-success" (click)="deleteItemAndCloseModel()">Yes</button>\r\n\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n\t</div>\r\n</ng-template>\r\n\r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n\t<div class="modal-header">\r\n\t\t<h4 class="modal-title" *ngIf="isEditMode">Edit ATA Sub Chapter2</h4>\r\n\t\t<h4 class="modal-title" *ngIf="!isEditMode">Add ATA Sub Chapter2</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\t<div class="modal-body">\r\n\t\t<form #userForm="ngForm" class="form-horizontal" (ngSubmit)="editItemAndCloseModel()">\r\n\r\n\t\t\t<div class="form-group">\r\n\r\n\t\t\t\t<label class="control-label col-sm-4">ATA Chapter </label>\r\n\t\t\t\t<div class="inner-addon right-addon autosuggesions-add inline-block">\r\n\t\t\t\t\t<select [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceAction.ataMainId">\r\n\t\t\t\t\t\t<option *ngFor="let ataName of allATAMaininfo1" [ngValue]="ataName.ataMainId">{{ataName.ataChapterName}}</option>\r\n\t\t\t\t\t</select>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class="form-group">\r\n\t\t\t\t<label for="ataChapterCategory" class="control-label">ATA SubChapter2<span class="clr-red">*</span></label>\r\n\t\t\t\t<div class="control-data">\r\n\t\t\t\t\t<input type="text" name="ataChapterCategory" placeholder="" class="form-control" required #ataChapterCategory="ngModel" [(ngModel)]="sourceAction.ataSubChapter2Id" minlength="2" [minLength]="2">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="clear"></div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class="form-group">\r\n\t\t\t\t<label for="description" class="control-label">Memo</label>\r\n\t\t\t\t<div class="control-data">\r\n\t\t\t\t\t<input placeholder="Memo" name="description" #memo="ngModel" id="memo" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceAction.memo" required minlength="2">\r\n\t\t\t\t\t<div *ngIf="memo.dirty && memo.errors?.required && memo.errors" class="invalid-form-error-message">\r\n\t\t\t\t\t\tMemo is required.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf="memo.dirty && memo.errors?.minlength && memo.errors" class="invalid-form-error-message">\r\n\t\t\t\t\t\tMemo must be at least 2 characters long.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="clear"></div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class="form-group">\r\n\t\t\t\t<div class="col-sm-6">\r\n\t\t\t\t\t<label class="form-check-label" for="isActive">\r\n\t\t\t\t\t\t<input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input" checked id="isActive" [(ngModel)]="sourceAction.isActive"> Active\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="clear"></div>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div class="modal-footer">\r\n\r\n\t\t\t\t<button class="btn btn-success" [disabled]="disableSave">Submit</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n\r\n\r\n</ng-template>\r\n\r\n\r\n<ng-template #contentHist let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n\t<div class="modal-header">\r\n\r\n\t\t<h4 class="modal-title">History of ATASubChapter2</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\r\n\r\n\t</div>\r\n\t<div class="modal-body">\r\n\r\n\t\t<div class="table-responsive">\r\n\t\t\t<table class="table table-bordered">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th>AID</th>\r\n\t\t\t\t\t\t<th>ATA Main Description</th>\r\n\t\t\t\t\t\t<th>Previous Value</th>\r\n\t\t\t\t\t\t<th>New Value</th>\r\n\t\t\t\t\t\t<th>Last Updated By</th>\r\n\t\t\t\t\t\t<th>Last Updated Time</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tr *ngFor="let audit of auditHisory">\r\n\t\t\t\t\t<td>{{audit.auditHistoryId}}</td>\r\n\t\t\t\t\t<td>{{audit.columnName}}</td>\r\n\t\t\t\t\t<td>{{audit.previousValue}}</td>\r\n\t\t\t\t\t<td>{{audit.newValue}}</td>\r\n\t\t\t\t\t<td>{{audit.updatedBy}}</td>\r\n\t\t\t\t\t<td>{{audit.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t</table>\r\n\t\t</div>\r\n\t</div>\r\n\t<div class="modal-footer">\r\n\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n\t</div>\r\n</ng-template>\r\n\r\n<ng-template #view class="modal fade " id="view" role="dialog" data-backdrop="static">\r\n\r\n\t<div class="modal-content">\r\n\t\t<div class="modal-header">\r\n\t\t\t<button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\t\t\t<h4 class="modal-title">ATA Sub Chapter2</h4>\r\n\t\t</div>\r\n\t\t<div class="modal-body viewform">\r\n\t\t\t<div class="col-sm-6">\r\n\t\t\t\t\x3c!--<p><span class="label"><b>ATAChapter Name: </b></span><span class="value">{{ ataChapter_Name}}</span></p>\r\n\t\t\t\t<p><span class="label"><b>ATAChapter Category: </b></span><span class="value">{{ ataChapterCategory}}</span></p>--\x3e\r\n\t\t\t\t<p><span class="label"><b>Memo: </b></span><span class="value">{{memo}}</span></p>\r\n\t\t\t\t<p><span class="label"><b>Created By: </b></span><span class="value">{{createdBy}}</span></p>\r\n\t\t\t\t<p><span class="label"><b>Created Date: </b></span><span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span></p>\r\n\t\t\t\t<p><span class="label"><b>Updated By: </b></span><span class="value">{{updatedBy}}</span></p>\r\n\t\t\t\t<p><span class="label"><b>Updated Date: </b></span><span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span></p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class="clear"></div>\r\n\t\t</div>\r\n\t\t<div class="modal-footer">\r\n\t\t\t<button type="button" class="btn btn-info" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog" data-backdrop="static">\r\n\r\n\t<div class="modal-content">\r\n\t\t<div class="modal-header">\r\n\t\t\t<button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\t\t\t<h4 class="modal-title">Help text about the page</h4>\r\n\t\t</div>\r\n\t\t<div class="modal-body">\r\n\t\t\t<p>Sample Point 1 about Page Description</p>\r\n\t\t\t<p>Sample Point 2 about Page Description</p>\r\n\t\t\t<p>Sample Point 3 about Page Description</p>\r\n\t\t\t<p>Sample Point 4 about Page Description</p>\r\n\t\t\t<p>Sample Point 5 about Page Description</p>\r\n\t\t\t<hr />\r\n\t\t\t<p><b>Excell format to upload the Data - <a href="documents/action-table-format.xlsx" class="clr-red">Download</a></b></p>\r\n\t\t</div>\r\n\t\t<div class="modal-footer">\r\n\t\t\t<button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</ng-template>\r\n\r\n'},s1W1:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Tax Type</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltipPosition="above" \r\n                             matTooltip="Add Tax Type" tooltipPosition="right"\r\n                               data-target="#add" data-toggle="modal">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Tax Type</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal"\r\n                                  >\r\n                                  Add Tax Type\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <p-table #dt \r\n                        class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" \r\n                        [first]="0" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true" [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple"   \r\n                        [metaKeySelection]="true" \r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [scrollable]="true" \r\n                        [totalRecords]="totalRecords" \r\n                        scrollHeight="450px" >\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect  [maxSelectedLabels]="2" [options]="headers"  optionLabel="header" [(ngModel)]="selectedColumns"  \r\n                                        [style]="{minWidth: \'200px\'}"  style="float:left" (onChange)="columnsChanges()"  >\r\n                                    </p-multiSelect>\r\n                                </div>\r\n                                <div class="col">\r\n                                  \r\n                                      <div\r\n                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                      >\r\n                                        <div class="form-group">\r\n                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                          <div\r\n                                            class="pull-left"\r\n                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                          >\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>In-Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                        (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>All\r\n                                                    </label>\r\n                                                </div>\r\n                                                    <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                      <label style="width: auto !important;margin-top: 3px;">\r\n                                                        \x3c!--  --\x3e\r\n                                                        <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                         (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                          />\r\n                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                      Show  Deleted List \r\n                                                      </label>\r\n                                                    </div>\r\n                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="row">\r\n                                  <div class="col">\r\n                                     <button type="button" class="btn btn-primary"  style="padding: 5px 12px !important;" matTooltip="Download All Data" matTooltipPosition="above"   pButton icon="fa-download"\r\n                                        iconPos="left" label="Export Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary"  style="padding: 5px 12px !important;" matTooltip="Download Selected" matTooltipPosition="above"   pButton icon="fa-download"\r\n                                        iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button> \r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        \r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)"   class="uploaddoc upload-file" \r\n                                        accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above"  >\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()" matTooltipPosition="above" matTooltip="Download Sample File"   >Sample File Download</button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n                            </ng-template>\r\n                         \r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th  style="width:120px" *ngFor="let col of columns"  pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th  style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template  pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex" >\r\n                                <tr    [pSelectableRow]="rowData" pReorderableRowHandle  >\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal" data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" matTooltip="View" matTooltipPosition="above" data-toggle="tooltip" (click)="viewSelectedRow(rowData)" data-target="#view" data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                       \r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                         data-target="#add" \r\n                                        data-toggle="modal" matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span  data-target="#delete" data-toggle="modal" >\r\n                                            <a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button \r\n                                        matTooltip="Delete" matTooltipPosition="above"\r\n                                         data-target="#delete" data-toggle="modal" \r\n                                         (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="showHistory(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" data-target="#contentHist" data-toggle="modal"\r\n                                          (click)="showHistory(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <div style="text-align: right;">\r\n                                    <label id="footer" class="footer1">Total:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp; \r\n                                    <label id="footer" class="footer1">Pages Count:</label>\r\n                                    <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" /> \r\n                                </div>\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Tax Type:\r\n            <span class="new-label">{{restorerecord.description}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<div  *ngIf="selectedRowforDelete" #delete id="delete"  class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n          <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n          <strong>Tax Type:\r\n            <span class="new-label">{{selectedRowforDelete.description}}</span>\r\n        </strong>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n        </div>\r\n      </div>\r\n  \r\n    </div>\r\n  </div>\r\n\r\n  <div #add  id="add"class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n  \r\n      \x3c!-- Modal content--\x3e\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n          <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Tax Type   </h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <form #create="ngForm" >\r\n                <div class="form-group">\r\n\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-4">\r\n                            <label for="description" class="control-label">Tax Type\r\n                                <span class="clr-red">*</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                                <p-autoComplete field="description" [(ngModel)]="addNew.description" (onSelect)="selectedTaxType($event)" \r\n                                                (onKeyUp)="checkTaxTypeExists(\'description\', $event.target.value)" \r\n                                                name="description"\r\n                                                (onBlur)="onBlur($event)"\r\n                                [suggestions]="taxTypeList" (completeMethod)="filterTaxType($event)" [size]="30" [minLength]="1"\r\n                                [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n           \r\n                            </p-autoComplete>\r\n                            <div *ngIf="disableSaveTaxtypeMsg" class="clr-red">Already Exists</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="col-sm-12">\r\n                        <div class="col-sm-4">\r\n                            <label for="description" class="control-label">Memo</label>\r\n                        </div>\r\n                        <div class="col-sm-5">\r\n                            <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription" [(ngModel)]="addNew.memo" minlength="2" (ngModelChange)="getChange()"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="col-sm-6">\r\n                        <div class="checkbox-cstm">\r\n                            <label>\r\n                                <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive" (ngModelChange)="getChange()">\r\n                                <span class="cr">\r\n                                    <i class="cr-icon pi pi-check"></i>\r\n                                </span>\r\n                                Active\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n           </form>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button class="btn btn-primary"  data-dismiss="modal" [disabled]="create.invalid || disableSaveTaxtype" (click)="save();"> {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n            <button type="button" class="btn btn-danger"  data-dismiss="modal" (click)="resetForm()">Close</button>\r\n    \r\n        </div>\r\n      </div>\r\n  \r\n    </div>\r\n  </div>\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n                            <div class="modal-dialog modal-xl">\r\n                          \r\n                             \r\n                              <div class="modal-content">\r\n                                <div class="modal-header">\r\n                                  <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                                  <h4 class="modal-title">Duplicate Records</h4>\r\n                                </div>\r\n                                <div class="modal-body">\r\n                                    <div class="table-responsive rro-table-cstm">\r\n                                        <table class="table table-bordered"  >\r\n                                            <thead>\r\n                                                <tr>\r\n                                  \r\n                                     \r\n                                                    <th>Tax Type</th>\r\n                                             \r\n                                                    <th>Memo</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody *ngIf="existingRecordsResponse.length> 0" >\r\n                                                    <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n                                      \r\n                                                            \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                                            <td >{{ext.itemGroupCode}}</td>\r\n                                                            <td>{{ext.description}}</td>\r\n                                                    \r\n                                                            <td >{{ext.memo}}</td>\r\n                                                        </tr>\r\n                                            </tbody>\r\n                                            \r\n\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="modal-footer">\r\n                                  <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                                </div>\r\n                              </div>\r\n                          \r\n                            </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n                            <div class="modal-dialog modal-xl">\r\n                          \r\n                              \x3c!-- Modal content--\x3e\r\n                              <div class="modal-content">\r\n                                <div class="modal-header">\r\n                                  <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                                  <h4 class="modal-title">History of Tax Type</h4>\r\n                                </div>\r\n                                <div class="modal-body">\r\n                                    <div class="table-responsive rro-table-cstm">\r\n                                        <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable" >\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    \x3c!-- <th>UMID</th> --\x3e\r\n                                                    <th>Tax Type</th>\r\n                                                    <th>Memo</th>\r\n                                                    <th>Is Active</th>\r\n                                                    <th>Updated By</th>\r\n                                                    <th>Updated Time</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody *ngIf="auditHistory.length> 0" >\r\n                                                    <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                                        \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e          \r\n                                                            <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n                                                             <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>                                                        \r\n                                                             <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                                            <td >{{audit.updatedBy}}</td>\r\n                                                            <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                                                        </tr>\r\n                                            </tbody>\r\n                                            \r\n\r\n                                        </table>\r\n                                        <ng-template #noDatavailable>\r\n                                            <div class="text-center"> \r\n                                                    <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                                                    <h4 style="color: #ff5663;">No History Found </h4>\r\n                                            </div>\r\n\r\n                                        </ng-template>  \r\n                                    </div>\r\n                                </div>\r\n                                <div class="modal-footer">\r\n                                  <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                                </div>\r\n                              </div>\r\n                          \r\n                            </div>\r\n                          </div>\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n<div class="modal-dialog modal-sm">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n            <h4 class="modal-title">Tax Type Details</h4>\r\n        </div>\r\n        <div class="modal-body viewform ">\r\n            <div class="col-sm-12">\r\n                <p>\r\n                    <span class="label " >\r\n                        <b >Tax Type: </b>\r\n                    </span>\r\n                    <span class="value">{{ viewRowData.description}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b >Memo: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.memo}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b >Is Active</b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b >Created By: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.createdBy }}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b >Created Date: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b >Updated By: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.updatedBy}}</span>\r\n                </p>\r\n                <p>\r\n                    <span class="label ">\r\n                        <b >Updated Date: </b>\r\n                    </span>\r\n                    <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                </p>\r\n            </div>\r\n            <div class="clear"></div>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n        </div>\r\n    </div>\r\n\r\n</div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n            \r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n            \r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},sbbx:function(t,e,a){"use strict";a.r(e),e.default="th {\n  text-align: center;\n}"},sfjE:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                <div class="card">\r\n                    \x3c!-- <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Stage Code</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" matTooltipPosition="above"\r\n                             matTooltip="Add Stage Code" tooltipPosition="right"\r\n                            (click)="resetForm()" data-target="#add" data-toggle="modal">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Stage Code</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="resetForm()" data-target="#add" data-toggle="modal"\r\n                                  >\r\n                                  Add Stage Code\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="originalData" \r\n                        [first]="0" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true" \r\n                        [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple" \r\n                        [metaKeySelection]="true"\r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [scrollable]="true" \r\n                        [totalRecords]="totalRecords" \r\n                        scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="headers" optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left" (onChange)="columnsChanges()">\r\n                                                </p-multiSelect>\r\n                                   \r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  \r\n                                                      <div\r\n                                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                                      >\r\n                                                        <div class="form-group">\r\n                                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                          <div\r\n                                                            class="pull-left"\r\n                                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                                          >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                    \x3c!--  --\x3e\r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                                                   <button type="button" class="btn btn-primary new-table-button" matTooltipPosition="above" matTooltip="Download All Data"   pButton icon="fa-download"\r\n                                            iconPos="left" label="Export All Data"  style="padding: 5px 12px !important;" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" matTooltipPosition="above" matTooltip="Download Selected"   pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Selection Only" style="padding: 5px 12px !important" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload()" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" (click)="sampleExcelDownload()"  style="padding: 5px 12px !important;"  matTooltipPosition="above" matTooltip="Download Sample File"   >Sample File Download</button>\r\n                                    </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                                    <colgroup>\r\n                                        <col *ngFor="let col of columns" style="width:130px">\r\n                                    </colgroup>\r\n                                </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr> \r\n                                        <ng-container *ngFor="let col of columns">\r\n                                                <th class="text-center" *ngIf="col.field!=\'levelCode1\' && col.field!=\'levelCode2\' && col.field!=\'levelCode3\' && col.field!=\'levelCode4\'"  pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                                        {{col.header}}\r\n                                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                                </th>\r\n                                                <th class="text-center" *ngIf="col.field==\'levelCode1\'"  colspan="4"  pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                                   Management Structure\r\n                                                </th>\r\n                                            </ng-container>\r\n                                    \x3c!-- <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th> --\x3e\r\n                                    <th style="width:140px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th> \r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:140px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle\r\n                                     data-toggle="modal" data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                      <span *ngIf="col.field !=\'stage\'">\r\n                                        {{\r\n                                            col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                            (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                            }}\r\n                                      </span>\r\n                                      <span *ngIf="col.field ==\'stage\'"> {{rowData[\'code\']}}-{{rowData[col.field]}}</span>\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:140px;" *ngIf="selectedColumns.length> 0">\r\n                                       \r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']"\r\n                                                       name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)" matTooltipPosition="above"\r\n                                                       [matTooltip]="rowData[\'isActive\'] ? \'Active\' : \'Inactive\' ">\r\n                                        </p-inputSwitch>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" (click)="viewSelectedRow(rowData)" data-target="#view" data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span> --\x3e\r\n                                        \r\n                                        <span  data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="edit(rowData)" \r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">\r\n                      \r\n                                            </i></a> </span>\r\n                                        \r\n                                        \r\n                                        \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                         data-target="#add"\r\n                                         data-toggle="modal" matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button\r\n                                         matTooltip="Delete" matTooltipPosition="above" \r\n                                         data-target="#delete" data-toggle="modal"\r\n                                          (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="showHistory(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" data-target="#contentHist" data-toggle="modal"\r\n                                          (click)="showHistory(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n\t\t\t\t\t\t\t\t\t\t *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td [attr.colspan]="10" class="no-records-cstm">\r\n\t\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <div style="text-align: right;">\r\n                                    <label id="footer" class="footer1">Total:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                    <label id="footer" class="footer1">Pages Count:</label>\r\n                                    <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                                </div>\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\x3c!-- <ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template> --\x3e\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Stage Code:\r\n            <span class="new-label">{{restorerecord.stage}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                    Stage Code\r\n                    <span class="new-label">{{selectedRowforDelete.stage}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Stage Code and Status</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                           \r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Stage Code</th>\r\n                                <th>Satge Name</th>\r\n                                <th>Management Structure</th>\r\n                               \r\n                                <th>Sequence</th>\r\n                                <th>Status</th>\r\n                                <th>Description</th>\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'stageCode\', audit.workPerformedCode)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.workPerformedCode}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.description}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.memo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'workPerformedCode\', audit.workPerformedCode)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.workPerformedCode}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.description}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.memo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Stage Code  </h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">\r\n                                    Management Structure\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <p-dropdown placeholder="Select Legal Entity"\r\n                            name="company"\r\n                            #wocompanyId="ngModel"\r\n                            required\r\n                            [options]="legalEntityList"\r\n                            class="p-dropdown-custom-stagecode" (ngModelChange)="getmemo()"\r\n                            (onChange)="selectedLegalEntity($event.value)"\r\n                            [(ngModel)]="managementStructure.companyId">\r\n                            </p-dropdown>\r\n                            \r\n                            \r\n                        </div>\r\n\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n      \r\n                            </div>\r\n                            <p-dropdown placeholder="Select "\r\n                            name="bu"\r\n                            #wobu="ngModel" (ngModelChange)="getmemo()"\r\n                            [options]="businessUnitList"\r\n                            class="p-dropdown-custom-stagecode"\r\n                            (onChange)="selectedBusinessUnit($event.value)"\r\n                            [(ngModel)]="managementStructure.buId">\r\n                             </p-dropdown>\r\n                            \r\n                            \r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n      \r\n                            </div>\r\n                            <p-dropdown placeholder="Select "\r\n                            name="division"\r\n                            #wodivision="ngModel" (ngModelChange)="getmemo()"\r\n                            [options]="divisionList"\r\n                            class="p-dropdown-custom-stagecode"\r\n                            (onChange)="selectedDivision($event.value)"\r\n                            [(ngModel)]="managementStructure.divisionId">\r\n                            </p-dropdown>\r\n                            \r\n                            \r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n      \r\n                            </div>\r\n                            <p-dropdown placeholder="Select "\r\n                            name="department"\r\n                            #wodepartment="ngModel" (ngModelChange)="getmemo()"\r\n                            [options]="departmentList"\r\n                            class="p-dropdown-custom-stagecode"\r\n                            (onChange)="selectedDepartment($event.value)"\r\n                            [(ngModel)]="managementStructure.departmentId">\r\n                            </p-dropdown>\r\n                            \r\n                            \r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">\r\n                                    Stage Code\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <input type="text" name="code" (ngModelChange)="getmemo()" class="form-control" #code="ngModel" [(ngModel)]="addNew.code" required (input)="checkStageCodeExistOrNot($event.target.value)">\r\n                                <div *ngIf="disableSaveForCode" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">\r\n                                   Stage Name  <span class="clr-red">*</span>\r\n                                \r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <input type="text" name="stageDescription" (ngModelChange)="getmemo()" class="form-control" #stageDescription="ngModel" [(ngModel)]="addNew.stage" required>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">\r\n                                 Sequence\r\n                                 <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <input type="number" name="sequence" (ngModelChange)="getmemo()" class="form-control" #sequence="ngModel" [(ngModel)]="addNew.sequence" required (input)="checkSequenceExistOrNot($event.target.valueAsNumber)">\r\n                                <div *ngIf="disableSaveForSequence" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">\r\n                                   Status\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <p-dropdown [options]="workOrderStatusList" name="workOrderStatus" #workOrderStatus="ngModel" placeholder="Select Status" \r\n                            class="p-dropdown-custom-stagecode" (ngModelChange)="getmemo()"\r\n                            [(ngModel)]="addNew.statusId" required>\r\n                            </p-dropdown>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Description</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" (ngModelChange)="getmemo()" #description="ngModel" name="description" \r\n                                          [(ngModel)]="addNew.description" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" name="memo" (ngModelChange)="getmemo()"\r\n                                          [(ngModel)]="addNew.memo" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" [disabled]="create.invalid || disableSaveForCode || disableSaveForSequence || disableSaveForEdit" (click)="save();"> {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n'},"tna+":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                <div class="card">\r\n                    <div class="card-body">\r\n                        \x3c!--header--\x3e\r\n                        <div class="inline-block display-flex">\r\n                            \x3c!--Set Title--\x3e\r\n                            <h3 class="po-head lead">{{header}}</h3>\r\n                            &nbsp;&nbsp;\r\n                            \x3c!--Step x: Customize the data-target--\x3e\r\n                            <a class="plusicon-cstm new-margin" matTooltip="Add {{rowName}}" matTooltipPosition="above" data-target="#editItem" data-toggle="modal" (click)="addNewItem()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div>\r\n                        <div class="form-row status-radio">\r\n                            <div class="col-md-8">\r\n                                <div class="form-group">\r\n                                    <label class="radiobtn-label">Status:</label>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                            <span class="checkmark"></span>Active\r\n                                        </label>\r\n                                    </div>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                            <span class="checkmark"></span>In-Active\r\n                                        </label>\r\n                                    </div>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                            <span class="checkmark"></span>All\r\n                                        </label>\r\n                                    </div>\r\n                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                          <label style="width: auto !important;margin-top: 3px;">\r\n                                            \x3c!--  --\x3e\r\n                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                             (click)="getDeleteListByStatus($event.target.checked)"\r\n                                              />\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                          Show  Deleted List \r\n                                          </label>\r\n                                        </div>\r\n                \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                \r\n                        \x3c!--Step x: Add/update table taking grid data (itemList) and selected columns --\x3e\r\n                        \x3c!--(onLazyLoad)="changePage($event)"--\x3e\r\n                        <p-table #dt\r\n                                 class="rpo-table-cstm rro-table-cstm"\r\n                                 [value]="itemList"\r\n                                 [first]="pageIndex"\r\n                                 [rows]="pageSize"\r\n                                 [paginator]="true"\r\n                                 [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]"\r\n                                 [columns]="selectedColumns"\r\n                                 selectionMode="multiple"\r\n                                 [resizableColumns]="true"\r\n                                 [reorderableColumns]="true"\r\n                                 [scrollable]="true"\r\n                                 [totalRecords]="totalRecords"\r\n                                 scrollHeight="450px">\r\n                            \x3c!--caption--\x3e\r\n                            <ng-template pTemplate="caption">\r\n                                <div style="text-align: right; margin-left: -6px !important;">\r\n                                    <p-multiSelect [maxSelectedLabels]="2"\r\n                                                   [options]="columnHeaders"\r\n                                                   optionLabel="header"\r\n                                                   [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                                   selectedItemsLabel="{0} columns selected"\r\n                                                   defaultLabel="Choose Columns">\r\n                                    </p-multiSelect>\r\n                                    <button type="button" class="btn btn-primary" matTooltip="Download Data" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left"  style="padding: 5px 12px !important;" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary" matTooltip="Download Selected Data" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left"  style="padding: 5px 12px !important;" label="Export Selected Data" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()" matTooltip="Download Sample File" matTooltipPosition="above" >Sample File Download</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </ng-template>\r\n                            \x3c!--header with search--\x3e\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position: sticky" *ngIf="selectedColumns.length> 0">Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position: sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            \x3c!--body--\x3e\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="viewItemDetailsClick(viewClick, rowData)">\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']"\r\n                                                       name="isActive{{rowIndex}}" (onChange)="toggleActiveStatus(rowData)"\r\n                                                       [matTooltip]="rowData[\'isActive\'] ? \'Active\' : \'Inactive\' " matTooltipPosition="above">\r\n                                        </p-inputSwitch>\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" (click)="viewItemDetails(rowData)"\r\n                                             data-target="#view" data-toggle="modal" matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \x3c!--Step x: update the on-click event--\x3e\r\n                                       \r\n                                        <span data-target="#editItem" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="showItemEdit(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button \r\n                                        (click)="showItemEdit(rowData)" matTooltip="Edit" \r\n                                        matTooltipPosition="above" data-target="#editItem" data-toggle="modal">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="confirmItemDelete(rowData)" \r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete" \r\n                                        matTooltipPosition="above" (click)="confirmItemDelete(rowData)" \r\n                                        data-target="#delete" data-toggle="modal">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n                                        <span data-target="#itemHistory" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="showHistory(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button\r\n                                         matTooltip="History" matTooltipPosition="above"\r\n                                          (click)="showHistory(rowData)" data-target="#itemHistory" data-toggle="modal">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="itemList && itemList.length == 0 || itemList && itemList.length ==null">\r\n                   <tr>\r\n                       <td [attr.colspan]="7" class="no-records-cstm">\r\n                           No records found\r\n                       </td>\r\n                   </tr>\r\n               </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \x3c!--to-do:use same modal to view, add, update, and delete--\x3e\r\n    \x3c!--Modal for view only--\x3e\r\n\r\n    <ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n      \r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n           \r\n        </div>\r\n        <div class="modal-body">\r\n            <strong>\r\n                Asset Attribute:\r\n                <span class="new-label">{{restorerecord.assetAttributeTypeName}}</span>\r\n            </strong>\r\n        </div>\r\n      \r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n      </ng-template> \r\n\r\n    <div #view *ngIf="itemDetails" class="modal fade" id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-sm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">\xd7</button>\r\n                    <h4 class="modal-title">{{rowName}} Details</h4>\r\n                </div>\r\n                <div class="modal-body viewform">\r\n                    <div class="col-sm-12">\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Legal Entity: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.selectedCompanyNames}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Asset Class: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.assetTypeName}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Name: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.assetAttributeTypeName}}</span>\r\n                        </p>\r\n\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Description: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.description}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Convention Type: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.conventionTypeName}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Depreciation Method: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.depreciationMethodName}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Residual Percentage: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.residualPercentage}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Asset Life: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.assetLife}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Depreciation Frequency: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.depreciationFrequencyName}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Acquired GL Account: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.acquiredGLAccountName}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Accum Depr Expense GL Account: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.deprExpenseGLAccountName}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Accum Depr GL Account: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.adDepsGLAccountName}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Asset Sale: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.assetSaleName}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Asset WriteOff: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.assetWriteOffName}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Asset WriteDown: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.assetWriteDownName}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Active: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.isActive ? \'true\' : \'false\'}}</span>\r\n                        </p>\r\n                      \r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Created By: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.createdBy}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Created Date: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Last Updated By: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.updatedBy}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Last Updated Date: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" >Close</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    \x3c!--Step x: Modal for Edit--\x3e\r\n    <div #editItem id="editItem" class="modal fade assetattributetype" role="dialog" *ngIf="currentModeOfOperation === 2 || currentModeOfOperation === 3" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">{{currentModeOfOperation === 3 ? "Edit" : "Add"}} {{rowName}} </h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <form #AssetType="ngForm">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-5">\r\n                                <label for="managementStructure" class="control-label">Legal Entity <span class="clr-red">*</span></label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <div style="margin: 2px 0">\r\n                                    <p-multiSelect [options]="companyListData" class="asset-mselect"\r\n                                                   [ngModelOptions]="{standalone: true}"\r\n                                                   [(ngModel)]="selectedCompanyID" [panelStyle]="{minWidth:\'12em\'}"\r\n                                                   (onChange)="companySelected()">\r\n                                    </p-multiSelect>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="form-group">\r\n                           \r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="assetTypeId" class="control-label">\r\n                                        Asset Class\r\n                                        <span class="clr-red">*</span>\r\n                                    </label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    \x3c!-- \r\n                                    <p-autoComplete field="assetTypeName" [(ngModel)]="currentRow.assetTypeId" name="assetTypeId"\r\n                                                    [suggestions]="filteredAssetTypeList" (completeMethod)="filterAssetType($event)"\r\n                                                    [forceSelection]="true" [size]="30" [minLength]="1" (onSelect)="selectedAssetType($event)"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" [required]="true">\r\n                                    </p-autoComplete> \r\n                                    --\x3e\r\n                                    <select name="assetTypeId" [(ngModel)]="currentRow.assetTypeId" (ngModelChange)="selectedAssetType($event)" required>\r\n                                        <option *ngFor="let allAssetType of allAssetTypes" [ngValue]="allAssetType">{{allAssetType.assetTypeName}}</option>\r\n                                    </select>\r\n                                    <div *ngIf="recordExists && currentRow.assetTypeId" class="clr-red">Already Exists</div>\r\n                                    <div class="clear"></div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="description" class="control-label">Description</label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <textarea class="text-item" #memo="ngModel" id="description" name="description"\r\n                                              [(ngModel)]="currentRow.description" minlength="2" (onChange)="check"></textarea>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="assetAttributeTypeName" class="control-label">Name <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <input type="text" name="assetAttributeTypeName" class="form-control"\r\n                                           [(ngModel)]="currentRow.assetAttributeTypeName" required>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="conventionType" class="control-label">Convention Type <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <select name="conventionType" [(ngModel)]="currentRow.conventionType" required>\r\n                                        <option *ngFor="let convType of conventionTypeList" [ngValue]="convType">{{convType.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="depreciationMethod" class="control-label">Depreciation Method <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    \x3c!-- <p-autoComplete field="name" [(ngModel)]="currentRow.depreciationMethod" name="depreciationMethod"\r\n                                                    [suggestions]="filteredDepriciationMethod" (completeMethod)="filterDepriciationMethod($event)"\r\n                                                    [forceSelection]="true" [size]="30" [minLength]="1"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                    </p-autoComplete> --\x3e\r\n                                    <select name="depreciationMethod" [(ngModel)]="currentRow.depreciationMethod" required>\r\n                                        <option *ngFor="let depMethod of depriciationMethodList" [ngValue]="depMethod">{{depMethod.name}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="residualPercentage" class="control-label">Residual Percentage </label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <select name="residualPercentage" [(ngModel)]="currentRow.residualPercentage">\r\n                                        <option value="">Select Percentage</option>\r\n                                        <option *ngFor="let Percentlist of percentageList" [ngValue]="Percentlist.value">{{Percentlist.value}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            \x3c!--\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="residualValue" class="control-label">Residual Value <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <input type="text" name="residualValue" class="form-control"\r\n                                           [(ngModel)]="currentRow.residualValue" min="1" required>\r\n                                </div>\r\n                            </div> --\x3e\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="assetLife" class="control-label">Asset Life <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <input type="text" name="assetLife" class="form-control"\r\n                                           [(ngModel)]="currentRow.assetLife" min="1" required>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="depreciationFrequencyId" class="control-label">Depreciation Frequency <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <select name="depreciationFrequencyId" [(ngModel)]="currentRow.depreciationFrequencyId" required>\r\n                                        <option *ngFor="let freq of depreciationFreq" [ngValue]="freq">{{freq.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="acquiredGLAccountId" class="control-label">Acquired GL Account <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <p-autoComplete field="accountCode" [(ngModel)]="currentRow.acquiredGLAccountId" \r\n                                                    name="acquiredGLAccountId"\r\n                                                    [suggestions]="filteredGLAccountList" \r\n                                                    (completeMethod)="filterGLAccount($event)"\r\n                                                    [forceSelection]="true" [size]="30" [minLength]="1"\r\n                                                    (ngModelChange)="onChangeSelectField($event, \'acquiredGLAccountId\')"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="deprExpenseGLAccountId" class="control-label">Accum Depr GL Account <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <p-autoComplete field="accountCode" [(ngModel)]="currentRow.deprExpenseGLAccountId" name="deprExpenseGLAccountId"\r\n                                                    [suggestions]="filteredGLAccountList" (completeMethod)="filterGLAccount($event)" [forceSelection]="true" [size]="30" [minLength]="1"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="adDepsGLAccountId" class="control-label">Accum Depr GL Account <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <p-autoComplete field="accountCode" [(ngModel)]="currentRow.adDepsGLAccountId" name="adDepsGLAccountId"\r\n                                                    [suggestions]="filteredGLAccountList" (completeMethod)="filterGLAccount($event)" [forceSelection]="true" [size]="30" [minLength]="1"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="assetSale" class="control-label">Asset Sale  GL Account<span class="clr-red"> *</span></label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <p-autoComplete field="accountCode" [(ngModel)]="currentRow.assetSale" name="assetSale"\r\n                                                    [suggestions]="filteredAssetSaleList" (completeMethod)="filterAssetSale($event)"\r\n                                                    [forceSelection]="true" [size]="30" [minLength]="1"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="assetWriteOff" class="control-label">Asset Write Off  GL Account<span class="clr-red"> *</span></label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <p-autoComplete field="accountCode" [(ngModel)]="currentRow.assetWriteOff" name="assetWriteOff"\r\n                                                    [suggestions]="filteredWriteOffList" (completeMethod)="filterAssetWriteOff($event)"\r\n                                                    [forceSelection]="true" [size]="30" [minLength]="1"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-5">\r\n                                    <label for="assetWriteDown" class="control-label">Asset Write Down  GL Account<span class="clr-red"> *</span></label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <p-autoComplete field="accountCode" [(ngModel)]="currentRow.assetWriteDown" name="assetWriteDown"\r\n                                                    [suggestions]="filteredAssetWriteDownList" (completeMethod)="filterAssetWriteDown($event)"\r\n                                                    [forceSelection]="true" [size]="30" [minLength]="1"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                      \r\n                       \r\n                        <div class="form-group">\r\n                            <div class="col-sm-5">\r\n                                <div class="checkbox-cstm">\r\n                                    <label>\r\n                                        <input type="checkbox" name="isActive" [(ngModel)]="currentRow.isActive">\r\n                                        <span class="cr">\r\n                                            <i class="cr-icon pi pi-check"></i>\r\n                                        </span>\r\n                                        Active\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button class="btn btn-primary" data-dismiss="modal"\r\n                            [disabled]="AssetType.invalid || disableSave || disableForMgmtStructure" (click)="currentModeOfOperation === 2 ? saveNewItem() : updateItem();">\r\n                        {{currentModeOfOperation == 3 ? \'Update\' : \'Save\' }}\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetFromData()">Close</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    \x3c!--Modal for delete only--\x3e\r\n    <div #delete *ngIf="currentModeOfOperation === 4" id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <strong>\r\n               Asset Attribute:\r\n                        <span class="new-label">{{selectedRowforDelete.assetAttributeTypeName}}</span>\r\n                        </strong>\r\n                    <span class="new-label"></span>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteItem()">Yes</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModal()">No</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n    \x3c!--Step x: Audit modal--\x3e\r\n    <div #itemHistory *ngIf="currentModeOfOperation === 5" class="modal fade" id="itemHistory" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-xl">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <h4 class="modal-title">History of {{rowName}}</h4>\r\n                    <button type="button" class="close" data-dismiss="modal" (click)="dismissModal()">&times;</button>\r\n                </div>\r\n\r\n                <div class="modal-body">\r\n                    <div class="table-responsive">\r\n                        <table class="table table-bordered">\r\n                            <thead>\r\n                                \x3c!--<tr *ngFor="let item of currentRow | keyvalue">\r\n                                    <th>{{item.key | titlecase}}</th>--\x3e\r\n                                <tr>\r\n                                    <th>Asset Class</th>\r\n                                    <th>Description</th>\r\n                                    <th>Name</th>\r\n                                    <th>Convention Type</th>\r\n                                    <th>Depreciation Method</th>\r\n                                    <th>Residual Percentage</th>\r\n                                    <th>Residual Value</th>\r\n                                    <th>Asset Life</th>\r\n                                    <th>Depreciation Frequency</th>\r\n                                    <th>Acquired GL Account</th>\r\n                                    <th>Depreciation Frequency</th>\r\n                                    <th>Accum Depr GL Account</th>\r\n                                    <th>Ad Deps GL Account</th>\r\n                                    <th>Asset Sale</th>\r\n                                    <th>Asset WriteOff</th>\r\n                                    <th>Asset WriteDown</th>\r\n                                    <th>Memo</th>\r\n                                    <th>Active</th>\r\n                                    <th>Last Updated By</th>\r\n                                    <th>Last Updated Time</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tr *ngFor="let audit of auditHistory">\r\n                                <td>{{audit.assetTypeId}}</td>\r\n                                <td>{{audit.description}}</td>\r\n                                <td>{{audit.assetAttributeTypeName}}</td>\r\n                                <td>{{audit.conventionType}}</td>\r\n                                <td>{{audit.residualPercentage}}</td>\r\n                                <td>{{audit.assetLife}}</td>\r\n                                <td>{{audit.depreciationFrequencyId}}</td>\r\n                                <td>{{audit.acquiredGLAccountId}}</td>\r\n                                <td>{{audit.deprExpenseGLAccountId}}</td>\r\n                                <td>{{audit.adDepsGLAccountId}}</td>\r\n                                <td>{{audit.assetSale}}</td>\r\n                                <td>{{audit.assetWriteOff}}</td>\r\n                                <td>{{audit.assetWriteDown}}</td>\r\n                                <td>{{audit.memo}}</td>\r\n                                <td>{{audit.isActive ? \'true\' : \'false\'}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate| date: \'MM/dd/yyyy h:mm:ss a\'}}</td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModal()">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <ng-template #viewClick class="modal fade " id="viewClick" role="dialog">\r\n\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">\xd7</button>\r\n                <h4 class="modal-title">{{rowName}} Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Legal Entity: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.selectedCompanyNames}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Asset Class: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.assetTypeName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Name: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.assetAttributeTypeName}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Description: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.description}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Convention Type: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.conventionTypeName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Depreciation Method: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.depreciationMethodName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Residual Percentage: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.residualPercentage}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Asset Life: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.assetLife}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Depreciation Frequency: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.depreciationFrequencyName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Acquired GL Account: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.acquiredGLAccountName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Accum Depr GL Account: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.deprExpenseGLAccountName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Accum Depr GL Account: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.adDepsGLAccountName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Asset Sale: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.assetSaleName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Asset WriteOff: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.assetWriteOffName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Asset WriteDown: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.assetWriteDownName}}</span>\r\n                    </p>\r\n                   \r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Active: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.isActive ? \'true\' : \'false\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.createdBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Last Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Last Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n            </div>\r\n    </ng-template>\r\n</div>'},uPCL:function(t,e,a){"use strict";a.r(e),e.default='\r\n<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Master 1099</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" \r\n                            matTooltipPosition="above" matTooltip="Add 1099"\r\n                             tooltipPosition="right"\r\n                              data-target="#add" data-toggle="modal"\r\n                               (click)="resetForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Master 1099</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#add" data-toggle="modal"\r\n                                    (click)="resetForm()"\r\n                                  >\r\n                                  Add 1099\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                     \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm"\r\n                                 [value]="originalData"\r\n                                 [lazy]="true" (onLazyLoad)="loadAllSiteData($event)"\r\n                                 [first]="0" [rows]="pageSize"\r\n                                 [paginator]="true" [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]"\r\n                                 [columns]="selectedColumns"\r\n                                 (onPage)="changePage($event)"\r\n                                 selectionMode="multiple"\r\n                                 [metaKeySelection]="true"\r\n                                 [resizableColumns]="true"\r\n                                 [reorderableColumns]="true"\r\n                                 [scrollable]="true"\r\n                                 [totalRecords]="totalRecords"\r\n                                 scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="1" [options]="headers" optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n                                   \r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  \r\n                                                      <div\r\n                                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                                      >\r\n                                                        <div class="form-group">\r\n                                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                          <div\r\n                                                            class="pull-left"\r\n                                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                                          >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                    \x3c!--  --\x3e\r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button" style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download Data" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button" style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download Selected" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltip="Download Sample file" matTooltipPosition="above" style="padding: 5px 12px !important;" (click)="sampleExcelDownload()">Sample File Download</button>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle [pSelectableRowIndex]="rowIndex">\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal"\r\n                                        data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                            (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}"\r\n                                        (onChange)="changeStatus(rowData)" matTooltip="Active" matTooltipPosition="above"></p-inputSwitch>--\x3e\r\n                                      \r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)"\r\n                                                       [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                               (click)="viewSelectedRow(rowData)" data-target="#view" data-toggle="modal"\r\n                                               matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n                                        <span data-target="#add" data-toggle="modal">\r\n                                            <a class="btn nobg"\r\n                                               (click)="edit(rowData)"\r\n                                               matTooltip="Edit"\r\n                                               matTooltipPosition="above">\r\n                                                <i class="fa fa-pencil">\r\n                                                </i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n\r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                         data-target="#add" data-toggle="modal" matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-target="#delete" data-toggle="modal">\r\n                                            <a class="btn nobg"\r\n                                               (click)="delete(rowData)"\r\n                                               matTooltip="Delete" matTooltipPosition="above">\r\n                                                <i class="fa fa-trash"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button\r\n                                        matTooltip="Delete" matTooltipPosition="above"\r\n                                         data-target="#delete" data-toggle="modal"\r\n                                          (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal">\r\n                                            <a class="btn nobg"\r\n                                               (click)="getAuditHistoryById(rowData)"\r\n                                               matTooltip="History" matTooltipPosition="above">\r\n                                                <i class="fa fa-history"></i>\r\n                                            </a>\r\n                                        </span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" data-target="#contentHist"\r\n                                         data-toggle="modal" (click)="getAuditHistoryById(rowData)" >\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                                         *ngIf="originalData && originalData.length == 0 || originalData && originalData.length ==null">\r\n                                <tr>\r\n                                    <td [attr.colspan]="7" class="no-records-cstm">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Master 1099:\r\n            <span class="new-label">{{restorerecord.name}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                   Master 1099:\r\n                    <span class="new-label">{{selectedRowforDelete.name}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #add id="add" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="resetForm()" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Master 1099</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #create="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-6">\r\n                                <label for="description" class="control-label">\r\n                                    Master 1099 Name\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="name" [(ngModel)]="addNew.name"\r\n                                                (onSelect)="selectedGLCFName($event)" (onKeyUp)="checkGLCFNameExists(\'name\',$event.target.value)" name="1099name" [suggestions]="glCashFlowList" (completeMethod)="filterGLCFName($event)"\r\n                                                [size]="30" [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveGLCFName" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-6">\r\n\r\n                                <label for="description" class="control-label">Description</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" [(ngModel)]="addNew.description" id="description" name="description" (ngModelChange)="getmemo($event)" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-6">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" [(ngModel)]="addNew.memo" id="memo" name="memodescription" (ngModelChange)="getmemo($event)" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNew.isActive" (ngModelChange)="getmemo($event)">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" [disabled]="create.invalid || disableSaveGLCFNameSave" (click)="save();"> {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Master 1099</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n\r\n                                <th>Master 1099 Name</th>\r\n                                <th>Description</th>\r\n                                <th>Memo</th>\r\n                                <th>Active</th>\r\n                                <th>Last Updated By</th>\r\n                                <th>Last Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'name\', audit.name)  ? \'black\' : \'red\'  }">{{audit.name}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Master 1099 Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Master 1099 Name: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.name}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Description: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.description}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Is Active: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n\r\n\r\n\r\n\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>'},"ug7/":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                       \r\n                        <div class="inline-block display-flex">\r\n                           \r\n                            <h3 class="po-head lead">{{header}}</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltipPosition="above" matTooltip="Add {{rowName}}" \r\n                             tooltipPosition="right" data-target="#editItem"\r\n                              data-toggle="modal" (click)="addNewItem()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">{{header}}</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#editItem"\r\n                              data-toggle="modal" (click)="addNewItem()"\r\n                                  >\r\n                                  Add {{rowName}}\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                       \r\n                \r\n                        \x3c!--Step x: Add/update table taking grid data (itemList) and selected columns --\x3e\r\n                        \x3c!--(onLazyLoad)="changePage($event)"--\x3e\r\n                        <p-table #dt\r\n                                 class="rpo-table-cstm rro-table-cstm"\r\n                                 [value]="itemList"\r\n                                 [first]="pageIndex"\r\n                                 [rows]="pageSize"\r\n                                 [paginator]="true"\r\n                                 [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]"\r\n                                 [columns]="selectedColumns"\r\n                                 selectionMode="multiple"\r\n                                 [metaKeySelection]="true"\r\n                                 [resizableColumns]="true"\r\n                                 [reorderableColumns]="true"\r\n                                 [scrollable]="true"\r\n                                 [totalRecords]="totalRecords"\r\n                                 scrollHeight="450px">\r\n                            \x3c!--caption--\x3e\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    \x3c!--column names dropdown taking selectedColumns--\x3e\r\n                                    \x3c!--Step x: Update the dropdown with options--\x3e\r\n                                    \x3c!--(onChange)="reorderValues($event)"--\x3e\r\n                                    \x3c!--to-do:add (change)=>--\x3e\r\n                                    <p-multiSelect [maxSelectedLabels]="2"\r\n                                                   [options]="columnHeaders"\r\n                                                   optionLabel="header"\r\n                                                   [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                                   selectedItemsLabel="{0} columns selected"\r\n                                                   defaultLabel="Choose Columns">\r\n                                    </p-multiSelect>\r\n\r\n                                </div>\r\n                                <div class="col">\r\n                                  \r\n                                      <div\r\n                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                      >\r\n                                        <div class="form-group">\r\n                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                          <div\r\n                                            class="pull-left"\r\n                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                          >\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>In-Active\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                    <label class="radio-cstm wauto">\r\n                                                        <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                        (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                        <span class="checkmark"></span>All\r\n                                                    </label>\r\n                                                </div>\r\n                                                    <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                      <label style="width: auto !important;margin-top: 3px;">\r\n                                                        \x3c!--  --\x3e\r\n                                                        <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                         (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                          />\r\n                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                      Show  Deleted List \r\n                                                      </label>\r\n                                                    </div>\r\n                            \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="row">\r\n                                  <div class="col">\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download Selected" \r\n                                            pButton icon="fa-download" iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltipPosition="above" matTooltip="Download All Data" \r\n                                            pButton icon="fa-download" iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    \x3c!--\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" id="file" class="uploaddoc upload-file" data-multiple-caption="{count} files selected"\r\n                                               accept=".xlsx, .xls, .csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"\r\n                                               (change)="bulkUpload($event)">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" (click)="sampleExcelDownload()">Sample File Download</button>\r\n                                    </div>\r\n                                    --\x3e\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n                                        <input type="file" name="upload[]" id="upload" (change)="bulkUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary"  style="padding: 5px 12px !important;" (click)="sampleExcelDownload()" matTooltipPosition="above" matTooltip="Download Sample File"  >Sample File Download</button>\r\n                                    </div>\r\n                                </div>\r\n                                </div>\r\n\r\n                            </ng-template>\r\n                            \x3c!--header with search--\x3e\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position: sticky" *ngIf="selectedColumns.length> 0">Actions</th>\r\n                                </tr>\r\n                                \x3c!--to-do: put search by partial string--\x3e\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position: sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            \x3c!--body--\x3e\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="viewItemDetailsClick(viewClick, rowData)">\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                        {{rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                       \r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']"\r\n                                                       name="isActive{{rowIndex}}" (onChange)="toggleActiveStatus(rowData)"\r\n                                                       [matTooltip]="rowData[\'isActive\'] ? \'Active\' : \'Inactive\' " matTooltipPosition="above">\r\n                                        </p-inputSwitch>\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" \r\n                                            (click)="viewItemDetails(rowData)" data-target="#view" data-toggle="modal" matTooltip="View" matTooltipPosition="above">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        \x3c!--Step x: update the on-click event--\x3e\r\n                                       \r\n                                        <span data-target="#editItem" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="showItemEdit(rowData)" \r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="showItemEdit(rowData)" \r\n                                        matTooltip="Edit" matTooltipPosition="above" data-target="#editItem" data-toggle="modal">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                       \r\n                                        <span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="confirmItemDelete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                       \r\n                                       \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete" \r\n                                        matTooltipPosition="above" (click)="confirmItemDelete(rowData)" \r\n                                        data-target="#delete" data-toggle="modal">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-target="#itemHistory" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="showHistory(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" (click)="showHistory(rowData)"\r\n                                          data-target="#itemHistory" data-toggle="modal">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg"\r\n                                         (click)="viewItemDetails(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            \r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                                 *ngIf="itemList && itemList.length == 0 || itemList && itemList.length ==null">\r\n                   <tr>\r\n                                    <td [attr.colspan]="5" style="color: red; font-weight: bold; text-align: center">\r\n                                        No records found\r\n                                    </td>\r\n                                   \r\n                                </tr>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <div style="text-align: right;">\r\n                                    <label id="footer" class="footer1">Total:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                    <label id="footer" class="footer1">Pages Count:</label>\r\n                                    <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                                </div>\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <p-dialog header="Alert" [(visible)]="display" [modal]="true" [dismissableMask]="true" maximizedLeft="140px" maximizedTop="140px"\r\n              [width]="350" [minWidth]="200" [responsive]="true"\r\n              [minY]="1050" [baseZIndex]="1100000" *ngIf="(currentModeOfOperation === 9)">\r\n        <h5 [ngStyle]="{\'color\':\'red\'}">\r\n            Please Enter (*) Mandatory Fields\r\n        </h5>\r\n        <p-footer>\r\n            <button type="button" pButton icon="pi pi-check" (click)="dismissModal()" label="Close"></button>\r\n        </p-footer>\r\n    </p-dialog>\r\n\r\n    \x3c!--to-do:use same modal to view, add, update, and delete--\x3e\r\n    \x3c!--Step x: Modal for view only--\x3e\r\n    <div #view *ngIf="itemDetails" class="modal fade" id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-sm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">\xd7</button>\r\n                    <h4 class="modal-title">Asset Type Details</h4>\r\n                </div>\r\n                <div class="modal-body viewform">\r\n                    <div class="col-sm-12">\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Id: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.assetTypeId}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Name: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.assetTypeName}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Memo: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.assetTypeMemo}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Active: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.isActive ? \'True\' : \'False\'}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Created By: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.createdBy}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Created Date: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Last Updated By: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.updatedBy}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label">\r\n                                <b>Last Updated Date: </b>\r\n                            </span>\r\n                            <span class="value">{{itemDetails.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="clear"></div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n    <ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n      \r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n           \r\n        </div>\r\n        <div class="modal-body">\r\n            <strong>\r\n                Asset Type\r\n                <span class="new-label">{{restorerecord.assetTypeName}}</span>\r\n            </strong>\r\n        </div>\r\n      \r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n      </ng-template> \r\n\r\n    <ng-template #viewClick class="modal fade " id="view" role="dialog">\r\n\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n                <h4 class="modal-title"> Asset Class Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Id: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.assetTypeId}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Name: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.assetTypeName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.assetTypeMemo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Active: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.isActive ? \'True\' : \'False\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.createdBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Last Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label">\r\n                            <b>Last Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{itemDetails.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </ng-template>\r\n\r\n    \x3c!--Step x: Modal for Edit--\x3e\r\n    <div #editItem id="editItem" class="modal fade editModal" role="dialog" *ngIf="currentModeOfOperation === 2 || currentModeOfOperation === 3" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">{{currentModeOfOperation === 3 ? "Edit" : "Add"}} {{rowName}} </h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <form #AssetType="ngForm">\r\n                        <div class="form-group">\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-4">\r\n                                    <label for="description" class="control-label">Asset Class <span class="clr-red">*</span></label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    \x3c!--<textarea class="text-item" #memo="ngModel" id="name" name="name" [(ngModel)]="selectedRowforEdit.assetTypeName" minlength="2" (onChange)="check"></textarea>\r\n                                    --\x3e\r\n                                    <p-autoComplete field="assetTypeName"\r\n                                                    [(ngModel)]="selectedRowforEdit.assetTypeName"\r\n                                                    (onSelect)="selectedAssetType($event)"\r\n                                                    (onBlur)="onBlur($event)"\r\n                                                    (onKeyUp)="checkReasonCodeExists(\'assetTypeName\', $event.target.value)"\r\n                                                    name="assetTypeName"\r\n                                                    [suggestions]="filteredItemList" (completeMethod)="filterAssetTypeName($event)"\r\n                                                    [size]="30" [minLength]="1"\r\n                                                    [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                    </p-autoComplete>\r\n                                    <div *ngIf="disableSave && selectedRowforEdit.assetTypeName" class="clr-red">Already Exists</div>\r\n                                    <div class="clear"></div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-12">\r\n                                <div class="col-sm-4">\r\n                                    <label for="description" class="control-label">Memo</label>\r\n                                </div>\r\n                                <div class="col-sm-5">\r\n                                    <textarea class="text-item" #memo="ngModel" id="memo"\r\n                                              name="assetTypeMemo" (ngModelChange)="getChange()" [(ngModel)]="selectedRowforEdit.assetTypeMemo" minlength="2"></textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <div class="col-sm-6">\r\n                                <div class="checkbox-cstm">\r\n                                    <label>\r\n                                        <input type="checkbox" name="isActive" [(ngModel)]="selectedRowforEdit.isActive">\r\n                                        <span class="cr">\r\n                                            <i class="cr-icon pi pi-check"></i>\r\n                                        </span>\r\n                                        Active\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button class="btn btn-primary" data-dismiss="modal" [disabled]="disableSave || disableSaveForAsset" (click)="currentModeOfOperation === 2 ? saveNewItem() : updateItem();"> {{currentModeOfOperation == 3 ? \'Update\' : \'Save\' }}</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    \x3c!--Modal for delete only--\x3e\r\n    <div #delete *ngIf="currentModeOfOperation === 4" id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <strong>\r\n                        Asset Type:\r\n                        <span class="new-label">{{selectedRowforDelete.assetTypeName}}</span>\r\n                    </strong>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteItem()">Yes</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModal()">No</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n    \x3c!--Step x: Audit modal--\x3e\r\n    <div #itemHistory *ngIf="currentModeOfOperation === 5" class="modal fade" id="itemHistory" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <h4 class="modal-title">History of {{rowName}}</h4>\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="table-responsive">\r\n                        <table class="table table-bordered">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Memo</th>\r\n                                    <th>Active</th>\r\n                                    <th>Last Updated By</th>\r\n                                    <th>Last Updated Time</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                <td [ngStyle]="{\'color\': auditHistory[i>0 ? i-1 : i].assetTypeName === audit.assetTypeName ? \'black\' : \'red\'  }">\r\n                                    {{audit.assetTypeName}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': auditHistory[i>0 ? i-1 : i].assetTypeMemo === audit.assetTypeMemo ? \'black\' : \'red\'  }">\r\n                                    {{audit.assetTypeMemo}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': auditHistory[i>0 ? i-1 : i].isActive === audit.isActive ? \'black\' : \'red\'  }">\r\n                                    {{audit.isActive}}\r\n                                </td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModal()">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n'},"v+6v":function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Job Type</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin" matTooltipPosition="above" matTooltip="Add Job Type" tooltipPosition="right" (click)="resetJobTypeForm()" data-target="#addJobType" data-toggle="modal">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div>\r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="jobTypeData" \r\n                        [first]="0" \r\n                        [rows]="pageSize" \r\n                        [paginator]="true" \r\n                        [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple" \r\n                        [metaKeySelection]="true"\r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true" \r\n                        [scrollable]="true" \r\n                        [totalRecords]="totalRecords" \r\n                        scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div style="text-align: right;margin-left:-6px !important;">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="uomHeaders" optionLabel="header" [(ngModel)]="selectedColumns" [resetFilterOnHide]="true" \r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n                                    <button type="button" class="btn btn-primary " matTooltipPosition="above" matTooltip="Download All Data"   pButton icon="fa-download"\r\n                                            iconPos="left" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary " matTooltipPosition="above" matTooltip="Download Selected"   pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label>\r\n                                           \r\n                                            \x3c!--<span matTooltip="Upload Data (Excel)">\r\n                        <i class="fa fa-upload"></i>\r\n                    </span>--\x3e\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltipPosition="above" matTooltip="Download Sample file" matTooltipPosition="above"    (click)="sampleExcelDownload()">Sample File Download</button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <br />\r\n                            </ng-template>\r\n                            \r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal" data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        \x3c!--<p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}" (onChange)="changeStatus(rowData)"></p-inputSwitch>--\x3e\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" matTooltip="View" (click)="viewSelectedRow(rowData)" data-target="#view" data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        <button class="btn-edit" mat-icon-button (click)="editJobType(rowData)" data-target="#addJobType" data-toggle="modal" matTooltip="Edit">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button>\r\n\r\n                                        <button class="btn-delete" mat-icon-button matTooltip="Delete" data-target="#delete" data-toggle="modal" (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button>\r\n                                        <button class="btn-history" mat-icon-button matTooltip="History" data-target="#contentHist" data-toggle="modal" (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                    Job Type:\r\n                    <span class="new-label">{{selectedRowforDelete.jobTypeName}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div #addJobType id="addJobType" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Job Type  </h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #JobType="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="jobTypeName" class="control-label">\r\n                                    Job Type\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="jobTypeName" [(ngModel)]="addNewJobType.jobTypeName" \r\n                                    (onSelect)="selectedJobType($event)" name="jobTypeName"  (onBlur)="onBlur($event)"\r\n                                    (onKeyUp)="checkJobTypeExists(\'jobTypeName\', $event.target.value)" \r\n                                    [suggestions]="jobTypeList" (completeMethod)="filterJobTypes($event)" \r\n                                    [size]="30" [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForJobTypeMSG" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="jobTypeMemo" class="control-label">\r\n                                    Memo\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <input type="text" name="jobTypeMemo" class="form-control" #jobTypeMemo="ngModel" [(ngModel)]="addNewJobType.jobTypeMemo" >\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNewJobType.isActive">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" [disabled]="JobType.invalid || disableSaveForJobType" (click)="saveJobType();"> {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetJobTypeForm()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Job Type</th>\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                <td>{{ext.jobTypeName}}</td>\r\n                                <td>{{ext.jobTypeMemo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog"data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Job Type</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>JobType</th>\r\n                                <th>Memo</th>\r\n                                <th>Is Active</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'jobTypeName\', audit.jobTypeName)  ? \'black\' : \'red\'  }">{{audit.jobTypeName}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'jobTypeMemo\', audit.jobTypeMemo)  ? \'black\' : \'red\'  }">{{audit.jobTypeMemo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Job Type Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Job Type: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.jobTypeName}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.jobTypeMemo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Is Active</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>\r\n                    Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},vG9V:function(t,e,a){"use strict";a.r(e),e.default='<div class="card new-card">\r\n    <div class="card-header bg-primary">\r\n      <div class="row">\r\n        <div class="col">\r\n          <h4 class="new-card-heading">\r\n              {{isEditMode ? \'Edit\' : \'Create\' }} Publication</h4>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type="button"\r\n            class="btn-sm new-btn-primary"\r\n            [routerLink]="[\'/singlepages/singlepages/app-publication\']"\r\n          >\r\n            Publication List\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class="card-body new-card-body">\r\n      <div>\r\n    <div class="md-stepper-horizontal orange new-stepper-align">\r\n        <div class="md-step "\r\n             [ngClass]="{ active: activeMenuItem >= 1 ,  editable : activeMenuItem === 1 }"\r\n             (click)="changeOfTab(\'General\')">\r\n            <div class="md-step-circle"><span>1</span></div>\r\n            <div class="md-step-title">General Info</div>\r\n            <div class="md-step-bar-left"></div>\r\n            <div class="md-step-bar-right"></div>\r\n        </div>\r\n        <div class="md-step"\r\n             [ngClass]="{ active: activeMenuItem >= 2 ,  editable : activeMenuItem === 2 }"\r\n             id="step2"\r\n             [class.isDisabled]="!isDisabledSteps"\r\n             (click)="changeOfTab(\'PnMap\')">\r\n            <div class="md-step-circle"><span>2</span></div>\r\n            <div class="md-step-title">PN Mapping</div>\r\n\r\n            <div class="md-step-bar-left"></div>\r\n            <div class="md-step-bar-right"></div>\r\n        </div>\r\n        <div class="md-step"\r\n             [ngClass]="{ active: activeMenuItem >= 3 ,   editable : activeMenuItem === 3 }"\r\n             (click)="changeOfTab(\'Aircraft\')"\r\n             [class.isDisabled]="!isDisabledSteps">\r\n            <div class="md-step-circle"><span>3</span></div>\r\n            <div class="md-step-title">View Aircraft Info</div>\r\n\r\n            <div class="md-step-bar-left"></div>\r\n            <div class="md-step-bar-right"></div>\r\n        </div>\r\n        <div class="md-step "\r\n             [ngClass]="{ active: activeMenuItem >= 4 ,  editable : activeMenuItem === 4 }"\r\n             (click)="changeOfTab(\'Atachapter\')"\r\n             [class.isDisabled]="!isDisabledSteps">\r\n            <div class="md-step-circle"><span>4</span></div>\r\n            <div class="md-step-title">View ATA Chapter</div>\r\n\r\n            <div class="md-step-bar-left"></div>\r\n            <div class="md-step-bar-right"></div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n    <div class="col-md-12 shadow-box-cstm" *ngIf="currentTab !== \'General\'" style="padding: 5px 15px; margin-top: 10px;">\r\n\r\n        <div class="col-md-4">\r\n            <p class="fs12">\r\n                <label class="control-label labels-font-header" style="width: auto; ">Publication ID:  </label>\r\n                <span class="span-header-red"> {{this.sourcePublication.publicationId }} </span>\r\n            </p>\r\n        </div>\r\n        \x3c!-- <div class="col-md-4">\r\n          <p class="fs12">\r\n            <label class="control-label labels-font-header" style="width: auto; ">Publication Description:  </label>\r\n            <span class="span-header-red"> {{this.sourcePublication.description }} </span> </p>\r\n        </div>   --\x3e\r\n        <div class="col-md-4">\r\n            <p class="fs12">\r\n                <label class="control-label labels-font-header" style="width: auto; ">Publication Type :</label>\r\n                <span class="span-header-red"> {{publicationType}} </span>\r\n            </p>\r\n        </div>\r\n        <div class="col-md-4">\r\n            <p class="fs12">\r\n                <label class="control-label labels-font-header" style="width: auto; ">Location :</label>\r\n                <span class="span-header-red"> {{sourcePublication.location}} </span>\r\n            </p>\r\n        </div>\r\n    </div>\r\n    <div class="card" style="padding: 10px; margin-top: 10px;">\r\n        <div [ngClass]="{hideTab : currentTab !== \'General\'}">\r\n            \x3c!-- <div class="card-header_old header-text_old ">\r\n              General Info\r\n            </div> --\x3e\r\n            <div class="card-body_old">\r\n                <form #generalInfoForm="ngForm">\r\n                    <div class="form-row col-row">\r\n                        <div class="col-md-3">\r\n                            <div class="form-group">\r\n                                <label for="workflowid">Entry Date</label>\r\n                                <p-calendar [showIcon]="true" [disabled]="true" name="gEntryDate" [(ngModel)]="sourcePublication.entryDate"></p-calendar>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label for="publicationid">Publication ID <span class="clr-red">*</span></label>\r\n                                <input class="form-control" #pubID="ngModel" type="text" autocomplete="off" [maxLength]="35" name="gPublicationid" [(ngModel)]="sourcePublication.publicationId" required />\r\n                            </div>\r\n\r\n                            <div class="form-group">\r\n                                <label for="PublicationDescription">Publication Description</label>\r\n                                <textarea pInputTextarea class="form-control" [maxLength]="256" #pubDescription="ngModel" type="text"\r\n                                          name="gDescription" [(ngModel)]="sourcePublication.description"></textarea>\r\n                            </div>\r\n\r\n                            <div class="form-group">\r\n                                <label for="Publicationtype">\r\n                                    Publication Type<span class="clr-red">*</span>\r\n                                    \x3c!-- <a data-dismiss="modal"    matTooltip="Add Publication Type"\r\n                                    matTooltipPosition="above"\r\n                                    [routerLink]="[\r\n                                      \'/singlepages/singlepages/app-publication-type\'\r\n                                    ]"\r\n                                    ><i class="fa fa-plus-circle fa-lg"></i></a> --\x3e\r\n                                </label>\r\n                                \x3c!-- <p-dropdown name="gPubType" class="pub-type-select" #pubType="ngModel" placeholder="Select Publication Type"  [options]="publicationTypes" [(ngModel)]="sourcePublication.publicationTypeId" required></p-dropdown> --\x3e\r\n                                <select name="gPubType" [(ngModel)]="sourcePublication.publicationTypeId" required>\r\n                                    <option value="null"> -- Select --</option>\r\n                                    <option *ngFor="let type of publicationTypes" [ngValue]="type.value">\r\n                                        {{ type.label }}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n\r\n\r\n                            <div class="form-group">\r\n                                <label for="asd">Author/Source/Directive</label>\r\n                                <input class="form-control" #pubID="ngModel" type="text" [maxLength]="55" name="gAsd" [(ngModel)]="sourcePublication.asd" />\r\n                            </div>\r\n\r\n                            <div class="form-group">\r\n                                <label for="sequence">Sequence</label>\r\n                                <input type="number" name="gSequence" class="form-control" [maxLength]="15" #pubID="ngModel" [(ngModel)]="sourcePublication.sequence" />\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label for="Publishedby">Published By <span class="clr-red">*</span></label>\r\n                                \x3c!-- <input class="form-control" #pubID="ngModel" [maxLength]="55" type="text" name="gPublishBy" [(ngModel)]="sourcePublication.publishby"  /> --\x3e\r\n                                \x3c!-- <select name="publishedById" [(ngModel)]="sourcePublication.publishedById" >\r\n                                  <option *ngFor="let employee of employeeList" [ngValue]="employee.value">\r\n                                    {{ employee.label }}\r\n                                  </option>\r\n                                </select> --\x3e\r\n                                <select class="mb-2" name="publishedById" [(ngModel)]="sourcePublication.publishedById" (change)="changePublishedById()" required>\r\n                                    <option value="null"> -- Select --</option>\r\n                                    <option *ngFor="let module of publishedByModulesList" [ngValue]="module.moduleId">\r\n                                        {{ module.moduleName }}\r\n                                    </option>\r\n                                </select>\r\n                                <div class="form-row" *ngIf="sourcePublication.publishedById == 2 || sourcePublication.publishedById == 3">\r\n                                    <div class="col-sm-12">\r\n                                        <p-autoComplete class="p-autoComplete-ctsm"\r\n                                                        name="publishedByRefId "\r\n                                                        [(ngModel)]="sourcePublication.publishedByRefId"\r\n                                                        field="label"\r\n                                                        [suggestions]="publishedByReferences"\r\n                                                        [forceSelection]="true"\r\n                                                        emptyMessage="No Match Found"\r\n                                                        [size]="30"\r\n                                                        [minLength]="1"\r\n                                                        (completeMethod)="getPublishedByReferencesList($event, sourcePublication.publishedById)"\r\n                                                        [dropdown]="true"\r\n                                                        required="{{sourcePublication.publishedById == 2 || sourcePublication.publishedById == 3}}">\r\n                                        </p-autoComplete>\r\n                                    </div>\r\n                                    \x3c!-- <div class="col-sm-1">\r\n                                      <a data-dismiss="modal" *ngIf="sourcePublication.publishedById == 2"   matTooltip="Add Publication Type"\r\n                                      matTooltipPosition="above"\r\n                                      [routerLink]="[\r\n                                        \'/vendorsmodule/vendorpages/app-vendor-general-information\'\r\n                                      ]"\r\n                                      ><i class="fa fa-plus-circle fa-lg"></i></a>\r\n                                      <a data-dismiss="modal" *ngIf="sourcePublication.publishedById == 3"   matTooltip="Add Publication Type"\r\n                                      matTooltipPosition="above"\r\n                                      [routerLink]="[\r\n                                        \'/singlepages/singlepages/app-manufacturer\'\r\n                                      ]"\r\n                                      ><i class="fa fa-plus-circle fa-lg"></i></a>\r\n                                    </div> --\x3e\r\n                                </div>\r\n\r\n\r\n                                <input *ngIf="sourcePublication.publishedById == 4"\r\n                                       type="text"\r\n                                       pInputText\r\n                                       name="publishedByOthers"\r\n                                       size="50" [(ngModel)]="sourcePublication.publishedByOthers" (onClear)="clearValue()"\r\n                                       class="form-control ui-autocomplete-input"\r\n                                       required="{{sourcePublication.publishedById == 4}}"\r\n                                       placeholder="Specify Others" />\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-md-3">\r\n\r\n                            <div class="form-group">\r\n                                <label for="sequence">Revision Num</label>\r\n                                <input type="text" name="revisionNumber" class="form-control" [maxLength]="15" #pubID="ngModel" [(ngModel)]="sourcePublication.revisionNumber" />\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Revision Date</label>\r\n                                <p-calendar [showIcon]="true" name="revisionDate" [(ngModel)]="sourcePublication.revisionDate"></p-calendar>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Next Review Date</label>\r\n                                <p-calendar [showIcon]="true" name="nextReviewDate" [(ngModel)]="sourcePublication.nextReviewDate" [minDate]="sourcePublication.revisionDate"></p-calendar>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Expiration Date</label>\r\n                                <p-calendar [showIcon]="true" name="expirationDate" [(ngModel)]="sourcePublication.expirationDate" [minDate]="sourcePublication.revisionDate"></p-calendar>\r\n                            </div>\r\n                            \x3c!-- [disabled]="true"     --\x3e\r\n                            \x3c!-- <div class="form-group">\r\n                                <label>Employee</label>\r\n                                <p-dropdown [options]="employeeList" name="gEmployee" class="pub-type-select" [(ngModel)]="sourcePublication.employeeId" #pubID="ngModel"></p-dropdown>\r\n                              </div> --\x3e\r\n                            \x3c!-- <div class="form-group" style="margin-top: 15px; margin-bottom: 8px;">\r\n                                <div class="checkbox-cstm">\r\n                                  <label>\r\n                                    <input\r\n                                      type="checkbox"\r\n                                      name="verifiedStatus"\r\n                                      [(ngModel)]="sourcePublication.verifiedStatus"\r\n                                      [checked]="sourcePublication.verifiedStatus == true"\r\n                                    />\r\n                                    <span class="cr"\r\n                                      ><i class="cr-icon pi pi-check"></i\r\n                                    ></span>\r\n                                    Status\r\n                                  </label>\r\n                              </div>\r\n                            </div> --\x3e\r\n                            <div class="form-group">\r\n                                \x3c!-- <span class="clr-red" *ngIf="sourcePublication.verifiedStatus == true">*</span> --\x3e\r\n                                <label>Verified By  <span class="clr-red">*</span></label>\r\n                                \x3c!-- <p-dropdown [options]="employeeList" name="verifiedBy" class="pub-type-select" [(ngModel)]="sourcePublication.verifiedBy" #pubID="ngModel" [required]="sourcePublication.status == true"></p-dropdown> --\x3e\r\n                                \x3c!-- [required]="sourcePublication.verifiedStatus == true" --\x3e\r\n                                <select name="discountId" [(ngModel)]="sourcePublication.verifiedBy" required>\r\n                                    <option value="null"> -- Select --</option>\r\n                                    <option *ngFor="let employee of employeeList" [ngValue]="employee.value">\r\n                                        {{ employee.label }}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                            \x3c!-- <div class="form-group">\r\n                              <label>Verified By</label>\r\n                              <input pInputText type="text" name="gVerifiedby" [(ngModel)]="sourcePublication.verifiedBy" />\r\n                            </div> --\x3e\r\n                            <div class="form-group">\r\n                                <label>Verified Date <span class="clr-red">*</span></label>\r\n                                <p-calendar [showIcon]="true" name="gVerifiedDate" required [(ngModel)]="sourcePublication.verifiedDate"></p-calendar>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Location<span class="clr-red">*</span></label>\r\n                                <p-autoComplete class="p-autoComplete-ctsm"\r\n                                                name="locationId"\r\n                                                [(ngModel)]="sourcePublication.locationId"\r\n                                                field="label"\r\n                                                [suggestions]="gLocationsList"\r\n                                                [forceSelection]="true"\r\n                                                emptyMessage="No Match Found"\r\n                                                (onSelect)="getLocationNameById($event)"\r\n                                                (completeMethod)="getGlocationsList($event)"\r\n                                                [size]="30"\r\n                                                [minLength]="1"\r\n                                                [dropdown]="true"\r\n                                                required>\r\n                                </p-autoComplete>\r\n                                \x3c!-- <input class="form-control" #pubID="ngModel" [maxLength]="55" type="text" name="gLocation" [(ngModel)]="sourcePublication.location"  /> --\x3e\r\n\r\n                            </div>\r\n                            <div style="width: auto; float: left;">\r\n                            <div class="form-group">\r\n                            <div class="checkbox-cstm">\r\n                                <label\r\n                                  style="width: 50px !important; margin-top: 3px;"\r\n                                >\r\n                                  \x3c!--  --\x3e\r\n                                  <input\r\n                                    type="checkbox"\r\n                                    [(ngModel)]="sourcePublication.isActive"\r\n                                    name="isActive"\r\n                                    id="active"\r\n                                   \r\n                                  />\r\n                                  <span class="cr"\r\n                                    ><i class="cr-icon pi pi-check"></i\r\n                                  ></span>\r\n                                  Active\r\n                                </label>\r\n                              </div>\r\n\r\n                              <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                <label\r\n                                  style="width: auto !important; margin-top: 3px;"\r\n                                >\r\n                                  \x3c!--  --\x3e\r\n                                  <input\r\n                                    type="checkbox"\r\n                                    [(ngModel)]="sourcePublication.inactive"\r\n                                    name="inactive"\r\n                                    id="inactive"\r\n                                  \r\n                                  />\r\n                                  <span class="cr"\r\n                                    ><i class="cr-icon pi pi-check"></i\r\n                                  ></span>\r\n                                  In-Active\r\n                                </label>\r\n                              </div>\r\n                              </div>\r\n                              </div>\r\n\r\n                        </div>\r\n\r\n                        <div class="col-md-6">\r\n                            <div class="card" style="padding: 10px">\r\n                                <div class="form-row">\r\n                                    <div class="col-md-4">\r\n                                        \x3c!-- <div class="form-group">\r\n                                            <label for="fileupload">Tag Type </label>\r\n                                            <select name="tagTypeId" [(ngModel)]="sourcePublication.tagTypeId">\r\n                                                <option *ngFor="let tagTypeItem of fileTagTypesList" [ngValue]="tagTypeItem.value">\r\n                                                    {{ tagTypeItem.label }}\r\n                                                </option>\r\n                                            </select>\r\n                                        </div> --\x3e\r\n                                    </div>\r\n                                    <div class="col-md-12">\r\n                                        <div class="form-group">\r\n                                            <span>File Upload </span>\r\n                                            \x3c!--<p-fileUpload name="gFileupload[]" #tagsFileUploadInput multiple="multiple" [showCancelButton]="false" [showUploadButton]="false" customUpload="true" (onSelect)="fileUpload($event)"></p-fileUpload>--\x3e \x3c!--(uploadHandler)="publicationFileUpload($event)" url="./upload.php"--\x3e\r\n                                            <button (click)="addDocumentDetails()" class="plusicon-cstm" data-toggle="modal" data-target="#addDocumentDetailsNew"  style="background: #ffffff;\r\n                                            border: 1px solid #fff;">\r\n                                                <i class="fa fa-plus-circle fa-lg"\r\n                                                   matTooltip="Create Documents" matTooltipPosition="above" [ngClass]="{ grayColor: !sourcePublication.tagTypeId }"></i>\r\n                                            </button>\r\n\r\n                                        </div>\r\n                                        <div class="form-group">\r\n\r\n    </div>                                    </div>\r\n                                        \x3c!--<div class="col-md-2">\r\n      <div class="form-group">\r\n         <button type="button" class="btn btn-primary" [disabled]="!sourcePublication.tagTypeId || disableFileAttachmentSubmit == true" (click)="addFileTagsToPublication()">Add</button>\r\n      </div>\r\n    </div>--\x3e\r\n                                    </div>\r\n                                <div>\r\n                                    <h6 class="panel-title" style="padding-left: 10px; margin-top: 20px;">Attachment Details</h6>\r\n                                    \x3c!--<p-table\r\n                                    class="rpo-table-cstm"\r\n                                      [columns]="headersforAttachment"\r\n                                      [value]="attachmentList"\r\n                                      [paginator]="true"\r\n                                      [rows]="3"\r\n                                      [rowsPerPageOptions]="[3, 6, 9, 15]"\r\n\r\n                                    >\r\n                                      <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                          <th *ngFor="let col of columns" style="width: 100px;">\r\n                                            {{ col.header }}\r\n                                          </th>\r\n                                          <th style="width: 200px;">File(s)</th>\r\n                                          <th style="width: 70px;">Action</th>\r\n                                         </tr>\r\n                                      </ng-template>\r\n                                      <ng-template\r\n                                        pTemplate="body"\r\n                                        let-rowData\r\n                                        let-columns="columns"\r\n                                        let-rowIndex="rowIndex"\r\n                                      >\r\n                                        <tr>\r\n                                          <td *ngFor="let col of columns" style="text-align: center; padding: 0px !important; width: 100px;">\r\n                                            {{ rowData[col.field] }}\r\n                                          </td>\r\n                                          <td style="width: 200px; text-align: center;" >\r\n                                            <ng-container  *ngFor="let fileItem of rowData.attachmentDetails">\r\n                                              <a *ngIf="fileItem.isFileFromServer == true"\r\n                                              (click)="downloadFileUpload(fileItem.link)"\r\n                                              matTooltip="Download"  matTooltipPosition="above"\r\n                                              class="filelink" style="padding-right: 5px;"\r\n                                              >{{fileItem.fileName}}</a>\r\n                                                <a *ngIf="fileItem.isFileFromServer == false"\r\n                                              [href]="fileItem.link"\r\n                                              download="{{fileItem.fileName}}"\r\n                                                matTooltip="Download"  matTooltipPosition="above"\r\n                                                class="filelink"\r\n                                                >{{fileItem.fileName}}\r\n                                            </a>\r\n                                            </ng-container>\r\n                                          </td>\r\n                                          <td style="width: 70px;">\r\n                                            <a class="btn btn-danger nobg" (click)="deleteAttachmentRow(rowData, rowIndex)"\r\n                                            matTooltip="Delete" matTooltipPosition="above"  data-target="#delete" data-toggle="modal">\r\n                                              <i class="fa fa-trash"></i>\r\n                                            </a>\r\n                                          </td>\r\n                                            </tr>\r\n\r\n                                      </ng-template>\r\n                                    </p-table>--\x3e\r\n\r\n                                <p-table #table4 class="rpo-table-cstm"\r\n                                         [columns]="selectedColumnsDoc"\r\n                                         [value]="sourceViewforDocumentList"\r\n                                         [paginator]="true"\r\n                                         [rows]="3"\r\n                                         [rowsPerPageOptions]="[5, 10, 15, 20]">\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" style="width: 100px;">\r\n                                                {{ col.header }}\r\n                                            </th>\r\n                                            <th style="width: 100px;">Action</th>\r\n                                            \x3c!-- <th style="width: 100px;">Download</th> --\x3e\r\n                                            \x3c!-- <th>Action</th> --\x3e\r\n                                        </tr>\r\n\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                                                [pSortableColumn]="col.field">\r\n                                                {{ col.header }}\r\n                                                <p-sortIcon [field]="col.field">\r\n                                                </p-sortIcon>\r\n                                            </th>\r\n                                            <th>Actions</th>\r\n\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                                <input type="text"\r\n                                                       (input)="table4.filter($event.target.value, col.field,\'contains\') "\r\n                                                       *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'"\r\n                                                       style="width:100%;" pInputText>\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'createdDate\'" name="createdDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableNew($event.target.value, col.field )">\r\n                                                \x3c!--[ngModel]="currentdate | date:\'yyyy-MM-dd\'"--\x3e\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'updatedDate\'" name="updatedDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableNew($event.target.value, col.field )">\r\n                                            </th>\r\n                                            <th style="width:140px;position:sticky"></th>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="body"\r\n                                                 let-rowData\r\n                                                 let-columns="columns"\r\n                                                 let-rowIndex="rowIndex">\r\n                                        <tr [pSelectableRow]="rowData">\r\n                                            <ng-container *ngFor="let col of columns">\r\n                                                <td *ngIf="col.field != \'fileName\'"\r\n                                                    class="ui-resizable-column"\r\n                                                    pReorderableRowHandle>\r\n                                                    {{\r\n                      col.field == \'createdDate\'\r\n                        ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                        : rowData[col.field] && col.field == \'updatedDate\'\r\n                        ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                        : rowData[col.field]\r\n                                                    }}\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'fileName\'">\r\n                                                    <a class="filelink" *ngIf="rowData.isFileFromServer == true" (click)="downloadFileUpload(rowData.link)">\r\n                                                        {{ rowData[col.field] }}\r\n                                                    </a>\r\n                                                    <a *ngIf="rowData.isFileFromServer == false"\r\n                                                       [href]="rowData.link"\r\n                                                       download="{{rowData.fileName}}"\r\n                                                       matTooltip="Download" matTooltipPosition="above"\r\n                                                       class="filelink">\r\n                                                        {{ rowData[col.field] }}\r\n\r\n                                                    </a>\r\n                                                </td>\r\n                                            </ng-container>\r\n\r\n                                            <td style="width: 70px;">\r\n                                                <span data-toggle="modal"\r\n                                                      data-target="#addDocumentDetailsNew">\r\n                                                    <a class="btn nobg"\r\n                                                       (click)="editCustomerDocument(rowData,rowIndex)" matTooltip="Edit"\r\n                                                       matTooltipPosition="above"><i class="fa fa-pencil"></i></a>\r\n                                                </span>\r\n\r\n                                                <a class="btn btn-danger nobg" (click)="deleteAttachmentRow(rowData, rowIndex,deleteContent)"\r\n                                                   matTooltip="Delete" matTooltipPosition="above" data-target="#delete" data-toggle="modal">\r\n                                                    <i class="fa fa-trash"></i>\r\n                                                </a>\r\n                                                \x3c!--<span>\r\n                    <a class="btn nobg"\r\n                       (click)="openHistory(contentAuditHist, rowData)"\r\n                       matTooltip="History" matTooltipPosition="above"><i class="fa fa-history"></i></a>\r\n                </span>--\x3e\r\n                                                <button [disabled]="!rowData.isFileFromServer" class="btn-edit set_proper_align set_position"\r\n                                                        mat-icon-button (click)="openHistory(contentAuditHist,rowData)"\r\n                                                        matTooltip="History" matTooltipPosition="above">\r\n                                                    <i class="fa fa-history"\r\n                                                       [ngClass]="{ grayColor: !rowData.isFileFromServer }"></i>\r\n                                                </button>\r\n\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="emptymessage"\r\n                                                 let-columns\r\n                                                 *ngIf="sourceViewforDocumentList.length == 0">\r\n                                        <tr>\r\n                                            <td [attr.colspan]="10"\r\n                                                style="color: red; font-weight: bold; text-align: center">\r\n                                                No records found\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="summary" id="footer">\r\n                                        <label id="footer" class="footer">Total:</label>\r\n                                        <input style="width: 5%;" [(ngModel)]="totalRecordNew" name="no\'of records" disabled\r\n                                               pInputText type="text" />\r\n\r\n                                        &nbsp;&nbsp;\r\n                                        <label id="footer" class="footer1">Pages Count:</label>\r\n\r\n                                        <input style="width: 5%;" [ngModel]="totalPagesNew"\r\n                                               name="page count" disabled pInputText type="text" />\r\n                                    </ng-template>\r\n\r\n                                </p-table>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="pull-right">\r\n                        \x3c!-- data-toggle="modal" data-target="#revisionNum" --\x3e\r\n                        <button class="btn btn-primary button-save-cstm-cstm" [disabled]="!generalInfoForm.valid" type="submit" (click)="saveGeneralInfo(); ">\r\n                            {{isEditMode ? \'Update\' : \'Save\' }}\r\n                        </button>\r\n                        <button class="btn btn-primary button-save-cstm-cstm" [disabled]="!isEnableNext" type="submit" (click)="nextClick(\'Next\')">\r\n                            Next\r\n                        </button>\r\n                    </div>\r\n                    <ng-template #tabRedirectConfirmationModal let-c="close" let-d="dismiss">\r\n                        <div class="modal-header">\r\n                            <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">&times;</button>\r\n                            <h4 class="modal-title">Confirmation</h4>\r\n                        </div>\r\n                        <div class="modal-body">\r\n                            <h6 class="text-center">\r\n                                Are you sure you want to go to {{nextOrPreviousTab}} tab? Unsaved changes will be lost.\r\n                            </h6>\r\n                        </div>\r\n                        <div class="modal-footer">\r\n\r\n                            <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel()">No</button>\r\n                            <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="redirectToTab()">Yes</button>\r\n                        </div>\r\n                    </ng-template>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <div [ngClass]="{hideTab : currentTab !== \'PnMap\'}">\r\n            <div class="col-md-12 ">\r\n                <h4 class="po-head-sm">\r\n                    PN Mapping\r\n                </h4>\r\n                <hr />\r\n            </div>\r\n\r\n            <div>\r\n                <div class="col-md-12">\r\n                    <div class="shadow-Box">\r\n                        <div class="col-md-3">\r\n                            <div class="form-group ">\r\n                                <label class="fs12">\r\n                                    Part Number\r\n                                </label>\r\n                                <p-multiSelect [options]="partNumberList"\r\n                                               [(ngModel)]="selectedPartNumbers"\r\n                                               (click)="openModelPopups(selectedPartNumbers)"\r\n                                               class="pub-multi align-x"></p-multiSelect>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <div class="form-group">\r\n                                <button class="btn btn-primary mtop20 btn-cstm" [disabled]="!disabledPartNumber" (click)="savePNMapping()">\r\n                                    Add\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-12">\r\n                    <div class="shadow-Box">\r\n                        <p-table #pnMappingTable\r\n                                 class="rpo-table-cstm rro-table-cstm"\r\n                                 [columns]="selectedPNmappingColumns"\r\n                                 [value]="pnMappingList"\r\n                                 [paginator]="true"\r\n                                 [rows]="pnMappingPageSize"\r\n                                 [first]="first"\r\n                                 [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n                                 selectionMode="multiple"\r\n                                 [metaKeySelection]="true"\r\n                                 [resizableColumns]="true"\r\n                                 [reorderableColumns]="true"\r\n                                 [scrollable]="true"\r\n                                 scrollHeight="450px"\r\n                                 (onPage)="PNMappingPageIndexChange($event)">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [options]="headersforPNMapping"\r\n                                                   [(ngModel)]="selectedPNmappingColumns"\r\n                                                   name="customerContactsm1"\r\n                                                   optionLabel="header"\r\n                                                   selectedItemsLabel="{0} columns selected"\r\n                                                   [style]="{ minWidth: \'200px\' }"\r\n                                                   defaultLabel="Choose Columns"\r\n                                                   style="float:left"></p-multiSelect>\r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  <div\r\n                                                    style="width: auto !important; float: right;"\r\n                                                    class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                                                  >\r\n                                        <i class="fa fa-search"></i>\r\n                                        <input type="text"\r\n                                               pInputText\r\n                                               size="50" [(ngModel)]="resetinputmodel" (onClear)="clearValue()"\r\n                                               class="form-control"\r\n                                               (input)="pnMappingTable.filterGlobal($event.target.value, \'contains\')"\r\n                                               placeholder="Filter"\r\n                                               style="height: 28px !important;" />\r\n                                            </div>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div class="row">\r\n                                        <div class="col">\r\n                                    <button type="button"\r\n                                            class="btn btn-primary new-table-button"\r\n                                            pButton\r\n                                            icon="fa-download"\r\n                                            iconPos="left"\r\n                                            label="Export  Data"\r\n                                            matTooltip="Download  Data"\r\n                                            matTooltipPosition="above"\r\n                                            data-toggle="modal" \r\n                                            (click)="selectedOnly = false; targetData = pnMappingTable;"\r\n                                             data-target="#downloadPublicationConfirmation"\r\n                                            style="padding: 5px 10px !important;"></button>\r\n                                    <button type="button"\r\n                                            class="btn btn-primary new-table-button"\r\n                                            pButton\r\n                                            icon="fa-download"\r\n                                            iconPos="left"\r\n                                            label="Export Selected Data"\r\n                                            matTooltip="Download Selected Data"\r\n                                            matTooltipPosition="above"\r\n                                            (click)="pnMappingTable.exportCSV({ selectionOnly: true })"\r\n                                            style="padding: 5px 10px !important;"></button>\r\n                                </div>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                    <col *ngFor="let col of columns" />\r\n                                </colgroup>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    \x3c!-- <th>Sl.No</th> --\x3e\r\n                                    <th *ngFor="let col of columns"\r\n                                        pResizableColumn\r\n                                        pReorderableColumn\r\n                                        [pSortableColumn]="col.field">\r\n                                        {{ col.header }}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th *ngFor="let col of columns"\r\n                                        [ngSwitch]="col.field">\r\n                                        <input style="width:100%;"\r\n                                               pInputText\r\n                                               type="text"\r\n                                               (input)="\r\n                        pnMappingTable.filter($event.target.value, col.field, \'contains\')\r\n                        " />\r\n                                    </th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body"\r\n                                         let-rowData\r\n                                         let-columns="columns"\r\n                                         let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData"\r\n                                    [pContextMenuRow]="rowData">\r\n                                    \x3c!-- <td>{{ rowIndex + 1 }}</td> --\x3e\r\n                                    <td *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle>\r\n                                        {{ rowData[col.field] }}\r\n                                    </td>\r\n                                    <td>\r\n                                        <a class="btn btn-danger nobg" (click)="onDeletePNMappingRow(rowData)"\r\n                                           matTooltip="Delete" matTooltipPosition="above" data-target="#delete" data-toggle="modal">\r\n                                            <i class="fa fa-trash"></i>\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage"\r\n                                         let-columns\r\n                                         *ngIf="pnMappingList.length == 0">\r\n                                <tr>\r\n                                    <td colspan="6"\r\n                                        style="color: red; font-weight: bold; text-align: center">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total:</label>\r\n                                <input style="width: 5%;"\r\n                                       [(ngModel)]="pnMappingTable._totalRecords"\r\n                                       [disabled]="true"\r\n                                       pInputText\r\n                                       type="text" />\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n\r\n                                <input style="width: 5%;"\r\n                                       [ngModel]="getPageCount(pnMappingTable._totalRecords, pnMappingPageSize)"\r\n                                       [disabled]="true"\r\n                                       pInputText\r\n                                       type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-12">\r\n                    <button class="btn btn-primary pull-right button-save-cstm"\r\n                            type="submit"\r\n                            (click)="changeOfTab(\'Aircraft\'); saveTab(\'PN Mapping\')">\r\n                        Next\r\n                    </button>\r\n                    <button class="btn btn-primary pull-right button-save-cstm"\r\n                            type="submit"\r\n                            (click)="changeOfTab(\'General\')">\r\n                        Previous\r\n                    </button>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        \x3c!-- Aircraft Information  --\x3e\r\n\r\n        <div [ngClass]="{hideTab : currentTab !== \'Aircraft\'}">\r\n            <div class="col-md-12 ">\r\n                <h4 class="po-head-sm">\r\n                    Aircraft Info\r\n                </h4>\r\n                <hr />\r\n            </div>\r\n            <div>\r\n                <div class="col-md-12 " *ngIf="showAdvancedSearchCardAircraft == true">\r\n                    <div class="shadow-Box">\r\n                        <div class="col-md-1">\r\n                            <h4 class="f-s-14" style="margin-top: 22px;">Search:</h4>\r\n                        </div>\r\n                        <div class="col-md-2">\r\n                            <div class="form-group">\r\n                                <label class="popup-plusicon-cstm">Part Number </label>\r\n                                <p-dropdown class="imstock-pddowm imcapes-pddowm" [options]="pnAircraftData" filter="true" [(ngModel)]="selectedAircraftPartNumber" name="selectedAircraftPartNumber" id="selectedAircraftPartNumber" title="Part Number" placeholder="Select Part Number" [showClear]="true"></p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-2">\r\n                            <div class="form-group ">\r\n                                <label class="fs12">Aircraft </label>\r\n                                <p-multiSelect [options]="airCraftTypesList"\r\n                                               [(ngModel)]="selectAircraftManfacturer"\r\n                                               (onChange)="getAircraftModelByManfacturerType()"\r\n                                               class="pub-multi" [resetFilterOnHide]="true"></p-multiSelect>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-md-2">\r\n                            <div class="form-group">\r\n                                <label class="fs12">\r\n                                    Aircraft Model\r\n                                </label>\r\n                                <p-multiSelect [options]="aircraftModelList"\r\n                                               [(ngModel)]="selectedAircraftModel"\r\n                                               [selectionLimit]="30"\r\n                                               (onChange)="getDashNumberByManfacturerandModel(); multiSelectMaxLengthAlert();"\r\n                                               class="pub-multi" [resetFilterOnHide]="true"></p-multiSelect>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-2">\r\n                            <div class="form-group ">\r\n                                <label class="fs12">DashNumber </label>\r\n                                <p-multiSelect [options]="dashNumberList"\r\n                                               [selectionLimit]="30"\r\n                                               [(ngModel)]="selectedDashNumbers"\r\n                                               (onChange)="multiSelectMaxLengthAlert();"\r\n                                               class="pub-multi" [resetFilterOnHide]="true"></p-multiSelect>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="col-md-1">\r\n                            <div class="form-group">\r\n                                <button class="btn btn-primary mtop20 btn-cstm" (click)="searchAircraftInformation()">\r\n                                    <i class="pi pi-search pi-search"></i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-12">\r\n                    <div class="shadow-Box">\r\n                        <p-table #aircraftTable\r\n                                 class="rpo-table-cstm rro-table-cstm"\r\n                                 [columns]="selectedaircraftInformationCols"\r\n                                 [value]="aircraftList"\r\n                                 [paginator]="true"\r\n                                 [rows]="aircraftPageSize"\r\n                                 [first]="first"\r\n                                 [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n                                 selectionMode="multiple"\r\n                                 [metaKeySelection]="true"\r\n                                 [resizableColumns]="true"\r\n                                 [reorderableColumns]="true"\r\n                                 [scrollable]="true"\r\n                                 scrollHeight="450px"\r\n                                 (onPage)="aircraftPageIndexChange($event)">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [options]="aircraftInformationCols"\r\n                                                   [(ngModel)]="selectedaircraftInformationCols"\r\n                                                   name="customerContactsm1"\r\n                                                   optionLabel="header"\r\n                                                   selectedItemsLabel="{0} columns selected"\r\n                                                   [style]="{ minWidth: \'200px\' }"\r\n                                                   defaultLabel="Choose Columns"\r\n                                                   style="float:left"></p-multiSelect>\r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  <div\r\n                                                    style="width: auto !important; float: right;"\r\n                                                    class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                                                  >\r\n                                        <i class="fa fa-search"></i>\r\n                                        <input type="text"\r\n                                               pInputText\r\n                                               size="50" [(ngModel)]="resetinputmodel" (onClear)="clearValue()"\r\n                                               class="form-control"\r\n                                               (input)="aircraftTable.filterGlobal($event.target.value, \'contains\')"\r\n                                               placeholder="Filter"\r\n                                               style="height: 28px !important;" />\r\n                                            </div>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div class="row">\r\n                                        <div class="col">\r\n                                    <button type="button"\r\n                                            class="btn btn-primary new-table-button"\r\n                                            pButton\r\n                                            icon="fa-download"\r\n                                            iconPos="left"\r\n                                            label="Export  Data"\r\n                                            matTooltip="Download  Data"\r\n                                            matTooltipPosition="above"\r\n                                            data-toggle="modal" \r\n                                            (click)="selectedOnly = false; targetData = aircraftTable;"\r\n                                             data-target="#downloadAircraftConfirmation"\r\n                                            style="padding: 5px 10px !important;"></button>\r\n                                    <button type="button"\r\n                                            class="btn btn-primary new-table-button"\r\n                                            pButton\r\n                                            icon="fa-download"\r\n                                            iconPos="left"\r\n                                            label="Export Selected Data"\r\n                                            matTooltip="Download Selected Data"\r\n                                            matTooltipPosition="above"\r\n                                            (click)="aircraftTable.exportCSV({ selectionOnly: true })"\r\n                                            style="padding: 5px 10px !important;"></button>\r\n                                    <button class="btn btn-primary"\r\n                                            style="padding: 5px 12px !important;"\r\n                                            *ngIf="showAdvancedSearchCardAircraft == false"\r\n                                            type="button"\r\n                                            (click)="enableDisableAdvancedSearchAircraft(true)">\r\n                                        Advanced Search <i class="fa fa-caret-down"></i>\r\n                                    </button>\r\n                                    <button class="btn btn-primary"\r\n                                            style="padding: 5px 12px !important;"\r\n                                            *ngIf="showAdvancedSearchCardAircraft == true"\r\n                                            type="button"\r\n                                            (click)="enableDisableAdvancedSearchAircraft(false)">\r\n                                        Advanced Search <i class="fa fa-caret-up"></i>\r\n                                    </button>\r\n                                </div>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                    <col *ngFor="let col of columns" />\r\n                                </colgroup>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    \x3c!-- <th>ID</th> --\x3e\r\n                                    <th *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn\r\n                                        [pSortableColumn]="col.field">\r\n                                        {{ col.header }}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th *ngFor="let col of columns"\r\n                                        [ngSwitch]="col.field">\r\n                                        <input style="width:100%;"\r\n                                               pInputText\r\n                                               type="text"\r\n                                               (input)="\r\n                        aircraftTable.filter($event.target.value, col.field, \'contains\')\r\n                        " />\r\n                                    </th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body"\r\n                                         let-rowData\r\n                                         let-columns="columns"\r\n                                         let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData"\r\n                                    [pContextMenuRow]="rowData">\r\n                                    \x3c!-- <td>{{ rowIndex + 1 }}</td> --\x3e\r\n                                    <td *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle>\r\n                                        {{ rowData[col.field] }}\r\n                                    </td>\r\n                                    <td>\r\n                                        <span data-toggle="modal" data-target="#airCraftView">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                               (click)="openAircraftView(rowData, airCraftView)" matTooltip="View"\r\n                                               matTooltipPosition="above"><i class="fa fa-eye"></i></a>\r\n                                        </span>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage"\r\n                                         let-columns\r\n                                         *ngIf="aircraftList.length == 0">\r\n                                <tr>\r\n                                    <td colspan="8"\r\n                                        style="color: red; font-weight: bold; text-align: center">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total:</label>\r\n                                <input style="width: 5%;"\r\n                                       [(ngModel)]="aircraftTable._totalRecords"\r\n                                       [disabled]="true"\r\n                                       pInputText\r\n                                       type="text" />\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n\r\n                                <input style="width: 5%;"\r\n                                       [ngModel]="getPageCount(aircraftTable._totalRecords, aircraftPageSize)"\r\n                                       [disabled]="true"\r\n                                       pInputText\r\n                                       type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-12">\r\n                    <button class="btn btn-primary pull-right button-save-cstm"\r\n                            type="submit"\r\n                            (click)="changeOfTab(\'Atachapter\');  saveTab(\'Aircraft\')">\r\n                        Next\r\n                    </button>\r\n                    <button class="btn btn-primary pull-right button-save-cstm"\r\n                            type="submit"\r\n                            (click)="changeOfTab(\'PnMap\')">\r\n                        Previous\r\n                    </button>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div [ngClass]="{hideTab : currentTab !== \'Atachapter\'}">\r\n            <div class="col-md-12 ">\r\n                <h4 class="po-head-sm">\r\n                    ATA Chapter Info\r\n                </h4>\r\n                <hr />\r\n            </div>\r\n            <div>\r\n                <div class="col-md-12" *ngIf="showAdvancedSearchCardAta == true">\r\n                    <div class="shadow-Box">\r\n                        \x3c!-- <h4>Search ATA Chapters</h4> --\x3e\r\n                        <div class="col-md-1">\r\n                            <h4 class="f-s-14" style="margin-top: 22px;">Search:</h4>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <div class="form-group">\r\n                                <label class="popup-plusicon-cstm">Part Number </label>\r\n                                <p-dropdown class="imstock-pddowm imcapes-pddowm" [options]="pnData" filter="true" [(ngModel)]="selectedPartNumber" name="selectedPartNumber" id="selectedPartNumber" title="Part Number" required placeholder="Select Part Number" [showClear]="true"></p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <div class="form-group ">\r\n                                <label class="fs12">ATA Chapter</label>\r\n                                <p-multiSelect [options]="ataChapterList"\r\n                                               [(ngModel)]="selectedATAchapter"\r\n                                               (onChange)="getSubChapterByATAChapter()"\r\n                                               class="pub-multi" [resetFilterOnHide]="true"></p-multiSelect>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <div class="form-group">\r\n                                <label class="fs12">ATA Sub Chapter</label>\r\n                                <p-multiSelect [options]="ataSubChapterList"\r\n                                               [(ngModel)]="selectedATASubChapter"\r\n                                               class="pub-multi" [resetFilterOnHide]="true"></p-multiSelect>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-2">\r\n                            <div class="form-group">\r\n                                <button class="btn btn-primary mtop20 btn-cstm" (click)="searchATA()">\r\n                                    <i class="pi pi-search pi-search"></i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-12">\r\n                    <div class="shadow-Box" style="padding-left: 0px; padding-right: 0px;">\r\n                        <p-table #ataTable\r\n                                 class="rpo-table-cstm rro-table-cstm"\r\n                                 [columns]="selectedatacols"\r\n                                 [value]="ataList"\r\n                                 [paginator]="true"\r\n                                 [rows]="ataPageSize"\r\n                                 [first]="first"\r\n                                 [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n                                 selectionMode="multiple"\r\n                                 [metaKeySelection]="true"\r\n                                 [resizableColumns]="true"\r\n                                 [reorderableColumns]="true"\r\n                                 [scrollable]="true"\r\n                                 scrollHeight="450px"\r\n                                 (onPage)="ataPageIndexChange($event)">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [options]="atacols"\r\n                                                   [(ngModel)]="selectedatacols"\r\n                                                   name="customerContactsm1"\r\n                                                   optionLabel="header"\r\n                                                   selectedItemsLabel="{0} columns selected"\r\n                                                   [style]="{ minWidth: \'200px\' }"\r\n                                                   defaultLabel="Choose Columns"\r\n                                                   style="float:left"></p-multiSelect>\r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  <div\r\n                                                    style="width: auto !important; float: right;"\r\n                                                    class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                                                  >\r\n                                  \r\n                                        <i class="fa fa-search"></i>\r\n                                        <input type="text"\r\n                                               pInputText\r\n                                               size="50" [(ngModel)]="resetinputmodel" (onClear)="clearValue()"\r\n                                               class="form-control"\r\n                                               (input)="ataTable.filterGlobal($event.target.value, \'contains\')"\r\n                                               placeholder="Filter"\r\n                                               style="height: 28px !important;" />\r\n                                            </div>\r\n                                        </div>\r\n                                      </div>\r\n                                      <div class="row">\r\n                                        <div class="col">\r\n                                    <button type="button"\r\n                                            class="btn btn-primary new-table-button"\r\n                                            pButton\r\n                                            icon="fa-download"\r\n                                            iconPos="left"\r\n                                            label="Export  Data"\r\n                                            matTooltip="Download  Data"\r\n                                            matTooltipPosition="above"\r\n                                         \r\n                                            data-toggle="modal" \r\n                                            (click)="selectedOnly = false; targetData = ataTable;"\r\n                                             data-target="#downloadAtaConfirmation"\r\n                                            style="padding: 5px 10px !important;"></button>\r\n                                    <button type="button"\r\n                                            class="btn btn-primary new-table-button"\r\n                                            pButton\r\n                                            icon="fa-download"\r\n                                            iconPos="left"\r\n                                            label="Export Selected Data"\r\n                                            matTooltip="Download Selected Data"\r\n                                            matTooltipPosition="above"\r\n                                            (click)="ataTable.exportCSV({ selectionOnly: true })"\r\n                                            style="padding: 5px 10px !important;"></button>\r\n                                    <button class="btn btn-primary"\r\n                                            style="padding: 5px 12px !important;"\r\n                                            *ngIf="showAdvancedSearchCardAta == false"\r\n                                            type="button"\r\n                                            (click)="enableDisableAdvancedSearchAta(true)">\r\n                                        Advanced Search <i class="fa fa-caret-down"></i>\r\n                                    </button>\r\n                                    <button class="btn btn-primary"\r\n                                            style="padding: 5px 12px !important;"\r\n                                            *ngIf="showAdvancedSearchCardAta == true"\r\n                                            type="button"\r\n                                            (click)="enableDisableAdvancedSearchAta(false)">\r\n                                        Advanced Search <i class="fa fa-caret-up"></i>\r\n                                    </button>\r\n                                </div>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                    <col *ngFor="let col of columns" />\r\n                                </colgroup>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    \x3c!-- <th>ID</th> --\x3e\r\n                                    <th *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn\r\n                                        [pSortableColumn]="col.field">\r\n                                        {{ col.header }}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th *ngFor="let col of columns"\r\n                                        [ngSwitch]="col.field">\r\n                                        <input style="width:100%;"\r\n                                               pInputText\r\n                                               type="text"\r\n                                               (input)="\r\n                      ataTable.filter($event.target.value, col.field, \'contains\')\r\n                      " />\r\n                                    </th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body"\r\n                                         let-rowData\r\n                                         let-columns="columns"\r\n                                         let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData"\r\n                                    [pContextMenuRow]="rowData">\r\n                                    \x3c!-- <td>{{ rowIndex + 1 }}</td> --\x3e\r\n                                    <td *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle>\r\n                                        {{ rowData[col.field] }}\r\n                                    </td>\r\n                                    <td>\r\n                                        <span data-toggle="modal" data-target="#ataView">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                               (click)="openAtaView(rowData, ataView)" matTooltip="View"\r\n                                               matTooltipPosition="above"><i class="fa fa-eye"></i></a>\r\n                                        </span>\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage"\r\n                                         let-columns\r\n                                         *ngIf="ataList.length == 0">\r\n                                <tr>\r\n                                    <td colspan="6"\r\n                                        style="color: red; font-weight: bold; text-align: center">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total:</label>\r\n                                <input style="width: 5%;"\r\n                                       [(ngModel)]="ataTable._totalRecords"\r\n                                       [disabled]="true"\r\n                                       pInputText\r\n                                       type="text" />\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n\r\n                                <input style="width: 5%;"\r\n                                       [ngModel]="getPageCount(ataTable._totalRecords, ataPageSize)"\r\n                                       [disabled]="true"\r\n                                       pInputText\r\n                                       type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-12">\r\n                    <button class="btn btn-primary pull-right button-save-cstm"\r\n                            type="button"\r\n                            (click)="addNewRecord()">\r\n                        Add New\r\n                    </button>\r\n                    \x3c!--  <button\r\n                      class="btn btn-primary pull-right button-save-cstm"\r\n                      type="button"\r\n                      (click)="saveTab(\'Atachapter\')"\r\n                      >\r\n                      Save\r\n                    </button> --\x3e\r\n                    <button class="btn btn-primary pull-right button-save-cstm"\r\n                            type="submit"\r\n                            (click)="changeOfTab(\'Aircraft\')">\r\n                        Previous\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\x3c!-- Add DashNumber Popup --\x3e\r\n<div class="modal fade" id="downloadPublicationConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t<div class="modal-dialog modal-sm">\r\n\t\t<div class="modal-content">\r\n\t\t\t<div class="modal-header">\r\n\t\t\t\t<button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n\t\t\t\t<h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-body" *ngIf="targetData">\r\n\t\t\t\t<strong>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\tYou are attempting to export {{targetData.totalRecords}} of records. \r\n\t\t\t\t\t</span> \r\n\t\t\t\t</strong>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button type="button" class="btn btn-primary" (click)="pnMappingTable.exportCSV(); closeDeleteModal();">Confirm</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="closeDeleteModal()">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div class="modal fade" id="downloadAircraftConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t<div class="modal-dialog modal-sm">\r\n\t\t<div class="modal-content">\r\n\t\t\t<div class="modal-header">\r\n\t\t\t\t<button type="button" class="close" (click)="closeDeleteAircraftModal()">&times;</button>\r\n\t\t\t\t<h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-body" *ngIf="targetData">\r\n\t\t\t\t<strong>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\tYou are attempting to export {{targetData.totalRecords}} of records. \r\n\t\t\t\t\t</span> \r\n\t\t\t\t</strong>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button type="button" class="btn btn-primary" (click)="aircraftTable.exportCSV(); closeDeleteAircraftModal();">Confirm</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="closeDeleteAircraftModal()">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div class="modal fade" id="downloadAtaConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t<div class="modal-dialog modal-sm">\r\n\t\t<div class="modal-content">\r\n\t\t\t<div class="modal-header">\r\n\t\t\t\t<button type="button" class="close" (click)="closeDeleteAtaModal()">&times;</button>\r\n\t\t\t\t<h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-body" *ngIf="targetData">\r\n\t\t\t\t<strong>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\tYou are attempting to export {{targetData.totalRecords}} of records. \r\n\t\t\t\t\t</span> \r\n\t\t\t\t</strong>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button type="button" class="btn btn-primary" (click)="ataTable.exportCSV(); closeDeleteAtaModal();">Confirm</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="closeDeleteAtaModal()">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n\r\n\r\n<div id="addDashNumber" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Dash Numbers</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form method="post" id="" name="">\r\n                    <div class="col-sm-12">\r\n                        <div class="form-group marginr50" style="display: inline-block;">\r\n                            <p class="fs10">\r\n                                <label class="control-label" style="width: auto;">PN</label>\r\n                                PN123\r\n                            </p>\r\n                        </div>\r\n                        <div class="form-group marginr50" style="display: inline-block;">\r\n                            <p class="fs10">\r\n                                <label class="control-label" style="width: auto;">Aircraft</label>\r\n                                Airbus\r\n                            </p>\r\n                        </div>\r\n                        <div class="form-group marginr50" style="display: inline-block;">\r\n                            <p class="fs10">\r\n                                <label class="control-label" style="width: auto;">Model</label>\r\n                                A767, A768\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div id="" class="table-responsive default-bg clear">\r\n                        <table class="table table-bordered table-striped table-sorting dashnumbers-table">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th></th>\r\n                                    <th>Aircraft</th>\r\n                                    <th>Model</th>\r\n                                    <th>Dash Number</th>\r\n                                    <th>Memo</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td><input type="checkbox" class="form-control"></td>\r\n                                    <td>Airbus</td>\r\n                                    <td>A767</td>\r\n                                    <td>333</td>\r\n                                    <td><textarea class="form-control"></textarea></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><input type="checkbox" class="form-control"></td>\r\n                                    <td>Airbus</td>\r\n                                    <td>A767</td>\r\n                                    <td>444</td>\r\n                                    <td><textarea class="form-control"></textarea></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><input type="checkbox" class="form-control"></td>\r\n                                    <td>Airbus</td>\r\n                                    <td>A767</td>\r\n                                    <td>555</td>\r\n                                    <td><textarea class="form-control" disabled=""></textarea></td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td><input type="checkbox" class="form-control"></td>\r\n                                    <td>Airbus</td>\r\n                                    <td>A320</td>\r\n                                    <td>222</td>\r\n                                    <td><textarea class="form-control" disabled=""></textarea></td>\r\n                                </tr>\r\n\r\n                            </tbody>\r\n                        </table>\r\n                        <div class="clear"></div>\r\n                        <br>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                    PN Mapping:\r\n                    <span class="new-label">{{selectedRowforDelete.partNumber}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<ng-template #airCraftView let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" (click)="closeModal()">&times;</button>\r\n        <h4 class="modal-title">Aircraft Information</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="col-sm-12">\r\n            <p>\r\n                <span class="label"><b>Part Number: </b></span><span class="value">{{ viewAircraftData.partNumber }}</span>\r\n            </p>\r\n            <p>\r\n                <span class="label"><b>Part Description: </b></span><span class="value">{{ viewAircraftData.partDescription }}</span>\r\n            </p>\r\n            <p>\r\n                <span class="label"><b>Manufacturer: </b></span><span class="value">{{ viewAircraftData.manufacturerName }}</span>\r\n            </p>\r\n            <p>\r\n                <span class="label"><b>Item Group: </b></span><span class="value">{{ viewAircraftData.itemGroup }}</span>\r\n            </p>\r\n            <p>\r\n                <span class="label"><b>Aircraft: </b></span><span class="value">{{ viewAircraftData.aircraftType }}</span>\r\n            </p>\r\n\r\n            <p>\r\n                <span class="label"><b>Model: </b></span><span class="value">{{ viewAircraftData.aircraftModel }}</span>\r\n            </p>\r\n            <p>\r\n                <span class="label"><b>Dash Numbers: </b></span><span class="value">{{ viewAircraftData.dashNumber }}</span>\r\n            </p>\r\n\r\n\r\n\r\n            <div class="clear"></div>\r\n        </div>\r\n\r\n        \x3c!-- <strong>PN Mapping:\r\n            <span class="new-label">{{selectedRowforDelete.partNumber}}</span>\r\n        </strong> --\x3e\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeModal()">Close</button>\r\n\r\n    </div>\r\n\r\n</ng-template>\r\n<ng-template #ataView let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" (click)="closeModal()">&times;</button>\r\n        <h4 class="modal-title">ATA Information</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="col-sm-12">\r\n            <p>\r\n                <span class="label"><b>Part Number: </b></span><span class="value">{{ viewAtaData.partNumber }}</span>\r\n            </p>\r\n            <p>\r\n                <span class="label"><b>Part Description: </b></span><span class="value">{{ viewAtaData.partDescription }}</span>\r\n            </p>\r\n            <p>\r\n                <span class="label"><b>Manufacturer: </b></span><span class="value">{{ viewAtaData.manufacturerName }}</span>\r\n            </p>\r\n            <p>\r\n                <span class="label"><b>Item Group: </b></span><span class="value">{{ viewAtaData.itemGroup }}</span>\r\n            </p>\r\n            <p>\r\n                <span class="label"><b>ATA Chapter: </b></span><span class="value">{{ viewAtaData.ataChapterName }}</span>\r\n            </p>\r\n\r\n            <p>\r\n                <span class="label"><b>Ata SubChapter: </b></span><span class="value">{{ viewAtaData.ataSubChapterDescription }}</span>\r\n            </p>\r\n\r\n\r\n\r\n            <div class="clear"></div>\r\n        </div>\r\n\r\n        \x3c!-- <strong>PN Mapping:\r\n            <span class="new-label">{{selectedRowforDelete.partNumber}}</span>\r\n        </strong> --\x3e\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="closeModal()">Close</button>\r\n\r\n    </div>\r\n\r\n</ng-template>\r\n<div class="modal fade"\r\n     id="addDocumentDetailsNew"\r\n     role="dialog"\r\n     data-backdrop="static">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button"\r\n                        class="close"\r\n                        (click)="closeMyModel(\'#addDocumentDetailsNew\')">\r\n                    &times;\r\n                </button>\r\n                <h4 class="modal-title">{{ isEditButton ? \'Edit\' : \'Add\' }} Document Details</h4>\r\n            </div>\r\n            <form #addDocumentForm="ngForm" class="form-horizontal">\r\n                <div class="modal-body">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label for="fileupload">Tag Type <span class="clr-red">*</span> </label>\r\n                                <select name="tagTypeId" [(ngModel)]="sourcePublication.tagTypeId" (ngModelChange)="enableSave()" required>\r\n                                    <option value="null"> -- Select --</option>\r\n                                    <option *ngFor="let tagTypeItem of fileTagTypesList" [ngValue]="tagTypeItem.value">\r\n                                        {{ tagTypeItem.label }}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Name <span class="clr-red">*</span></label>\r\n                                <input class="form-control"\r\n                                       type="text"\r\n                                       name="name"\r\n                                       (ngModelChange)="enableSave()" \r\n                                       [(ngModel)]="documentInformation.docName"\r\n                                       required />\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Description </label>\r\n                                <textarea class="form-control"\r\n                                          name="description"\r\n                                          (ngModelChange)="enableSave()" \r\n                                          [(ngModel)]="documentInformation.docDescription"></textarea>\r\n                            </div>\r\n                            \x3c!-- <div class="form-group">\r\n                                <label>Memo </label>\r\n                                <textarea class="form-control"\r\n                                          name="memo"\r\n                                          (ngModelChange)="enableSave()" \r\n                                          [(ngModel)]="documentInformation.docMemo"></textarea>\r\n                            </div> --\x3e\r\n                            <div class="form-group">\r\n                                <span class="label">Memo </span>\r\n                                <div class="col-sm-11">\r\n                                  <span>                    \r\n                                    <div class="form-group memo-popup-cstm mat_emo">\r\n                                      <div\r\n                                      (ngModelChange)="enableSave()"\r\n                                        [innerHTML]="documentInformation.docMemo"\r\n                                        [matTooltip]="parsedText(documentInformation.docMemo)"\r\n                                        matTooltipPosition="above"\r\n                                        (change)="attachCertificateUpdateFlag = false"\r\n                                        class="form-control"\r\n                                        style="width: 109%;line-height:1.5"\r\n                                        class="text_editor_box"\r\n                                      ></div>\r\n                                    </div>\r\n                                  </span>\r\n                                </div>\r\n                                <div class="col-sm-1">\r\n                                  <span style="margin-left:10px">\r\n                                    <a\r\n                                    class="btn nobg"\r\n                                    data-toggle="modal"\r\n                                    (ngModelChange)="enableSave()"\r\n                                    data-target="#memo-popup-Doc"\r\n                                    (click)="onClickMemo()"\r\n                                    matTooltip="Add Memo"\r\n                                    matTooltipPosition="above">\r\n                                    <i style="color: #337ab7" class="fa fa-pencil"></i>\r\n                                    </a>\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                        </div>\r\n\r\n                        <div class="col-md-12">\r\n                            <div class="form-group">\r\n                                <label style="float: none;">Attachments <span class="clr-red">*</span></label>\r\n                                <p-fileUpload #fileUploadInput\r\n                                               name="fileupload[]"\r\n                                              multiple="multiple"\r\n                                              [showCancelButton]="false"\r\n                                              [showUploadButton]="false"\r\n                                              customUpload="true"\r\n                                              (onSelect)="fileUpload($event)"\r\n                                              (onRemove)="removeFile($event)"></p-fileUpload>\r\n                            </div>\r\n                        </div>\r\n                        <div class="table-responsive table-overflow"\r\n                             *ngIf="isEditButton">\r\n                            <h4 class="panel-title" style="padding-left: 10px;">\r\n                                Attachment Details:\r\n                            </h4>\r\n\r\n                            <table class="table-responsive ptable-cus-pma">\r\n                                <tr>\r\n                                    <th>File Name</th>\r\n                                    <th>Download</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{{sourceViewforDocument.fileName}}</td>\r\n                                    <td>\r\n                                        <a *ngIf="sourceViewforDocument.attachmentDetailId > 0" (click)="downloadFileUpload(sourceViewforDocument.link)"\r\n                                           matTooltip="Download" matTooltipPosition="above"\r\n                                           class="btn nobg btn-cstm">\r\n                                            <span><i class="fa fa-download"></i></span>\r\n                                        </a>\r\n                                        <a *ngIf="sourceViewforDocument.attachmentDetailId==0"\r\n                                           [href]="sourceViewforDocument.link"\r\n                                           download="{{sourceViewforDocument.fileName}}"\r\n                                           matTooltip="Download" matTooltipPosition="above"\r\n                                           class="filelink">\r\n                                            <span><i class="fa fa-download"></i></span>\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button"\r\n                            *ngIf="!isEditButton"\r\n                            class="btn btn-primary pull-right submit-btn"\r\n                            style="text-align:center"\r\n                            (click)="addDocumentInformation(\'#addDocumentDetailsNew\',documentInformation)"\r\n                            [disabled]="!addDocumentForm.valid ||  disableFileAttachmentSubmit==false">\r\n                        Add\r\n                    </button>\r\n                    <button type="button"\r\n                            *ngIf="isEditButton"\r\n                            class="btn btn-primary pull-right submit-btn"\r\n                            style="text-align:center"\r\n                            (click)="addDocumentInformation(\'#addDocumentDetailsNew\',documentInformation)"\r\n                            [disabled]="!addDocumentForm.valid || disableSave">\r\n                        Update\r\n                    </button>\r\n                    <button type="button"\r\n                            class="btn btn-danger"\r\n                            (click)="dismissDocumentPopupModel(\'#addDocumentDetailsNew\'); closeMyModel(\'#addDocumentDetailsNew\')">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\x3c!-- memo code starts here --\x3e\r\n<div class="modal fade" id="memo-popup-Doc" style="z-index: 15000 !important;"  role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal">\r\n            &times;\r\n          </button>\r\n          <h4 class="modal-title">Edit Memo</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n          <table class="table table-bordered table-fixed workflow-table-material">\r\n            <thead>\r\n              <th style="color: #fff;">Memo</th>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td style="white-space: inherit">\r\n                  <p-editor\r\n                   spellcheck="true"\r\n                   (ngModelChange)="enableSaveMemo()"\r\n                    [(ngModel)]="memoPopupContent"\r\n                    [style]="{ height: \'320px\' }"\r\n                    name="memoPopupContent"\r\n                    required\r\n                  ></p-editor>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <div style="float: right;">\r\n            <button\r\n              type="button"\r\n              class="btn btn-primary"\r\n              style="padding: 6px 12px !important; margin-top: 10px;"\r\n              (click)="onClickPopupSave()" [disabled]="disableSaveMemo">\r\n              Save\r\n            </button>\r\n            <button\r\n              type="button"\r\n              class="btn btn-danger"\r\n              style="padding: 6px 12px !important; margin-top: 10px;"\r\n              (click)="closeMemoModel()" >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\x3c!-- memo code ends here --\x3e\r\n\r\n<ng-template #contentAuditHist\r\n             let-c="close"\r\n             let-d="dismiss"\r\n             style="width:auto"\r\n             data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">History of  Documents</h4>\r\n        <button type="button"\r\n                class="close"\r\n                aria-label="Close"\r\n                (click)="dismissModelNew()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="table-responsive">\r\n            <table class="table table-bordered">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Tag Type</th>\r\n                        <th> Name</th>\r\n                        <th>Description</th>\r\n                        <th>Memo</th>\r\n                        <th>File Name</th>\r\n                        <th>Updated By</th>\r\n                        <th>Last Updated Time</th>\r\n                        <th>Created By</th>\r\n                        <th>Created Time</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor="let audit of sourceViewforDocumentAudit"></tr>\r\n                    <tr *ngFor="let audit of sourceViewforDocumentAudit; let i = index">\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistory(i, \'tagType\', audit.tagType)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                            {{ audit.tagType }}\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistory(i, \'docName\', audit.docName)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                            {{ audit.docName }}\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistory(\r\n                  i,\r\n                  \'docDescription\',\r\n                  audit.docDescription\r\n                )\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                            {{ audit.docDescription }}\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistory(i, \'docMemo\', audit.docMemo)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }" [innerHTML]="audit.docMemo" >\r\n                            \x3c!-- {{ audit.docMemo }} --\x3e\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistory(i, \'fileName\', audit.fileName)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                            {{ audit.fileName }}\r\n                        </td>\r\n\r\n                        <td>{{ audit.updatedBy }}</td>\r\n                        <td>{{ audit.updatedDate | date: \'dd-MM-yyyy h:mm a \' }}</td>\r\n                        <td>{{ audit.createdBy }}</td>\r\n                        <td>{{ audit.createdDate | date: \'dd-MM-yyyy h:mm a \' }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModelNew()">\r\n            Close\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n\r\n\r\n<ng-template #deleteContent\r\n             let-c="close"\r\n             let-d="dismiss"\r\n             data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button"\r\n                class="close"\r\n                aria-label="Close"\r\n                (click)="dismissModelNew()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-body">\r\n        <strong>\r\n            Document Name:\r\n            <span class="new-label">{{ selectedRowForDelete.docName }}</span>\r\n        </strong>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button"\r\n                class="btn btn-success"\r\n                (click)="deleteItemAndCloseModelNew()">\r\n            Yes\r\n        </button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModelNew()">\r\n            No\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n\r\n<div *ngIf="isEditMode" class="modal fade" id="revisionNum" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Update Revision Number</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <p style="font-size: 14px;">Do you want to update <b>RevisionNum</b> from <b>{{sourcePublication.revisionNum}}</b> to <b>{{sourcePublication.revisionNum+1}}</b> ?</p>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="changeRevisionNum(\'Yes\');">Yes & Save</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="changeRevisionNum(\'No\');">No & Save</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n'},"x8i/":function(t,e,a){"use strict";a.r(e),e.default=".control-label {\n  width: 150px !important;\n}"},xUyQ:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Priority</h3>\r\n                            &nbsp;&nbsp;\r\n                            <a class="plusicon-cstm new-margin"\r\n                             matTooltipPosition="above" matTooltip="Add Priority" tooltipPosition="right"\r\n                                data-target="#addPriority" data-toggle="modal"\r\n                                 (click)="resetPriorityForm()">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Priority</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    data-target="#addPriority" data-toggle="modal"\r\n                                    (click)="resetPriorityForm()"\r\n                                  >\r\n                                  Add Priority\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                \r\n                        <p-table #dt \r\n                        class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="PriorityData" [first]="0"\r\n                            [rows]="pageSize" [paginator]="true" \r\n                            [pageLinks]="3" \r\n                            [rowsPerPageOptions]="[10,20,50,100]"\r\n                            [columns]="selectedColumns" \r\n                            [metaKeySelection]="true"\r\n                            selectionMode="multiple" \r\n                            (onPage)="changePage($event)"\r\n                            [resizableColumns]="true" \r\n                            [reorderableColumns]="true" \r\n                            [scrollable]="true"\r\n                            [totalRecords]="totalRecords" \r\n                            scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="priorityHeader"\r\n                                        optionLabel="header" [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}"\r\n                                        style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n\r\n                                    </div>\r\n                                    <div class="col">\r\n                                      \r\n                                          <div\r\n                                            style="width: 370px; float: right; padding-top: 3px;"\r\n                                          >\r\n                                            <div class="form-group">\r\n                                              \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                              <div\r\n                                                class="pull-left"\r\n                                                style="margin-top: 4px; margin-right: 15px;"\r\n                                              >\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>In-Active\r\n                                                        </label>\r\n                                                    </div>\r\n                                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                        <label class="radio-cstm wauto">\r\n                                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                            (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                            <span class="checkmark"></span>All\r\n                                                        </label>\r\n                                                    </div>\r\n                                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                          <label style="width: auto !important;margin-top: 3px;">\r\n                                                            \x3c!--  --\x3e\r\n                                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                             (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                              />\r\n                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                          Show  Deleted List \r\n                                                          </label>\r\n                                                        </div>\r\n                                \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="row">\r\n                                      <div class="col">\r\n                                    \r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Selected"\r\n                                          pButton icon="fa-download" iconPos="left"\r\n                                        label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download All Data"\r\n                                          pButton icon="fa-download" iconPos="left"\r\n                                        label="Export Selection Only"\r\n                                        (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload"\r\n                                            (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                            accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n                                        <button class="btn btn-primary" matTooltip="Download Sample file"  style="padding: 5px 12px !important;"\r\n                                            (click)="sampleExcelDownload()">Sample File\r\n                                            Download</button>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                            (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle data-toggle="modal" data-target="#view"\r\n                                        (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{col.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{rowIndex}}"\r\n                                            (onChange)="changeStatus(rowData)" matTooltip="Update" matTooltipPosition="above"></p-inputSwitch>\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip"\r\n                                                (click)="viewSelectedRow(rowData)" matTooltip="View" matTooltipPosition="above" data-target="#view"\r\n                                                data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                       \r\n                                        <span data-target="#addPriority" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="editPriority(rowData)"\r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="editPriority(rowData)"\r\n                                            data-target="#addPriority" data-toggle="modal"\r\n                                             matTooltip="Edit" matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        \r\n                                        <span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n                                        \r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete" \r\n                                        matTooltipPosition="above"\r\n                                            data-target="#delete" data-toggle="modal" (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="getAuditHistoryById(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above"\r\n                                            data-target="#contentHist" data-toggle="modal"\r\n                                            (click)="getAuditHistoryById(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                                </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns\r\n                            *ngIf="PriorityData && PriorityData.length == 0 || PriorityData && PriorityData.length ==null">\r\n                             <tr>\r\n                               <td [attr.colspan]="7" class="no-records-cstm">\r\n                                  No records found\r\n                                </td>\r\n                            </tr>\r\n                          </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                \x3c!-- <p>{{uomData.length}}</p> --\x3e\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText\r\n                                    type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText\r\n                                    type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<ng-template #auditContent let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n        <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Priority Name:\r\n            <span class="new-label">{{restorerecord.description}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>Priority Name:\r\n                    <span class="new-label">{{selectedRowforDelete.description}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div #addPriority id="addPriority" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="resetPriorityForm()"\r\n                    data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Priority </h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #provision="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Priority Name\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="description" [(ngModel)]="addnewPriority.description"\r\n                                    (onSelect)="selectedPriority($event)" name="description"\r\n                                    (onKeyUp)="checkPriorityExists(\'description\', $event.target.value)" \r\n                                    [suggestions]="PriorityList" (completeMethod)="filterDescription($event)"\r\n                                    [size]="30" [minLength]="1" [dropdown]="true" class="p-autoComplete-ctsm" required (ngModelChange)="getmemo()">\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForPriority" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memodescription"\r\n                                    [(ngModel)]="addnewPriority.memo" (ngModelChange)="getmemo()" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addnewPriority.isActive" (ngModelChange)="getmemo()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal"\r\n                    [disabled]="provision.invalid || disableSaveForPriority || disableSavePriority " (click)="savePriority();">\r\n                    {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="resetPriorityForm()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="existingRecordsResponse" id="duplicateRecords" #duplicateRecords class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Duplicate Records</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Priority Name</th> >\r\n                                <th>Memo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="existingRecordsResponse.length> 0">\r\n                            <tr *ngFor="let ext of existingRecordsResponse; let i = index;">\r\n\r\n                                \x3c!-- <td >{{audit.unitOfMeasureAuditId}}</td> --\x3e\r\n                                <td>{{ext.description}}</td>\r\n                                <td>{{ext.memo}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xl">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Priority</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!-- <th>UMID</th> --\x3e\r\n                                <th>Priority Name</th>\r\n                                <th>Memo</th>\r\n                                <th>IsActive</th>\r\n                                <th>Updated By</th>\r\n                                <th>Updated Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n\r\n                                \x3c!--<td\r\n    [ngStyle]="{\'color\': auditHistory[i>0 ? i-1 : i].description === audit.description ? \'black\' : \'red\'  }">\r\n    {{audit.description}}</td>--\x3e\r\n                                \x3c!--<td--\x3e\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'memo\', audit.memo)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'isActive\', audit.isActive)  ? \'black\' : \'red\'  }">{{audit.isActive}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Priority Details</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Priority Name: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">IsActive</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name=""\r\n                    (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n\r\n<ng-template #helpText class="modal fade" id="help-popup" role="dialog">\r\n    <div class="modal-content">\r\n        <div class="modal-header">\r\n\r\n            <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\r\n            <h4 class="modal-title">Help text about the page</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p>Sample Point 1 about Page Description</p>\r\n            <p>Sample Point 2 about Page Description</p>\r\n            <p>Sample Point 3 about Page Description</p>\r\n            <p>Sample Point 4 about Page Description</p>\r\n            <p>Sample Point 5 about Page Description</p>\r\n            <hr />\r\n            <p>\r\n                <b>Excell format to upload the Data -\r\n                    <a href="documents/action-table-format.xlsx" class="clr-red">Download</a>\r\n                </b>\r\n            </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" data-dismiss="modal" (click)="dismissModel()">Close</button>\r\n        </div>\r\n    </div>\r\n</ng-template>'},"xYn+":function(t,e,a){"use strict";a.r(e),e.default=".search-box {\n  flex-direction: column;\n  box-sizing: border-box;\n  display: flex;\n}\n\n.search-box .mat-form-field {\n  padding: 0 2em;\n}\n\n.new-label {\n  color: cadetblue;\n}\n\n.control-label {\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}\n\n.x_panel {\n  border: none;\n}"},xcvK:function(t,e,a){"use strict";a.r(e),e.default=".search-box {\n  flex-direction: column;\n  box-sizing: border-box;\n  display: flex;\n}\n\n.search-box .mat-form-field {\n  padding: 0 2em;\n}\n\n.new-label {\n  color: cadetblue;\n}\n\n.text-item {\n  width: 100%;\n  border-radius: 5px !important;\n  margin-left: 0px;\n}\n\n.control-label {\n  width: 175px !important;\n}"},xr4S:function(t,e,a){"use strict";a.d(e,"a",(function(){return n}));var n=function t(e,a,n,s,i,r,o,l,d,c,u,p){_classCallCheck(this,t),this.itemClassificationId=a,this.itemClassificationCode=n,this.description=i,this.itemType=s,this.masterCompanyId=r,this.createdBy=o,this.createdDate=l,this.updatedDate=d,this.updatedBy=c,this.masterCompany=e,this.isActive=u,this.memo=p}},y38n:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main">\r\n        <div class="x_panel">\r\n            <div class="x_content">\r\n                \x3c!-- <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="inline-block display-flex">\r\n                            <h3 class="po-head lead">Vendor Process 1099</h3>\r\n                            <a style="margin-left:5px;"\r\n                             class="plusicon-cstm new-margin" matTooltip="Add Vendor Process 1099"\r\n                              matTooltipPosition="above" \r\n                              (click)="resetVendorProcess1099Form()" \r\n                              data-target="#addVendorProcess1099" data-toggle="modal">\r\n                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                            </a>\r\n                        </div> --\x3e\r\n\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Vendor Process 1099</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="resetVendorProcess1099Form()" \r\n                                    data-target="#addVendorProcess1099" data-toggle="modal"\r\n                                  >\r\n                                  Add Vendor Process 1099\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                        \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                        [value]="vendorProcess1099Data" \r\n                        [first]="0" [rows]="pageSize" [paginator]="true" [pageLinks]="3" \r\n                        [rowsPerPageOptions]="[10,20,50,100]" \r\n                        [columns]="selectedColumns" \r\n                        selectionMode="multiple" \r\n                        [metaKeySelection]="true"\r\n                        (onPage)="changePage($event)" \r\n                        [resizableColumns]="true" \r\n                        [reorderableColumns]="true"  \r\n                        [totalRecords]="totalRecords" >\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                    <p-multiSelect [maxSelectedLabels]="2" [options]="vendorProcess1099Headers" optionLabel="header" [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left" (onChange)="columnsChanges()"></p-multiSelect>\r\n                                  \r\n                                                </div>\r\n                                                <div class="col">\r\n                                                  \r\n                                                      <div\r\n                                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                                      >\r\n                                                        <div class="form-group">\r\n                                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                                          <div\r\n                                                            class="pull-left"\r\n                                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                                          >\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>In-Active\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                                                <label class="radio-cstm wauto">\r\n                                                                    <input type="radio" name="EmpStatus" class="form-control" value="ALL" \r\n                                                                    (click)="getListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                                                    <span class="checkmark"></span>All\r\n                                                                </label>\r\n                                                            </div>\r\n                                                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                                  <label style="width: auto !important;margin-top: 3px;">\r\n                                                                    \x3c!--  --\x3e\r\n                                                                    <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" \r\n                                                                     (click)="getDeleteListByStatus($event.target.checked)"\r\n                                                                      />\r\n                                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                                  Show  Deleted List \r\n                                                                  </label>\r\n                                                                </div>\r\n                                        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="row">\r\n                                              <div class="col">\r\n                                        \r\n                                  \r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Data" matTooltipPosition="above" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export  Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary new-table-button"  style="padding: 5px 12px !important;" matTooltip="Download Selected Data" matTooltipPosition="above" pButton icon="fa-download"\r\n                                            iconPos="left" label="Export Selection Only" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n\r\n                                    <div class="excel-upload  excel-upload-cstm">\r\n\r\n                                        <input type="file" name="upload[]" id="upload" (change)="customExcelUpload($event)" class="uploaddoc upload-file"\r\n                                               accept=".xlsx, .xls, .csv">\r\n                                        <label for="upload">\r\n                                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                                <i class="fa fa-upload"></i>\r\n                                            </span>\r\n                                        </label>\r\n                                        &nbsp; &nbsp;\r\n\r\n                                         <button class="btn btn-primary"  style="padding: 5px 12px !important;" matTooltip="Download Sample File" matTooltipPosition="above" (click)="sampleExcelDownload()">Sample File Download</button> \r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </ng-template>\r\n\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky" *ngIf="selectedColumns.length> 0"> Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                    <td style="width:120px" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle data-toggle="modal" data-target="#view" (dblclick)="viewSelectedRow(rowData)">\r\n                                        {{\r\ncol.field == \'createdDate\'? (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'updatedDate\'?\r\n                                        (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]\r\n                                        }}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:200px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                        <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on" offLabel="off" (onChange)="changeStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n\r\n                                        <span data-toggle="modal" data-target="#view">\r\n                                            <a class="btn btn-info boxed-float-btn nobg" matTooltip="View" matTooltipPosition="above"  (click)="viewSelectedRow(rowData)" data-target="#view" data-toggle="modal">\r\n                                                <i class="fa fa-eye"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                       \r\n                                        <span data-target="#addVendorProcess1099" data-toggle="modal">\r\n                                            <a class="btn nobg" \r\n                                            (click)="editVendorProcess1099(rowData)" \r\n                                            matTooltip="Edit" \r\n                                            matTooltipPosition="above"><i class="fa fa-pencil">                          \r\n                                            </i></a> </span>\r\n                                       \r\n                                        \x3c!-- <button class="btn-edit" mat-icon-button (click)="editVendorProcess1099(rowData)" \r\n                                        data-target="#addVendorProcess1099" data-toggle="modal" matTooltip="Edit"\r\n                                         matTooltipPosition="above">\r\n                                            <mat-icon>edit</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n                                        <span data-target="#delete" data-toggle="modal"><a class="btn nobg" \r\n                                            (click)="delete(rowData)"\r\n                                            matTooltip="Delete"  matTooltipPosition="above">\r\n                                            <i class="fa fa-trash"></i></a> </span>\r\n                                       \r\n\r\n                                        \x3c!-- <button class="btn-delete" mat-icon-button matTooltip="Delete" \r\n                                        matTooltipPosition="above" data-target="#delete" data-toggle="modal"\r\n                                         (click)="delete(rowData)">\r\n                                            <mat-icon color="warn">delete</mat-icon>\r\n                                        </button> --\x3e\r\n\r\n\r\n                                        <span data-toggle="modal" data-target="#contentHist"><a class="btn nobg" \r\n                                            (click)="showAuditPopup(rowData)"\r\n                                             matTooltip="History"  matTooltipPosition="above">\r\n                                             <i class="fa fa-history"></i></a></span>\r\n\r\n                                        \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                         matTooltipPosition="above" data-toggle="modal" data-target="#contentHist"\r\n                                          (click)="showAuditPopup(rowData)">\r\n                                            <mat-icon color="green">history</mat-icon>\r\n                                        </button> --\x3e\r\n                                    </div>\r\n\r\n                                    <div *ngIf="currentDeletedstatus==true">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                        matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                       <span data-toggle="modal" data-target="#view"><a class="btn nobg" (click)="viewSelectedRow(rowData)" matTooltip="View"  matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                      <span ><a class="btn nobg" (click)="restore(restoreId,rowData);" matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                        \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n                                     \r\n                                    </div> \r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n\t\t\t\t\t\t\t\t<div class="audit-template-launcher">\r\n\t\t\t\t\t\t\t\t\t<warehouse-audit [Data]="AuditDetails" [Modal]="modal" *ngIf="HasAuditDetails"></warehouse-audit>\r\n\t\t\t\t\t\t\t\t\t<audit-no-history [Modal]="modal" [Title]="AuditHistoryTitle" *ngIf="!HasAuditDetails"></audit-no-history>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t\t<ng-template pTemplate="emptymessage" let-columns\r\n\t\t\t\t\t\t\t\t\t\t *ngIf="vendorProcess1099Data && vendorProcess1099Data.length == 0 || vendorProcess1099Data && vendorProcess1099Data.length ==null">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td [attr.colspan]="3" class="no-records-cstm">\r\n\t\t\t\t\t\t\t\t\t\tNo records found\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</ng-template>\r\n                            \r\n\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer1">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, pageSize)" [disabled]="true" pInputText type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div *ngIf="selectedRowforDelete" #delete id="delete" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <strong>\r\n                    Vendor Process1099:\r\n                    <span class="new-label">{{selectedRowforDelete.description}}</span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="deleteConformation(\'Yes\')">Yes</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="deleteConformation(\'No\')">No</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n       \r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Vendor Process 1099:\r\n            <span class="new-label">{{restorerecord.description}}</span>\r\n        </strong>\r\n    </div>\r\n  \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template>\r\n\r\n<div #addVendorProcess1099 id="addVendorProcess1099" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">{{isEdit ? \'Edit\' : \'Add\' }} Vendor Process 1099  </h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <form #VendorProcess1099="ngForm">\r\n                    <div class="form-group">\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">\r\n                                    1099 Name\r\n                                    <span class="clr-red">*</span>\r\n                                </label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <p-autoComplete field="description" [(ngModel)]="addNewVendorProcess1099.description" name="description"\r\n                                                [suggestions]="vendorProcess1099List" [size]="30" [minLength]="1" (completeMethod)="filterVendorProcess1099($event)" (onSelect)="selectedVendorProcess1099($event)" (onKeyUp)="checkVendorProcess1099nExists($event.target.value)"\r\n                                                [dropdown]="true" class="p-autoComplete-ctsm" required (ngModelChange)="getmemo()">\r\n\r\n                                </p-autoComplete>\r\n                                <div *ngIf="disableSaveForVendorProcess1099" class="clr-red">Already Exists</div>\r\n                                <div class="clear"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-sm-12">\r\n                            <div class="col-sm-4">\r\n                                <label for="description" class="control-label">Memo</label>\r\n                            </div>\r\n                            <div class="col-sm-5">\r\n                                <textarea class="text-item" #memo="ngModel" id="memo" name="memo" [(ngModel)]="addNewVendorProcess1099.memo"\r\n                                (ngModelChange)="getmemo()" minlength="2"></textarea>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="col-sm-6">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isActive" [(ngModel)]="addNewVendorProcess1099.isActive" (ngModelChange)="getmemo()">\r\n                                    <span class="cr">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Active\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button class="btn btn-primary" data-dismiss="modal" [disabled]="VendorProcess1099.invalid || disableSaveForVendorProcess1099 || disableSave" (click)="saveVendoProcess1099();"> {{isEdit ? \'Update\' : \'Save\' }}</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="resetVendorProcess1099Form()">Close</button>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n<div *ngIf="viewRowData" #view class="modal fade " id="view" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" id="" name="" (click)="resetViewData()">\xd7</button>\r\n                <h4 class="modal-title">Vendor Process 1099</h4>\r\n            </div>\r\n            <div class="modal-body viewform ">\r\n                <div class="col-sm-12">\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">1099 Name: </b>\r\n                        </span>\r\n                        <span class="value">{{ viewRowData.description}}</span>\r\n                    </p>\r\n\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">In Active:</b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.isActive === true ? \'Yes\' : \'No\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdBy }}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Created Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated By: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedBy}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Updated Date: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span>\r\n                    </p>\r\n                    <p>\r\n                        <span class="label ">\r\n                            <b class="view-Header">Memo: </b>\r\n                        </span>\r\n                        <span class="value">{{viewRowData.memo}}</span>\r\n                    </p>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="" (click)="resetViewData()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-xl">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">History of Vendor Process 1099</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="table-responsive  rro-table-cstm">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                \x3c!--<th>CCID</th>--\x3e\r\n                                <th>1099 Name</th>\r\n                                <th>Memo</th>\r\n                                <th>Last Updated By</th>\r\n                                <th>Last Updated Time</th>\r\n                                <th>Created By</th>\r\n                                <th>Created Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!--<td [ngStyle]="{\'color\': \'black\'}">{{audit.customerClassificationId}}</td>--\x3e\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'description\', audit.description)  ? \'black\' : \'red\'  }">{{audit.description}}</td>\r\n                                <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'memo\', audit.description)  ? \'black\' : \'red\'  }">{{audit.memo}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                                <td>{{audit.createdBy}}</td>\r\n                                <td>{{audit.createdDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            <img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n'},yBqz:function(t,e,a){"use strict";a.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n\t<div class="right_col" role="main">\r\n\t\t<div class="x_panel">\r\n\t\t\t<div class="x_content">\r\n\t\t\t\t\x3c!--<nav aria-label="breadcrumb">\r\n\t\t\t\t\t<ol class="breadcrumb">\r\n\t\t\t\t\t\t<li class="breadcrumb-item"><a routerLink="/">Dashboard</a></li>\r\n\t\t\t\t\t\t<li class="breadcrumb-item active" aria-current="page">Journal Approvals</li>\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</nav>--\x3e\r\n\t\t\t\t<h4 class="page-heading clr-green">Journal Approvals</h4>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>'},yJxn:function(t,e,a){"use strict";a.r(e),e.default=".search-box {\n  flex-direction: column;\n  box-sizing: border-box;\n  display: flex;\n}\n\n.search-box .mat-form-field {\n  padding: 0 2em;\n}"},zdKF:function(t,e,a){"use strict";a.r(e),e.default=".search-box {\n  flex-direction: column;\n  box-sizing: border-box;\n  display: flex;\n}\n\n.search-box .mat-form-field {\n  padding: 0 2em;\n}\n\n.new-label {\n  color: cadetblue;\n}\n\n.control-label {\n  margin-top: 5px;\n  text-align: left;\n  width: 100% !important;\n}\n\n.text-item {\n  width: 100%;\n  border-radius: 5px !important;\n  margin-left: 0px;\n}"},zrtZ:function(t,e,a){"use strict";a.r(e),e.default="control-label {\n  margin-top: 10px;\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n}\n\n.modal.assetattributetype .modal-body div.form-group label, .modal.assetattributetype label {\n  font-weight: normal;\n  width: 100%;\n  text-align: left;\n}\n\n.modal .modal-body.assetattributetype label {\n  font-weight: normal !important;\n  width: 100% !important;\n  text-align: left;\n  margin-top: 0;\n}\n\n.modal .modal-body.editdisposaltype .form-group {\n  margin-bottom: 10px;\n}"}}]);