(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{"04cS":function(t,e,r){"use strict";r.r(e),e.default='<div>\r\n\r\n    <div class="page-content">\r\n\r\n        <div class="right_col" role="main">\r\n            <div class="x_content">\r\n                <div class="card new-card">\r\n                    <div class="card-header bg-primary new-card-header">\r\n                        <div class="row">\r\n                            <div class="col">\r\n                                <h4 class="new-card-heading">List of Sales Order Quote settings</h4>\r\n                            </div>\r\n                            <div *ngIf="!disableCreateNewSettings">\r\n                                <button type="button" class="btn-sm new-btn-primary" (click)="AddPage()"\r\n                                    [disabled]="disableCreateNewSettings">\r\n                                    Create New Setting\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="card-body new-card-body">\r\n\r\n                        <p-table #dt [value]="soqSettingsList" class="rpo-table-cstm rro-table-cstm" [rows]="10"\r\n                            [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[10,20,50,100]"\r\n                            [columns]="selectedGridColumns" [metaKeySelection]="true" selectionMode="multiple"\r\n                            [metaKeySelection]="true" [scrollable]="true" scrollHeight="450px"\r\n                            [(selection)]="selectedGridColumn" [resizableColumns]="true" [reorderableColumns]="true">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n\r\n                                        <p-multiSelect [maxSelectedLabels]="2" [options]="gridColumns"\r\n                                            optionLabel="header" [(ngModel)]="selectedGridColumns"\r\n                                            [style]="{ minWidth: \'220px\' }" style="float:left"\r\n                                            (onChange)="columnsChanges()">\r\n                                        </p-multiSelect>\r\n\r\n                                    </div>\r\n                                    \x3c!-- <div class="col">\r\n\r\n                                    </div> --\x3e\r\n                                    <div class="col">\r\n                                        <div style="width: auto !important; float: right;"\r\n                                            class="inner-addon right-addon w50 inline-block g-filter-search-cstm">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" pInputText size="50" class="form-control"\r\n                                                (input)="globalSearch($event.target.value)" placeholder="Filter"\r\n                                                style="height: 28px !important;" />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                        <button type="button" class="btn btn-primary new-table-button"\r\n                                            matTooltip="Download Data" matTooltipPosition="above" pButton\r\n                                            icon="fa-download" iconPos="left" label="Export Data" data-toggle="modal"\r\n                                            (click)="selectedOnly = false; targetData = dt;"\r\n                                            data-target="#downloadConfirmation"></button>\r\n\r\n                                        \x3c!-- <button type="button" class="btn btn-primary new-table-button" pButton\r\n                                            icon="fa-download" iconPos="left"\r\n                                            style="left:-10px;padding: 5px 12px !important;" label="Export Data"\r\n                                            matTooltip="Download Data" matTooltipPosition="above"\r\n                                            (click)="dt.exportCSV()"></button> --\x3e\r\n                                        <button type="button" class="btn btn-primary new-table-button" pButton\r\n                                            icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                                            style="padding: 5px 12px !important;" matTooltip="Download Selected Data"\r\n                                            matTooltipPosition="above"\r\n                                            (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                \x3c!-- <div class="col">\r\n                                    <div class="col">\r\n                                        <button type="button" class="btn btn-primary new-table-button" pButton\r\n                                            icon="fa-download" iconPos="left"\r\n                                            style="left:-10px;padding: 5px 12px !important;" label="Export Data"\r\n                                            matTooltip="Download Data" matTooltipPosition="above"\r\n                                            (click)="dt.exportCSV()"></button>\r\n                                        <button type="button" class="btn btn-primary new-table-button" pButton\r\n                                            icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                                            style="padding: 5px 12px !important;" matTooltip="Download Selected Data"\r\n                                            matTooltipPosition="above"\r\n                                            (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n\r\n                                    </div>\r\n                                </div> --\x3e\r\n\r\n\r\n                            </ng-template>\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                    <col *ngFor="let col of columns" style="width:130px">\r\n                                </colgroup>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:auto" *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky">Actions</th>\r\n                                    \x3c!--<th></th>--\x3e\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                            (input)="dt.filter($event.target.value, col.field, col.filterMatchMode)">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openEdit(rowData)">\r\n                                    <td style="width:auto" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle>\r\n                                        <span *ngIf="col.field != \'validDays\'">\r\n                                            {{rowData[col.field]}}\r\n                                        </span>\r\n                                        <span *ngIf="col.field == \'validDays\'" style="float: right !important;">\r\n                                            {{rowData[col.field]}}\r\n                                        </span>\r\n\r\n                                    </td>\r\n                                    \x3c!-- <td style="text-align: right;" *ngIf="col.field == \'\'">\r\n                                        {{rowData[col.field]}}\r\n                                    </td> --\x3e\r\n\r\n                                    <td class="action-icons-cstm" style="width:200px">\r\n                                        <div>\r\n                                            <span>\r\n                                                <a class="btn nobg" (click)="edit(rowData)" matTooltip="Edit"\r\n                                                    matTooltipPosition="above">\r\n                                                    <i class="fa fa-pencil"></i>\r\n                                                </a>\r\n                                            </span>\r\n\r\n                                            <span>\r\n                                                <a class="btn nobg" (click)="openDelete(content,rowData)"\r\n                                                    matTooltip="Delete" matTooltipPosition="above">\r\n                                                    <i class="fa fa-trash"></i>\r\n                                                </a>\r\n                                            </span>\r\n                                            <span data-toggle="modal" data-target="#history">\r\n                                                <a class="btn nobg btn-hist-cstm" data-target="#history"\r\n                                                    (click)="getAuditHistoryById(rowData)" matTooltip="History"\r\n                                                    matTooltipPosition="above"><i class="fa fa-history"></i></a>\r\n                                            </span>\r\n                                            \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                                matTooltip="Edit" data-dismiss="modal">\r\n                                                <mat-icon>edit</mat-icon>\r\n                                            </button> --\x3e\r\n                                            \x3c!-- <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                                data-toggle="tooltip" matTooltipPosition="above" data-target="#history"\r\n                                                data-toggle="modal" (click)="getAuditHistoryById(rowData)">\r\n                                                <mat-icon color="green">history</mat-icon>\r\n                                            </button>\r\n                                            <button class="btn-delete" mat-icon-button\r\n                                                (click)="openDelete(content,rowData)" matTooltip="Delete"\r\n                                                data-dismiss="modal">\r\n                                                <mat-icon color="warn">delete</mat-icon>\r\n                                            </button> --\x3e\r\n                                        </div>\r\n                                        \x3c!--<span data-toggle="modal" data-target="#history">\r\n                            <a data-toggle="tooltip" matTooltipPosition="above" matTooltip="History" (click)="getAuditHistoryById(rowData)" tooltipPosition="bottom" title="" class="btn btn-success nobg" data-original-title="History">\r\n                                <i class="fa fa-history"></i>\r\n                            </a>\r\n                        </span>--\x3e\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText\r\n                                    type="text" />\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText\r\n                                    type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n                \x3c!-- </div> --\x3e\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <div class="modal fade bd-example-modal-xl" tabindex="-1" id="history" role="dialog"\r\n        aria-labelledby="myLargeModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-xl">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id=""\r\n                        name="">\xd7</button>\r\n                    <h4 class="modal-title">History of Sales order quote settings</h4>\r\n                </div>\r\n                <div class="modal-body" *ngIf="auditHistory">\r\n\r\n                    <table class="table table-bordered table-fixed wfl-table-popup-cstm"\r\n                        *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>SO Quote Type</th>\r\n                                <th>Prefix</th>\r\n                                <th>Suffix</th>\r\n                                <th>Start Code</th>\r\n                                <th>Status</th>\r\n                                <th>Priority</th>\r\n                                <th>Valid Days</th>\r\n                                <th>Last Updated By</th>\r\n                                <th>Last Updated Date</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody class="audithistory-cstm">\r\n                            \x3c!--*ngIf="auditHistory.length> 0"--\x3e\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td\r\n                                    [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'quoteTypeName\', audit.quoteTypeName)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.quoteTypeName}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'prefix\', audit.prefix)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.prefix}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'sufix\', audit.sufix)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.sufix}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'startCode\', audit.startCode)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.startCode}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'defaultStatusName\', audit.defaultStatusName)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.defaultStatusName}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'defaultPriorityName\', audit.defaultPriorityName)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.defaultPriorityName}}</td>\r\n                                <td style="text-align: right;"\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'validDays\', audit.validDays)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.validDays}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'updatedBy\', audit.updatedBy)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.updatedBy}}</td>\r\n\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-info" data-dismiss="modal" id="" name=""\r\n                        (click)="dismissModel()">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <ng-template #content let-c="close" let-d="dismiss">\r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n        </div>\r\n\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" (click)="deleteQuoteSetting()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n<div class="modal fade" id="downloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="closeModal()">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n            </div>\r\n            <div class="modal-body" *ngIf="targetData && !selectedOnly">\r\n                <strong>\r\n                    <span>\r\n                        You are attempting to export {{targetData.totalRecords}} of records.\r\n                    </span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary"\r\n                    (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):exportCSV(targetData); closeModal();">Confirm</button>\r\n                <button type="button" class="btn btn-danger" (click)="closeModal()">Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},"7iNC":function(t,e,r){"use strict";r.r(e),e.default='<div class="card">\r\n    <div class="card new-card">\r\n        <div class="card-header bg-primary">\r\n            <div class="row">\r\n                <div class="col">\r\n                    <h4 class="new-card-heading">{{isEditMode ? \'Edit\' : \'Create\'}} Sales Order Settings</h4>\r\n                </div>\r\n                <div>\r\n\r\n                    <button type="button" class="btn-sm new-btn-primary" [routerLink]="[\r\n                \'/salesordersettingsmodule/salesordersettings/app-sales-order-settings-list\'\r\n                ]">\r\n                        Sales Order Settings List\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="card-body">\r\n            <form #soQuoteSettingsForm="ngForm">\r\n                <h4 class="head_lis">Sales Order Listing</h4>\r\n                <div class="form-row">\r\n                    <div class="col-md-12">\r\n                        <div class="col-md-3 work_order_teardown">\r\n                            <div class="form-group">\r\n                                <label>SO List View <span class="text-danger">*</span></label>\r\n                                <p-dropdown name="company1" #wocompanyId="ngModel" required\r\n                                    [options]="salesOrderViewList" placeholder="Select SO List View"\r\n                                    class="p-dropdown-custom-md-2" [(ngModel)]="receivingForm.soListViewId">\r\n                                </p-dropdown>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3 work_order_teardown">\r\n                            <div class="form-group">\r\n                                <label>SO List Status <span class="text-danger">*</span></label>\r\n                                <p-dropdown name="company12" #wocompanyId1="ngModel" required\r\n                                    [options]="salesOrderStatusList" placeholder="Select SO List Status"\r\n                                    class="p-dropdown-custom-md-2" [(ngModel)]="receivingForm.soListStatusId">\r\n                                </p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <hr>\r\n        <div class="card-body">\r\n            <h4 class="head_lis">Sales Order</h4>\r\n            <form #soQuoteSettingsForm="ngForm">\r\n                <div class="form-row">\r\n                    <div class="col-md-12">\r\n                        <div class="col-md-3 work_order_teardown">\r\n                            <div class="form-group">\r\n                                <label>SO Type <span class="clr-red">*</span></label>\r\n                                <p-dropdown name="typeId" #typeId="ngModel" required [options]="salesOrderTypes"\r\n                                    placeholder="Select SO Type" class="p-dropdown-custom-md-2"\r\n                                    [(ngModel)]="receivingForm.typeId">\r\n                                </p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <div class="form-group">\r\n                                <label>Prefix</label>\r\n                                <input type="text" name="prefix" class="form-control ui-autocomplete-input"\r\n                                    [(ngModel)]="receivingForm.prefix" required>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <div class="form-group">\r\n                                <label>Sufix</label>\r\n                                <input type="text" name="sufix" class="form-control ui-autocomplete-input"\r\n                                    [(ngModel)]="receivingForm.sufix">\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <div class="form-group">\r\n                                <label> Start Code</label>\r\n                                <input type="number" name="startCode" class="form-control ui-autocomplete-input"\r\n                                    [(ngModel)]="receivingForm.startCode" required>\r\n                                \x3c!-- <input type="text" name="startCode" class="form-control ui-autocomplete-input"\r\n                                    [(ngModel)]="receivingForm.startCode" required> --\x3e\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-12">\r\n                        <div class="col-md-3 work_order_teardown">\r\n                            <div class="form-group">\r\n                                <label>Priority <span class="clr-red">*</span></label>\r\n                                <p-dropdown name="company12" #company12="ngModel" required\r\n                                    [options]="salesOrderPriorityList" placeholder="Select SO List Priority"\r\n                                    class="p-dropdown-custom-md-2" [(ngModel)]="receivingForm.defaultPriorityId">\r\n                                </p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3 work_order_teardown">\r\n                            <div class="form-group">\r\n                                <label>SOQ Status <span class="clr-red">*</span></label>\r\n                                <p-dropdown name="company1" #company1="ngModel" required\r\n                                    [options]="salesOrderStatusList" placeholder="Select SO List Status"\r\n                                    class="p-dropdown-custom-md-2" [(ngModel)]="receivingForm.defaultStatusId">\r\n                                </p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3 work_order_teardown" style="padding-top:12px;">\r\n                            <div class="form-group">\r\n\r\n                                <p-checkbox name="isApprovalRule" binary="true"\r\n                                    [(ngModel)]="receivingForm.isApprovalRule">\r\n                                </p-checkbox>\r\n                                <label style="padding-left:10px;">Apply Approval Rule\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div class="form-row pull-right m-t-10">\r\n                    <button type="submit" class="btn btn-primary" (click)="saveOrUpdateSOSetting()"\r\n                        [disabled]="!soQuoteSettingsForm.valid">{{isEditMode ? \'Update\' : \'Save\'}}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n    <ng-template #errorMessagePop let-c="close" let-d="dismiss">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" data-dismiss="modal" (click)="closeErrorMessage()">&times;</button>\r\n            <h4 class="modal-title"> Please Enter (*) Mandatory Fields</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p *ngFor="let error of errorMessages" [ngStyle]="{\'color\':\'red\'}"> {{ error }} </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                (click)="closeErrorMessage()">Close</button>\r\n        </div>\r\n    </ng-template>\r\n    <div class="preloader" *ngIf="isSpinnerVisible">\r\n        <div class="loading">\r\n            <div class="lds-roller">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    </div>'},KkxB:function(t,e,r){"use strict";r.r(e),e.default=""},LGij:function(t,e,r){"use strict";r.r(e);var i=r("mrSG"),s=r("8Y7J"),n=r("u9T3"),a=r("s7LF"),o=r("TSSN"),l=r("1+r1"),d=r("UPO+"),c=r("iInd");let p=class{constructor(){}};p=i.b([Object(s.Component)({selector:"app-sales-order-settings",template:i.c(r("ma4T")).default,styles:[i.c(r("KkxB")).default]})],p);var u=r("3LUQ"),m=r("G0yt"),h=r("lGQG"),g=r("0zL+"),v=r("OlR4"),b=r("XNiG"),y=r("SVse"),S=r("Q3MU"),f=r("biEC"),w=r("kNA5");let x=class{constructor(t,e,r,i,s,n,a){this.router=t,this.salesQuoteService=e,this.alertService=r,this.customerService=i,this.authService=s,this.commonservice=n,this.modalService=a,this.accountTypes=[],this.receivingForm=new f.a,this.salesOrderStatusList=[],this.salesOrderPriorityList=[],this.isEditMode=!1,this.onDestroy$=new b.a,this.breadcrumbs=[{label:"Admin"},{label:"SO Quote Settings"},{label:"Create SO Quote Settings"}],this.moduleName="SO Quote Settings",this.allSettings=[],this.isSpinnerVisible=!1,this.disableSave=!0,this.errorMessages=[],this.salesOrderViewList=[{label:"PN View",value:1},{label:"SOQ View",value:2}]}ngOnInit(){this.salesQuoteService.isEditSOQuoteSettingsList&&(this.isEditMode=!0,this.receivingForm=this.salesQuoteService.soQuoteSettingsData),this.getInitialData()}get masterCompanyId(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:1}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}getAccountTypes(){this.customerService.getCustomerTypes().subscribe(t=>{this.accountTypes=t[0]})}getInitialData(){let t=this.receivingForm.quoteTypeId?this.receivingForm.quoteTypeId:0,e=this.receivingForm.defaultStatusId?this.receivingForm.defaultStatusId:0,r=this.receivingForm.defaultPriorityId?this.receivingForm.defaultPriorityId:0,i=this.receivingForm.soqListStatusId?this.receivingForm.soqListStatusId:0;this.isSpinnerVisible=!0,Object(w.a)(this.commonservice.autoSuggestionSmartDropDownList("MasterSalesOrderQuoteTypes","Id","Description","",!0,100,[t].join()),this.commonservice.autoSuggestionSmartDropDownList("MasterSalesOrderQuoteStatus","Id","Name","",!0,100,[e,i].join()),this.commonservice.autoSuggestionSmartDropDownList("Priority","PriorityId","Description","",!0,100,[r].join())).subscribe(t=>{this.isSpinnerVisible=!1,this.salesOrderTypes=t[0],this.salesOrderStatusList=t[1],this.salesOrderPriorityList=t[2]},t=>{this.isSpinnerVisible=!1;const e=t;this.onDataLoadFailed(e)})}getAllsalesOrderTypes(){this.commonservice.smartDropDownList("MasterSalesOrderQuoteTypes","Id","Description").subscribe(t=>{this.salesOrderTypes=t[0]},t=>{this.isSpinnerVisible=!1;const e=t;this.onDataLoadFailed(e)})}saveOrUpdateSOQuoteSetting(){if(this.validateSettings()){let t=this.errorMessagePop;this.errorModal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.errorModal.result.then(()=>{},()=>{})}else this.isEditMode||this.receivingForm.createdDate.toDateString(),this.receivingForm.createdDate=new Date,this.receivingForm.updatedDate=new Date,this.receivingForm.updatedDate.toDateString(),this.receivingForm.createdBy=this.userName,this.receivingForm.updatedBy=this.userName,this.receivingForm.masterCompanyId=Number(this.masterCompanyId),this.salesQuoteService.saveOrUpdateSOQuoteSetting(this.receivingForm).subscribe(t=>{this.alertService.showMessage(this.moduleName,`Setting ${this.isEditMode?"updated":"created"} successfully`,u.d.success),this.router.navigateByUrl("/salesordersettingsmodule/salesordersettings/app-sales-quote-settings-list")},t=>{this.isSpinnerVisible=!1;const e=t;this.onDataLoadFailed(e)})}closeErrorMessage(){this.errorModal.close()}validateSettings(){this.errorMessages=[];let t=!1;return this.receivingForm.soqListViewId<=0&&(this.errorMessages.push("Please select SO List View"),t=!0),this.receivingForm.soqListStatusId<=0&&(this.errorMessages.push("Please select SO List Status "),t=!0),this.receivingForm.quoteTypeId<=0&&(this.errorMessages.push("Please select SO Type"),t=!0),this.receivingForm.prefix||(this.errorMessages.push("Please enter Prefix"),t=!0),this.receivingForm.startCode||(this.errorMessages.push("Please enter Start Code"),t=!0),(!this.receivingForm.validDays||this.receivingForm.validDays<=0)&&(this.errorMessages.push("Please enter Valid Days"),t=!0),this.receivingForm.defaultPriorityId<=0&&(this.errorMessages.push("Please select Priority"),t=!0),this.receivingForm.defaultStatusId<=0&&(this.errorMessages.push("Please select SOQ Status"),t=!0),t}onDataLoadFailed(t){const e=t;var r="";if(e.message){if(e.error&&e.error.errors.length>0)for(let t=0;t<e.error.errors.length;t++)r=r+e.error.errors[t].message+"<br/>";this.alertService.showMessage(e.error.message,r,u.d.error)}else this.alertService.showMessage("Error",t.error,u.d.error)}};x.ctorParameters=()=>[{type:c.Router},{type:S.a},{type:u.b},{type:g.a},{type:h.a},{type:v.a},{type:m.c}],i.b([Object(s.ViewChild)("errorMessagePop",{static:!1})],x.prototype,"errorMessagePop",void 0),x=i.b([Object(s.Component)({selector:"app-create-sales-quote-settings",template:i.c(r("fr2d")).default,providers:[y.DatePipe],styles:[i.c(r("xW/X")).default]})],x);var M=r("1G5W"),O=r("EVdn");let C=class{constructor(t,e,r,i,s,n,a,o){this.router=t,this.customerService=e,this.salesQuoteService=r,this.alertService=i,this.authService=s,this.modalService=n,this.route=a,this.datePipe=o,this.title="SO Quote settings",this.soqSettingsList=[],this.auditHistory=[],this.isSpinnerVisible=!1,this.onDestroy$=new b.a,this.disableCreateNewSettings=!1,this.selectedOnly=!1,this.selectedGridColumns=[{field:"quoteTypeName",header:"SOQ Type"},{field:"prefix",header:"Prefix"},{field:"sufix",header:"Suffix"},{field:"startCode",header:"Start Code"},{field:"defaultStatusName",header:"SOQ Status"},{field:"defaultPriorityName",header:"Priority"},{field:"validDays",header:"Valid Days"}],this.gridColumns=[{field:"quoteTypeName",header:"SOQ Type"},{field:"prefix",header:"Prefix"},{field:"sufix",header:"Suffix"},{field:"startCode",header:"Start Code"},{field:"defaultStatusName",header:"SOQ Status"},{field:"defaultPriorityName",header:"Priority"},{field:"validDays",header:"Valid Days"}],this.pageSize=10,this.pageIndex=0,this.first=0,this.totalRecords=0,this.totalPages=0}ngOnInit(){this.selectedGridColumns=this.gridColumns,this.getAllSOQuoteSettings()}ngOnChange(){}columnsChanges(){}globalSearch(t){this.pageIndex=0,this.filteredText=t,this.customerService.getGlobalSearch(t,this.pageIndex,this.pageSize).subscribe(t=>{this.data=t,t.length>0&&(this.totalRecords=t[0].totalRecords,this.totalPages=Math.ceil(this.totalRecords/this.pageSize))})}closeModal(){O("#downloadConfirmation").modal("hide")}getAuditHistoryById(t){this.isSpinnerVisible=!0,this.salesQuoteService.getSOQuoteSettingHistory(t.salesOrderQuoteSettingId).subscribe(t=>{this.isSpinnerVisible=!1,this.auditHistory=t},t=>{this.isSpinnerVisible=!1})}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}edit(t){this.salesQuoteService.isEditSOQuoteSettingsList=!0;let e=this.soqSettingsList.find(e=>e.accountTypeId==t.accountTypeId);this.salesQuoteService.soQuoteSettingsData=e,this.route.navigateByUrl("salesordersettingsmodule/salesordersettings/app-create-sales-quote-settings")}deleteQuoteSetting(){this.isSpinnerVisible=!0,this.salesQuoteService.deleteSoqSetting(this.selected,this.userName).subscribe(t=>{this.isSpinnerVisible=!1,this.dismissModel(),this.getAllSOQuoteSettings(),this.salesQuoteService.soQuoteSettingsData=new f.a,this.alertService.showMessage("SO Quote Settings","Succesfully deleted setting",u.d.success)},t=>{this.isSpinnerVisible=!1,this.dismissModel(),this.alertService.showMessage("SO Quote Settings",t,u.d.error)})}getColorCodeForHistory(t,e,r){const i=this.auditHistory,s=i.length;if(t>=0&&t<=s)return t+1===s||i[t+1][e]===r}getAllSOQuoteSettings(){this.isSpinnerVisible=!0,this.salesQuoteService.getAllSalesOrderQuoteSettings().pipe(Object(M.a)(this.onDestroy$)).subscribe(t=>{this.isSpinnerVisible=!1;let e=t;this.soqSettingsList=e,e&&e.length>0?(this.totalRecords=e.length,this.disableCreateNewSettings=!0):(this.totalRecords=0,this.disableCreateNewSettings=!1),this.totalPages=Math.ceil(this.totalRecords/this.pageSize)},t=>{this.isSpinnerVisible=!1})}dismissModel(){null!=this.modal&&this.modal.close()}AddPage(){this.route.navigateByUrl("/salesordersettingsmodule/salesordersettings/app-create-sales-quote-settings")}openEdit(t){this.route.navigateByUrl("/salesordersettingsmodule/salesordersettings/app-create-sales-quote-settings")}openDelete(t,e){this.selected=e.salesOrderQuoteSettingId,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}exportCSV(t){this.isSpinnerVisible=!0,this.salesQuoteService.getAllSalesOrderQuoteSettings().subscribe(e=>{const r=e.map(t=>Object.assign({},t,{createdDate:t.createdDate?this.datePipe.transform(t.createdDate,"MMM-dd-yyyy hh:mm a"):""}));t._value=r,t.exportCSV(),t.value=this.soqSettingsList,this.isSpinnerVisible=!1},t=>{this.isSpinnerVisible=!1;const e=t;this.onDataLoadFailed(e)})}onDataLoadFailed(t){const e=t;var r="";if(e.message){if(e.error&&e.error.errors.length>0)for(let t=0;t<e.error.errors.length;t++)r=r+e.error.errors[t].message+"<br/>";this.alertService.showMessage(e.error.message,r,u.d.error)}else this.alertService.showMessage("Error",t.error,u.d.error)}};C.ctorParameters=()=>[{type:c.ActivatedRoute},{type:g.a},{type:S.a},{type:u.b},{type:h.a},{type:m.c},{type:c.Router},{type:y.DatePipe}],C=i.b([Object(s.Component)({selector:"app-sales-quote-settings-list",template:i.c(r("04cS")).default,encapsulation:s.ViewEncapsulation.None,styles:[i.c(r("rN/+")).default]})],C);var D=r("MKys"),P=r("qT9Z");let F=class{constructor(t,e,r,i,s,n,a,o){this.router=t,this.salesQuoteService=e,this.salesOrderService=r,this.alertService=i,this.customerService=s,this.authService=n,this.commonservice=a,this.modalService=o,this.accountTypes=[],this.receivingForm=new f.b,this.isEditMode=!1,this.onDestroy$=new b.a,this.breadcrumbs=[{label:"Admin"},{label:"SO  Settings"},{label:"Create SO Settings"}],this.salesOrderStatusList=[],this.salesOrderPriorityList=[],this.salesOrderViewList=[{label:"PN View",value:1},{label:"SO View",value:2}],this.moduleName="SO Settings",this.allSettings=[],this.isSpinnerVisible=!1,this.disableSave=!0,this.errorMessages=[]}ngOnInit(){this.salesOrderService.isEditSOSettingsList&&(this.isEditMode=!0,this.receivingForm=this.salesOrderService.soSettingsData),this.getInitialData()}get masterCompanyId(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:1}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}getAccountTypes(){this.customerService.getCustomerTypes().subscribe(t=>{this.accountTypes=t[0]})}getInitialData(){let t=this.receivingForm.typeId?this.receivingForm.typeId:0,e=this.receivingForm.defaultStatusId?this.receivingForm.defaultStatusId:0,r=this.receivingForm.defaultPriorityId?this.receivingForm.defaultPriorityId:0,i=this.receivingForm.soListStatusId?this.receivingForm.soListStatusId:0;this.isSpinnerVisible=!0,Object(w.a)(this.commonservice.autoSuggestionSmartDropDownList("MasterSalesOrderQuoteTypes","Id","Description","",!0,100,[t].join()),this.commonservice.autoSuggestionSmartDropDownList("MasterSalesOrderQuoteStatus","Id","Name","",!0,100,[e,i].join()),this.commonservice.autoSuggestionSmartDropDownList("Priority","PriorityId","Description","",!0,100,[r].join())).subscribe(t=>{this.isSpinnerVisible=!1,this.salesOrderTypes=t[0],this.salesOrderStatusList=t[1],this.salesOrderPriorityList=t[2]},t=>{this.isSpinnerVisible=!1;const e=t;this.onDataLoadFailed(e)})}getAllsalesOrderTypes(){this.commonservice.smartDropDownList("MasterSalesOrderQuoteTypes","Id","Description").subscribe(t=>{this.salesOrderTypes=t[0]},t=>{this.isSpinnerVisible=!1;const e=t;this.onDataLoadFailed(e)})}saveOrUpdateSOSetting(){if(this.validateSettings()){let t=this.errorMessagePop;this.errorModal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.errorModal.result.then(()=>{},()=>{})}else this.isEditMode?this.receivingForm.createdDate=new Date:this.receivingForm.createdDate.toDateString(),this.receivingForm.updatedDate=new Date,this.receivingForm.updatedDate.toDateString(),this.receivingForm.createdBy=this.userName,this.receivingForm.updatedBy=this.userName,this.receivingForm.masterCompanyId=Number(this.masterCompanyId),this.salesOrderService.saveOrUpdateSOSetting(this.receivingForm).subscribe(t=>{this.alertService.showMessage(this.moduleName,`Setting ${this.isEditMode?"updated":"created"} successfully`,u.d.success),this.router.navigateByUrl("/salesordersettingsmodule/salesordersettings/app-sales-order-settings-list")},t=>{this.isSpinnerVisible=!1;const e=t;this.onDataLoadFailed(e)})}closeErrorMessage(){this.errorModal.close()}validateSettings(){this.errorMessages=[];let t=!1;return this.receivingForm.soListViewId<=0&&(this.errorMessages.push("Please select SO List View"),t=!0),this.receivingForm.soListStatusId<=0&&(this.errorMessages.push("Please select SO List Status "),t=!0),this.receivingForm.typeId<=0&&(this.errorMessages.push("Please select SO Type"),t=!0),this.receivingForm.prefix||(this.errorMessages.push("Please enter Prefix"),t=!0),this.receivingForm.startCode||(this.errorMessages.push("Please enter Start Code"),t=!0),this.receivingForm.defaultPriorityId<=0&&(this.errorMessages.push("Please select Priority"),t=!0),this.receivingForm.defaultStatusId<=0&&(this.errorMessages.push("Please select SO Status"),t=!0),t}onDataLoadFailed(t){const e=t;var r="";if(e.message){if(e.error&&e.error.errors.length>0)for(let t=0;t<e.error.errors.length;t++)r=r+e.error.errors[t].message+"<br/>";this.alertService.showMessage(e.error.message,r,u.d.error)}else this.alertService.showMessage("Error",t.error,u.d.error)}};F.ctorParameters=()=>[{type:c.Router},{type:S.a},{type:P.a},{type:u.b},{type:g.a},{type:h.a},{type:v.a},{type:m.c}],i.b([Object(s.ViewChild)("errorMessagePop",{static:!1})],F.prototype,"errorMessagePop",void 0),F=i.b([Object(s.Component)({selector:"app-create-sales-order-settings",template:i.c(r("7iNC")).default,providers:[y.DatePipe],styles:[i.c(r("vE4K")).default]})],F);let I=class{constructor(t,e,r,i,s,n,a,o,l){this.router=t,this.customerService=e,this.salesQuoteService=r,this.salesOrderService=i,this.alertService=s,this.modalService=n,this.authService=a,this.route=o,this.datePipe=l,this.title="SO settings",this.soqSettingsList=[],this.auditHistory=[],this.isSpinnerVisible=!1,this.onDestroy$=new b.a,this.disableCreateNewSettings=!1,this.selectedGridColumns=[{field:"typeName",header:"SO Type"},{field:"prefix",header:"Prefix"},{field:"sufix",header:"Suffix"},{field:"startCode",header:"Start Code"},{field:"defaultStatusName",header:"SO Status"},{field:"defaultPriorityName",header:"Priority"}],this.gridColumns=[{field:"typeName",header:"SO Type"},{field:"prefix",header:"Prefix"},{field:"sufix",header:"Suffix"},{field:"startCode",header:"Start Code"},{field:"defaultStatusName",header:"SO Status"},{field:"defaultPriorityName",header:"Priority"}],this.pageSize=10,this.pageIndex=0,this.first=0,this.totalRecords=0,this.totalPages=0,this.selectedOnly=!1}ngOnInit(){this.selectedGridColumns=this.gridColumns,this.getAllSOSettings()}closeModal(){O("#downloadConfirmation").modal("hide")}ngOnChange(){}columnsChanges(){}globalSearch(t){this.pageIndex=0,this.filteredText=t,this.customerService.getGlobalSearch(t,this.pageIndex,this.pageSize).subscribe(t=>{this.data=t,t.length>0&&(this.totalRecords=t[0].totalRecords,this.totalPages=Math.ceil(this.totalRecords/this.pageSize))})}getAuditHistoryById(t){this.isSpinnerVisible=!0,this.salesOrderService.getSOSettingHistory(t.salesOrderSettingId).subscribe(t=>{this.isSpinnerVisible=!1,this.auditHistory=t},t=>{this.isSpinnerVisible=!1})}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}edit(t){this.salesOrderService.isEditSOSettingsList=!0;let e=this.soqSettingsList.find(e=>e.accountTypeId==t.accountTypeId);this.salesOrderService.soSettingsData=e,this.route.navigateByUrl("salesordersettingsmodule/salesordersettings/app-create-sales-order-settings")}deleteSettings(){this.isSpinnerVisible=!0,this.salesOrderService.deleteSoSetting(this.selected,this.userName).subscribe(t=>{this.isSpinnerVisible=!1,this.getAllSOSettings(),this.dismissModel(),this.salesOrderService.soSettingsData=new f.b,this.alertService.showMessage("SO Settings","Succesfully deleted setting",u.d.success)},t=>{this.dismissModel(),this.isSpinnerVisible=!1,this.alertService.showMessage("SO Settings",t,u.d.error)})}getColorCodeForHistory(t,e,r){const i=this.auditHistory,s=i.length;if(t>=0&&t<=s)return t+1===s||i[t+1][e]===r}getAllSOSettings(){this.isSpinnerVisible=!0,this.salesOrderService.getAllSalesOrderSettings().pipe(Object(M.a)(this.onDestroy$)).subscribe(t=>{this.isSpinnerVisible=!1;let e=t;this.soqSettingsList=e,e&&e.length>0?(this.totalRecords=e.length,this.disableCreateNewSettings=!0):(this.totalRecords=0,this.disableCreateNewSettings=!1),this.totalPages=Math.ceil(this.totalRecords/this.pageSize)},t=>{this.isSpinnerVisible=!1})}dismissModel(){null!=this.modal&&this.modal.close()}AddPage(){this.route.navigateByUrl("/salesordersettingsmodule/salesordersettings/app-create-sales-order-settings")}openEdit(t){this.route.navigateByUrl("/salesordersettingsmodule/salesordersettings/app-create-sales-order-settings")}openDelete(t,e){this.selected=e.salesOrderSettingId,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}exportCSV(t){this.isSpinnerVisible=!0,this.salesOrderService.getAllSalesOrderSettings().subscribe(e=>{const r=e.map(t=>Object.assign({},t,{createdDate:t.createdDate?this.datePipe.transform(t.createdDate,"MMM-dd-yyyy hh:mm a"):""}));t._value=r,t.exportCSV(),t.value=this.soqSettingsList,this.isSpinnerVisible=!1},t=>{this.isSpinnerVisible=!1;const e=t;this.onDataLoadFailed(e)})}onDataLoadFailed(t){const e=t;var r="";if(e.message){if(e.error&&e.error.errors.length>0)for(let t=0;t<e.error.errors.length;t++)r=r+e.error.errors[t].message+"<br/>";this.alertService.showMessage(e.error.message,r,u.d.error)}else this.alertService.showMessage("Error",t.error,u.d.error)}};I.ctorParameters=()=>[{type:c.ActivatedRoute},{type:g.a},{type:S.a},{type:P.a},{type:u.b},{type:m.c},{type:h.a},{type:c.Router},{type:y.DatePipe}],I=i.b([Object(s.Component)({selector:"app-sales-order-settings-list",template:i.c(r("a/p3")).default,encapsulation:s.ViewEncapsulation.None,styles:[i.c(r("W617")).default]})],I);const T=[{path:"salesordersettings",component:p,children:[{path:"app-create-sales-quote-settings",component:x,data:{title:"Create SO Quote Settings"}},{path:"app-sales-quote-settings-list",component:C,data:{title:"Sales Quote Settings List"}},{path:"app-create-sales-order-settings",component:F,data:{title:"Create Sales Order Settings"}},{path:"app-sales-order-settings-list",component:I,data:{title:"SO Settings List"}}]}];let k=class{};k=i.b([Object(s.NgModule)({imports:[c.RouterModule.forChild(T)],exports:[c.RouterModule],providers:[h.a,D.a]})],k);var L=r("8YFm"),V=r("MCl+"),N=r("CYTX"),Q=r("bv+N"),H=r("Jfay"),q=r("I0ai"),E=r("3/N/"),R=r("sa3O"),A=r("ByPc"),B=r("NGzr"),U=r("FfGd"),_=r("ldMm"),z=r("wB/n"),G=r("UUzU"),j=r("HC/r"),W=r("AkAD"),$=r("7LN8"),Y=r("dLo5"),K=r("P7KQ"),J=r("JSGv"),X=r("IheW"),Z=r("1bHX"),tt=r("ix9C");r.d(e,"SalesOrderSettingsModule",(function(){return et}));let et=class{};et=i.b([Object(s.NgModule)({imports:[K.CardModule,J.PanelMenuModule,X.HttpClientModule,$.SharedModule,W.BreadcrumbModule,Y.DropdownModule,n.a,a.FormsModule,a.ReactiveFormsModule,l.a,o.b,y.CommonModule,L.TableModule,V.ButtonModule,N.SelectButtonModule,Q.InputTextModule,H.MultiSelectModule,k,q.InputSwitchModule,E.CheckboxModule,R.AutoCompleteModule,Z.CalendarModule,A.GMapModule,U.RadioButtonModule,B.FileUploadModule,_.TreeTableModule,z.TreeModule,d.a],declarations:[p,x,C,I,F],providers:[G.a,j.a,S.a,tt.a,y.DatePipe],entryComponents:[]})],et)},W617:function(t,e,r){"use strict";r.r(e),e.default=""},"a/p3":function(t,e,r){"use strict";r.r(e),e.default='<div>\r\n\r\n    <div class="page-content">\r\n\r\n        <div class="right_col" role="main">\r\n            <div class="x_content">\r\n                <div class="card new-card">\r\n                    <div class="card-header bg-primary new-card-header">\r\n                        <div class="row">\r\n                            <div class="col">\r\n                                <h4 class="new-card-heading">List of Sales Order settings</h4>\r\n                            </div>\r\n                            <div *ngIf="!disableCreateNewSettings">\r\n                                <button type="button" class="btn-sm new-btn-primary" (click)="AddPage()"\r\n                                    [disabled]="disableCreateNewSettings">\r\n                                    Create New Setting\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="card-body new-card-body">\r\n\r\n                        <p-table #dt [value]="soqSettingsList" class="rpo-table-cstm rro-table-cstm" [rows]="10"\r\n                            [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[10,20,50,100]"\r\n                            [columns]="selectedGridColumns" [metaKeySelection]="true" selectionMode="multiple"\r\n                            [metaKeySelection]="true" [scrollable]="true" scrollHeight="450px"\r\n                            [(selection)]="selectedGridColumn" [resizableColumns]="true" [reorderableColumns]="true">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n\r\n                                        <p-multiSelect [maxSelectedLabels]="2" [options]="gridColumns"\r\n                                            optionLabel="header" [(ngModel)]="selectedGridColumns"\r\n                                            [style]="{ minWidth: \'220px\' }" style="float:left"\r\n                                            (onChange)="columnsChanges()">\r\n                                        </p-multiSelect>\r\n                                    </div>\r\n                                    <div class="col">\r\n                                        <div style="width: auto !important; float: right;"\r\n                                            class="inner-addon right-addon w50 inline-block g-filter-search-cstm">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" pInputText size="50" class="form-control"\r\n                                                (input)="globalSearch($event.target.value)" placeholder="Filter"\r\n                                                style="height: 28px !important;" />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                        <button type="button" class="btn btn-primary new-table-button"\r\n                                            matTooltip="Download Data" matTooltipPosition="above" pButton\r\n                                            icon="fa-download" iconPos="left" label="Export Data" data-toggle="modal"\r\n                                            (click)="selectedOnly = false; targetData = dt;"\r\n                                            data-target="#downloadConfirmation"></button>\r\n\r\n                                        \x3c!-- <button type="button" class="btn btn-primary new-table-button" pButton\r\n                                        icon="fa-download" iconPos="left"\r\n                                        style="left:-10px;padding: 5px 12px !important;" label="Export Data"\r\n                                        matTooltip="Download Data" matTooltipPosition="above"\r\n                                        (click)="dt.exportCSV()"></button> --\x3e\r\n                                        <button type="button" class="btn btn-primary new-table-button" pButton\r\n                                            icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                                            style="padding: 5px 12px !important;" matTooltip="Download Selected Data"\r\n                                            matTooltipPosition="above"\r\n                                            (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                            </ng-template>\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                    <col *ngFor="let col of columns" style="width:130px">\r\n                                </colgroup>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns>\r\n                                <tr>\r\n                                    <th style="width:auto" *ngFor="let col of columns" pResizableColumn\r\n                                        pReorderableColumn [pSortableColumn]="col.field">\r\n                                        {{col.header}}\r\n                                        <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky">Actions</th>\r\n                                    \x3c!--<th></th>--\x3e\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text"\r\n                                            (input)="dt.filter($event.target.value, col.field, col.filterMatchMode)">\r\n                                    </th>\r\n                                    <th style="width:200px;position:sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openEdit(rowData)">\r\n                                    <td style="width:auto" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle>\r\n                                        <span>\r\n                                            {{rowData[col.field]}}\r\n                                        </span>\r\n                                        \x3c!-- <span *ngIf="col.field == \'validDays\'" style="float: right !important;">\r\n                                            {{rowData[col.field]}}\r\n                                        </span> --\x3e\r\n\r\n                                    </td>\r\n                                    \x3c!-- <td style="text-align: right;" *ngIf="col.field == \'\'">\r\n                                        {{rowData[col.field]}}\r\n                                    </td> --\x3e\r\n\r\n                                    <td class="action-icons-cstm" style="width:200px">\r\n                                        <div>\r\n\r\n                                            <span>\r\n                                                <a class="btn nobg" (click)="edit(rowData)" matTooltip="Edit"\r\n                                                    matTooltipPosition="above">\r\n                                                    <i class="fa fa-pencil"></i>\r\n                                                </a>\r\n                                            </span>\r\n\r\n                                            <span>\r\n                                                <a class="btn nobg" (click)="openDelete(content,rowData)"\r\n                                                    matTooltip="Delete" matTooltipPosition="above">\r\n                                                    <i class="fa fa-trash"></i>\r\n                                                </a>\r\n                                            </span>\r\n                                            <span data-toggle="modal" data-target="#history">\r\n                                                <a class="btn nobg btn-hist-cstm" data-target="#history"\r\n                                                    (click)="getAuditHistoryById(rowData)" matTooltip="History"\r\n                                                    matTooltipPosition="above"><i class="fa fa-history"></i></a>\r\n                                            </span>\r\n\r\n                                            \x3c!-- <button class="btn-edit" mat-icon-button (click)="edit(rowData)"\r\n                                                matTooltip="Edit" data-dismiss="modal">\r\n                                                <mat-icon>edit</mat-icon>\r\n                                            </button>\r\n                                            <button class="btn-history" mat-icon-button matTooltip="History"\r\n                                                data-toggle="tooltip" matTooltipPosition="above" data-target="#history"\r\n                                                data-toggle="modal" (click)="getAuditHistoryById(rowData)">\r\n                                                <mat-icon color="green">history</mat-icon>\r\n                                            </button>\r\n                                            <button class="btn-delete" mat-icon-button\r\n                                                (click)="openDelete(content,rowData)" matTooltip="Delete"\r\n                                                data-dismiss="modal">\r\n                                                <mat-icon color="warn">delete</mat-icon>\r\n                                            </button> --\x3e\r\n                                        </div>\r\n                                        \x3c!--<span data-toggle="modal" data-target="#history">\r\n                            <a data-toggle="tooltip" matTooltipPosition="above" matTooltip="History" (click)="getAuditHistoryById(rowData)" tooltipPosition="bottom" title="" class="btn btn-success nobg" data-original-title="History">\r\n                                <i class="fa fa-history"></i>\r\n                            </a>\r\n                        </span>--\x3e\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <label id="footer" class="footer">Total:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText\r\n                                    type="text" />\r\n                                &nbsp;&nbsp;\r\n                                <label id="footer" class="footer1">Pages Count:</label>\r\n                                <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText\r\n                                    type="text" />\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n                \x3c!-- </div> --\x3e\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <div class="modal fade bd-example-modal-xl" tabindex="-1" id="history" role="dialog"\r\n        aria-labelledby="myLargeModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-xl">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id=""\r\n                        name="">\xd7</button>\r\n                    <h4 class="modal-title">History of Sales order settings</h4>\r\n                </div>\r\n                <div class="modal-body" *ngIf="auditHistory">\r\n\r\n                    <table class="table table-bordered table-fixed wfl-table-popup-cstm"\r\n                        *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Sales Order Type</th>\r\n                                <th>Prefix</th>\r\n                                <th>Suffix</th>\r\n                                <th>Start Code</th>\r\n                                <th>Status</th>\r\n                                <th>Priority</th>\r\n                                <th>Last Updated By</th>\r\n                                <th>Last Updated Date</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody class="audithistory-cstm">\r\n                            \x3c!--*ngIf="auditHistory.length> 0"--\x3e\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                \x3c!-- auditHistory[i>0 ? i-1 : i] --\x3e\r\n                                <td\r\n                                    [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'typeName\', audit.typeName)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.typeName}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'prefix\', audit.prefix)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.prefix}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'sufix\', audit.sufix)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.sufix}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'startCode\', audit.startCode)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.startCode}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'defaultStatusName\', audit.defaultStatusName)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.defaultStatusName}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'defaultPriorityName\', audit.defaultPriorityName)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.defaultPriorityName}}</td>\r\n                                <td\r\n                                    [ngStyle]="{\'color\': getColorCodeForHistory(i, \'updatedBy\', audit.updatedBy)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.updatedBy}}</td>\r\n\r\n                                <td>{{audit.updatedDate | date: \'dd-MM-yyyy h:mm a \'}}</td>\r\n\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-info" data-dismiss="modal" id="" name=""\r\n                        (click)="dismissModel()">Close</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <ng-template #content let-c="close" let-d="dismiss">\r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n        </div>\r\n\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-success" (click)="deleteSettings()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n    </ng-template>\r\n</div>\r\n\r\n<div class="modal fade" id="downloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="closeModal()">&times;</button>\r\n                <h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n            </div>\r\n            <div class="modal-body" *ngIf="targetData && !selectedOnly">\r\n                <strong>\r\n                    <span>\r\n                        You are attempting to export {{targetData.totalRecords}} of records.\r\n                    </span>\r\n                </strong>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary"\r\n                    (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):exportCSV(targetData); closeModal();">Confirm</button>\r\n                <button type="button" class="btn btn-danger" (click)="closeModal()">Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},fr2d:function(t,e,r){"use strict";r.r(e),e.default='<div class="card">\r\n    <div class="card new-card">\r\n        <div class="card-header bg-primary">\r\n            <div class="row">\r\n                <div class="col">\r\n                    <h4 class="new-card-heading">{{isEditMode ? \'Edit\' : \'Create\'}} Sales Order Quote Settings</h4>\r\n                </div>\r\n                <div>\r\n\r\n                    <button type="button" class="btn-sm new-btn-primary" [routerLink]="[\r\n                \'/salesordersettingsmodule/salesordersettings/app-sales-quote-settings-list\'\r\n                ]">\r\n                        Sales Order Quote Settings List\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="card-body">\r\n            <form #soQuoteSettingsForm="ngForm">\r\n                <h4 class="head_lis">Sales Order Quote Listing</h4>\r\n                <div class="form-row">\r\n                    <div class="col-md-12">\r\n                        <div class="col-md-3 work_order_teardown">\r\n                            <div class="form-group">\r\n                                <label>SOQ List View <span class="text-danger">*</span></label>\r\n                                <p-dropdown name="company1" #wocompanyId="ngModel" required\r\n                                    [options]="salesOrderViewList" placeholder="Select SOQ List View"\r\n                                    class="p-dropdown-custom-md-2" [(ngModel)]="receivingForm.soqListViewId">\r\n                                </p-dropdown>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3 work_order_teardown">\r\n                            <div class="form-group">\r\n                                <label>SOQ List Status <span class="text-danger">*</span></label>\r\n                                <p-dropdown name="company12" #wocompanyId1="ngModel" required\r\n                                    [options]="salesOrderStatusList" placeholder="Select SOQ List Status"\r\n                                    class="p-dropdown-custom-md-2" [(ngModel)]="receivingForm.soqListStatusId">\r\n                                </p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <hr>\r\n        <div class="card-body">\r\n            <h4 class="head_lis">Sales Order Quote</h4>\r\n            <form #soQuoteSettingsForm="ngForm">\r\n                <div class="form-row">\r\n                    <div class="col-md-12">\r\n                        <div class="col-md-3 work_order_teardown">\r\n                            <div class="form-group">\r\n                                <label>SOQ Type <span class="clr-red">*</span></label>\r\n                                <p-dropdown name="quoteTypeId" #quoteTypeId="ngModel" required\r\n                                    [options]="salesOrderTypes" placeholder="Select SOQ Type"\r\n                                    class="p-dropdown-custom-md-2" [(ngModel)]="receivingForm.quoteTypeId">\r\n                                </p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <div class="form-group">\r\n                                <label>Prefix</label>\r\n                                <input type="text" name="prefix" class="form-control ui-autocomplete-input"\r\n                                    [(ngModel)]="receivingForm.prefix" required>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <div class="form-group">\r\n                                <label>Sufix</label>\r\n                                <input type="text" name="sufix" class="form-control ui-autocomplete-input"\r\n                                    [(ngModel)]="receivingForm.sufix">\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <div class="form-group">\r\n                                <label> Start Code</label>\r\n                                <input type="number" name="startCode" class="form-control ui-autocomplete-input"\r\n                                    [(ngModel)]="receivingForm.startCode" required>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-12">\r\n                        <div class="col-md-3">\r\n                            <div class="form-group">\r\n                                <label>Valid Days<span class="clr-red">*</span></label>\r\n                                <input type="number" name="validDays" class="form-control ui-autocomplete-input"\r\n                                    [(ngModel)]="receivingForm.validDays" required>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3 work_order_teardown">\r\n                            <div class="form-group">\r\n                                <label>Priority <span class="clr-red">*</span></label>\r\n                                <p-dropdown name="company12" #company12="ngModel" required\r\n                                    [options]="salesOrderPriorityList" placeholder="Select SOQ List Priority"\r\n                                    class="p-dropdown-custom-md-2" [(ngModel)]="receivingForm.defaultPriorityId">\r\n                                </p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3 work_order_teardown">\r\n                            <div class="form-group">\r\n                                <label>SOQ Status <span class="clr-red">*</span></label>\r\n                                <p-dropdown name="company1" #company1="ngModel" required\r\n                                    [options]="salesOrderStatusList" placeholder="Select SOQ List Status"\r\n                                    class="p-dropdown-custom-md-2" [(ngModel)]="receivingForm.defaultStatusId">\r\n                                </p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3 work_order_teardown" style="padding-top:12px;">\r\n                            <div class="form-group">\r\n\r\n                                <p-checkbox name="isApprovalRule" binary="true"\r\n                                    [(ngModel)]="receivingForm.isApprovalRule">\r\n                                </p-checkbox>\r\n                                <label style="padding-left:10px;">Apply Approval Rule\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n                <div class="form-row pull-right m-t-10">\r\n                    <button type="submit" class="btn btn-primary" (click)="saveOrUpdateSOQuoteSetting()"\r\n                        [disabled]="!soQuoteSettingsForm.valid">{{isEditMode ? \'Update\' : \'Save\'}}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n    <ng-template #errorMessagePop let-c="close" let-d="dismiss">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" data-dismiss="modal" (click)="closeErrorMessage()">&times;</button>\r\n            <h4 class="modal-title"> Please Enter (*) Mandatory Fields</h4>\r\n        </div>\r\n        <div class="modal-body">\r\n            <p *ngFor="let error of errorMessages" [ngStyle]="{\'color\':\'red\'}"> {{ error }} </p>\r\n        </div>\r\n        <div class="modal-footer">\r\n\r\n            <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                (click)="closeErrorMessage()">Close</button>\r\n        </div>\r\n    </ng-template>\r\n    <div class="preloader" *ngIf="isSpinnerVisible">\r\n        <div class="loading">\r\n            <div class="lds-roller">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    </div>'},ma4T:function(t,e,r){"use strict";r.r(e),e.default="<router-outlet></router-outlet>"},"rN/+":function(t,e,r){"use strict";r.r(e),e.default=""},vE4K:function(t,e,r){"use strict";r.r(e),e.default="label {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.inner-addon .ui-autocomplete-input {\n  width: 100% !important;\n}\n\n.head_lis {\n  font-size: 16px;\n  margin: 0px 0 12px;\n  font-weight: 500;\n  color: #007bff;\n}\n\n.partsList-table-tr th {\n  min-width: 80px;\n}\n\n.addpn-btn {\n  padding: 5px 10px !important;\n  font-size: 13px;\n}\n\na.fa.fa-plus-circle {\n  color: green !important;\n}\n\n.partsList-modal .form-group {\n  margin-bottom: 6px !important;\n}\n\n.rpo-table-cstm th {\n  padding: 8px 5px !important;\n}\n\n.child-add-icon {\n  cursor: pointer;\n  margin: 2px -12px;\n}\n\n.child-add-icon a:before, .child-add-icon i:before {\n  font-size: 16px;\n}\n\ntable th {\n  padding: 4px;\n}\n\ntable td {\n  padding: 4px;\n}\n\n.card-timelife {\n  margin-bottom: 10px;\n  margin-top: 10px;\n}\n\n.card-timelife .card-body {\n  padding: 4px 10px 0px !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n\n  .col-md-6 .col-md-6 {\n    max-width: 47%;\n    margin-right: 15px;\n  }\n}"},"xW/X":function(t,e,r){"use strict";r.r(e),e.default="label {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.inner-addon .ui-autocomplete-input {\n  width: 100% !important;\n}\n\n.head_lis {\n  font-size: 16px;\n  margin: 0px 0 12px;\n  font-weight: 500;\n  color: #007bff;\n}\n\n.partsList-table-tr th {\n  min-width: 80px;\n}\n\n.addpn-btn {\n  padding: 5px 10px !important;\n  font-size: 13px;\n}\n\na.fa.fa-plus-circle {\n  color: green !important;\n}\n\n.partsList-modal .form-group {\n  margin-bottom: 6px !important;\n}\n\n.rpo-table-cstm th {\n  padding: 8px 5px !important;\n}\n\n.child-add-icon {\n  cursor: pointer;\n  margin: 2px -12px;\n}\n\n.child-add-icon a:before, .child-add-icon i:before {\n  font-size: 16px;\n}\n\ntable th {\n  padding: 4px;\n}\n\ntable td {\n  padding: 4px;\n}\n\n.card-timelife {\n  margin-bottom: 10px;\n  margin-top: 10px;\n}\n\n.card-timelife .card-body {\n  padding: 4px 10px 0px !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n\n  .col-md-6 .col-md-6 {\n    max-width: 47%;\n    margin-right: 15px;\n  }\n}"}}]);