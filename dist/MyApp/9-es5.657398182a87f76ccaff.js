function _createForOfIteratorHelper(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var a=0,r=function(){};return{s:r,n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,i=!0,o=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return i=e.done,e},e:function(e){o=!0,s=e},f:function(){try{i||null==n.return||n.return()}finally{if(o)throw s}}}}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){if(e){if("string"==typeof e)return _arrayLikeToArray(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}}function _iterableToArray(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"+rfH":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var a=function e(t,n,a,r,s,i,o,l,c,d,u,p){_classCallCheck(this,e),this.assetLocationId=n,this.code=a,this.name=r,this.memo=s,this.masterCompanyId=i,this.createdBy=o,this.updatedBy=l,this.createdDate=c,this.updatedDate=d,this.isDelete=u,this.isActive=p}},"0leF":function(e,t,n){"use strict";n.r(t),t.default=".ms-block {\n  padding: 5px;\n  box-shadow: 1px 1px 5px #bbb;\n  background: #fff;\n  width: 300px;\n  text-align: center;\n}"},"1tnc":function(e,t,n){"use strict";n.r(t),t.default='<p-breadcrumb [model]="breadcrumbs" [home]="home" *ngIf="isView==false"></p-breadcrumb>\r\n<div class="card new-card" >\r\n    <div class="card-header bg-primary" *ngIf="isView==false">\r\n      <div class="row">\r\n        <div class="col">\r\n          <h4 class="new-card-heading">  {{ assetServices.isEditMode == true ? \'Edit\'  : \'Create\'}} Asset Caps</h4>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type="button"\r\n            class="btn-sm new-btn-primary"\r\n            [routerLink]="[\'/assetmodule/assetpages/app-asset-listing\']">\r\n            Asset List\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class="card-body new-card-body">\r\n<div class="md-stepper-horizontal orange new-stepper-align" *ngIf="isView==false">\r\n    <div class="md-step" [ngClass]="{ active: activeIndex >= 0 , editable : activeIndex === 0}"\r\n         (click)="changeOfTab(\'General\')">\r\n        <div class="md-step-circle"><span>1</span></div>\r\n        <div class="md-step-title">General Information</div>\r\n        <div class="md-step-bar-left"></div>\r\n        <div class="md-step-bar-right"></div>\r\n    </div>\r\n    <div class="md-step" [ngClass]="{ active: activeIndex >= 1, editable : activeIndex === 1 }"\r\n         (click)="changeOfTab(\'Capes\')">\r\n        <div class="md-step-circle"><span>2</span></div>\r\n        <div class="md-step-title">Capes</div>\r\n        <div class="md-step-bar-left"></div>\r\n        <div class="md-step-bar-right"></div>\r\n    </div>\r\n    <div class="md-step" [ngClass]="{ active: activeIndex >= 2 , editable : activeIndex === 2 }"\r\n         (click)="changeOfTab(\'Calibration\')">\r\n        <div class="md-step-circle"><span>3</span></div>\r\n        <div class="md-step-title">Calibration</div>\r\n        <div class="md-step-bar-left"></div>\r\n        <div class="md-step-bar-right"></div>\r\n    </div>\r\n    <div class="md-step" [ngClass]="{ active: activeIndex >= 3 , editable : activeIndex === 3 }"\r\n         (click)="changeOfTab(\'Maintenance\')">\r\n        <div class="md-step-circle"><span>4</span></div>\r\n        <div class="md-step-title">Maintenance & Warranty</div>\r\n        <div class="md-step-bar-left"></div>\r\n        <div class="md-step-bar-right"></div>\r\n    </div>\r\n</div>\r\n<div class="card" style="border: none;">\r\n    \x3c!-- <div class="x_content"> --\x3e\r\n        \x3c!-- <div action="#" method="post" id="" name="" class="form-horizontal ro-grid-form mtop10"> --\x3e\r\n            \x3c!-- <ng-template #content id="addShippingInfo" let-c="close" let-d="dismiss">\r\n                 --\x3e\r\n            <div class="modal fade" #content id="addShippingInfo" role="dialog" data-backdrop="static">\r\n                <div class="modal-dialog  modal-xlg" id="addShippingInfo">\r\n                    \x3c!-- Modal content--\x3e\r\n                    <div class="modal-content">\r\n                        <div class="modal-header">\r\n                            <button type="button" class="close" data-dismiss="modal" (click)="dismissModelWithAlert()">\xd7</button>\r\n                            <h4 class="modal-title">Add Capability</h4>\r\n\r\n                        </div>\r\n                        <div class="form-row" style="padding: 12px 20px;">\r\n                            <div class="col-md-3">\r\n                                <label class="fs12">Asset ID : </label>\r\n                                <span class="span-header-red"> {{local?.assetId}}</span>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <label class="fs12">Asset Name : </label>\r\n                                <span class="span-header-red"> {{local?.name}}</span>\r\n\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <label class="fs12">Alt Asset ID : </label>\r\n                                <span class="span-header-red"> {{local?.alternateAssetName}}</span> \r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <label class="fs12">Asset Class/Attribute : </label>\r\n                                <span class="span-header-red"> {{local?.assetAttributeType}}</span> \r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div class="modal-body" style="padding: 12px;">\r\n                            <form #genForm="ngForm" [formGroup]="capabilitiesForm">\r\n                                <div formArrayName="mfgForm">\r\n                                    <div class="form-row">\r\n                                        <div class="col-md-2">\r\n                                            <div class="form-group">\r\n                                                <label class="popup-plusicon-cstm-caps">Capability Type  <span class="clr-red">*</span></label>\r\n                                             \r\n                                                <p-dropdown class="p-dropdown-100"  [ngModelOptions]="{standalone: true}" (input)="onFilterCapability($event.target.value)" (onChange)="onCapabilityTypeSelection($event)"  (ngModelChange)="getmemo($event)" required [options]="capabilityTypeData" filter="true" [(ngModel)]="capabilityForm.CapabilityTypeId" name="CapabilityTypeId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-2">\r\n                                            <div class="form-group pop-up-caps-autocomplete">\r\n                                                <label class="popup-plusicon-cstm-caps">PN  <span class="clr-red">*</span></label>\r\n                                         \r\n\r\n                                                <p-autoComplete  (ngModelChange)="getmemo($event)" class="p-autoComplete-ctsm" field="partNumber" name="Inspector47" [dropdown]="true"\r\n                                                errorMessage="Records not found"  [suggestions]="partCollection" emptyMessage="No Records Found" [ngModelOptions]="{standalone: true}"\r\n                                                (completeMethod)="filterPNpartItems($event)"  [size]="30" [minLength]="1" required  (onKeyUp)=partPNentHandler($event) (onSelect)="partnmId($event)"\r\n                                                [(ngModel)]="capabilityForm.selectedPartId"  #prellRevInsp33="ngModel" >\r\n                                            </p-autoComplete> \r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-2">\r\n                                            <div class="form-group">\r\n                                                <label class="popup-plusicon-cstm-caps text-left">\r\n                                                    Aircraft Manufacturer <span class="clr-red">*</span>\r\n                                                </label>\r\n                                                <p-dropdown class="p-dropdown-100" (input)="onFilteManufacturer($event.target.value)"  [ngModelOptions]="{standalone: true}" (onChange)="manufacturerChange($event,capabilityForm)" required  (ngModelChange)="getmemo($event)"  [options]="manufacturerData" filter="true" [(ngModel)]="capabilityForm.selectedAircraftTypes" name="selectedAircraftTypes" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-2">\r\n                                            <div class="">\r\n                                                <span class="popup-plusicon-cstm-caps text-left">\r\n                                                    Model\r\n                                                    <input type="checkbox" [(ngModel)]="modelUnknown"\r\n                                                           [ngModelOptions]="{standalone: true}" style="width: 20px !important;    position: relative;\r\n                                                           top: 2px; margin-left: 7px; "\r\n                                                           (change)="resetAircraftModelsorDashNumbers($event,1);"> Unknown\r\n                                                </span>\r\n                                                <p-multiSelect *ngIf="!modelUnknown" [maxSelectedLabels]="2"\r\n                                                               [disabled]="!selectedAircraftId" class="imstock-pmselect"\r\n                                                               [options]="capabilityForm.selectedAircraftDataModels"\r\n                                                               [ngModelOptions]="{standalone: true}" \r\n                                                               [(ngModel)]="capabilityForm.selectedAircraftModelTypes"\r\n                                                               [panelStyle]="{minWidth:\'12em\'}"\r\n                                                               (click)="openModelPopups(capabilityForm)"\r\n                                                               (onChange)="aircraftModalChange($event,capabilityForm)">\r\n                                                </p-multiSelect>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-3" *ngIf="!modelUnknown">\r\n                                            <div class="">\r\n                                                <span class="popup-plusicon-cstm-caps text-left">\r\n                                                    Dash Number\r\n                                                    <input type="checkbox" [(ngModel)]="dashNumberUnknown"\r\n                                                           style="width: 20px !important; margin-left: 7px;  position: relative;\r\n                                                           top: 2px; "\r\n                                                           [ngModelOptions]="{standalone: true}" \r\n                                                           (change)="resetAircraftModelsorDashNumbers($event,2);">\r\n                                                    Unknown\r\n                                                </span>\r\n\r\n                                                <p-multiSelect *ngIf=" !modelUnknown && !dashNumberUnknown" class="dashnumber_f"\r\n                                                               [disabled]="!selectedAircraftId"\r\n                                                               [options]="search_AircraftDashNumberList"\r\n                                                               [ngModelOptions]="{standalone: true}"\r\n                                                               [(ngModel)]="capabilityForm.selectedDashNumbers"\r\n                                                               [panelStyle]="{minWidth:\'12em\'}"\r\n                                                               (onChange)="dashNumberChange($event,capabilityForm)">\r\n                                                </p-multiSelect>\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n                                        <div class="col-md-1">\r\n                                            \x3c!-- (!modelUnknown && !capabilityForm.selectedAircraftModelTypes)||(!dashNumberUnknown && !capabilityForm.selectedDashNumbers)|| --\x3e\r\n                                            <button style="margin-top: 20px;" type="button" class="btn btn-primary"\r\n                                                    (click)="mapAircraftInformation(capabilityForm)"\r\n                                                    [disabled]="disableCapesSave || !capabilityForm.selectedPartId || !capabilityForm.selectedAircraftTypes  || !capabilityForm.CapabilityTypeId "\r\n                                                    >\r\n                                                Add  \r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="card"> \r\n                                        <p-table class="p-table-cstm" [value]="aircraftData"  [rows]="pageSize1" [paginator]="true" [pageLinks]="3"\r\n                                        [rowsPerPageOptions]="[10,20,50,100]" [totalRecords]="totalRecords1" (onLazyLoad)="loadData2($event)"\r\n                                                 [columns]="colaircraft" [scrollable]="true" [style]="{width:\'100%\'}"\r\n                                                 [paginator]="true">\r\n                                            <ng-template pTemplate="header" let-columns>\r\n                                                <tr>\r\n                                                    <th *ngFor="let col of columns" style="width:200px">\r\n                                                        {{col.header}} <span *ngIf="col.star==true" class="clr-red">*</span>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </ng-template>\r\n                                            <ng-template pTemplate="body" let-i="rowIndex" let-rowData\r\n                                                         let-columns="columns">\r\n                                                <tr>\r\n                                                    <td *ngFor="let col of columns">\r\n                                                        \x3c!-- {{rowData[col.field]}} --\x3e\r\n                                                        {{\r\n                                                            col.field == \'createdDate\'\r\n                                                              ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                                              : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                              ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                                              : rowData[col.field] \r\n                                                          }}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </ng-template>\r\n                                            <ng-template pTemplate="emptymessage" let-columns>\r\n                                                <tr>\r\n                                                    <td colspan="12" style="color: red; font-weight: bold; text-align: center">\r\n                                                        No records found\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </ng-template>\r\n                                            <ng-template pTemplate="summary" id="footer"> \r\n                                                <div style="text-align: right;">\r\n                                                    <label id="footer" class="footer">Total:</label>\r\n                                                    <input style="width: 5% !important;"  [ngModelOptions]="{standalone: true}"  [(ngModel)]="totalRecords1" disabled pInputText\r\n                                                           type="text" /> &nbsp;&nbsp;\r\n                                                    <label id="footer" class="footer1">Pages Count:</label>\r\n                                                    <input style="width: 5% !important;margin-right: 12px;"  [ngModelOptions]="{standalone: true}"  [(ngModel)]="totalPages1" disabled pInputText\r\n                                                           type="text" />\r\n                                                </div>\r\n                                            </ng-template>\r\n                                        </p-table>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div class="modal-footer">\r\n                            <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                                    (click)="saveCapabilities(capabilityForm,\'add\')" [disabled]="aircraftData && aircraftData.length == 0">\r\n                                Save\r\n                            </button>\r\n                            <button type="button" class="btn btn-danger"\r\n                                    (click)="dismissModelWithAlert()">\r\n                                Close\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \x3c!-- </ng-template> --\x3e\r\n            <ng-template #tabRedirectConfirmationModal2 let-c="close" let-d="dismiss">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">&times;</button>\r\n                    <h4 class="modal-title">Confirmation</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <h6 class="text-center">\r\n                        Are you sure you want to go to {{nextOrPreviousTab}} tab? Unsaved changes will be lost.\r\n                    </h6>\r\n                </div>\r\n                <div class="modal-footer">\r\n\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModel()">No</button>\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="redirectToTab()">Yes</button>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #editcontent let-c="close" let-d="dismiss">\r\n                <div class="modal-dialog modal-xl" style="margin: 0px !important;">\r\n                    \x3c!-- Modal content--\x3e\r\n                    <div class="modal-content">\r\n                        <div class="modal-header">\r\n                            <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">\xd7</button>\r\n                            <h4 class="modal-title">Edit Capability</h4>\r\n                        </div>\r\n                        <div class="modal-body">\r\n                            <div class="form-row cal_cds">\r\n                                <div class="col-md-3">\r\n                                    <label class="fs12">Asset ID : </label>\r\n                                    <span class="span-header-red"> {{local?.assetId}}</span>\r\n                                </div>\r\n                                <div class="col-md-3">\r\n                                    <label class="fs12">Asset Name : </label>\r\n                                    <span class="span-header-red"> {{local?.name}}</span>\r\n    \r\n                                </div>\r\n                                <div class="col-md-3">\r\n                                    <label class="fs12">Alt Asset ID : </label>\r\n                                    <span class="span-header-red"> {{local?.alternateAssetName}}</span> \r\n                                </div>\r\n                                <div class="col-md-3">\r\n                                    <label class="fs12">Asset Class/Attribute : </label>\r\n                                    <span class="span-header-red"> {{local?.assetAttributeType}}</span> \r\n                                </div>\r\n                            </div>\r\n                            <form [formGroup]="capabilitiesForm">\r\n                                <div formArrayName="mfgForm">\r\n                                    <div class="form-row" *ngIf="aircraftDataEdit">\r\n                                        <div class="col-md-2">\r\n                                            <div class="form-group">\r\n                                                <label class="popup-plusicon-cstm-caps">Capability Type <span class="clr-red">*</span></label>\r\n                                               \r\n                                                <p-dropdown class="p-dropdown-100" [ngModelOptions]="{standalone: true}" (input)="onFilterCapability($event.target.value)" (onChange)="onCapabilityTypeSelection($event)"  (ngModelChange)="getmemo($event)" required [options]="capabilityTypeData" filter="true" [(ngModel)]="aircraftDataEdit.capabilityId" name="CapabilityTypeId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-2">\r\n                                            <div class="form-group pop-up-caps-autocomplete">\r\n                                                <label class="popup-plusicon-cstm-caps">PN <span class="clr-red">*</span></label>\r\n                                     <p-autoComplete  (ngModelChange)="getmemo2($event)" class="p-autoComplete-ctsm" field="partNumber" name="Inspector47" [dropdown]="true"\r\n                                                errorMessage="Records not found"  [suggestions]="partCollection" emptyMessage="No Records Found" [ngModelOptions]="{standalone: true}"\r\n                                                (completeMethod)="filterPNpartItems($event)"  [size]="30" [minLength]="1" required  (onKeyUp)=partPNentHandler($event) (onSelect)="partnmId($event)"\r\n                                                [(ngModel)]="aircraftDataEdit.partNumber"  #prellRevInsp33="ngModel" >\r\n                                            </p-autoComplete> \r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-2">\r\n                                            <div class="form-group">\r\n                                                <label class="popup-plusicon-cstm-caps text-left">\r\n                                                    Aircraft Manufacturer <span class="clr-red">*</span>\r\n                                              </label>\r\n                                                <p-dropdown class="p-dropdown-100" (input)="onFilteManufacturer($event.target.value)" [ngModelOptions]="{standalone: true}" (onChange)="manufacturerChange($event,capabilityForm)"  (ngModelChange)="getmemo2($event)"  [options]="manufacturerData" filter="true" [(ngModel)]="aircraftDataEdit.aircraftTypeId" name="aircraftTypeId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div class="col-md-2">\r\n                                            <div class="">\r\n                                                \x3c!-- <label class="popup-plusicon-cstm-caps text-left">\r\n                                                    Model\r\n                                                </label> --\x3e\r\n                                                <span class="popup-plusicon-cstm-caps text-left">\r\n                                                    Model\r\n                                                    <input type="checkbox" [(ngModel)]="modelUnknown"\r\n                                                           [ngModelOptions]="{standalone: true}" style="width: 20px !important;position: relative;\r\n                                                           top: 2px; \r\n                                                           margin-left: 7px; "\r\n                                                           (change)="resetAircraftModelsorDashNumbers($event,1)"> Unknown\r\n                                                </span>\r\n                                                <select *ngIf="!modelUnknown" [(ngModel)]="aircraftDataEdit.aircraftModelId" (ngModelChange)="getmemo2($event)" (change)="aircraftModalChange_1($event,aircraftTypeId,\'\')"\r\n                                                        [ngModelOptions]="{standalone: true}" id="aircraftDashlId"\r\n                                                        style="width: 150px !important;">\r\n                                                        <option value="">--Select--</option>\r\n                                                    <option *ngFor="let m of capabilityForm.selectedAircraftDataModels" [ngValue]="m.value">\r\n                                                        {{m.label}}\r\n                                                    </option>\r\n                                                </select>\r\n                                                \x3c!-- <p-dropdown class="p-dropdown-100"  [ngModelOptions]="{standalone: true}" (input)="onFilterCapability($event.target.value)" (onChange)="onCapabilityTypeSelection($event)"  (ngModelChange)="getmemo($event)" required [options]="capabilityTypeData" filter="true" [(ngModel)]="capabilityForm.CapabilityTypeId" name="CapabilityTypeId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown> --\x3e\r\n                                            </div>\r\n                                        </div>\r\n                                     \r\n                                        <div class="col-md-2" *ngIf="!modelUnknown">\r\n                                            <div class="">\r\n                                                <span class="popup-plusicon-cstm-caps text-left">\r\n                                                    Dash Number\r\n                                                    <input type="checkbox" [(ngModel)]="dashNumberUnknown"\r\n                                                           style="width: 20px !important; margin-left: 7px; position: relative;\r\n                                                           top: 2px; "\r\n                                                           [ngModelOptions]="{standalone: true}"\r\n                                                           (change)="resetAircraftModelsorDashNumbers($event,2)">\r\n                                                    Unknown\r\n                                                </span>\r\n                                                <select  *ngIf=" !modelUnknown && !dashNumberUnknown" [(ngModel)]="aircraftDataEdit.aircraftDashNumberId" (ngModelChange)="getmemo2($event)"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        style="width: 150px !important;">\r\n                                                    <option value="">--Select--</option>\r\n                                                    <option *ngFor="let m of search_AircraftDashNumberList" [ngValue]="m.value">\r\n                                                        {{m.label}}\r\n                                                    </option>\r\n                                                </select>\r\n                                                \x3c!-- <p-dropdown class="p-dropdown-100"  [ngModelOptions]="{standalone: true}" (input)="onFilterCapability($event.target.value)" (onChange)="onCapabilityTypeSelection($event)"  (ngModelChange)="getmemo($event)" required [options]="capabilityTypeData" filter="true" [(ngModel)]="capabilityForm.CapabilityTypeId" name="CapabilityTypeId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown> --\x3e\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                      \r\n\r\n                                        <div class="col-md-1">\r\n                                            <button style="margin-top: 20px;" type="button" class="btn btn-primary"\r\n                                                    (click)="saveCapabilities(capabilityForm,\'edit\')" [disabled]="disableSaveForEdit">\r\n                                                Update\r\n                                            </button> \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template #content2 let-c="close" let-d="dismiss">\r\n                <div class="modal-header">\r\n                    <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n                    <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                        <span aria-hidden="true">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div class="modal-body">\r\n                   \r\n                    <div class="form-row" >\r\n                        <div class="col-md-3" style="margin-right: 0px !important;">\r\n                            <label class="fs12">Part Number: </label>\r\n                            <span class="new-label"> {{assetServices.CapeslistCollection.partNumber}}</span>\r\n                        </div>\r\n                        <div class="col-md-4" style="margin-right: 0px !important;">\r\n                            <label class="fs12"> Capability Type  : </label>\r\n                            <span class="new-label"> {{assetServices.CapeslistCollection.captypedescription}}</span>\r\n\r\n                        </div>\r\n                        <div class="col-md-2" style="margin-right: 0px !important;">\r\n                            <label class="fs12">Model : </label>\r\n                            <span class="new-label"> {{assetServices.CapeslistCollection.modelname}}</span> \r\n                        </div>\r\n                        <div class="col-md-2" style="margin-right: 0px !important;">\r\n                            <label class="fs12">Dash Number : </label>\r\n                            <span class="new-label"> {{assetServices.CapeslistCollection.dashnumber}}</span> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary" (click)="removeAsset()">Yes</button>\r\n                    <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n                </div>\r\n\r\n            </ng-template>\r\n        \x3c!-- </div> --\x3e\r\n        \x3c!-- <div class="clear"></div> --\x3e\r\n        \x3c!-- <hr> --\x3e\r\n    \x3c!-- </div> --\x3e\r\n    <div class="card" style="border: none;">\r\n        <div class="card-body" *ngIf="isView==false" style="padding: 0px !important;">\r\n            <div class="col-md-3">\r\n                <label class="fs12">Asset ID : </label>\r\n                <span class="span-header-red"> {{local?.assetId}}</span>\r\n            </div>\r\n            <div class="col-md-3">\r\n                <label class="fs12">Asset Name : </label>\r\n                <span class="span-header-red"> {{local?.name}}</span>\r\n\r\n            </div>\r\n            <div class="col-md-3">\r\n                <label class="fs12">Alt Asset ID : </label>\r\n                <span class="span-header-red"> {{local?.alternateAssetName}}</span>\r\n            </div>\r\n            <div class="col-md-3">\r\n                <label class="fs12">Asset Class/Attribute : </label>\r\n                <span class="span-header-red"> {{local?.assetAttributeType}}</span> \r\n            </div>\r\n            <div class="clear"></div>\r\n            <hr />\r\n            <div class="clear"></div>\r\n\r\n            \x3c!-- <div class="col-md-12" style="margin-bottom: -10px;">\r\n                <h4 class="float-left">\r\n                    Capabilities\r\n                    <a class="plusicon-cstm new-margin" matTooltip="Add Capability" matTooltipPosition="above"\r\n                       data-toggle="modal" data-target="#addShippingInfo" (click)="openCapess()">\r\n                  \r\n                        <i class="fa fa-plus-circle fa-lg"></i>\r\n                    </a>\r\n                </h4>\r\n            </div> --\x3e\r\n            <div class="card-header bg-primary" *ngIf="isView==false">\r\n                <div class="row">\r\n                  <div class="col">\r\n                    <h4 class="new-card-heading"> Capabilities Info</h4>\r\n                  </div>\r\n                  <div>\r\n                    <button\r\n                      type="button"\r\n                      class="btn-sm new-btn-primary"  matTooltip="Add Capability" matTooltipPosition="above"\r\n                      data-toggle="modal" data-target="#addShippingInfo" (click)="openCapess()">\r\n                      Add New Capability\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n            <div class="clear"></div>\r\n            <hr />\r\n        </div>\r\n       \r\n\r\n\r\n        <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="allCapesInfo" [metaKeySelection]="true"\r\n        [(first)]="pageNumber" [rows]="pageSize" [paginator]="true" [pageLinks]="3"\r\n                 [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns" selectionMode="multiple" [(selection)]="selectedRows"\r\n                 [resizableColumns]="true" [reorderableColumns]="true" [lazy]="true" (onLazyLoad)="loadData($event)"\r\n                 [scrollable]="true" [totalRecords]="totalRecords" scrollHeight="450px">\r\n            <ng-template pTemplate="caption">\r\n                <div class="row" *ngIf="isView==false">\r\n                    <div class="col">\r\n                    <p-multiSelect [maxSelectedLabels]="2" [options]="cols" optionLabel="header"\r\n                                   [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                   selectedItemsLabel="{0} columns selected" defaultLabel="Choose Columns">\r\n                    </p-multiSelect>\r\n                </div>\r\n                <div class="col">\r\n                  <div\r\n                    style="width: auto !important; float: right;"\r\n                    class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                  >\r\n                        <i class="fa fa-search"></i>\r\n                        <input type="text" pInputText size="50" \r\n                        class="form-control"\r\n                               (input)="globalSearch($event.target.value)" \r\n                               placeholder="Filter">\r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n                      <div class="row" >\r\n                        <div class="col">\r\n                    <button  *ngIf="isView==false" type="button" class="btn btn-primary new-table-button" matTooltip="Download Data" matTooltipPosition="above"\r\n                            pButton icon="fa-download" iconPos="left" style="padding: 5px 12px !important;" label="Export All Data"\r\n                            \r\n                            data-toggle="modal" \r\n                            (click)="selectedOnly = false; targetData = dt;"\r\n                             data-target="#downloadConfirmation"></button>\r\n                             \x3c!-- (click)="exportCSV(dt)" --\x3e\r\n                    <button  *ngIf="isView==false" type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"\r\n                            matTooltipPosition="above" style="padding: 5px 12px !important;"\r\n                            pButton icon="fa-download" iconPos="left" label="Export Selected Data"\r\n                            (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                    <div  *ngIf="isView==false" class="excel-upload  excel-upload-cstm">\r\n                        <button name="download" id="download" type="button" class="btn btn-primary"\r\n                                matTooltip="Download Sample File" matTooltipPosition="above" (click)="sampleExcelDownloadForCapes()"\r\n                                style="padding: 5px 10px !important;">\r\n                            Sample File Download\r\n                        </button>\r\n\r\n                        <input type="file" name="upload3[]" id="upload3" (change)="CapesExcelUpload($event)"\r\n                               class="uploaddoc upload-file" accept=".xlsx, .xls, .csv" />\r\n                        <label for="upload3">\r\n                            <span matTooltip="Upload Data (Excel)" matTooltipPosition="above">\r\n                                <i class="fa fa-upload"></i>\r\n                            </span>\r\n                        </label>\r\n                        &nbsp; &nbsp;\r\n                    </div>\r\n                    </div>\r\n                    <div class="col"  >\r\n                        <div class="">\r\n                          <div\r\n                            class="col"\r\n                            style="width: 370px; float: right; padding-top: 3px;"\r\n                          >\r\n                            <div class="form-group">\r\n                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                    <label class="radio-cstm wauto">\r\n                                        <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="getCapesListByStatus(\'Active\')" [checked]="currentstatus2==\'Active\'">\r\n                                        <span class="checkmark"></span>Active\r\n                                    </label>\r\n                                </div>\r\n                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                    <label class="radio-cstm wauto">\r\n                                        <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="getCapesListByStatus(\'InActive\')" [checked]="currentstatus2==\'InActive\'">\r\n                                        <span class="checkmark"></span>In-Active\r\n                                    </label>\r\n                                </div>\r\n                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                    <label class="radio-cstm wauto">\r\n                                        <input type="radio" name="EmpStatus" class="form-control" value="ALL" (click)="getCapesListByStatus(\'ALL\')" [checked]="currentstatus2==\'ALL\'">\r\n                                        <span class="checkmark"></span>All\r\n                                    </label>\r\n                                </div>\r\n                                <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                    <label style="width: auto !important;margin-top: 3px;">\r\n                                        <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" (click)="getDeleteListByStatus($event.target.checked)" />\r\n                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                        Show  Deleted List \r\n                                    </label>\r\n                                </div>\r\n                                </div>\r\n            \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \x3c!-- <div class="checkbox-cstm" style="margin-left: 0;text-align: end;padding-right: 10px;width: 100%;" *ngIf="isView==true">\r\n                        <label style="width: auto !important;margin-top: 3px;">\r\n                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" (click)="getDeleteListByStatus($event.target.checked)" />\r\n                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                            Show  Deleted List\r\n                        </label>\r\n                    </div> --\x3e\r\n                </div>\r\n            </ng-template>\r\n\r\n\r\n\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col *ngFor="let col of columns"  style="width:140px"/>\r\n                </colgroup>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n\r\n                    <th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                        {{ col.header }} <span *ngIf="col.star==true" class="clr-red" >*</span>\r\n                        <p-sortIcon [field]="col.field"></p-sortIcon> \r\n                    </th>\r\n                    <th style="width:150px;position: sticky;">Actions</th>\r\n                </tr>\r\n                <tr>\r\n\r\n                    <th *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                        <input style="width:100%!important;" pInputText type="text" *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'"\r\n                               (input)="dt.filter($event.target.value, col.field,\'contains\')" />\r\n                               \r\n                               <input type="date"   style="width:100%" class="hidePlaceHolder" *ngIf="col.field == \'createdDate\'"\r\n                               name="createdDate"  (change)="dateFilterForTable($event.target.value, col.field)" />\r\n<input type="date" style="width:100%"  class="hidePlaceHolder" *ngIf="col.field == \'updatedDate\'"   name="updatedDate"\r\n            (change)="dateFilterForTable($event.target.value,col.field)" />\r\n                    </th>\r\n                    <th style="width:150px;position: sticky"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData let-columns="columns" let-assetCapes let-rowIndex="rowIndex">\r\n                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                    <td *ngFor="let col of columns" class="ui-resizable-column"\r\n                        pReorderableRowHandle>\r\n                        \x3c!-- {{rowData[col.field]}} --\x3e\r\n\r\n                        {{\r\n                            col.field == \'createdDate\'\r\n                              ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                              : rowData[col.field] && col.field == \'updatedDate\'\r\n                              ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                              : rowData[col.field] \r\n                          }}\r\n                    </td>\r\n\r\n                    <td class="action-icons-cstm" style="width:150px">\r\n                        <div *ngIf="currentDeletedstatus==false">\r\n    \x3c!-- <p-inputSwitch [disabled]="isView==false" *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on" offLabel="off"\r\n                                           (onChange)="toggleActiveStatus(rowData)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                            <p-inputSwitch [disabled]="isView==true" *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on"\r\n                                           offLabel="off" (onChange)="toggleActiveStatus(rowData)" [(ngModel)]="rowData[\'isActive\']">\r\n                            </p-inputSwitch>\r\n                            <p-inputSwitch [disabled]="isView==true" *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on"\r\n                                           offLabel="off" (onChange)="toggleActiveStatus(rowData)" [(ngModel)]="rowData[\'isActive\']">\r\n                            </p-inputSwitch> --\x3e\r\n\r\n\r\n                            <p-inputSwitch [disabled]="isView==true" [(ngModel)]="rowData[\'isActive\']" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                            matTooltipPosition="above" (onChange)="toggleActiveStatus(rowData)"></p-inputSwitch> \r\n\r\n                             <span *ngIf="isView==false">\r\n                                <a class="btn nobg" (click)="opencapesToEdit(editcontent,rowData)" matTooltip="Edit"\r\n                                   matTooltipPosition="above"><i class="fa fa-pencil"></i></a>\r\n                            </span>\r\n                            <span *ngIf="isView==false">\r\n                                <a class="btn nobg"\r\n                                   (click)="openDelete(content2,rowData)"\r\n                                   matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a>\r\n                            </span>\r\n                               <span data-toggle="modal" data-target="#contentHist">\r\n                                <a class="btn nobg"\r\n                                   (click)="getAuditHistoryById(rowData)" matTooltip="History"\r\n                                   matTooltipPosition="above"><i class="fa fa-history"></i></a>\r\n                            </span>\r\n\r\n                        </div>\r\n                        <div *ngIf="currentDeletedstatus==true"> \r\n                            <p-inputSwitch  [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}" matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                           matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch>\r\n                            <span data-toggle="modal" data-target="#contentHist">\r\n                                <a class="btn nobg" \r\n                                   (click)="getAuditHistoryById(rowData)" matTooltip="History"\r\n                                   matTooltipPosition="above"><i class="fa fa-history"></i></a>\r\n                            </span>\r\n\r\n                            <span><a class="btn nobg" *ngIf="isView==false" (click)="restore(restoreId,rowData);" matTooltip="Restore Record" matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                            \x3c!-- <span data-toggle="modal" data-target="#contentAuditHist"><a class="btn nobg" (click)="getAuditHistoryById(contentAuditHist,rowData)" matTooltip="History"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span> --\x3e\r\n\r\n                        </div>\r\n                        \r\n\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns>\r\n                <tr>\r\n                    <td colspan="12" style="color: red; font-weight: bold; text-align: center">\r\n                        No records found\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="summary" id="footer"> \r\n                <div style="text-align: right;">\r\n                    <label id="footer" class="footer">Total:</label>\r\n                    <input style="width: 5% !important;" [(ngModel)]="totalRecords" [disabled]="true" pInputText\r\n                           type="text" /> &nbsp;&nbsp;\r\n                    <label id="footer" class="footer1">Pages Count:</label>\r\n                    <input style="width: 5% !important;margin-right: 12px;" [(ngModel)]="totalPages" [disabled]="true" pInputText\r\n                           type="text" />\r\n                </div>\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal-body">\r\n\r\n    \x3c!--<div class="form-group col-sm-12">\r\n            <label for="customerName" class="control-label col-sm-4">\r\n                PN <strong style="color:red">*</strong>\r\n                <p-autoComplete [(ngModel)]="assetId" (onKeyUp)=partEventHandler($event)\r\n                                (onSelect)="onAssetIdselection($event)" [ngModelOptions]="{standalone: true}"\r\n                                [suggestions]="localCollection" (completeMethod)="filterpartItems($event)" [size]="30"\r\n                                [minLength]="1" [dropdown]="true">\r\n                    <ng-template let-assetId pTemplate="part">\r\n                        <div class="ui-helper-clearfix">{{assetId}}</div>\r\n                    </ng-template>\r\n                </p-autoComplete>\r\n\r\n            </label>\r\n        </div>--\x3e\r\n</div>\r\n<div *ngIf="isView==false">\r\n    \x3c!-- <button type="submit" class="btn btn-primary pull-right submit-btn" [disabled]="disableSave"\r\n            (click)="saveCapes()">\r\n        Save\r\n    </button> --\x3e\r\n    <button type="button" class="btn btn-primary pull-right submit-btn" (click)="nextClick()">Next</button>\r\n    \x3c!--<button type="button" class="btn btn-success pull-right submit-btn" (click)="nextClick()">Next</button>--\x3e\r\n    <button type="button" class="btn btn-primary pull-right submit-btn" (click)="backClick()">Previous</button>\r\n</div>\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="form-row" >\r\n            <div class="col-md-3" style="margin-right: 0px !important;">\r\n                <label class="fs12" >Part Number: </label>\r\n                <span class="new-label"> {{restorerecord.partNumber}}</span>\r\n            </div>\r\n            <div class="col-md-4" style="margin-right: 0px !important;">\r\n                <label class="fs12"> Capability Type  : </label>\r\n                <span class="new-label"> {{restorerecord.captypedescription}}</span>\r\n\r\n            </div>\r\n            <div class="col-md-2" style="margin-right: 0px !important;">\r\n                <label class="fs12">Model : </label>\r\n                <span class="new-label"> {{restorerecord.modelname}}</span> \r\n            </div>\r\n            <div class="col-md-2" style="margin-right: 0px !important;">\r\n                <label class="fs12">Dash Number : </label>\r\n                <span class="new-label"> {{restorerecord.dashnumber}}</span> \r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<div class="modal fade" id="downloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t<div class="modal-dialog modal-sm">\r\n\t\t<div class="modal-content">\r\n\t\t\t<div class="modal-header">\r\n\t\t\t\t<button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n\t\t\t\t<h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-body" *ngIf="targetData">\r\n\t\t\t\t<strong>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\tYou are attempting to export {{targetData.totalRecords}} of records. \r\n\t\t\t\t\t</span> \r\n\t\t\t\t</strong>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button type="button" class="btn btn-primary" (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):exportCSV(targetData); closeDeleteModal();">Confirm</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="closeDeleteModal()">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div *ngIf="auditHistory" id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static"\r\n     data-keyboard="false">\r\n    <div class="modal-dialog modal-xlg">\r\n\r\n        \x3c!-- Modal content--\x3e\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="closeHistory()">&times;</button>\r\n                <h4 class="modal-title">History of Asset Capes</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <div class="preloader" *ngIf="isSpinnerVisibleView">\r\n                    <div class="loading">\r\n                        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                    </div>\r\n                </div> \r\n                <div class="table-responsive rro-table-cstmvt">\r\n                    <table class="table table-bordered" *ngIf="auditHistory.length> 0 else noDatavailable">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Audit Id</th>\r\n                                <th>PN  <span class="clr-red">*</span></th>\r\n                                <th>PN Description </th>\r\n                                <th>Capability Type <span class="clr-red">*</span></th>\r\n                                <th>Aircraft Manufacturer  <span class="clr-red">*</span></th>\r\n                                <th>Model</th>\r\n                                <th>Dash Number</th>\r\n                                <th>Is Active</th>\r\n                                <th>Is Deleted</th>\r\n                                <th>Created Date</th>\r\n                                <th>Created By</th>\r\n                                <th>Updated Date</th> \r\n                                <th>Updated By</th>\r\n                          \r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngIf="auditHistory.length> 0">\r\n                            <tr *ngFor="let audit of auditHistory; let i = index;">\r\n                                <td>\r\n                                    {{audit.assetCapesAuditId}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'partNumber\', audit.partNumber)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.partNumber}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'partDescription\', audit.partDescription)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.partDescription}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'captypedescription\', audit.captypedescription)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.captypedescription}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'manufacturer\', audit.manufacturer)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.manufacturer}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'modelname\', audit.modelname)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.modelname}}\r\n                                </td>\r\n                                <td [ngStyle]="{\'color\': getColorCodeForHistory(i, \'dashNumber\', audit.dashNumber)  ? \'black\' : \'red\'  }">\r\n                                    {{audit.dashNumber}}\r\n                                </td>\r\n                                <td>\r\n                                    <input type="checkbox" disabled [checked]="audit.isActive == true"\r\n                                    style="margin: 0px auto; display: block;" />  \r\n                                </td>\r\n                                <td>\r\n                                    <input type="checkbox" disabled [checked]="audit.isDeleted == true"\r\n                                    style="margin: 0px auto; display: block;" />  \r\n                                </td>\r\n                                <td>{{audit.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                <td>{{audit.createdBy}}</td>\r\n                                <td>{{audit.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                                <td>{{audit.updatedBy}}</td>\r\n                            </tr>\r\n                        </tbody>\r\n\r\n\r\n                    </table>\r\n                    <ng-template #noDatavailable>\r\n                        <div class="text-center">\r\n                            \x3c!--<img src="../../assets/images/binoculars.png" style="height: 100px; width: 100px;">--\x3e\r\n                            <h4 style="color: #ff5663;">No History Found </h4>\r\n                        </div>\r\n\r\n                    </ng-template>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" (click)="closeHistory()">Close</button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div> '},"27c/":function(e,t,n){"use strict";n.r(t),t.default='<div *ngIf="!isWorkOrder">\r\n    <div class="x_content">\r\n        \x3c!-- <nav aria-label="breadcrumb">\r\n            <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n                <li class="breadcrumb-item active" aria-current="page">Asset</li>\r\n                <li class="breadcrumb-item" aria-current="page">Asset List</li>\r\n            </ol>\r\n        </nav> --\x3e\r\n        <p-breadcrumb [model]="breadcrumbs" [home]="home"></p-breadcrumb>\r\n                        <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Asset List</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="navigateTogeneralInfo()">\r\n                                  Add Asset\r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body"> \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="allAssetInfo" \r\n                                 [metaKeySelection]="true" [(first)]="pageNumber" [rows]="pageSize" [paginator]="true"\r\n                                  [pageLinks]="3" [rowsPerPageOptions]="[10,20,50,100]" [columns]="selectedColumns"\r\n                                 selectionMode="multiple" [(selection)]="selectedRows" [resizableColumns]="true" [reorderableColumns]="true"\r\n                                 [scrollable]="true" [totalRecords]="totalRecords" scrollHeight="450px" (onLazyLoad)="publicationPagination($event)" [lazy]="true">\r\n                            <ng-template pTemplate="caption">\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                        <p-multiSelect [maxSelectedLabels]="2" [options]="cols" optionLabel="header"\r\n                                        [(ngModel)]="selectedColumns" [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                        selectedItemsLabel="{0} columns selected" defaultLabel="Choose Columns">\r\n                         </p-multiSelect>\r\n                        </div>\r\n                        <div class="col">\r\n                          <div\r\n                            style="width: auto !important; float: right;"\r\n                            class="inner-addon right-addon w50 inline-block g-filter-search-cstm">\r\n                            <i class="fa fa-search"></i>\r\n                            <input type="text" pInputText size="50"\r\n                                               class="form-control"\r\n                                               (input)="dt.filterGlobal($event.target.value, \'contains\')"\r\n                                               placeholder="Filter"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="row">\r\n                              <div class="col">\r\n                                <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data"\r\n                                matTooltipPosition="above" pButton icon="fa-download" style="padding: 5px 12px !important;" iconPos="left"\r\n                                label="Export All Data"  data-toggle="modal"\r\n                                (click)="selectedOnly = false; targetData = dt;" \r\n                                data-target="#downloadConfirmation"></button>\r\n                        <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data"\r\n                                matTooltipPosition="above" matTooltip="Download Selected Data"\r\n                                matTooltipPosition="above" style="padding: 5px 12px !important;" pButton icon="fa-download" iconPos="left"\r\n                                label="Export Selected Data"\r\n                                (click)="dt.exportCSV({selectionOnly:true})"\r\n                               ></button>\r\n                               \x3c!-- data-toggle="modal"\r\n                               data-target="#downloadConfirmation"\r\n                               (click)="selectedOnly = true; targetData = dt;" --\x3e\r\n                    </div>\r\n                    <div class="col">\r\n                        <div class="">\r\n                          <div\r\n                            class="col"\r\n                            style="width: 400px; float: right; padding-top: 3px;"\r\n                          >\r\n                            <div class="form-group">\r\n                                <div\r\n                                class="pull-left"\r\n                                style="margin-top: 4px; margin-right: 15px;"\r\n                              >\r\n                              <label class="radio-cstm wauto">\r\n                                <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="geListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                <span class="checkmark"></span>Active\r\n                            </label>\r\n                        </div>\r\n                        <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                            <label class="radio-cstm wauto">\r\n                                <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="geListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                <span class="checkmark"></span>In-Active\r\n                            </label>\r\n                        </div>\r\n                        <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                            <label class="radio-cstm wauto">\r\n                                <input type="radio" name="EmpStatus" class="form-control" value="ALL" (click)="geListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                <span class="checkmark"></span>All\r\n                            </label>\r\n                        </div>\r\n                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                            <label style="width: auto !important;margin-top: 3px;">\r\n                 \r\n                                <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent"  (click)="getDeleteListByStatus($event.target.checked)"\r\n                                />\r\n                              <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                            Show  Deleted List \r\n                            </label>\r\n                          </div>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n              </div>\r\n              </div> \r\n                            </ng-template>\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                    <col *ngFor="let col of columns" style="width:140px">\r\n                                </colgroup>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns style="padding-top: 1% !important">\r\n                                <tr>\r\n                                    <ng-container *ngFor="let col of columns">\r\n                                        <th class="text-center"\r\n                                            *ngIf="col.field!=\'companyName\' && col.field!=\'buName\' && col.field!=\'deptName\' && col.field!=\'divName\'"\r\n                                            pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                            {{col.header}}\r\n                                            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                        </th>\r\n                                        <th class="text-center" *ngIf="col.field==\'companyName\'" colspan="4"\r\n                                            pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                            Management Structure\r\n                                        </th>\r\n                                    </ng-container>\r\n                                    <th style="width:150px;position: sticky;" *ngIf="selectedColumns.length> 0">\r\n                                        Actions\r\n                                    </th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        \x3c!--  --\x3e\r\n                                        <input  style="width:100%;" *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                               \x3c!-- <input type="date" class="hidePlaceHolder"\r\n                                              name="createdDate"\r\n                                               style="width:100%;"\r\n                                               (change)="dateFilterForTableList($event.target.value, col.field )"> --\x3e\r\n                                        \x3c!-- <input type="date" class="hidePlaceHolder"\r\n                                               *ngIf="col.field == \'updatedDate\'" name="updatedDate"\r\n                                               style="width:100%;"\r\n                                               (change)="dateFilterForTableList($event.target.value, col.field )"> --\x3e\r\n\r\n                                               <input type="date"   style="width:100%" class="hidePlaceHolder" *ngIf="col.field == \'createdDate\'"\r\n                                               name="createdDate"  (change)="dateFilterForTable($event.target.value, col.field)" />\r\n <input type="date" style="width:100%"  class="hidePlaceHolder" *ngIf="col.field == \'updatedDate\'"   name="updatedDate"\r\n                            (change)="dateFilterForTable($event.target.value,col.field)" />\r\n                                    </th>\r\n                                    <th style="width:150px;position: sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-asset let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle\r\n                                    (dblclick)="openView(view,rowData)">\r\n\r\n                                    <td style="width:auto" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle>\r\n                                         <ng-container *ngIf="col.field !=\'calibrationRequiredNew\' && col.field!=\'isSerializedNew\'">\r\n                                            {{\r\n                                                col.field == \'createdDate\'\r\n                                                  ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                                  : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                  ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                                  : rowData[col.field] \r\n                                              }}\r\n                                        </ng-container>\r\n                                        <ng-container *ngIf="col.field ==\'calibrationRequiredNew\' || col.field ==\'isSerializedNew\'">\r\n                                            <input type="checkbox" disabled [checked]="rowData[col.field] == \'Yes\'"\r\n                                                   style="margin: 0px auto; display: block;" />\r\n                                        </ng-container>\r\n                                    </td> \r\n                                    \r\n                                    <td class="action-icons-cstm" style="width:150px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                         <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                                           matTooltipPosition="above" (onChange)="toggleIsActive(rowData,$event)"></p-inputSwitch> \r\n                                                           \x3c!-- (onChange)="openView(view,rowData)" --\x3e\r\n                                                           <span > \r\n                                                <a class="btn nobg btn-view-cstm"\r\n                                                   (click)="openView(view,rowData)" matTooltip="View" matTooltipPosition="above">\r\n                                                    <i class="fa fa-eye"></i>\r\n                                                </a> \r\n                                            </span>\r\n                                            <span>\r\n                                                <a class="btn nobg btn-edit-cstm" (click)="openAssetToEdit(rowData)"\r\n                                                   matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-pencil"></i></a>\r\n                                            </span>\r\n                                          <span>\r\n                                                <a class="btn nobg btn-delete-cstm"\r\n                                                   (click)="openHistory(history,rowData)" matTooltip="History" matTooltipPosition="above">\r\n                                                    <i class="fa fa-history"></i>\r\n                                                </a>\r\n                                            </span>\r\n                                            <span>\r\n                                                <a class="btn nobg btn-delete-cstm"\r\n                                                   (click)="openDelete(content,rowData)" matTooltip="Delete" matTooltipPosition="above">\r\n                                                    <i class="fa fa-trash"></i>\r\n                                                </a> \r\n                                            </span>\r\n\r\n                                        </div>\r\n                                        <div *ngIf="currentDeletedstatus==true">\r\n                                            <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                            matTooltipPosition="above" (onChange)="changeStatus(rowData)"></p-inputSwitch> \r\n                                            <span data-toggle="modal" data-target="#view">\r\n                                                <a class="btn nobg btn-view-cstm" (onChange)="openView(view,rowData)"\r\n                                                   (click)="openView(view,rowData)" matTooltip="View" matTooltipPosition="above">\r\n                                                    <i class="fa fa-eye"></i>\r\n                                                </a> \r\n                                            </span>\r\n                                          <span ><a class="btn nobg" (click)="restore(restoreId,rowData);"  matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                          <span>\r\n                                            <a class="btn nobg btn-delete-cstm"\r\n                                               (click)="openHistory(history,rowData)" matTooltip="History" matTooltipPosition="above">\r\n                                                <i class="fa fa-history"></i>\r\n                                            </a>\r\n                                        </span>\r\n                                        </div> \r\n                                       </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns>\r\n                                <tr>\r\n                                    <td colspan="18" style="color: red; font-weight: bold; text-align: center">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <div style="text-align: right;">\r\n                                    <label id="footer" class="footer">Total:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText\r\n                                           type="text" /> &nbsp;&nbsp;\r\n                                    <label id="footer" class="footer1">Pages Count:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText\r\n                                           type="text" />\r\n                                </div>\r\n                            </ng-template>\r\n                        </p-table>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div> \r\n    <ng-template #view class="modal fade assetMange" id="view" role="dialog"> \r\n        <div class="modal-content ">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">\xd7</button>\r\n                <h4 class="modal-title">Details of Asset: <span>"{{assetViewList.assetId}}"</span></h4>\r\n            </div>\r\n            <div class="modal-body viewform">\r\n                <div class="preloader" *ngIf="isSpinnerVisibleView">\r\n                    <div class="loading">\r\n                        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                    </div>\r\n                </div>\r\n                <div id="adminsearchlocationajax" class="table-responsive default-bg clear">\r\n                    <div class="panel-group" id="accordion">\r\n                        <div class="panel panel-default">\r\n                            <div class="form-row" style="width: 100%;">\r\n                                <div class="col-md-12 shadow-box-cstm" style="margin-left: 8px;max-width: 99.2%">\r\n                                    <div class="col-md-3">\r\n                                        <p class="fs12">\r\n                                            <span class="control-label labels-font-header">Asset ID : </span>\r\n                                            <span class="span-header-red pl-1" style="text-transform: capitalize;">{{ assetViewList.assetId }}</span>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div class="col-md-3">\r\n                                        <p class="fs12">\r\n                                            <span class="control-label labels-font-header">Asset Name : </span>\r\n                                            <span class="span-header-red pl-1" style="text-transform: capitalize; ">{{ assetViewList.name }}</span>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div class="col-md-3">\r\n                                        <p class="fs12">\r\n                                            <span class="control-label labels-font-header">Alt Asset ID : </span>\r\n                                            <span class="span-header-red pl-1" style="text-transform: capitalize">{{ assetViewList.alternateAssetName }}</span>\r\n                                        </p>\r\n                                    </div>\r\n                                    <div class="col-md-3">\r\n                                        <p class="fs12">\r\n                                            <span class="control-label labels-font-header">Asset Class/Attribute: </span>\r\n                                            <span class="span-header-red pl-1" style="text-transform: capitalize">{{ assetViewList.assetAttributeType }}</span>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="table-responsive default-bg clear">\r\n                                <div class="col-sm-6">\r\n                                    <button type="button" class="btn btn-primary" (click)="openAllCollapse()">\r\n                                        Open\r\n                                        All\r\n                                    </button>\r\n                                    <button type="button" class="btn btn-secondary" (click)="closeAllCollapse()">\r\n                                        Close\r\n                                        All\r\n                                    </button>    \r\n                                </div>\r\n                                <div class="col-sm-6" style="text-align-last: end; padding-right: 2%;">\r\n                                    <button type="button" name="isActive" [ngClass]="assetViewList.isActive ? \'btn btn-success\' : \'btn btn-danger\'" disabled>\r\n                                        <span class="value">{{assetViewList.isActive ? \'Active\' : \'In-Active\'}}</span>\r\n                                     </button> \r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div class="panel-heading">\r\n                                <h4 class="panel-title">\r\n                                    <a class="" data-toggle="collapse" href="#step1" aria-expanded="true">\r\n                                        General\r\n                                        Information\r\n                                    </a>\r\n                                </h4>\r\n                            </div>\r\n                            <div id="step1" class="panel-collapse collapse in show">\r\n                                <div class="panel-body">\r\n                                    <div class="col-sm-6">\r\n                                        <div>\r\n                                            <label class="radio-inline pointerEv" style="text-align: start;">\r\n                                                <input type="radio" value="1" name="assetRadio" class="form-check-inline"\r\n                                                    [checked]="assetViewList.isTangible == true"\r\n                                                   >\r\n                                                Tangible\r\n                                            </label>\r\n                                            <label class="radio-inline pointerEv">\r\n                                                <input type="radio" value="2" name="assetRadio"\r\n                                                    [checked]="assetViewList.isIntangible == true">\r\n                                                Intangible\r\n                                            </label>\r\n\r\n                                            <label class="radio-inline pointerEv" *ngIf="assetViewList.isTangible==true" style="width: 150px;">\r\n                                                <input type="radio" value="1" name="assetRadio1" class="form-check-inline"\r\n                                                    [checked]="assetViewList.isdepreciable == true"\r\n                                                   >\r\n                                                   Depreciable\r\n                                            </label>\r\n                                            <label class="radio-inline pointerEv" *ngIf="assetViewList.isTangible==true" style="width: 120px;">\r\n                                                <input type="radio" value="2" name="assetRadio1"\r\n                                                    [checked]="assetViewList.isNonDepreciable == true">\r\n                                                    Non-Depreciable\r\n                                            </label>\r\n                                            <label class="radio-inline pointerEv" *ngIf="assetViewList.isIntangible==true" style="width: 150px;">\r\n                                                <input type="radio" value="1" name="assetRadio2" class="form-check-inline"\r\n                                                    [checked]="assetViewList.isAmortizable == true"\r\n                                                   >\r\n                                                   Amortizable\r\n                                            </label>\r\n                                            <label class="radio-inline pointerEv" *ngIf="assetViewList.isIntangible==true" style="width: 120px;">\r\n                                                <input type="radio" value="2" name="assetRadio2"\r\n                                                    [checked]="assetViewList.isNonAmortizable == true">\r\n                                                    Non-Amortizable\r\n                                            </label>\r\n                                        </div>\r\n                                        <p> \r\n                                            \x3c!-- <span class="label"><b>Tangible/Intangible: </b></span><span class="value">{{assetViewList.depreOrIntang}}</span> --\x3e\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Entry Date: </b></span><span class="value">{{assetViewList.entryDate | date: \'MM/dd/yyyy  h:mm a\'}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Asset ID: <span class="text-danger">*</span></b></span><span class="value">{{assetViewList.assetId}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Asset Name: <span class="text-danger">*</span></b></span><span class="value">\r\n                                                {{assetViewList.name}}\r\n                                            </span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Asset Description: </b></span><span class="value">{{assetViewList.description}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Alt Asset ID: </b></span><span class="value">{{assetViewList.alternateAssetName}}</span>\r\n                                        </p>\r\n                                        <div *ngIf="assetViewList.isIntangible==false">\r\n                                        <p>\r\n                                            <span class="label"><b>Acquisition Type: <span class="text-danger">*</span></b></span><span class="value">{{assetViewList.assetAquisitionType}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Manufacturer: </b></span><span class="value">\r\n                                                {{assetViewList.manufacturer}}\r\n                                            </span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Manufactured Date: </b></span><span class="value">{{assetViewList.manufacturedDate | date: \'MM/dd/yyyy\'}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Expiration Date: </b></span><span class="value">{{assetViewList.expirationDate | date: \'MM/dd/yyyy\'}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Model Number: </b></span><span class="value">{{assetViewList.model}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Serialized: </b></span>\r\n                                            <span class="value">\r\n                                                <input type="checkbox" disabled [checked]="assetViewList.isSerialized==true">\r\n                                            </span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>UOM: <span class="text-danger">*</span> </b></span><span class="value">{{assetViewList.unitOfMeasureName}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Currency:  <span class="text-danger">*</span></b></span><span class="value">{{assetViewList.currency}}</span>\r\n                                        </p>\r\n                                        <p>\r\n                                            <span class="label"><b>Unit Cost: </b></span><span class="value">{{assetViewList.unitCost}}</span>\r\n                                        </p>\r\n                                       \r\n                                        <p *ngIf="assetViewList.isIntangible==false">\r\n                                            <span class="label"><b>Asset Location: </b></span><span class="value">{{assetViewList.assetLocationName}}</span> \r\n                                        </p>\r\n                                       \r\n                                        <div style="display: inline-flex;width: 100%;" *ngIf="assetViewList.isIntangible==false">\r\n                                            <div style=" width: 30.2%;" class="label">\r\n                                                <p>\r\n                                                    <span ><b>Memo: </b></span>\r\n                                                </p>\r\n                                            </div>\r\n                                            <div [innerHTML]="assetViewList.memo"   matTooltipPosition="above"  [matTooltip]="parsedText(assetViewList.memo)" class="value" style="font-size: 11.4px;"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="card" style="margin-top: 6px;width: 50%;" *ngIf="assetViewList.isIntangible==true">\r\n                                        <div class="card-header" style="padding: 0 10px;">\r\n                                            <p style="margin-bottom: 0; font-size: 12px;">\r\n                                                Management Structure <span class="text-danger">*</span></p>\r\n                                        </div>\r\n                                        <div class="card-body" style="padding: 8px 12px 6px;">\r\n                                           \r\n                                                <span class="form-group ">\r\n                                                    <b> </b></span><span class="form-control ma-fd">\r\n                                                    {{assetViewList.level1}}\r\n\r\n                                                </span>\r\n                                            \r\n                                                <span class="form-group ">\r\n                                                    <b> </b></span><span class="form-control ma-fd">\r\n                                                    {{assetViewList.level2}}\r\n                                                </span>\r\n                                           \r\n                                                <span class="form-group ">\r\n                                                    <b> </b></span><span class="form-control ma-fd">\r\n                                                    {{assetViewList.level3}}\r\n                                                </span>\r\n                                            \r\n                                                <span class="form-group ">\r\n                                                    <b> </b></span><span class="form-control ma-fd">\r\n                                                    {{assetViewList.level4}}\r\n                                                </span>\r\n                                            \r\n                                        </div>\r\n                                    </div>\t\r\n                                    </div> \r\n                                    <div class="col-sm-6">\r\n                                                <div class="card" style="margin-top: 6px;width: 50%;" *ngIf="assetViewList.isIntangible==false">\r\n                                                    <div class="card-header" style="padding: 0 10px;">\r\n                                                        <p style="margin-bottom: 0; font-size: 12px;">\r\n                                                            Management Structure <span class="text-danger">*</span></p>\r\n                                                    </div>\r\n                                                    <div class="card-body" style="padding: 8px 12px 6px;">\r\n                                                       \r\n                                                            <span class="form-group ">\r\n                                                                <b> </b></span><span class="form-control ma-fd">\r\n                                                                {{assetViewList.level1}}\r\n\r\n                                                            </span>\r\n                                                        \r\n                                                            <span class="form-group ">\r\n                                                                <b> </b></span><span class="form-control ma-fd">\r\n                                                                {{assetViewList.level2}}\r\n                                                            </span>\r\n                                                       \r\n                                                            <span class="form-group ">\r\n                                                                <b> </b></span><span class="form-control ma-fd">\r\n                                                                {{assetViewList.level3}}\r\n                                                            </span>\r\n                                                        \r\n                                                            <span class="form-group ">\r\n                                                                <b> </b></span><span class="form-control ma-fd">\r\n                                                                {{assetViewList.level4}}\r\n                                                            </span>\r\n                                                        \r\n                                                    </div>\r\n                                                </div>\t\r\n                                        <p *ngIf="assetViewList.isIntangible==false">\r\n                                            <span class="label"><b>Asset Parent: </b></span><span class="value">{{assetViewList.assetParentName}}</span>\r\n                                        </p>\r\n                                        <div *ngIf="assetViewList.isIntangible==false" style="width: 90%;">\r\n\r\n                                            <div class="card" style="margin-top: 20px;margin-bottom:4px;">\r\n                                                <div class="card-header" style="padding: 10px 12px;">\r\n                                                    <p>\r\n                                                        <span class="label"><b>Asset Class/Attribute: <span class="text-danger">*</span></b></span><span class="value">{{assetViewList.assetAttributeType}}</span>\r\n                                                        </p>\r\n                                                </div>\r\n                                                <div class="depreciation-asset-block block-bg1" style="padding-left: 2%;">\r\n                                                    <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                                        </div>\r\n                                                        <p>\r\n                                                            <span class="label"><b>Depreciation Method: </b></span><span class="value">{{assetViewList.depreciationMethod}}</span>\r\n                                                            </p>\r\n                                                            <p>\r\n                                                            <span class="label col-sm-6"><b>Residual  %: </b></span><span class="value">{{assetViewList.residualPer}}</span>\r\n                                                            </p>\r\n                                                            <p>\r\n                                                            <span class="label"><b>Asset Life: </b></span><span class="value">{{assetViewList.assetLife}}</span>\r\n                                                            </p>\r\n                                                            <p>\r\n                                                            <span class="label"><b>Depr Frequency: </b></span><span class="value">{{assetViewList.deprFrequency}}</span>\r\n                                                            </p>\r\n                                                            <p>\r\n                                                            <span class="label"><b>Acquired GL Account: </b></span><span class="value">{{assetViewList.acquiredGL}}</span>\r\n                                                            </p>\r\n                                                            <p>\r\n                                                            <span class="label"><b>Depr Expense GL Account: </b></span><span class="value">{{assetViewList.deprExpenseGL}}</span>\r\n                                                            </p>\r\n                                                            <p>\r\n                                                            <span class="label"><b>Accum Depr GL Account: </b></span><span class="value">{{assetViewList.adDeprGL}}</span>\r\n                                                            </p>\r\n                                                            <p>\r\n                                                            <span class="label"><b>Sale GL Account: </b></span><span class="value">{{assetViewList.saleGL}}</span>\r\n                                                            </p>\r\n                                                            <p>\r\n                                                                <span class="label"><b>Write Off GL Account: </b></span><span class="value">{{assetViewList.writeOffGL}}</span>\r\n                                                                </p>\r\n                                                            <p>\r\n                                                            <span class="label"><b>Write Down GL Account: </b></span><span class="value">{{assetViewList.writeDownGL}}</span>\r\n                                                            </p>\r\n                                                    </div>\r\n                                                        </div>\r\n\r\n\r\n                                        \r\n                                     \r\n                                       \r\n                                        </div>\r\n                                        <div *ngIf="assetViewList.isIntangible==true" style="width: 90%;">\r\n\r\n                                      \r\n\r\n                                                        <div class="card" style="margin-top: 20px;margin-bottom:4px;">\r\n                                                            <div class="card-header" style="padding: 10px 12px;">\r\n                                                                <p>\r\n                                                                    <span class="label"><b>Intangible Class: <span class="text-danger">*</span></b></span><span class="value">{{assetViewList.assetAttributeType}}</span>\r\n                                                                    </p>\r\n                                                            </div>\r\n                                                            <div class="depreciation-asset-block block-bg1" style="padding-left: 2%;">\r\n                                                                <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                                                    <p>\r\n                                                                        <span class="label"><b>Depreciation Method: </b></span><span class="value">{{assetViewList.depreciationMethod}}</span>\r\n                                                                        </p>\r\n                                                                        <p>\r\n                                                                        <span class="label"><b>Intangible Life: </b></span><span class="value">{{assetViewList.assetLife}}</span>\r\n                                                                        </p>\r\n                                                                        <p>\r\n                                                                        <span class="label"><b>Amort Frequency: </b></span><span class="value">{{assetViewList.deprFrequency}}</span>\r\n                                                                        </p>\r\n                                                                        \r\n                                                                        <p>\r\n                                                                        <span class="label"><b>Amort Expense GL Account: </b></span><span class="value">{{assetViewList.deprExpenseGL}}</span>\r\n                                                                        </p>\r\n                                                                        <p>\r\n                                                                        <span class="label"><b>Acc Amort Depr GL Account: </b></span><span class="value">{{assetViewList.adDeprGL}}</span>\r\n                                                                        </p>\r\n                                                                        <p>\r\n                                                                        <span class="label"><b>Intangible GL Account: </b></span><span class="value">{{assetViewList.saleGL}}</span>\r\n                                                                        </p>\r\n                                                                        <p>\r\n                                                                            <span class="label"><b>Intangible Write Off GL Account: </b></span><span class="value">{{assetViewList.writeOffGL}}</span>\r\n                                                                            </p>\r\n                                                                        <p>\r\n                                                                        <span class="label"><b>Intangible Write Down GL Account: </b></span><span class="value">{{assetViewList.writeDownGL}}</span>\r\n                                                                        </p>\r\n                                                                </div>\r\n                                                                    </div>\r\n                                                                    </div>\r\n                                       \r\n                                    \r\n                                      \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="panel panel-default" *ngIf="assetViewList.isIntangible==false"> \r\n                            <div class="panel-heading">\r\n                                <h4 class="panel-title">\r\n                                    <a class="collapsed" data-toggle="collapse" href="#step2">Capes</a>\r\n                                </h4>\r\n                            </div>\r\n                            <div id="step2" class="panel-collapse collapse">\r\n                                <div class="panel-body">\r\n                                    <app-asset-capes [isView]="true" [viewassetRecordId]="assetViewList.assetRecordId"></app-asset-capes>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="panel panel-default" *ngIf="assetViewList.isIntangible==false">\r\n                            <div class="panel-heading">\r\n                                <h4 class="panel-title">\r\n                                    <a class="collapsed" data-toggle="collapse" href="#step3">Calibration</a>\r\n                                </h4>\r\n                            </div>\r\n                            <div id="step3" class="panel-collapse collapse">\r\n                                <div class="panel-body">\r\n\r\n                                       <div class="form-row" style="width: 101%;background-color: #fff !important;">\r\n                                    <div class="col-md-3 asset_border" >\r\n                                        <p>\r\n                                            <input type="checkbox" disabled [ngModelOptions]="{standalone: true}" [(ngModel)]="assetViewList.calibrationRequired">\r\n                                            Calibration Required\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.calibrationRequired">\r\n                                            <span class="label"><b>Calibration Frequency <span class="clr-red">*</span>: </b></span><span *ngIf="assetViewList.calibrationFrequencyDays || assetViewList.calibrationFrequencyMonths" class="value">\r\n                                                {{assetViewList.calibrationFrequencyMonths}} Months,\r\n                                                {{assetViewList.calibrationFrequencyDays}} Days\r\n                                            </span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.calibrationRequired">\r\n                                            <span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.calibrationVendor}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.calibrationRequired">\r\n                                            <span class="label"><b>Default Cost: </b></span><span class="value">&nbsp;{{assetViewList.calibrationDefaultCost}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.calibrationRequired">\r\n                                            <span class="label"><b>Currency: <span class="text-danger" *ngIf="assetViewList.calibrationDefaultCost !=0">*</span></b></span><span class="value">&nbsp;{{assetViewList.calibrationCurrencyName}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.calibrationRequired">\r\n                                            <span class="label"><b>GL Account: <span class="text-danger" *ngIf="assetViewList.calibrationRequired">*</span></b></span><span class="value">{{assetViewList.calibrationGlAccount}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.calibrationRequired">\r\n                                            <span class="label"><b>Calibration Memo: </b></span><span class="value textareaMemos" [innerHTML]="assetViewList.calibrationMemo" matTooltipPosition="above"  [matTooltip]="parsedText(assetViewList.calibrationMemo)"></span>\r\n                                        </p>\r\n                                       \r\n                                        <br>\r\n                                        <div class="col-sm-12" *ngIf="assetViewList && assetViewList.calibrationRequired">\r\n                                            <div class="form-group col-sm-12 calibration-block w400"\r\n                                                 *ngIf="assetViewList.calibrationRequired || assetViewList.certificationRequired || assetViewList.inspectionRequired || assetViewList.verificationRequired">\r\n                                                <div class="table-responsive">\r\n                                                    <table class="table table-bordered table-striped">\r\n                                                        <thead style="background:#337ab7;color:#fff">\r\n                                                            <tr>\r\n                                                                <th>Type</th>\r\n                                                                <th colspan="2" style="text-align: center;">Tolerance</th>\r\n                                                            </tr>\r\n                                                        </thead>\r\n                                                        <tbody>\r\n                                                            <tr>\r\n                                                                <td>Min</td>\r\n                                                                <td>\r\n                                                                    <span class="value">{{assetViewList.assetCalibrationMin}}</span>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <span class="value">{{assetViewList.assetCalibrationMinTolerance}}</span>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Max</td>\r\n                                                                <td>\r\n                                                                    <span class="value">{{assetViewList.assetCalibratonMax}}</span>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <span class="value">{{assetViewList.assetCalibrationMaxTolerance}}</span>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr>\r\n                                                                <td>Expected</td>\r\n                                                                <td>\r\n                                                                    <span class="value">{{assetViewList.assetCalibrationExpected}}</span>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <span class="value">{{assetViewList.assetCalibrationExpectedTolerance}}</span>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                            <tr >\r\n                                                                <td>Memo</td>\r\n                                                                <td colspan="2">\r\n                                                                    \x3c!-- <span class="value">{{assetViewList.assetCalibrationMemo}}</span> --\x3e\r\n                                                                    <div [innerHTML]="assetViewList.assetCalibrationMemo" matTooltipPosition="above"  [matTooltip]="parsedText(assetViewList.assetCalibrationMemo)" class="value" style="font-size: 11.4px;"></div>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </div>\r\n                                            </div>\r\n    \r\n                                        </div>\r\n                                    </div>\r\n                                    \x3c!-- *ngIf="assetViewList.certificationRequired" --\x3e\r\n                                    <div class="col-md-3 asset_border" >\r\n                                        <p>\r\n                                            <input type="checkbox" disabled [ngModelOptions]="{standalone: true}" [(ngModel)]="assetViewList.certificationRequired">\r\n                                            Certification Required\r\n                                        </p>\r\n                                        <p  *ngIf="assetViewList && assetViewList.certificationRequired">\r\n                                            <span class="label"><b>Certification Frequency <span class="clr-red">*</span>: </b></span><span *ngIf="assetViewList.certificationFrequencyMonths || assetViewList.certificationFrequencyDays" class="value">\r\n                                                {{assetViewList.certificationFrequencyMonths}} Months,\r\n                                                {{assetViewList.certificationFrequencyDays}} Days\r\n                                            </span>\r\n                                        </p>\r\n                                        <p  *ngIf="assetViewList && assetViewList.certificationRequired">\r\n                                            <span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.certificationVendor}}</span>\r\n                                        </p>\r\n                                        <p  *ngIf="assetViewList && assetViewList.certificationRequired">\r\n                                            <span class="label"><b>Dafault Cost: </b></span><span class="value">&nbsp;{{assetViewList.certificationDefaultCost}}</span>\r\n                                        </p>\r\n                                        <p  *ngIf="assetViewList && assetViewList.certificationRequired">\r\n                                            <span class="label"><b>Currency:  <span class="text-danger" *ngIf="assetViewList.certificationDefaultCost !=0">*</span></b></span><span class="value">&nbsp;{{assetViewList.certificationCurrencyName}}</span>\r\n                                        </p>\r\n                                        <p  *ngIf="assetViewList && assetViewList.certificationRequired">\r\n                                            <span class="label"><b>GL Account: <span class="text-danger" *ngIf="assetViewList.certificationRequired">*</span></b></span><span class="value">{{assetViewList.certificationGlAccount}}</span>\r\n                                        </p>\r\n                                        <p  *ngIf="assetViewList && assetViewList.certificationRequired">\r\n                                            <span class="label"><b>Certification Memo: </b></span><span class="value textareaMemos" [innerHTML]="assetViewList.certificationMemo" matTooltipPosition="above"  [matTooltip]="parsedText(assetViewList.certificationMemo)"></span>\r\n                                        </p>\r\n                                      \r\n                                    </div>\r\n                                    \x3c!-- *ngIf="assetViewList.inspectionRequired" --\x3e\r\n                                    <div class="col-md-3 asset_border" >\r\n                                        <p>\r\n                                            <input type="checkbox" disabled [ngModelOptions]="{standalone: true}" [(ngModel)]="assetViewList.inspectionRequired">\r\n                                            Inspection Required\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.inspectionRequired">\r\n                                            <span class="label"><b>Inspection Frequency <span class="clr-red">*</span>: </b></span><span *ngIf="assetViewList.inspectionFrequencyMonths || assetViewList.inspectionFrequencyDays" class="value">\r\n                                                {{assetViewList.inspectionFrequencyMonths}} Months,\r\n                                                {{assetViewList.inspectionFrequencyDays}} Days\r\n                                            </span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.inspectionRequired">\r\n                                            <span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.inspectionVendor}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.inspectionRequired">\r\n                                            <span class="label"><b>Dafault Cost: </b></span><span class="value">&nbsp;{{assetViewList.inspectionDefaultCost}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.inspectionRequired">\r\n                                            <span class="label"><b>Currency: <span class="text-danger" *ngIf="assetViewList.inspectionDefaultCost !=0">*</span></b></span><span class="value">&nbsp;{{assetViewList.inspectionCurrencyName}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.inspectionRequired">\r\n                                            <span class="label"><b>GL Account: <span class="text-danger" *ngIf="assetViewList.inspectionRequired">*</span></b></span><span class="value">{{assetViewList.inspectionGlAccount}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.inspectionRequired"> \r\n                                             <span class="label"><b>Inspection Memo: </b></span><span class="value textareaMemos" [innerHTML]="assetViewList.inspectionMemo" matTooltipPosition="above"  [matTooltip]="parsedText(assetViewList.inspectionMemo)"></span> \r\n                                        </p>\r\n                                    </div>\r\n                                    \x3c!-- *ngIf="assetViewList.verificationRequired" --\x3e\r\n                                    <div class="col-md-3 asset_border" >\r\n                                        <p>\r\n                                            <input type="checkbox" disabled [ngModelOptions]="{standalone: true}" [(ngModel)]="assetViewList.verificationRequired">\r\n                                            Verification Required\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.verificationRequired">\r\n                                            <span class="label"><b>Verification Frequency <span class="clr-red">*</span>: </b></span><span *ngIf="assetViewList.verificationFrequencyMonths || assetViewList.verificationFrequencyDays" class="value">\r\n                                                {{assetViewList.verificationFrequencyMonths}} Months,\r\n                                                {{assetViewList.verificationFrequencyDays}} Days\r\n                                            </span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.verificationRequired">\r\n                                            <span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.verificationVendor}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.verificationRequired">\r\n                                            <span class="label"><b>Dafault Cost: </b></span><span class="value">&nbsp;{{assetViewList.verificationDefaultCost}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.verificationRequired">\r\n                                            <span class="label"><b>Currency:<span class="text-danger" *ngIf="assetViewList.verificationDefaultCost !=0">*</span> </b></span><span class="value">&nbsp;{{assetViewList.verificationCurrencyName}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.verificationRequired">\r\n                                            <span class="label"><b>GL Account: <span class="text-danger" *ngIf="assetViewList.verificationRequired">*</span></b></span><span class="value">{{assetViewList.verificationGlAccount}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.verificationRequired">\r\n                                            <span class="label"><b>Verification Memo: </b></span><span class="value textareaMemos" [innerHTML]="assetViewList.verificationMemo" matTooltipPosition="above"  [matTooltip]="parsedText(assetViewList.verificationMemo)"></span>\r\n                                        </p>\r\n                                       \r\n                                    </div>\r\n                                       </div>\r\n                               \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="panel panel-default" *ngIf="assetViewList.isIntangible==false">\r\n                            <div class="panel-heading">\r\n                                <h4 class="panel-title">\r\n                                    <a class="collapsed" data-toggle="collapse" href="#step4">\r\n                                        Maintenance &amp;\r\n                                        Warranty\r\n                                    </a>\r\n                                </h4>\r\n                            </div>\r\n                            <div id="step4" class="panel-collapse collapse">\r\n                                <div class="panel-body">\r\n                                    <div class="form-row" style="width: 101%;background-color: #fff !important;">\r\n                                  <div class="col-sm-3 asset_border" style="padding:6px;">\r\n                                \r\n                                        <p>\r\n                                       \r\n                                            <input type="checkbox" disabled [ngModelOptions]="{standalone: true}" [(ngModel)]="assetViewList.assetIsMaintenanceReqd">\r\n                                            Maintenance Required\r\n                                        </p>\r\n                                        \r\n                                        <p *ngIf="assetViewList && assetViewList.assetIsMaintenanceReqd">  \r\n                                            <span class="label"><b>Maintenance Frequency <span class="clr-red">*</span>: </b></span><span *ngIf="assetViewList.maintenanceFrequencyMonths || assetViewList.maintenanceFrequencyDays" class="value">\r\n                                                {{assetViewList.maintenanceFrequencyMonths}} Months,\r\n                                                {{assetViewList.maintenanceFrequencyDays}} Days\r\n                                            </span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.assetIsMaintenanceReqd">\r\n                                            <span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.maintenanceVendor}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.assetIsMaintenanceReqd">\r\n                                            <span class="label"><b>GL Account: <span class="text-danger" *ngIf="assetViewList.assetIsMaintenanceReqd">*</span></b></span><span class="value">{{assetViewList.maintenanceGlAccount}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.assetIsMaintenanceReqd">\r\n                                            <span class="label"><b>Maintenance Memo: </b></span><span class="value textareaMemos" [innerHTML]="assetViewList.maintenanceMemo" matTooltipPosition="above"  [matTooltip]="parsedText(assetViewList.maintenanceMemo)"></span>\r\n                                        </p>\r\n                                        \r\n                                    </div>\r\n                                    <div class="col-sm-4 asset_border"  style="padding:6px;">\r\n                                \r\n                                        <p>\r\n                                        <input type="checkbox" disabled [ngModelOptions]="{standalone: true}" [(ngModel)]="assetViewList.isWarrantyRequired">\r\n                                            Warranty Required\r\n                                        </p >\r\n                                            <p *ngIf="assetViewList && assetViewList.isWarrantyRequired">\r\n                                            <span class="label"><b>Warranty Company: </b></span><span class="value">{{assetViewList.warrantyCompany}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.isWarrantyRequired">\r\n                                            <span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.warrantyVendor}}</span>\r\n                                        </p>\r\n                                        <p *ngIf="assetViewList && assetViewList.isWarrantyRequired">\r\n                                            <span class="label"><b>GL Account: <span class="text-danger" *ngIf="assetViewList.isWarrantyRequired">*</span> </b></span><span class="value">{{assetViewList.warrantyGlACoount}}</span>\r\n                                        </p>\r\n                                    </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                        (click)="dismissModel()">\r\n                    Close\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n    <div class="modal fade" id="downloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-sm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n                    <h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n                </div>\r\n                <div class="modal-body" *ngIf="targetData">\r\n                    <strong>\r\n                        <span>\r\n                            You are attempting to export {{targetData.totalRecords}} of records. \r\n                        </span> \r\n                    </strong>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary" (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):exportCSV(targetData); closeDeleteModal();">Confirm</button>\r\n                    <button type="button" class="btn btn-danger" (click)="closeDeleteModal()">Cancel</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    <ng-template #content let-c="close" let-d="dismiss">\r\n        <div class="modal-header">\r\n            \r\n            <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n    \r\n            \r\n            </button>\r\n          \r\n        </div>\r\n\r\n        <div class="modal-body">\r\n            <strong>\r\n                Asset Name:\r\n                <span class="new-label">{{assetService.listCollection.name}}</span>\r\n            </strong>\r\n        </div>\r\n \r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-primary" (click)="removeAsset()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n\r\n\r\n    </ng-template>\r\n    <ng-template #history let-c="close" let-d="dismiss">\r\n        <div class="modal-header">\r\n            <h4 class="modal-title">History of Asset </h4>\r\n            <button type="button" class="close" aria-label="Close" (click)="dismissHistoryModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n        </div>\r\n        <div class="modal-body">\r\n            <div class="text-center">\r\n                <img src="../../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                <h4 style="color: #ff5663;">No History Found </h4>\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class="modal-footer">\r\n\r\n            <button type="button" class="btn btn-danger" (click)="dismissHistoryModel()">Close</button>\r\n        </div>\r\n\r\n    </ng-template>\r\n\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Asset Name:\r\n            <span class="new-label">{{restorerecord.name}}</span>\r\n        </strong>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n            <div class="preloader" *ngIf="isSpinnerVisible">\r\n                <div class="loading">\r\n                    <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                </div>\r\n            </div>\r\n'},"6Aim":function(e,t,n){"use strict";n.r(t),t.default='.btn-adjhist-cstm i.fa-history {\n  color: #333333;\n}\n\nlabel {\n  text-align: left;\n  width: 100%;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.card-stock {\n  margin-top: 20px;\n  margin-bottom: 10px;\n}\n\n.card-stock .card-header {\n  padding: 10px 12px;\n}\n\n.card-stock .card-header h5 {\n  margin-bottom: 0;\n  font-size: 12px;\n}\n\n.card-stock .card-body {\n  padding: 12px 12px 4px;\n}\n\n.text_editor_box {\n  padding: 10px 3px !important;\n  width: 100%;\n}\n\n.fs12 {\n  display: inline-flex !important;\n}\n\n.card-tolerance .form-group {\n  margin-bottom: 4px;\n}\n\n.header-h5 {\n  line-height: normal !important;\n  color: initial !important;\n}\n\n#invView .modal-body div.form-group label {\n  float: none;\n}\n\n.border-box-cstm {\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 0 10px;\n}\n\n.m-t-5 {\n  margin-top: 5px;\n}\n\n.assetInv-audit table th {\n  padding: 2px;\n  text-align: center;\n  min-width: 130px;\n}\n\n.assetInv-audit table td {\n  padding: 0px 2px;\n}\n\n.min-w-100 {\n  min-width: 100px;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n\n  .col-md-6-cstm {\n    max-width: 44%;\n    margin-right: 30px;\n  }\n}\n\n.container {\n  width: 6em;\n  margin: 2em auto;\n  text-align: center;\n}\n\n.container .ball {\n  width: 1em;\n  height: 1em;\n  margin: 0 auto;\n  border-radius: 1em;\n  background: #848484;\n  -webkit-animation: load 2000ms linear infinite;\n  animation: load 2000ms linear infinite;\n}\n\n.container span {\n  display: block;\n  margin: 0.5em 0 0 0;\n  color: #848484;\n  text-transform: uppercase;\n  font-family: "Roboto", sans-serif;\n  -webkit-animation: pulse 2000ms linear infinite;\n  animation: pulse 2000ms linear infinite;\n}\n\n@-webkit-keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.25;\n  }\n}\n\n@keyframes pulse {\n  0%, 100% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.25;\n  }\n}\n\n@-webkit-keyframes load {\n  0%, 100% {\n    transform: scale(1) translateX(0);\n  }\n  25% {\n    transform: scale(0.25) translateX(-6.5em);\n  }\n  50% {\n    transform: scale(0.15) translateX(0);\n  }\n  75% {\n    transform: scale(0.25) translateX(6.5em);\n  }\n}\n\n@keyframes load {\n  0%, 100% {\n    transform: scale(1) translateX(0);\n  }\n  25% {\n    transform: scale(0.25) translateX(-6.5em);\n  }\n  50% {\n    transform: scale(0.15) translateX(0);\n  }\n  75% {\n    transform: scale(0.25) translateX(6.5em);\n  }\n}\n\n.font_adjust {\n  font-size: 13px !important;\n  margin: 0px !important;\n}'},"9bet":function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var a=function e(t,n,a,r,s,i,o,l,c,d,u,p){_classCallCheck(this,e),this.assetAcquisitionTypeId=n,this.code=a,this.name=r,this.memo=s,this.masterCompanyId=i,this.createdBy=o,this.updatedBy=l,this.createdDate=c,this.updatedDate=d,this.isDelete=u,this.isActive=p}},ACB3:function(e,t,n){"use strict";n.r(t),t.default='\x3c!--<div style="border: 1px solid red">Asset-Steps Component</div>--\x3e\r\n\r\n\r\n        <div class="md-stepper-horizontal orange" *ngIf="showComponentPTab">\r\n            <ng-container *ngFor="let item of items">\r\n                <div class="md-step"\r\n                    [ngClass]="{active: activeIndex >= item.index, editable: activeIndex === item.index}"\r\n                    [class.isDisabled]="!isDisabledSteps"\r\n                    (click)="item.command(item)"\r\n                  >\r\n                    <div class="md-step-circle"><span>{{ item.step }}</span></div>\r\n                    <div class="md-step-title">{{ item.label }}</div>\r\n                    <div class="md-step-bar-left"></div>\r\n                    <div class="md-step-bar-right"></div>\r\n                </div>\r\n\r\n            </ng-container>\r\n         \r\n      \r\n         \r\n      </div>\r\n      \r\n\r\n\r\n'},Ag15:function(e,t,n){"use strict";n.r(t),t.default='<div class="modal-body viewform">\r\n    <div id="adminsearchlocationajax" class="table-responsive default-bg clear">\r\n        <div class="panel-group" id="accordion">\r\n            <div class="panel panel-default">\r\n                <div>\r\n                    <button type="button" class="btn btn-primary" data-toggle="collapse" (click)="openAllCollapse()">Open All</button>\r\n                    <button type="button" class="btn btn-primary collapsed" data-toggle="collapse" (click)="closeAllCollapse()">Close All</button>\r\n                    <hr />\r\n                </div>\r\n                <div class="panel-heading">\r\n                    <h4 class="panel-title">\r\n                        <a class="collapsed" data-toggle="collapse" href="#step1">General Information</a>\r\n                    </h4>\r\n                </div>\r\n                <div id="step1" class="panel-collapse collapse in">\r\n                    <div class="panel-body">\r\n                        <div class="col-sm-6">\r\n                            <p>\r\n                                <span class="label"><b>Entry Date: </b></span><span class="value">{{assetViewList.entryDate}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Asset ID: </b></span><span class="value">{{assetViewList.assetId}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Alt Asset ID: </b></span><span class="value">{{assetViewList.alternateAssetId}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Asset Name: </b></span><span class="value">\r\n                                    {{assetViewList.name}}\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Asset Description: </b></span><span class="value">{{assetViewList.description}}</span>\r\n                            </p>\r\n                            <div class="ms-block">\r\n                                <p>\r\n                                    <span class="label"><b>Management Structure: </b></span>\r\n                                </p>\r\n                                <p>\r\n                                    <span class="label"><b>Entity: </b></span><span class="value">\r\n                                        {{assetViewList.companyName}}\r\n                                    </span>\r\n                                </p>\r\n                                <p>\r\n                                    <span class="label"><b> </b></span><span class="value">\r\n                                        {{assetViewList.buName}}\r\n                                    </span>\r\n                                </p>\r\n                                <p>\r\n                                    <span class="label"><b> </b></span><span class="value">\r\n                                        {{assetViewList.deptName}}\r\n                                    </span>\r\n                                </p>\r\n                                <p>\r\n                                    <span class="label"><b> </b></span><span class="value">\r\n                                        {{assetViewList.divName}}\r\n                                    </span>\r\n                                </p>\r\n                            </div>\r\n                            <p>\r\n                                <span class="label"><b>Intangible/Depreciable: </b></span><span class="value">{{assetViewList.depreOrIntang}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Acquisition Type: </b></span><span class="value">{{assetViewList.assetAcquisitionTypeId}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Manufacturer: </b></span><span class="value">\r\n                                    {{assetViewList.manufacturerName}}\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Manufactured Date: </b></span><span class="value">{{assetViewList.manufacturedDate}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Model Num: </b></span><span class="value">{{assetViewList.model}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Serialized?: </b></span>\r\n                                <span class="value">{{assetViewList.isSerialized}}</span>\r\n                            </p>\r\n                            <p><span class="label"><b>UOM: </b></span><span class="value">{{assetViewList.unitOfMeasureId}}</span></p>\r\n                            <p><span class="label"><b>Currency: </b></span><span class="value">{{assetViewList.currencyId}}</span></p>\r\n                            <p>\r\n                                <span class="label"><b>Unit Cost: </b></span><span class="value">{{assetViewList.unitCost}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Expiration Date: </b></span><span class="value">{{assetViewList.expirationDate}}</span>\r\n                            </p>\r\n                        </div>\r\n                        <div class="col-sm-6">\r\n                            <p>\r\n                                <span class="label"><b>Asset Location: </b></span><span class="value">{{assetViewList.asset_Location}}</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Memo: </b></span><span class="value">{{assetViewList.memo}} </span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Asset Parent: </b></span><span class="value">{{assetViewList.assetParentId}}</span>\r\n                            </p>\r\n                            <p><span class="label"><b>Asset Class: </b></span><span class="value">{{assetViewList.assetTypeId}}</span></p>\r\n                            <p><span class="label"><b>Depreciation Method: </b></span><span class="value">{{assetViewList.depreciationMethodObj}}</span></p>\r\n                            <p><span class="label"><b>Residual %: </b></span><span class="value">{{assetViewList.residualPercentage}}</span></p>\r\n                            <p><span class="label"><b>Asset Life: </b></span><span class="value">{{assetViewList.assetLife}}</span></p>\r\n                            <p><span class="label"><b>Depr Frequency: </b></span><span class="value">{{assetViewList.depreciationFrequencyObj}}</span></p>\r\n                            <p><span class="label"><b>Acquired GL: </b></span><span class="value">{{assetViewList.acquiredGLAccountObj}}</span></p>\r\n                            <p><span class="label"><b>Depr Expense GL: </b></span><span class="value">{{assetViewList.deprExpenseGLAccountObj}}</span></p>\r\n                            <p><span class="label"><b>AD Depr GL: </b></span><span class="value">{{assetViewList.adDepsGLAccountId}}</span></p>\r\n                            <p><span class="label"><b>Sale GL: </b></span><span class="value">{{assetViewList.assetSaleObj}}</span></p>\r\n                            <p><span class="label"><b>Write Off GL: </b></span><span class="value">{{assetViewList.assetWriteOffObj}}</span></p>\r\n                            <p><span class="label"><b>Write Down GL: </b></span><span class="value">{{assetViewList.assetWriteDownObj}}</span></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="panel panel-default">\r\n                <div class="panel-heading">\r\n                    <h4 class="panel-title">\r\n                        <a class="collapsed" data-toggle="collapse" href="#step2">Capes</a>\r\n                    </h4>\r\n                </div>\r\n                <div id="step2" class="panel-collapse collapse">\r\n                    <div class="panel-body">\r\n                        <div class="col-sm-12">\r\n                            <div class="table-responsive">\r\n                                \x3c!--<table class="table table-bordered table-striped">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>S.no</th>\r\n                                            <th>PN</th>\r\n                                            <th>PN Description</th>\r\n                                            <th>Capability type</th>\r\n                                            <th>Aircraft maufacturer</th>\r\n                                            <th>Models</th>\r\n\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>{{assetViewList.assetTypeId}}</td>\r\n                                            <td>PN123</td>\r\n                                            <td>Engine toll</td>\r\n                                            <td>MFG</td>\r\n                                            <td>Airbus</td>\r\n                                            <td>AB123</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>2</td>\r\n                                            <td>PN123</td>\r\n                                            <td>Engine toll</td>\r\n                                            <td>Overhaul</td>\r\n                                            <td>Boeing</td>\r\n                                            <td>AB125</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>3</td>\r\n                                            <td>PN123</td>\r\n                                            <td>Engine toll</td>\r\n                                            <td>Exchange</td>\r\n                                            <td>Airbus</td>\r\n                                            <td>AB124</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>--\x3e\r\n                                <p-table>\r\n\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th>PN</th>\r\n                                            <th>PN Description</th>\r\n                                            <th>Capability type</th>\r\n                                            <th>Aircraft maufacturer</th>\r\n                                            <th>Models</th>\r\n                                            <th>Dash Number</th>\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n\r\n                                    <ng-template pTemplate="body" let-rowData let-columns="columns" let-asset>\r\n                                        <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n\r\n                                            <td style="width:auto" *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                                                {{rowData[col.field]}}\r\n                                            </td>\r\n                                        </tr>\r\n                                    </ng-template>\r\n                                </p-table>\r\n                                <p class="clr-red">Number of rows in the table are all the possible combinations of the PN, Capability Type, Aircraft Manufacturer and Model selected.</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="panel panel-default">\r\n                <div class="panel-heading">\r\n                    <h4 class="panel-title">\r\n                        <a class="collapsed" data-toggle="collapse" href="#step3">Calibration</a>\r\n                    </h4>\r\n                </div>\r\n                <div id="step3" class="panel-collapse collapse">\r\n                    <div class="panel-body">\r\n                        <div class="col-sm-6" *ngIf="assetViewList.calibrationRequired">\r\n                            <p>\r\n                                <span class="label"><b>Calibration Frequency: </b></span><span class="value">{{assetViewList.calibrationFrequencyMonths}}Months{{assetViewList.calibrationFrequencyDays}}Days</span>\r\n                            </p>\r\n                            <p><span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.calibrationDefaultVendorId}} </span></p>\r\n                            <p>\r\n                                <span class="label"><b>Dafault Cost: </b></span><span class="value">{{assetViewList.calibrationDefaultCost}}</span>\r\n                            </p>\r\n                            <p><span class="label"><b>GL Account: </b></span><span class="value">{{assetViewList.calibrationGlAccountId}}</span></p>\r\n                            <p>\r\n                                <span class="label"><b>Calibration Memo: </b></span><span class="value">{{assetViewList.calibrationMemo}}</span>\r\n                            </p>\r\n                        </div>\r\n                        <div class="col-sm-6" *ngIf="assetViewList.certificationRequired">\r\n                            <p>\r\n                                <span class="label"><b>Certification Frequency: </b></span><span class="value">{{assetViewList.certificationFrequencyMonths}}Months{{assetViewList.certificationFrequencyDays}}Days</span>\r\n                            </p>\r\n                            <p><span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.certificationDefaultVendorId}} </span></p>\r\n                            <p>\r\n                                <span class="label"><b>Dafault Cost: </b></span><span class="value">{{assetViewList.certificationDefaultCost}}</span>\r\n                            </p>\r\n                            <p><span class="label"><b>GL Account: </b></span><span class="value">{{assetViewList.certificationGlAccountId}}</span></p>\r\n                            <p>\r\n                                <span class="label"><b>Certification Memo: </b></span><span class="value">{{assetViewList.certificationMemo}}</span>\r\n                            </p>\r\n                        </div>\r\n                        <div class="col-sm-6" *ngIf="assetViewList.inspectionRequired">\r\n                            <p>\r\n                                <span class="label"><b>Inspection Frequency: </b></span><span class="value">{{assetViewList.inspectionFrequencyMonths}}Months{{assetViewList.inspectionFrequencyDays}}Days</span>\r\n                            </p>\r\n                            <p><span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.inspectionDefaultVendorId}} </span></p>\r\n                            <p>\r\n                                <span class="label"><b>Dafault Cost: </b></span><span class="value">{{assetViewList.inspectionDefaultCost}}</span>\r\n                            </p>\r\n                            <p><span class="label"><b>GL Account: </b></span><span class="value">{{assetViewList.inspectionGlAccountId}}</span></p>\r\n                            <p>\r\n                                <span class="label"><b>Inspection Memo: </b></span><span class="value">{{assetViewList.inspectionMemo}}</span>\r\n                            </p>\r\n                        </div>\r\n                        <div class="col-sm-6" *ngIf="assetViewList.verificationRequired">\r\n                            <p>\r\n                                <span class="label"><b>Verification Frequency: </b></span><span class="value">{{assetViewList.verificationFrequencyMonths}}Months{{assetViewList.verificationFrequencyDays}}Days</span>\r\n                            </p>\r\n                            <p><span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.verificationDefaultVendorId}} </span></p>\r\n                            <p>\r\n                                <span class="label"><b>Dafault Cost: </b></span><span class="value">{{assetViewList.verificationDefaultCost}}</span>\r\n                            </p>\r\n                            <p><span class="label"><b>GL Account: </b></span><span class="value">{{assetViewList.verificationGlAccountId}}</span></p>\r\n                            <p>\r\n                                <span class="label"><b>Verification Memo: </b></span><span class="value">{{assetViewList.verificationMemo}}</span>\r\n                            </p>\r\n                        </div>\r\n\r\n                        <div class="col-sm-12">\r\n                            <div class="form-group col-sm-12 calibration-block w400" *ngIf="assetViewList.calibrationRequired || assetViewList.certificationRequired || assetViewList.inspectionRequired || assetViewList.verificationRequired">\r\n                                <div class="table-responsive">\r\n                                    <table class="table table-bordered table-striped">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th></th>\r\n                                                <th colspan="2">Tolerance</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Min</td>\r\n                                                <td>\r\n                                                    <span class="value">{{assetViewList.assetCalibrationMin}}</span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <span class="value">{{assetViewList.assetCalibrationMinTolerance}}</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Max</td>\r\n                                                <td>\r\n                                                    <span class="value">{{assetViewList.assetCalibratonMax}}</span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <span class="value">{{assetViewList.assetCalibrationMaxTolerance}}</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Expected</td>\r\n                                                <td>\r\n                                                    <span class="value">{{assetViewList.assetCalibrationExpected}}</span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <span class="value">{{assetViewList.assetCalibrationExpectedTolerance}}</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td></td>\r\n                                                <td colspan="2">\r\n                                                    <span class="value">{{assetViewList.assetCalibrationMemo}}</span>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="panel panel-default">\r\n                <div class="panel-heading">\r\n                    <h4 class="panel-title">\r\n                        <a class="collapsed" data-toggle="collapse" href="#step4">\r\n                            Maintenance &amp;\r\n                            Warranty\r\n                        </a>\r\n                    </h4>\r\n                </div>\r\n                <div id="step4" class="panel-collapse collapse">\r\n                    <div class="panel-body">\r\n                        <div class="col-sm-6">\r\n                            <p>\r\n                                <span class="label"><b>Maintenance Required: </b></span>\r\n                                <span class="value">{{assetViewList.assetIsMaintenanceReqd}}</span>\r\n                                \x3c!--<input type="checkbox"\r\n                                       [disabled]="true" [checked]="assetViewList.assetIsMaintenanceReqd" />--\x3e\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Maintenance Contract: </b></span>\r\n                                <span class="value">{{assetViewList.assetMaintenanceIsContract}}</span>\r\n                                \x3c!--<input type="checkbox"\r\n                                       [disabled]="true" [checked]="assetViewList.assetMaintenanceIsContract" />--\x3e\r\n                            </p>\r\n\r\n                            <p>\r\n                                <span class="label"><b>Maintenance Frequency: </b></span><span class="value">{{assetViewList.maintenanceFrequencyMonths}}Months</span>\r\n                            </p>\r\n                            <p>\r\n                                <span class="label"><b>Default Vendor: </b></span><span class="value">{{assetViewList.defaultVendorId}}</span>\r\n                            </p>\r\n                            <p><span class="label"><b>GL Account: </b></span><span class="value">{{assetViewList.glAccountId}}</span></p>\r\n                            <p>\r\n                                <span class="label"><b>Maintenance Memo: </b></span><span class="value">{{assetViewList.maintenanceMemo}}</span>\r\n                            </p>\r\n                        </div>\r\n                        <div class="col-sm-6">\r\n                            <p>\r\n                                <span class="label"><b>Warranty Required: </b></span>\r\n                                <span class="value">{{assetViewList.isWarrantyRequired}}</span>\r\n                                \x3c!--<input type="checkbox" [disabled]="true"\r\n                                       [checked]="assetViewList.isWarrantyRequired" />--\x3e\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},EQKf:function(e,t,n){"use strict";n.r(t),t.default='<div class="x_content">\r\n               \r\n    \x3c!-- <nav aria-label="breadcrumb">\r\n        <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n            <li class="breadcrumb-item active" aria-current="page">Asset Inventory</li>\r\n            <li class="breadcrumb-item" aria-current="page">Asset Inventory List</li>\r\n        </ol>\r\n    </nav> --\x3e\r\n    <p-breadcrumb [model]="breadcrumbs" [home]="home"></p-breadcrumb>\r\n              <div class="card new-card">\r\n                            <div class="card-header bg-primary new-card-header">\r\n                              <div class="row">\r\n                                <div class="col">\r\n                                  <h4 class="new-card-heading">Asset Inventory List</h4>\r\n                                </div>\r\n                                <div>\r\n                                  <button\r\n                                    type="button"\r\n                                    class="btn-sm new-btn-primary"\r\n                                    (click)="navigateTogeneralInfo()"                                \r\n                                  >\r\n                                  Add Asset Inventory \r\n                                  </button>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class="card-body new-card-body">\r\n                       \r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="allAssetInfo"\r\n                                 [metaKeySelection]="true"\r\n                                 [(first)]="pageNumber"\r\n                                 [rows]="pageSize"\r\n                                 [paginator]="true"\r\n                                 [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]"\r\n                                 [columns]="selectedColumns"\r\n                                 selectionMode="multiple"\r\n                                 [(selection)]="selectedRows"\r\n                                 [metaKeySelection]="true"\r\n                                 [resizableColumns]="true"\r\n                                 [reorderableColumns]="true"\r\n                                 [scrollable]="true"\r\n                                 [totalRecords]="totalRecords"\r\n                                 scrollHeight="450px"\r\n                                 (onLazyLoad)="onDataLoad($event)" [lazy]="true">\r\n                            <ng-template pTemplate="caption">\r\n                         \r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                        <p-multiSelect [maxSelectedLabels]="2"\r\n                                                   [options]="cols"\r\n                                                   optionLabel="header"\r\n                                                   [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                                   selectedItemsLabel="{0} columns selected"\r\n                                                   defaultLabel="Choose Columns">\r\n                                    </p-multiSelect>\r\n                                </div>\r\n                                <div class="col">\r\n                                  <div\r\n                                    style="width: auto !important; float: right;"\r\n                                    class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                                  >\r\n                                    <i class="fa fa-search"></i>\r\n                                    <input type="text" pInputText size="50"\r\n                                     class="form-control"\r\n                                    (input)="dt.filterGlobal($event.target.value, \'contains\')"\r\n                                    placeholder="Filter" style="min-height: 28px;" />\r\n                                 </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="row">\r\n                              <div class="col">\r\n                                <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data" matTooltipPosition="above"\r\n                                pButton icon="fa-download" iconPos="left" label="Export All Data" style="padding: 5px 12px !important;"  data-toggle="modal"\r\n                                (click)="selectedOnly = false; targetData = dt;" \r\n                                data-target="#downloadConfirmation"></button>\r\n                                 <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data" matTooltipPosition="above" matTooltip="Download Selected Data" matTooltipPosition="above"\r\n                                pButton icon="fa-download" iconPos="left" style="padding: 5px 12px !important;"\r\n                                 label="Export Selected Data" (click)="dt.exportCSV({selectionOnly:true})"\r\n                                ></button>\r\n                                \x3c!-- data-toggle="modal"\r\n                                data-target="#downloadConfirmation"\r\n                                (click)="selectedOnly = true; targetData = dt;" --\x3e\r\n                               \r\n                               </div>\r\n                                <div class="col">\r\n                                    <div class="">\r\n                                      <div\r\n                                        class="col"\r\n                                        style="width: 370px; float: right; padding-top: 3px;"\r\n                                      >\r\n                                        <div class="form-group">\r\n                                          \x3c!-- <label class="radiobtn-label new-radio-btn-label">Status:</label> --\x3e\r\n                                        <div\r\n                                            class="pull-left"\r\n                                            style="margin-top: 4px; margin-right: 15px;"\r\n                                          >\r\n                                              <label class="radio-cstm wauto">\r\n                                              <input type="radio" name="EmpStatus" class="form-control" value="Active" (click)="geListByStatus(\'Active\')" [(ngModel)]="currentstatus">\r\n                                              <span class="checkmark"></span>Active\r\n                                              </label>\r\n                                        </div>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="EmpStatus" class="form-control" value="InActive" (click)="geListByStatus(\'InActive\')" [(ngModel)]="currentstatus">\r\n                                            <span class="checkmark"></span>In-active\r\n                                        </label>\r\n                                    </div>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="EmpStatus" class="form-control" value="ALL" (click)="geListByStatus(\'ALL\')" [(ngModel)]="currentstatus">\r\n                                            <span class="checkmark"></span>All\r\n                                        </label>\r\n                                    </div>\r\n                                    <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                        <label style="width: auto !important;margin-top: 3px;">\r\n                                         \r\n                                          <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent"  (click)="getDeleteListByStatus($event.target.checked)"\r\n                                            />\r\n                                          <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                        Show  Deleted List \r\n                                        </label>\r\n                                    </div> \r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n                      </div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                    <col *ngFor="let col of columns" style="width:140px">\r\n                                </colgroup>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns style="padding-top: 1% !important">\r\n                                <tr>\r\n                                    <ng-container *ngFor="let col of columns">\r\n                                        <th class="text-center" *ngIf="col.field!=\'companyName\' && col.field!=\'buName\' && col.field!=\'deptName\' && col.field!=\'divName\'" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                            {{col.header}}\r\n                                            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                        </th>\r\n                                        <th class="text-center" *ngIf="col.field==\'companyName\'" colspan="4" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                            Management Structure\r\n                                        </th>\r\n                                    </ng-container>\r\n                                    <th style="width:150px;position: sticky;" *ngIf="selectedColumns.length> 0">Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        \x3c!--  --\x3e\r\n                                        <input  *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'" style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                        <input type="date"   style="width:100%" class="hidePlaceHolder" *ngIf="col.field == \'createdDate\'"\r\n                                        name="createdDate"  (change)="dateFilterForTable($event.target.value, col.field)" />\r\n<input type="date" style="width:100%"  class="hidePlaceHolder" *ngIf="col.field == \'updatedDate\'"   name="updatedDate"\r\n                     (change)="dateFilterForTable($event.target.value,col.field)" />\r\n                                    </th>\r\n                                    <th style="width:150px;position: sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-asset let-rowIndex="rowIndex">\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="viewSelectedRowdbl(rowData)" >\r\n\r\n                                    <td style="width:auto" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle>\r\n\r\n                                          <ng-container *ngIf="col.field !=\'calibrationRequiredNew\'">\r\n                                            {{\r\n                                                col.field == \'createdDate\'\r\n                                                  ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                                  : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                  ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                                  : rowData[col.field] \r\n                                              }}\r\n                                        </ng-container> \r\n                                        <ng-container *ngIf="col.field ==\'calibrationRequiredNew\'">\r\n                                            <input type="checkbox" disabled [checked]="rowData[col.field] == \'Yes\'"\r\n                                                   style="margin: 0px auto; display: block;" />\r\n                                        </ng-container>\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:150px" *ngIf="selectedColumns.length> 0">\r\n                                        <div *ngIf="currentDeletedstatus==false">\r\n                                        <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                                           matTooltipPosition="above" (onChange)="toggleIsActive(rowData,$event)"></p-inputSwitch> \r\n                                                           <span ><a class="btn nobg btn-view-cstm" data-toggle="modal" data-target="#invView" (click)="openView(rowData)" matTooltip="View" matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                            <span><a class="btn nobg btn-edit-cstm" (click)="openAssetToEdit(rowData)" disabled matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-pencil"></i></a> </span>\r\n                                            <span><a class="btn nobg btn-edit-cstm" (click)="openAssetToAdjustment(rowData)" matTooltip="Asset Adjustment" matTooltipPosition="above"><i class="fa fa-adjust"></i></a> </span>\r\n                                            <span><a class="btn nobg btn-adjhist-cstm" matTooltip="Asset Adjustment History" matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n                                            <span data-toggle="modal" data-target="#assetInvAudit"><a class="btn nobg btn-delete-cstm" (click)="openHistory(rowData)" matTooltip="History" matTooltipPosition="above"><i class="fa fa-history"></i></a> </span>\r\n                                            <span><a class="btn nobg btn-delete-cstm" (click)="openDelete(content,rowData)" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a> </span>\r\n\r\n                                        </div>\r\n                                        <div *ngIf="currentDeletedstatus==true">\r\n                                            <p-inputSwitch [(ngModel)]="rowData[\'isActive\']" [disabled]="true" name="isActive{{ rowIndex }}"   matTooltip="{{rowData[\'isActive\'] ? \'Active\': \'In Active\'}}"\r\n                                            matTooltipPosition="above" (onChange)="toggleIsActive(rowData,$event)"></p-inputSwitch> \r\n                                            <span><a class="btn nobg btn-view-cstm" data-toggle="modal" data-target="#invView"  (click)="openView(rowData)" matTooltip="View" matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                                            <span ><a class="btn nobg" (click)="restore(restoreId,rowData);"  matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                            <span data-toggle="modal" data-target="#assetInvAudit"><a class="btn nobg btn-delete-cstm" (click)="openHistory(rowData)" matTooltip="History" matTooltipPosition="above"><i class="fa fa-history"></i></a> </span>\r\n                                        </div>\r\n                                 </td> \r\n\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="emptymessage" let-columns>\r\n                                <tr>\r\n                                    <td colspan="21" style="color: red; font-weight: bold; text-align: start;padding-left: 21% !important;">\r\n                                        No records found\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <div style="text-align: right;">\r\n                                    <label id="footer" class="footer">Total:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                    <label id="footer" class="footer1">Pages Count:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText type="text" />\r\n                                </div>\r\n                            </ng-template>\r\n                        </p-table>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <ng-template #content let-c="close" let-d="dismiss">\r\n        <div class="modal-header">\r\n            <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n            <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n                <span aria-hidden="true">&times;</span>\r\n            </button>\r\n        </div>\r\n        <div class="modal-body">\r\n<p>Asset Name : <span class="new-label">{{this.assetService.listCollection.name}} </span></p>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-primary" (click)="removeAsset()">Yes</button>\r\n            <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n        </div>\r\n    </ng-template>\r\n<div class="modal fade" id="invView" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xlg">\r\n        <div class="modal-content">\r\n        <div class="modal-header">\r\n            <button type="button" class="close" (click)="onCloseView()">&times;</button>\r\n            <div class="col-md-10" >\r\n\r\n                <h4 class="modal-title">Details of Asset Inventory  <span *ngIf="currentAsset">"{{currentAsset.assetId}}" </span></h4> \x3c!--: <span *ngIf="currentAsset">"{{currentAsset.assetId}}"</span>--\x3e\r\n            </div>\r\n            <div class="form-row" style="width: 100%;">\r\n                <div class="col-md-12 shadow-box-cstm">\r\n                    <div class="col-md-2">\r\n                        <p class="fs12">\r\n                            <span class="control-label labels-font-header">Asset ID : </span>\r\n                            <span class="span-header-red pl-1" style="text-transform: capitalize;">{{ currentAsset.assetId }}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="col-md-4">\r\n                        <p class="fs12">\r\n                            <span class="control-label labels-font-header">Asset Name : </span>\r\n                            <span class="span-header-red pl-1" style="text-transform: capitalize; ">{{ currentAsset.name }}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <p class="fs12">\r\n                            <span class="control-label labels-font-header">Alt Asset ID : </span>\r\n                            <span class="span-header-red pl-1" style="text-transform: capitalize">{{ currentAsset.alternateAssetRecord }}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <p class="fs12">\r\n                            <span class="control-label labels-font-header">Asset Class : </span>\r\n                            <span class="span-header-red pl-1" style="text-transform: capitalize" *ngIf="currentAsset.isTangible">{{ currentAsset.assetType }}</span>\r\n                            <span class="span-header-red pl-1" style="text-transform: capitalize" *ngIf="!currentAsset.isTangible">{{ currentAsset.assetIntangibleTypeName }}</span>\r\n                            \r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="col-md-12" style="text-align-last: end; padding-right: 2%;">\r\n                <button type="button" name="isActive" [ngClass]="currentAsset.isActive ? \'btn btn-success\' : \'btn btn-danger\'" disabled>\r\n                    <span class="value">{{currentAsset.isActive ? \'Active\' : \'In-Active\'}}</span>\r\n                 </button> \r\n            </div>\r\n        </div>\r\n        <div class="modal-body"> \r\n            <div class="preloader" *ngIf="isSpinnerVisibleHistory" style="    z-index: 1060;">\r\n                <div class="loading">\r\n                    <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                </div>\r\n            </div>\r\n            <form #generalForm="ngForm" >\r\n                <div class="form-row">\r\n                    <div class="col-md-4">\r\n                        <div class="form-group">\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm  wauto">\r\n                                    <input type="radio" name="assetRadio" class="form-control" value="1" disabled [checked]="currentAsset.isTangible">\r\n                                    <span class="checkmark"></span> Tangible\r\n                                </label>\r\n                            </div>\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm  wauto">\r\n                                    <input type="radio" name="assetRadio" class="form-control" value="2" disabled [checked]="currentAsset.isIntangible">\r\n                                    <span class="checkmark"></span> Intangible\r\n                                </label>\r\n                            </div>\r\n                        </div> \r\n\r\n\r\n                    </div>\r\n            \r\n                    <div class="col-md-3" *ngIf="currentAsset.isTangible">\r\n                        <div class="form-group">\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm  wauto">\r\n                                    <input type="radio" name="assetisDepreciable" class="form-control" value="1" disabled [checked]="currentAsset.isDepreciable">\r\n                                    <span class="checkmark"></span> Depreciable\r\n                                </label>\r\n                            </div>\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm  wauto">\r\n                                    <input type="radio" name="assetisDepreciable" class="form-control" value="2" disabled [checked]="currentAsset.isNonDepreciable">\r\n                                    <span class="checkmark"></span> Non-Depreciable\r\n                                </label>\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n            \r\n                    <div class="col-md-3" *ngIf="currentAsset.isIntangible">\r\n                        <div class="form-group">\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm  wautomodal-dialog modal-xlg">\r\n                                    <input type="radio" name="assetisAmortizable" class="form-control" value="1" disabled [checked]="currentAsset.isAmortizable">\r\n                                    <span class="checkmark"></span> Amortizable\r\n                                </label>\r\n                            </div>\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm  wautomodal-dialog modal-xlg">\r\n                                    <input type="radio" name="assetisAmortizable" class="form-control" value="2" disabled [checked]="currentAsset.isNonAmortizable">\r\n                                    <span class="checkmark"></span> Non-Amortizable\r\n                                </label>\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            \r\n                <div class="form-row m-t-10">\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Inventory Num</label>\r\n                            <input type="text" class="form-control" name="inventoryNumber" [(ngModel)]="currentAsset.inventoryNumber" disabled>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Entry Date <span class="clr-red">*</span></label>\r\n                            <p-calendar [showIcon]="true" name="entryDate" [(ngModel)]="currentAsset.entryDate" [disabled]="true"></p-calendar>\r\n                        </div>\r\n                       \r\n                        <div class="form-group">\r\n                            <label>Asset ID <span class="clr-red">*</span></label>\r\n                            <input type="text" class="form-control" name="assetId" [(ngModel)]="currentAsset.assetId" disabled>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Alt Asset ID</label>\r\n                            <input type="text" class="form-control" name="alternateAssetId" [(ngModel)]="currentAsset.alternateAssetRecord" disabled>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Asset Name <span class="clr-red">*</span></label>\r\n                            <input type="text" class="form-control" name="name" [(ngModel)]="currentAsset.name" disabled>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Asset Description</label>\r\n                            <input type="text" class="form-control" name="description" [(ngModel)]="currentAsset.description" disabled>\r\n                        </div>\r\n                       \r\n                        <ng-container *ngIf="currentAsset.isTangible">\r\n                            <div class="form-group">\r\n                                <label>Acquisition Type <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control" name="acquisitionType" [(ngModel)]="currentAsset.acquisitionType" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Model Number</label>\r\n                                <input type="text" class="form-control" name="model" [(ngModel)]="currentAsset.model" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Asset Parent</label>\r\n                                <input type="text" class="form-control" name="assetParentId" [(ngModel)]="currentAsset.assetParenRecord" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Manufacturer</label>\r\n                                <input type="text" class="form-control" name="manufacturerName" [(ngModel)]="currentAsset.manufacturerName" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Manufactured Date</label>\r\n                                <p-calendar [showIcon]="true" name="manufacturedDate" [(ngModel)]="currentAsset.manufacturedDate" [disabled]="true"></p-calendar>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                    <label>\r\n                                        <input type="checkbox" name="isSerialized" [(ngModel)]="currentAsset.isSerialized" disabled>\r\n                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                        Is Serialized\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                            <div class="form-group" *ngIf="currentAsset.isSerialized">\r\n                                <label>Serial No <span class="clr-red">*</span></label>\r\n                                <input class="form-control" type="text" name="serialNumber" [(ngModel)]="currentAsset.serialNo" disabled> \r\n                            </div>\r\n                        </ng-container>\r\n                        </div>\r\n                            <div class="col-md-3" *ngIf="currentAsset.isTangible">\r\n                                <ng-container *ngIf="currentAsset.isTangible">\r\n                            <div class="form-group">\r\n                                <label>Asset Status</label>\r\n                                <input type="text" class="form-control" name="assetStatus" [(ngModel)]="currentAsset.assetStatus" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Asset Inventory Status</label>\r\n                                <input type="text" class="form-control" name="inventoryStaus" [(ngModel)]="currentAsset.inventoryStaus" disabled>\r\n                            </div>\r\n                           \r\n                            \r\n                            <div class="form-group">\r\n                                <label>UOM <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control" name="unitOfMeasureName" [(ngModel)]="currentAsset.unitOfMeasureName" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Expiration Date</label>\r\n                                <p-calendar [showIcon]="true"  name="expirationDate" [(ngModel)]="currentAsset.expirationDate" [disabled]="true"></p-calendar>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Asset Location</label>\r\n                                <input type="text" class="form-control" name="asset_LocationName" [(ngModel)]="currentAsset.asset_LocationName" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control" name="currencyName" [(ngModel)]="currentAsset.currencyName" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Unit Cost <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control text-right" name="unitCost" [(ngModel)]="currentAsset.unitCost" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Installation Cost</label>\r\n                                <input type="text" class="form-control text-right" name="installationCost" [(ngModel)]="currentAsset.installationCost" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Freight</label>\r\n                                <input type="text" class="form-control text-right" name="freight" [(ngModel)]="currentAsset.freight" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Insurance</label>\r\n                                <input type="text" class="form-control text-right" name="insurance" [(ngModel)]="currentAsset.insurance" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Taxes</label>\r\n                                <input type="text" class="form-control text-right" name="taxes" [(ngModel)]="currentAsset.taxes" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Total Cost</label>\r\n                                <input type="text" class="form-control text-right" name="totalCost" [(ngModel)]="currentAsset.totalCost" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <a style="color:#3498db" (click)="openCapes()" data-toggle="modal" data-target="#capesData">\r\n                                    <u>Link to Capes</u>\r\n                                </a>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n\r\n                    <div class="col-md-3">\r\n                        <ng-container *ngIf="currentAsset.isTangible">\r\n                          \r\n                            <div class="form-group">\r\n                                <label>Asset Class/Attribute <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control" name="assetTypeName" [(ngModel)]="currentAsset.assetType" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Depreciation Method</label>\r\n                                <input type="text" class="form-control" name="depreciationMethod" [(ngModel)]="currentAsset.depreciationMethod" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Residual %</label>\r\n                                <input type="text" class="form-control" name="residualPercentage" [(ngModel)]="currentAsset.residualPercentage" disabled>\r\n                            </div>\r\n                            \x3c!-- <div class="form-group">\r\n                                <label>Residual Value</label>\r\n                                <input type="text" class="form-control" name="residualValue" [(ngModel)]="currentAsset.residualValue" disabled>\r\n                            </div> --\x3e\r\n                            <div class="form-group">\r\n                                <label>Asset Life</label>\r\n                                <input type="number" class="form-control" name="assetLife" [(ngModel)]="currentAsset.assetLife" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Depr Frequency</label>\r\n                                <input type="text" class="form-control" name="depreciationFrequency" [(ngModel)]="currentAsset.depreciationFrequency" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Acquired GL Account</label>\r\n                                <input type="text" class="form-control" name="acquiredGLAccount" [(ngModel)]="currentAsset.acquiredGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Depr Expense GL Account</label>\r\n                                <input type="text" class="form-control" name="deprExpenseGLAccount" [(ngModel)]="currentAsset.deprExpenseGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Accum Depr GL Account</label>\r\n                                <input type="text" class="form-control" name="adDepsGLAccount" [(ngModel)]="currentAsset.adDepsGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Sale GL Account</label>\r\n                                <input type="text" class="form-control" name="assetSale" [(ngModel)]="currentAsset.assetSale" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Write Off GL Account</label>\r\n                                <input type="text" class="form-control" name="assetWriteOff" [(ngModel)]="currentAsset.assetWriteOff" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Write Down GL Account</label>\r\n                                <input type="text" class="form-control" name="assetWriteDown" [(ngModel)]="currentAsset.assetWriteDown" disabled>\r\n                            </div>\r\n                        </ng-container>\r\n                        <ng-container *ngIf="currentAsset.isIntangible">\r\n                            <div class="form-group">\r\n                                <label>Intangible Class <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control" name="assetIntangibleTypeName" [(ngModel)]="currentAsset.assetIntangibleTypeName" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Amortization Method</label>\r\n                                <input type="text" class="form-control" name="amortizationMethod" [(ngModel)]="currentAsset.amortizationMethod" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Intangible Life</label>\r\n                                <input type="text" class="form-control" name="intangibleLife" [(ngModel)]="currentAsset.intangibleLife" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Amortization Frequency</label>\r\n                                <input type="text" class="form-control" name="amortizationFrequency" [(ngModel)]="currentAsset.amortizationFrequency" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Intangible GL Account</label>\r\n                                <input type="text" class="form-control" name="intangibleGLAccount" [(ngModel)]="currentAsset.intangibleGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Amort Expense GL Account</label>\r\n                                <input type="text" class="form-control" name="amortExpenseGLAccount" [(ngModel)]="currentAsset.amortExpenseGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Acc Amort Depr GL Account</label>\r\n                                <input type="text" class="form-control" name="accAmortDeprGLAccount" [(ngModel)]="currentAsset.accAmortDeprGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Intangible Write Down GL Account</label>\r\n                                <input type="text" class="form-control" name="intangibleWriteDownGLAccount" [(ngModel)]="currentAsset.intangibleWriteDownGLAccount" disabled>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5 class="header-h5">Management Structure <span class="text-danger">*</span></h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group" style="margin-bottom: 4px;">\r\n                                    <input class="form-control" type="text" name="companyName"\r\n                                        [(ngModel)]="currentAsset.companyName" disabled>\r\n                                </div>\r\n                                <div class="form-group" style="margin-bottom: 4px;">\r\n                                    <input class="form-control" type="text" name="BUName"\r\n                                        [(ngModel)]="currentAsset.buName" disabled>\r\n                                </div>\r\n                                <div class="form-group" style="margin-bottom: 4px;">\r\n                                    <input class="form-control" type="text" name="divisionName"\r\n                                        [(ngModel)]="currentAsset.divName" disabled>\r\n                                </div>\r\n                                <div class="form-group" style="margin-bottom: 4px;">\r\n                                    <input class="form-control" type="text" name="deptName"\r\n                                        [(ngModel)]="currentAsset.deptName" disabled>\r\n                                </div>                    \r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group memo-popup-cstm">\r\n                            <label style="float: inherit;">Memo</label>\r\n                            <span matTooltipPosition="above"   [matTooltip]="parsedText(currentAsset.memo)">\r\n                                <div [innerHTML]="currentAsset.memo" class="form-control" class="p_editor_box"></div></span>\r\n                        </div>\r\n                      \r\n                    </div>\r\n                </div>\r\n<div class="form-row" *ngIf="currentAsset.isTangible">\r\n    <div class="col-md-3-custm1"  >\r\n        <div [ngClass]="(currentAsset.calibrationRequired) ? \'border-box-cstm\' : \'\'">\r\n            <div class="form-group">\r\n                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                    <label>\r\n                        <input type="checkbox" name="calibrationRequired" [(ngModel)]="currentAsset.calibrationRequired" disabled>\r\n                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                        Calibration Required\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf="currentAsset.calibrationRequired">\r\n                <div class="form-group">\r\n                    <label>Calibration Frequency <span class="clr-red">*</span></label>\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Months</label>\r\n                                <input type="number" class="form-control" name="calibrationFrequencyMonths" [(ngModel)]="currentAsset.calibrationFrequencyMonths" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Days</label>\r\n                                <input type="number" class="form-control" name="calibrationFrequencyDays" [(ngModel)]="currentAsset.calibrationFrequencyDays" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>Default Vendor</label>\r\n                    <input type="text" class="form-control" name="calibrationDefaultVendorName" [(ngModel)]="currentAsset.calibrationDefaultVendorName" disabled>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Default Cost</label>\r\n                                <input type="text" class="form-control text-right" name="calibrationDefaultCost" [(ngModel)]="currentAsset.calibrationDefaultCost" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red" *ngIf="currentAsset.calibrationDefaultCost !=0">*</span></label>\r\n                                <input type="text" class="form-control" name="calibrationCurrencyName" [(ngModel)]="currentAsset.calibrationCurrencyName" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>GL Account</label>\r\n                    <input type="text" class="form-control" name="calibrationGlAccountName" [(ngModel)]="currentAsset.calibrationGlAccountName" disabled>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                    <label style="float: inherit;">Calibration Memo</label>\r\n                    <span matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.calibrationMemo)"  >\r\n                        <div [innerHTML]="currentAsset.calibrationMemo" class="form-control" class="p_editor_box"></div>\r\n                    </span>\r\n                </div>\r\n                <div class="card card-stock card-tolerance">\r\n                    <div class="card-header">\r\n                        <h5 class="header-h5">Tolerance</h5>\r\n                    </div>\r\n                    <div class="card-body">\r\n                        <div class="form-row">\r\n                            <label style="width: 100%; margin-left: 6px;">Min</label>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">                                                \r\n                                    <input type="number" class="form-control" name="assetCalibrationMin" [(ngModel)]="currentAsset.assetCalibrationMin" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibrationMinTolerance" [(ngModel)]="currentAsset.assetCalibrationMinTolerance" disabled>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-row">\r\n                            <label style="width: 100%; margin-left: 6px;">Max</label>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibratonMax" [(ngModel)]="currentAsset.assetCalibratonMax" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibrationMaxTolerance" [(ngModel)]="currentAsset.assetCalibrationMaxTolerance" disabled>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-row">\r\n                            <label style="width: 100%; margin-left: 6px;">Expected</label>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibrationExpected" [(ngModel)]="currentAsset.assetCalibrationExpected" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibrationExpectedTolerance" [(ngModel)]="currentAsset.assetCalibrationExpectedTolerance" disabled>\r\n                                </div>\r\n                            </div>\r\n                        </div>                                    \r\n                    </div>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                    <label style="float: inherit;">Memo</label>\r\n                    <span matTooltipPosition="above"   [matTooltip]="parsedText(currentAsset.assetCalibrationMemo)"  >\r\n                        <div [innerHTML]="currentAsset.assetCalibrationMemo" class="form-control" class="p_editor_box"></div>\r\n                    </span>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n        <div class="col-md-3-custm1" >\r\n        <div [ngClass]="(currentAsset.certificationRequired) ? \'border-box-cstm m-t-5\' : \'\'">\r\n            <div class="form-group">\r\n                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                    <label>\r\n                        <input type="checkbox" name="certificationRequired" [(ngModel)]="currentAsset.certificationRequired" disabled>\r\n                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                        Certification Required\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf="currentAsset.certificationRequired">\r\n                <div class="form-group">\r\n                    <label>Certification Frequency <span class="clr-red">*</span></label>\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Months</label>\r\n                                <input type="number" class="form-control" name="certificationFrequencyMonths" [(ngModel)]="currentAsset.certificationFrequencyMonths" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Days</label>\r\n                                <input type="number" class="form-control" name="certificationFrequencyDays" [(ngModel)]="currentAsset.certificationFrequencyDays" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>Default Vendor</label>\r\n                    <input type="text" class="form-control" name="certificationDefaultVendorName" [(ngModel)]="currentAsset.certificationDefaultVendorName" disabled>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Default Cost</label>\r\n                                <input type="text" class="form-control text-right" name="certificationDefaultCost" [(ngModel)]="currentAsset.certificationDefaultCost" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red" *ngIf="currentAsset.calibrationDefaultCost !=0">*</span></label>\r\n                                <input type="text" class="form-control" name="certificationCurrencyName" [(ngModel)]="currentAsset.certificationCurrencyName" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>GL Account</label>\r\n                    <input type="text" class="form-control" name="certificationGlAccountName" [(ngModel)]="currentAsset.certificationGlAccountName" disabled>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                    <label style="float: inherit;">Certification Memo</label>\r\n                    <span matTooltipPosition="above"   [matTooltip]="parsedText(currentAsset.certificationMemo)" >\r\n                        <div [innerHTML]="currentAsset.certificationMemo" class="form-control" class="p_editor_box"></div>\r\n                    </span>\r\n                </div>\r\n            </ng-container>\r\n        </div>                        \r\n    </div>\r\n    <div class="col-md-3-custm1" >\r\n        <div [ngClass]="(currentAsset.inspectionRequired) ? \'border-box-cstm m-t-5\' : \'\'">\r\n            <div class="form-group">\r\n                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                    <label>\r\n                        <input type="checkbox" name="inspectionRequired" [(ngModel)]="currentAsset.inspectionRequired" disabled>\r\n                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                        Inspection Required\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf="currentAsset.inspectionRequired">\r\n                <div class="form-group">\r\n                    <label>Inspection Frequency <span class="clr-red">*</span></label>\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Months</label>\r\n                                <input type="number" class="form-control" name="inspectionFrequencyMonths" [(ngModel)]="currentAsset.inspectionFrequencyMonths" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Days</label>\r\n                                <input type="number" class="form-control" name="inspectionFrequencyDays" [(ngModel)]="currentAsset.inspectionFrequencyDays" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>Default Vendor</label>\r\n                    <input type="text" class="form-control" name="inspectionDefaultVendorName" [(ngModel)]="currentAsset.inspectionDefaultVendorName" disabled>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Default Cost</label>\r\n                                <input type="text" class="form-control text-right" name="inspectionDefaultCost" [(ngModel)]="currentAsset.inspectionDefaultCost" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red" *ngIf="currentAsset.calibrationDefaultCost !=0">*</span></label>\r\n                                <input type="text" class="form-control" name="inspectionCurrencyName" [(ngModel)]="currentAsset.inspectionCurrencyName" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>GL Account</label>\r\n                    <input type="text" class="form-control" name="inspectionGlaAccountName" [(ngModel)]="currentAsset.inspectionGlaAccountName" disabled>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                    <label style="float: inherit;">Inspection Memo</label>\r\n                    <span matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.inspectionMemo)">\r\n                        <div [innerHTML]="currentAsset.inspectionMemo" class="form-control" class="p_editor_box"></div>\r\n                    </span>\r\n                </div>\r\n            </ng-container>\r\n        </div>                        \r\n    </div>\r\n    <div class="col-md-3-custm1" >\r\n        <div [ngClass]="(currentAsset.verificationRequired) ? \'border-box-cstm m-t-5\' : \'\'">\r\n            <div class="form-group">\r\n                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                    <label>\r\n                        <input type="checkbox" name="verificationRequired" [(ngModel)]="currentAsset.verificationRequired" disabled>\r\n                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                        Verification Required\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf="currentAsset.verificationRequired">\r\n                <div class="form-group">\r\n                    <label>Verification Frequency <span class="clr-red">*</span></label>\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Months</label>\r\n                                <input type="number" class="form-control" name="verificationFrequencyMonths" [(ngModel)]="currentAsset.verificationFrequencyMonths" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Days</label>\r\n                                <input type="number" class="form-control" name="verificationFrequencyDays" [(ngModel)]="currentAsset.verificationFrequencyDays" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>Default Vendor</label>\r\n                    <input type="text" class="form-control" name="verificationDefaultVendorName" [(ngModel)]="currentAsset.verificationDefaultVendorName" disabled>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Default Cost</label>\r\n                                <input type="text" class="form-control text-right" name="verificationDefaultCost" [(ngModel)]="currentAsset.verificationDefaultCost" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red" *ngIf="currentAsset.calibrationDefaultCost !=0">*</span></label>\r\n                                <input type="text" class="form-control" name="verificationCurrencyName" [(ngModel)]="currentAsset.verificationCurrencyName" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>GL Account</label>\r\n                    <input type="text" class="form-control" name="verificationGlAccountName" [(ngModel)]="currentAsset.verificationGlAccountName" disabled>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                    <label style="float: inherit;">Verification Memo</label>\r\n                    <span matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.verificationMemo)">\r\n                        <div [innerHTML]="currentAsset.verificationMemo" class="form-control" class="p_editor_box"></div>\r\n                    </span>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>\r\n                <div class="form-row" *ngIf="currentAsset.isTangible">\r\n                    <div class="col-md-6 col-md-6-cstm1" style="margin-right: 1%;" [ngClass]="(currentAsset.assetIsMaintenanceReqd) ? \'border-box-cstm m-t-5\' : \'\'">\r\n                       \r\n                        <div class="form-row">\r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="assetIsMaintenanceReqd" [(ngModel)]="currentAsset.assetIsMaintenanceReqd" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Maintenance Required\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-6" *ngIf="currentAsset.assetIsMaintenanceReqd">\r\n                                <ng-container >\r\n                                    <div class="form-group">\r\n                                        <label>Maintenance Frequency <span class="clr-red">*</span></label>\r\n                                        <div class="form-row">\r\n                                            <div class="col-md-6">\r\n                                                <div class="form-group">\r\n                                                    <label>Months</label>\r\n                                                    <input type="number" class="form-control" name="maintenanceFrequencyMonths" [(ngModel)]="currentAsset.maintenanceFrequencyMonths" disabled>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="col-md-6">\r\n                                                <div class="form-group">\r\n                                                    <label>Days</label>\r\n                                                    <input type="number" class="form-control" name="maintenanceFrequencyDays" [(ngModel)]="currentAsset.maintenanceFrequencyDays" disabled>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        <label>Default Vendor</label>\r\n                                        <input type="text" class="form-control" name="defaultVendorName" [(ngModel)]="currentAsset.defaultVendorName" disabled>\r\n                                    </div>\r\n                                   \r\n                                </ng-container>\r\n                            </div>\r\n                            <div class="col-md-6"  *ngIf="currentAsset.assetIsMaintenanceReqd" style="padding-top: 17px;">\r\n                                <div class="form-group">\r\n                                    <label>GL Account</label>\r\n                                    <input type="text" class="form-control" name="glAccountName" [(ngModel)]="currentAsset.glAccountName" disabled>\r\n                                </div>\r\n                                <div class="form-group memo-popup-cstm">\r\n                                    <label style="float: inherit;margin-top: 10px;">Maintenance Memo</label>\r\n                                    <span matTooltipPosition="above" [matTooltip]="parsedText(currentAsset.maintenanceMemo)">\r\n                                        <div [innerHTML]="currentAsset.maintenanceMemo" class="form-control" class="p_editor_box"></div>\r\n                                    </span>\r\n                                </div>\r\n                                </div>\r\n                        </div>\r\n                        <div class="form-row" *ngIf="currentAsset.assetIsMaintenanceReqd">\r\n                            <div class="w-100" style="padding-top: 24px;">\r\n                                        <div>\r\n                                            <h6 class="panel-title alignb" style="padding-left: 6px;">Attachment Details</h6>\r\n                                          </div>\r\n                                    <div class="checkbox-cstm setDelts" >\r\n                                        <label style="width: auto !important;margin-top: 3px;">\r\n                                         \r\n                                          <input type="checkbox" [(ngModel)]="maitananceeletedList" name="cparent1" id="cparent1"  (click)="getDeleteListByStatusAttachments($event.target.checked,1)"\r\n                                            />\r\n                                          <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                        Show  Deleted List \r\n                                        </label>\r\n                                    </div> \r\n                                <p-table #table4 class="rro-table-cstm lastcol-fix ptable-attach"\r\n                                         [columns]="selectedColumnsDoc"\r\n                                         [value]="sourceViewforDocumentList"\r\n                                         [paginator]="true"\r\n                                         [rows]="3"\r\n                                         [rowsPerPageOptions]="[3, 6, 9, 15]" [scrollable]="true" scrollHeight="500px">\r\n                                        \r\n                                    <ng-template pTemplate="colgroup" let-columns>\r\n                                        <colgroup>\r\n                                            <col *ngFor="let col of columns" style="width:100px" />\r\n                                        </colgroup>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                                                [pSortableColumn]="col.field">\r\n                                                {{ col.header }}\r\n                                                <p-sortIcon [field]="col.field">\r\n                                                </p-sortIcon>\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky">Actions</th>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                                \x3c!--  --\x3e\r\n                                                <input type="text" *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'"\r\n                                                       (input)="table4.filter($event.target.value, col.field,\'contains\') "\r\n                                                      \r\n                                                       style="width:100%;" pInputText>\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'createdDate\'" name="createdDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableNew($event.target.value, col.field )">\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'updatedDate\'" name="updatedDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableNew($event.target.value, col.field )">\r\n                                            </th>\r\n\r\n                                            <th style="width:70px;position:sticky"></th>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="body"\r\n                                                 let-rowData\r\n                                                 let-columns="columns"\r\n                                                 let-rowIndex="rowIndex">\r\n                                        <tr [pSelectableRow]="rowData">\r\n                                            <ng-container *ngFor="let col of columns">\r\n                                                <td *ngIf="col.field != \'fileName\' && col.field != \'docMemo\'"\r\n                                                    class="ui-resizable-column"\r\n                                                    pReorderableRowHandle>\r\n                                                    {{\r\n                                                    col.field == \'createdDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\')\r\n                                                        : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\')\r\n                                                        : rowData[col.field]\r\n                                                    }}\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'fileName\'">\r\n                                                    <a class="filelink" (click)="downloadFileUpload(rowData)">\r\n                                                        {{ rowData[col.field] }}\r\n                                                    </a>\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'docMemo\'">\r\n                                                    <p class="m-0 p-0" [innerHTML]="rowData[col.field]"></p>\r\n                                                </td>\r\n                                            </ng-container>\r\n\r\n                                            <td style="width: 70px;">\r\n                                                <button class="btn-edit set_proper_align set_position"\r\n                                                        mat-icon-button (click)="openHistoryDoc(contentAuditHist,rowData)"\r\n                                                        matTooltip="History" matTooltipPosition="above">\r\n                                                    <i class="fa fa-history"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="emptymessage"\r\n                                                 let-columns>\r\n                                        <tr>\r\n                                            <td [attr.colspan]="10"\r\n                                                style="color: red; font-weight: bold; text-align: left; padding-left: 30% !important;">\r\n                                                No records found\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    </ng-template> \r\n\r\n                                    <ng-template pTemplate="summary" id="footer1">\r\n                                        <label id="footer" class="footer">Total:</label> \r\n                                        \x3c!-- [(ngModel)]="table4._totalRecords"   [(ngModel)]="totalRecords" --\x3e\r\n                                        <input style="width: 5%;"  [(ngModel)]="table4._totalRecords"  name="mainTotalRecords" disabled\r\n                                               pInputText type="text" />\r\n                                        &nbsp;&nbsp;\r\n                                        <label id="footer" class="footer1">Pages Count:</label>\r\n                                        \x3c!-- [ngModel]="getPageCount(table4._totalRecords, pageSizeNew)"      [(ngModel)]="totalPages"  --\x3e\r\n                                        <input style="width: 5%;"\r\n                                               name="mainpagecount" [ngModel]="getPageCount(table4._totalRecords, pageSizeNew)" disabled pInputText type="text" />\r\n                                    </ng-template>\r\n\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-6 col-md-6-cstm1" [ngClass]="(currentAsset.assetIsMaintenanceReqd) ? \'border-box-cstm m-t-5\' : \'\'">\r\n                        <div class="form-row">\r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="warrantyRequired" [(ngModel)]="currentAsset.isWarrantyRequired" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Warranty Required\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-6" *ngIf="currentAsset.isWarrantyRequired">\r\n                             \r\n                                <ng-container >\r\n                                    <div class="form-group">\r\n                                        <label>Warranty Company</label>\r\n                                        <input type="text" class="form-control" name="warrantyCompanySelectName" [(ngModel)]="currentAsset.warrantyCompany" disabled>\r\n                                    </div>\r\n                                    <div class="form-group" *ngIf="currentAsset.warrantyCompanySelectId == 2">\r\n                                        <input type="text" class="form-control" name="warrantyCompanyVendorName" [(ngModel)]="currentAsset.warrantyCompanyVendorName" disabled>\r\n                                    </div>\r\n                                    <div class="form-group" *ngIf="currentAsset.warrantyCompanySelectId == 4">\r\n                                        <input type="text" class="form-control" name="warrantyCompanyName" [(ngModel)]="currentAsset.warrantyCompanyName">\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        <label>Warranty GL Account</label>\r\n                                        <input type="text" class="form-control" name="warrantyGlAccountName" [(ngModel)]="currentAsset.warrantyGlAccountName" disabled>\r\n                                    </div>\r\n                                  \r\n                                    <div class="form-group memo-popup-cstm">\r\n                                        <label style="float: inherit;">Warranty Memo</label>\r\n                                        <span matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.warrantyMemo)" >\r\n                                            <div [innerHTML]="currentAsset.warrantyMemo" class="form-control p_editor_box" ></div>\r\n                                        </span>\r\n                                    </div>\r\n                                </ng-container>\r\n                            </div>\r\n                            <div class="col-md-6" *ngIf="currentAsset.isWarrantyRequired">\r\n                                <div class="form-group">\r\n                                    <label>Warranty Start Date</label>\r\n                                    <p-calendar [showIcon]="true" name="warrantyStartDate" [(ngModel)]="currentAsset.warrantyStartDate" [disabled]="true"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Warranty End Date</label>\r\n                                    <p-calendar [showIcon]="true" name="warrantyEndDate" [(ngModel)]="currentAsset.warrantyEndDate" [disabled]="true"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Warranty Status</label>\r\n                                    <input type="text" class="form-control" name="warrantyStatusName" [(ngModel)]="currentAsset.warrantyStatusName" disabled>\r\n                                </div>\r\n                                </div>\r\n                        </div>\r\n                        <div class="form-row" *ngIf="currentAsset.isWarrantyRequired">\r\n                            <div class="w-100">\r\n                                        <h6 class="panel-title alignb" style="padding-left: 6px;">Attachment Details</h6>\r\n                                <div class="checkbox-cstm setDelts">\r\n                                    <label style="width: auto !important;margin-top: 3px;">\r\n                                     \r\n                                      <input type="checkbox" [(ngModel)]="warrentyDeletedList" name="cparent2" id="cparent2"  (click)="getDeleteListByStatusAttachments($event.target.checked,2)"\r\n                                        />\r\n                                      <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                    Show  Deleted List \r\n                                    </label>\r\n                                </div>\r\n                                <p-table #table5 class="rro-table-cstm lastcol-fix ptable-attach"\r\n                                         [columns]="selectedColumnsDoc"\r\n                                         [value]="sourceViewforDocumentListWarranty"\r\n                                         [paginator]="true"\r\n                                         [rows]="3"\r\n                                         [rowsPerPageOptions]="[3, 6, 9, 15]" [scrollable]="true" scrollHeight="500px">\r\n\r\n                                    <ng-template pTemplate="colgroup" let-columns>\r\n                                        <colgroup>\r\n                                            <col *ngFor="let col of columns" style="width:100px" />\r\n                                        </colgroup>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                                                [pSortableColumn]="col.field">\r\n                                                {{ col.header }}\r\n                                                <p-sortIcon [field]="col.field">\r\n                                                </p-sortIcon>\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky">Actions</th>\r\n\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                                \x3c!--  --\x3e\r\n                                                <input type="text" *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'"\r\n                                                       (input)="table5.filter($event.target.value, col.field,\'contains\') "\r\n                                                      \r\n                                                       style="width:100%;" pInputText>\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'createdDate\'" name="createdDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableWarranty($event.target.value, col.field )">\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'updatedDate\'" name="updatedDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableWarranty($event.target.value, col.field )">\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky"></th>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="body"\r\n                                                 let-rowData\r\n                                                 let-columns="columns"\r\n                                                 let-rowIndex="rowIndex">\r\n                                        <tr [pSelectableRow]="rowData">\r\n                                            <ng-container *ngFor="let col of columns">\r\n                                                <td *ngIf="col.field != \'fileName\' && col.field != \'docMemo\'"\r\n                                                    class="ui-resizable-column"\r\n                                                    pReorderableRowHandle>\r\n                                                    {{\r\n                                                    col.field == \'createdDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\')\r\n                                                        : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\')\r\n                                                        : rowData[col.field]\r\n                                                    }}\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'fileName\'">\r\n                                                    <a class="filelink" (click)="downloadFileUpload(rowData)">\r\n                                                        {{ rowData[col.field] }}\r\n                                                    </a>\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'docMemo\'">\r\n                                                    <p class="m-0 p-0" [innerHTML]="rowData[col.field]"></p>\r\n                                                </td>\r\n                                            </ng-container>\r\n\r\n                                            <td style="width: 70px;">\r\n                                                <button class="btn-edit set_proper_align set_position"\r\n                                                        mat-icon-button (click)="openHistoryDoc(contentAuditHist,rowData)"\r\n                                                        matTooltip="History" matTooltipPosition="above">\r\n                                                    <i class="fa fa-history"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="emptymessage"\r\n                                    let-columns\r\n                                   >\r\n                           <tr>\r\n                               <td [attr.colspan]="10"\r\n                                   style="color: red; font-weight: bold; text-align: left; padding-left: 30% !important;">\r\n                                   No records found\r\n                               </td>\r\n\r\n                           </tr>\r\n                       </ng-template> \r\n                                    <ng-template pTemplate="summary" id="footer1">\r\n                                        <label id="footer" class="footer">Total:</label>\r\n                                        <input style="width: 5%;" [(ngModel)]="table5._totalRecords" name="warrTotalRecords" disabled\r\n                                               pInputText type="text" />\r\n                                        &nbsp;&nbsp;\r\n                                        <label id="footer" class="footer1">Pages Count:</label>\r\n                                        <input style="width: 5%;" [ngModel]="getPageCount(table5._totalRecords, pageSizeNew)"\r\n                                               name="warrpagecount" disabled pInputText type="text" />\r\n                                    </ng-template>\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-row" *ngIf="currentAsset.isIntangible">\r\n                    <div class="col-md-12">\r\n                        <div class="form-row">\r\n                            <div>\r\n                                        <h6 class="panel-title alignb" style="padding-left: 6px;">Attachment Details</h6>\r\n                                <div class="checkbox-cstm setDelts">\r\n                                    <label style="width: auto !important;margin-top: 3px;">\r\n                                     \r\n                                      <input type="checkbox" [(ngModel)]="intangibleDeletedList" name="cparent3" id="cparent3"  (click)="getDeleteListByStatusAttachments($event.target.checked,3)"\r\n                                        />\r\n                                      <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                    Show  Deleted List \r\n                                    </label>\r\n                                </div> \r\n                                <p-table #intUpload class="rpo-table-cstm lastcol-fix ptable-attach"\r\n                                         [columns]="selectedColumnsDoc"\r\n                                         [value]="sourceViewforDocumentListInt"\r\n                                         [paginator]="true"\r\n                                         [rows]="3"\r\n                                         [rowsPerPageOptions]="[3, 6, 9, 15]">\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                                                [pSortableColumn]="col.field">\r\n                                                {{ col.header }}\r\n                                                <p-sortIcon [field]="col.field">\r\n                                                </p-sortIcon>\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky">Actions</th>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                                \x3c!-- --\x3e\r\n                                                <input type="text"  *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'"\r\n                                                       (input)="intUpload.filter($event.target.value, col.field,\'contains\') "\r\n                                                 \r\n                                                       style="width:100%;" pInputText>\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'createdDate\'" name="createdDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableInt($event.target.value, col.field )">\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'updatedDate\'" name="updatedDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableInt($event.target.value, col.field )">\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky"></th>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="body"\r\n                                                 let-rowData\r\n                                                 let-columns="columns"\r\n                                                 let-rowIndex="rowIndex">\r\n                                        <tr [pSelectableRow]="rowData">\r\n                                            <ng-container *ngFor="let col of columns">\r\n                                                <td *ngIf="col.field != \'fileName\' && col.field != \'docMemo\'"\r\n                                                    class="ui-resizable-column"\r\n                                                    pReorderableRowHandle>\r\n                                                    {{\r\n                                                    col.field == \'createdDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\')\r\n                                                        : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\')\r\n                                                        : rowData[col.field]\r\n                                                    }}\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'fileName\'">\r\n                                                    <a class="filelink" (click)="downloadFileUpload(rowData)">\r\n                                                        {{ rowData[col.field] }}\r\n                                                    </a>\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'docMemo\'">\r\n                                                    <p class="m-0 p-0" [innerHTML]="rowData[col.field]"></p>\r\n                                                </td>\r\n                                            </ng-container>\r\n\r\n                                            <td style="width: 70px;">\r\n                                                <button class="btn-edit set_proper_align set_position"\r\n                                                        mat-icon-button (click)="openHistoryDoc(contentAuditHist,rowData)"\r\n                                                        matTooltip="History" matTooltipPosition="above">\r\n                                                    <i class="fa fa-history"\r\n                                                       [ngClass]="{ grayColor: !rowData.isFileFromServer }"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="emptymessage"\r\n                                                 let-columns\r\n                                                 >\r\n                                        <tr>\r\n                                            <td [attr.colspan]="10"\r\n                                                style="color: red; font-weight: bold; text-align: center;">\r\n                                                No records found\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="summary" id="footer1">\r\n                                        <label id="footer" class="footer">Total:</label>\r\n                                        <input style="width: 5%;" [(ngModel)]="intUpload._totalRecords" name="intTotalRecords" disabled\r\n                                               pInputText type="text" />\r\n                                        &nbsp;&nbsp;\r\n                                        <label id="footer" class="footer1">Pages Count:</label>\r\n                                        <input style="width: 5%;" [ngModel]="getPageCount(intUpload._totalRecords, pageSizeNew)"\r\n                                               name="intpagecount" disabled pInputText type="text" />\r\n                                    </ng-template>\r\n\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n        <div class="modal-footer">\r\n            <button type="button" class="btn btn-danger" (click)="onCloseView()">Close</button>\r\n        </div>\r\n        </div>\r\n    </div>\r\n\x3c!-- </ng-template> --\x3e\r\n</div>\r\n\r\n<div class="modal fade" id="downloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t<div class="modal-dialog modal-sm">\r\n\t\t<div class="modal-content">\r\n\t\t\t<div class="modal-header">\r\n\t\t\t\t<button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n\t\t\t\t<h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-body" *ngIf="targetData">\r\n\t\t\t\t<strong>\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\tYou are attempting to export {{targetData.totalRecords}} of records. \r\n\t\t\t\t\t</span> \r\n\t\t\t\t</strong>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button type="button" class="btn btn-primary" (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):exportCSV(targetData); closeDeleteModal();">Confirm</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="closeDeleteModal()">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<ng-template #contentAuditHist\r\n             let-c="close"\r\n             let-d="dismiss"\r\n             style="width:auto"\r\n             data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">History of  Documents</h4>\r\n        <button type="button"\r\n                class="close"\r\n                aria-label="Close"\r\n                (click)="dismissModelNew()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="table-responsive">\r\n            <table class="table table-bordered">\r\n                <thead>\r\n                    <tr>\r\n                        <th> Name</th>\r\n                        <th>Description</th>\r\n                        <th>Memo</th>\r\n                        <th>File Name</th>\r\n                        <th>File Size</th>\r\n                        <th>Is Active</th>\r\n                        <th>Is Deleted</th>\r\n                        <th>Created Date</th>\r\n                        <th>Created By</th>\r\n                        <th>Updated Date</th>\r\n                        <th>Updated By</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor="let audit of sourceViewforDocumentAudit"></tr>\r\n                    <tr *ngFor="let audit of sourceViewforDocumentAudit; let i = index">\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistoryMain(i, \'docName\', audit.docName)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                            {{ audit.docName }}\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistoryMain(\r\n                  i,\r\n                  \'docDescription\',\r\n                  audit.docDescription\r\n                )\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                            {{ audit.docDescription }}\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistoryMain(i, \'docMemo\', audit.docMemo)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n              <p class="m-0 p-0" [innerHTML]="audit.docMemo"></p>\r\n                            \x3c!-- {{ audit.docMemo }} --\x3e\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistoryMain(i, \'fileName\', audit.fileName)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                            {{ audit.fileName }}\r\n                        </td>\r\n                        <td>{{ audit.fileSize }}</td>\r\n                        <td>\r\n                            <input type="checkbox" disabled [checked]="audit.isActive == true"\r\n                            style="margin: 0px auto; display: block;" />  \r\n                        </td>\r\n                        <td>\r\n                            <input type="checkbox" disabled [checked]="audit.isDeleted == true"\r\n                            style="margin: 0px auto; display: block;" />  \r\n                        </td>\r\n                        <td>{{ audit.createdDate | date: \'MM/dd/yyyy h:mm:ss a\' }}</td>\r\n                        <td>{{ audit.createdBy }}</td>\r\n                        <td>{{ audit.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\' }}</td>\r\n                        <td>{{ audit.updatedBy }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModelNew()">\r\n            Close\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n\r\n<div class="modal fade" id="capesData" role="dialog">\r\n    <div class="modal-dialog modal-xl">\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n          <h4 class="modal-title">Capes</h4>\r\n        </div>\r\n        <div class="modal-body"> \r\n            <app-asset-capes *ngIf="currentAsset && currentAsset.assetRecordId"  [isView]="true" [viewassetRecordId]="currentAsset.assetRecordId"></app-asset-capes>\r\n        </div>\r\n        <div class="modal-footer">\r\n          <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n        </div>\r\n      </div>      \r\n    </div>\r\n</div>\r\n\r\n<div id="assetInvAudit" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n  <div class="modal-dialog modal-xlg">\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title">History of Asset Inventory</h4>\r\n      </div>\r\n      <div class="modal-body">\r\n        <div class="preloader" *ngIf="isSpinnerVisibleHistory" style="    z-index: 1060;">\r\n            <div class="loading">\r\n                <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n            </div>\r\n        </div>\r\n        <div class="table-responsive assetInv-audit">\r\n          <table class="table table-bordered"  *ngIf="showhistorylist">\r\n              <ng-container *ngIf="!isIntangible">\r\n                <thead>\r\n                    <tr>\r\n                      <th rowspan="2">Entry Date <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Asset ID <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Alt Asset ID</th>\r\n                      <th rowspan="2">Asset Name <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Asset Description</th>\r\n                      <th rowspan="2">Acquisition Type <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Model Number</th>\r\n                      <th rowspan="2">Is Serialized</th>\r\n                      <th rowspan="2">Serial No <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Asset Status</th>\r\n                      <th rowspan="2">Inventory Status</th>\r\n                      <th rowspan="2">Asset Parent</th>\r\n                      <th rowspan="2">Manufacturer</th>\r\n                      <th rowspan="2">Manufactured Date</th>\r\n                      <th rowspan="2">UOM <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Expiration Date</th>\r\n                      <th rowspan="2">Asset Location</th>\r\n                      <th rowspan="2">Currency <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Unit Cost <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Installation Cost</th>\r\n                      <th rowspan="2">Freight</th>\r\n                      <th rowspan="2">Insurance</th>\r\n                      <th rowspan="2">Taxes</th>\r\n                      <th rowspan="2">Total Cost</th>\r\n                      <th rowspan="2">Asset Class</th>\r\n                      <th rowspan="2">Depreciation Method</th>\r\n                      <th rowspan="2">Residual %</th>\r\n                      \x3c!-- <th rowspan="2">Residual Value</th> --\x3e\r\n                      <th rowspan="2">Asset Life</th>\r\n                      <th rowspan="2">Depr Frequency</th>\r\n                      <th rowspan="2">Acquired GL Account</th>\r\n                      <th rowspan="2">Depr Expense GL Account</th>\r\n                      <th rowspan="2">Accum  Depr GL Account</th>\r\n                      <th rowspan="2">Sale GL Account</th>\r\n                      <th rowspan="2">Write Off GL Account</th>\r\n                      <th rowspan="2">Write Down GL Account</th>\r\n                      <th rowspan="2">Calibration Required</th>\r\n                      <th colspan="2">Calibration Frequency <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Default Vendor</th>\r\n                      <th rowspan="2">Default Cost </th>\r\n                      <th rowspan="2">Currency</th>\r\n                      <th rowspan="2">GL Account</th>\r\n                      <th colspan="6">Tolerance</th>\r\n                      <th rowspan="2">Calibration Memo</th>\r\n                      <th rowspan="2">Certification Required</th>\r\n                      <th colspan="2">Certification Frequency <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Default Vendor</th>\r\n                      <th rowspan="2">Default Cost</th>\r\n                      <th rowspan="2">Currency</th>\r\n                      <th rowspan="2">GL Account</th>\r\n                      <th rowspan="2">Certification Memo</th>\r\n                      <th rowspan="2">Inspection Required</th>\r\n                      <th colspan="2">Inspection Frequency</th>\r\n                      <th rowspan="2">Default Vendor</th>\r\n                      <th rowspan="2">Default Cost</th>\r\n                      <th rowspan="2">Currency</th>\r\n                      <th rowspan="2">GL Account</th>\r\n                      <th rowspan="2">Inspection Memo</th>\r\n                      <th rowspan="2">Verification Required</th>\r\n                      <th colspan="2">Verification Frequency <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Default Vendor</th>\r\n                      <th rowspan="2">Default Cost </th>\r\n                      <th rowspan="2">Currency</th>\r\n                      <th rowspan="2">GL Account</th>\r\n                      <th rowspan="2">Verification Memo</th>\r\n                      <th rowspan="2">Maintenance Required</th>\r\n                      <th colspan="2">Maintenance Frequency <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Default Vendor</th>\r\n                      <th rowspan="2">GL Account</th>\r\n                      <th rowspan="2">Maintenance Memo</th>\r\n                      <th rowspan="2">Warranty Required</th>\r\n                      <th rowspan="2">Warranty Company</th>\r\n                      <th rowspan="2">Warranty Vendor Name</th>\r\n                      <th rowspan="2">Warranty GL Account</th>\r\n                      <th rowspan="2">Warranty Start Date</th>\r\n                      <th rowspan="2">Warranty End Date</th>\r\n                      <th rowspan="2">Warranty Status</th>\r\n                      <th rowspan="2">Warranty Memo</th>\r\n                      <th colspan="4" rowspan="2">Management Structure <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Memo</th>\r\n                      <th rowspan="2">Is Active</th>\r\n                      <th rowspan="2">Is Deleted</th>\r\n                      <th rowspan="2">Created Date</th>\r\n                      <th rowspan="2">Created By</th>\r\n                      <th rowspan="2">Updated Date</th>\r\n                      <th rowspan="2">Updated By</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <th>Months</th>\r\n                      <th>Days</th>\r\n                      <th colspan="2">Min</th>\r\n                      <th colspan="2">Max</th>\r\n                      <th colspan="2">Expected</th>\r\n                      <th>Months</th>\r\n                      <th>Days</th>\r\n                      <th>Months</th>\r\n                      <th>Days</th>\r\n                      <th>Months</th>\r\n                      <th>Days</th>\r\n                      <th>Months</th>\r\n                      <th>Days</th>\r\n                      \x3c!-- <th>Months</th>\r\n                      <th>Days</th> --\x3e\r\n                  </tr>\r\n                </thead>\r\n                <tbody *ngIf="auditHistory.length > 0">\r\n                <tr *ngFor="let audit of auditHistory; let i = index">\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'entryDate\', audit.entryDate) ? \'black\' : \'red\'}">{{ audit.entryDate | date: \'MM/dd/yyyy\' }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetId\', audit.assetId) ? \'black\' : \'red\'}">{{ audit.assetId }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'alternateAssetRecordId\', audit.alternateAssetRecordId) ? \'black\' : \'red\'}">{{ audit.alternateAssetRecordId }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'name\', audit.name) ? \'black\' : \'red\'}">{{ audit.name }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'description\', audit.description) ? \'black\' : \'red\'}">{{ audit.description }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'acquisitionType\', audit.acquisitionType) ? \'black\' : \'red\'}">{{ audit.acquisitionType }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'model\', audit.model) ? \'black\' : \'red\'}">{{ audit.model }}</td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'isSerialized\', audit.isSerialized) ? \'black\' : \'red\'}">{{ audit.isSerialized }}</td> --\x3e\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.isSerialized == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td> \r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'serialNo\', audit.serialNo) ? \'black\' : \'red\'}">{{ audit.serialNo }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetStatus\', audit.assetStatus) ? \'black\' : \'red\'}">{{ audit.assetStatus }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'inventoryStaus\', audit.inventoryStaus) ? \'black\' : \'red\'}">{{ audit.inventoryStaus }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetParentRecordId\', audit.assetParentRecordId) ? \'black\' : \'red\'}">{{ audit.assetParentRecordId }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'manufacturerName\', audit.manufacturerName) ? \'black\' : \'red\'}">{{ audit.manufacturerName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'manufacturedDate\', audit.manufacturedDate) ? \'black\' : \'red\'}">{{ audit.manufacturedDate | date: \'MM/dd/yyyy\' }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'unitOfMeasureName\', audit.unitOfMeasureName) ? \'black\' : \'red\'}">{{ audit.unitOfMeasureName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'expirationDate\', audit.expirationDate) ? \'black\' : \'red\'}">{{ audit.expirationDate | date: \'MM/dd/yyyy\' }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'asset_LocationName\', audit.asset_LocationName) ? \'black\' : \'red\'}">{{ audit.asset_LocationName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'currencyName\', audit.currencyName) ? \'black\' : \'red\'}">{{ audit.currencyName }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'unitCost\', audit.unitCost) ? \'black\' : \'red\'}">{{ audit.unitCost }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'installationCost\', audit.installationCost) ? \'black\' : \'red\'}">{{ audit.installationCost }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'freight\', audit.freight) ? \'black\' : \'red\'}">{{ audit.freight }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'insurance\', audit.insurance) ? \'black\' : \'red\'}">{{ audit.insurance }}</td>\r\n                    <td class="text-right" class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'taxes\', audit.taxes) ? \'black\' : \'red\'}">{{ audit.taxes }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'totalCost\', audit.totalCost) ? \'black\' : \'red\'}">{{ audit.totalCost }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetType\', audit.assetType) ? \'black\' : \'red\'}">{{ audit.assetType }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'depreciationMethod\', audit.depreciationMethod) ? \'black\' : \'red\'}">{{ audit.depreciationMethod }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'residualPercentage\', audit.residualPercentage) ? \'black\' : \'red\'}">{{ audit.residualPercentage }}</td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'residualValue\', audit.residualValue) ? \'black\' : \'red\'}">{{ audit.residualValue }}</td> --\x3e\r\n                    <td  class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'assetLife\', audit.assetLife) ? \'black\' : \'red\'}">{{ audit.assetLife }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'depreciationFrequency\', audit.depreciationFrequency) ? \'black\' : \'red\'}">{{ audit.depreciationFrequency }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'acquiredGLAccount\', audit.acquiredGLAccount) ? \'black\' : \'red\'}">{{ audit.acquiredGLAccount }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'deprExpenseGLAccount\', audit.deprExpenseGLAccount) ? \'black\' : \'red\'}">{{ audit.deprExpenseGLAccount }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'adDepsGLAccount\', audit.adDepsGLAccount) ? \'black\' : \'red\'}">{{ audit.adDepsGLAccount }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetSale\', audit.assetSale) ? \'black\' : \'red\'}">{{ audit.assetSale }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetWriteOff\', audit.assetWriteOff) ? \'black\' : \'red\'}">{{ audit.assetWriteOff }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetWriteDown\', audit.assetWriteDown) ? \'black\' : \'red\'}">{{ audit.assetWriteDown }}</td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'calibrationRequired\', audit.calibrationRequired) ? \'black\' : \'red\'}">{{ audit.calibrationRequired }}</td> --\x3e\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.calibrationRequired == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'calibrationFrequencyMonths\', audit.calibrationFrequencyMonths) ? \'black\' : \'red\'}">{{ audit.calibrationFrequencyMonths }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'calibrationFrequencyDays\', audit.calibrationFrequencyDays) ? \'black\' : \'red\'}">{{ audit.calibrationFrequencyDays }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'calibrationDefaultVendorName\', audit.calibrationDefaultVendorName) ? \'black\' : \'red\'}">{{ audit.calibrationDefaultVendorName }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'calibrationDefaultCost\', audit.calibrationDefaultCost) ? \'black\' : \'red\'}">{{ audit.calibrationDefaultCost }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'calibrationCurrencyName\', audit.calibrationCurrencyName) ? \'black\' : \'red\'}">{{ audit.calibrationCurrencyName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'calibrationGlAccountName\', audit.calibrationGlAccountName) ? \'black\' : \'red\'}">{{ audit.calibrationGlAccountName }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'assetCalibrationMin\', audit.assetCalibrationMin) ? \'black\' : \'red\'}">{{ audit.assetCalibrationMin }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'assetCalibrationMinTolerance\', audit.assetCalibrationMinTolerance) ? \'black\' : \'red\'}">{{ audit.assetCalibrationMinTolerance }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'assetCalibratonMax\', audit.assetCalibratonMax) ? \'black\' : \'red\'}">{{ audit.assetCalibratonMax }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'assetCalibrationMaxTolerance\', audit.assetCalibrationMaxTolerance) ? \'black\' : \'red\'}">{{ audit.assetCalibrationMaxTolerance }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'assetCalibrationExpected\', audit.assetCalibrationExpected) ? \'black\' : \'red\'}">{{ audit.assetCalibrationExpected }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'assetCalibrationExpectedTolerance\', audit.assetCalibrationExpectedTolerance) ? \'black\' : \'red\'}">{{ audit.assetCalibrationExpectedTolerance }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'calibrationMemo\', audit.calibrationMemo) ? \'black\' : \'red\'}">\r\n                        <p class="p_editor" [innerHTML]="audit.calibrationMemo"></p>\r\n                    </td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'certificationRequired\', audit.certificationRequired) ? \'black\' : \'red\'}">{{ audit.certificationRequired }}</td> --\x3e\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.certificationRequired == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'certificationFrequencyMonths\', audit.certificationFrequencyMonths) ? \'black\' : \'red\'}">{{ audit.certificationFrequencyMonths }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'certificationFrequencyDays\', audit.certificationFrequencyDays) ? \'black\' : \'red\'}">{{ audit.certificationFrequencyDays }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'certificationDefaultVendorName\', audit.certificationDefaultVendorName) ? \'black\' : \'red\'}">{{ audit.certificationDefaultVendorName }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'certificationDefaultCost\', audit.certificationDefaultCost) ? \'black\' : \'red\'}">{{ audit.certificationDefaultCost }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'certificationCurrencyName\', audit.certificationCurrencyName) ? \'black\' : \'red\'}">{{ audit.certificationCurrencyName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'certificationGlAccountName\', audit.certificationGlAccountName) ? \'black\' : \'red\'}">{{ audit.certificationGlAccountName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'certificationMemo\', audit.certificationMemo) ? \'black\' : \'red\'}">\r\n                        <p class="p_editor" [innerHTML]="audit.certificationMemo"></p>\r\n                    </td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionRequired\', audit.inspectionRequired) ? \'black\' : \'red\'}">{{ audit.inspectionRequired }}</td> --\x3e\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.inspectionRequired == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionFrequencyMonths\', audit.inspectionFrequencyMonths) ? \'black\' : \'red\'}">{{ audit.inspectionFrequencyMonths }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionFrequencyDays\', audit.inspectionFrequencyDays) ? \'black\' : \'red\'}">{{ audit.inspectionFrequencyDays }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionDefaultVendorName\', audit.inspectionDefaultVendorName) ? \'black\' : \'red\'}">{{ audit.inspectionDefaultVendorName }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionDefaultCost\', audit.inspectionDefaultCost) ? \'black\' : \'red\'}">{{ audit.inspectionDefaultCost }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionCurrencyName\', audit.inspectionCurrencyName) ? \'black\' : \'red\'}">{{ audit.inspectionCurrencyName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionGlaAccountName\', audit.inspectionGlaAccountName) ? \'black\' : \'red\'}">{{ audit.inspectionGlaAccountName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionMemo\', audit.inspectionMemo) ? \'black\' : \'red\'}">\r\n                        <p class="p_editor" [innerHTML]="audit.inspectionMemo"></p>\r\n                    </td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'verificationRequired\', audit.verificationRequired) ? \'black\' : \'red\'}">{{ audit.verificationRequired }}</td> --\x3e\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.verificationRequired == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'verificationFrequencyMonths\', audit.verificationFrequencyMonths) ? \'black\' : \'red\'}">{{ audit.verificationFrequencyMonths }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'verificationFrequencyDays\', audit.verificationFrequencyDays) ? \'black\' : \'red\'}">{{ audit.verificationFrequencyDays }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'verificationDefaultVendorName\', audit.verificationDefaultVendorName) ? \'black\' : \'red\'}">{{ audit.verificationDefaultVendorName }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'verificationDefaultCost\', audit.verificationDefaultCost) ? \'black\' : \'red\'}">{{ audit.verificationDefaultCost }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'verificationCurrencyName\', audit.verificationCurrencyName) ? \'black\' : \'red\'}">{{ audit.verificationCurrencyName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'verificationGlAccountName\', audit.verificationGlAccountName) ? \'black\' : \'red\'}">{{ audit.verificationGlAccountName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'verificationMemo\', audit.verificationMemo) ? \'black\' : \'red\'}">\r\n                        <p class="p_editor" [innerHTML]="audit.verificationMemo"></p>\r\n                    </td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetIsMaintenanceReqd\', audit.assetIsMaintenanceReqd) ? \'black\' : \'red\'}">{{ audit.assetIsMaintenanceReqd }}</td> --\x3e\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.assetIsMaintenanceReqd == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'maintenanceFrequencyMonths\', audit.maintenanceFrequencyMonths) ? \'black\' : \'red\'}">{{ audit.maintenanceFrequencyMonths }}</td>\r\n                    <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'maintenanceFrequencyDays\', audit.maintenanceFrequencyDays) ? \'black\' : \'red\'}">{{ audit.maintenanceFrequencyDays }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'defaultVendorName\', audit.defaultVendorName) ? \'black\' : \'red\'}">{{ audit.defaultVendorName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'glAccountName\', audit.glAccountName) ? \'black\' : \'red\'}">{{ audit.glAccountName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'maintenanceMemo\', audit.maintenanceMemo) ? \'black\' : \'red\'}">\r\n                        <p class="p_editor" [innerHTML]="audit.maintenanceMemo"></p>\r\n                    </td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'isWarrantyRequired\', audit.isWarrantyRequired) ? \'black\' : \'red\'}">{{ audit.isWarrantyRequired }}</td> --\x3e\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.isWarrantyRequired == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td>\r\n                    \r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'warrantyCompanySelectName\', audit.warrantyCompanySelectName) ? \'black\' : \'red\'}">{{ audit.warrantyCompanySelectName }}</td> --\x3e\r\n  <td [ngStyle]="{color: getColorCodeForHistory(i, \'warrantyCompany\', audit.warrantyCompany) ? \'black\' : \'red\'}">{{ audit.warrantyCompany }}</td>\r\n                   <td [ngStyle]="{color: getColorCodeForHistory(i, \'warrantyDefaultVendorName\', audit.warrantyDefaultVendorName) ? \'black\' : \'red\'}">{{ audit.warrantyDefaultVendorName }}</td>\r\n                    \x3c!-- <ng-container *ngIf="!audit.warrantyCompanyVendorName && !audit.warrantyCompanyName"><td></td></ng-container> --\x3e\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'warrantyGlAccountName\', audit.warrantyGlAccountName) ? \'black\' : \'red\'}">{{ audit.warrantyGlAccountName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'warrantyStartDate\', audit.warrantyStartDate) ? \'black\' : \'red\'}">{{ audit.warrantyStartDate | date: \'MM/dd/yyyy\' }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'warrantyEndDate\', audit.warrantyEndDate) ? \'black\' : \'red\'}">{{ audit.warrantyEndDate | date: \'MM/dd/yyyy\' }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'warrantyStatusName\', audit.warrantyStatusName) ? \'black\' : \'red\'}">{{ audit.warrantyStatusName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'warrantyMemo\', audit.warrantyMemo) ? \'black\' : \'red\'}">\r\n                        <p class="p_editor" [innerHTML]="audit.warrantyMemo"></p>\r\n                    </td>\r\n                    <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'companyName\', audit.companyName) ? \'black\' : \'red\'}">{{ audit.companyName }}</td>\r\n                    <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'buName\', audit.buName) ? \'black\' : \'red\'}">{{ audit.buName }}</td>\r\n                    <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'divName\', audit.divName) ? \'black\' : \'red\'}">{{ audit.divName }}</td>\r\n                    <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'deptName\', audit.deptName) ? \'black\' : \'red\'}">{{ audit.deptName }}</td>\r\n                    <td [ngStyle]="{color: getColorCodeForHistory(i, \'memo\', audit.memo) ? \'black\' : \'red\'}">\r\n                        <p class="p_editor" [innerHTML]="audit.memo"></p>\r\n                    </td>\r\n                    \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'isActive\', audit.isActive) ? \'black\' : \'red\'}">{{ audit.isActive }}</td> --\x3e\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.isActive == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td>\r\n                    <td >\r\n                        <input type="checkbox" disabled [checked]="audit.isDeleted == true"\r\n                               style="margin: 0px auto; display: block;" />\r\n                    </td>\r\n                    <td>{{ audit.createdDate | date: \'MM/dd/yyyy h:mm:ss a\' }}</td>\r\n                    <td>{{ audit.createdBy }}</td>\r\n                    <td>{{ audit.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\' }}</td>\r\n                    <td>{{ audit.updatedBy }}</td>\r\n                </tr>\r\n                </tbody>\r\n              </ng-container>\r\n\r\n              <ng-container *ngIf="isIntangible">\r\n                <thead>\r\n                    <tr>\r\n                      <th rowspan="2">Entry Date <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Asset ID <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Alt Asset ID</th>\r\n                      <th rowspan="2">Asset Name <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Asset Description</th>\r\n                      <th rowspan="2">Intangible Class <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Amortization Method</th>\r\n                      <th rowspan="2">Intangible Life</th>\r\n                      <th rowspan="2">Amortization Frequency</th>\r\n                      <th rowspan="2">Intangible GL Account</th>\r\n                      <th rowspan="2">Amort Expense GL Account</th>\r\n                      <th rowspan="2">Acc Amort Depr GL Account</th>\r\n                      <th rowspan="2">Intangible Write Down GL Account</th>\r\n                      <th colspan="4" rowspan="2">Management Structure <span class="clr-red">*</span></th>\r\n                      <th rowspan="2">Memo</th>\r\n                      <th rowspan="2">Is Active</th>\r\n                      <th rowspan="2">Is Deleted</th>\r\n                      <th rowspan="2">Created Date</th>\r\n                      <th rowspan="2">Created By</th>\r\n                      <th rowspan="2">Updated Date</th>\r\n                      <th rowspan="2">Updated By</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf="auditHistory.length > 0">\r\n                    <tr *ngFor="let audit of auditHistory; let i = index">\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'entryDate\', audit.entryDate) ? \'black\' : \'red\'}">{{ audit.entryDate | date: \'MM/dd/yyyy\' }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetId\', audit.assetId) ? \'black\' : \'red\'}">{{ audit.assetId }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'alternateAssetId\', audit.alternateAssetId) ? \'black\' : \'red\'}">{{ audit.alternateAssetId }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'name\', audit.name) ? \'black\' : \'red\'}">{{ audit.name }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'description\', audit.description) ? \'black\' : \'red\'}">{{ audit.description }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'assetIntangibleTypeName\', audit.assetIntangibleTypeName) ? \'black\' : \'red\'}">{{ audit.assetIntangibleTypeName }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'amortizationMethod\', audit.amortizationMethod) ? \'black\' : \'red\'}">{{ audit.amortizationMethod }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'intangibleLife\', audit.intangibleLife) ? \'black\' : \'red\'}">{{ audit.intangibleLife }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'amortizationFrequency\', audit.amortizationFrequency) ? \'black\' : \'red\'}">{{ audit.amortizationFrequency }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'intangibleGLAccount\', audit.intangibleGLAccount) ? \'black\' : \'red\'}">{{ audit.intangibleGLAccount }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'amortExpenseGLAccount\', audit.amortExpenseGLAccount) ? \'black\' : \'red\'}">{{ audit.amortExpenseGLAccount }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'accAmortDeprGLAccount\', audit.accAmortDeprGLAccount) ? \'black\' : \'red\'}">{{ audit.accAmortDeprGLAccount }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'intangibleWriteDownGLAccount\', audit.intangibleWriteDownGLAccount) ? \'black\' : \'red\'}">{{ audit.intangibleWriteDownGLAccount }}</td>\r\n                        <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'companyName\', audit.companyName) ? \'black\' : \'red\'}">{{ audit.companyName }}</td>\r\n                        <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'buName\', audit.buName) ? \'black\' : \'red\'}">{{ audit.buName }}</td>\r\n                        <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'divName\', audit.divName) ? \'black\' : \'red\'}">{{ audit.divName }}</td>\r\n                        <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'deptName\', audit.deptName) ? \'black\' : \'red\'}">{{ audit.deptName }}</td>\r\n                        <td [ngStyle]="{color: getColorCodeForHistory(i, \'memo\', audit.memo) ? \'black\' : \'red\'}">\r\n                            <p class="p_editor" [innerHTML]="audit.memo"></p>\r\n                        </td>\r\n                        \x3c!-- <td [ngStyle]="{color: getColorCodeForHistory(i, \'isActive\', audit.isActive) ? \'black\' : \'red\'}">{{ audit.isActive }}</td> --\x3e\r\n                        <td >\r\n                            <input type="checkbox" disabled [checked]="audit.isActive == true"\r\n                                   style="margin: 0px auto; display: block;" />\r\n                        </td>\r\n                        <td >\r\n                            <input type="checkbox" disabled [checked]="audit.isDeleted == true"\r\n                                   style="margin: 0px auto; display: block;" />\r\n                        </td>\r\n                        <td>{{ audit.createdDate | date: \'MM/dd/yyyy h:mm:ss a\' }}</td>\r\n                        <td>{{ audit.createdBy }}</td>\r\n                        <td>{{ audit.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\' }}</td>\r\n                        <td>{{ audit.updatedBy }}</td>\r\n                    </tr>\r\n                    </tbody>\r\n              </ng-container>\r\n            \r\n          </table>\r\n          <ng-template *ngIf="!showhistorylist">\r\n            <div class="text-center">\r\n                <div class="text-center">\r\n                    <img src="../../../assets/images/binoculars.png" style="height: 100px; width: 100px;">\r\n                    <h4 style="color: #ff5663;">No History Found </h4>\r\n                </div>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal">\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <strong>\r\n            Asset Name:\r\n            <span class="new-label">{{restorerecord.name}}</span>\r\n        </strong>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> \r\n\r\n\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible" style="    z-index: 1060;">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>\r\n\r\n\r\n'},GCBe:function(e,t,n){"use strict";n.r(t),t.default=""},JaF0:function(e,t,n){"use strict";n.r(t),t.default='\r\n\r\n\x3c!-- <div class="x_content"> --\x3e\r\n    \x3c!-- <div class="card">\r\n        <div class="card-header">\r\n            <nav aria-label="breadcrumb">\r\n                <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n                    <li class="breadcrumb-item active" aria-current="page">{{isEditMode ? \'Edit\' : \'Create\'}} Asset Inventory</li>\r\n                </ol>\r\n            </nav>\r\n        </div> --\x3e\r\n        <div class="x_content">\r\n               \r\n            \x3c!-- <nav aria-label="breadcrumb">\r\n                <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n                    <li class="breadcrumb-item active" aria-current="page">Asset Inventory</li>\r\n                    <li class="breadcrumb-item" aria-current="page">{{isEditMode ? \'Edit\' : \'Create\'}} Asset Inventory</li>\r\n                </ol>\r\n            </nav> --\x3e\r\n            <p-breadcrumb [model]="breadcrumbs" [home]="home"></p-breadcrumb>\r\n    <div class="card new-card">\r\n    <div class="card-header bg-primary">\r\n      <div class="row">\r\n        <div class="col">\r\n          <h4 class="new-card-heading">\r\n              {{isEditMode ? \'Edit\' : \'Create\' }} Asset Inventory</h4>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type="button"\r\n            class="btn-sm new-btn-primary"\r\n            [routerLink]="[\r\n            \'/assetmodule/assetpages/app-asset-inventory-listing\'\r\n            ]"\r\n          >\r\n            Asset Inventory List\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n        <div class="card-body new-card-body" style="padding: 16px;">\r\n            <form #generalForm="ngForm">\r\n                <div class="form-row">\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            \x3c!-- <label class="radiobtn-label">Status:</label> --\x3e\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm wauto">\r\n                                    <input type="radio" name="assetRadio" class="form-control" value="1" disabled [checked]="currentAsset.isTangible">\r\n                                    <span class="checkmark"></span> Tangible\r\n                                </label>\r\n                            </div>\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm wauto">\r\n                                    <input type="radio" name="assetRadio" class="form-control" value="2" disabled [checked]="currentAsset.isIntangible">\r\n                                    <span class="checkmark"></span> Intangible\r\n                                </label>\r\n                            </div>\r\n\r\n                        </div> \r\n                    </div>\r\n            \r\n                    <div class="col-md-4" *ngIf="currentAsset.isTangible">\r\n                        <div class="form-group">\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm wauto">\r\n                                    <input type="radio" name="assetisDepreciable" class="form-control" value="1" disabled [checked]="currentAsset.isDepreciable">\r\n                                    <span class="checkmark"></span> Depreciable\r\n                                </label>\r\n                            </div>\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm wauto">\r\n                                    <input type="radio" name="assetisDepreciable" class="form-control" value="2" disabled [checked]="currentAsset.isNonDepreciable">\r\n                                    <span class="checkmark"></span> Non-Depreciable\r\n                                </label>\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n            \r\n                    <div class="col-md-4" *ngIf="currentAsset.isIntangible">\r\n                        <div class="form-group">\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm wauto">\r\n                                    <input type="radio" name="assetisAmortizable" class="form-control" value="1" disabled [checked]="currentAsset.isAmortizable">\r\n                                    <span class="checkmark"></span> Amortizable\r\n                                </label>\r\n                            </div>\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-cstm wauto">\r\n                                    <input type="radio" name="assetisAmortizable" class="form-control" value="2" disabled [checked]="currentAsset.isNonAmortizable">\r\n                                    <span class="checkmark"></span> Non-Amortizable\r\n                                </label>\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n             \r\n                <div class="form-row m-t-10"> \r\n                    <div class="col-md-3"> \r\n                        <div class="form-group">\r\n                            <label>Inventory Num </label>\r\n                            <input type="text" class="form-control" required name="inventoryNumber" [(ngModel)]="currentAsset.inventoryNumber" disabled>\r\n                        </div>\r\n                        <div class="form-group" *ngIf="currentAsset.isIntangible">\r\n                            <label>Asset Status</label>\r\n                            <p-dropdown  [showClear]="true" class="p-dropdown-100"  (ngModelChange)="getmemo($event)"  (input)="onFilterAssetStatus($event.target.value)"  [options]="assetStatusList" filter="true" [(ngModel)]="currentAsset.assetStatusId" name="assetStatusId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                        </div>\r\n                        <div class="form-group" *ngIf="currentAsset.isIntangible">\r\n                            <label>Asset Inventory Status</label>\r\n                            <p-dropdown  [showClear]="true" class="p-dropdown-100" disabled  (ngModelChange)="getmemo($event)"  [options]="assetInventoryStatusList" filter="true" [(ngModel)]="currentAsset.inventoryStatusId" name="inventoryStatusId" [resetFilterOnHide]="true" ></p-dropdown>\r\n                        </div>\r\n                        <div class="form-group"> \r\n                            <label>Entry Date <span class="clr-red">*</span></label>\r\n                            <p-calendar [showIcon]="true" [maxDate]="currentDate" \r\n                            [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                            name="entryDate" (ngModelChange)="getmemo($event)"\r\n                             [(ngModel)]="currentAsset.entryDate" required></p-calendar>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Asset ID <span class="clr-red">*</span></label>\r\n                            <p-autoComplete field="label" class="pautocomp-cstm" (ngModelChange)="getmemo($event)" (onSelect)="onAssetIdselection($event,\'fromHtml\')"  [(ngModel)]="currentAsset.assetRecordId" name="assetRecordId" [suggestions]="assetListFilter" (completeMethod)="filterAssetList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true" required></p-autoComplete>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Alt Asset ID</label>\r\n                            <input type="text" class="form-control" name="alternateAssetId" [(ngModel)]="currentAsset.alternateAssetId" disabled>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Asset Name <span class="clr-red">*</span></label>\r\n                            <input type="text" class="form-control" name="name" [(ngModel)]="currentAsset.name" disabled required>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Asset Description</label>\r\n                            <input type="text" class="form-control" name="description" [(ngModel)]="currentAsset.description" disabled>\r\n                        </div>\r\n                        <ng-container *ngIf="currentAsset.isTangible">\r\n                            <div class="form-group">\r\n                                <label>Acquisition Type <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control" name="acquisitionType" [(ngModel)]="currentAsset.acquisitionType" disabled required>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Model Number</label>\r\n                                <input type="text" class="form-control" name="model" [(ngModel)]="currentAsset.model" disabled>\r\n                            </div>\r\n                     \r\n                            <div class="form-group">\r\n                                <label>Asset Parent</label>\r\n                                <input type="text" class="form-control" name="assetParentId" [(ngModel)]="currentAsset.assetParentId" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Manufacturer</label>\r\n                                <input type="text" class="form-control" name="manufacturerName" [(ngModel)]="currentAsset.manufacturerName" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Manufactured Date</label>\r\n                                <p-calendar [showIcon]="true" (ngModelChange)="getmemo($event)"\r\n                                [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [maxDate]="currentAsset.entryDate" name="manufacturedDate" [(ngModel)]="currentAsset.manufacturedDate" [disabled]="!currentAsset.entryDate"></p-calendar>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                    <label>\r\n                                        <input type="checkbox" name="isSerialized" [(ngModel)]="currentAsset.isSerialized" disabled>\r\n                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                        Is Serialized\r\n                                    </label>\r\n                                </div> \r\n                            </div>\r\n                            <div class="form-group" *ngIf="currentAsset.isSerialized">\r\n                                <label>Serial No <span class="clr-red">*</span></label>\r\n                                <input class="form-control" type="text" name="serialNumber" (ngModelChange)="getmemo($event)" [(ngModel)]="currentAsset.serialNo" required> \r\n                            </div>\r\n                        </ng-container>\r\n                        </div>\r\n                        <div class="col-md-3" *ngIf="currentAsset.isTangible">\r\n                            \x3c!-- <div class="form-group">\r\n                                <label>Asset Status</label>\r\n                                <select class="form-control" disabled (ngModelChange)="getmemo($event)" [(ngModel)]="currentAsset.inventoryStatusId" name="inventoryStatusId">\r\n                                    <option value="0">-- Select --</option>\r\n                                    <option *ngFor="let item of assetStatusList" [ngValue]="item.value">{{item.label}}</option>\r\n                                </select>\r\n                            </div> --\x3e\r\n                            <div class="form-group" >\r\n                                <label>Asset Status</label>\r\n                                <p-dropdown  [showClear]="true" class="p-dropdown-100"  (input)="onFilterAssetStatus($event.target.value)"  (ngModelChange)="getmemo($event)"  [options]="assetStatusList" filter="true" [(ngModel)]="currentAsset.assetStatusId" name="assetStatusId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                            </div>\r\n                            <div class="form-group" >\r\n                                <label>Asset Inventory Status</label>\r\n                                <p-dropdown  [showClear]="true" class="p-dropdown-100" disabled  (ngModelChange)="getmemo($event)"  [options]="assetInventoryStatusList" filter="true" [(ngModel)]="currentAsset.inventoryStatusId" name="inventoryStatusId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>UOM <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control" required name="unitOfMeasureName" [(ngModel)]="currentAsset.unitOfMeasureName" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Expiration Date</label>\r\n                                <p-calendar [showIcon]="true" (ngModelChange)="getmemo($event)"\r\n                                [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [minDate]="currentAsset.manufacturedDate" name="expirationDate" [(ngModel)]="currentAsset.expirationDate" [disabled]="!currentAsset.manufacturedDate"></p-calendar>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Asset Location</label>\r\n                                \x3c!-- <select class="form-control" (ngModelChange)="getmemo($event)" [(ngModel)]="currentAsset.assetLocationId" name="assetLocationId">\r\n                                    <option value="0">-- Select --</option>\r\n                                    <option *ngFor="let item of allLocationList" [ngValue]="item.assetLocationId">{{item.name}}</option>\r\n                                </select> --\x3e\r\n                                <p-dropdown  [showClear]="true" class="p-dropdown-100"  (ngModelChange)="getmemo($event)"  [options]="allLocationList" filter="true" [(ngModel)]="currentAsset.assetLocationId" name="assetLocationId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control"  required name="currencyName" [(ngModel)]="currentAsset.currencyName" disabled>\r\n                           \r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Unit Cost <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" required pKeyFilter="money" name="unitCost" [(ngModel)]="currentAsset.unitCost" (change)="onChangeUnitCost(); getTotalCost();">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Installation Cost</label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" pKeyFilter="money" name="installationCost" [(ngModel)]="currentAsset.installationCost"  (change)="onChangeInstallCost(); getTotalCost();">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Freight</label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" pKeyFilter="money" name="freight" [(ngModel)]="currentAsset.freight" (change)="onChangeFreight(); getTotalCost();">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Insurance</label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" pKeyFilter="money" name="insurance" [(ngModel)]="currentAsset.insurance" (change)="onChangeInsurance(); getTotalCost();">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Taxes</label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" pKeyFilter="money" name="taxes" [(ngModel)]="currentAsset.taxes" (change)="onChangeTaxes(); getTotalCost();">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Total Cost</label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" name="totalCost" [(ngModel)]="currentAsset.totalCost" disabled>\r\n                            </div>\r\n                        \x3c!-- </ng-container> --\x3e\r\n                        <div class="form-group">\r\n                            <a style="color:#3498db" (click)="openCapes()"  data-toggle="modal" data-target="#capesData">\r\n                                <u>Link to Capes</u>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="col-md-3">\r\n                        <ng-container *ngIf="currentAsset.isTangible">\r\n                            \x3c!-- <div class="form-group">\r\n                                <a style="color:#3498db" (click)="openCapes()" data-toggle="modal" data-target="#capesData">\r\n                                    <u>Link to Capes</u>\r\n                                </a>\r\n                            </div> --\x3e\r\n                            <div class="form-group">\r\n                                <label>Asset Class/Attribute <span class="clr-red">*</span></label>\r\n                                <input type="text" class="form-control" name="assetTypeName" required [(ngModel)]="currentAsset.assetType" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Depreciation Method</label>\r\n                                <input type="text" class="form-control" name="depreciationMethod" [(ngModel)]="currentAsset.depreciationMethod" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Residual %</label>\r\n                                <input type="text" class="form-control" name="residualPercentage" [(ngModel)]="currentAsset.residualPercentage" disabled style="text-align: end !important;">\r\n                            </div>\r\n                            \x3c!-- <div class="form-group">\r\n                                <label>Residual Value</label>\r\n                                <input type="text" class="form-control" name="residualValue"  [(ngModel)]="currentAsset.residualValue" disabled>\r\n                            </div> --\x3e\r\n                            <div class="form-group">\r\n                                <label>Asset Life</label>\r\n                                <input type="number" class="form-control" (ngModelChange)="getmemo($event)" name="assetLife" [(ngModel)]="currentAsset.assetLife">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Depr Frequency</label>\r\n                                <input type="text" class="form-control" name="depreciationFrequency" [(ngModel)]="currentAsset.depreciationFrequency" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Acquired GL Account</label>\r\n                                <input type="text" class="form-control" name="acquiredGLAccount" [(ngModel)]="currentAsset.acquiredGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Depr Expense GL Account</label>\r\n                                <input type="text" class="form-control" name="deprExpenseGLAccount" [(ngModel)]="currentAsset.deprExpenseGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Accum Depr GL Account</label>\r\n                                <input type="text" class="form-control" name="adDepsGLAccount" [(ngModel)]="currentAsset.adDepsGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Sale GL Account</label>\r\n                                <input type="text" class="form-control" name="assetSale" [(ngModel)]="currentAsset.assetSale" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Write Off GL Account</label>\r\n                                <input type="text" class="form-control" name="assetWriteOff" [(ngModel)]="currentAsset.assetWriteOff" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Write Down GL Account</label>\r\n                                <input type="text" class="form-control" name="assetWriteDown" [(ngModel)]="currentAsset.assetWriteDown" disabled>\r\n                            </div>\r\n                        </ng-container>\r\n                        <ng-container *ngIf="currentAsset.isIntangible">\r\n                            <div class="form-group">\r\n                                <label>Intangible Class</label>\r\n                                <input type="text" class="form-control" name="assetIntangibleTypeName" [(ngModel)]="currentAsset.assetIntangibleTypeName" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Amortization Method</label>\r\n                                <input type="text" class="form-control" name="amortizationMethod" [(ngModel)]="currentAsset.amortizationMethod" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Intangible Life</label>\r\n                                <input type="text" class="form-control" name="intangibleLife" [(ngModel)]="currentAsset.intangibleLife" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Amortization Frequency</label>\r\n                                <input type="text" class="form-control" name="amortizationFrequency" [(ngModel)]="currentAsset.amortizationFrequency" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Intangible GL Account</label>\r\n                                <input type="text" class="form-control" name="intangibleGLAccount" [(ngModel)]="currentAsset.intangibleGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Amort Expense GL Account</label>\r\n                                <input type="text" class="form-control" name="amortExpenseGLAccount" [(ngModel)]="currentAsset.amortExpenseGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Acc Amort Depr GL Account</label>\r\n                                <input type="text" class="form-control" name="accAmortDeprGLAccount" [(ngModel)]="currentAsset.accAmortDeprGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Intangible Write Down GL Account</label>\r\n                                <input type="text" class="form-control" name="intangibleWriteDownGLAccount" [(ngModel)]="currentAsset.intangibleWriteDownGLAccount" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Intangible Write Off GL Account</label>\r\n                                <input type="text" class="form-control" name="intangibleWriteGLAccount" [(ngModel)]="currentAsset.intangibleWriteOffGLAccount" disabled>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div class="col-md-3">\r\n                        <div class="card card-stock" style="margin-top: 0;">\r\n                            <div class="card-header">\r\n                                <h5>Management Structure <span class="clr-red">*</span></h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="col-md-12">\r\n                                    <div class="form-group">\r\n                                        \x3c!-- <select class="form-control" name="company" (ngModelChange)="getmemo($event)" [(ngModel)]="managementStructure.companyId" \r\n                                        (change)="selectedLegalEntity(managementStructure.companyId);" #companyName="ngModel" required>\r\n                                            <option value="0">Select Legal Entity</option>\r\n                                            <option *ngFor="let name of legalEntityList" [ngValue]="name.value">{{name.label}}</option>\r\n                                        </select> --\x3e\r\n                                        <p-dropdown  [showClear]="true" class="p-dropdown-100"  (onChange)="selectedLegalEntity(managementStructure.companyId)" required  (ngModelChange)="getmemo($event)"  [options]="legalEntityList" filter="true" [(ngModel)]="managementStructure.companyId" name="company"   placeholder="Select" ></p-dropdown>\r\n                                        \x3c!-- <div *ngIf="companyName.invalid && (companyName.dirty || companyName.touched)" class="alert alert-danger alert-danger-cstm">\r\n                                                <div *ngIf="companyName.errors.required">\r\n                                                    <small> Legal Entity Name is required </small>\r\n                                                </div>\r\n                                        </div>         --\x3e\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        \x3c!-- <select class="form-control" (ngModelChange)="getmemo($event)" [(ngModel)]="managementStructure.buId" name="buId" (change)="selectedBusinessUnit(managementStructure.buId)">\r\n                                            <option value="0">-- Select --</option>\r\n                                            <option *ngFor="let name of businessUnitList" [ngValue]="name.value">{{name.label}}</option>\r\n                                        </select> --\x3e\r\n                                        <p-dropdown  [showClear]="true" class="p-dropdown-100" (onChange)="selectedBusinessUnit(managementStructure.buId)"  (ngModelChange)="getmemo($event)"  [options]="businessUnitList" filter="true" [(ngModel)]="managementStructure.buId" name="buId"  placeholder="Select" ></p-dropdown>\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        \x3c!-- <select class="form-control" (ngModelChange)="getmemo($event)" [(ngModel)]="managementStructure.divisionId" name="divisionId" (change)="selectedDivision(managementStructure.divisionId)">\r\n                                            <option value="0">-- Select --</option>\r\n                                            <option *ngFor="let name of divisionList" [ngValue]="name.value">{{name.label}}</option>\r\n                                        </select> --\x3e\r\n                                        <p-dropdown  [showClear]="true" class="p-dropdown-100"  (onChange)="selectedDivision(managementStructure.divisionId)" (ngModelChange)="getmemo($event)"  [options]="divisionList" filter="true" [(ngModel)]="managementStructure.divisionId" name="divisionId"  placeholder="Select" ></p-dropdown>\r\n   \r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        \x3c!-- <select class="form-control" (ngModelChange)="getmemo($event)" [(ngModel)]="managementStructure.departmentId" name="departmentId" (change)="selectedDepartment(managementStructure.departmentId)">\r\n                                            <option value="0">-- Select --</option>\r\n                                            <option *ngFor="let name of departmentList" [ngValue]="name.value">{{name.label}}</option>\r\n                                        </select> --\x3e\r\n                                        <p-dropdown  [showClear]="true" class="p-dropdown-100"  (onChange)="selectedDepartment(managementStructure.departmentId)"   (ngModelChange)="getmemo($event)"  [options]="departmentList" filter="true" [(ngModel)]="managementStructure.departmentId"  name="departmentId"  placeholder="Select" ></p-dropdown>\r\n                                          \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group memo-popup-cstm">\r\n                            \x3c!-- <label>Memo <i class="fa fa-pencil contoel_v" (ngModelChange)="getmemo($event)" data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddMemo(\'Memo\')"></i></label>\r\n                            <span>\r\n                                <div [innerHTML]="currentAsset.memo" matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.memo)" class="form-control" class="p_editor_box"></div></span> --\x3e\r\n                                <label>Memo</label>\r\n                                <div class="align_adh">\r\n                                    <div [innerHTML]="currentAsset.memo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.memo)"\r\n                                        class="p_editor_box" style="width: 100% !important;"></div>\r\n                                    <i class="fa fa-pencil contoel_v"\r\n                                        (ngModelChange)="getmemo($event)"\r\n                                        data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Memo"\r\n                                        (click)="onAddMemo(\'Memo\')"></i>\r\n                                </div>\r\n                      \r\n                      \r\n                            </div>\r\n                        \x3c!-- <div  *ngIf="currentAsset.isTangible">\r\n                            <div>\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="calibrationRequired" [(ngModel)]="currentAsset.calibrationRequired" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Calibration Required\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>                        \r\n    \r\n                            <div>\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="certificationRequired" [(ngModel)]="currentAsset.certificationRequired" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Certification Required\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n    \r\n                            <div >\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="inspectionRequired" [(ngModel)]="currentAsset.inspectionRequired" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Inspection Required\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>                        \r\n    \r\n                            <div>\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="verificationRequired" [(ngModel)]="currentAsset.verificationRequired" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Verification Required\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>                        \r\n                        </div> --\x3e\r\n                    </div> \r\n                </div>\r\n\x3c!-- // calibration  , certification , inspection , verification --\x3e\r\n\r\n<div class="form-row m-t-10" *ngIf="currentAsset.isTangible">\r\n        <div class="col-md-3" [ngClass]="(currentAsset.calibrationRequired) ? \'border-box-cstm\' : \'\'" *ngIf="currentAsset.calibrationRequired" style="margin-top: 4px;">\r\n            <div class="form-group">\r\n                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                    <label>\r\n                        <input type="checkbox" name="calibrationRequired" [(ngModel)]="currentAsset.calibrationRequired" disabled>\r\n                        <span class="cr"><i class="cr-icon pi pi-check"> </i></span>\r\n                      <span class="font_adjust1">  Calibration Required</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf="currentAsset.calibrationRequired">\r\n                <div class="form-group">\r\n                    <label>Calibration Frequency <span class="clr-red">*</span></label>\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Months</label>\r\n                                <input type="number" class="form-control" name="calibrationFrequencyMonths" [(ngModel)]="currentAsset.calibrationFrequencyMonths" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Days</label>\r\n                                <input type="number" class="form-control" name="calibrationFrequencyDays" [(ngModel)]="currentAsset.calibrationFrequencyDays" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>Default Vendor</label>\r\n                    <p-autoComplete field="label" class="pautocomp-cstm" (ngModelChange)="getmemo($event)"  [(ngModel)]="currentAsset.calibrationDefaultVendorId" name="calibrationDefaultVendorId" [suggestions]="vendorListFilter" (completeMethod)="filterVendorList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"></p-autoComplete>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Default Cost</label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" pKeyFilter="money" name="calibrationDefaultCost" [(ngModel)]="currentAsset.calibrationDefaultCost" (change)="onChangeCalDefaultCost()">\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red" *ngIf="currentAsset.calibrationDefaultCost !=0">*</span></label>\r\n                                <p-dropdown  [showClear]="true" [required]="currentAsset.calibrationDefaultCost !=0" class="p-dropdown-100"  (input)="onFilterAssetCurrency($event.target.value)" (ngModelChange)="getmemo($event)"  [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentAsset.calibrationCurrencyId" name="calibrationCurrencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>GL Account <span class="clr-red">*</span></label>\r\n                    <input type="text" class="form-control" (ngModelChange)="getmemo($event)" name="calibrationGlAccountName" [(ngModel)]="currentAsset.calibrationGlAccountName" disabled>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                    <label>Memo</label>\r\n                    <div class="align_adh">\r\n                        <div [innerHTML]="currentAsset.calibrationMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.calibrationMemo)"\r\n                            class="p_editor_box" style="width: 100% !important;"></div>\r\n                        <i class="fa fa-pencil contoel_v"\r\n                            data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above"  matTooltip="Add Calibration Memo" (click)="onAddMemo(\'Calibration Memo\')"></i>\r\n                    </div>\r\n                </div>\r\n                <div class="card card-stock card-tolerance">\r\n                    <div class="card-header">\r\n                        <h5>Tolerance</h5>\r\n                    </div>\r\n                    <div class="card-body">\r\n                        <div class="form-row">\r\n                            <label style="width: 100%; margin-left: 6px;">Min</label>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">                                                \r\n                                    <input type="number" class="form-control" name="assetCalibrationMin" [(ngModel)]="currentAsset.assetCalibrationMin" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibrationMinTolerance" [(ngModel)]="currentAsset.assetCalibrationMinTolerance" disabled>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-row">\r\n                            <label style="width: 100%; margin-left: 6px;">Max</label>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibratonMax" [(ngModel)]="currentAsset.assetCalibratonMax" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibrationMaxTolerance" [(ngModel)]="currentAsset.assetCalibrationMaxTolerance" disabled>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-row">\r\n                            <label style="width: 100%; margin-left: 6px;">Expected</label>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibrationExpected" [(ngModel)]="currentAsset.assetCalibrationExpected" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-6">\r\n                                <div class="form-group">\r\n                                    <input type="number" class="form-control" name="assetCalibrationExpectedTolerance" [(ngModel)]="currentAsset.assetCalibrationExpectedTolerance" disabled>\r\n                                </div>\r\n                            </div>\r\n                        </div>  \r\n                        <div class="form-group memo-popup-cstm">\r\n                            \x3c!-- <label>Memo <i class="fa fa-info-circle fa-lg" data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Tolerance Memo" (click)="onAddMemo(\'Calibration Memo\')"></i></label>\r\n                            <span>\r\n                                <div [innerHTML]="currentAsset.assetCalibrationMemo" class="form-control" class="p_editor_box"></div>\r\n                            </span> --\x3e\r\n                            <label>Memo</label>\r\n                            <div class="align_adh">\r\n                                <div [innerHTML]="currentAsset.assetCalibrationMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.assetCalibrationMemo)"\r\n                                    class="p_editor_box" style="width: 100% !important;"></div>\r\n                                <i class="fa fa-pencil contoel_v"\r\n                                    data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above"  matTooltip="Add Tolerance Memo" (click)="onAddMemo(\'Tolerance Memo\')"></i>\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>                                  \r\n                    </div>\r\n                </div>\r\n               \r\n            </ng-container>\r\n        </div>                        \r\n\r\n        <div class="col-md-3" [ngClass]="(currentAsset.certificationRequired) ? \'border-box-cstm m-t-5\' : \'\'" *ngIf="currentAsset.certificationRequired">\r\n            <div class="form-group">\r\n                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                    <label>\r\n                        <input type="checkbox" name="certificationRequired" [(ngModel)]="currentAsset.certificationRequired" disabled>\r\n                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                        <span class="font_adjust1">  Certification Required</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf="currentAsset.certificationRequired">\r\n                <div class="form-group">\r\n                    <label>Certification Frequency <span class="clr-red">*</span></label>\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Months</label>\r\n                                <input type="number" class="form-control" name="certificationFrequencyMonths" [(ngModel)]="currentAsset.certificationFrequencyMonths" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Days</label>\r\n                                <input type="number" class="form-control" name="certificationFrequencyDays" [(ngModel)]="currentAsset.certificationFrequencyDays" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>Default Vendor</label>\r\n                    <p-autoComplete field="label" class="pautocomp-cstm"  (ngModelChange)="getmemo($event)" [(ngModel)]="currentAsset.certificationDefaultVendorId" name="certificationDefaultVendorId" [suggestions]="vendorListFilter" (completeMethod)="filterVendorList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"></p-autoComplete>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Default Cost</label>\r\n                                <input type="text" (ngModelChange)="getmemo($event)" class="form-control text-right" pKeyFilter="money" name="certificationDefaultCost" [(ngModel)]="currentAsset.certificationDefaultCost" (change)="onChangeCertDefaultCost()">\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red" *ngIf="currentAsset.certificationDefaultCost !=0">*</span></label>\r\n                                <p-dropdown  [showClear]="true" [required]="currentAsset.certificationDefaultCost !=0" class="p-dropdown-100"  (input)="onFilterAssetCurrency($event.target.value)" (ngModelChange)="getmemo($event)"  [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentAsset.certificationCurrencyId" name="certificationCurrencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>GL Account <span class="clr-red">*</span></label>\r\n                    <input type="text" class="form-control" name="certificationGlAccountName" [(ngModel)]="currentAsset.certificationGlAccountName" disabled>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                  \r\n\r\n                    <label>Certification Memo</label>\r\n                    <div class="align_adh">\r\n                        <div [innerHTML]="currentAsset.certificationMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.certificationMemo)"\r\n                            class="p_editor_box" style="width: 100% !important;"></div>\r\n                        <i class="fa fa-pencil contoel_v"\r\n                            data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above"  matTooltip="Add Certification Memo" (click)="onAddMemo(\'Certification Memo\')"></i>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n\r\n        <div  class="col-md-3" [ngClass]="(currentAsset.inspectionRequired) ? \'border-box-cstm m-t-5\' : \'\'" *ngIf="currentAsset.inspectionRequired">\r\n            <div class="form-group">\r\n                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                    <label>\r\n                        <input type="checkbox" name="inspectionRequired" [(ngModel)]="currentAsset.inspectionRequired" disabled>\r\n                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                        <span class="font_adjust1"> Inspection Required</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf="currentAsset.inspectionRequired">\r\n                <div class="form-group">\r\n                    <label>Inspection Frequency <span class="clr-red">*</span></label>\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Months</label>\r\n                                <input type="number" class="form-control" name="inspectionFrequencyMonths" [(ngModel)]="currentAsset.inspectionFrequencyMonths" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Days</label>\r\n                                <input type="number" class="form-control" name="inspectionFrequencyDays" [(ngModel)]="currentAsset.inspectionFrequencyDays" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>Default Vendor</label>\r\n                    <p-autoComplete field="label" (ngModelChange)="getmemo($event)" class="pautocomp-cstm" [(ngModel)]="currentAsset.inspectionDefaultVendorId" name="inspectionDefaultVendorId" [suggestions]="vendorListFilter" (completeMethod)="filterVendorList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"></p-autoComplete>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Default Cost</label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" pKeyFilter="money" name="inspectionDefaultCost" [(ngModel)]="currentAsset.inspectionDefaultCost" (change)="onChangeInspDefaultCost()">\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red" *ngIf="currentAsset.inspectionDefaultCost !=0">*</span></label>\r\n\r\n                                <p-dropdown [required]="currentAsset.inspectionDefaultCost !=0" [showClear]="true" class="p-dropdown-100"  (input)="onFilterAssetCurrency($event.target.value)" (ngModelChange)="getmemo($event)"  [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentAsset.inspectionCurrencyId" name="inspectionCurrencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>GL Account <span class="clr-red">*</span></label>\r\n                    <input type="text" class="form-control" name="inspectionGlaAccountName" [(ngModel)]="currentAsset.inspectionGlaAccountName" disabled>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                    \x3c!-- <label>Inspection Memo <i class="fa fa-info-circle fa-lg" data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Inspection Memo" (click)="onAddMemo(\'Inspection Memo\')"></i></label>\r\n                    <span>\r\n                        <div [innerHTML]="currentAsset.inspectionMemo" class="form-control" class="p_editor_box"></div>\r\n                    </span> --\x3e\r\n\r\n                    <label>Inspection Memo </label>\r\n                    <div class="align_adh">\r\n                        <div [innerHTML]="currentAsset.inspectionMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.inspectionMemo)"\r\n                            class="p_editor_box" style="width: 100% !important;"></div>\r\n                        <i class="fa fa-pencil contoel_v"\r\n                            data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above"  matTooltip="Add Inspection Memo" (click)="onAddMemo(\'Inspection Memo\')"></i>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>                        \r\n\r\n        <div class="col-md-3" [ngClass]="(currentAsset.verificationRequired) ? \'border-box-cstm m-t-5\' : \'\'" *ngIf="currentAsset.verificationRequired">\r\n            <div class="form-group">\r\n                <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                    <label>\r\n                        <input type="checkbox" name="verificationRequired" [(ngModel)]="currentAsset.verificationRequired" disabled>\r\n                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                        <span class="font_adjust1"> Verification Required</span>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf="currentAsset.verificationRequired">\r\n                <div class="form-group">\r\n                    <label>Verification Frequency <span class="clr-red">*</span></label>\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Months</label>\r\n                                <input type="number" class="form-control" name="verificationFrequencyMonths" [(ngModel)]="currentAsset.verificationFrequencyMonths" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Days</label>\r\n                                <input type="number" class="form-control" name="verificationFrequencyDays" [(ngModel)]="currentAsset.verificationFrequencyDays" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>Default Vendor</label>\r\n                    <p-autoComplete field="label"  class="pautocomp-cstm" (ngModelChange)="getmemo($event)" [(ngModel)]="currentAsset.verificationDefaultVendorId" name="verificationDefaultVendorId" [suggestions]="vendorListFilter" (completeMethod)="filterVendorList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"></p-autoComplete>\r\n                </div>\r\n                <div class="form-group">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Default Cost</label>\r\n                                <input type="text" class="form-control text-right" (ngModelChange)="getmemo($event)" pKeyFilter="money" name="verificationDefaultCost" [(ngModel)]="currentAsset.verificationDefaultCost" (change)="onChangeVerDefaultCost()">\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Currency <span class="clr-red" *ngIf="currentAsset.verificationDefaultCost !=0">*</span></label>\r\n                                \r\n                                <p-dropdown [required]="currentAsset.verificationDefaultCost !=0" [showClear]="true" class="p-dropdown-100"  (input)="onFilterAssetCurrency($event.target.value)" (ngModelChange)="getmemo($event)"  [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentAsset.verificationCurrencyId" name="verificationCurrencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-group">\r\n                    <label>GL Account <span class="clr-red">*</span></label>\r\n                    <input type="text" class="form-control" name="verificationGlAccountName" [(ngModel)]="currentAsset.verificationGlAccountName" disabled>\r\n                </div>\r\n                <div class="form-group memo-popup-cstm">\r\n                    \x3c!-- <label>Verification Memo <i class="fa fa-info-circle fa-lg" data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Verification Memo" (click)="onAddMemo(\'Verification Memo\')"></i></label>\r\n                    <span>\r\n                        <div [innerHTML]="currentAsset.verificationMemo" class="form-control" class="p_editor_box"></div>\r\n                    </span> --\x3e\r\n                    <label>Verification Memo </label>\r\n                    <div class="align_adh">\r\n                        <div [innerHTML]="currentAsset.verificationMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.verificationMemo)"\r\n                            class="p_editor_box" style="width: 100% !important;"></div>\r\n                        <i class="fa fa-pencil contoel_v"\r\n                            data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above"  matTooltip="Add Verification Memo" (click)="onAddMemo(\'Verification Memo\')"></i>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>      \r\n</div>\r\n                <div class="form-row inad" *ngIf="currentAsset.isTangible">\r\n                    <div class="col-md-6 col-md-6-cstm22" [ngClass]="(currentAsset.assetIsMaintenanceReqd) ? \'border-box-cstm m-t-5\' : \'\'">\r\n                        <div class="form-row">\r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="assetIsMaintenanceReqd" [(ngModel)]="currentAsset.assetIsMaintenanceReqd" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Maintenance Required \r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <ng-container *ngIf="currentAsset.assetIsMaintenanceReqd">\r\n                                    \x3c!-- <div class="form-group"> --\x3e\r\n                                        <label>Maintenance Frequency <span class="clr-red">*</span></label>\r\n                                        <div class="form-row">\r\n                                            <div class="col-md-6">\r\n                                        <div class="form-row">\r\n                                            <div class="col-md-6">\r\n                                                <div class="form-group">\r\n                                                    <label>Months</label>\r\n                                                    <input type="number" (ngModelChange)="getmemo($event)" class="form-control" name="maintenanceFrequencyMonths" [(ngModel)]="currentAsset.maintenanceFrequencyMonths">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="col-md-6">\r\n                                                <div class="form-group">\r\n                                                    <label>Days</label>\r\n                                                    <input type="number" (ngModelChange)="getmemo($event)" class="form-control" name="maintenanceFrequencyDays" [(ngModel)]="currentAsset.maintenanceFrequencyDays">\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    \x3c!-- </div> --\x3e\r\n                                    <div class="form-group">\r\n                                        <label>Default Vendor</label>\r\n                                        <p-autoComplete field="label"  (ngModelChange)="getmemo($event)" class="pautocomp-cstm" [(ngModel)]="currentAsset.maintenanceDefaultVendorId" name="maintenanceDefaultVendorId" [suggestions]="vendorListFilter" (completeMethod)="filterVendorList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"></p-autoComplete>\r\n                                    </div>\r\n                                    </div>\r\n                                    <div class="col-md-6">\r\n                                    <div class="form-group">\r\n                                        <label>GL Account</label>\r\n                                        <input type="text" class="form-control" name="glAccountName" [(ngModel)]="currentAsset.glAccountName" disabled>\r\n                                    </div>\r\n                                    <div class="form-group memo-popup-cstm">\r\n                                        \x3c!-- <label>Maintenance Memo <i class="fa fa-info-circle fa-lg" (ngModelChange)="getmemo($event)" data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Maintenance Memo" (click)="onAddMemo(\'Maintenance Memo\')"></i></label>\r\n                                        <span >\r\n                                            <div [innerHTML]="currentAsset.maintenanceMemo" class="form-control" class="p_editor_box"></div>\r\n                                        </span> --\x3e\r\n                                        <label>Maintenance Memo</label>\r\n                                        <div class="align_adh">\r\n                                            <div [innerHTML]="currentAsset.maintenanceMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.maintenanceMemo)"\r\n                                                class="p_editor_box" style="width: 100% !important;"></div>\r\n                                            <i class="fa fa-pencil contoel_v"\r\n                                                data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above"  matTooltip="Add Maintenance Memo" (click)="onAddMemo(\'Maintenance Memo\')"></i>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                                </ng-container>\r\n                            </div>\r\n                        </div> \r\n                        <div class="form-row" *ngIf="currentAsset.assetIsMaintenanceReqd" style="margin-top:84px;">\r\n                            <div class="form-group" style="margin-left: 6px;">\r\n                                <label>Documents List \r\n                                    <a class="plusicon-cstm" data-toggle="modal"\r\n                                       data-target="#addDocumentDetails" (ngModelChange)="getmemo($event)"  (click)="addDocumentDetails()" style="margin-left: 3px;">\r\n                                        <i class="fa fa-plus-circle fa-lg" \r\n                                           matTooltip="Create Documents" matTooltipPosition="above"></i>\r\n                                    </a>\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div class="w-100">\r\n                                <h6 class="panel-title alignb" style="padding-left: 6px;">Attachment Details</h6>\r\n                                <div class="checkbox-cstm setDelts" >\r\n                                    <label style="width: auto !important;margin-top: 3px;">\r\n                                     \r\n                                      <input type="checkbox" [(ngModel)]="maitananceeletedList" name="cparent1" id="cparent1"  (click)="getDeleteListByStatus($event.target.checked,1)"\r\n                                        />\r\n                                      <span class="cr"><i class="cr-icon pi pi-check"></i></span> \r\n                                    Show  Deleted List \r\n                                    </label>\r\n                                </div> \r\n                                <p-table #table4 class="rro-table-cstm lastcol-fix ptable-attach"\r\n                                         [columns]="selectedColumnsDoc"\r\n                                         [value]="sourceViewforDocumentList"\r\n                                         [paginator]="true"\r\n                                         [rows]="3"\r\n                                         [rowsPerPageOptions]="[3, 6, 9, 15]" [scrollable]="true" scrollHeight="500px">\r\n                                       \r\n                                    <ng-template pTemplate="colgroup" let-columns>\r\n                                        <colgroup>\r\n                                            <col *ngFor="let col of columns" style="width:100px" />\r\n                                        </colgroup>\r\n                                    </ng-template>\r\n                                    \x3c!-- <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" style="width: 100px;">\r\n                                                {{ col.header }}\r\n                                            </th>\r\n                                            <th style="width: 100px;">Action</th>\r\n                                        </tr>\r\n                                    </ng-template> --\x3e\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                                                [pSortableColumn]="col.field">\r\n                                                {{ col.header }}\r\n                                                <p-sortIcon [field]="col.field">\r\n                                                </p-sortIcon>\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky">Actions</th>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                                \x3c!-- *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'" --\x3e\r\n                                                <input type="text"\r\n                                                       (input)="table4.filter($event.target.value, col.field,\'contains\') "\r\n                                                      \r\n                                                       style="width:100%;" pInputText>\r\n                                                \x3c!-- <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'createdDate\'" name="createdDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableNew($event.target.value, col.field )">\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'updatedDate\'" name="updatedDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableNew($event.target.value, col.field )"> --\x3e\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky"></th>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="body"\r\n                                                 let-rowData\r\n                                                 let-columns="columns"\r\n                                                 let-rowIndex="rowIndex">\r\n                                        <tr [pSelectableRow]="rowData">\r\n                                            <ng-container *ngFor="let col of columns">\r\n                                                <td *ngIf="col.field != \'fileName\' && col.field != \'docMemo\'"\r\n                                                    class="ui-resizable-column"\r\n                                                    pReorderableRowHandle>\r\n                                                    {{\r\n                                                    col.field == \'createdDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                                        : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                                        : rowData[col.field]\r\n                                                    }}\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'fileName\'">\r\n                                                    <a class="filelink" *ngIf="rowData.isFileFromServer == true" (click)="downloadFileUpload(rowData)">\r\n                                                        {{ rowData[col.field] }}\r\n                                                    </a>\r\n                                                    <a *ngIf="rowData.isFileFromServer == false"\r\n                                                       [href]="rowData.link"\r\n                                                       download="{{rowData.fileName}}"\r\n                                                       matTooltip="Download" matTooltipPosition="above"\r\n                                                       class="filelink">\r\n                                                        {{ rowData[col.field] }}\r\n\r\n                                                    </a>\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'docMemo\'">\r\n                                                    <p class="m-0 p-0" [innerHTML]="rowData[col.field]"></p>\r\n                                                </td>\r\n                                            </ng-container>\r\n\r\n                                            <td style="width: 70px;">\r\n                                                <span data-toggle="modal" *ngIf="maitananceeletedList==false"\r\n                                                      data-target="#addDocumentDetails">\r\n                                                    <a class="btn nobg"\r\n                                                       (click)="editCustomerDocument(rowData,rowIndex)" matTooltip="Edit"\r\n                                                       matTooltipPosition="above"><i class="fa fa-pencil"></i></a>\r\n                                                </span>\r\n\r\n                                                <a *ngIf="maitananceeletedList==false" class="btn btn-danger nobg" (click)="deleteAttachmentRow(rowData, rowIndex,deleteContent)"\r\n                                                   matTooltip="Delete" matTooltipPosition="above"> \x3c!--data-target="#delete" data-toggle="modal"--\x3e\r\n                                                    <i class="fa fa-trash"></i>\r\n                                                </a>\r\n                                                <span *ngIf="maitananceeletedList==true"><a class="btn nobg postio_top" (click)="restore(restoreId,rowData,1);"  matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                                <button  [disabled]="!rowData.isFileFromServer && !isEditMode" class="btn-edit set_proper_align set_position"\r\n                                                        mat-icon-button (click)="openHistory(contentAuditHist,rowData)"\r\n                                                        matTooltip="History" matTooltipPosition="above">\r\n                                                    <i class="fa fa-history" \r\n                                                       [ngClass]="{ grayColor: !rowData.isFileFromServer && !isEditMode }"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="emptymessage"\r\n                                                 let-columns\r\n                                                 *ngIf="sourceViewforDocumentList.length == 0">\r\n                                        <tr>\r\n                                            <td [attr.colspan]="10"\r\n                                                style="color: red; font-weight: bold; text-align: left; padding-left: 30% !important;">\r\n                                                No records found\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="summary" id="footer1">\r\n                                        <label id="footer" class="footer">Total:</label>\r\n                                        <input style="width: 5%;" [(ngModel)]="table4._totalRecords" name="mainTotalRecords" disabled\r\n                                               pInputText type="text" />\r\n                                        &nbsp;&nbsp;\r\n                                        <label id="footer" class="footer1">Pages Count:</label>\r\n                                        <input style="width: 5%;" [ngModel]="getPageCount(table4._totalRecords, pageSizeNew)"\r\n                                               name="mainPageCount" disabled pInputText type="text" />\r\n                                    </ng-template>\r\n\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-6 col-md-6-cstm22" [ngClass]="(currentAsset.isWarrantyRequired) ? \'border-box-cstm m-t-5\' : \'\'">\r\n                        <div class="form-row">\r\n                            <div class="col-md-12">\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="warrantyRequired" [(ngModel)]="currentAsset.isWarrantyRequired" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Warranty Required\r\n                                        </label>\r\n                                    </div>\r\n                                </div> \r\n                           \r\n                           \r\n                                <ng-container *ngIf="currentAsset.isWarrantyRequired">\r\n                                    <div class="form-row">\r\n                                        <div class="col-md-6">\r\n\r\n                                            <div class="form-group">\r\n                                                <label>Warranty Company</label>\r\n                                                <input type="text" class="form-control" (ngModelChange)="getmemo($event)" name="warrantyName" [(ngModel)]="currentAsset.warrantyCompany" disabled> \r\n                                                \x3c!-- <select class="form-control" [(ngModel)]="currentAsset.warrantyCompanySelectId" name="warrantyCompanySelectId">\r\n                <option value="0">-- Select --</option>\r\n                <option *ngFor="let item of warrantyCompanySelectList" [ngValue]="item.moduleId">{{item.moduleName}}</option>\r\n            </select> --\x3e\r\n                                            </div>\r\n                                            \x3c!-- <div class="form-group" *ngIf="currentAsset.warrantyCompanySelectId == 2">\r\n            <p-autoComplete field="label" class="pautocomp-cstm" [(ngModel)]="currentAsset.warrantyCompanyId" name="warrantyCompanyId" [suggestions]="vendorListFilter" (completeMethod)="filterVendorList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"></p-autoComplete>\r\n        </div> --\x3e\r\n                                            \x3c!-- <div class="form-group" *ngIf="currentAsset.warrantyCompanySelectId == 4">\r\n            <input type="text" class="form-control" name="warrantyCompanyName" [(ngModel)]="currentAsset.warrantyCompanyName">\r\n        </div> --\x3e\r\n                                            <div class="form-group">\r\n                                                <label>Default Vendor</label>\r\n                                                <p-autoComplete field="label" (ngModelChange)="getmemo($event)" class="pautocomp-cstm" [(ngModel)]="currentAsset.warrantyDefaultVendorId" name="warrantyDefaultVendorId" [suggestions]="vendorListFilter" (completeMethod)="filterVendorList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"></p-autoComplete>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>\r\n                                                    Warranty GL Account\r\n                                                    \x3c!-- <span class="clr-red">*</span> --\x3e\r\n                                                </label>\r\n                                                <input type="text" class="form-control" name="warrantyGlAccountName" [(ngModel)]="currentAsset.warrantyGlAccountName" disabled>\r\n                                            </div>\r\n\r\n                                            <div class="form-group memo-popup-cstm">\r\n                                                \x3c!-- <label>Warranty Memo <i class="fa fa-info-circle fa-lg" (ngModelChange)="getmemo($event)" data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Warranty Memo" (click)="onAddMemo(\'Warranty Memo\')"></i></label>\r\n                                                <span matTooltipPosition="above" matTooltip="Warranty Memo">\r\n                                                    <div [innerHTML]="currentAsset.warrantyMemo" class="form-control" class="p_editor_box"></div>\r\n                                                </span> --\x3e\r\n                                                <label>Warranty Memo </label>\r\n                                                <div class="align_adh">\r\n                                                    <div [innerHTML]="currentAsset.warrantyMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentAsset.warrantyMemo)"\r\n                                                        class="p_editor_box" style="width: 100% !important;"></div>\r\n                                                    <i class="fa fa-pencil contoel_v"\r\n                                                        data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above"  matTooltip="Add Warranty Memo" (click)="onAddMemo(\'Warranty Memo\')"></i>\r\n                                                </div>\r\n                                            </div>\r\n                                            </div>\r\n                                         <div class="col-md-6">\r\n                                                <div class="form-group">\r\n                                                    <label>Warranty Start Date  <span *ngIf="currentAsset.isWarrantyRequired==true" class="clr-red">*</span></label>\r\n                                                    <p-calendar [showIcon]="true" \r\n                                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [required]="currentAsset.isWarrantyRequired==true" (ngModelChange)="getmemo($event)" [minDate]="todaysDate" [maxDate]="currentAsset.warrantyEndDate" name="warrantyStartDate" [(ngModel)]="currentAsset.warrantyStartDate"></p-calendar>\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Warranty End Date  <span *ngIf="currentAsset.isWarrantyRequired==true" class="clr-red">*</span></label>\r\n                                                    <p-calendar [showIcon]="true" [required]="currentAsset.isWarrantyRequired==true" \r\n                                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" (ngModelChange)="getmemo($event)" [minDate]="currentAsset.warrantyStartDate ? currentAsset.warrantyStartDate :todaysDate" name="warrantyEndDate" [(ngModel)]="currentAsset.warrantyEndDate" (onSelect)="onChangeWarrantyEndDate()"></p-calendar>\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Warranty Status</label>\r\n                                                    <select class="form-control" [(ngModel)]="currentAsset.warrantyStatusId" name="warrantyStatusId" disabled>\r\n                                                        <option value="0">-- Select --</option>\r\n                                                        <option *ngFor="let item of allWarrantyStatusList" [ngValue]="item.value">{{item.label}}</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                </ng-container>\r\n                            </div>\r\n                           \r\n                        </div>\r\n                        <div class="form-row" *ngIf="currentAsset.isWarrantyRequired">\r\n                            <div class="form-group" style="margin-left: 6px;margin-top: 10px;">\r\n                                <label>\r\n                                    Documents List\r\n                                    <a class="plusicon-cstm" data-toggle="modal"\r\n                                       data-target="#addDocumentDetailsWarranty" (click)="addDocumentDetails()" style="margin-left: 3px;">\r\n                                        <i class="fa fa-plus-circle fa-lg"\r\n                                           matTooltip="Create Documents" matTooltipPosition="above"></i>\r\n                                    </a>\r\n                                </label>\r\n                            </div>\r\n                            <div class="w-100">\r\n                                <h6 class="panel-title alignb" style="padding-left: 6px;">Attachment Details</h6>\r\n                                <div class="checkbox-cstm setDelts" >\r\n                                    <label style="width: auto !important;margin-top: 3px;">\r\n                                     \r\n                                      <input type="checkbox" [(ngModel)]="warrentyDeletedList" name="cparent2" id="cparent2"  (click)="getDeleteListByStatus($event.target.checked,2)"\r\n                                        />\r\n                                      <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                    Show  Deleted List \r\n                                    </label>\r\n                                </div> \r\n                                <p-table #table5 class="rro-table-cstm lastcol-fix ptable-attach"\r\n                                         [columns]="selectedColumnsDoc"\r\n                                         [value]="sourceViewforDocumentListWarranty"\r\n                                         [paginator]="true"\r\n                                         [rows]="3"\r\n                                         [rowsPerPageOptions]="[3, 6, 9, 15]" [scrollable]="true" scrollHeight="500px">\r\n                                       \r\n                                    <ng-template pTemplate="colgroup" let-columns>\r\n                                        <colgroup>\r\n                                            <col *ngFor="let col of columns" style="width:100px" />\r\n                                        </colgroup>\r\n                                    </ng-template>\r\n                                    \x3c!-- <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" style="width: 100px;">\r\n                                                {{ col.header }}\r\n                                            </th>\r\n                                            <th style="width: 100px;">Action</th>\r\n                                        </tr>\r\n\r\n                                    </ng-template> --\x3e\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                                                [pSortableColumn]="col.field">\r\n                                                {{ col.header }}\r\n                                                <p-sortIcon [field]="col.field">\r\n                                                </p-sortIcon>\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky">Actions</th>\r\n\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                                \x3c!-- *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'" --\x3e\r\n                                                <input type="text"\r\n                                                       (input)="table5.filter($event.target.value, col.field,\'contains\') "\r\n                                                       \r\n                                                       style="width:100%;" pInputText>\r\n                                                \x3c!-- <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'createdDate\'" name="createdDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableWarranty($event.target.value, col.field )">\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'updatedDate\'" name="updatedDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableWarranty($event.target.value, col.field )"> --\x3e\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky"></th>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="body"\r\n                                                 let-rowData\r\n                                                 let-columns="columns"\r\n                                                 let-rowIndex="rowIndex">\r\n                                        <tr [pSelectableRow]="rowData">\r\n                                            <ng-container *ngFor="let col of columns">\r\n                                                <td *ngIf="col.field != \'fileName\' && col.field != \'docMemo\'"\r\n                                                    class="ui-resizable-column"\r\n                                                    pReorderableRowHandle>\r\n                                                    {{\r\n                                                    col.field == \'createdDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                                        : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                                        : rowData[col.field]\r\n                                                    }}\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'fileName\'">\r\n                                                    <a class="filelink" *ngIf="rowData.isFileFromServer == true" (click)="downloadFileUpload(rowData)">\r\n                                                        {{ rowData[col.field] }}\r\n                                                    </a>\r\n                                                    <a *ngIf="rowData.isFileFromServer == false"\r\n                                                       [href]="rowData.link"\r\n                                                       download="{{rowData.fileName}}"\r\n                                                       matTooltip="Download" matTooltipPosition="above"\r\n                                                       class="filelink">\r\n                                                        {{ rowData[col.field] }}\r\n\r\n                                                    </a>\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'docMemo\'">\r\n                                                    <p class="m-0 p-0" [innerHTML]="rowData[col.field]"></p>\r\n                                                </td>\r\n                                            </ng-container>\r\n\r\n                                            <td style="width: 70px;">\r\n                                                <span data-toggle="modal"  *ngIf="warrentyDeletedList==false"\r\n                                                      data-target="#addDocumentDetailsWarranty">\r\n                                                    <a class="btn nobg"\r\n                                                       (click)="editCustomerDocumentWarranty(rowData,rowIndex)" matTooltip="Edit"\r\n                                                       matTooltipPosition="above"><i class="fa fa-pencil"></i></a>\r\n                                                </span>\r\n\r\n                                                <a *ngIf="warrentyDeletedList==false" class="btn btn-danger nobg" (click)="deleteAttachmentRowWarranty(rowData, rowIndex,deleteContentWarranty)" matTooltip="Delete" matTooltipPosition="above">\r\n                                                    <i class="fa fa-trash"></i>\r\n                                                </a>\r\n                                                <span *ngIf="warrentyDeletedList==true"><a class="btn nobg postio_top" (click)="restore(restoreId,rowData,2);"  matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                                <button [disabled]="!rowData.isFileFromServer && !isEditMode" class="btn-edit set_proper_align set_position"\r\n                                                        mat-icon-button (click)="openHistory(contentAuditHist,rowData)"\r\n                                                        matTooltip="History" matTooltipPosition="above">\r\n                                                    <i class="fa fa-history" \r\n                                                       [ngClass]="{ grayColor: !rowData.isFileFromServer && !isEditMode }"></i>\r\n                                                </button>\r\n\r\n\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    </ng-template>\r\n                                    \x3c!-- *ngIf="sourceViewforDocumentListWarranty.length == 0" --\x3e\r\n                                    <ng-template pTemplate="emptymessage"\r\n                                                 let-columns\r\n                                                 >\r\n                                        <tr>\r\n                                            <td [attr.colspan]="10"\r\n                                            style="color: red; font-weight: bold; text-align: left; padding-left: 30% !important;">\r\n                                                No records found\r\n                                            </td>\r\n                                           \r\n                                        </tr>\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="summary" id="footer1" >\r\n                                        <label id="footer" class="footer">Total:</label>\r\n                                        <input style="width: 5%;" [(ngModel)]="table5._totalRecords" name="warrTotalRecords" disabled\r\n                                               pInputText type="text" />\r\n                                        &nbsp;&nbsp;\r\n                                        <label id="footer" class="footer1">Pages Count:</label>\r\n                                        <input style="width: 5%;" [ngModel]="getPageCount(table5._totalRecords, pageSizeNew)"\r\n                                               name="warrPageCount" disabled pInputText type="text" />\r\n                                    </ng-template>\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-row" *ngIf="currentAsset.isIntangible">\r\n                    <div class="col-md-12">\r\n                        <div class="form-row">\r\n                            <div class="form-group" style="margin-left: 6px;">\r\n                                <label>Documents List \r\n                                    <a class="plusicon-cstm" data-toggle="modal"\r\n                                       data-target="#addDocumentDetailsIntangible" (ngModelChange)="getmemo($event)" (click)="addDocumentDetails()" style="margin-left: 3px;">\r\n                                        <i class="fa fa-plus-circle fa-lg"\r\n                                           matTooltip="Create Documents" matTooltipPosition="above"></i>\r\n                                    </a>\r\n                                </label>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <h6 class="panel-title alignb" style="padding-left: 6px;">Attachment Details</h6>\r\n                                <div class="checkbox-cstm setDelts">\r\n                                    <label style="width: auto !important;margin-top: 3px;">\r\n                                     \r\n                                      <input type="checkbox" [(ngModel)]="intangibleDeletedList" name="cparent3" id="cparent3"  (click)="getDeleteListByStatus($event.target.checked,3)"\r\n                                        />\r\n                                      <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                    Show  Deleted List \r\n                                    </label>\r\n                                </div> \r\n                                <p-table #intUpload class="rpo-table-cstm lastcol-fix ptable-attach"\r\n                                         [columns]="selectedColumnsDoc"\r\n                                         [value]="sourceViewforDocumentListInt"\r\n                                         [paginator]="true"\r\n                                         [rows]="3"\r\n                                         [rowsPerPageOptions]="[3, 6, 9, 15]">\r\n                                     \r\n                                    \x3c!-- <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" style="width: 100px;">\r\n                                                {{ col.header }}\r\n                                            </th>\r\n                                            <th style="width: 100px;">Action</th>\r\n                                        </tr>\r\n\r\n                                    </ng-template> --\x3e\r\n                                    <ng-template pTemplate="header" let-columns>\r\n                                        <tr>\r\n                                            <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                                                [pSortableColumn]="col.field">\r\n                                                {{ col.header }}\r\n                                                <p-sortIcon [field]="col.field">\r\n                                                </p-sortIcon>\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky">Actions</th>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                                \x3c!-- *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'" --\x3e\r\n                                                <input type="text"\r\n                                                       (input)="intUpload.filter($event.target.value, col.field,\'contains\') "\r\n                                                     \r\n                                                       style="width:100%;" pInputText>\r\n                                                \x3c!-- <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'createdDate\'" name="createdDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableInt($event.target.value, col.field )">\r\n                                                <input type="date" class="hidePlaceHolder"\r\n                                                       *ngIf="col.field == \'updatedDate\'" name="updatedDate"\r\n                                                       style="width:100%;"\r\n                                                       (change)="dateFilterForTableInt($event.target.value, col.field )"> --\x3e\r\n                                            </th>\r\n                                            <th style="width:70px;position:sticky"></th>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="body"\r\n                                                 let-rowData\r\n                                                 let-columns="columns"\r\n                                                 let-rowIndex="rowIndex">\r\n                                        <tr [pSelectableRow]="rowData">\r\n                                            <ng-container *ngFor="let col of columns">\r\n                                                <td *ngIf="col.field != \'fileName\' && col.field != \'docMemo\'"\r\n                                                    class="ui-resizable-column"\r\n                                                    pReorderableRowHandle>\r\n                                                    {{\r\n                                                    col.field == \'createdDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                                        : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                        ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                                        : rowData[col.field]\r\n                                                    }}\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'fileName\'">\r\n                                                    <a class="filelink" *ngIf="rowData.isFileFromServer == true" (click)="downloadFileUpload(rowData)">\r\n                                                        {{ rowData[col.field] }}\r\n                                                    </a>\r\n                                                    <a *ngIf="rowData.isFileFromServer == false"\r\n                                                       [href]="rowData.link"\r\n                                                       download="{{rowData.fileName}}"\r\n                                                       matTooltip="Download" matTooltipPosition="above"\r\n                                                       class="filelink">\r\n                                                        {{ rowData[col.field] }}\r\n\r\n                                                    </a>\r\n                                                </td>\r\n                                                <td *ngIf="col.field == \'docMemo\'">\r\n                                                    <p class="m-0 p-0" [innerHTML]="rowData[col.field]"></p>\r\n                                                </td>\r\n                                            </ng-container>\r\n\r\n                                            <td style="width: 70px;">\r\n                                                <span data-toggle="modal" *ngIf="intangibleDeletedList==false"\r\n                                                      data-target="#addDocumentDetailsIntangible">\r\n                                                    <a  class="btn nobg"\r\n                                                       (click)="editCustomerDocumentInt(rowData,rowIndex)" matTooltip="Edit"\r\n                                                       matTooltipPosition="above"><i class="fa fa-pencil"></i></a>\r\n                                                </span>\r\n\r\n                                                <a *ngIf="intangibleDeletedList==false" class="btn btn-danger nobg" (click)="deleteAttachmentRowInt(rowData, rowIndex,deleteDocInt)"\r\n                                                   matTooltip="Delete" matTooltipPosition="above"> \x3c!--data-target="#delete" data-toggle="modal"--\x3e\r\n                                                    <i class="fa fa-trash"></i>\r\n                                                </a>\r\n                                                <span *ngIf="intangibleDeletedList==true"><a class="btn nobg postio_top" (click)="restore(restoreId,rowData,3);"  matTooltip="Restore Record"  matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                                                <button [disabled]="!rowData.isFileFromServer && !isEditMode" class="btn-edit set_proper_align set_position"\r\n                                                        mat-icon-button (click)="openHistory(contentAuditHist,rowData)"\r\n                                                        matTooltip="History" matTooltipPosition="above">\r\n                                                    <i class="fa fa-history" \r\n                                                       [ngClass]="{ grayColor: !rowData.isFileFromServer && !isEditMode }"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                    </ng-template>\r\n                                    <ng-template pTemplate="emptymessage"\r\n                                                 let-columns\r\n                                                 *ngIf="sourceViewforDocumentListInt.length == 0">\r\n                                        <tr>\r\n                                            <td [attr.colspan]="10"\r\n                                                style="color: red; font-weight: bold; text-align: center;padding-left: 30% !important;">\r\n                                                No records found\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    </ng-template>\r\n\r\n                                    <ng-template pTemplate="summary" id="footer1">\r\n                                        <label id="footer" class="footer">Total:</label>\r\n                                        <input style="width: 5%;" [(ngModel)]="intUpload._totalRecords" name="intTotalRecords" disabled\r\n                                               pInputText type="text" />\r\n                                        &nbsp;&nbsp;\r\n                                        <label id="footer" class="footer1">Pages Count:</label>\r\n                                        <input style="width: 5%;" [ngModel]="getPageCount(intUpload._totalRecords, pageSizeNew)"\r\n                                               name="intPageCount" disabled pInputText type="text" />\r\n                                    </ng-template>\r\n\r\n                                </p-table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="form-row pull-right"> \r\n                   \r\n                    <button type="submit" class="btn btn-primary" style="margin-bottom: 20px;margin-right: 20px;" (click)="onSaveAssetInventory()" [disabled]="!generalForm.valid || disableSaveForEdit">{{isEditMode ? \'Update\' : \'Save\'}}</button>\r\n                    <button\r\n                                            \r\n                    type="submit" class="btn btn-primary pull-right submit-btn add_newAd" \r\n                    (click)="addNew()" *ngIf="isEditMode==true">\r\n                   Add New\r\n                </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    </div>\r\n\x3c!-- </div> --\x3e\r\n\r\n<div class="modal fade" id="capesData" role="dialog">\r\n    <div class="modal-dialog modal-xl">\r\n      <div class="modal-content">\r\n        <div class="modal-header">\r\n          <button type="button" class="close"  (click)="closeCpes()" data-dismiss="modal">&times;</button>\r\n          <h4 class="modal-title">Capes </h4>\r\n        </div>\r\n        <div class="modal-body"> \r\n            <app-asset-capes  *ngIf="openCapesModel" [isView]="true" [viewassetRecordId]="assetRecordIdForCapes"></app-asset-capes>\r\n        </div>\r\n        <div class="modal-footer">\r\n          <button type="button" (click)="closeCpes()" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n        </div>\r\n      </div>      \r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade"\r\n     id="addDocumentDetails"\r\n     role="dialog"\r\n     data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button"\r\n                        class="close"\r\n                        (click)="closeMyModel(\'#addDocumentDetails\')">\r\n                    &times;\r\n                </button>\r\n                <h4 class="modal-title">Add Document Details</h4> \r\n            </div>\r\n            <form #addDocumentForm="ngForm" class="form-horizontal">\r\n                <div class="modal-body">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Name <span class="clr-red">*</span></label>\r\n                                <input class="form-control"\r\n                                       type="text"\r\n                                       name="name" (ngModelChange)="getmemoInfo($event)"\r\n                                       [(ngModel)]="documentInformation.docName"\r\n                                       required />\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Description </label>\r\n                                <textarea class="form-control"\r\n                                          name="description"  (ngModelChange)="getmemoInfo($event)"\r\n                                          [(ngModel)]="documentInformation.docDescription"\r\n                                          ></textarea>\r\n                            </div>\r\n                            \x3c!-- <div class="form-group">\r\n                                <label>Memo </label>\r\n                                <textarea class="form-control"\r\n                                          name="memo"\r\n                                          [(ngModel)]="documentInformation.docMemo"></textarea>\r\n                            </div> --\x3e\r\n                            <div class="form-group memo-popup-cstm">\r\n                                \x3c!-- <label style="float: none">Memo <i class="fa fa-info-circle fa-lg"  data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddMemo(\'Document Memo\')"></i></label>\r\n                                <span >\r\n                                    <div [innerHTML]="documentInformation.docMemo" class="form-control" class="p_editor_box"></div></span> --\x3e\r\n                                    <label>Memo</label>\r\n                                    <div class="align_adh">\r\n                                        <div [innerHTML]="documentInformation.docMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(documentInformation.docMemo)"\r\n                                            class="p_editor_box" style="width: 100% !important;"></div>\r\n                                        <i class="fa fa-pencil contoel_v"\r\n                                            (ngModelChange)="getmemo($event)"\r\n                                            data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddMemo(\'Document Memo\')"></i>\r\n                                    </div>\r\n                           \r\n                                </div>\r\n                        </div>\r\n\r\n                        <div class="col-md-12">\r\n                            <div class="form-group">\r\n                                <label style="float: none;">Attachments <span class="clr-red">*</span></label>\r\n                                <p-fileUpload #fileUploadInput\r\n                                              name="fileupload[]"\r\n                                              multiple="multiple"\r\n                                              [showCancelButton]="false"\r\n                                              [showUploadButton]="false"\r\n                                              customUpload="true"\r\n                                              (onSelect)="fileUpload($event)"\r\n                                              (onRemove)="removeFileMain($event)"></p-fileUpload>\r\n                            </div>\r\n                        </div>\r\n                        <div class="table-responsive table-overflow"\r\n                             *ngIf="isEditButton">\r\n                            <h6 class="panel-title" style="padding-left: 10px;">\r\n                                Attachment Details:\r\n                            </h6>\r\n\r\n                            <table class="table-responsive ptable-cus-pma" style="padding-left: 10px;">\r\n                                <tr>\r\n                                    <th>File Name</th>\r\n                                    <th>Download</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{{sourceViewforDocument.fileName}}</td>\r\n                                    <td style="text-align: center;">\r\n                                        <a *ngIf="sourceViewforDocument.attachmentDetailId > 0" (click)="downloadFileUpload(sourceViewforDocument)"\r\n                                           matTooltip="Download" matTooltipPosition="above"\r\n                                           class="btn nobg btn-cstm">\r\n                                            <span><i class="fa fa-download"></i></span>\r\n                                        </a>\r\n                                        <a *ngIf="sourceViewforDocument.attachmentDetailId==0"\r\n                                           [href]="sourceViewforDocument.link"\r\n                                           download="{{sourceViewforDocument.fileName}}"\r\n                                           matTooltip="Download" matTooltipPosition="above"\r\n                                           class="filelink">\r\n                                            <span><i class="fa fa-download"></i></span>\r\n\r\n                                        </a>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            </table>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button"\r\n                            *ngIf="!isEditButton"\r\n                            class="btn btn-primary pull-right submit-btn"\r\n                            style="text-align:center" (ngModelChange)="getmemo($event)"\r\n                            (click)="addDocumentInformation(\'#addDocumentDetails\',documentInformation)"\r\n                            [disabled]="!addDocumentForm.valid ||  !disableFileAttachmentSubmit">\r\n                        Add \r\n                    </button>\r\n                    <button type="button"\r\n                            *ngIf="isEditButton"\r\n                            class="btn btn-primary pull-right submit-btn"\r\n                            style="text-align:center" (ngModelChange)="getmemo($event)"\r\n                            (click)="addDocumentInformation(\'#addDocumentDetails\',documentInformation)"\r\n                            [disabled]="!addDocumentForm.valid ||  disleUpdate">\r\n                        Update \r\n                    </button>\r\n                    <button type="button"\r\n                            class="btn btn-danger"\r\n                            (click)="dismissDocumentPopupModelNew(\'#addDocumentDetails\'); closeMyModel(\'#addDocumentDetails\')">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #deleteContent\r\n             let-c="close"\r\n             let-d="dismiss"\r\n             data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button"\r\n                class="close"\r\n                aria-label="Close"\r\n                (click)="dismissModelNew()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-body">\r\n      \r\n        <div class="form-row" >\r\n            <div class="col-md-4" style="margin-right: 0px !important;">\r\n                <label class="fs12">  Document Name: </label>\r\n                <span class="new-label"> {{selectedRowForDelete.docName}}</span>\r\n            </div>\r\n            <div class="col-md-8" style="margin-right: 0px !important;">\r\n                <label class="fs12">File Name  : </label>\r\n                <span class="new-label"> {{selectedRowForDelete.fileName}}</span>\r\n\r\n            </div>\r\n            </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button"\r\n        class="btn btn-primary"\r\n                (click)="deleteItemAndCloseModelNew()">\r\n            Yes\r\n        </button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModelNew()">\r\n            No\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #contentAuditHist\r\n             let-c="close"\r\n             let-d="dismiss"\r\n             style="width:auto"\r\n             data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">History of  Documents</h4>\r\n        <button type="button"\r\n                class="close"\r\n                aria-label="Close"\r\n                (click)="dismissModelNew()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="table-responsive">\r\n            <table class="table table-bordered">\r\n                <thead>\r\n                    <tr>\r\n                        <th> Name</th>\r\n                        <th>Description</th>\r\n                        <th>Memo</th>\r\n                        <th>File Name</th>\r\n                        <th>File Size</th>\r\n                        <th>Is Active</th>\r\n                        <th>Is Deleted</th>\r\n                        <th>Created Date</th>\r\n                        <th>Created By</th>\r\n                        <th>Updated Date</th>\r\n                        <th>Updated By</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor="let audit of sourceViewforDocumentAudit"></tr>\r\n                    <tr *ngFor="let audit of sourceViewforDocumentAudit; let i = index">\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistory(i, \'docName\', audit.docName)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                            {{ audit.docName }}\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistory(\r\n                  i,\r\n                  \'docDescription\',\r\n                  audit.docDescription\r\n                )\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                            {{ audit.docDescription }}\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistory(i, \'docMemo\', audit.docMemo)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n              <p class="m-0 p-0" [innerHTML]="audit.docMemo"></p>\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                color: getColorCodeForHistory(i, \'fileName\', audit.fileName)\r\n                  ? \'black\'\r\n                  : \'red\'\r\n              }">\r\n                            {{ audit.fileName }}\r\n                        </td>\r\n                        <td>{{ audit.fileSize }}</td>\r\n                        <td>\r\n                            <input type="checkbox" disabled [checked]="audit.isActive == true"\r\n                            style="margin: 0px auto; display: block;" />  \r\n                        </td>\r\n                        <td>\r\n                            <input type="checkbox" disabled [checked]="audit.isDeleted == true"\r\n                            style="margin: 0px auto; display: block;" />  \r\n                        </td>\r\n                        <td>{{ audit.createdDate | date: \'MM/dd-yyyy\' }}</td>\r\n                        <td>{{ audit.createdBy }}</td>\r\n                        <td>{{ audit.updatedDate | date: \'MM/dd/yyyy\' }}</td>\r\n                        <td>{{ audit.updatedBy }}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModelNew()">\r\n            Close\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n\r\n<div class="modal fade"\r\n     id="addDocumentDetailsWarranty"\r\n     role="dialog"\r\n     data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button"\r\n                        class="close"\r\n                        (click)="closeMyModel(\'#addDocumentDetailsWarranty\')">\r\n                    &times;\r\n                </button>\r\n                <h4 class="modal-title">Add Document Details</h4>\r\n            </div>\r\n            <form #addDocumentFormWarranty="ngForm" class="form-horizontal">\r\n                <div class="modal-body">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Name <span class="clr-red">*</span></label>\r\n                                <input class="form-control"\r\n                                       type="text"\r\n                                       name="name"  (ngModelChange)="getmemoInfo($event)"\r\n                                       [(ngModel)]="documentInformation.docName"\r\n                                       required />\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Description </label>\r\n                                <textarea class="form-control"  (ngModelChange)="getmemoInfo($event)"\r\n                                          name="description"\r\n                                          [(ngModel)]="documentInformation.docDescription"\r\n                                          ></textarea>\r\n                            </div>\r\n                            \x3c!-- <div class="form-group">\r\n                                <label>Memo </label>\r\n                                <textarea class="form-control"\r\n                                          name="memo"\r\n                                          [(ngModel)]="documentInformation.docMemo"></textarea>\r\n                            </div> --\x3e\r\n                            <div class="form-group memo-popup-cstm">\r\n                                \x3c!-- <label style="float: none">Memo <i class="fa fa-info-circle fa-lg" (ngModelChange)="getmemo($event)" data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddMemo(\'Document Memo\')"></i></label>\r\n                                <span >\r\n                                    <div [innerHTML]="documentInformation.docMemo" class="form-control" class="p_editor_box"></div></span> --\x3e\r\n                                    <label>Memo</label>\r\n                                    <div class="align_adh">\r\n                                        <div [innerHTML]="documentInformation.docMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(documentInformation.docMemo)"\r\n                                            class="p_editor_box" style="width: 100% !important;"></div>\r\n                                        <i class="fa fa-pencil contoel_v"\r\n                                            (ngModelChange)="getmemo($event)"\r\n                                            data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddMemo(\'Document Memo\')"></i>\r\n                                    </div>\r\n                         \r\n                                </div>\r\n                        </div>\r\n\r\n                        <div class="col-md-12">\r\n                            <div class="form-group">\r\n                                <label style="float: none;">Attachments <span class="clr-red">*</span></label>\r\n                                <p-fileUpload #fileUploadInputWarranty\r\n                                              name="fileuploadWarranty[]"\r\n                                              multiple="multiple"\r\n                                              [showCancelButton]="false"\r\n                                              [showUploadButton]="false"\r\n                                              customUpload="true"\r\n                                              (onSelect)="fileUploadWarranty($event)"\r\n                                              (onRemove)="removeFileWarr($event)"></p-fileUpload>\r\n                            </div> \r\n                        </div>\r\n                        <div class="table-responsive table-overflow"\r\n                             *ngIf="isEditButton">\r\n                            <h6 class="panel-title" style="padding-left: 10px;">\r\n                                Attachment Details:\r\n                            </h6>\r\n\r\n                            <table class="table-responsive ptable-cus-pma" style="padding-left: 10px;">\r\n                                <tr>\r\n                                    <th>File Name</th>\r\n                                    <th>Download</th> \r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{{sourceViewforDocumentWarranty.fileName}}</td>\r\n                                    <td style="text-align: center;">\r\n                                        <a *ngIf="sourceViewforDocumentWarranty.attachmentDetailId > 0" (click)="downloadFileUpload(sourceViewforDocumentWarranty)"\r\n                                           matTooltip="Download" matTooltipPosition="above"\r\n                                           class="btn nobg btn-cstm">\r\n                                            <span><i class="fa fa-download"></i></span>\r\n                                        </a>\r\n                                        <a *ngIf="sourceViewforDocumentWarranty.attachmentDetailId==0"\r\n                                           [href]="sourceViewforDocumentWarranty.link"\r\n                                           download="{{sourceViewforDocument.fileName}}"\r\n                                           matTooltip="Download" matTooltipPosition="above"\r\n                                           class="filelink">\r\n                                            <span><i class="fa fa-download"></i></span>\r\n\r\n                                        </a>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            </table>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button"\r\n                            *ngIf="!isEditButton"\r\n                            class="btn btn-primary pull-right submit-btn"\r\n                            style="text-align:center" (ngModelChange)="getmemo($event)"\r\n                            (click)="addDocumentInformationWarranty(\'#addDocumentDetailsWarranty\',documentInformation)"\r\n                            [disabled]="!addDocumentFormWarranty.valid ||  disableFileAttachmentSubmitWarranty">\r\n                        Add \r\n                    </button>\r\n                    <button type="button"\r\n                            *ngIf="isEditButton"\r\n                            class="btn btn-primary pull-right submit-btn"\r\n                            style="text-align:center" (ngModelChange)="getmemo($event)"\r\n                            (click)="addDocumentInformationWarranty(\'#addDocumentDetailsWarranty\',documentInformation)"\r\n                            [disabled]="!addDocumentFormWarranty.valid ||  disleUpdate">\r\n                        Update\r\n                    </button>\r\n                    <button type="button"\r\n                            class="btn btn-danger"\r\n                            (click)="dismissDocumentPopupModelNew(\'#addDocumentDetailsWarranty\'); closeMyModel(\'#addDocumentDetailsWarranty\')">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #deleteContentWarranty\r\n             let-c="close"\r\n             let-d="dismiss"\r\n             data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button"\r\n                class="close"\r\n                aria-label="Close"\r\n                (click)="dismissModelNew()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-body">\r\n\r\n        <div class="form-row" >\r\n            <div class="col-md-4" style="margin-right: 0px !important;">\r\n                <label class="fs12">  Document Name: </label>\r\n                <span class="new-label"> {{selectedRowForDeleteWarranty.docName}}</span>\r\n            </div>\r\n            <div class="col-md-8" style="margin-right: 0px !important;">\r\n                <label class="fs12">File Name  : </label>\r\n                <span class="new-label"> {{selectedRowForDeleteWarranty.fileName}}</span>\r\n\r\n            </div>\r\n            </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button"\r\n        class="btn btn-primary"\r\n                (click)="deleteItemAndCloseModelWarranty()">\r\n            Yes\r\n        </button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModelNew()">\r\n            No\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n\r\n<div class="modal fade"\r\n     id="addDocumentDetailsIntangible"\r\n     role="dialog"\r\n     data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button"\r\n                        class="close"\r\n                        (click)="closeMyModel(\'#addDocumentDetailsIntangible\')">\r\n                    &times;\r\n                </button>\r\n                <h4 class="modal-title">Add Document Details</h4>\r\n            </div>\r\n            <form #addDocumentForm="ngForm" class="form-horizontal">\r\n                <div class="modal-body">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Name <span class="clr-red">*</span></label>\r\n                                <input class="form-control"\r\n                                       type="text" (ngModelChange)="getmemoInfo($event)"\r\n                                       name="name"\r\n                                       [(ngModel)]="documentInformation.docName"\r\n                                       required />\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Description </label>\r\n                                <textarea class="form-control" (ngModelChange)="getmemoInfo($event)"\r\n                                          name="description"\r\n                                          [(ngModel)]="documentInformation.docDescription"\r\n                                          ></textarea>\r\n                            </div>\r\n                            \x3c!-- <div class="form-group">\r\n                                <label>Memo </label>\r\n                                <textarea class="form-control"\r\n                                          name="memo"\r\n                                          [(ngModel)]="documentInformation.docMemo"></textarea>\r\n                            </div> --\x3e\r\n                            <div class="form-group memo-popup-cstm">\r\n                                \x3c!-- <label style="float: none">Memo <i class="fa fa-info-circle fa-lg" (ngModelChange)="getmemo($event)" data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddMemo(\'Document Memo\')"></i></label>\r\n                                <span >\r\n                                    <div [innerHTML]="documentInformation.docMemo" class="form-control" class="p_editor_box"></div></span> --\x3e\r\n                                    <label>Memo</label>\r\n                                    <div class="align_adh">\r\n                                        <div [innerHTML]="documentInformation.docMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(documentInformation.docMemo)"\r\n                                            class="p_editor_box" style="width: 100% !important;"></div>\r\n                                        <i class="fa fa-pencil contoel_v"\r\n                                            (ngModelChange)="getmemo($event)"\r\n                                            data-toggle="modal" data-target="#cpo-memo" matTooltipPosition="above" matTooltip="Add Memo" (click)="onAddMemo(\'Document Memo\')"></i>\r\n                                    </div>\r\n                                </div>\r\n                        </div>\r\n\r\n                        <div class="col-md-12">\r\n                            <div class="form-group">\r\n                                <label style="float: none;">Attachments <span class="clr-red">*</span></label>\r\n                                <p-fileUpload #fileUploadInputInt\r\n                                              name="fileuploadInt[]"\r\n                                              multiple="multiple"\r\n                                              [showCancelButton]="false"\r\n                                              [showUploadButton]="false"\r\n                                              customUpload="true"\r\n                                              (onSelect)="fileUploadInt($event)"\r\n                                              (onRemove)="removeFileInt($event)"></p-fileUpload>\r\n                            </div>\r\n                        </div>\r\n                        <div class="table-responsive table-overflow"\r\n                             *ngIf="isEditButton">\r\n                            <h6 class="panel-title" style="padding-left: 10px;">\r\n                                Attachment Details:\r\n                            </h6>\r\n\r\n                            <table class="table-responsive ptable-cus-pma" style="padding-left: 10px;">\r\n                                <tr>\r\n                                    <th>File Name</th>\r\n                                    <th>Download</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{{sourceViewforDocumentInt.fileName}}</td>\r\n                                    <td style="text-align: center;">\r\n                                        <a *ngIf="sourceViewforDocumentInt.attachmentDetailId > 0" (click)="downloadFileUpload(sourceViewforDocumentInt)"\r\n                                           matTooltip="Download" matTooltipPosition="above"\r\n                                           class="btn nobg btn-cstm">\r\n                                            <span><i class="fa fa-download"></i></span>\r\n                                        </a>\r\n                                        <a *ngIf="sourceViewforDocumentInt.attachmentDetailId==0"\r\n                                           [href]="sourceViewforDocumentInt.link"\r\n                                           download="{{sourceViewforDocumentInt.fileName}}"\r\n                                           matTooltip="Download" matTooltipPosition="above"\r\n                                           class="filelink">\r\n                                            <span><i class="fa fa-download"></i></span>\r\n\r\n                                        </a>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            </table>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button"\r\n                            *ngIf="!isEditButton"\r\n                            class="btn btn-primary pull-right submit-btn"\r\n                            style="text-align:center" (ngModelChange)="getmemo($event)"\r\n                            (click)="addDocumentInformationInt(\'#addDocumentDetailsIntangible\',documentInformation)"\r\n                            [disabled]="!addDocumentForm.valid ||  disableFileAttachmentSubmitInt">\r\n                        Add \r\n                    </button>\r\n                    <button type="button"\r\n                            *ngIf="isEditButton"\r\n                            class="btn btn-primary pull-right submit-btn"\r\n                            style="text-align:center" (ngModelChange)="getmemo($event)"\r\n                            (click)="addDocumentInformationInt(\'#addDocumentDetailsIntangible\',documentInformation)"\r\n                            [disabled]="!addDocumentForm.valid || disleUpdate">\r\n                        Update \r\n                    </button>\r\n                    <button type="button"\r\n                            class="btn btn-danger"\r\n                            (click)="dismissDocumentPopupModelNew(\'#addDocumentDetailsIntangible\'); closeMyModel(\'#addDocumentDetailsIntangible\')">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #deleteDocInt\r\n             let-c="close"\r\n             let-d="dismiss"\r\n             data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button"\r\n                class="close"\r\n                aria-label="Close"\r\n                (click)="dismissModelNew()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-body">\r\n        <div class="form-row" >\r\n            <div class="col-md-4" style="margin-right: 0px !important;">\r\n                <label class="fs12">  Document Name: </label>\r\n                <span class="new-label"> {{selectedRowForDeleteInt.docName}}</span>\r\n            </div>\r\n            <div class="col-md-8" style="margin-right: 0px !important;">\r\n                <label class="fs12">File Name  : </label>\r\n                <span class="new-label"> {{selectedRowForDeleteInt.fileName}}</span>\r\n\r\n            </div>\r\n            </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button"\r\n        class="btn btn-primary"\r\n                (click)="deleteItemAndCloseModelInt()">\r\n            Yes\r\n        </button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModelNew()">\r\n            No\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n\r\n<div class="modal fade" id="cpo-memo" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Edit {{ memoLabel }}</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                        <th style="color: #fff;">{{ memoLabel }}</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <p-editor [(ngModel)]="headerMemo" (ngModelChange)="editorgetmemo($event)" [style]="{\'height\':\'320px\'}" name="headerMemo" required></p-editor>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody> \r\n                </table>\r\n                <div style="float:right">\r\n                    <button type="button" class="btn btn-primary" style="margin-top: 10px;"\r\n                    data-dismiss="modal" (click)="onSaveMemo()" (ngModelChange)="getmemo($event)" [disabled]="disableEditor">Save</button>\r\n                    <button type="button" class="btn btn-danger" style="margin-top: 10px;"\r\n                     data-dismiss="modal">Close</button>\r\n               </div> \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #restoreId let-c="close" let-d="dismiss" data-backdrop="static">\r\n    \r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n  \r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        \x3c!-- <strong>\r\n            Asset Name:\r\n            <span class="new-label">{{restorerecord.docName}}</span>\r\n        </strong> --\x3e\r\n        <div class="form-row" >\r\n            <div class="col-md-4" style="margin-right: 0px !important;">\r\n                <label class="fs12">  Document Name: </label>\r\n                <span class="new-label"> {{restorerecord.docName}}</span>\r\n            </div>\r\n            <div class="col-md-8" style="margin-right: 0px !important;">\r\n                <label class="fs12">File Name  : </label>\r\n                <span class="new-label"> {{restorerecord.fileName}}</span>\r\n\r\n            </div>\r\n            </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-primary" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n  </ng-template> '},LvS0:function(e,t,n){"use strict";n.r(t),t.default=""},P7yI:function(e,t,n){"use strict";n.r(t),t.default='<div class="x_content">\r\n    <p-breadcrumb [model]="breadcrumbs" [home]="home"></p-breadcrumb>\r\n<div class="card new-card">\r\n    <div class="card-header bg-primary">\r\n        <div class="row">\r\n            <div class="col">\r\n                <h4 class="new-card-heading">\r\n                   {{ assetService.isEditMode == true ? \'Edit\'  : \'Create\'}} Asset</h4>\r\n            </div>\r\n            <div>\r\n                <button type="button" class="btn-sm new-btn-primary"\r\n                    [routerLink]="[\'/assetmodule/assetpages/app-asset-listing\']">\r\n                    Asset List\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="card-body new-card-body">\r\n        <div class="md-stepper-horizontal orange new-stepper-align">\r\n            <div class="md-step" *ngIf="active0" [ngClass]="{ active: activeIndex >= 0 , editable : activeIndex === 0}"\r\n                (click)="changeOfTab(\'General\')">\r\n                <div class="md-step-circle"><span>1</span></div>\r\n                <div class="md-step-title">General Information</div>\r\n                <div class="md-step-bar-left"></div>\r\n                <div class="md-step-bar-right"></div>\r\n            </div>\r\n            <div class="md-step" *ngIf="active1" [ngClass]="{ active: activeIndex >= 1, editable : activeIndex === 1 }"\r\n                (click)="changeOfTab(\'Capes\')">\r\n                <div class="md-step-circle"><span>2</span></div>\r\n                <div class="md-step-title">Capes</div>\r\n                <div class="md-step-bar-left"></div>\r\n                <div class="md-step-bar-right"></div>\r\n            </div>\r\n            <div class="md-step" *ngIf="active2" [ngClass]="{ active: activeIndex >= 2 , editable : activeIndex === 2 }"\r\n                (click)="changeOfTab(\'Calibration\')">\r\n                <div class="md-step-circle"><span>3</span></div>\r\n                <div class="md-step-title">Calibration</div>\r\n                <div class="md-step-bar-left"></div>\r\n                <div class="md-step-bar-right"></div>\r\n            </div>\r\n            <div class="md-step" *ngIf="active3" [ngClass]="{ active: activeIndex >= 3 , editable : activeIndex === 3 }"\r\n                (click)="changeOfTab(\'Maintenance\')">\r\n                <div class="md-step-circle"><span>4</span></div>\r\n                <div class="md-step-title">Maintenance & Warranty</div>\r\n                <div class="md-step-bar-left"></div>\r\n                <div class="md-step-bar-right"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<form #generalForm="ngForm" #formData="ngForm" method="post" id="" name="" class="form-horizontal add-custustomer">\r\n    <div class="form-row">\r\n        <div class="col-md-12">\r\n            <div class="card new-card">\r\n                <div class="card-header bg-primary">\r\n                    <h4 class="new-card-heading"> General Information</h4>\r\n                </div>\r\n                <div class="card-body">\r\n                    <div class="col-md-12">\r\n                        <div class="col-md-4">\r\n                            <label class="radio-inline" [ngClass]="{ pointerEv: isEditMode==true}">\r\n                                <input type="radio" value="1" name="assetRadio" class="form-check-inline"\r\n                                    [checked]="currentAsset.isTangible == true" [disabled]="isEditMode==true"\r\n                                    (change)="onDepreciable(\'html\')">\r\n                                Tangible\r\n                            </label>\r\n                            <label class="radio-inline" [ngClass]="{ pointerEv: isEditMode==true}">\r\n                                <input type="radio" value="2" name="assetRadio" (change)="onIntangible(\'html\')" [disabled]="isEditMode==true"\r\n                                    [checked]="currentAsset.isIntangible == true">\r\n                                Intangible\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-md-4" *ngIf="currentAsset && currentAsset.isTangible == true">\r\n                            <label class="radio-inline" [ngClass]="{ pointerEv: isEditMode==true}">\r\n                                <input type="radio" value="1" name="assetisDepreciable" [disabled]="isEditMode==true"\r\n                                    [checked]="currentAsset.isdepreciable == true" class="form-check-inline"\r\n                                    (change)="onIsDepreciable()">\r\n                                Depreciable\r\n                            </label>\r\n                            <label class="radio-inline" [ngClass]="{ pointerEv: isEditMode==true}">\r\n                                <input type="radio" value="2" name="assetisDepreciable" [disabled]="isEditMode==true"\r\n                                    [checked]="currentAsset.isNonDepreciable == true" (change)="onIsNonDepreciable()">\r\n                                Non-Depreciable\r\n                            </label>\r\n                        </div>\r\n                        <div class="col-md-4" *ngIf="currentAsset && currentAsset.isIntangible == true">\r\n                            <label class="radio-inline" [ngClass]="{ pointerEv: isEditMode==true}">\r\n                                <input type="radio" value="1" name="assetisAmortizable" class="form-check-inline" [disabled]="isEditMode==true"\r\n                                    (change)="onIsAmortizable()" [checked]="currentAsset.isAmortizable == true">\r\n                                Amortizable\r\n                            </label>\r\n                            <label class="radio-inline" [ngClass]="{ pointerEv: isEditMode==true}">\r\n                                <input type="radio" value="2" name="assetisAmortizable" (change)="onIsNonAmortizable()" [disabled]="isEditMode==true"\r\n                                    [checked]="currentAsset.isNonAmortizable == true">\r\n                                Non-Amortizable\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-12">\r\n                        <div class="form-row">\r\n                            <div class="col-sm-4">\r\n                                <div class="form-group">\r\n                                    <label>Entry Date</label>\r\n                                    <p-calendar [showIcon]="true" [ngModelOptions]="{standalone: true}"\r\n                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                        [maxDate]="currentDate" (ngModelChange)="getmemo($event)"\r\n                                        [(ngModel)]="currentAsset.entryDate"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group"> \r\n                                    <label>Asset Id <span class="clr-red">*</span></label>\r\n                                    <p-autoComplete field="label" class="pautocomp-cstm" (ngModelChange)="getmemo($event)" (onKeyUp)=assetIdHandler($event)\r\n                                    (onSelect)="onAssetIdselection($event)"  [(ngModel)]="currentAsset.assetId" name="assetIdl"\r\n                                     [suggestions]="localCollection" (completeMethod)="filterAssetId($event)" [size]="30" [minLength]="1"\r\n                                      [dropdown]="true" errorMessage="Records not found"  required></p-autoComplete>\r\n           \r\n                                   <div *ngIf="showExistMsg" class="clr-red">Already Exists</div>\r\n                              \r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Asset Name <span class="clr-red">*</span></label>\r\n                                    <input type="text"  (ngModelChange)="getmemo($event)"\r\n                                        [ngModelOptions]="{standalone: true}" required [(ngModel)]="currentAsset.name">\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Asset Description</label>\r\n                                    <textarea class="text-item" style="height: 50px !important;resize: none"\r\n                                        [ngModelOptions]="{standalone: true}" (ngModelChange)="getmemo($event)"\r\n                                        [(ngModel)]="currentAsset.description"></textarea>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Alternate Asset ID</label>\r\n                                    <p-autoComplete (ngModelChange)="getmemo($event)" class="p-autoComplete-ctsm"\r\n                                        field="assetId" name="Inspe" [dropdown]="true" errorMessage="Records not found"\r\n                                        [suggestions]="localCollectionExcAlter" emptyMessage="No Records Found" (onSelect)="onAssetParentAlt($event,1)"\r\n                                        (completeMethod)="filterExcAltAssetId($event)" [size]="30" [minLength]="1"\r\n                                        [forceSelection]="true" [(ngModel)]="currentAsset.alternateAssetRecordId"\r\n                                        #prellRevInsp3="ngModel" (onClear)="onClearAltId()">\r\n                                    </p-autoComplete>\r\n                                    <div *ngIf="showExistMsgForAsset" class="clr-red">Asset Parent and Alternate Asset can\'t be same</div>\r\n                                </div>\r\n                                <div>\r\n                                    <div class="card" style="margin-top: 20px;">\r\n                                        <div class="card-header" style="padding: 10px 12px;">\r\n                                            <h5 style="margin-bottom: 0; font-size: 12px;">\r\n                                                Management Structure<span class="clr-red">*</span>\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                            <div class="form-group">\r\n                                                <p-dropdown  [showClear]="true" class="p-dropdown-100"  (onChange)="selectedLegalEntity(currentAsset.companyId);" required  (ngModelChange)="getmemo($event)"  [options]="maincompanylist" filter="true" [(ngModel)]="currentAsset.companyId" name="companyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <p-dropdown  [showClear]="true" class="p-dropdown-100" (onChange)="selectedBusinessUnit(currentAsset.buisinessUnitId)"  (ngModelChange)="getmemo($event)"  [options]="bulist" filter="true" [(ngModel)]="currentAsset.buisinessUnitId" name="buisinessUnitId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <p-dropdown  [showClear]="true" class="p-dropdown-100"  (onChange)="selectedDivision(currentAsset.divisionId)" (ngModelChange)="getmemo($event)"  [options]="divisionlist" filter="true" [(ngModel)]="currentAsset.divisionId" name="divisionId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <p-dropdown  [showClear]="true" class="p-dropdown-100"  (onChange)="selectedDepartment(currentAsset.departmentId )"  (ngModelChange)="getmemo($event)"  [options]="departmentList" filter="true" [(ngModel)]="currentAsset.departmentId" name="departmentId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-4">\r\n                                <div *ngIf="currentAsset && currentAsset.isTangible " class="depreciation-block">\r\n                                    <div class="form-group">\r\n                                        <label>\r\n                                            Acquisition Type <span class="clr-red">*</span> <span\r\n                                                style="margin-left:3px;cursor:pointer;">\r\n                                            </span>\r\n                                        </label>\r\n                                    \r\n                                        <p-dropdown  [showClear]="true" class="p-dropdown-100"  (ngModelChange)="getmemo($event)" (input)="onFilterAcqution($event.target.value)" required [options]="AssetAcquisitionTypeList" filter="true" [(ngModel)]="currentAsset.assetAcquisitionTypeId" name="assetAcquisitionTypeId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        <label>\r\n                                            Manufacturer\r\n                                        </label>\r\n                                     \r\n                                        <p-dropdown  [showClear]="true" class="p-dropdown-100" (input)="onFilterManufacturer($event.target.value)"  (ngModelChange)="getmemo($event)"  [options]="allManufacturerInfo" filter="true" [(ngModel)]="currentAsset.manufacturerId" name="manufacturerId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        <label>Manufactured Date</label>\r\n                                        <p-calendar [showIcon]="true" [ngModelOptions]="{standalone: true}"\r\n                                            (ngModelChange)="getmemo($event)" [maxDate]="currentDate"\r\n                                            [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                            [(ngModel)]="currentAsset.manufacturedDate"></p-calendar>\r\n                                    </div> \r\n                                    <div class="form-group">\r\n                                        <label>Expiration Date</label>\r\n                                       <p-calendar [showIcon]="true" (ngModelChange)="getmemo($event)"\r\n                                            [ngModelOptions]="{standalone: true}" [minDate]="currentDate"\r\n                                            [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                            [(ngModel)]="currentAsset.expirationDate"\r\n                                            [disabled]="!currentAsset.manufacturedDate"></p-calendar>\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        <label>Model Number</label>\r\n                                        <input class="form-control" type="text" (ngModelChange)="getmemo($event)"\r\n                                            [ngModelOptions]="{standalone: true}" (keypress)="omit_special_char($event)" [(ngModel)]="currentAsset.model">\r\n                                    </div>\r\n                                    <div class="form-group">\r\n                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                            <label>\r\n                                                <input type="checkbox" [ngModelOptions]="{standalone: true}"\r\n                                                    (ngModelChange)="getmemo($event)"\r\n                                                    [(ngModel)]="currentAsset.isSerialized">\r\n                                                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                Serialized?\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div class="depreciation-block" *ngIf="currentAsset && currentAsset.isTangible  ">\r\n                                    \r\n                                        <div class="form-group">\r\n                                            <label>UOM <span class="clr-red">*</span></label>\r\n                                         \r\n                                            <p-dropdown  [showClear]="true" class="p-dropdown-100" (input)="onFilterUom($event.target.value)" (ngModelChange)="getmemo($event)" required [options]="allUnitOfMeasureinfo" filter="true" [(ngModel)]="currentAsset.unitOfMeasureId" name="unitOfMeasureId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                        </div>\r\n                                        <div class="form-group ">\r\n                                            <label>Currency<span class="clr-red">*</span></label>\r\n                                         \r\n                                            <p-dropdown  [showClear]="true" class="p-dropdown-100"  (input)="onFilterCurrency($event.target.value)" (ngModelChange)="getmemo($event)" required [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentAsset.currencyId" name="currencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Unit Cost</label>\r\n                                            <input class="form-control text-right" type="text" (ngModelChange)="getmemo($event)"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                (change)="formatToGlobal(currentAsset)"\r\n                                                [(ngModel)]="currentAsset.unitCost" >\r\n                                        </div>\r\n                                        \r\n                                        <div class="form-group">\r\n                                            <label>\r\n                                                Asset Location <span style="margin-left:3px;cursor:pointer;">\r\n                                                </span>\r\n                                            </label>\r\n                                         \r\n                                            <p-dropdown  [showClear]="true" class="p-dropdown-100"  (input)="onFilterLocation($event.target.value)" (ngModelChange)="getmemo($event)"  [options]="allAssetLocations" filter="true" [(ngModel)]="currentAsset.assetLocationId" name="assetLocationId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                        </div>\r\n                                        <div class="form-group memo-popup-cstm mat_emo">\r\n                                            <label>\r\n                                                Memo\r\n                                            </label>\r\n                                            <div class="align_adh">\r\n                                                <div [innerHTML]="currentAsset.memo" class="text_editor_box"  [matTooltip]="parsedText(currentAsset.memo)"\r\n                                                    style="width: 100% !important;"></div>\r\n                                                <i class="fa  fa fa-pencil contoel_v" data-toggle="modal"   matTooltipPosition="above"\r\n                                                    data-target="#textarea-popup" matTooltip="Memo"\r\n                                                    matTooltipPosition="above"\r\n                                                    (click)="onAddTextAreaInfo(currentAsset)"></i> \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class="card" style="margin-top: 20px;"\r\n                                    *ngIf="currentAsset && currentAsset.isIntangible">\r\n                                    <div>\r\n                                        <div *ngIf="currentAsset && currentAsset.isIntangible" class="intangible-block">\r\n\r\n                                            <div class="card-header" style="padding: 10px 12px;">\r\n                                                <div class="form-group">\r\n                                                    <label>Intangible Class <span class="clr-red">*</span></label>\r\n                                                   \r\n                                                    <p-dropdown  [showClear]="true" class="p-dropdown-100" (input)="onFilterIntangible($event.target.value)" (onChange)="showItemEdit(currentAsset.assetIntangibleTypeId)"  (ngModelChange)="getmemo($event)" required [options]="allIntangibleInfo" filter="true" [(ngModel)]="currentAsset.assetIntangibleTypeId" name="assetIntangibleTypeId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="clear"></div>\r\n                                        </div>\r\n                                        <div *ngIf="currentAsset && currentAsset.isIntangible"\r\n                                            class="intangible-block block-bg2">\r\n                                            <div class="form-group">\r\n                                            </div>\r\n                                            <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                                <div class="form-group">\r\n                                                    <label>Depreciation Method </label>\r\n                                                    <input disabled class="form-control" type="text"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedIntangibleAssetType.amortizationMethod">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Intangible Life  </label>\r\n                                                    <input disabled class="form-control amount" type="text"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedIntangibleAssetType.intangibleLife"> \r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Amort Frequency</label>\r\n                                                    <input disabled class="form-control" type="text"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedIntangibleAssetType.amortFrequency"\r\n                                                        [ngModelOptions]="{standalone: true}">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Amort Expense GL Account</label>\r\n                                                    <input disabled class="form-control" type="text"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedIntangibleAssetType.amortExpenseGL">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Acc Amort Depr GL Account</label>\r\n                                                    <input disabled class="form-control" type="text"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedIntangibleAssetType.accAmortDeprGL">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Intangible GL Account</label>\r\n                                                    <input disabled class="form-control" type="text"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedIntangibleAssetType.intangibleGL">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Intangible Write Off GL Account </label>  \r\n                                                    <input disabled class="form-control" type="text"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedIntangibleAssetType.intangibleWriteOffGL"> \r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Intangible Write Down GL Account</label>\r\n                                                    <input disabled class="form-control" type="text"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedIntangibleAssetType.intangibleWriteDownGL">\r\n                                                </div>\r\n                                               \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="clear"></div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-sm-4" *ngIf="currentAsset && currentAsset.isTangible ">\r\n                                <div class="form-group">\r\n                                    <label>Asset Parent</label>\r\n                                    <p-autoComplete (ngModelChange)="getmemo($event)" class="p-autoComplete-ctsm"\r\n                                        field="assetId" name="assetId" [dropdown]="true"\r\n                                        errorMessage="Records not found" [suggestions]="localCollectionExcParent"\r\n                                        emptyMessage="No Records Found" [forceSelection]="true"  (onSelect)="onAssetParentAlt($event,2)"\r\n                                        (completeMethod)="filterExcParentAssetId($event)" [size]="30" [minLength]="1"\r\n                                        (onKeyUp)=assetIdHandler($event) [(ngModel)]="currentAsset.assetParentRecordId"\r\n                                        #pre1llRevInsp3="ngModel" (onClear)="onClearParentId()">\r\n                                    </p-autoComplete>\r\n                                    <div *ngIf="showExistMsgForAssetParent" class="clr-red">Asset Parent and Alternate Asset can\'t be same</div>\r\n                                </div>\r\n                                <div>\r\n                                    <div class="card" style="margin-top: 20px;">\r\n                                        <div class="card-header" style="padding: 10px 12px;">\r\n                                            <div class="form-group">\r\n                                                <label>Asset Class/Attribute <span class="clr-red">*</span></label>\r\n                                    \r\n                                                <p-dropdown  [showClear]="true" class="p-dropdown-100" (input)="onFilterTangible($event)" (onChange)="showItemEdit(currentAsset.tangibleClassId)"  (ngModelChange)="getmemo($event)" required [options]="allAssetTypeInfo" filter="true" [(ngModel)]="currentAsset.tangibleClassId" name="tangibleClassId" [resetFilterOnHide]="true" placeholder="Select"></p-dropdown>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="depreciation-asset-block block-bg1">\r\n                                            <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                                <div class="form-group">\r\n                                                    <label>Depreciation Method</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.depreciationMethodName">\r\n                                                </div>\r\n                                                <div class="form-group"> \r\n                                                    <label>Residual %</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.residualPercentage">\r\n                                                </div>\r\n                                                 <div class="form-group">\r\n                                                    <label>Asset Life</label>\r\n                                                    <input class="form-control amount" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.assetLife">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Depr Frequency</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.deprFrequency">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Acquired GL Account</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.acquiredGL">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Depr Expense GL Account</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.deprExpenseGL">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Accum Depr GL Account</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.adDeprGL">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Sale GL Account</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.saleGL">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Write Off GL Account</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.writeOffGL">\r\n                                                </div>\r\n                                                <div class="form-group">\r\n                                                    <label>Write Down GL Account</label>\r\n                                                    <input class="form-control" type="text" disabled=""\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentSelectedAssetAttributeType.writeDownGL">\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="clear"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-12" style="margin-bottom: 20px;padding-right: 16px;">\r\n                    <div class="margintop">\r\n                        <button\r\n                        *ngIf="currentAsset && currentAsset.isTangible != true && isEditMode==true"          \r\n                        type="submit" class="btn btn-primary pull-right submit-btn"\r\n                        (click)="addNew()">\r\n                       Add New\r\n                    </button> \r\n                        <button type="button" [disabled]="!allowNextTab"\r\n                            *ngIf="currentAsset && currentAsset.isTangible == true"\r\n                            class="btn btn-primary pull-right submit-btn" (click)="nextClick(\'Next\')">Next</button>\r\n                       \r\n                            <button type="submit" class="btn btn-primary pull-right submit-btn" *ngIf="isEditMode==false && currentAsset.isTangible"\r\n                            [disabled]="!currentAsset.assetId || !currentAsset.name || !currentAsset.assetAcquisitionTypeId || !currentAsset.tangibleClassId || !currentAsset.unitOfMeasureId || !currentAsset.currencyId || !currentAsset.companyId || showExistMsg || showExistMsgForAsset ||  showExistMsgForAssetParent" (click)="saveAsset()">\r\n                            Save\r\n                        </button>\r\n                        <button type="submit" class="btn btn-primary pull-right submit-btn" *ngIf="isEditMode==false && !currentAsset.isTangible"\r\n                        [disabled]=" !currentAsset.assetId || !currentAsset.name  || !currentAsset.assetIntangibleTypeId || showExistMsg" (click)="saveAsset()">\r\n                        Save\r\n                    </button>\r\n                        <button type="submit" class="btn btn-primary pull-right submit-btn" *ngIf="isEditMode==true && currentAsset.isTangible"\r\n                            [disabled]="!currentAsset.assetId || !currentAsset.name || !currentAsset.assetAcquisitionTypeId || !currentAsset.tangibleClassId || !currentAsset.unitOfMeasureId || !currentAsset.currencyId || !currentAsset.companyId || !generalForm.valid || disableSaveForEdit || showExistMsg || showExistMsgForAsset ||  showExistMsgForAssetParent" (click)="saveAsset()">\r\n                           Update\r\n                         </button>\r\n                         <button type="submit" class="btn btn-primary pull-right submit-btn" *ngIf="isEditMode==true && !currentAsset.isTangible"\r\n                         [disabled]=" !currentAsset.assetId || !currentAsset.name  || !currentAsset.assetIntangibleTypeId || !currentAsset.companyId || !generalForm.valid || disableSaveForEdit || showExistMsg || showExistMsgForAsset ||  showExistMsgForAssetParent" (click)="saveAsset()">\r\n                        Update\r\n                      </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</form>\r\n<ng-template #tabRedirectConfirmationModal let-c="close" let-d="dismiss">\r\n    <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">&times;</button>\r\n        <h4 class="modal-title">Confirmation</h4>\r\n    </div>\r\n    <div class="modal-body">\r\n        <h6 >\r\n            Do you want to Save changes and Continue ?\r\n        </h6>\r\n    </div>\r\n    <div class="modal-footer">\r\n\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="dismissModelRedirect()">No</button>\r\n        <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="redirectToTab()">Yes</button>\r\n    </div>\r\n</ng-template>\r\n<div class="modal fade" id="textarea-popup" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm" style="max-width: 500px !important;">\r\n       \r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" (click)="onCloseTextAreaInfo()">&times;</button>\r\n                <h4 class="modal-title">Edit Memo</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                        <th style="color: #fff;">Memo</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <p-editor [(ngModel)]="textAreaInfo" (ngModelChange)="editorgetmemo($event)" [style]="{\'height\':\'320px\'}" name="textAreaInfo" required></p-editor>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody> \r\n                </table>\r\n                <div style="float:right;margin-top: 15px;">\r\n                    <button type="button" class="btn btn-primary" (ngModelChange)="getmemo($event)" (click)="onSaveTextAreaInfo(textAreaInfo)" [disabled]="disableEditor">Save</button>\r\n                    <button type="button" class="btn btn-danger" (click)="onCloseTextAreaInfo()">Close</button>\r\n               </div> \r\n            </div>\r\n        </div>        \r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerEnable">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},PNNn:function(e,t,n){"use strict";n.r(t),t.default="label {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: 400;\n}\n\n.span-header-red {\n  color: red;\n  font-weight: bold;\n}\n\ninput[type=text],\ninput[type=number],\ninput[type=email],\nselect,\ntextarea {\n  height: 24px !important;\n  width: 100% !important;\n  border-radius: 5px !important;\n}\n\n.cal_cds {\n  padding: 12px 20px;\n  margin-bottom: 19px;\n  border-bottom: 1px solid #f3e9e9;\n}\n\n.po-head {\n  font-weight: 700;\n  font-size: 16px !important;\n  color: #295d92 !important;\n}\n\n.fa-plus-circle.fa-lg {\n  color: green !important;\n}\n\n.rro-table-cstm .ui-table {\n  padding-bottom: 100px !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}\n\n.btn-tbl-file-download {\n  line-height: 7px !important;\n  width: 85px !important;\n  height: 19px;\n  border: 0;\n  color: #ffffff !important;\n  background: #337ab7;\n}"},Q6uY:function(e,t,n){"use strict";n.r(t),t.default='\x3c!--<div style="border: 1px solid red">assetmanagement Component</div>--\x3e\r\n\r\n\x3c!--<p-breadcrumb [model]="items" [home]="home"></p-breadcrumb>--\x3e\r\n\x3c!--<app-asset-steps></app-asset-steps>--\x3e\r\n<router-outlet></router-outlet>'},UW3U:function(e,t,n){"use strict";n.r(t),t.default='<div class="bg-white">\r\n\t\x3c!-- <div class="card">\r\n\t\t<div class="card-header">\r\n            <nav aria-label="breadcrumb">\r\n                <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n                    <li class="breadcrumb-item active" aria-current="page">Asset Adjustment</li>\r\n                </ol>\r\n            </nav>\r\n\t\t</div> --\x3e\r\n\t\t<div class="card new-card">\r\n            <div class="card-header bg-primary new-card-header">\r\n              <div class="row">\r\n                <div class="col">\r\n                  <h4 class="new-card-heading">Asset Adjustment</h4>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    type="button"\r\n                    class="btn-sm new-btn-primary"\r\n                    [routerLink]="[\'/assetmodule/assetpages/app-asset-inventory-listing\']"\r\n                  >\r\n                    Asset Inventory List\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class="card-body new-card-body">\r\n\t\t\t<form #assetAdjForm="ngForm">\r\n\t\t\t\t<div class="form-row">\r\n\t\t\t\t\t<div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">Asset ID:</b> {{assetAdjustmentSetup.assetId}}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">Asset Description:</b> {{assetAdjustmentSetup.description}}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">Alt Asset ID:</b> {{assetAdjustmentSetup.alternateAssetId}}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">In Service Date:</b> {{assetAdjustmentSetup.expirationDate | date: \'MM/dd/yyyy\'}}</span>\r\n                    </div>\r\n                    <div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">Updated Cost:</b> {{assetAdjustmentSetup.unitCost}}</span>\r\n                    </div>\r\n                    <div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">Existing Book Value:</b> {{assetAdjustmentSetup.unitCost}}</span>\r\n\t\t\t\t\t</div>\r\n                </div>\r\n                <div class="form-row" style="margin-top: 8px;">\r\n                    <div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">Serial Num:</b> {{assetAdjustmentSetup.serialNo}}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">Control Num:</b> </span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="col-md-2">\r\n\t\t\t\t\t\t<span><b class="clr-red">Asset Life:</b> {{assetAdjustmentSetup.assetLife}}</span>\r\n\t\t\t\t\t</div>\r\n                </div>\r\n\t\t\t\t<div class="table-responsive mtop10" id="smovement">\r\n\t\t\t\t\t<table class="table table-bordered">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t\t<th>Field Name</th>\r\n\t\t\t\t\t\t\t\t<th>Existing Value</th>\r\n\t\t\t\t\t\t\t\t<th>New Value</th>\r\n\t\t\t\t\t\t\t\t<th>Adjustment Reason</th>\r\n\t\t\t\t\t\t\t\t<th>Memo</th>\r\n\t\t\t\t\t\t\t\t<th>Documents</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<ng-container *ngFor="let item of assetAdjustmentData">\r\n\t\t\t\t\t\t\t\t<ng-container *ngIf="item.adjustmentDataTypeId == 1">\r\n\t\t\t\t\t\t\t\t\t\x3c!-- <tr>\r\n\t\t\t\t\t\t\t\t\t\t<td colspan="7" class="text-center bg-blue" style="color: #fff;"><strong>Organization</strong></td>\r\n\t\t\t\t\t\t\t\t\t</tr> --\x3e\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="isCompanyEnable" [(ngModel)]="companyAllow" (change)="isCompanyEnable(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <td>Management Structure</td> --\x3e\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.assetInventoryAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t{{existingMgmentStuc.level1 ? existingMgmentStuc.level1 : \'\'}}\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="showCompany" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" name="companyId" [(ngModel)]="managementStructure.companyId" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(change)="selectedLegalEntity(managementStructure.companyId, item);" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">Select Legal Entity</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of legalEntityList" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td rowspan="4" style="vertical-align: top;">\r\n                                            \x3c!-- <textarea *ngIf="companyAllow || businessAllow || divisionAllow || deptAllow" class="form-control" [(ngModel)]="item.adjustmentReason" name="MgmtStructureReason" required></textarea> --\x3e\r\n                                            <div *ngIf="companyAllow || businessAllow || divisionAllow || deptAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" name="mgmtStructureAdjReason" [(ngModel)]="item.adjustmentReasonId" (change)="onChangeMgmtStrucAdjReason(item.adjustmentReasonId)" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of allAdjReasonInfo" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td rowspan="4" style="vertical-align: top;">\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="companyAllow || businessAllow || divisionAllow || deptAllow" class="form-control" [(ngModel)]="item.adjustmentMemo" name="ManagementStructureMemo"></textarea>\r\n                                        </td>\r\n                                        <td rowspan="4"></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="isBusinessEnable" [(ngModel)]="businessAllow" [disabled]="!existingMgmentStuc.level2 || companyAllow" (change)="isBusinessEnable(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t{{existingMgmentStuc.level2 ? existingMgmentStuc.level2 : \'\'}}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="showBusiness" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" [(ngModel)]="managementStructure.buId" name="buId" (change)="selectedBusinessUnit(managementStructure.buId, item)">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of businessUnitList" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                        </td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="isDivisionEnable" [(ngModel)]="divisionAllow" [disabled]="!existingMgmentStuc.level3 || businessAllow" (change)="isDivisionEnable(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t{{existingMgmentStuc.level3 ? existingMgmentStuc.level3 : \'\'}}\t\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="showDivision" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" [(ngModel)]="managementStructure.divisionId" name="divisionId" (change)="selectedDivision(managementStructure.divisionId, item)">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of divisionList" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                        </td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="isDeptEnable" [(ngModel)]="deptAllow" [disabled]="!existingMgmentStuc.level4 || divisionAllow" (change)="isDeptEnable(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t{{existingMgmentStuc.level4 ? existingMgmentStuc.level4 : \'\'}}\t\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="showDepartment" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" [(ngModel)]="managementStructure.departmentId" name="departmentId" (change)="selectedDepartment(managementStructure.departmentId, item)">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of departmentList" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n                                        </td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n                                </ng-container>\r\n\r\n                                <ng-container *ngIf="item.adjustmentDataTypeId == 2">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.assetInventoryAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n                                </ng-container>\r\n\r\n                                <ng-container *ngIf="item.adjustmentDataTypeId == 3">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="usefulLifeAllow" [(ngModel)]="usefulLifeAllow" (change)="onChangeUsefulLife(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.assetInventoryAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{assetAdjustmentSetup.assetLife ? assetAdjustmentSetup.assetLife : \'\'}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="usefulLifeAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type="number" class="form-control" name="usefulLife" [(ngModel)]="item.afterValue" required />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n                                        <td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="usefulLifeAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" name="usefulLifeAdjustmentReason" [(ngModel)]="item.adjustmentReasonId" (change)="onChangeUsefulLifeAdjReason(item.adjustmentReasonId)" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of allAdjReasonInfo" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="usefulLifeAllow" class="form-control" [(ngModel)]="item.adjustmentMemo" name="usefulLifeAdjustmentMemo"></textarea>\r\n                                        </td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n                                </ng-container>\r\n                                \r\n                                <ng-container *ngIf="item.adjustmentDataTypeId == 4">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="assetIdAllow" [(ngModel)]="assetIdAllow" (change)="onChangeAssetId(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.assetInventoryAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{assetAdjustmentSetup.assetId ? assetAdjustmentSetup.assetId : \'\'}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="assetIdAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p-autoComplete field="label" class="pautocomp-cstm" [(ngModel)]="item.afterValue" name="assetId" [suggestions]="assetListFilter" (completeMethod)="filterAssetList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true" required></p-autoComplete>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n                                        <td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="assetIdAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" name="assetIdAdjustmentReason" [(ngModel)]="item.adjustmentReasonId" (change)="onChangeAssetIdAdjReason(item.adjustmentReasonId)" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of allAdjReasonInfo" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="assetIdAllow" class="form-control" [(ngModel)]="item.adjustmentMemo" name="assetIdAdjustmentMemo"></textarea>\r\n                                        </td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n                                </ng-container>\r\n                                \r\n                                <ng-container *ngIf="item.adjustmentDataTypeId == 5">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="locationAllow" [(ngModel)]="locationAllow" (change)="onChangeLocation(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.assetInventoryAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{assetAdjustmentSetup.asset_LocationName ? assetAdjustmentSetup.asset_LocationName : \'\'}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n                                            <div *ngIf="locationAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select [(ngModel)]="item.afterValue" name="location" (change)="onChangeLocationSelect(item.afterValue)" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let itemType of allLocationList" [ngValue]="itemType.assetLocationId">{{itemType.name}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n                                        <td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="locationAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" name="locationAdjustmentReason" [(ngModel)]="item.adjustmentReasonId" (change)="onChangeLocationAdjReason(item.adjustmentReasonId)" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of allAdjReasonInfo" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="locationAllow" class="form-control" [(ngModel)]="item.adjustmentMemo" name="locationAdjustmentMemo"></textarea>\r\n                                        </td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n                                </ng-container>\t\r\n                                \r\n                                <ng-container *ngIf="item.adjustmentDataTypeId == 6">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.assetInventoryAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n                                </ng-container>\r\n\r\n                                <ng-container *ngIf="item.adjustmentDataTypeId == 7">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.assetInventoryAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n                                        <td></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n                                </ng-container>\r\n\t\t\t\t\t\t\t</ng-container>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t<br>\r\n\t\t\t\t<button class="btn btn-primary pull-right" (click)="onSaveAssetAdj()" [disabled]="!assetAdjForm.valid || disableLevel1 || disableLevel2 || disableLevel3 || disableLevel4 || disableMgmtStrucAdj || disableUsefulLifeAdj || disableAssetIdAdj || disableLocation || disableLocationAdj">Save</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>\r\n\r\n\x3c!-- <form #generalForm="ngForm" method="post" id="" name="" class="form-horizontal add-custustomer">\r\n        <div class="form-row">\r\n            \r\n            <div class="col-md-12">\r\n    \r\n                <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="col-md-2">\r\n                            <label class="fs12">Asset ID : </label>\r\n                            <span class="span-header-red"> {{local?.assetId}}</span>\r\n                        </div>\r\n                        <div class="col-md-2">\r\n                                <label class="fs12">Asset Description : </label>\r\n                                <span class="span-header-red"> {{local?.description}}</span>\r\n                                \r\n                        </div>\r\n                        <div class="col-md-2">\r\n                            <label class="fs12">Alt Asset ID : </label>\r\n                            <span class="span-header-red"> {{local?.alternateAssetId}}</span>\r\n                        </div>\r\n                        <div class="col-md-2">\r\n                                <label class="fs12">In Service Date : </label>\r\n                                <span class="span-header-red"> {{local?.expirationDate| date: \'MM/dd/yyyy\' }}</span>\r\n                            </div>\r\n                            <div class="col-md-2">\r\n                                    <label class="fs12">Updated Cost : </label>\r\n                                    <span class="span-header-red"> {{local?.unitCost}}</span>\r\n                                    \r\n                            </div>\r\n                            <div class="col-md-2">\r\n                                <label class="fs12">Existing Book Vaue : </label>\r\n                                <span class="span-header-red"> {{local?.unitCost}}</span>\r\n                            </div>\r\n                            <div class="col-md-2">\r\n                                    <label class="fs12">Serial Num : </label>\r\n                                    <span class="span-header-red"> {{local?.assetId}}</span>\r\n                                </div>\r\n                                <div class="col-md-2">\r\n                                        <label class="fs12">Control Num : </label>\r\n                                        <span class="span-header-red"> {{local?.alternateAssetId}}</span>\r\n                                        \r\n                                </div>\r\n                                <div class="col-md-2">\r\n                                    <label class="fs12">Asset Life : </label>\r\n                                    <span class="span-header-red"> 0</span>\r\n                                </div>\r\n                        \r\n                        <div class="clear"></div>\r\n                        <hr />\r\n                        <div class="clear"></div>\r\n                        \r\n    \r\n                        <div class="col-md-12">\r\n                            <div class="form-row">\r\n\r\n                            <p-table #dt class="rpo-table-cstm rro-table-cstm" \r\n                                [value]="data"\r\n                                [columns]="cols">\r\n                           \r\n                           <ng-template pTemplate="colgroup" let-columns>\r\n                               <colgroup>\r\n                                    <col style="width:20px">\r\n                                   <col *ngFor="let col of columns" [ngStyle]="{\'width\': col.width}">\r\n                               </colgroup>\r\n                           </ng-template>\r\n                           <ng-template pTemplate="header" let-columns>\r\n                               <tr>\r\n                                   <th></th>\r\n                                   <th *ngFor="let col of columns">\r\n                                       {{col.header}}\r\n                                      \r\n                                   </th>\r\n                                  \r\n                               </tr>\r\n                              \r\n                           </ng-template>\r\n                           <ng-template pTemplate="body" let-rowData let-columns="columns" let-asset>\r\n                               <tr>\r\n                                   <td><input type="checkbox" [ngModelOptions]="{standalone: true}" [(ngModel)]="rowData.selected"></td>\r\n                                   <td>{{ rowData.fieldName}}</td>\r\n                                   <td>{{ rowData.existingValue}}</td>\r\n                                   <td>\r\n                                       <span *ngIf="!rowData.selected">{{ rowData.changeValueTo}}</span>\r\n                                       <ng-container *ngIf="rowData.selected">\r\n\r\n                                                        <div class="form-group" *ngIf="rowData.field==\'company\'">\r\n                                                                <select [(ngModel)]="rowData.changeValueTo" [ngModelOptions]="{standalone: true}" (change)="getBUList(rowData.changeValueTo)">\r\n                                                                    <option>--Select--</option>\r\n                                                                    <option *ngFor="let managementStructure of maincompanylist" [ngValue]="managementStructure.managementStructureId">{{managementStructure.code}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group"  *ngIf="rowData.field==\'bu\'">\r\n                                                               \r\n                                                                <select [(ngModel)]="rowData.changeValueTo" [ngModelOptions]="{standalone: true}" (change)="getDepartmentlist(rowData.changeValueTo)">\r\n                                                                    <option>--Select--</option>\r\n                                                                    <option *ngFor="let managementStructure of bulist" [ngValue]="managementStructure.managementStructureId">{{managementStructure.code}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group"  *ngIf="rowData.field==\'dept\'">\r\n                                                               \r\n                                                                <select [(ngModel)]="rowData.changeValueTo" [ngModelOptions]="{standalone: true}" (change)="getDivisionlist(rowData.changeValueTo)">\r\n                                                                    <option>--Select--</option>\r\n                                                                    <option *ngFor="let managementStructure of departmentList " [ngValue]="managementStructure.managementStructureId">{{managementStructure.code}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group"  *ngIf="rowData.field==\'div\'">\r\n                                                                <select [(ngModel)]="rowData.changeValueTo" [ngModelOptions]="{standalone: true}" (change)="divisionChange(rowData.changeValueTo)">\r\n                                                                    <option>--Select--</option>\r\n                                                                    <option *ngFor="let managementStructure of divisionlist " [ngValue]="managementStructure.managementStructureId">{{managementStructure.code}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group" *ngIf="rowData.field==\'revaluation\'">\r\n                                                                    <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="rowData.changeValueTo">\r\n                                                            </div>\r\n                                                            <div class="form-group" *ngIf="rowData.field==\'usefulLife\'">\r\n                                                                    <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="rowData.changeValueTo">\r\n                                                            </div>\r\n                                                            <div class="form-group" *ngIf="rowData.field==\'assetId\'">\r\n                                                                    <p-autoComplete class="pautocomp-cstm asset-adjustment-autoComplete" sstyle="font-size: 1px" (onSelect)="onAssetIdselection($event)" (onKeyUp)=assetIdHandler($event) [(ngModel)]="rowData.changeValueTo" [ngModelOptions]="{standalone: true}" [suggestions]="localCollection" (completeMethod)="filterAssetId($event)" [size]="30"\r\n                                                                [minLength]="1" [dropdown]="true">\r\n                                                                    <ng-template let-assetId pTemplate="item">\r\n                                                                        <div class="ui-helper-clearfix">{{assetId}}</div>\r\n                                                                    </ng-template>\r\n                                                                </p-autoComplete>\r\n                                                            </div>\r\n                                                            <div class="form-group" *ngIf="rowData.field==\'location\'">\r\n                                                                    <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="rowData.changeValueTo">\r\n                                                            </div>\r\n                                                            <div class="form-group" *ngIf="rowData.field==\'depreciationExpense\'">\r\n                                                                    <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="rowData.changeValueTo">\r\n                                                            </div>\r\n                                                            <div class="form-group" *ngIf="rowData.field==\'accumulatedDepreciation\'">\r\n                                                                    <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="rowData.changeValueTo">\r\n                                                            </div>\r\n                                       </ng-container>\r\n                                    </td>\r\n                                   <td>\r\n                                        <span *ngIf="!rowData.selected">{{ rowData.adjustmentReason}}</span>\r\n                                        <textarea *ngIf="rowData.selected"  [(ngModel)]="rowData.adjustmentReason" [ngModelOptions]="{standalone: true}"></textarea>\r\n                                       \r\n                                    </td>\r\n                                   <td>\r\n                                        <span *ngIf="!rowData.selected">{{ rowData.documents}}</span>\r\n                                        <div class="form-group" *ngIf="rowData.selected">\r\n                                                <p-fileUpload name="fileupload[]" #createUploader multiple="multiple" [showCancelButton]="false" [showUploadButton]="false" customUpload="true" styleClass="asset-adjustment-upload"  (onSelect)="fileUpload($event)">\r\n                                                        <ng-template let-file pTemplate="file">\r\n                                                                <div class="ui-fileupload-row">\r\n                                                                    <div>{{file.name}}</div>\r\n                                                                    <div>\r\n                                                                        <button icon="fa-close" pButton type="button" label="Remove" (click)="removeFile(file,createUploader)"></button>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                              </ng-template>\r\n                                                </p-fileUpload>\r\n                                        </div>\r\n                                    </td>\r\n                                  \r\n                               </tr>\r\n                            </ng-template>\r\n                            </p-table>\r\n                            \r\n                                       \r\n\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-12">\r\n                                <div class="margintop">\r\n                                        <button type="submit" class="btn btn-danger pull-right submit-btn" (click)="backClick()">Close</button>\r\n                                        <button type="submit" class="btn btn-primary pull-right submit-btn" (click)="saveAssetAdjustment()">Save</button> \r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n --\x3e\r\n'},a8Oy:function(e,t,n){"use strict";n.r(t);var a=n("mrSG"),r=n("8Y7J"),s=n("u9T3"),i=n("s7LF"),o=n("TSSN"),l=n("1+r1"),c=n("SVse"),d=n("8YFm"),u=n("MCl+"),p=n("CYTX"),m=n("bv+N"),h=n("Jfay"),v=n("I0ai"),b=n("3/N/"),f=n("sa3O"),g=n("1zQ3"),y=n("a4ce"),I=n("AkAD"),A=n("ByPc"),D=n("1bHX"),M=n("NGzr"),w=n("FfGd"),C=function e(){_classCallCheck(this,e)};C=a.b([Object(r.Component)({selector:"app-assetmanagement",template:a.c(n("Q6uY")).default,styles:[a.c(n("LvS0")).default]})],C);var x=n("/LxO"),S=n("iInd"),L=n("G0yt"),k=n("sYxu"),T=n("3LUQ"),F=n("yKWY"),V=n("5Q4f"),N=n("h55p"),E=n("17al"),R=n("zmE7"),q=n("FmpV"),O=n("OlR4"),j=n("Skqz"),P=n("t4m1"),H=n("EVdn"),G=n("7+Ft"),z=n("Hocb"),U=n("lGQG"),W=n("wd/R"),B=function(){function e(t,n,a,r,s,i,o,l,c,d,u,p,m,h,v,b){_classCallCheck(this,e),this.alertService=t,this.assetService=n,this._route=a,this.modalService=r,this.glAccountService=s,this.assetattrService1=i,this.vendorService=o,this.assetIntangibleService=l,this.vendorEndpointService=c,this.depriciationMethodService=d,this.commonservice=u,this.legalEntityServices=p,this.datePipe=m,this.assetLocationService=h,this.authService=v,this.unitService=b,this.isWorkOrder=!1,this.currentDeletedstatus=!1,this.currentstatus="Active",this.selectedRows=[],this.assetViewList={},this.currentAsset={},this.isDeleteMode=!1,this.isEditMode=!1,this.pageIndex=0,this.pageSize=10,this.pageIndex1=0,this.pageSize1=10,this.updateMode=!1,this.allManagemtninfo=[],this.bulist=[],this.departmentList=[],this.divisionlist=[],this.maincompanylist=[],this.allManufacturerInfo=[],this.managementStructureData=[],this.depriciationMethodList=[],this.depreciationFrequencyList=[],this.assetAcquisitionTypeList=[],this.GLAccountList=[],this.allCapesInfo=[],this.allVendorInfo=[],this.historyCols=[],this.historyData=[],this.allAssetLocationInfo=[],this.allAssetLocations=[],this.assetwarrantystatusList=[],this.allUnitOfMeasureinfo=[],this.selectedOnly=!1,this.pageNumber=0,this.auditHisory=[],this.auditHistory=[],this.status="active",this.allAssetInfo=[],this.allAssetInfoNew=[],this.cols=[{field:"name",header:"Asset Name",colspan:"1"},{field:"assetId",header:"Asset ID",colspan:"1"},{field:"alternateAssetId",header:"Alt Asset ID",colspan:"1"},{field:"manufacturerName",header:"Manufacturer",colspan:"1"},{field:"isSerializedNew",header:"Serialized",colspan:"1"},{field:"calibrationRequiredNew",header:"Calibrated",colspan:"1"},{field:"assetClass",header:"Asset Category",colspan:"1"},{field:"companyName",header:"Level 01",colspan:"1"},{field:"buName",header:"Level 02",colspan:"1"},{field:"deptName",header:"Level 03",colspan:"1"},{field:"divName",header:"Level 04",colspan:"1"},{field:"assetType",header:"Asset Class",colspan:"1"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"Created By"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"Updated By"}],this.cols1=[{field:"partNumber",header:"PN"},{field:"partDescription",header:"PN Description"},{field:"captypedescription",header:"Capability Type"},{field:"manufacturer",header:"Aircraft Manufacturer"},{field:"modelname",header:"Models"},{field:"dashnumber",header:"Dash Number"}],this.restorerecord={},this.isSpinnerVisibleView=!1,this.submittedAlready=!1,this.allAssetInfoOriginal=[],this.dateObject={},this.assetService.isEditMode=!1,this.assetService.listCollection=null}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;this.breadcrumbs=[{label:"Asset"},{label:"Asset List"}],this.isSpinnerVisible=!0,this.selectedColumns=this.cols,this.activeIndex=0,this.assetService.ShowPtab=!1,this.assetService.alertObj.next(this.assetService.ShowPtab),this.assetService.indexObj.next(this.activeIndex),this.isWorkOrder&&this.assetService.getAssetsById(this.assetsId).subscribe((function(t){e.openView("",t[0])}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"loadEventData",value:function(e){this.lazyLoadEventData=e;var t=parseInt(e.first)/e.rows;this.pageIndex=t,this.pageSize=e.rows,e.first=t,e.first<1&&(e.first=0)}},{key:"closeDeleteModal",value:function(){H("#downloadConfirmation").modal("hide")}},{key:"getList",value:function(e){return a.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var n,a=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:n=Object.assign({},e,{filters:Object(z.j)(e.filters)}),this.assetService.getAssetCapesAll(n,this.assetRecordId).subscribe((function(e){a.data=e,a.allCapesInfo=a.data,a.totalRecords1=a.data.length,a.totalPages1=Math.ceil(a.totalRecords1/a.pageSize)}),(function(e){var t=e;a.errorMessageHandler(t)}));case 2:case"end":return t.stop()}}),t,this)})))}},{key:"geListByStatus",value:function(e){this.selectedRows=[],this.status=e,this.currentstatus=e,this.pageNumber=0,this.lazyLoadEventDataInput.first=0,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters);var t=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(t)}},{key:"getDeleteListByStatus",value:function(e){this.selectedRows=[],this.currentDeletedstatus=!0,this.pageNumber=0;var t=parseInt(this.lazyLoadEventDataInput.first)/this.lazyLoadEventDataInput.rows;if(this.pageIndex=t,this.pageSize=this.lazyLoadEventDataInput.rows,this.lazyLoadEventDataInput.first=t,1==e){this.currentstatus=this.currentstatus,this.status=this.status,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters);var n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(n)}else{this.currentDeletedstatus=!1,this.currentstatus=this.currentstatus,this.status=this.status,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters);var a=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(a)}}},{key:"publicationPagination",value:function(e){this.loadData(e)}},{key:"restore",value:function(e,t){this.restorerecord=t,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"restoreRecord",value:function(){var e=this;this.commonservice.updatedeletedrecords("Asset","AssetRecordId",this.restorerecord.assetRecordId).subscribe((function(t){e.modal.close(),e.getDeleteListByStatus(!0),e.alertService.showMessage("Success","Successfully Updated Status",T.d.success)}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"loadData",value:function(e){var t=this;this.pageIndex=parseInt(e.first)/e.rows,this.pageSize=e.rows,this.pageIndex<1&&(this.pageIndex=10*this.pageIndex),e.first=this.pageIndex,this.lazyLoadEventDataInput=e;var n=!!this.currentDeletedstatus;e.filters.isDeleted=n,e.filters.status=this.status?this.status:"Active";var a=Object.assign({},e,{filters:Object(z.j)(e.filters)});this.isSpinnerVisible=!0,this.assetService.getAssetNewList(a).subscribe((function(e){t.onDataLoadSuccessful(e),t.totalRecords=e.totalRecordsCount,t.totalPages=Math.ceil(t.totalRecords/t.pageSize)}),(function(e){var n=e;t.errorMessageHandler(n)})),this.historyCols=[{field:"overview",header:"Changes Overview",width:"150px"},{field:"updatedBy",header:"Last Updated By",width:"100px"},{field:"updatedDate",header:"Last Updated Time",width:"100px"}]}},{key:"filterGlobal",value:function(e,t){var n=this;this.globalFilterValue=e,this.isSpinnerVisible=!0,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters);var a=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)}),r=!!this.currentDeletedstatus;a.filters.isDeleted=r,a.filters.status=this.status?this.status:"Active",a.filters.global=e,a.globalFilter=e,this.assetService.getAssetListGlobalFilter(a).subscribe((function(e){n.onDataLoadSuccessful(e)}),(function(e){return n.onDataLoadFailed(e)}))}},{key:"onDataLoadSuccessful",value:function(e){this.isSpinnerVisible=!1,this.allAssetInfo=[],this.allAssetInfo=e.results,this.allAssetInfoOriginal=e.results,this.lazyLoadEventDataInput.first=e.first}},{key:"onDataLoadFailed",value:function(e){this.isSpinnerVisible=!1}},{key:"navigateTogeneralInfo",value:function(){this.assetService.isEditMode=!1,this.assetService.enableExternal=!1,this._route.navigateByUrl("assetmodule/assetpages/app-create-asset")}},{key:"getInsecGLAccName",value:function(){var e=this;this.assetViewList&&this.assetViewList.inspectionGlaAccountId&&this.glAccountService.getById(this.assetViewList.inspectionGlaAccountId).subscribe((function(t){e.onGlAccountLoad(t[0])}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"onGlAccountLoad",value:function(e){e&&null!=e[0]&&(this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.assetViewList.inspectionGlaAccountName=e[0].accountName)}},{key:"getAuditHistoryById",value:function(e){var t=this;this.assetService.getAssetCapesAudit(e.assetCapesId).subscribe((function(e){t.auditHistory=e}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"getColorCodeForHistory",value:function(e,t,n){var a=this.auditHistory,r=a.length;if(e>=0&&e<=r)return e+1===r||a[e+1][t]===n}},{key:"openAssetToEdit",value:function(e){this.assetService.isEditMode=!0,this.isSaving=!0,this.assetService.listCollection=e;e.assetId;this._route.navigateByUrl("assetmodule/assetpages/app-edit-asset/"+e.assetRecordId)}},{key:"openAssetToAdjustment",value:function(e){this.assetService.listCollection=e;e.assetId;this._route.navigateByUrl("assetmodule/assetpages/app-asset-adjustment/"+e.assetRecordId)}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"removeAsset",value:function(){var e=this;this.assetService.remove(this.assetService.listCollection.assetRecordId).subscribe((function(t){e.alertService.showMessage("Success","Asset removed successfully.",T.d.success),e.modal.close();var n=e.lazyLoadEventDataInput;e.loadData(Object.assign({},n,{filters:Object.assign({},n.filters,{status:e.status})}))}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"toggleIsActive",value:function(e,t){var n=this;0==t.checked?(this.assetTypeToUpdate=e,this.Active="In Active",this.assetTypeToUpdate.isActive,this.assetService.updateAssetListing(e.assetRecordId,this.Active,this.userName).subscribe((function(e){n.alertService.showMessage("Success","Successfully Updated Status",T.d.success);var t=parseInt(n.lazyLoadEventDataInput.first);n.pageIndex=t,n.pageSize=n.lazyLoadEventDataInput.rows,n.lazyLoadEventDataInput.first=t>=1?t:0,n.lazyLoadEventDataInput.filters=Object.assign({},n.lazyLoadEventDataInput.filters,{status:n.status,isDeleted:n.currentDeletedstatus});var a=Object.assign({},n.lazyLoadEventDataInput,{filters:Object(z.j)(n.lazyLoadEventDataInput.filters)});n.lazyLoadEventDataInput,n.loadData(a)}),(function(e){var t=e;n.errorMessageHandler(t)}))):(this.assetTypeToUpdate=e,this.Active="Active",this.assetTypeToUpdate.isActive,this.assetService.updateAssetListing(e.assetRecordId,this.Active,this.userName).subscribe((function(e){n.alertService.showMessage("Success","Successfully Updated Status",T.d.success);var t=n.lazyLoadEventDataInput;n.loadData(Object.assign({},t,{filters:Object.assign({},t.filters,{status:n.status})}))}),(function(e){var t=e;n.errorMessageHandler(t)})))}},{key:"openDelete",value:function(e,t){this.isEditMode=!1,this.isDeleteMode=!0,this.assetService.listCollection=t,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"openHistory",value:function(e,t){this.assetService.listCollection=t,this.selectedAsset=t.assetId,this.historyData=[{overview:"Asset Description, Manufacturer",updatedBy:"Shabbir",updatedTime:"02-01-2019 10:20:50"},{overview:"UOM, Asset Location",updatedBy:"Roger A",updatedTime:"02-01-2019 10:20:50"}],this.historyModal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.historyModal.result.then((function(){}),(function(){}))}},{key:"dismissHistoryModel",value:function(){this.historyModal.close()}},{key:"loadDepricationMethod",value:function(){var e=this;this.depriciationMethodService.getAll().subscribe((function(t){e.depriciationMethodList=t[0].columnData}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"getDefaultVendorName",value:function(e){for(var t=0;t<this.allVendorInfo.length;t++)if(e==this.allVendorInfo[t].vendorId)return this.allVendorInfo[t].vendorName}},{key:"getwarrantystatus",value:function(e){for(var t=0;t<this.assetwarrantystatusList.length;t++)if(e==this.assetwarrantystatusList[t].value)return this.assetwarrantystatusList[t].label}},{key:"openViewData",value:function(e,t){this.assetViewList=t,this.assetViewList.depreOrIntang=1==t.isDepreciable?"Tangible":"Intangible",this.assetViewList.manufacturerName=t.manufacturer?t.manufacturer.name:"",this.assetViewList.isSerialized=1==t.isSerialized?"Yes":"No",this.assetViewList.currencyId=t.currency?t.currency.code:"",this.assetViewList.calibrationDefaultCost=t.calibrationDefaultCost?Object(z.b)(t.calibrationDefaultCost,2):"",this.assetViewList.certificationDefaultCost=t.certificationDefaultCost?Object(z.b)(t.certificationDefaultCost,2):"",this.assetViewList.inspectionDefaultCost=t.inspectionDefaultCost?Object(z.b)(t.inspectionDefaultCost,2):"",this.assetViewList.verificationDefaultCost=t.verificationDefaultCost?Object(z.b)(t.verificationDefaultCost,2):"",this.assetViewList.residualPer=t.residualPer?Object(z.b)(t.residualPer,2):"",this.assetViewList.isSerialized=1==t.isSerialized?"Yes":"No",this.assetViewList.unitOfMeasureId=this.getUOMName(t.unitOfMeasureId),this.assetViewList.assetTypeId=t.assetType?t.assetType.assetTypeName:"",this.assetRecordId=t.assetRecordId,this.selectedCol=this.cols1,this.assetViewList.unitCost=t.unitCost?Object(z.b)(t.unitCost,2):"",this.isWorkOrder||(this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1,windowClass:"assetMange"}))}},{key:"openView",value:function(e,t){var n=this;if(this.submittedAlready)return!1;this.submittedAlready=!0,this.isSpinnerVisibleView=!0,this.assetService.getByAssetId(t.assetRecordId).subscribe((function(t){setTimeout((function(){n.submittedAlready=!1,n.isSpinnerVisibleView=!1}),1500),n.openViewData(e,Object.assign.apply(Object,[{}].concat(_toConsumableArray(t))))}),(function(e){n.isSpinnerVisibleView=!1;var t=e;n.errorMessageHandler(t)}))}},{key:"onCapesLoaded",value:function(e){this.allCapesInfo=e,this.totalRecords1=this.allCapesInfo.length,this.totalPages1=Math.ceil(this.totalRecords1/this.pageSize1)}},{key:"getDeprFrequencyName",value:function(e){for(var t=0;t<this.depreciationFrequencyList.length;t++)if(e==this.depreciationFrequencyList[t].value)return this.depreciationFrequencyList[t].label}},{key:"getUOMName",value:function(e){for(var t=0;t<this.allUnitOfMeasureinfo.length;t++)if(e==this.allUnitOfMeasureinfo[t].unitOfMeasureId)return this.allUnitOfMeasureinfo[t].shortName}},{key:"getGLAccountName",value:function(e){for(var t=0;t<this.GLAccountList.length;t++)if(e==this.GLAccountList[t].glAccountId)return this.GLAccountList[t].accountName}},{key:"getGLAccountCode",value:function(e){for(var t=0;t<this.GLAccountList.length;t++)if(e==this.GLAccountList[t].glAccountId)return this.GLAccountList[t].accountCode}},{key:"onSuccessfulAssetType",value:function(e){e&&e[0]&&(this.assetViewList.assetAttributeTypeId=e[0].assetAttributeTypeId,this.assetViewList.assetAttributeTypeName=e[0].assetAttributeTypeName,this.assetViewList.conventionType=e[0].conventionType,this.assetViewList.depreciationMethod=e[0].depreciationMethod,this.assetViewList.residualPercentage=e[0].residualPercentage?Object(z.b)(e[0].residualPercentage,2):"",this.assetViewList.residualValue=e[0].residualValue,this.assetViewList.assetLife=e[0].assetLife,this.assetViewList.depreciationFrequencyId=e[0].depreciationFrequencyId,this.assetViewList.acquiredGLAccountId=e[0].acquiredGLAccountId,this.assetViewList.deprExpenseGLAccountId=e[0].deprExpenseGLAccountId,this.assetViewList.adDepsGLAccountId=e[0].adDepsGLAccountId,this.assetViewList.assetSale=e[0].assetSale,this.assetViewList.assetWriteOff=e[0].assetWriteOff,this.assetViewList.assetWriteDown=e[0].assetWriteDown,this.assetViewList.createdBy=e[0].createdBy,this.assetViewList.updatedBy=e[0].updatedBy,this.assetViewList.createdDate=e[0].createdDate,this.assetViewList.updatedDate=e[0].updatedDate,this.assetViewList.isDelete=e[0].isDelete,this.assetViewList.isActive=e[0].isActive)}},{key:"openAllCollapse",value:function(){H("#step1").collapse("show"),H("#step2").collapse("show"),H("#step3").collapse("show"),H("#step4").collapse("show")}},{key:"closeAllCollapse",value:function(){H("#step1").collapse("hide"),H("#step2").collapse("hide"),H("#step3").collapse("hide"),H("#step4").collapse("hide")}},{key:"getAssetAcquisitionTypeList",value:function(){var e=this;this.commonservice.smartDropDownList("AssetAcquisitionType","AssetAcquisitionTypeId","Name").subscribe((function(t){e.assetAcquisitionTypeList=t}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"getDepreciationFrequencyList",value:function(){var e=this;this.commonservice.smartDropDownList("AssetDepreciationFrequency","AssetDepreciationFrequencyId","Name").subscribe((function(t){e.depreciationFrequencyList=t}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"selectColumns",value:function(e,t){}},{key:"selectAssetclass",value:function(e,t){}},{key:"exportCSV",value:function(e){var t=this;this.isSpinnerVisible=!0;var n=!!this.currentDeletedstatus,a={first:0,rows:e.totalRecords,sortOrder:1,filters:{status:this.currentstatus,isDeleted:n},globalFilter:""};a.globalFilter=this.globalFilterValue?this.globalFilterValue:"",Object.keys(e.filters).forEach((function(t){a.filters[t]=e.filters[t].value})),this.assetService.downloadAllAssetList(a).subscribe((function(n){t.loadingIndicator=!1,e._value=n.results.map((function(e){return Object.assign({},e,{createdDate:e.createdDate?t.datePipe.transform(e.createdDate,"MMM-dd-yyyy hh:mm a"):"",updatedDate:e.updatedDate?t.datePipe.transform(e.updatedDate,"MMM-dd-yyyy hh:mm a"):""})})),e.exportCSV(),e.value=t.allAssetInfo,t.isSpinnerVisible=!1}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"errorMessageHandler",value:function(e){this.isSpinnerVisible=!1,this.alertService.showMessage("Error",e,T.d.error)}},{key:"parsedText",value:function(e){if(e)return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}},{key:"dateFilterForTable",value:function(e,t){if(this.dateObject={},e=W(e).format("MM/DD/YYYY"),W(e).format("MM/DD/YY"),""!=e&&W(e,"MM/DD/YYYY",!0).isValid()){"createdDate"==t?this.dateObject={createdDate:e}:"updatedDate"==t&&(this.dateObject={updatedDate:e}),this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject);var n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(n)}else{this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject),this.lazyLoadEventDataInput.filters&&this.lazyLoadEventDataInput.filters.createdDate&&delete this.lazyLoadEventDataInput.filters.createdDate,this.lazyLoadEventDataInput.filters&&this.lazyLoadEventDataInput.filters.updatedDate&&delete this.lazyLoadEventDataInput.filters.updatedDate,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject);var a=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(a)}}},{key:"changeStatus",value:function(e){}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();B.ctorParameters=function(){return[{type:T.b},{type:x.a},{type:S.Router},{type:L.c},{type:F.a},{type:E.a},{type:j.a},{type:R.a},{type:V.a},{type:q.a},{type:O.a},{type:N.a},{type:c.DatePipe},{type:P.a},{type:U.a},{type:G.a}]},a.b([Object(r.Input)()],B.prototype,"isWorkOrder",void 0),a.b([Object(r.Input)()],B.prototype,"assetsId",void 0),B=a.b([Object(r.Component)({selector:"app-asset-listing",template:a.c(n("27c/")).default,animations:[k.a],providers:[c.DatePipe],styles:[a.c(n("kd5I")).default]})],B);var $=function(){function e(t,n,a,r,s,i){_classCallCheck(this,e),this.alertService=t,this.assetService=n,this._route=a,this.modalService=r,this.commonservice=s,this.legalEntityServices=i,this.assetViewList={},this.currentAsset={},this.isDeleteMode=!1,this.isEditMode=!1,this.pageIndex=0,this.pageSize=10,this.pageIndex1=0,this.pageSize1=10,this.updateMode=!1,this.allManagemtninfo=[],this.bulist=[],this.departmentList=[],this.divisionlist=[],this.maincompanylist=[],this.allManufacturerInfo=[],this.managementStructureData=[],this.allAssetInfo=[],this.allAssetInfoNew=[],this.assetService.isEditMode=!1,this.assetService.listCollection=null}return _createClass(e,[{key:"ngOnInit",value:function(){this.loadData(),this.activeIndex=0,this.assetService.ShowPtab=!1,this.assetService.alertObj.next(this.assetService.ShowPtab),this.assetService.indexObj.next(this.activeIndex)}},{key:"changePage",value:function(e){var t=e.first/e.rows;this.pageIndex=t,this.pageSize=e.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"onDataLoadSuccessful",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allAssetInfo=e,console.log(this.allAssetInfo),this.totalRecords=this.allAssetInfo.length,this.totalPages=Math.ceil(this.totalRecords/this.pageSize),this.loadManagementdata()}},{key:"loadData",value:function(){var e=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.assetService.getAssetList().subscribe((function(t){return e.onDataLoadSuccessful(t[0])}),(function(t){return e.onDataLoadFailed(t)})),this.cols=[{field:"name",header:"Asset Name",colspan:"1"},{field:"assetId",header:"Asset ID",colspan:"1"},{field:"alternateAssetId",header:"Alt Asset ID",colspan:"1"},{field:"manufacturer",header:"Manufacturer",colspan:"1"},{field:"isSerializedNew",header:"Serial Num",colspan:"1"},{field:"companyName",header:"Level 01",colspan:"1"},{field:"buName",header:"Level 02",colspan:"1"},{field:"deptName",header:"Level 03",colspan:"1"},{field:"divName",header:"Level 04",colspan:"1"},{field:"assetStatus",header:"Status",colspan:"1"},{field:"",header:"Updated Cost",colspan:"1"},{field:"",header:"Existing Book Value",colspan:"1"},{field:"",header:"Last Depr Date",colspan:"1"}],this.selectedColumns=this.cols}},{key:"onDataLoadFailed",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}},{key:"loadManagementdata",value:function(){var e=this;this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.legalEntityServices.getManagemententity().subscribe((function(t){return e.onManagemtntdataLoad(t[0])}),(function(t){return e.onDataLoadFailed(t)}))}},{key:"onManagemtntdataLoad",value:function(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allManagemtninfo=e;for(var t=0;t<this.allManagemtninfo.length;t++)null==this.allManagemtninfo[t].parentId&&this.maincompanylist.push(this.allManagemtninfo[t]);for(var n=0;n<this.allAssetInfo.length;n++){this.currentAsset=Object.assign({},this.allAssetInfo[n]);var a="",r="",s="",i="",o="",l="";this.setManagementStrucureData(this.currentAsset),this.currentAsset.companyId&&(l=a=this.getNameById(this.currentAsset.companyId)),this.currentAsset.buisinessUnitId&&(l=l+", "+(r=this.getNameById(this.currentAsset.buisinessUnitId))),this.currentAsset.departmentId&&(l=l+", "+(s=this.getNameById(this.currentAsset.departmentId))),this.currentAsset.divisionId&&(l=l+", "+(i=this.getNameById(this.currentAsset.divisionId))),this.currentAsset.manufacturer&&(o=this.currentAsset.manufacturer.name),this.currentAsset.isDepreciable,this.currentAsset=Object.assign({},this.currentAsset,{companyName:a,buName:r,deptName:s,divName:i,manufacturerName:o,isSerializedNew:1==this.currentAsset.isSerialized?"Yes":"No",calibrationRequiredNew:1==this.currentAsset.calibrationRequired?"Yes":"No",assetClass:1==this.currentAsset.isDepreciable?"Tangible":"Intangible",assetType:this.currentAsset.assetType.assetTypeName,assetStatus:1==this.currentAsset.isActive?"Active":"In Active",managementStrName:l}),this.allAssetInfoNew.push(this.currentAsset)}console.log(this.allManagemtninfo),console.log(this.allAssetInfoNew)}},{key:"checkMSParents",value:function(e){this.managementStructureData.push(e);for(var t=0;t<this.allManagemtninfo.length;t++)if(this.allManagemtninfo[t].managementStructureId==e&&this.allManagemtninfo[t].parentId){this.checkMSParents(this.allManagemtninfo[t].parentId);break}}},{key:"setManagementStrucureData",value:function(e){this.managementStructureData=[],this.checkMSParents(e.managementStructureId),console.log(this.managementStructureData.length),4==this.managementStructureData.length&&(this.currentAsset.companyId=this.managementStructureData[3],this.currentAsset.buisinessUnitId=this.managementStructureData[2],this.currentAsset.departmentId=this.managementStructureData[1],this.currentAsset.divisionId=this.managementStructureData[0]),3==this.managementStructureData.length&&(this.currentAsset.companyId=this.managementStructureData[2],this.currentAsset.buisinessUnitId=this.managementStructureData[1],this.currentAsset.departmentId=this.managementStructureData[0],this.getBUList(this.currentAsset.companyId),this.getDepartmentlist(this.currentAsset.buisinessUnitId)),2==this.managementStructureData.length&&(this.currentAsset.companyId=this.managementStructureData[1],this.currentAsset.buisinessUnitId=this.managementStructureData[0],this.getBUList(this.currentAsset.companyId)),1==this.managementStructureData.length&&(this.currentAsset.companyId=this.managementStructureData[0])}},{key:"getBUList",value:function(e){if(0==this.updateMode){this.currentAsset.buisinessUnitId="",this.currentAsset.departmentId="",this.currentAsset.divisionId="",this.currentAsset.managementStructureId=e,this.departmentList=[],this.divisionlist=[],this.bulist=[];for(var t=0;t<this.allManagemtninfo.length;t++)this.allManagemtninfo[t].parentId==e&&this.bulist.push(this.allManagemtninfo[t])}else{this.departmentList=[],this.divisionlist=[],this.bulist=[];for(var n=0;n<this.allManagemtninfo.length;n++)this.allManagemtninfo[n].parentId==e&&this.bulist.push(this.allManagemtninfo[n])}}},{key:"getDepartmentlist",value:function(e){if(0==this.updateMode){this.currentAsset.departmentId="",this.currentAsset.divisionId="",this.currentAsset.managementStructureId=e,this.departmentList=[],this.divisionlist=[];for(var t=0;t<this.allManagemtninfo.length;t++)this.allManagemtninfo[t].parentId==e&&this.departmentList.push(this.allManagemtninfo[t])}else{this.departmentList=[],this.divisionlist=[];for(var n=0;n<this.allManagemtninfo.length;n++)this.allManagemtninfo[n].parentId==e&&this.departmentList.push(this.allManagemtninfo[n])}}},{key:"getDivisionlist",value:function(e){if(0==this.updateMode){this.currentAsset.divisionId="",this.currentAsset.managementStructureId=e,this.divisionlist=[];for(var t=0;t<this.allManagemtninfo.length;t++)this.allManagemtninfo[t].parentId==e&&this.divisionlist.push(this.allManagemtninfo[t])}else{this.divisionlist=[];for(var n=0;n<this.allManagemtninfo.length;n++)this.allManagemtninfo[n].parentId==e&&this.divisionlist.push(this.allManagemtninfo[n])}}},{key:"getNameById",value:function(e){for(var t=0;t<this.allManagemtninfo.length;t++)if(this.allManagemtninfo[t].managementStructureId==e)return this.allManagemtninfo[t].code;return""}},{key:"openHistory",value:function(e,t){this.historyModal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.historyModal.result.then((function(){console.log("When user closes")}),(function(){console.log("Backdrop click")}))}},{key:"toggleIsActive",value:function(e,t){}},{key:"openSaleHistory",value:function(e){}},{key:"openView",value:function(e){}}]),e}();$.ctorParameters=function(){return[{type:T.b},{type:x.a},{type:S.Router},{type:L.c},{type:O.a},{type:N.a}]},a.b([Object(r.Input)()],$.prototype,"assetsId",void 0),$=a.b([Object(r.Component)({selector:"app-asset-disposal-sale",template:a.c(n("vB/z")).default,animations:[k.a],styles:[a.c(n("0leF")).default]})],$);var _=n("JPLv"),Y=function(){function e(t,n,a,r,s,i,o,l,c){_classCallCheck(this,e),this.alertService=t,this.authService=n,this.datePipe=a,this.commonService=r,this.assetService=s,this._route=i,this.modalService=o,this.commonservice=l,this.configurations=c,this.isWorkOrder=!1,this.allDocumentsListColumns=[{field:"docName",header:"Name"},{field:"docDescription",header:"Description"},{field:"docMemo",header:"Memo"},{field:"fileName",header:"File Name"},{field:"fileSize",header:"File Size"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"CreatedBy"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"UpdatedBy"},{field:"download",header:"Actions"}],this.allDocumentsList=[],this.allDocumentsListWarranty=[],this.sourceViewforDocumentAudit=[],this.assetViewList={},this.currentAsset={},this.isDeleteMode=!1,this.isEditMode=!1,this.selectedRows=[],this.pageIndex=0,this.pageSize=10,this.pageIndex1=0,this.pageSize1=10,this.updateMode=!1,this.allManagemtninfo=[],this.bulist=[],this.departmentList=[],this.divisionlist=[],this.maincompanylist=[],this.allManufacturerInfo=[],this.managementStructureData=[],this.depriciationMethodList=[],this.depreciationFrequencyList=[],this.assetAcquisitionTypeList=[],this.GLAccountList=[],this.allCapesInfo=[],this.allVendorInfo=[],this.historyData=[],this.allAssetLocationInfo=[],this.allAssetLocations=[],this.assetwarrantystatusList=[],this.allUnitOfMeasureinfo=[],this.pageNumber=0,this.auditHistory=[],this.status="active",this.currentDeletedstatus=!1,this.currentstatus="Active",this.selectedOnly=!1,this.cols=[{field:"inventoryNumber",header:"Inventory Num",colspan:"1"},{field:"name",header:"Asset Name",colspan:"1"},{field:"assetId",header:"Asset ID",colspan:"1"},{field:"alternateAssetId",header:"Alt Asset ID",colspan:"1"},{field:"manufacturerName",header:"Manufacturer",colspan:"1"},{field:"serialNumber",header:"Serial Num",colspan:"1"},{field:"calibrationRequiredNew",header:"Calibrated",colspan:"1"},{field:"assetStatus",header:"Asset Status",colspan:"1"},{field:"inventoryStatus",header:"Inventory Status",colspan:"1"},{field:"companyName",header:"Level 01",colspan:"1"},{field:"buName",header:"Level 02",colspan:"1"},{field:"deptName",header:"Level 03",colspan:"1"},{field:"divName",header:"Level 04",colspan:"1"},{field:"assetClass",header:"Asset Category",colspan:"1"},{field:"assetType",header:"Asset Class",colspan:"1"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"Created By"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"Updated By"}],this.historyCols=[{field:"overview",header:"Changes Overview",width:"150px"},{field:"updatedBy",header:"Last Updated By",width:"100px"},{field:"updatedTime",header:"Last Updated Time",width:"100px"}],this.allAssetInfo=[],this.allAssetInfoNew=[],this.managementStructure={},this.isSpinnerVisible=!0,this.customerDocumentsColumns=[{field:"docName",header:"Name"},{field:"docDescription",header:"Description"},{field:"docMemo",header:"Memo"},{field:"fileName",header:"File Name"},{field:"fileSize",header:"File Size"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"Created By"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"Updated By"}],this.selectedColumnsDoc=this.customerDocumentsColumns,this.pageSizeNew=3,this.sourceViewforDocumentList=[],this.allDocumentListOriginal=[],this.sourceViewforDocumentListWarranty=[],this.allDocumentListOriginalWarranty=[],this.sourceViewforDocumentListInt=[],this.allDocumentListOriginalInt=[],this.capesCols=[{field:"partNumber",header:"PN"},{field:"partDescription",header:"PN Description"},{field:"captypedescription",header:"Capability Type"},{field:"manufacturer",header:"Aircraft Manufacturer"},{field:"modelname",header:"Models"},{field:"dashnumber",header:"Dash Number"}],this.capesSelectedColumns=this.capesCols,this.allAssetInfoOriginal=[],this.dateObject={},this.isSpinnerVisibleHistory=!1,this.showhistorylist=!1,this.restorerecord={},this.isDeletedDocumentlist=!1,this.warrentyDeletedList=!1,this.intangibleDeletedList=!1,this.maitananceeletedList=!1}return _createClass(e,[{key:"ngOnInit",value:function(){this.breadcrumbs=[{label:"Asset Inventory"},{label:"Asset Inventory List"}],this.activeIndex=0,this.assetService.ShowPtab=!1,this.assetService.alertObj.next(this.assetService.ShowPtab),this.assetService.indexObj.next(this.activeIndex),this.selectedColumns=this.cols}},{key:"changePage",value:function(e){var t=e.first/e.rows;this.pageIndex=t,this.pageSize=e.rows,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"onDataLoadSuccessful",value:function(e){this.isSpinnerVisible=!1,this.allAssetInfo=e.results,this.allAssetInfoOriginal=e.results,this.totalPages=Math.ceil(this.totalRecords/this.pageSize),this.totalRecords=e.totalRecordsCount,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)}},{key:"closeDeleteModal",value:function(){H("#downloadConfirmation").modal("hide")}},{key:"geListByStatus",value:function(e){this.status=e,this.selectedRows=[],this.pageNumber=0,this.pageIndex=0,this.lazyLoadEventDataInput.first=this.pageIndex,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:e,pageIndex:1}),this.loadData(this.lazyLoadEventDataInput)}},{key:"getDeleteListByStatus",value:function(e){this.selectedRows=[],this.currentDeletedstatus=!0;var t=parseInt(this.lazyLoadEventDataInput.first)/this.lazyLoadEventDataInput.rows;if(this.pageIndex=t,this.pageSize=this.lazyLoadEventDataInput.rows,this.lazyLoadEventDataInput.first=t,this.status=status,1==e){this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters);var n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(n)}else{this.currentDeletedstatus=!1,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters);var a=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(a)}}},{key:"onDataLoad",value:function(e){var t=parseInt(e.first)/e.rows;this.pageIndex=t,this.pageSize=e.rows,e.first=t,this.currentstatus=this.currentstatus?this.currentstatus:"Active",this.loadData(e)}},{key:"loadData",value:function(e){var t=this;this.lazyLoadEventDataInput=e;var n=!!this.currentDeletedstatus;e.filters.isDeleted=n,e.filters.status=this.status?this.status:"Active",e.globalFilter=e.globalFilter?e.globalFilter:"";var a=Object.assign({},e,{filters:Object(z.j)(e.filters)});this.isSpinnerVisible=!0,this.assetService.getAssetInventoryList(a).subscribe((function(e){t.onDataLoadSuccessful(e[0])}),(function(e){t.isSpinnerVisible=!1;var n=e;t.errorMessageHandler(n)}))}},{key:"dateFilterForTable",value:function(e,t){if(this.dateObject={},e=W(e).format("MM/DD/YYYY"),W(e).format("MM/DD/YY"),console.log("date",e,t),""!=e&&W(e,"MM/DD/YYYY",!0).isValid()){"createdDate"==t?this.dateObject={createdDate:e}:"updatedDate"==t&&(this.dateObject={updatedDate:e}),this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject);var n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(n),console.log("date 111",e)}else{this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject),this.lazyLoadEventDataInput.filters&&this.lazyLoadEventDataInput.filters.createdDate&&delete this.lazyLoadEventDataInput.filters.createdDate,this.lazyLoadEventDataInput.filters&&this.lazyLoadEventDataInput.filters.updatedDate&&delete this.lazyLoadEventDataInput.filters.updatedDate;var a=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.loadData(a)}}},{key:"navigateTogeneralInfo",value:function(){this.assetService.isEditMode=!1,this.assetService.enableExternal=!1,this._route.navigateByUrl("assetmodule/assetpages/app-create-asset-inventory")}},{key:"openAssetToEdit",value:function(e){this.assetService.isEditMode=!0,this.isSaving=!0,this.assetService.listCollection=e;e.assetId;this._route.navigateByUrl("assetmodule/assetpages/app-edit-asset-inventory/"+e.assetInventoryId)}},{key:"openAssetToAdjustment",value:function(e){this.assetService.listCollection=e;e.assetId;this._route.navigateByUrl("assetmodule/assetpages/app-asset-adjustment/"+e.assetInventoryId)}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"removeAsset",value:function(){var e=this;this.pageNumber=0,this.assetService.listCollection&&null!=this.assetService.listCollection.assetInventoryId&&this.assetService.removeAssetInventory(this.assetService.listCollection.assetInventoryId).subscribe((function(t){e.alertService.showMessage("Success","Asset Inventory removed successfully.",T.d.success),e.modal.close(),e.status=e.status,e.lazyLoadEventDataInput.filters=Object.assign({},e.lazyLoadEventDataInput.filters);var n=Object.assign({},e.lazyLoadEventDataInput,{filters:Object(z.j)(e.lazyLoadEventDataInput.filters)});e.loadData(n)}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}},{key:"toggleIsActive",value:function(e,t){var n=this;this.pageNumber=0,0==t.checked?(this.assetTypeToUpdate=e,this.Active="In Active",this.assetTypeToUpdate.isActive,e&&null!=e.assetInventoryId&&this.assetService.updateAssetInventoryListing(e.assetInventoryId,this.Active,this.userName).subscribe((function(e){n.alertService.showMessage("Success","Asset Inventory Type updated successfully.",T.d.success),n.status=n.status,n.lazyLoadEventDataInput.filters=Object.assign({},n.lazyLoadEventDataInput.filters);var t=Object.assign({},n.lazyLoadEventDataInput,{filters:Object(z.j)(n.lazyLoadEventDataInput.filters)});n.loadData(t)}),(function(e){n.isSpinnerVisible=!1;var t=e;n.errorMessageHandler(t)}))):(this.assetTypeToUpdate=e,this.Active="Active",this.assetTypeToUpdate.isActive,e&&null!=e.assetInventoryId&&this.assetService.updateAssetInventoryListing(e.assetInventoryId,this.Active,this.userName).subscribe((function(e){n.alertService.showMessage("Success","Asset Inventory Type updated successfully.",T.d.success),n.status=n.status,n.lazyLoadEventDataInput.filters=Object.assign({},n.lazyLoadEventDataInput.filters);var t=Object.assign({},n.lazyLoadEventDataInput,{filters:Object(z.j)(n.lazyLoadEventDataInput.filters)});n.loadData(t)}),(function(e){n.isSpinnerVisible=!1;var t=e;n.errorMessageHandler(t)})))}},{key:"openDelete",value:function(e,t){this.pageNumber=0,this.isEditMode=!1,this.isDeleteMode=!0,this.assetService.listCollection=t,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){}),(function(){}))}},{key:"openHistory",value:function(e){var t=this;this.isIntangible=null,e&&null!=e.assetInventoryId&&(this.isSpinnerVisibleHistory=!0,this.assetService.getAuditDataByInventoryId(e.assetInventoryId).subscribe((function(e){e&&0!=e.length?(t.showhistorylist=!0,t.auditHistory=e.map((function(e){return Object.assign({},e,{unitCost:e.unitCost?Object(z.b)(e.unitCost,2):"",residualPercentage:e.residualPercentage?Object(z.b)(e.residualPercentage,2):"",installationCost:e.installationCost?Object(z.b)(e.installationCost,2):"",freight:e.freight?Object(z.b)(e.freight,2):"",insurance:e.insurance?Object(z.b)(e.insurance,2):"",taxes:e.taxes?Object(z.b)(e.taxes,2):"",totalCost:e.totalCost?Object(z.b)(e.totalCost,2):"",calibrationDefaultCost:e.calibrationDefaultCost?Object(z.b)(e.calibrationDefaultCost,2):"",certificationDefaultCost:e.certificationDefaultCost?Object(z.b)(e.certificationDefaultCost,2):"",inspectionDefaultCost:e.inspectionDefaultCost?Object(z.b)(e.inspectionDefaultCost,2):"",verificationDefaultCost:e.verificationDefaultCost?Object(z.b)(e.verificationDefaultCost,2):""})})),t.isIntangible=t.auditHistory[0].isIntangible):t.showhistorylist=!1,t.isSpinnerVisibleHistory=!1}),(function(e){t.isSpinnerVisibleHistory=!1,t.isSpinnerVisible=!1,t.showhistorylist=!1;var n=e;t.errorMessageHandler(n)})))}},{key:"getColorCodeForHistory",value:function(e,t,n){var a=this.auditHistory,r=a.length;if(e>=0&&e<=r)return e+1===r||a[e+1][t]===n}},{key:"viewSelectedRowdbl",value:function(e){this.openView(e),H("#invView").modal("show")}},{key:"openView",value:function(e){var t=this;this.isSpinnerVisibleHistory=!0,e&&null!=e.assetInventoryId&&this.assetService.getByInventoryId(e.assetInventoryId).subscribe((function(n){n&&(t.currentAsset=Object.assign({},n,{isTangible:!n.isIntangible,entryDate:n.entryDate?new Date(n.entryDate):null,manufacturedDate:n.manufacturedDate?new Date(n.manufacturedDate):null,expirationDate:n.expirationDate?new Date(n.expirationDate):null,unitCost:n.unitCost?Object(z.b)(n.unitCost,2):"",installationCost:n.installationCost?Object(z.b)(n.installationCost,2):"",freight:n.freight?Object(z.b)(n.freight,2):"",insurance:n.insurance?Object(z.b)(n.insurance,2):"",taxes:n.taxes?Object(z.b)(n.taxes,2):"",totalCost:n.totalCost?Object(z.b)(n.totalCost,2):"",calibrationDefaultCost:n.calibrationDefaultCost?Object(z.b)(n.calibrationDefaultCost,2):"",certificationDefaultCost:n.certificationDefaultCost?Object(z.b)(n.certificationDefaultCost,2):"",inspectionDefaultCost:n.inspectionDefaultCost?Object(z.b)(n.inspectionDefaultCost,2):"",verificationDefaultCost:n.verificationDefaultCost?Object(z.b)(n.verificationDefaultCost,2):"",warrantyStartDate:n.warrantyStartDate?new Date(n.warrantyStartDate):null,warrantyEndDate:n.warrantyEndDate?new Date(n.warrantyEndDate):null})),1==t.currentAsset.isTangible?(t.toGetDocumentsListNew(e.assetInventoryId),t.toGetDocumentsListWarranty(e.assetInventoryId)):t.toGetDocumentsListInt(e.assetInventoryId),t.assetInventoryId=e.assetInventoryId,setTimeout((function(){t.isSpinnerVisibleHistory=!1}),1e3)}),(function(e){t.isSpinnerVisibleHistory=!1;var n=e;t.errorMessageHandler(n)}))}},{key:"getManagementStructureCodes",value:function(e){var t=this;e&&this.commonService.getManagementStructureCodes(e).subscribe((function(e){e.Level1?t.managementStructure.level1=e.Level1:t.managementStructure.level1="-",e.Level2?t.managementStructure.level2=e.Level2:t.managementStructure.level2="-",e.Level3?t.managementStructure.level3=e.Level3:t.managementStructure.level3="-",e.Level4?t.managementStructure.level4=e.Level4:t.managementStructure.level4="-",t.isSpinnerVisible=!1}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"toGetDocumentsListNew",value:function(e){var t=this;e&&this.commonService.GetDocumentsListNewAsset(e,54,this.maitananceeletedList).subscribe((function(e){t.sourceViewforDocumentList=e||[],t.allDocumentListOriginal=e}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"toGetDocumentsListWarranty",value:function(e){var t=this;e&&this.commonService.GetDocumentsListNewAsset(e,55,this.warrentyDeletedList).subscribe((function(e){t.sourceViewforDocumentListWarranty=e||[],t.allDocumentListOriginalWarranty=e}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"toGetDocumentsListInt",value:function(e){var t=this;e&&this.commonService.GetDocumentsListNewAsset(e,56,this.intangibleDeletedList).subscribe((function(e){t.sourceViewforDocumentListInt=e||[],t.allDocumentListOriginalInt=e}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"dateFilterForTableNew",value:function(e,t){if(""!=e&&null!=e||(this.sourceViewforDocumentList=this.allDocumentListOriginal),this.sourceViewforDocumentList=this.allDocumentListOriginal,""!==e&&W(e).format("MMMM DD YYYY")){var n=_toConsumableArray(this.sourceViewforDocumentList.filter((function(n){return W(n.createdDate).format("MMMM DD YYYY")===W(e).format("MMMM DD YYYY")&&"createdDate"===t||W(n.updatedDate).format("MMMM DD YYYY")===W(e).format("MMMM DD YYYY")&&"updatedDate"===t?n:void 0})));this.sourceViewforDocumentList=n}else this.sourceViewforDocumentList=this.allDocumentListOriginal}},{key:"dateFilterForTableWarranty",value:function(e,t){if(""!=e&&null!=e||(this.sourceViewforDocumentListWarranty=this.allDocumentListOriginalWarranty),this.sourceViewforDocumentListWarranty=this.allDocumentListOriginalWarranty,""!==e&&W(e).format("MMMM DD YYYY")){var n=_toConsumableArray(this.sourceViewforDocumentListWarranty.filter((function(n){return W(n.createdDate).format("MMMM DD YYYY")===W(e).format("MMMM DD YYYY")&&"createdDate"===t||W(n.updatedDate).format("MMMM DD YYYY")===W(e).format("MMMM DD YYYY")&&"updatedDate"===t?n:void 0})));this.sourceViewforDocumentListWarranty=n}else this.sourceViewforDocumentListWarranty=this.allDocumentListOriginalWarranty}},{key:"dateFilterForTableInt",value:function(e,t){if(""!=e&&null!=e||(this.sourceViewforDocumentListInt=this.allDocumentListOriginalInt),this.sourceViewforDocumentList=this.allDocumentListOriginalInt,""!==e&&W(e).format("MMMM DD YYYY")){var n=_toConsumableArray(this.sourceViewforDocumentListInt.filter((function(n){return W(n.createdDate).format("MMMM DD YYYY")===W(e).format("MMMM DD YYYY")&&"createdDate"===t||W(n.updatedDate).format("MMMM DD YYYY")===W(e).format("MMMM DD YYYY")&&"updatedDate"===t?n:void 0})));this.sourceViewforDocumentListInt=n}else this.sourceViewforDocumentListInt=this.allDocumentListOriginalInt}},{key:"openHistoryDoc",value:function(e,t){var n=this;this.alertService.startLoadingMessage(),t&&null!=t.attachmentDetailId&&this.commonService.GetAttachmentAudit(t.attachmentDetailId).subscribe((function(t){n.onAuditHistoryLoadSuccessful(t,e)}),(function(e){var t=e;n.errorMessageHandler(t)}))}},{key:"onAuditHistoryLoadSuccessful",value:function(e,t){this.alertService.stopLoadingMessage(),this.sourceViewforDocumentAudit=e,this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){}),(function(){}))}},{key:"getColorCodeForHistoryMain",value:function(e,t,n){var a=this.sourceViewforDocumentAudit,r=a.length;if(e>=0&&e<=r)return e+1===r||a[e+1][t]===n}},{key:"dismissModelNew",value:function(){this.isDeleteMode=!1,this.modal.close()}},{key:"openCapes",value:function(){var e=this;this.currentAsset.assetRecordId&&this.assetService.getcapabilityListData(this.currentAsset.assetRecordId).subscribe((function(t){e.allCapesInfo=t[0]}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"downloadFileUpload",value:function(e){var t="".concat(this.configurations.baseUrl,"/api/FileUpload/downloadattachedfile?filePath=").concat(e.link);window.location.assign(t)}},{key:"onCloseView",value:function(){H("#invView").modal("hide")}},{key:"restore",value:function(e,t){this.restorerecord=t,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){}),(function(){}))}},{key:"restoreRecord",value:function(){var e=this;this.restorerecord&&null!=this.restorerecord.assetInventoryId&&this.commonService.updatedeletedrecords("AssetInventory","AssetInventoryId",this.restorerecord.assetInventoryId).subscribe((function(t){e.getDeleteListByStatus(!0),e.alertService.showMessage("Success","Successfully Updated Status",T.d.success),e.modal.close()}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"exportCSV",value:function(e){var t=this;this.isSpinnerVisible=!0;var n=!!this.currentDeletedstatus,a={first:0,rows:e.totalRecords,sortOrder:1,filters:{status:this.currentstatus,isDeleted:n},globalFilter:""};this.assetService.downloadAllAssetInventoryList(a).subscribe((function(n){t.loadingIndicator=!1,e._value=n.results.map((function(e){return Object.assign({},e,{createdDate:e.createdDate?t.datePipe.transform(e.createdDate,"MMM-dd-yyyy hh:mm a"):"",updatedDate:e.updatedDate?t.datePipe.transform(e.updatedDate,"MMM-dd-yyyy hh:mm a"):""})})),e.exportCSV(),e.value=t.allAssetInfo,t.isSpinnerVisible=!1}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"parsedText",value:function(e){if(e)return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}},{key:"errorMessageHandler",value:function(e){this.alertService.showMessage("Error",e,T.d.error)}},{key:"getDeleteListByStatusAttachments",value:function(e,t){console.log("check",e),1==t?(this.maitananceeletedList=e,this.toGetDocumentsListNew(this.assetInventoryId)):2==t?(this.warrentyDeletedList=e,this.toGetDocumentsListWarranty(this.assetInventoryId)):(this.intangibleDeletedList=e,this.toGetDocumentsListInt(this.assetInventoryId))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();Y.ctorParameters=function(){return[{type:T.b},{type:U.a},{type:c.DatePipe},{type:O.a},{type:x.a},{type:S.Router},{type:L.c},{type:O.a},{type:_.a}]},a.b([Object(r.Input)()],Y.prototype,"isWorkOrder",void 0),Y=a.b([Object(r.Component)({selector:"app-asset-inventory-listing",template:a.c(n("EQKf")).default,animations:[k.a],providers:[c.DatePipe],styles:[a.c(n("6Aim")).default]})],Y);var K=n("6c3z"),X=function(){function e(t,n,a,r,s,i,o,l,c,d){_classCallCheck(this,e),this.router=t,this.assetService=n,this.vendorService=a,this.alertService=r,this.authService=s,this.commonService=i,this.modalService=o,this.glAccountService=l,this.route=c,this.currencyService=d,this.allGlInfo=[],this.allVendorInfo=[],this.currentCalibration={},this.disableSaveForEdit=!1,this.isSpinnerVisible=!1,this.arrayVendlsit=[],this.setEditArray=[],this.finalData={},this.datadissmiss=!1,this.allVendorInfoFilter=[],this.allGlInfoFilter=[],this.currentData={},this.disableEditor=!0,this.AssetId=this.router.snapshot.params.id,this.activeIndex=2}return _createClass(e,[{key:"ngOnInit",value:function(){0==this.assetService.isEditMode?this.breadcrumbs=[{label:"Asset"},{label:"Create Asset"}]:this.breadcrumbs=[{label:"Asset"},{label:"Edit Asset"}],this.AssetId=this.router.snapshot.params.id,this.disableSaveForEdit=!0,this.GetAssetData(this.AssetId),this.assetService.bredcrumbObj.next(this.assetService.currentUrl)}},{key:"GetAssetData",value:function(e){var t=this;this.isSpinnerVisible=!0,null!=e&&this.assetService.getByAssetId(e).subscribe((function(e){t.onassetdataSuccessful(e)}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"onassetdataSuccessful",value:function(e){this.activeIndex=2,this.assetService.indexObj.next(this.activeIndex),this.assetService.listCollection=e[0],this.localCollection=this.assetService.listCollection,this.currentCalibration=e[e.length-1],this.isSpinnerVisible=!1,1==this.currentCalibration.assetCal&&(this.assetService.isEditMode=!0),this.currentCalibration.assetRecordId=e[0].assetRecordId,this.vendorList(""),this.setAutocompleteOnLoad(this.currentCalibration),this.currentCalibration.verificationDefaultCost=this.currentCalibration.verificationDefaultCost?Object(z.b)(this.currentCalibration.verificationDefaultCost,2):"0.00",this.currentCalibration.calibrationDefaultCost=this.currentCalibration.calibrationDefaultCost?Object(z.b)(this.currentCalibration.calibrationDefaultCost,2):"0.00",this.currentCalibration.certificationDefaultCost=this.currentCalibration.certificationDefaultCost?Object(z.b)(this.currentCalibration.certificationDefaultCost,2):"0.00",this.currentCalibration.inspectionDefaultCost=this.currentCalibration.inspectionDefaultCost?Object(z.b)(this.currentCalibration.inspectionDefaultCost,2):"0.00",0==this.currentCalibration.calibrationRequired&&(this.currentCalibration.calibrationDefaultCost="0.00"),0==this.currentCalibration.certificationRequired&&(this.currentCalibration.certificationDefaultCost="0.00"),0==this.currentCalibration.inspectionRequired&&(this.currentCalibration.inspectionDefaultCost="0.00"),0==this.currentCalibration.verificationRequired&&(this.currentCalibration.verificationDefaultCost="0.00"),this.glList(""),this.CurrencyData()}},{key:"setvaliDate",value:function(e){this.disableSaveForEdit=!1}},{key:"vendorList",value:function(e){var t=this;this.arrayVendlsit.push(0),this.vendorService.getVendorNameCodeListwithFilter(e,20,this.arrayVendlsit.join()).subscribe((function(e){t.allVendorInfo=e.map((function(e){return{vendorId:e.vendorId,name:e.vendorName}})),t.allVendorInfoFilter=t.allVendorInfo}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"glList",value:function(e){var t=this;this.setEditArray=[],1==this.assetService.isEditMode?this.setEditArray.push(this.currentCalibration.calibrationGlAccountId?this.currentCalibration.calibrationGlAccountId.glAccountId:0,this.currentCalibration.certificationGlAccountId?this.currentCalibration.certificationGlAccountId.glAccountId:0,this.currentCalibration.inspectionGlaAccountId?this.currentCalibration.inspectionGlaAccountId.glAccountId:0,this.currentCalibration.verificationGlAccountId?this.currentCalibration.verificationGlAccountId.glAccountId:0):this.setEditArray.push(0);var n=e||"";this.commonService.getAutoCompleteDropDownsByCodeWithName("GLAccount","GLAccountId","AccountName","AccountCode",n,20,this.setEditArray.join()).subscribe((function(e){t.allGlInfo=e.map((function(e){return{glAccountId:e.value,name:e.label}})),t.allGlInfoFilter=t.allGlInfo}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"changeOfTab",value:function(e){this.AssetId.assetId;1==this.assetService.isEditMode&&("General"===e?(this.activeIndex=0,this.route.navigateByUrl("assetmodule/assetpages/app-edit-asset/"+this.AssetId)):"Capes"===e?(this.activeIndex=1,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/"+this.AssetId)):"Calibration"===e?(this.activeIndex=2,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration/"+this.AssetId)):"Maintenance"==e&&(this.activeIndex=3,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-maintenance-warranty/"+this.AssetId)))}},{key:"CurrencyData",value:function(){var e=this;this.setEditArray=[],1==this.assetService.isEditMode?this.setEditArray.push(this.currentCalibration.certificationCurrencyId,this.currentCalibration.inspectionCurrencyId,this.currentCalibration.calibrationCurrencyId,this.currentCalibration.verificationCurrencyId):this.setEditArray.push(0),this.commonService.autoSuggestionSmartDropDownList("Currency","CurrencyId","Code","",!0,20,this.setEditArray.join()).subscribe((function(t){e.allCurrencyInfo=t}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"saveCalibration",value:function(){var e=this;this.finalData={},this.currentCalibration.createdBy=this.userName,this.currentCalibration.updatedBy=this.userName,this.currentCalibration.masterCompanyId=this.authService.currentUser.masterCompanyId,0==this.currentCalibration.calibrationRequired?(this.currentCalibration.calibrationDefaultVendorId=null,this.currentCalibration.calibrationDefaultCost="0.00",this.currentCalibration.calibrationCurrencyId=null,this.currentCalibration.calibrationGlAccountId=null,this.currentCalibration.calibrationMemo=null):0==this.currentCalibration.certificationRequired?(this.currentCalibration.certificationDefaultVendorId=null,this.currentCalibration.certificationDefaultCost="0.00",this.currentCalibration.certificationCurrencyId=null,this.currentCalibration.certificationGlAccountId=null,this.currentCalibration.certificationMemo=null):0==this.currentCalibration.inspectionRequired?(this.currentCalibration.inspectionDefaultVendorId=null,this.currentCalibration.inspectionDefaultCost="0.00",this.currentCalibration.inspectionCurrencyId=null,this.currentCalibration.inspectionGlaAccountId=null,this.currentCalibration.inspectionMemo=null):0==this.currentCalibration.verificationRequired&&(this.currentCalibration.verificationDefaultVendorId=null,this.currentCalibration.verificationDefaultCost="0.00",this.currentCalibration.verificationCurrencyId=null,this.currentCalibration.verificationGlAccountId=null,this.currentCalibration.verificationMemo=null),this.currentCalibration.verificationFrequencyMonths=this.currentCalibration.verificationFrequencyMonths?this.currentCalibration.verificationFrequencyMonths:0,this.currentCalibration.verificationFrequencyDays=this.currentCalibration.verificationFrequencyDays?this.currentCalibration.verificationFrequencyDays:0,this.currentCalibration.inspectionFrequencyMonths=this.currentCalibration.inspectionFrequencyMonths?this.currentCalibration.inspectionFrequencyMonths:0,this.currentCalibration.inspectionFrequencyDays=this.currentCalibration.inspectionFrequencyDays?this.currentCalibration.inspectionFrequencyDays:0,this.currentCalibration.certificationFrequencyMonths=this.currentCalibration.certificationFrequencyMonths?this.currentCalibration.certificationFrequencyMonths:0,this.currentCalibration.certificationFrequencyDays=this.currentCalibration.certificationFrequencyDays?this.currentCalibration.certificationFrequencyDays:0,this.currentCalibration.calibrationFrequencyMonths=this.currentCalibration.calibrationFrequencyMonths?this.currentCalibration.calibrationFrequencyMonths:0,this.currentCalibration.calibrationFrequencyDays=this.currentCalibration.calibrationFrequencyDays?this.currentCalibration.calibrationFrequencyDays:0,1!=this.currentCalibration.calibrationRequired||0!=this.currentCalibration.calibrationFrequencyMonths||0!=this.currentCalibration.calibrationFrequencyDays?1!=this.currentCalibration.certificationRequired||0!=this.currentCalibration.certificationFrequencyMonths||0!=this.currentCalibration.certificationFrequencyDays?1!=this.currentCalibration.inspectionRequired||0!=this.currentCalibration.inspectionFrequencyMonths||0!=this.currentCalibration.inspectionFrequencyDays?1!=this.currentCalibration.verificationRequired||0!=this.currentCalibration.verificationFrequencyMonths||0!=this.currentCalibration.verificationFrequencyDays?(this.currentCalibration.updatedBy=this.userName,this.currentCalibration.masterCompanyId=this.authService.currentUser.masterCompanyId,this.currentCalibration.calibrationCurrencyId=0==this.currentCalibration.calibrationCurrencyId?null:this.currentCalibration.calibrationCurrencyId,this.currentCalibration.inspectionCurrencyId=0==this.currentCalibration.inspectionCurrencyId?null:this.currentCalibration.inspectionCurrencyId,this.currentCalibration.certificationCurrencyId=0==this.currentCalibration.certificationCurrencyId?null:this.currentCalibration.certificationCurrencyId,this.currentCalibration.verificationCurrencyId=0==this.currentCalibration.verificationCurrencyId?null:this.currentCalibration.verificationCurrencyId,this.currentCalibration.assetRecordId=this.assetService.listCollection.assetRecordId,this.currentCalibration.assetCalibrationMin=""==this.currentCalibration.assetCalibrationMin?null:this.currentCalibration.assetCalibrationMin,this.currentCalibration.assetCalibrationMinTolerance=this.currentCalibration.assetCalibrationMinTolerance=this.currentCalibration.assetCalibrationMinTolerance,this.currentCalibration.assetCalibratonMax=this.currentCalibration.assetCalibratonMax=this.currentCalibration.assetCalibratonMax,this.currentCalibration.assetCalibrationMaxTolerance=this.currentCalibration.assetCalibrationMaxTolerance=this.currentCalibration.assetCalibrationMaxTolerance,this.currentCalibration.assetCalibrationExpected=this.currentCalibration.assetCalibrationExpected=this.currentCalibration.assetCalibrationExpected,this.currentCalibration.assetCalibrationExpectedTolerance=this.currentCalibration.assetCalibrationExpectedTolerance=this.currentCalibration.assetCalibrationExpectedTolerance,this.finalData=Object.assign({},this.currentCalibration),1==this.currentCalibration.assetCal?(this.finalData.calibrationDefaultVendorId=this.finalData.calibrationDefaultVendorId?this.finalData.calibrationDefaultVendorId.vendorId:null,this.finalData.certificationDefaultVendorId=this.finalData.certificationDefaultVendorId?this.finalData.certificationDefaultVendorId.vendorId:null,this.finalData.inspectionDefaultVendorId=this.finalData.inspectionDefaultVendorId?this.finalData.inspectionDefaultVendorId.vendorId:null,this.finalData.verificationDefaultVendorId=this.finalData.verificationDefaultVendorId?this.finalData.verificationDefaultVendorId.vendorId:null,this.finalData.calibrationGlAccountId=this.finalData.calibrationGlAccountId?this.finalData.calibrationGlAccountId.glAccountId:null,this.finalData.certificationGlAccountId=this.finalData.certificationGlAccountId?this.finalData.certificationGlAccountId.glAccountId:null,this.finalData.inspectionGlaAccountId=this.finalData.inspectionGlaAccountId?this.finalData.inspectionGlaAccountId.glAccountId:null,this.finalData.verificationGlAccountId=this.finalData.verificationGlAccountId?this.finalData.verificationGlAccountId.glAccountId:null,this.isSpinnerVisible=!0,this.assetService.updateAssetCalibration(this.finalData).subscribe((function(t){e.disableSaveForEdit=!0,e.currentCalibration.updatedBy=e.userName,e.currentCalibration.assetCal=!0,t.assetCal=!0,e.localCollection=t,setTimeout((function(){e.isSpinnerVisible=!1}),1200),e.alertService.showMessage("Success","Asset calibration updated successfully.",T.d.success)}),(function(t){var n=t;e.isSpinnerVisible=!1,e.errorMessageHandler(n)}))):(this.finalData.calibrationDefaultVendorId=this.finalData.calibrationDefaultVendorId?this.finalData.calibrationDefaultVendorId.vendorId:null,this.finalData.certificationDefaultVendorId=this.finalData.certificationDefaultVendorId?this.finalData.certificationDefaultVendorId.vendorId:null,this.finalData.inspectionDefaultVendorId=this.finalData.inspectionDefaultVendorId?this.finalData.inspectionDefaultVendorId.vendorId:null,this.finalData.verificationDefaultVendorId=this.finalData.verificationDefaultVendorId?this.finalData.verificationDefaultVendorId.vendorId:null,this.finalData.calibrationGlAccountId=this.finalData.calibrationGlAccountId?this.finalData.calibrationGlAccountId.glAccountId:null,this.finalData.certificationGlAccountId=this.finalData.certificationGlAccountId?this.finalData.certificationGlAccountId.glAccountId:null,this.finalData.inspectionGlaAccountId=this.finalData.inspectionGlaAccountId?this.finalData.inspectionGlaAccountId.glAccountId:null,this.finalData.verificationGlAccountId=this.finalData.verificationGlAccountId?this.finalData.verificationGlAccountId.glAccountId:null,this.isSpinnerVisible=!0,this.assetService.addAssetCalibration(this.finalData).subscribe((function(t){e.disableSaveForEdit=!0,setTimeout((function(){e.isSpinnerVisible=!1}),1200),e.alertService.showMessage("Success","Asset Calibration  created successfully",T.d.success),e.currentCalibration.updatedBy=e.userName,e.currentCalibration.assetCal=!0,t.assetCal=!0,e.assetService.isEditMode=!0,e.localCollection=t}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)})))):this.alertService.showMessage("Warning"," Verification Months & Days Cant be Zero",T.d.warn):this.alertService.showMessage("Warning","Inspection Months & Days Cant be Zero",T.d.warn):this.alertService.showMessage("Warning","Certification Months & Days Cant be Zero",T.d.warn):this.alertService.showMessage("Warning","Calibration Months & Days Cant be Zero",T.d.warn)}},{key:"validateDates",value:function(e,t,n){e&&(e<0||e>31)&&(e="",1==n?(t.calibrationFrequencyDays=null,this.alertService.showMessage("Warning","Calibration Days Cant greater than 31 days",T.d.warn)):2==n?(t.certificationFrequencyDays=null,this.alertService.showMessage("Warning","Certification Days Cant greater than 31 days",T.d.warn)):3==n?(t.inspectionFrequencyDays=null,this.alertService.showMessage("Warning","Inspection Days Cant greater than 31 days",T.d.warn)):4==n&&(t.verificationFrequencyDays=null,this.alertService.showMessage("Warning","Verification Days Cant greater than 31 days",T.d.warn)))}},{key:"formatToGlobal",value:function(e){e.verificationDefaultCost=e.verificationDefaultCost?Object(z.b)(e.verificationDefaultCost,2):"0.00",e.calibrationDefaultCost=e.calibrationDefaultCost?Object(z.b)(e.calibrationDefaultCost,2):"0.00",e.certificationDefaultCost=e.certificationDefaultCost?Object(z.b)(e.certificationDefaultCost,2):"0.00",e.inspectionDefaultCost=e.inspectionDefaultCost?Object(z.b)(e.inspectionDefaultCost,2):"0.00"}},{key:"nextClick",value:function(e){this.nextOrPreviousTab=e;var t=this.tabRedirectConfirmationModal3;this.modal=this.modalService.open(t,{size:"sm"})}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"redirectdismissModel",value:function(){this.datadissmiss=!0,this.redirectToTab()}},{key:"redirectToTab",value:function(){this.disableSaveForEdit||this.datadissmiss||this.saveCalibration(),this.dismissModel(),"Next"==this.nextOrPreviousTab?(this.activeIndex=3,this.assetService.indexObj.next(this.activeIndex),this.route.navigateByUrl("/assetmodule/assetpages/app-asset-maintenance-warranty/"+this.localCollection.assetRecordId)):(this.activeIndex=1,this.assetService.indexObj.next(this.activeIndex),this.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/"+this.localCollection.assetRecordId)),this.datadissmiss=!1}},{key:"filterWarentyVendor",value:function(e){this.allVendorInfoFilter=this.allVendorInfo,void 0!==e.query&&null!==e.query?this.vendorList(e.query):this.vendorList("");var t=_toConsumableArray(this.allVendorInfo.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.allVendorInfoFilter=t}},{key:"filterWarentyGl",value:function(e){this.allGlInfoFilter=this.allGlInfo,void 0!==e.query&&null!==e.query?this.glList(e.query):this.glList("");var t=_toConsumableArray(this.allGlInfo.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.allGlInfoFilter=t}},{key:"filterWarentyVendor2",value:function(e){this.allVendorInfoFilter=this.allVendorInfo,void 0!==e.query&&null!==e.query?this.vendorList(e.query):this.vendorList("");var t=_toConsumableArray(this.allVendorInfo.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.allVendorInfoFilter=t}},{key:"filterWarentyGl2",value:function(e){this.allGlInfoFilter=this.allGlInfo,void 0!==e.query&&null!==e.query?this.glList(e.query):this.glList("");var t=_toConsumableArray(this.allGlInfo.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.allGlInfoFilter=t}},{key:"filterWarentyVendor3",value:function(e){this.allVendorInfoFilter=this.allVendorInfo,void 0!==e.query&&null!==e.query?this.vendorList(e.query):this.vendorList("");var t=_toConsumableArray(this.allVendorInfo.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.allVendorInfoFilter=t}},{key:"filterWarentyGl3",value:function(e){this.allGlInfoFilter=this.allGlInfo,void 0!==e.query&&null!==e.query?this.glList(e.query):this.glList("");var t=_toConsumableArray(this.allGlInfo.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.allGlInfoFilter=t}},{key:"filterWarentyVendor4",value:function(e){this.allVendorInfoFilter=this.allVendorInfo,void 0!==e.query&&null!==e.query?this.vendorList(e.query):this.vendorList("");var t=_toConsumableArray(this.allVendorInfo.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.allVendorInfoFilter=t}},{key:"filterWarentyGl4",value:function(e){this.allGlInfoFilter=this.allGlInfo,void 0!==e.query&&null!==e.query?this.glList(e.query):this.glList("");var t=_toConsumableArray(this.allGlInfo.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.allGlInfoFilter=t}},{key:"setAutocompleteOnLoad",value:function(e){e.calibrationGlAccountId=0==e.calibrationGlAccountId?null:{glAccountId:e.calibrationGlAccountId,name:e.calibrationGlAccount},e.certificationGlAccountId=0==e.certificationGlAccountId?null:{glAccountId:e.certificationGlAccountId,name:e.certificationGlAccount},e.inspectionGlaAccountId=0==e.inspectionGlaAccountId?null:{glAccountId:e.inspectionGlaAccountId,name:e.inspectionGlAccount},e.verificationGlAccountId=0==e.verificationGlAccountId?null:{glAccountId:e.verificationGlAccountId,name:e.verificationGlAccount},e.calibrationDefaultVendorId=0==e.calibrationDefaultVendorId?null:{vendorId:e.calibrationDefaultVendorId,name:e.calibrationVendor},e.certificationDefaultVendorId=0==e.certificationDefaultVendorId?null:{vendorId:e.certificationDefaultVendorId,name:e.certificationVendor},e.inspectionDefaultVendorId=0==e.inspectionDefaultVendorId?null:{vendorId:e.inspectionDefaultVendorId,name:e.inspectionVendor},e.verificationDefaultVendorId=0==e.verificationDefaultVendorId?null:{vendorId:e.verificationDefaultVendorId,name:e.verificationVendor}}},{key:"onAddTextAreaInfo",value:function(e,t){this.disableEditor=!0,this.textAreaInfo=e,this.memoType=t}},{key:"editorgetmemo",value:function(e){this.disableEditor=!1}},{key:"onSaveTextAreaInfo",value:function(e){this.disableSaveForEdit=!1,e&&(this.textAreaInfo=e,1==this.memoType?this.currentCalibration.calibrationMemo=e:2==this.memoType?this.currentCalibration.certificationMemo=e:3==this.memoType?this.currentCalibration.inspectionMemo=e:4==this.memoType?this.currentCalibration.verificationMemo=e:5==this.memoType&&(this.currentCalibration.assetCalibrationMemo=e)),H("#textarea-popup").modal("hide")}},{key:"onCloseTextAreaInfo",value:function(){H("#textarea-popup").modal("hide")}},{key:"verificationMethod",value:function(){this.currentCalibration.verificationFrequencyMonths=0,this.currentCalibration.verificationFrequencyDays=0,this.currentCalibration.verificationDefaultVendorId=null,this.currentCalibration.verificationDefaultCost="0.00",this.currentCalibration.verificationCurrencyId=null,this.currentCalibration.verificationGlAccountId=null,this.currentCalibration.verificationMemo=""}},{key:"inspectionMethod",value:function(){this.currentCalibration.inspectionFrequencyMonths=0,this.currentCalibration.inspectionFrequencyDays=0,this.currentCalibration.inspectionDefaultVendorId=null,this.currentCalibration.inspectionDefaultCost="0.00",this.currentCalibration.inspectionCurrencyId=null,this.currentCalibration.inspectionGlaAccountId=null,this.currentCalibration.inspectionMemo=""}},{key:"ceretificationMethod",value:function(){this.currentCalibration.certificationFrequencyMonths=0,this.currentCalibration.certificationFrequencyDays=0,this.currentCalibration.certificationDefaultVendorId=null,this.currentCalibration.certificationDefaultCost="0.00",this.currentCalibration.certificationCurrencyId=null,this.currentCalibration.certificationGlAccountId=null,this.currentCalibration.certificationMemo=""}},{key:"calibrationMethod",value:function(){this.currentCalibration.calibrationFrequencyMonths=0,this.currentCalibration.calibrationFrequencyDays=0,this.currentCalibration.calibrationDefaultVendorId=null,this.currentCalibration.calibrationDefaultCost="0.00",this.currentCalibration.calibrationCurrencyId=null,this.currentCalibration.calibrationGlAccountId=null,this.currentCalibration.calibrationMemo="",this.currentCalibration.assetCalibrationMin="",this.currentCalibration.assetCalibrationMinTolerance="",this.currentCalibration.assetCalibratonMax="",this.currentCalibration.assetCalibrationMaxTolerance="",this.currentCalibration.assetCalibrationExpected="",this.currentCalibration.assetCalibrationExpectedTolerance="",this.currentCalibration.assetCalibrationMemo=""}},{key:"errorMessageHandler",value:function(e){this.isSpinnerVisible=!1,this.alertService.showMessage("Error",e,T.d.error)}},{key:"parsedText",value:function(e){if(e)return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();X.ctorParameters=function(){return[{type:S.ActivatedRoute},{type:x.a},{type:j.a},{type:T.b},{type:U.a},{type:O.a},{type:L.c},{type:F.a},{type:S.Router},{type:K.a}]},a.b([Object(r.ViewChild)("tabRedirectConfirmationModal3",{static:!1})],X.prototype,"tabRedirectConfirmationModal3",void 0),X=a.b([Object(r.Component)({selector:"app-asset-calibration",template:a.c(n("bcEE")).default,styles:[a.c(n("v+D9")).default]})],X);var J=n("Ph3x"),Z=n("DDJF"),Q=n("jasi"),ee=n("3fSc"),te=n("wNWc"),ne=function(){function e(t,n,a,r,s,i,o,l,c,d,u,p,m,h){_classCallCheck(this,e),this.router=t,this.modalService=n,this.alertService=a,this.itemMasterService=r,this.route=s,this.assetServices=i,this.dashnumberservices=o,this.authService=l,this.formBuilder=c,this.commonservice=d,this.aircraftManufacturerService=u,this.aircraftModelService=p,this.configurations=m,this.datePipe=h,this.isView=!1,this.sourceItemMasterCap={},this.descriptionbyPart=[],this.allManagemtninfo=[],this.maincompanylist=[],this.auditHisory=[],this.auditHistory=[],this.manufacturerData=[],this.formData=new FormData,this.selectedAircraftDataModels=[],this.enablePopupData=!1,this.currentVendorModels=[],this.selectedModels=[],this.assetRecordId=0,this.disableSaveForEdit=!1,this.selectedModel=[],this.capabilityEditCollection=[],this.isEditMode=!1,this.isDeleteMode=!1,this.allAssets=[],this.pageNumber=0,this.selectedOnly=!1,this.allCapesInfo=[],this.currentCapes={},this.dashNumberList=[],this.viewTable=!1,this.aircraftdata=[],this.newDashnumValue=[],this.selectAircraftManfacturer=[],this.selectedAircraftModel=[],this.selectedDashNumbers=[],this.selectedATAchapter=[],this.modelUnknown=!1,this.dashNumberUnknown=!1,this.LoadValues=[],this.totalRecords=0,this.totalRecords1=0,this.pageIndex=0,this.pageSize=10,this.pageSize1=10,this.totalPages=0,this.totalPages1=0,this.searchAircraftParams="",this.aircraftTypeId=0,this.partNumber="",this.capabilityid=0,this.aircraftmodelId=0,this.aircraftdashId=0,this.status="Active",this.currentstatus2="Active",this.currentDeletedstatus=!1,this.assetCapesId=0,this.aircraftDataEdit={},this.actionHide=!1,this.filterText="",this.selectedRows=[],this.capabilityForm={selectedCap:"",CapabilityTypeId:0,selectedPartId:[],selectedAircraftDataModels:[],selectedAircraftModelTypes:[],selectedAircraftTypes:[],selectedManufacturer:[],selectedModel:[],selectedDashNumbers:[],selectedDashNumbers2:[],modelUnknown:!1},this.setEditArray=[],this.colaircraft=[{field:"CapibilityType",header:"Capability Type",star:!0},{field:"PartNumber",header:"PN",star:!0},{field:"AircraftType",header:"Aircraft Manufacturer",star:!0},{field:"AircraftModel",header:"Model",star:!1},{field:"DashNumber",header:"Dash Number",star:!1}],this.isSpinnerVisibleView=!1,this.arrayItemMasterlist=[],this.dateObject={},this.restorerecord={},this.managementStructureData=[],this.disableCapesSave=!1,this.isSpinnerVisible=!1,this.exportData=[],this.cols=[{field:"partNumber",header:"PN",star:!0},{field:"partDescription",header:"PN Description",star:!1},{field:"captypedescription",header:"Capability Type",star:!0},{field:"manufacturer",header:"Aircraft Manufacturer",star:!0},{field:"modelname",header:"Model",star:!1},{field:"dashnumber",header:"Dash Number",star:!1},{field:"createdDate",header:"Created Date",star:!1},{field:"createdBy",header:"Created By",star:!1},{field:"updatedDate",header:"Updated Date",star:!1},{field:"updatedBy",header:"Updated By",star:!1}],this.selectedColumns=this.cols,this.AssetId=this.router.snapshot.params.id,this.activeIndex=1,null!=this.assetServices.listCollection&&1==this.assetServices.isEditMode?(this.showLable=!0,this.currentAsset=this.assetServices.listCollection,this.assetServices.listCollection&&(this.local=this.assetServices.listCollection),0==this.isView&&this.aircraftManfacturerData("")):null!=this.assetServices.generalCollection&&(this.showLable=!0,this.currentAsset=this.assetServices.generalCollection,this.assetServices.generalCollection&&(this.local=this.assetServices.generalCollection,this.currentCapes=this.local),0==this.isView&&this.aircraftManfacturerData(""))}return _createClass(e,[{key:"ngOnInit",value:function(){0==this.assetServices.isEditMode?this.breadcrumbs=[{label:"Asset"},{label:"Create Asset"}]:this.breadcrumbs=[{label:"Asset"},{label:"Edit Asset"}],this.capabilitiesForm=this.formBuilder.group({mfgForm:this.formBuilder.array([]),overhaulForm:this.formBuilder.array([]),distributionForm:this.formBuilder.array([]),certificationForm:this.formBuilder.array([]),repairForm:this.formBuilder.array([]),exchangeForm:this.formBuilder.array([])}),this.AssetId=this.router.snapshot.params.id,0==this.isView&&(this.GetAssetData(this.AssetId),this.ptnumberlistdata(""),this.aircraftManfacturerData(""),this.getCapabilityTypeData(""))}},{key:"ngOnChanges",value:function(e){this.viewassetRecordId=this.viewassetRecordId}},{key:"getmemo",value:function(e){this.disableAdd=!1}},{key:"onFilterCapability",value:function(e){this.getCapabilityTypeData(e)}},{key:"getCapabilityTypeData",value:function(e){var t=this;this.setEditArray=[],1==this.assetServices.isCapsEditMode?this.setEditArray.push(this.AssetCapesId?this.AssetCapesId:0):this.setEditArray.push(0);var n=e||"";this.commonservice.autoSuggestionSmartDropDownList("CapabilityType","CapabilityTypeId","Description",n,!0,20,this.setEditArray.join()).subscribe((function(e){t.capabilityTypeData=e}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"GetAssetData",value:function(e){var t=this;this.assetServices.getByAssetId(e).subscribe((function(e){t.onassetdataSuccessful(e[0])}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"onassetdataSuccessful",value:function(e){this.assetServices.isEditMode=!0,this.activeIndex=1,this.assetServices.indexObj.next(this.activeIndex),this.assetServices.listCollection=e,null!=this.assetServices.listCollection?(this.showLable=!0,this.currentAsset=this.assetServices.listCollection,this.assetServices.listCollection&&(this.local=this.assetServices.listCollection)):null!=this.assetServices.generalCollection&&(this.showLable=!0,this.currentAsset=this.assetServices.generalCollection,this.assetServices.generalCollection&&(this.local=this.assetServices.generalCollection,this.currentCapes=this.local))}},{key:"getAuditHistoryById",value:function(e){var t=this;this.isSpinnerVisibleView=!0,this.assetServices.getAssetCapesAudit(e.assetCapesId).subscribe((function(e){t.auditHistory=e,setTimeout((function(){t.isSpinnerVisibleView=!1}),1200)}),(function(e){t.isSpinnerVisibleView=!1;var n=e;t.errorMessageHandler(n)}))}},{key:"getColorCodeForHistory",value:function(e,t,n){var a=this.auditHistory,r=a.length;if(e>=0&&e<=r)return e+1===r||a[e+1][t]===n}},{key:"sampleExcelDownloadForCapes",value:function(){var e=this.configurations.baseUrl+"/api/FileUpload/downloadsamplefile?moduleName=AssetCapes&fileName=AssetCapes.xlsx";window.location.assign(e)}},{key:"CapesExcelUpload",value:function(e){var t=this,n=e.target.files;if(n.length>0){this.formData.append("file",n[0]),this.formData.append("masterCompanyId",this.authService.currentUser.masterCompanyId.toString()),this.formData.append("createdBy",this.userName),this.formData.append("updatedBy",this.userName),this.formData.append("isActive","true"),this.formData.append("isDeleted","false");var a={masterCompanyId:this.authService.currentUser.masterCompanyId,createdBy:this.userName,updatedBy:this.userName,isActive:!0,isDeleted:!1};this.assetServices.CapesUpload(this.formData,this.currentAsset.assetRecordId,a).subscribe((function(n){e.target.value="",t.formData=new FormData,t.getList(t.lazyLoadEventData),t.alertService.showMessage("Success","Successfully Uploaded  ",T.d.success)}),(function(e){var n=e;t.errorMessageHandler(n)}))}}},{key:"ptnumberlistdata",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";this.arrayItemMasterlist=[],1==this.assetServices.isCapsEditMode?this.arrayItemMasterlist.push(this.aircraftDataEdit.partNumber?this.aircraftDataEdit.partNumber:0):this.arrayItemMasterlist.push(0),this.commonservice.autoSuggestionSmartDropDownList("ItemMaster","ItemMasterId","PartNumber",t,!0,20,this.arrayItemMasterlist.join()).subscribe((function(t){e.allPartnumbersInfo=t.map((function(e){return{partNumber:e.label,itemMasterId:e.value}})),e.partCollection=e.allPartnumbersInfo}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"loadData",value:function(e){this.lazyLoadEventData=e;var t=parseInt(e.first)/e.rows;this.pageIndex=t,this.pageSize=e.rows,e.first=t,this.lazyLoadEventDataInput=e,this.lazyLoadEventDataInput.globalFilter=this.filterText,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:this.status?this.status:"Active"});var n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.getList(n)}},{key:"getList",value:function(e){return a.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var n,a,r=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:n=!!this.currentDeletedstatus,e.filters.isDeleted=n,a=Object.assign({},e,{filters:Object(z.j)(e.filters)}),0==this.isView?this.recordId=this.currentAsset?this.currentAsset.assetRecordId:this.AssetId:this.recordId=this.viewassetRecordId,null!=this.recordId&&(this.isSpinnerVisible=!0,this.assetServices.getAssetCapesAll(a,this.recordId).subscribe((function(e){r.data=e.results,r.allCapesInfo=r.data,r.totalRecords=e.totalRecordsCount,r.totalPages=Math.ceil(r.totalRecords/r.pageSize),r.isSpinnerVisible=!1}),(function(e){r.isSpinnerVisible=!1;var t=e;r.errorMessageHandler(t)})));case 4:case"end":return t.stop()}}),t,this)})))}},{key:"dateFilterForTable",value:function(e,t){if(this.dateObject={},e=W(e).format("MM/DD/YYYY"),W(e).format("MM/DD/YY"),""!=e&&W(e,"MM/DD/YYYY",!0).isValid()){"createdDate"==t?this.dateObject={createdDate:e}:"updatedDate"==t&&(this.dateObject={updatedDate:e}),this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject);var n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.getList(n)}else{this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject),this.lazyLoadEventDataInput.filters&&this.lazyLoadEventDataInput.filters.createdDate&&delete this.lazyLoadEventDataInput.filters.createdDate,this.lazyLoadEventDataInput.filters&&this.lazyLoadEventDataInput.filters.updatedDate&&delete this.lazyLoadEventDataInput.filters.updatedDate,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,this.dateObject);var a=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.getList(a)}}},{key:"getCapesListByStatus",value:function(e){this.currentstatus2=e,this.selectedRows=[],this.pageNumber=0;var t=parseInt(this.lazyLoadEventDataInput.first)/this.lazyLoadEventDataInput.rows;this.pageIndex=t,this.pageSize=this.lazyLoadEventDataInput.rows,this.lazyLoadEventDataInput.first=t,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:e});var n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});n.first=0,this.getList(n)}},{key:"getDeleteListByStatus",value:function(e){this.pageNumber=0,this.selectedRows=[],this.currentDeletedstatus=!0;var t=parseInt(this.lazyLoadEventDataInput.first)/this.lazyLoadEventDataInput.rows;if(this.pageIndex=t,this.pageSize=this.lazyLoadEventDataInput.rows,this.lazyLoadEventDataInput.first=t,this.status=status,1==e){this.currentstatus2=this.currentstatus2,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:this.currentstatus2});var n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.getList(n)}else{this.currentDeletedstatus=!1,this.currentstatus2=this.currentstatus2,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:this.currentstatus2});var a=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters)});this.getList(a)}}},{key:"globalSearch",value:function(e){var t=parseInt(this.lazyLoadEventDataInput.first)/this.lazyLoadEventDataInput.rows;this.pageIndex=t,this.pageSize=this.lazyLoadEventDataInput.rows,this.lazyLoadEventDataInput.first=t,this.lazyLoadEventDataInput.globalFilter=e,this.filterText=e,this.status=this.currentstatus2,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{status:this.currentstatus2});var n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(z.j)(this.lazyLoadEventDataInput.filters),globalFilter:e});this.getList(n)}},{key:"restoreRecord",value:function(){var e=this;this.commonservice.updatedeletedrecords("AssetCapes","AssetCapesId",this.restorerecord.assetCapesId).subscribe((function(t){e.getDeleteListByStatus(!0),e.modal.close(),e.alertService.showMessage("Success","Successfully Updated Status",T.d.success)}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"restore",value:function(e,t){this.restorerecord=t,this.assetCapesId=t.assetCapesId,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1,windowClass:"assetMangecls"})}},{key:"changeOfTab",value:function(e){this.AssetId.assetId;this.AssetId=this.AssetId?this.AssetId:this.assetServices.listCollection.assetRecordId,1==this.assetServices.isEditMode&&("General"===e?(this.activeIndex=0,this.route.navigateByUrl("assetmodule/assetpages/app-edit-asset/"+this.AssetId)):"Capes"===e?(this.activeIndex=1,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/"+this.AssetId)):"Calibration"===e?(this.activeIndex=2,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration/"+this.AssetId)):"Maintenance"==e&&(this.activeIndex=3,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-maintenance-warranty/"+this.AssetId)))}},{key:"partEventHandler",value:function(e){if(e&&""!=e.target.value){var t=e.target.value.toLowerCase();this.onSelectedId&&(t==this.onSelectedId.toLowerCase()?this.disableSave=!0:this.disableSave=!1)}}},{key:"partPNentHandler",value:function(e){if(""!=e.target.value){var t=e.target.value.toLowerCase();this.selectedActionName&&(t==this.selectedActionName.toLowerCase()?this.disableSavepartNumber=!0:(this.disableSavepartNumber=!1,this.sourceItemMasterCap.partDescription="",this.disableSavepartDescription=!1))}this.ptnumberlistdata(e.target.value)}},{key:"onCapabilityTypeSelection",value:function(e){if(this.capabilityid=e.value,this.capabilityTypeData)for(var t=0;t<this.capabilityTypeData.length;t++)e.value==this.capabilityTypeData[t].value&&(this.capabilityForm.selectedCap=this.capabilityTypeData[t].label)}},{key:"partnmId",value:function(e){this.sourceItemMasterCap.partId=e.itemMasterId,this.itemMasterId=e.itemMasterId,this.disableSavepartNumber=!0,this.selectedActionName=e.partNumber,this.disableSavepartDescription=!0}},{key:"filterPNpartItems",value:function(e){this.partCollection=this.allPartnumbersInfo,void 0!==e.query&&null!==e.query?this.ptnumberlistdata(e.query):this.ptnumberlistdata("");var t=_toConsumableArray(this.allPartnumbersInfo.filter((function(t){return t.partNumber.toLowerCase().includes(e.query.toLowerCase())})));this.partCollection=t}},{key:"onAssetIdselection",value:function(e){if(this.allAssets)for(var t=0;t<this.allAssets.length;t++)e==this.allAssets[t][0].assetId&&(this.currentAsset.assetRecordId=this.allAssets[t][0].assetRecordId,this.disableSave=!0,this.onSelectedId=e)}},{key:"onFilteManufacturer",value:function(e){this.aircraftManfacturerData(e)}},{key:"aircraftManfacturerData",value:function(e){var t=this;this.setEditArray=[],1==this.assetServices.isCapsEditMode?this.setEditArray.push(this.aircraftDataEdit.selectedAircraftTypes?this.aircraftDataEdit.assetAcquisitionTypeId:0):this.setEditArray.push(0);var n=e||"";this.commonservice.autoSuggestionSmartDropDownList("AircraftType","AircraftTypeId","Description",n,!0,20,this.setEditArray.join()).subscribe((function(e){t.manufacturerData=e,t.loadingIndicator=!1}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"loadModalsForExistingRecords",value:function(e){var t=this;e.selectedAircraftTypes&&this.commonservice.smartDropDownList("AircraftModel","AircraftModelId","ModelName","AircraftTypeId",e.selectedAircraftTypes).subscribe((function(n){var a=n.map((function(e){return Object.assign({},e,{aircraftModelId:e.value,modelName:e.label})}));t.onDataLoadaircrafttypeSuccessfulForExisting(a,e)}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"loadModalsForExistingRecords_1",value:function(e,t){var n=this;t&&this.commonservice.smartDropDownList("AircraftModel","AircraftModelId","ModelName","AircraftTypeId",t).subscribe((function(t){var a=t.map((function(e){return Object.assign({},e,{aircraftModelId:e.value,modelName:e.label})}));n.onDataLoadaircrafttypeSuccessfulForExisting(a,e)}),(function(e){var t=e;n.errorMessageHandler(t)}))}},{key:"onDataLoadaircrafttypeSuccessfulForExisting",value:function(e,t){e&&0!=e.length?(t.selectedAircraftDataModels=[],e.forEach((function(e){if(t.selectedAircraftModelTypes&&0!=t.selectedAircraftModelTypes.length)for(var n=0;n<t.selectedAircraftModelTypes.length;n++)e.aircraftModelId==t.selectedAircraftModelTypes[n]&&t.selectedModel.push({value:e.aircraftModelId,label:e.modelName,aircraftTypeId:t.selectedAircraftTypes});t.selectedAircraftDataModels.push({value:e.aircraftModelId,label:e.modelName,aircraftTypeId:t.selectedAircraftTypes})})),this.displayModalNames(t)):(t.selectedAircraftDataModels=[],t.search_AircraftDashNumberList=[])}},{key:"displayModalNames",value:function(e){var t=this;switch(e.formArrayName){case"mfgForm":this.mfgFormArray.controls.forEach((function(n){n.controls.aircraftModelName.setValue(t.getAirCraftModalName(e.selectedAircraftDataModels,n.controls.aircraftModelId.value)),t.mfgFormArray.updateValueAndValidity()}));break;case"overhaulForm":this.overhaulFormArray.controls.forEach((function(n){n.controls.aircraftModelName.setValue(t.getAirCraftModalName(e.selectedAircraftDataModels,n.controls.aircraftModelId.value))}));break;case"distributionForm":this.distributionFormArray.controls.forEach((function(n){n.controls.aircraftModelName.setValue(t.getAirCraftModalName(e.selectedAircraftDataModels,n.controls.aircraftModelId.value))}));break;case"certificationForm":this.certificationFormArray.controls.forEach((function(n){n.controls.aircraftModelName.setValue(t.getAirCraftModalName(e.selectedAircraftDataModels,n.controls.aircraftModelId.value))}));break;case"repairForm":this.repairFormArray.controls.forEach((function(n){n.controls.aircraftModelName.setValue(t.getAirCraftModalName(e.selectedAircraftDataModels,n.controls.aircraftModelId.value))}));break;case"exchangeForm":this.exchangeFormArray.controls.forEach((function(n){n.controls.aircraftModelName.setValue(t.getAirCraftModalName(e.selectedAircraftDataModels,n.controls.aircraftModelId.value))}))}}},{key:"openModelPopups",value:function(e){var t=this;0==this.itemMasterService.isEditMode&&(e.selectedAircraftTypes?this.commonservice.smartDropDownList("AircraftModel","AircraftModelId","ModelName","AircraftTypeId",e.selectedAircraftTypes).subscribe((function(n){var a=n.map((function(e){return Object.assign({},e,{aircraftModelId:e.value,modelName:e.label})}));t.onDataLoadaircrafttypeSuccessful(a,e)})):this.allAircraftinfo=[])}},{key:"onDataLoadaircrafttypeSuccessful",value:function(e,t){t.selectedAircraftDataModels=[],e.forEach((function(e){t.selectedAircraftDataModels.push({value:e.aircraftModelId,label:e.modelName,aircraftTypeId:e.aircraftTypeId})}))}},{key:"ondashnumberSuccessful",value:function(e){this.allDashnumberInfo=e}},{key:"getAircraftDashNumber",value:function(e){var t=this,n=e.target.value;n&&(n=n.split(":")[1],this.aircraftdashId=n),this.dashnumberservices.getByModelId(this.aircraftdashId).subscribe((function(e){t.ondashnumberSuccessful(e)}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"aircraftModalChange_1",value:function(e,t,n){var a=this,r=e;"edit"!=n&&((r=e.target.value)&&(r=r.split(":")[1])),""!=r&&null!=r&&null!=r?this.dashnumberservices.getCapesDashNumberByModelTypeId(r,t).subscribe((function(e){if(e&&0!=e.length){var t=e.reduce((function(e,t){return e.find((function(e){return e.dashNumberId===t.dashNumberId}))?e:e.concat([t])}),[]);a.search_AircraftDashNumberList=t.map((function(e){return{label:e.modelName+"-"+e.dashNumber,value:e.dashNumberId,modelId:e.aircraftModelId}}))}}),(function(e){var t=e;a.errorMessageHandler(t)})):this.search_AircraftDashNumberList=[],this.aircraftDataEdit.aircraftDashNumberId=null}},{key:"cunstructItemMastars",value:function(){var e=this;this.capabilityEditCollection.forEach((function(t){var n=t.capability;if(1!=n.isDelete){e.currentAsset.assetRecordId=n.assetRecordId;var a=n.capabilityTypeId-1,r=e.capabilityTypeData[a];-1==r.selectedAircraftTypes.indexOf(n.aircraftTypeId)&&(r.selectedAircraftTypes.push(n.aircraftTypeId),r.selectedManufacturer.push({value:n.aircraftTypeId,label:e.getAircraftTypeName(n.aircraftTypeId)})),r.selectedAircraftModelTypes.push(n.aircraftModelId),e.addExistingData(r,n)}})),this.capabilityTypeData.forEach((function(t){t&&t.selectedAircraftModelTypes&&t.selectedAircraftModelTypes.length>0&&e.loadModalsForExistingRecords(t)}))}},{key:"getAircraftTypeName",value:function(e){for(var t="",n=0;n<this.manufacturerData.length;n++)if(this.manufacturerData[n].value==e){t=this.manufacturerData[n].label;break}return t}},{key:"getAirCraftModalName",value:function(e,t){for(var n="",a=0;a<e.length;a++)if(e[a].value==t){n=e[a].label;break}return n}},{key:"getExistingRowBuList",value:function(e,t){for(var n=0;n<this.allManagemtninfo.length;n++)this.allManagemtninfo[n].parentId==e&&t.buList.push(this.allManagemtninfo[n])}},{key:"getExistingRowDepartmentlist",value:function(e,t){for(var n=0;n<this.allManagemtninfo.length;n++)this.allManagemtninfo[n].parentId==e&&t.departmentList.push(this.allManagemtninfo[n])}},{key:"getExistingRowDivisionlist",value:function(e,t){for(var n=0;n<this.allManagemtninfo.length;n++)this.allManagemtninfo[n].parentId==e&&t.divisionlist.push(this.allManagemtninfo[n])}},{key:"setManagementStrucureData",value:function(e){this.managementStructureData=[],this.checkMSParents(e.managementStructureId),4==this.managementStructureData.length&&(e.companyId=this.managementStructureData[3],e.buisinessUnitId=this.managementStructureData[2],e.departmentId=this.managementStructureData[1],e.divisionId=this.managementStructureData[0]),3==this.managementStructureData.length&&(e.companyId=this.managementStructureData[2],e.buisinessUnitId=this.managementStructureData[1],e.departmentId=this.managementStructureData[0]),2==this.managementStructureData.length&&(e.companyId=this.managementStructureData[1],e.buisinessUnitId=this.managementStructureData[0]),1==this.managementStructureData.length&&(e.companyId=this.managementStructureData[0])}},{key:"checkMSParents",value:function(e){this.managementStructureData.push(e);for(var t=0;t<this.allManagemtninfo.length;t++)if(this.allManagemtninfo[t].managementStructureId==e&&this.allManagemtninfo[t].parentId){this.checkMSParents(this.allManagemtninfo[t].parentId);break}}},{key:"addExistingData",value:function(e,t){var n=t;n.aircraftTypeName=this.getAircraftTypeName(t.aircraftTypeId),n.aircraftModelName="",n.entryDate=new Date,n.isVerified=!1,n.isActive=!0,n.verifiedBy="",n.aircraftManufacturer=this.getAircraftTypeName(t.aircraftTypeId),n.dateVerified=new Date,this.setManagementStrucureData(n);var a=this.formBuilder.group(n);switch(e.formArrayName){case"mfgForm":this.mfgFormArray.push(a),this.mfgFormArray.controls.length;break;case"overhaulForm":this.overhaulFormArray.push(a),this.overhaulFormArray.controls.length;break;case"distributionForm":this.distributionFormArray.push(a),this.distributionFormArray.controls.length;break;case"certificationForm":this.certificationFormArray.push(a),this.certificationFormArray.controls.length;break;case"repairForm":this.repairFormArray.push(a),this.repairFormArray.controls.length;break;case"exchangeForm":this.exchangeFormArray.push(a),this.exchangeFormArray.controls.length}}},{key:"checkIsExisted",value:function(e,t,n,a,r){var s=!1;return a.controls.forEach((function(a){if(a.controls.capabilityTypeId.value==e&&a.controls.aircraftTypeId.value==t&&a.controls.aircraftModelId.value==n)s=!0,a.controls.isDelete.setValue(!1);else{a.controls.aircraftTypeId.value,r.selectedAircraftTypes;var i=a.controls.aircraftModelId.value;r.selectedAircraftModelTypes.indexOf(i)}})),s}},{key:"dismissModel",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}},{key:"dismissModelWithAlert",value:function(){if(this.aircraftData&&this.aircraftData.length>0){this.nextOrPreviousTab="Close";var e=this.tabRedirectConfirmationModal2;this.modal=this.modalService.open(e,{size:"sm"})}else this.isDeleteMode=!1,this.isEditMode=!1,H("#addShippingInfo").modal("hide")}},{key:"closeHistory",value:function(){H("#contentHist").modal("hide")}},{key:"redirectToTab",value:function(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close(),this.totalRecords1=0,this.totalPages1=0,H("#addShippingInfo").modal("hide")}},{key:"addModels",value:function(e){var t=this,n=new Z.a;e.selectedManufacturer.forEach((function(a){if(n.assetRecordId=t.currentAsset.assetRecordId,n.aircraftTypeId=a.value,n.aircraftTypeName=a.label,n.capabilityTypeId=e.CapabilityTypeId,n.capabilityTypeName=e.selectedCap,n.aircraftManufacturer=a.label,n.PartId=e.selectedPartId,n.itemMasterId=t.itemMasterId,n.AssetCapesId=t.AssetCapesId,n.aircraftModelName="Undefined",n.DashNumber="Undefined",0==e.selectedModel.length){var r=t.formBuilder.group(n);t.mfgFormArray.push(r);var s=t.mfgFormArray.controls.length-1;t.mfgFormArray.controls[s].buList=[],t.mfgFormArray.controls[s].departmentList=[],t.mfgFormArray.controls[s].divisionlist=[]}e.selectedModel.forEach((function(r){if(r.aircraftTypeId==a.value){if(n.aircraftModelName=r.label,n.aircraftModelId=r.value,0==e.selectedDashNumbers2.length){var s=t.formBuilder.group(n);if(0==t.checkIsExisted(e.CapabilityTypeId,a.value,r.value,t.mfgFormArray,e)){t.mfgFormArray.push(s);var i=t.mfgFormArray.controls.length-1;t.mfgFormArray.controls[i].buList=[],t.mfgFormArray.controls[i].departmentList=[],t.mfgFormArray.controls[i].divisionlist=[]}}e.selectedDashNumbers2.forEach((function(s){if(s.modelId==r.value){n.DashNumber=s.label,n.AircraftDashNumberId=s.value,e.CapabilityTypeId;var i=t.formBuilder.group(n);if(0==t.checkIsExisted(e.CapabilityTypeId,a.value,r.value,t.mfgFormArray,e)){t.mfgFormArray.push(i);var o=t.mfgFormArray.controls.length-1;t.mfgFormArray.controls[o].buList=[],t.mfgFormArray.controls[o].departmentList=[],t.mfgFormArray.controls[o].divisionlist=[]}else t.mfgFormArray.push(i),t.mfgFormArray.controls.length}else{var l=t.formBuilder.group(n);if(0==t.checkIsExisted(e.CapabilityTypeId,a.value,r.value,t.mfgFormArray,e)){t.mfgFormArray.push(l);var c=t.mfgFormArray.controls.length-1;t.mfgFormArray.controls[c].buList=[],t.mfgFormArray.controls[c].departmentList=[],t.mfgFormArray.controls[c].divisionlist=[]}else t.mfgFormArray.push(l),t.mfgFormArray.controls.length}}))}}))}))}},{key:"aircraftModalChange",value:function(e,t){var n=this;e.value,t.selectedModel=[],t.selectedDashNumbers=[],this.search_AircraftDashNumberList=[],0==this.modelUnknown&&t.selectedAircraftModelTypes&&0!=t.selectedAircraftModelTypes.length&&1==this.dashNumberUnknown?this.disableCapesSave=!1:this.disableCapesSave=!0,t.selectedAircraftModelTypes&&0!=t.selectedAircraftModelTypes.length&&this.dashnumberservices.getDashNumberByModelTypeId(t.selectedAircraftModelTypes,t.selectedAircraftTypes).subscribe((function(e){var t=e;n.search_AircraftDashNumberList=t.map((function(e){return{label:e.dashNumber,value:e.dashNumberId,modelId:e.aircraftModelId}}))}),(function(e){var t=e;n.errorMessageHandler(t)}))}},{key:"dashNumberChange",value:function(e,t){var n=this,a=e.value;0==this.modelUnknown&&t.selectedAircraftModelTypes&&0!=t.selectedAircraftModelTypes.length&&0==this.dashNumberUnknown&&a?this.disableCapesSave=!1:this.disableCapesSave=!0,t.selectedDashNumbers2=[],a.forEach((function(e){n.search_AircraftDashNumberList.forEach((function(n){e==n.value&&t.selectedDashNumbers2.push(n)}))}))}},{key:"cunstructFormForEdit",value:function(){this.manufacturerData.length>0&&this.cunstructItemMastars()}},{key:"resetAircraftModelsorDashNumbers",value:function(e,t){this.disableSaveForEdit=!1,this.modelUnknown&&(this.disableCapesSave=!1,this.selectedModelId=void 0,this.selectedDashnumber=void 0,this.capabilityForm.selectedAircraftDataModels=void 0,this.capabilityForm.selectedAircraftModelTypes=void 0,this.capabilityForm.selectedModel=void 0,this.capabilityForm.selectedDashNumbers=void 0,this.capabilityForm.selectedDashNumbers2=void 0),1==t&&0==e.target.checked&&0==this.assetServices.isCapsEditMode&&(this.disableCapesSave=!0),1==t&&1==e.target.checked&&0==this.assetServices.isCapsEditMode&&(this.disableCapesSave=!1),2==t&&0==e.target.checked&&0==this.assetServices.isCapsEditMode&&(this.disableCapesSave=!0),2==t&&1==e.target.checked&&0==this.assetServices.isCapsEditMode&&(this.disableCapesSave=!1),1==t&&0==e.target.checked&&1==this.assetServices.isCapsEditMode&&(this.disableSaveForEdit=!0),2==t&&0==e.target.checked&&1==this.assetServices.isCapsEditMode&&(this.disableSaveForEdit=!0),this.dashNumberUnknown&&(0==this.modelUnknown&&this.capabilityForm.selectedAircraftModelTypes&&0!=this.capabilityForm.selectedAircraftModelTypes.length&&this.dashNumberUnknown&&(this.disableCapesSave=!1),0==this.modelUnknown&&this.aircraftDataEdit.aircraftModelId&&this.dashNumberUnknown&&(this.disableSaveForEdit=!1),this.selectedDashnumber=void 0,this.capabilityForm.selectedDashNumbers=void 0,this.capabilityForm.selectedDashNumbers2=void 0),1==t&&0==e.target.checked&&1==this.assetServices.isCapsEditMode&&(this.loadModalsForExistingRecords_1(this.capabilityForm,this.aircraftDataEdit.aircraftTypeId),this.aircraftDataEdit.aircraftModelId="",this.aircraftDataEdit.aircraftDashNumberId="",this.dashNumberUnknown=!0),1==t&&1==e.target.checked&&1==this.assetServices.isCapsEditMode&&(this.aircraftDataEdit.aircraftModelId="",this.aircraftDataEdit.aircraftDashNumberId=""),2==t&&0==e.target.checked&&1==this.assetServices.isCapsEditMode&&(this.aircraftModalChange_1(this.aircraftDataEdit.aircraftModelId,this.aircraftDataEdit.aircraftTypeId,"edit"),this.aircraftDataEdit.aircraftDashNumberId=""),2==t&&1==e.target.checked&&1==this.assetServices.isCapsEditMode&&(this.aircraftDataEdit.aircraftDashNumberId="")}},{key:"openDelete",value:function(e,t){this.isEditMode=!1,this.isDeleteMode=!0,this.assetServices.CapeslistCollection=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1,windowClass:"assetMangecls"})}},{key:"removeAsset",value:function(){var e=this;this.assetServices.removeCapesById(this.assetServices.CapeslistCollection.assetCapesId).subscribe((function(t){e.alertService.showMessage("Success","Asset Capes removed successfully.",T.d.success),e.getList(e.lazyLoadEventData),e.modal.close()}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"resetFormArray",value:function(e){switch(e.formArrayName){case"mfgForm":this.mfgFormArray.controls=[];break;case"overhaulForm":this.overhaulFormArray.controls=[];break;case"distributionForm":this.distributionFormArray.controls=[];break;case"certificationForm":this.certificationFormArray.controls=[];break;case"repairForm":this.repairFormArray.controls=[];break;case"exchangeForm":this.exchangeFormArray.controls=[]}}},{key:"getAircraftModelByManfacturer",value:function(e){var t=this;this.newValue=e.target.value,this.newValue&&(this.aircraftModelService.getAircraftModelListByManufactureId(this.selectedAircraftId).subscribe((function(e){var n=e[0];t.LoadValues=n.map((function(e){return{label:e.modelName,value:e}}))}),(function(e){var n=e;t.errorMessageHandler(n)})),this.selectedModelId=void 0,this.selectedDashnumber=void 0)}},{key:"manufacturerChange",value:function(e,t){var n=this;this.capabilityForm.selectedAircraftModelTypes="",this.capabilityForm.selectedAircraftDataModels="";var a=e.value;t.selectedManufacturer=[],t.selectedAircraftDataModels=[],this.search_AircraftDashNumberList=[],this.selectedAircraftId=a,this.aircraftTypeId=a,1==this.assetServices.isCapsEditMode&&this.loadModalsForExistingRecords_1(t,this.selectedAircraftId),this.manufacturerData.forEach((function(e){a==e.value&&(t.selectedManufacturer.push(e),n.newValue=e.label)})),this.aircraftDataEdit.aircraftModelId=null,this.aircraftDataEdit.aircraftDashNumberId=null}},{key:"openCapess",value:function(){this.aircraftData=[],this.capabilityForm={},this.modelUnknown=!0,this.assetServices.isCapsEditMode=!1,this.disableAdd=!0,this.actionHide=!0,this.dashNumberUnknown=!0}},{key:"mapAircraftInformation",value:function(e){var t=this,n=Object.assign({},e);n.selectedDashNumbers&&0==n.selectedDashNumbers.length&&(this.dashNumberUnknown=!0),this.viewTable=!0,this.assetServices.isCapsEditMode||(this.assetServices.isCapsEditMode=!1),this.searchAircraftParams="CapabilityId=".concat(n.CapabilityTypeId,"&PartId=").concat(this.itemMasterId,"&AircraftTypeId=").concat(n.selectedAircraftTypes,"&AircraftModelId=").concat(n.selectedAircraftModelTypes,"&DashNumberId=").concat(n.selectedDashNumbers?n.selectedDashNumbers:void 0),this.assetServices.GetAssetCapesRecordCheck(this.currentAsset.assetRecordId,this.searchAircraftParams).subscribe((function(e){if(t.actionHide=!1,e[0],null==e[0]){if(0==t.assetServices.isCapsEditMode)void 0!==n.selectedAircraftTypes&&void 0!==n.selectedAircraftModelTypes&&void 0!==n.selectedDashNumbers&&t.dashnumberservices.getAllDashModels(n.selectedAircraftModelTypes,n.selectedAircraftTypes,n.selectedDashNumbers).subscribe((function(e){var a=e;t.aircraftData=a.map((function(e){return{AircraftType:e.aircraft,AircraftModel:e.model,DashNumber:e.dashNumber,AircraftModelId:e.modelid,DashNumberId:e.dashNumberId,CapibilityType:n.selectedCap,PartNumber:n.selectedPartId.partNumber,CapabilityId:n.CapabilityTypeId,ItemMasterId:t.itemMasterId,AircraftTypeId:n.selectedAircraftTypes,AircraftDashNumberId:e.dashNumberId,AssetRecordId:t.currentAsset.assetRecordId,MasterCompanyId:t.authService.currentUser.masterCompanyId,CreatedBy:t.userName,UpdatedBy:t.userName,CreatedDate:new Date,UpdatedDate:new Date,isActive:!0,isDelete:!1}}))})),void 0!==t.selectedAircraftId&&t.modelUnknown&&(t.aircraftData=[{AircraftType:t.newValue,AircraftModel:null,DashNumber:null,AircraftModelId:"",DashNumberId:"",CapibilityType:n.selectedCap,PartNumber:n.selectedPartId.partNumber,CapabilityId:n.CapabilityTypeId,ItemMasterId:t.itemMasterId,AircraftTypeId:n.selectedAircraftTypes,AircraftDashNumberId:null,AssetRecordId:t.currentAsset.assetRecordId,MasterCompanyId:t.authService.currentUser.masterCompanyId,CreatedBy:t.userName,UpdatedBy:t.userName,CreatedDate:new Date,UpdatedDate:new Date,isActive:!0,isDelete:!1}]),void 0!==n.selectedAircraftTypes&&void 0!==n.selectedAircraftModelTypes&&(t.dashNumberUnknown||n.selectedDashNumbers&&0==n.selectedDashNumbers.length)&&n.selectedAircraftModelTypes&&0!=n.selectedAircraftModelTypes.length&&(t.aircraftData=n.selectedAircraftModelTypes.map((function(e){return{AircraftType:t.newValue,AircraftModel:e?Object(z.g)("label","value",e,n.selectedAircraftDataModels):null,DashNumber:null,AircraftModelId:e,DashNumberId:"",CapibilityType:n.selectedCap,PartNumber:n.selectedPartId.partNumber,CapabilityId:n.CapabilityTypeId,ItemMasterId:t.itemMasterId,AircraftTypeId:n.selectedAircraftTypes,AircraftDashNumberId:null,AssetRecordId:t.currentAsset.assetRecordId,MasterCompanyId:t.authService.currentUser.masterCompanyId,CreatedBy:t.userName,UpdatedBy:t.userName,CreatedDate:new Date,UpdatedDate:new Date,isActive:!0,isDelete:!1}})));else{if(n.selectedAircraftModelTypes&&n.selectedAircraftModelTypes.length>1||n.selectedDashNumbers&&n.selectedDashNumbers.length>1)return void t.alertService.showMessage("","Multiple Records cannot be added in edit",T.d.error);void 0!==n.selectedAircraftTypes&&void 0!==n.selectedAircraftModelTypes&&void 0!==n.selectedDashNumbers&&t.dashnumberservices.getAllDashModels(n.selectedAircraftModelTypes,n.selectedAircraftTypes,n.selectedDashNumbers).subscribe((function(e){var a=e;t.aircraftData=a.map((function(e){return{AssetCapesId:t.AssetCapesId,AircraftType:e.aircraft,AircraftModel:e.model,DashNumber:e.dashNumber,AircraftModelId:e.modelid,DashNumberId:e.dashNumberId,CapibilityType:n.selectedCap,PartNumber:n.selectedPartId.partNumber,CapabilityId:n.CapabilityTypeId,ItemMasterId:t.itemMasterId,AircraftTypeId:n.selectedAircraftTypes,AircraftDashNumberId:e.dashNumberId,AssetRecordId:t.currentAsset.assetRecordId,MasterCompanyId:t.authService.currentUser.masterCompanyId,CreatedBy:t.userName,UpdatedBy:t.userName,CreatedDate:new Date,UpdatedDate:new Date,isActive:!0,isDelete:!1}}))})),void 0!==t.selectedAircraftId&&t.modelUnknown&&(t.aircraftData=[{AssetCapesId:t.AssetCapesId,AircraftType:t.newValue,AircraftModel:null,DashNumber:null,AircraftModelId:"",DashNumberId:"",CapibilityType:n.selectedCap,PartNumber:n.selectedPartId.partNumber,CapabilityId:n.CapabilityTypeId,ItemMasterId:t.itemMasterId,AircraftTypeId:n.selectedAircraftTypes,AircraftDashNumberId:null,AssetRecordId:t.currentAsset.assetRecordId,MasterCompanyId:t.authService.currentUser.masterCompanyId,CreatedBy:t.userName,UpdatedBy:t.userName,CreatedDate:new Date,UpdatedDate:new Date,isActive:!0,isDelete:!1}]),void 0!==t.selectedAircraftId&&void 0!==n.selectedModel&&t.dashNumberUnknown&&(console.log("dash nu,ber unknown",n),t.aircraftData=n.selectedModel.map((function(e){return{AssetCapesId:t.AssetCapesId,AircraftType:t.newValue,AircraftModel:e.label,DashNumber:null,AircraftModelId:e.value,DashNumberId:"",CapibilityType:n.selectedCap,PartNumber:n.selectedPartId.partNumber,CapabilityId:n.CapabilityTypeId,ItemMasterId:t.itemMasterId,AircraftTypeId:n.selectedAircraftTypes,AircraftDashNumberId:null,AssetRecordId:t.currentAsset.assetRecordId,MasterCompanyId:t.authService.currentUser.masterCompanyId,CreatedBy:t.userName,UpdatedBy:t.userName,CreatedDate:new Date,UpdatedDate:new Date,isActive:!0,isDelete:!1}})))}t.totalRecords1=t.aircraftData.length?t.aircraftData.length:0,console.log("event2",t.totalRecords1,t.pageSize1),t.totalPages1=Math.ceil(t.totalRecords1/t.pageSize1),console.log("event2",t.pageSize1),t.capabilityForm.selectedDashNumbers="",t.dashNumberUnknown=!0,t.capabilityForm.selectedAircraftModelTypes="",t.modelUnknown=!0,t.capabilityForm.selectedAircraftTypes="",t.capabilityForm.selectedPartId="",t.capabilityForm.CapabilityTypeId=""}else t.alertService.showMessage("","Same Record Already Exists",T.d.error)}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"loadData2",value:function(e){var t=parseInt(e.first)/e.rows;this.pageIndex=t,this.pageSize1=t,e.first=t,console.log("event",this.pageSize1)}},{key:"saveCapabilities",value:function(e,t){var n=this,a=this.aircraftData;if(0==this.assetServices.isCapsEditMode)this.assetServices.saveManfacturerinforcapes(a,t).subscribe((function(e){n.alertService.showMessage("Success","Asset capes saved successfully.",T.d.success),n.capabilityForm={selectedCap:"",CapabilityTypeId:0,selectedPartId:[],selectedAircraftDataModels:[],selectedAircraftModelTypes:[],selectedAircraftTypes:[],selectedManufacturer:[],selectedModel:[],selectedDashNumbers:[],selectedDashNumbers2:[]},n.getList(n.lazyLoadEventData),n.totalRecords1=0,n.totalPages1=0}),(function(e){var t=e;n.errorMessageHandler(t)})),this.mfgFormArray.controls=[];else{this.allPartnumbersInfo.forEach((function(e){e.partNumber==n.aircraftDataEdit.partNumber&&(n.aircraftDataEdit.itemMasterId=e.itemMasterId)})),this.aircraftDataEdit.itemMasterId=this.aircraftDataEdit.partNumber.itemMasterId,this.aircraftDataEdit.partNumber=this.aircraftDataEdit.partNumber.partNumber;var r=[Object.assign({},this.aircraftDataEdit,{assetRecordId:this.AssetId,masterCompanyId:this.authService.currentUser.masterCompanyId,createdBy:this.userName,updatedBy:this.userName})];this.assetServices.saveManfacturerinforcapes(r,t).subscribe((function(e){n.alertService.showMessage("Success","Asset capes updated successfully.",T.d.success),n.capabilityForm={selectedCap:"",CapabilityTypeId:0,selectedPartId:[],selectedAircraftDataModels:[],selectedAircraftModelTypes:[],selectedAircraftTypes:[],selectedManufacturer:[],selectedModel:[],selectedDashNumbers:[],selectedDashNumbers2:[]},n.getList(n.lazyLoadEventData)}),(function(e){var t=e;n.errorMessageHandler(t)})),this.mfgFormArray.controls=[]}"add"==t?H("#addShippingInfo").modal("hide"):this.modal.close()}},{key:"addBtnTitle",value:function(e){var t="";return t=this.currentAsset.assetRecordId<1?"Please Select PN":0==e.selectedAircraftTypes.length?"Please Select Aircraft Type":0==e.selectedAircraftModelTypes.length?"Please Select Aircraft Modal":"Add "+e.Description,t}},{key:"validateForm",value:function(e,t){var n="";return e.get(t).valid||(n="form-validation-error"),n}},{key:"openCapes",value:function(e){this.isEditMode=!1,this.assetServices.isCapsEditMode=!1,this.isDeleteMode=!0,this.mfgFormArray.controls=[],this.aircraftData=[],this.capabilityForm={selectedCap:"",CapabilityTypeId:0,selectedPartId:[],selectedAircraftDataModels:[],selectedAircraftModelTypes:[],selectedAircraftTypes:[],selectedManufacturer:[],selectedModel:[],selectedDashNumbers:[],selectedDashNumbers2:[],modelUnknown:!1},this.modelUnknown=!1,this.dashNumberUnknown=!1,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1})}},{key:"onCapesLoaded",value:function(e){this.allCapesInfo=e}},{key:"loadCapesData",value:function(){var e=this;this.currentAsset&&this.assetServices.getcapabilityListData(this.currentAsset.assetRecordId).subscribe((function(t){e.onCapesLoaded(t[0])}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"getmemo2",value:function(e){this.disableSaveForEdit=!1}},{key:"opencapesToEdit",value:function(e,t){var n=this;this.disableSaveForEdit=!0,this.aircraftDataEdit={},this.mfgFormArray.controls=[],this.overhaulFormArray.controls=[],this.distributionFormArray.controls=[],this.certificationFormArray.controls=[],this.repairFormArray.controls=[],this.exchangeFormArray.controls=[],this.capabilityEditCollection=[];var a=[];this.assetServices.isCapsEditMode=!0,this.isSaving=!0,this.AssetCapesId=t.assetCapesId,this.loadModalsForExistingRecords_1(this.capabilityForm,t.aircraftTypeId),this.aircraftModalChange_1(t.aircraftModelId,t.aircraftTypeId,"edit"),this.assetServices.getAssetCapabilityData(t.assetCapesId).subscribe((function(e){a=e,n.aircraftDataEdit=e[0],n.aircraftDataEdit.partNumber={partNumber:e[0].partNumber,itemMasterId:e[0].itemMasterId},a&&(n.capabilityid=e[0].capabilityId,n.partNumber=e[0].partNumber,n.itemMasterId=e[0].itemMasterId,n.aircraftTypeId=e[0].aircraftTypeId,n.aircraftmodelId=e[0].aircraftModelId,n.aircraftdashId=e[0].aircraftDashNumberId),n.aircraftDataEdit.aircraftModelId?n.modelUnknown=!1:n.modelUnknown=!0,n.aircraftDataEdit.aircraftDashNumberId?n.dashNumberUnknown=!1:n.dashNumberUnknown=!0}),(function(e){var t=e;n.errorMessageHandler(t)})),this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1})}},{key:"saveCapes",value:function(){this.assetServices.listCollection=this.local,this.activeIndex=2,this.assetServices.indexObj.next(this.activeIndex);this.local.assetId;this.alertService.showMessage("Success","Asset capes saved successfully.",T.d.success),this.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration/"+this.local.assetRecordId)}},{key:"backClick",value:function(){this.assetServices.listCollection=this.local,this.activeIndex=0,this.assetServices.indexObj.next(this.activeIndex),this.assetServices.isEditMode=!0,this.isSaving=!0;this.local.assetId;this.route.navigateByUrl("/assetmodule/assetpages/app-edit-asset/"+this.local.assetRecordId)}},{key:"toggleActiveStatus",value:function(e){var t=this;this.assetServices.updateCapes({assetCapesId:e.assetCapesId,isActive:e.isActive},this.userName).subscribe((function(e){t.alertService.showMessage("Success","Asset capes updated successfully.",T.d.success),t.getList(t.lazyLoadEventData)}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"onCapesDataSuccessful",value:function(e,t){Object.assign({},e,{isActive:t}),this.alertService.showMessage("Success","Asset capes saved successfully.",T.d.success)}},{key:"onCapesDataFail",value:function(e){}},{key:"nextClick",value:function(){this.currentAsset=this.assetServices.listCollection,this.activeIndex=2,this.assetServices.indexObj.next(this.activeIndex);var e=this.currentAsset.assetRecordId;this.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration/"+e)}},{key:"closeDeleteModal",value:function(){H("#downloadConfirmation").modal("hide")}},{key:"exportCSV",value:function(e){var t=this;this.exportData=[],this.isSpinnerVisible=!0;var n=!!this.currentDeletedstatus,a=this.currentAsset.assetRecordId,r={first:0,rows:e.totalRecords,sortOrder:1,filters:{status:this.currentstatus2,isDeleted:n},globalFilter:""};this.assetServices.downloadAllAssetCapsList(r,a).subscribe((function(n){t.loadingIndicator=!1,e._value=n.results.map((function(e){return Object.assign({},e,{createdDate:e.createdDate?t.datePipe.transform(e.createdDate,"MMM-dd-yyyy hh:mm a"):"",updatedDate:e.updatedDate?t.datePipe.transform(e.updatedDate,"MMM-dd-yyyy hh:mm a"):""})})),e.exportCSV(),e.value=t.allCapesInfo,t.isSpinnerVisible=!1}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"errorMessageHandler",value:function(e){this.isSpinnerVisible=!1,this.alertService.showMessage("Error",e,T.d.error)}},{key:"changeStatus",value:function(e){}},{key:"mfgFormArray",get:function(){return this.capabilitiesForm.get("mfgForm")}},{key:"overhaulFormArray",get:function(){return this.capabilitiesForm.get("overhaulForm")}},{key:"distributionFormArray",get:function(){return this.capabilitiesForm.get("distributionForm")}},{key:"certificationFormArray",get:function(){return this.capabilitiesForm.get("certificationForm")}},{key:"repairFormArray",get:function(){return this.capabilitiesForm.get("repairForm")}},{key:"exchangeFormArray",get:function(){return this.capabilitiesForm.get("exchangeForm")}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();ne.ctorParameters=function(){return[{type:S.ActivatedRoute},{type:L.c},{type:T.b},{type:J.a},{type:S.Router},{type:x.a},{type:Q.a},{type:U.a},{type:i.FormBuilder},{type:O.a},{type:te.a},{type:ee.a},{type:_.a},{type:c.DatePipe}]},a.b([Object(r.ViewChild)("tabRedirectConfirmationModal2",{static:!1})],ne.prototype,"tabRedirectConfirmationModal2",void 0),a.b([Object(r.Input)()],ne.prototype,"isView",void 0),a.b([Object(r.Input)()],ne.prototype,"viewassetRecordId",void 0),ne=a.b([Object(r.Component)({selector:"app-asset-capes",template:a.c(n("1tnc")).default,animations:[k.a],providers:[c.DatePipe],styles:[a.c(n("PNNn")).default]})],ne);var ae=function(){function e(t){_classCallCheck(this,e),this.assetService=t}return _createClass(e,[{key:"ngAfterViewInit",value:function(){throw new Error("Method not implemented.")}},{key:"ngOnInit",value:function(){this.assetService.currentUrl="/assetmodule/assetpages/app-asset-general-information",this.assetService.bredcrumbObj.next(this.assetService.currentUrl),this.assetService.ShowPtab=!0,this.assetService.alertObj.next(this.assetService.ShowPtab),this.activeIndex=0}}]),e}();ae.ctorParameters=function(){return[{type:x.a}]},ae=a.b([Object(r.Component)({selector:"app-asset-general-information",template:a.c(n("k+MB")).default,styles:[a.c(n("nFeV")).default]})],ae);var re=function(){function e(t,n,a,r,s,i,o,l,c){_classCallCheck(this,e),this.router=t,this.assetService=n,this.vendorService=a,this.route=r,this.authService=s,this.modalService=i,this.alertService=o,this.glAccountService=l,this.commonservice=c,this.currentMaintenance={},this.disableSaveForEdit=!1,this.isSpinnerVisible=!1,this.allGlInfo=[],this.allVendorInfo=[],this.formData=new FormData,this.warrantyCompanySelectList=[],this.isShowVendorDropDown=!1,this.isShowOtherTextBox=!1,this.finalData={},this.setEditArray=[],this.arrayVendlsit=[],this.datadissmiss=!1,this.allVendorInfoFilter=[],this.allGlInfoFilter=[],this.disableEditor=!0,this.AssetId=this.router.snapshot.params.id,this.activeIndex=3}return _createClass(e,[{key:"ngOnInit",value:function(){0==this.assetService.isEditMode?this.breadcrumbs=[{label:"Asset"},{label:"Create Asset"}]:this.breadcrumbs=[{label:"Asset"},{label:"Edit Asset"}],this.getModuleListForVendorOther(),this.AssetId=this.router.snapshot.params.id,this.AssetId&&this.GetAssetData(this.AssetId),this.disableSaveForEdit=!0,this.activeIndex=3,this.glList(""),this.vendorList("")}},{key:"GetAssetData",value:function(e){var t=this;this.isSpinnerVisible=!0,null!=e&&this.assetService.getByAssetId(e).subscribe((function(e){t.onassetdataSuccessful(e)}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"onassetdataSuccessful",value:function(e){var t=this;this.activeIndex=3,this.assetService.indexObj.next(this.activeIndex),this.assetService.listCollection=e[0],this.currentMaintenance=e[e.length-1],this.isSpinnerVisible=!1,this.currentMaintenance.assetRecordId=e[0].assetRecordId,1==this.assetService.listCollection.assetMain&&(this.assetService.isEditMode=!0),this.assetService.listCollection.assetRecordId=e[0].assetRecordId,this.setAutocompleteOnLoad(this.currentMaintenance),0!=this.currentMaintenance.warrantyDefaultVendorId||null!=this.currentMaintenance.warrantyDefaultVendorId?this.warrantyCompanySelectList.forEach((function(e){"Vendor"==e.moduleName&&(t.currentMaintenance.warrantyCompanySelectId=e.moduleId,t.setWarrenty(e.moduleId))})):this.warrantyCompanySelectList.forEach((function(e){"Other"==e.moduleName&&(t.currentMaintenance.warrantyCompanySelectId=e.moduleId,t.setWarrenty(e.moduleId))})),this.glList("")}},{key:"getmemo",value:function(e){this.disableSaveForEdit=!1}},{key:"getModuleListForVendorOther",value:function(){var e=this;this.commonservice.getModuleListForVendorOther().subscribe((function(t){e.warrantyCompanySelectList=t}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"setWarrenty",value:function(e){var t=this;this.currentMaintenance.warrantyCompanySelectId=e,this.currentValue="",this.warrantyCompanySelectList.forEach((function(n){n.moduleId==e&&(t.currentValue=n.moduleName)})),"Vendor"==this.currentValue?(this.isShowVendorDropDown=!0,this.isShowOtherTextBox=!1):"Others"==this.currentValue&&(this.isShowOtherTextBox=!0,this.isShowVendorDropDown=!1)}},{key:"removeFile",value:function(e){this.formData.delete(e.file.name)}},{key:"saveWarrenty",value:function(){var e=this;if(this.finalData={},this.currentMaintenance.createdBy=this.userName,this.currentMaintenance.updatedBy=this.userName,this.currentMaintenance.masterCompanyId=this.authService.currentUser.masterCompanyId,1==this.currentMaintenance.assetMain){if(this.currentMaintenance.updatedBy=this.userName,this.currentMaintenance.masterCompanyId=this.authService.currentUser.masterCompanyId,this.isSaving=!0,0!=this.currentMaintenance.assetIsMaintenanceReqd&&0!=this.currentMaintenance.isDepreciable||(this.currentMaintenance.assetMaintenanceIsContract=!1,this.currentMaintenance.assetMaintenanceContractFile="",this.currentMaintenance.maintenanceFrequencyMonths=0,this.currentMaintenance.maintenanceFrequencyDays=0,this.currentMaintenance.maintenanceMemo="",this.currentMaintenance.maintenanceDefaultVendorId=null,this.currentMaintenance.maintenanceGLAccountid=null),this.currentMaintenance.maintenanceFrequencyMonths=this.currentMaintenance.maintenanceFrequencyMonths?this.currentMaintenance.maintenanceFrequencyMonths:0,this.currentMaintenance.maintenanceFrequencyDays=this.currentMaintenance.maintenanceFrequencyDa?this.currentMaintenance.maintenanceFrequencyDa:0,0!=this.currentMaintenance.isWarrantyRequired&&0!=this.currentMaintenance.isDepreciable||(this.currentMaintenance.warranty="",this.currentMaintenance.warrantyCompany="",this.currentMaintenance.warrantyStatus="",this.currentMaintenance.warrantyDefaultVendorId=null,this.currentMaintenance.warrantyGLAccountId=null),1==this.currentMaintenance.assetIsMaintenanceReqd&&0==this.currentMaintenance.maintenanceFrequencyMonths&&0==this.currentMaintenance.maintenanceFrequencyDays)return void this.alertService.showMessage("Warning","Maintenance Months & Days Cant be Zero",T.d.warn);this.finalData=Object.assign({},this.currentMaintenance),this.finalData.maintenanceFrequencyDays=null!=this.finalData.maintenanceFrequencyDays?this.finalData.maintenanceFrequencyDays:0,this.finalData.maintenanceFrequencyMonths=null!=this.finalData.maintenanceFrequencyMonths?this.finalData.maintenanceFrequencyMonths:0,this.finalData.warrantyDefaultVendorId=this.finalData.warrantyDefaultVendorId?this.finalData.warrantyDefaultVendorId.vendorId:null,this.finalData.warrantyGLAccountId=this.finalData.warrantyGLAccountId?this.finalData.warrantyGLAccountId.glAccountId:null,this.finalData.maintenanceGLAccountId=this.finalData.maintenanceGLAccountId?this.finalData.maintenanceGLAccountId.glAccountId:null,this.finalData.maintenanceDefaultVendorId=this.finalData.maintenanceDefaultVendorId?this.finalData.maintenanceDefaultVendorId.vendorId:null,this.isSpinnerVisible=!0,this.assetService.updateAssetMaintance(this.finalData).subscribe((function(t){e.disableSaveForEdit=!0,e.currentMaintenance.updatedBy=e.userName,setTimeout((function(){e.isSpinnerVisible=!1}),1200),e.alertService.showMessage("Success","Asset Maintenance updated successfully.",T.d.success)}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}else{if(this.finalData=Object.assign({},this.currentMaintenance),this.finalData.warrantyDefaultVendorId=this.finalData.warrantyDefaultVendorId?this.finalData.warrantyDefaultVendorId.vendorId:null,this.finalData.warrantyGLAccountId=this.finalData.warrantyGLAccountId?this.finalData.warrantyGLAccountId.glAccountId:null,this.finalData.maintenanceGLAccountId=this.finalData.maintenanceGLAccountId?this.finalData.maintenanceGLAccountId.glAccountId:null,this.finalData.maintenanceDefaultVendorId=this.finalData.maintenanceDefaultVendorId?this.finalData.maintenanceDefaultVendorId.vendorId:null,this.finalData.maintenanceFrequencyDays=null!=this.finalData.maintenanceFrequencyDays?this.finalData.maintenanceFrequencyDays:0,this.finalData.maintenanceFrequencyMonths=null!=this.finalData.maintenanceFrequencyMonths?this.finalData.maintenanceFrequencyMonths:0,1==this.finalData.assetIsMaintenanceReqd&&0==this.finalData.maintenanceFrequencyMonths&&0==this.finalData.maintenanceFrequencyDays)return void this.alertService.showMessage("Warning","Maintenance Months & Days Cant be Zero",T.d.warn);this.isSpinnerVisible=!0,this.assetService.addAssetMaintance(this.finalData).subscribe((function(t){e.currentMaintenance.assetMain=!0,setTimeout((function(){e.isSpinnerVisible=!1}),1200),e.alertService.showMessage("Success","Asset Maintanance & Warrenty created successfully",T.d.success),e.currentMaintenance.updatedBy=e.userName,e.activeIndex=3}),(function(t){e.isSpinnerVisible=!1;var n=t;e.errorMessageHandler(n)}))}}},{key:"addNew",value:function(){this.route.navigateByUrl("assetmodule/assetpages/app-create-asset"),this.assetService.listCollection={},this.assetService.isEditMode=!1}},{key:"validateDates",value:function(e,t){e&&(e<0||e>31)&&(e="",t.maintenanceFrequencyDays=null,this.alertService.showMessage("Warning","Maintanance Days Cant greater than 31 days",T.d.warn))}},{key:"changeOfTab",value:function(e){1!=this.assetService.isEditMode&&1!=this.currentMaintenance.assetMain||("General"===e?(this.activeIndex=0,this.route.navigateByUrl("assetmodule/assetpages/app-edit-asset/"+this.AssetId)):"Capes"===e?(this.activeIndex=1,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/"+this.AssetId)):"Calibration"===e?(this.activeIndex=2,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration/"+this.AssetId)):"Maintenance"==e&&(this.activeIndex=3,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-maintenance-warranty/"+this.AssetId)))}},{key:"glList",value:function(e){var t=this;this.setEditArray=[],1==this.assetService.isEditMode?this.setEditArray.push(null!=this.currentMaintenance.warrantyGLAccountId?this.currentMaintenance.warrantyGLAccountId.glAccountId:0,null!=this.currentMaintenance.maintenanceGLAccountId?this.currentMaintenance.maintenanceGLAccountId.glAccountId:0):this.setEditArray.push(0);var n=e||"";this.commonservice.getAutoCompleteDropDownsByCodeWithName("GLAccount","GLAccountId","AccountName","AccountCode",n,20,this.setEditArray.join()).subscribe((function(e){t.allGlInfo=e.map((function(e){return{glAccountId:e.value,name:e.label}})),t.allGlInfoFilter=t.allGlInfo}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"vendorList",value:function(e){var t=this;this.arrayVendlsit.push(),this.vendorService.getVendorNameCodeListwithFilter(e,20,this.arrayVendlsit.join()).subscribe((function(e){t.allVendorInfo=e.map((function(e){return{vendorId:e.vendorId,name:e.vendorName}})),t.allVendorInfoFilter=t.allVendorInfo}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"backClick",value:function(e){this.nextOrPreviousTab=e;var t=this.tabRedirectConfirmationModal4;this.modal=this.modalService.open(t,{size:"sm"})}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"redirectdismissModel",value:function(){this.datadissmiss=!0,this.redirectToTab()}},{key:"redirectToTab",value:function(){this.disableSaveForEdit||this.datadissmiss||this.saveWarrenty(),this.dismissModel(),this.activeIndex=2,this.assetService.indexObj.next(this.activeIndex),this.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration/"+this.assetService.listCollection.assetRecordId),this.datadissmiss=!1}},{key:"filterWarentyVendor",value:function(e){this.allVendorInfoFilter=this.allVendorInfo,void 0!==e.query&&null!==e.query?this.vendorList(e.query):this.vendorList("");var t=_toConsumableArray(this.allVendorInfo.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.allVendorInfoFilter=t}},{key:"filterWarentyGl",value:function(e){this.allGlInfoFilter=this.allGlInfo,void 0!==e.query&&null!==e.query?this.glList(e.query):this.glList("");var t=_toConsumableArray(this.allGlInfo.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.allGlInfoFilter=t}},{key:"filterWarentyVendor2",value:function(e){this.allVendorInfoFilter=this.allVendorInfo,void 0!==e.query&&null!==e.query?this.vendorList(e.query):this.vendorList("");var t=_toConsumableArray(this.allVendorInfo.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.allVendorInfoFilter=t}},{key:"filterWarentyGl2",value:function(e){this.allGlInfoFilter=this.allGlInfo,void 0!==e.query&&null!==e.query?this.glList(e.query):this.glList("");var t=_toConsumableArray(this.allGlInfo.filter((function(t){return t.name.toLowerCase().includes(e.query.toLowerCase())})));this.allGlInfoFilter=t}},{key:"setAutocompleteOnLoad",value:function(e){e.warrantyDefaultVendorId=0==e.warrantyDefaultVendorId?null:{vendorId:e.warrantyDefaultVendorId,name:e.warrantyVendor},e.maintenanceDefaultVendorId=0==e.maintenanceDefaultVendorId?null:{vendorId:e.maintenanceDefaultVendorId,name:e.maintenanceVendor},e.maintenanceGLAccountId=0==e.maintenanceGLAccountId?null:{glAccountId:e.maintenanceGLAccountId,name:e.maintenanceGlAccount},e.warrantyGLAccountId=0==e.warrantyGLAccountId?null:{glAccountId:e.warrantyGLAccountId,name:e.warrantyGlACoount}}},{key:"onAddTextAreaInfo",value:function(e){this.textAreaInfo=e,this.disableEditor=!0}},{key:"editorgetmemo",value:function(e){this.disableEditor=!1}},{key:"onSaveTextAreaInfo",value:function(e){this.disableSaveForEdit=!1,e&&(this.textAreaInfo=e,this.currentMaintenance.maintenanceMemo=e),H("#textarea-popup").modal("hide")}},{key:"onCloseTextAreaInfo",value:function(){H("#textarea-popup").modal("hide")}},{key:"warrentyCheckBoxHndl",value:function(e){this.currentMaintenance.warrantyCompany="",this.currentMaintenance.warrantyDefaultVendorId=null,this.currentMaintenance.warrantyGLAccountId=null,0==e&&(this.disableSaveForEdit=!1)}},{key:"maintannaceCheckBoxHndl",value:function(e){this.currentMaintenance.maintenanceFrequencyMonths=0,this.currentMaintenance.maintenanceFrequencyDays=0,this.currentMaintenance.maintenanceDefaultVendorId=null,this.currentMaintenance.maintenanceGLAccountId=null,this.currentMaintenance.maintenanceMemo="",0==e&&(this.disableSaveForEdit=!1)}},{key:"errorMessageHandler",value:function(e){this.isSpinnerVisible=!1,this.alertService.showMessage("Error",e,T.d.error)}},{key:"parsedText",value:function(e){if(e)return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}}]),e}();re.ctorParameters=function(){return[{type:S.ActivatedRoute},{type:x.a},{type:j.a},{type:S.Router},{type:U.a},{type:L.c},{type:T.b},{type:F.a},{type:O.a}]},a.b([Object(r.ViewChild)("tabRedirectConfirmationModal4",{static:!1})],re.prototype,"tabRedirectConfirmationModal4",void 0),a.b([Object(r.ViewChild)("fileUploadInput",{static:!1})],re.prototype,"fileUploadInput",void 0),re=a.b([Object(r.Component)({selector:"app-asset-maintenance-warranty",template:a.c(n("qUTz")).default,styles:[a.c(n("vk6m")).default]})],re);var se=n("+rfH"),ie=n("9bet"),oe=n("4P69"),le=n("hOPT"),ce=n("55Bf"),de=n("++Ae"),ue=function(){function e(t,n,a,r,s,i,o,l,c,d,u,p,m,h,v,b,f,g,y,I,A,D,M,w){_classCallCheck(this,e),this.router=t,this.glAccountService=n,this.modalService=a,this.activeModal=r,this.intangibleTypeService=s,this.route=i,this.assetService=o,this.legalEntityServices=l,this.alertService=c,this.itemMasterservice=d,this.unitService=u,this.datePipe=p,this.commonService=m,this.location=h,this.currencyService=v,this.assetTypeService=b,this.depriciationMethodService=f,this.authService=g,this.assetattrService1=y,this.assetIntangibleService=I,this.commonservice=A,this.assetLocationService=D,this.AssetAcquisitionTypeService=M,this.manufacturerService=w,this.userData={},this.currentAsset={},this.allManagemtninfo=[],this.departmentList=[],this.divisionlist=[],this.assetLocationList=[],this.allreasn=[],this.acqallreasn=[],this.currentDate=new Date,this.maincompanylist=[],this.allManufacturerInfo=[],this.allUnitOfMeasureinfo=[],this.allCurrencyInfo=[],this.allAssetAttrInfo=[],this.allAssetIntanAttrInfo=[],this.allAssetLocations=[],this.allAssetAcquisitions=[],this.allAssetTypeInfo=[],this.allIntangibleInfo=[],this.allAssetLocationInfo=[],this.display=!1,this.isDepreciable=!0,this.AssetAcquisitionTypeList=[],this.listCollection={},this.recordExists=!1,this.recordlocExists=!1,this.recordacqExists=!1,this.allAlternateAssetInfo=[],this.allAssetParentInfo=[],this.managementStructureData=[],this.updateMode=!1,this.currentSelectedIntangibleAssetType={},this.currentSelectedLocation={},this.currentSelectedAssetType={},this.currentSelectedAssetAttributeType={},this.depriciationMethodList=[],this.allAssets=[],this.amortizationFrequencyList=[],this.depreciationFrequencyList=[],this.assetAcquisitionTypeList=[],this.GLAccountList=[],this.codeName="",this.code="",this.name="",this.memo="",this.assetLocationId=0,this.isDelete=!1,this.isEditMode=!1,this.disableSaveForEdit=!1,this.newManufacturer={name:"",masterCompanyId:this.authService.currentUser.masterCompanyId,isActive:!0,isDelete:!1,comments:""},this.addnewManufacturer=Object.assign({},this.newManufacturer),this.disableSaveForShortName=!1,this.disableSaveForUOM=!1,this.allowNextTab=!1,this.disableSaveDataAdd=!1,this.isSpinnerEnable=!1,this.disableEditor=!0,this.originalAssetTypes=[],this.allAssetList=[],this.localCollectionExcAlter=[],this.localCollectionExcParent=[],this.showExistMsg=!1,this.setEditArray=[],this.showExistMsgForAsset=!1,this.showExistMsgForAssetParent=!1,this.sourceAction=new se.a,this.currentAsset.expirationDate&&(this.currentAsset.expirationDate=new Date(this.currentAsset.expirationDate).toLocaleDateString()),this.currentAsset.manufacturedDate&&(this.currentAsset.manufacturedDate=new Date(this.currentAsset.manufacturedDate).toLocaleDateString()),this.currentAsset.entryDate?this.currentAsset.entryDate=new Date(this.currentAsset.entryDate).toLocaleDateString():this.currentAsset.entryDate=new Date((new Date).getFullYear(),(new Date).getMonth(),(new Date).getDate()).toLocaleDateString()}return _createClass(e,[{key:"ngOnInit",value:function(){0==this.assetService.isEditMode?this.breadcrumbs=[{label:"Asset"},{label:"Create Asset"}]:this.breadcrumbs=[{label:"Asset"},{label:"Edit Asset"}],this.activeIndex=0;var e=this.assetService.listCollection?this.assetService.listCollection.assetRecordId:null;this.AssetId=this.router.snapshot.params.id?this.router.snapshot.params.id:e,this.getAssetListForAssetId(""),this.getAssetsList(1),this.AssetId?(this.disableSaveForEdit=!0,this.GetAssetData(this.AssetId),this.allowNextTab=!0,this.DisabledMode=!0,this.isEditMode=!0,this.assetService.currentUrl="/assetmodule/assetpages/app-edit-asset"):(this.AssetAttData(""),this.manufacturerdata(""),this.unitOfMeasureList(""),this.assetLocationData(""),this.AcquisitionloadData(""),this.CurrencyData(""),this.disableSaveDataAdd=!0,this.DisabledMode=!1,this.isEditMode=!1,this.assetService.listCollection=null,this.assetService.currentUrl="/assetmodule/assetpages/app-create-asset",this.currentAsset.unitCost="0.00",this.getManagementStructureDetails(this.authService.currentUser?this.authService.currentUser.managementStructureId:null,this.authService.currentUser?this.authService.currentUser.employeeId:0)),1==this.currentAsset.isIntangible?(this.currentAsset.isTangible=!1,this.currentAsset.isdepreciable=!1,this.currentAsset.isAmortizable=!0,this.AssetIntanAttData("")):(this.currentAsset.isTangible=!0,this.currentAsset.isdepreciable=!0,this.currentAsset.isAmortizable=!1),null!=this.assetService.listCollection&&1==this.isEditMode?(this.showLable=!0,this.currentAsset=this.assetService.listCollection,this.updateMode=!0,this.disableSaveForEdit=!0,1==this.currentAsset.isIntangible?(this.currentAsset.isTangible=!1,this.currentAsset.isIntangible=!0,this.active0=!0,this.active1=!1,this.active2=!1,this.active3=!1):(this.currentAsset.isTangible=!0,this.currentAsset.isIntangible=!1,this.active0=!0,this.active1=!0,this.active2=!0,this.active3=!0)):(this.active0=!0,this.active1=!0,this.active2=!0,this.active3=!0,this.onDepreciable("onload")),this.assetService.bredcrumbObj.next(this.assetService.currentUrl),this.assetService.ShowPtab=!0,this.assetService.alertObj.next(this.assetService.ShowPtab)}},{key:"onAddTextAreaInfo",value:function(e){this.disableEditor=!0,this.textAreaInfo=e.memo}},{key:"editorgetmemo",value:function(e){this.disableEditor=!1}},{key:"onSaveTextAreaInfo",value:function(e){this.disableSaveForEdit=!1,e&&(this.textAreaInfo=e,this.currentAsset.memo=e),H("#textarea-popup").modal("hide")}},{key:"onCloseTextAreaInfo",value:function(){H("#textarea-popup").modal("hide")}},{key:"GetAssetData",value:function(e){return a.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var n=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:null==e&&(e=this.assetService.listCollection.assetRecordId),this.isSpinnerEnable=!0,null!=e&&this.assetService.getByAssetId(e).subscribe((function(e){n.onassetdataSuccessful(Object.assign({},e[0],e[1]))}),(function(e){var t=e;n.errorMessageHandler(t)}));case 1:case"end":return t.stop()}}),t,this)})))}},{key:"onassetdataSuccessful",value:function(e){return a.a(this,void 0,void 0,regeneratorRuntime.mark((function t(){var n=this;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:e.alternateAssetRecordId={assetRecordId:e.alternateAssetRecordId,assetId:e.alternateAssetName},e.assetParentRecordId={assetRecordId:e.assetParentRecordId,assetId:e.assetParentName},e.assetId={label:e.assetId,value:e.assetRecordId},e.entryDate=null!=e.entryDate?new Date(e.entryDate):null,e.manufacturedDate=null!=e.manufacturedDate?new Date(e.manufacturedDate):null,e.expirationDate=null!=e.expirationDate?new Date(e.expirationDate):null,this.getManagementStructureDetails(e?e.managementStructureId:null,this.authService.currentUser?this.authService.currentUser.employeeId:0),this.allowNextTab=!0,setTimeout((function(){n.isSpinnerEnable=!1}),1200),this.isEditMode=!0,this.activeIndex=0,this.assetService.indexObj.next(this.activeIndex),this.assetService.listCollection=e,this.showLable=!0,this.currentAsset=this.assetService.listCollection,this.currentAsset.unitCost=this.currentAsset.unitCost?Object(z.b)(this.currentAsset.unitCost,2):"0.00",this.updateMode=!0,1==this.currentAsset.isIntangible?(this.active0=!0,this.active1=!1,this.active2=!1,this.active3=!1,this.currentAsset.isTangible=!1,this.currentAsset.isIntangible=!0,this.getAssetsList(2),this.AssetIntanAttData(""),this.showItemEdit(this.currentAsset.assetIntangibleTypeId)):(this.getAssetsList(1),this.active0=!0,this.active1=!0,this.active2=!0,this.active3=!0,this.currentAsset.isTangible=!0,this.currentAsset.isIntangible=!1,this.showItemEdit(this.currentAsset.tangibleClassId),this.AssetAttData(""),this.manufacturerdata(""),this.unitOfMeasureList(""),this.assetLocationData(""),this.AcquisitionloadData(""),this.CurrencyData("")),this.assetService.bredcrumbObj.next(this.assetService.currentUrl),this.assetService.ShowPtab=!0,this.assetService.alertObj.next(this.assetService.ShowPtab),this.activeIndex=0;case 1:case"end":return t.stop()}}),t,this)})))}},{key:"onFilterTangible",value:function(e){this.AssetAttData(e)}},{key:"AssetAttData",value:function(e){var t=this;this.setEditArray=[],1==this.isEditMode?this.setEditArray.push(this.currentAsset.tangibleClassId?this.currentAsset.tangibleClassId:0):this.setEditArray.push(0);var n=e||"";this.commonService.autoSuggestionSmartDropDownList("AssetAttributeType","TangibleClassId","AssetAttributeTypeName",n,!0,20,this.setEditArray.join()).subscribe((function(e){e&&0!=e.length&&(t.allAssetTypeInfo=e.map((function(e){return Object.assign({},e,{tangibleClassId:e.value,name:e.label})}),(function(e){var n=e;t.errorMessageHandler(n)})),t.originalAssetTypes=t.allAssetTypeInfo)})),this.selectedColumns=this.cols}},{key:"onFilterIntangible",value:function(e){this.AssetIntanAttData(e)}},{key:"AssetIntanAttData",value:function(e){var t=this;this.setEditArray=[],1==this.isEditMode?this.setEditArray.push(this.currentAsset.tangibleClassId?this.currentAsset.tangibleClassId:0):this.setEditArray.push(0);var n=e||"";this.commonService.getAutoCompleteDropDownsByTwoTables("AssetIntangibleAttributeType","AssetIntangibleType","AssetIntangibleTypeId","AssetIntangibleName",n,20,this.setEditArray.join()).subscribe((function(e){e&&0!=e.length&&(t.allIntangibleInfo=e.map((function(e){return Object.assign({},e,{assetIntangibleTypeId:e.value,assetIntangibleName:e.label})})))}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"getAssetListForAssetId",value:function(e){var t=this;this.setEditArray=[],null!=this.AssetId&&null!=this.AssetId?this.setEditArray.push(this.AssetId?this.AssetId:0):this.setEditArray.push(0);var n=e||"";this.commonService.autoSuggestionSmartDropDownList("Asset","AssetRecordId","AssetId",n,!0,20,this.setEditArray.join()).subscribe((function(n){t.allAssetList=n,e&&t.allAssetList.forEach((function(n){n.label==e?t.showExistMsg=!0:t.showExistMsg=!1}))}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"assetIdHandler",value:function(e){e&&""!=e.target.value&&(this.showExistMsg=!1,this.disableSaveForEdit=!1)}},{key:"filterAssetId",value:function(e){if(this.localCollection=this.allAssetList,void 0!==e.query&&null!==e.query){this.getAssetListForAssetId(e.query);var t=_toConsumableArray(this.allAssetList.filter((function(t){return t.label.toLowerCase().includes(e.query.toLowerCase())})));this.localCollection=t}this.showExistMsg=!1}},{key:"getAssetsList",value:function(e){this.tableColumnName=1==e?"IsTangible":"IsIntangible",this.selectedColumns=this.cols}},{key:"filterAssetIdInEdit",value:function(e,t){var n=this;if(this.setEditArray=[],1==this.isEditMode){var a=this.currentAsset.alternateAssetRecordId?this.currentAsset.alternateAssetRecordId:0,r=this.currentAsset.assetParentRecordId?this.currentAsset.assetParentRecordId:0;this.setEditArray.push(a,r)}else this.setEditArray.push(0);var s=e||"";this.commonservice.getAssetListBasedOnType("Asset","AssetRecordId","AssetId",s,this.tableColumnName,1,20,this.setEditArray.join()).subscribe((function(e){var t=e.map((function(e){return Object.assign({},e,{assetRecordId:e.value,assetId:e.label})}));if(n.allAlternateAssetInfo=t,n.allAssetParentInfo=t,n.localCollectionExcAlter=n.allAlternateAssetInfo,n.localCollectionExcParent=n.allAssetParentInfo,null!=n.allAssetParentInfo&&null!=n.allAssetParentInfo)for(var a=0;a<n.allAssetParentInfo.length;a++)n.allAssetParentInfo[a].assetId.toLowerCase()==n.AssetId&&n.allAssetParentInfo.splice(a,1);if(null!=n.currentAsset.alternateAssetRecordId&&null!=n.currentAsset.alternateAssetRecordId&&""!=n.currentAsset.alternateAssetRecordId){for(var r=0;r<n.allAssetParentInfo.length;r++)n.allAssetParentInfo[r].assetRecordId==n.currentAsset.alternateAssetRecordId.assetRecordId&&n.allAssetParentInfo.splice(r,1);n.localCollectionExcParent=n.allAssetParentInfo}if(null!=n.currentAsset.assetParentRecordId&&null!=n.currentAsset.assetParentRecordId&&""!=n.currentAsset.assetParentRecordId){for(var s=0;s<n.allAlternateAssetInfo.length;s++)n.allAlternateAssetInfo[s].assetRecordId==n.currentAsset.assetParentRecordId.assetRecordId&&n.allAlternateAssetInfo.splice(s,1);n.localCollectionExcAlter=n.allAlternateAssetInfo}}),(function(e){var t=e;n.errorMessageHandler(t)}))}},{key:"filterExcAltAssetId",value:function(e){this.localCollectionExc=this.allAlternateAssetInfo,void 0!==e.query&&null!==e.query?this.filterAssetIdInEdit(e.query,1):this.filterAssetIdInEdit("",1)}},{key:"filterExcParentAssetId",value:function(e){this.localCollectionExc=this.allAssetParentInfo,void 0!==e.query&&null!==e.query?this.filterAssetIdInEdit(e.query,2):this.filterAssetIdInEdit("",2)}},{key:"onAssetIdselection",value:function(e){this.showExistMsg=!0,this.disableSaveForEdit=!1}},{key:"showItemEdit",value:function(e){var t=this;0==this.currentAsset.isIntangible||null==this.currentAsset.isIntangible?(this.currentSelectedAssetAttributeType={},this.currentRow=e,null!=e&&this.assetattrService1.getByAssetTypeId(e).subscribe((function(e){t.currentSelectedAssetAttributeType=e[0],t.currentSelectedAssetAttributeType.residualPercentage=t.currentSelectedAssetAttributeType.residualPercentage?Object(z.b)(t.currentSelectedAssetAttributeType.residualPercentage,2):"0.00"}),(function(e){var n=e;t.errorMessageHandler(n)}))):(this.currentSelectedIntangibleAssetType={},this.currentIntangibleRow=e,null!=e&&this.assetIntangibleService.getById(e).subscribe((function(e){t.currentSelectedIntangibleAssetType=e[0][0]}),(function(e){var n=e;t.errorMessageHandler(n)})))}},{key:"open",value:function(e){this.recordlocExists=!1,this.disablelocSave=!0,this.isSaving=!0,this.sourceAction=new se.a,this.sourceAction.isActive=!0,this.code="",this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"openacquisition",value:function(e){this.recordacqExists=!1,this.disableAcquisitionSave=!0,this.isSaving=!0,this.acqsourceAction=new ie.a,this.acqsourceAction.isActive=!0,this.codeName="",this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}},{key:"acqpartnmId",value:function(e){for(var t=0;t<this.acqallreasn.length;t++){if(e==this.acqallreasn[t][0].codeName){this.selectedreason=e,this.recordacqExists=!0,this.disableAcquisitionSave=!0,this.selAssetAcquisitionTypeId=this.acqallreasn[t][0].AssetAcquisitionTypeId,this.selectedreason=e;break}this.recordacqExists=!1,this.disableAcquisitionSave=!1}}},{key:"eventHandler",value:function(e){var t=e.target.value.toLowerCase();this.selectedreason&&(t==this.selectedreason.toLowerCase()?(this.disableSave=!0,this.recordExists=!0):(this.disableSave=!1,this.recordExists=!1))}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"onFilterAcqution",value:function(e){this.AcquisitionloadData(e)}},{key:"AcquisitionloadData",value:function(e){var t=this;this.setEditArray=[],1==this.isEditMode?this.setEditArray.push(this.currentAsset.assetAcquisitionTypeId?this.currentAsset.assetAcquisitionTypeId:0):this.setEditArray.push(0);var n=e||"";this.commonService.autoSuggestionSmartDropDownList("AssetAcquisitionType","AssetAcquisitionTypeId","Name",n,!0,20,this.setEditArray.join()).subscribe((function(e){t.AssetAcquisitionTypeList=e.map((function(e){return Object.assign({},e,{assetAcquisitionTypeId:e.value,name:e.label})}))}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"getLegalEntity",value:function(){var e=this;this.commonService.getLegalEntityList().subscribe((function(t){e.legalEntityList=t}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"getManagementStructureDetails",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;n=0==n?this.employeeId:n,a=this.isEditMode?a=e:0,this.commonService.getManagmentStrctureData(e,n,a).subscribe((function(e){if(e){var n=e;n[0]&&"Level1"==n[0].level?(t.maincompanylist=n[0].lstManagmentStrcture,t.currentAsset.companyId=n[0].managementStructureId,t.currentAsset.managementStructureId=n[0].managementStructureId,t.currentAsset.buisinessUnitId=0,t.currentAsset.divisionId=0,t.currentAsset.departmentId=0,t.bulist=[],t.divisionlist=[],t.departmentList=[]):(t.currentAsset.companyId=0,t.currentAsset.buisinessUnitId=0,t.currentAsset.divisionId=0,t.currentAsset.departmentId=0,t.maincompanylist=[],t.bulist=[],t.divisionlist=[],t.departmentList=[]),n[1]&&"Level2"==n[1].level?(t.bulist=n[1].lstManagmentStrcture,t.currentAsset.buisinessUnitId=n[1].managementStructureId,t.currentAsset.managementStructureId=n[1].managementStructureId,t.currentAsset.divisionId=0,t.currentAsset.departmentId=0,t.divisionlist=[],t.departmentList=[]):(n[1]&&"NEXT"==n[1].level&&(t.bulist=n[1].lstManagmentStrcture),t.currentAsset.buisinessUnitId=0,t.currentAsset.divisionId=0,t.currentAsset.departmentId=0,t.divisionlist=[],t.departmentList=[]),n[2]&&"Level3"==n[2].level?(t.divisionlist=n[2].lstManagmentStrcture,t.currentAsset.divisionId=n[2].managementStructureId,t.currentAsset.managementStructureId=n[2].managementStructureId,t.currentAsset.departmentId=0,t.departmentList=[]):(n[2]&&"NEXT"==n[2].level&&(t.divisionlist=n[2].lstManagmentStrcture),t.currentAsset.divisionId=0,t.currentAsset.departmentId=0,t.departmentList=[]),n[3]&&"Level4"==n[3].level?(t.departmentList=n[3].lstManagmentStrcture,t.currentAsset.departmentId=n[3].managementStructureId,t.currentAsset.managementStructureId=n[3].managementStructureId):(t.currentAsset.departmentId=0,n[3]&&"NEXT"==n[3].level&&(t.departmentList=n[3].lstManagmentStrcture))}}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"selectedLegalEntity",value:function(e){var t=this;e&&(this.currentAsset.companyId=e,this.currentAsset.managementStructureId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe((function(e){t.bulist=e,t.currentAsset.buisinessUnitId=0,t.currentAsset.divisionId=0,t.currentAsset.departmentId=0}),(function(e){var n=e;t.errorMessageHandler(n)})))}},{key:"selectedBusinessUnit",value:function(e){var t=this;e&&(this.currentAsset.buisinessUnitId=e,this.currentAsset.managementStructureId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe((function(e){t.divisionlist=e,t.currentAsset.divisionId=0,t.currentAsset.departmentId=0}),(function(e){var n=e;t.errorMessageHandler(n)})))}},{key:"selectedDivision",value:function(e){var t=this;e&&(this.currentAsset.divisionId=e,this.currentAsset.managementStructureId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe((function(e){t.departmentList=e,t.currentAsset.departmentId=0}),(function(e){var n=e;t.errorMessageHandler(n)})))}},{key:"selectedDepartment",value:function(e){e&&(this.currentAsset.departmentId=e,this.currentAsset.managementStructureId=e)}},{key:"onFilterManufacturer",value:function(e){this.manufacturerdata(e)}},{key:"manufacturerdata",value:function(e){var t=this;this.setEditArray=[],1==this.isEditMode?this.setEditArray.push(this.currentAsset.manufacturerId?this.currentAsset.manufacturerId:0):this.setEditArray.push(0);var n=e||"";this.commonService.autoSuggestionSmartDropDownList("Manufacturer ","ManufacturerId","Name",n,!0,20,this.setEditArray.join()).subscribe((function(e){t.allManufacturerInfo=e,t.ManufactureData=e}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"onFilterUom",value:function(e){this.unitOfMeasureList(e)}},{key:"unitOfMeasureList",value:function(e){var t=this;1==this.isEditMode?this.setEditArray.push(this.currentAsset.unitOfMeasureId?this.currentAsset.unitOfMeasureId:0):(this.setEditArray.push(0),"/assetmodule/assetpages/app-create-asset"==this.assetService.currentUrl&&(this.currentAsset.unitOfMeasureId=this.getuom("Eaches")));var n=e||"";this.commonService.autoSuggestionSmartDropDownList("UnitOfMeasure","UnitOfMeasureId","shortName",n,!0,20,this.setEditArray.join()).subscribe((function(e){t.allUnitOfMeasureinfo=e}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"onFilterCurrency",value:function(e){this.unitOfMeasureList(e)}},{key:"CurrencyData",value:function(e){var t=this;this.setEditArray=[],1==this.isEditMode?this.setEditArray.push(this.currentAsset.currencyId?this.currentAsset.currencyId:0):this.setEditArray.push(0);var n=e||"";this.commonService.autoSuggestionSmartDropDownList("Currency","CurrencyId","Code",n,!0,20,this.setEditArray.join()).subscribe((function(e){t.allCurrencyInfo=e}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"onFilterLocation",value:function(e){this.assetLocationData(e)}},{key:"assetLocationData",value:function(e){var t=this;this.setEditArray=[],1==this.isEditMode?this.setEditArray.push(this.currentAsset.assetLocationId?this.currentAsset.assetLocationId:0):this.setEditArray.push(0);var n=e||"";this.commonService.getAutoCompleteDropDownsByCodeWithName("AssetLocation","AssetLocationId","Name","Code",n,20,this.setEditArray.join()).subscribe((function(e){t.allAssetLocations=e}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"changeOfTab",value:function(e){this.AssetId=this.assetService.listCollection?this.assetService.listCollection.assetRecordId:this.AssetId,1==this.isEditMode&&(this.DisabledMode=!0,"General"===e?(this.activeIndex=0,this.route.navigateByUrl("assetmodule/assetpages/app-edit-asset/"+this.AssetId)):"Capes"===e?(this.activeIndex=1,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/"+this.AssetId)):"Calibration"===e?(this.activeIndex=2,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration/"+this.AssetId)):"Maintenance"==e&&(this.activeIndex=3,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-maintenance-warranty/"+this.AssetId)))}},{key:"getAmortizationFrequencyList",value:function(){var e=this;this.commonservice.smartDropDownList("AssetAmortizationInterval","AssetAmortizationIntervalId","AssetAmortizationIntervalCode").subscribe((function(t){e.amortizationFrequencyList=t}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"getDepreciationFrequencyList",value:function(){var e=this;this.commonservice.smartDropDownList("AssetDepreciationFrequency","AssetDepreciationFrequencyId","Name").subscribe((function(t){e.depreciationFrequencyList=t}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"onIsDepreciable",value:function(){this.currentAsset.isdepreciable=!0}},{key:"onIsNonDepreciable",value:function(){this.currentAsset.isNonDepreciable=!0}},{key:"onIsAmortizable",value:function(){this.currentAsset.isAmortizable=!0}},{key:"onIsNonAmortizable",value:function(){this.currentAsset.isNonAmortizable=!0}},{key:"onDepreciable",value:function(e){"html"==e&&(this.AssetAttData(""),this.getAssetsList(1),this.currentAsset.assetIntangibleTypeId=null,this.currentSelectedIntangibleAssetType.amortizationMethod="",this.currentSelectedIntangibleAssetType.intangibleLife="",this.currentSelectedIntangibleAssetType.amortFrequency="",this.currentSelectedIntangibleAssetType.amortExpenseGL="",this.currentSelectedIntangibleAssetType.accAmortDeprGL="",this.currentSelectedIntangibleAssetType.intangibleGL="",this.currentSelectedIntangibleAssetType.intangibleWriteDownGL="",this.currentSelectedIntangibleAssetType.intangibleWriteOffGL="",this.currentAsset.isAmortizable=!1,this.currentAsset.isNonAmortizable=!1,this.currentAsset.isdepreciable=!0),this.active0=!0,this.active1=!0,this.active2=!0,this.active3=!0,this.currentAsset.isTangible=!0,this.currentAsset.isIntangible=!1}},{key:"onIntangible",value:function(e){this.getAssetsList(2),this.active0=!0,this.active1=!1,this.active2=!1,this.active3=!1,this.currentAsset.isIntangible=!0,this.currentAsset.isTangible=!1,this.currentAsset.isAmortizable=!0,this.currentAsset.assetParentRecordId=null,this.currentAsset.assetLocationId="",this.currentAsset.manufacturerId="",this.currentAsset.isSerialized=!1,this.currentAsset.currencyId="",this.currentAsset.memo="",this.currentAsset.unitOfMeasureId=this.getuom("Eaches"),this.currentAsset.unitCost="",this.currentAsset.model="",this.currentAsset.assetAcquisitionTypeId="",this.currentAsset.manufacturedDate="",this.currentAsset.expirationDate="",this.currentAsset.isdepreciable=!1,this.currentAsset.isNonDepreciable=!1,this.currentAsset.isAmortizable=!0,this.currentAsset.asset_Location="",this.currentAsset.tangibleClassId=0,this.currentSelectedAssetType.selectedObj="",this.currentSelectedAssetAttributeType.depreciationMethodName="",this.currentSelectedAssetAttributeType.residualPercentage="",this.currentSelectedAssetAttributeType.assetLife="",this.currentSelectedAssetAttributeType.deprFrequency="",this.currentSelectedAssetAttributeType.acquiredGL="",this.currentSelectedAssetAttributeType.deprExpenseGL="",this.currentSelectedAssetAttributeType.adDeprGL="",this.currentSelectedAssetAttributeType.saleGL="",this.currentSelectedAssetAttributeType.writeOffGL="",this.currentSelectedAssetAttributeType.writeDownGL="",this.AssetIntanAttData(""),this.showItemEdit(this.currentAsset.assetIntangibleTypeId),this.AssetId?this.isEditMode=!0:this.isEditMode=!1}},{key:"onClearAltId",value:function(){this.currentAsset.alternateAssetRecordId=void 0}},{key:"onClearParentId",value:function(){this.currentAsset.assetParentRecordId=void 0}},{key:"onAssetParentAlt",value:function(e,t){null!=this.currentAsset.alternateAssetRecordId&&null!=this.currentAsset.assetParentRecordId&&(this.currentAsset.alternateAssetRecordId.assetRecordId==this.currentAsset.assetParentRecordId.assetRecordId?1==t?this.showExistMsgForAsset=!0:this.showExistMsgForAssetParent=!0:(this.showExistMsgForAsset=!1,this.showExistMsgForAssetParent=!1))}},{key:"saveAsset",value:function(){var e=this;if(0==this.currentAsset.isIntangible&&null!=this.currentAsset.expirationDate&&this.currentAsset.expirationDate<W(this.currentDate).format("MM/DD/YYYY"))return this.isSaving=!1,void this.alertService.showMessage("","Expiration Date can't before current Date please Update.",T.d.error);if(0==this.currentAsset.isIntangible&&this.currentAsset.entryDate&&this.currentAsset.manufacturedDate&&this.currentAsset.entryDate<this.currentAsset.manufacturedDate&&W(this.currentAsset.entryDate).format("MM/DD/YYYY")<W(this.currentAsset.manufacturedDate).format("MM/DD/YYYY"))return this.isSaving=!1,void this.alertService.showMessage("","Manufatured date cannot be later than Entry date.",T.d.error);if(1==this.currentAsset.isDepreciable){if(null!=this.currentAsset.assetId&&null!=this.currentAsset.assetParentRecordId&&this.currentAsset.assetId==this.currentAsset.assetParentRecordId)return this.isSaving=!1,void this.alertService.showMessage("","Asset Parent cannot be equal to Asset ID.",T.d.error);if(null!=this.currentAsset.alternateAssetRecordId&&null!=this.currentAsset.assetParentRecordId&&this.currentAsset.alternateAssetRecordId==this.currentAsset.assetParentRecordId)return this.isSaving=!1,void this.alertService.showMessage("","Asset Parent and Alternate Asset can't be same.",T.d.error)}if(null!=this.currentAsset.alternateAssetRecordId&&null!=this.currentAsset.assetId&&this.currentAsset.alternateAssetRecordId==this.currentAsset.assetId)return this.isSaving=!1,void this.alertService.showMessage("","Asset Id and Alternate Asset Id can't be same.",T.d.error);if(1==this.currentAsset.isDepreciable&&(this.currentAsset.assetId&&this.currentAsset.name&&this.currentAsset.unitOfMeasureId&&this.currentAsset.currencyId&&this.currentAsset.tangibleClassId&&this.currentAsset.assetAcquisitionTypeId&&this.currentAsset.companyId||(this.display=!0,this.modelValue=!0,this.alertService.showMessage("Warning","Please Enter (*) Mandatory Fields  ",T.d.warn))),this.currentAsset.assetId&&this.currentAsset.name&&this.currentAsset.assetIntangibleTypeId||this.currentAsset.assetId&&this.currentAsset.name&&this.currentAsset.unitOfMeasureId&&this.currentAsset.currencyId&&this.currentAsset.tangibleClassId&&this.currentAsset.assetAcquisitionTypeId&&this.currentAsset.companyId)if(this.isSaving=!0,this.currentAsset.assetRecordId)if(this.currentAsset.updatedBy=this.userName,this.currentAsset.masterCompanyId=this.authService.currentUser.masterCompanyId,1==this.currentAsset.isIntangible&&(this.currentAsset.isTangible=!1,this.currentAsset.isSerialized=!1,this.currentAsset.assetLocationId="",this.currentAsset.manufacturerId="",this.currentAsset.isSerialized=!1,this.currentAsset.currencyId="",this.currentAsset.memo="",this.currentAsset.unitOfMeasureId="",this.currentAsset.unitCost="",this.currentAsset.model="",this.currentAsset.assetAcquisitionTypeId="",this.currentAsset.manufacturedDate="",this.currentAsset.expirationDate="",this.currentAsset.isdepreciable=!1,this.currentAsset.isNonDepreciable=!1,this.currentAsset.asset_Location="",this.currentAsset.tangibleClassId=0,this.currentSelectedAssetType.selectedObj="",delete this.currentAsset.assetType,delete this.currentAsset.currency,delete this.currentAsset.manufacturer,delete this.currentAsset.unitOfMeasure),1==this.currentAsset.isTangible&&(this.currentAsset.isIntangible=!1,this.currentAsset.isAmortizable=!1,this.currentAsset.isNonAmortizable=!1,this.currentSelectedIntangibleAssetType.selectedAssetObj={},this.currentAsset.assetIntangibleTypeId="",delete this.currentAsset.assetType,delete this.currentAsset.currency,delete this.currentAsset.manufacturer,delete this.currentAsset.unitOfMeasure),0==this.currentAsset.isIntangible){(a=new Date(this.currentAsset.entryDate)).setMinutes(a.getMinutes()+480),this.currentAsset.entryDate=a;var t=Object.assign({},this.currentAsset);t.alternateAssetRecordId=t.alternateAssetRecordId?t.alternateAssetRecordId.assetRecordId:0,t.assetParentRecordId=t.assetParentRecordId?t.assetParentRecordId.assetRecordId:0,"string"==typeof t.assetId||t.assetId instanceof String?t.assetId=t.assetId?t.assetId:"":t.assetId=t.assetId?t.assetId.label:"",this.isSpinnerEnable=!0,this.assetService.updateAsset(t).subscribe((function(t){e.isSpinnerEnable=!1,e.currentAsset.updatedBy=e.userName,e.listCollection=t,e.disableSaveForEdit=!0,e.assetService.listCollection=e.listCollection,e.assetService.generalCollection=e.listCollection,e.alertService.showMessage("Success","Asset Updated successfully.",T.d.success);e.listCollection.assetId}),(function(t){var n=t;e.errorMessageHandler(n)}))}else{(a=new Date(this.currentAsset.entryDate)).setMinutes(a.getMinutes()+480),this.currentAsset.entryDate=a;var n=Object.assign({},this.currentAsset);n.alternateAssetRecordId=n.alternateAssetRecordId?n.alternateAssetRecordId.assetRecordId:0,"string"==typeof n.assetId||n.assetId instanceof String?n.assetId=n.assetId?n.assetId:"":n.assetId=n.assetId?n.assetId.label:"",this.assetService.updateAssetIntangible(n).subscribe((function(t){e.currentAsset.updatedBy=e.userName,e.listCollection=t,e.assetService.generalCollection=e.listCollection,e.alertService.showMessage("Success","Asset Updated successfully.",T.d.success),e.currentAsset=e.assetService.listCollection;e.listCollection.assetId}),(function(t){var n=t;e.errorMessageHandler(n)}))}else{var a;this.currentAsset.createdBy=this.userName,this.currentAsset.updatedBy=this.userName,this.currentAsset.masterCompanyId=this.authService.currentUser.masterCompanyId,this.currentAsset.isActive=!0,1==this.currentAsset.isIntangible&&(this.currentAsset.isTangible=!1,this.currentAsset.isSerialized=!1,this.currentAsset.isdepreciable=!1,this.currentAsset.isNonDepreciable=!1,delete this.currentAsset.assetType,delete this.currentAsset.currency,delete this.currentAsset.manufacturer,delete this.currentAsset.unitOfMeasure,delete this.currentAsset.assetLocationId),1==this.currentAsset.isTangible&&(this.currentAsset.isAmortizable=!1,this.currentAsset.isNonAmortizable=!1,this.currentAsset.isIntangible=!1,this.currentSelectedIntangibleAssetType.selectedAssetObj={},this.currentAsset.assetIntangibleTypeId=""),(a=new Date(this.currentAsset.entryDate)).setMinutes(a.getMinutes()+480),this.currentAsset.entryDate=a;var r=new Date(this.currentAsset.expirationDate);r.setMinutes(r.getMinutes()+480),this.currentAsset.expirationDate=r;var s=new Date(this.currentAsset.manufacturedDate);if(s.setMinutes(s.getMinutes()+480),this.currentAsset.manufacturedDate=s,this.currentAsset&&0==this.currentAsset.isIntangible){var i=Object.assign({},this.currentAsset);i.alternateAssetRecordId=i.alternateAssetRecordId?i.alternateAssetRecordId.assetRecordId:0,i.assetParentRecordId=i.assetParentRecordId?i.assetParentRecordId.assetRecordId:0,this.isSpinnerEnable=!0,this.assetService.addAsset(i).subscribe((function(t){e.isSpinnerEnable=!1,e.isEditMode=!0,e.disableSaveForEdit=!0,e.currentAsset.alternateAssetRecordId={assetRecordId:t.alternateAssetRecordId,assetId:t.alternateAssetName},e.currentAsset.assetParentRecordId={assetRecordId:t.assetParentRecordId,assetId:t.assetParentName},e.currentAsset.assetRecordId=t.assetRecordId,e.allowNextTab=!0,e.currentAsset.updatedBy=e.userName,e.listCollection=t,e.assetService.generalCollection=e.listCollection,e.assetService.listCollection=t,e.alertService.showMessage("Success","Asset Created successfully.",T.d.success);t.assetId;1==e.currentAsset.isIntangible?(e.activeIndex=1,e.assetService.indexObj.next(e.activeIndex)):e.location.replaceState("assetmodule/assetpages/app-edit-asset/"+t.assetRecordId)}),(function(t){e.currentAsset.manufacturedDate=e.currentAsset.manufacturedDate?e.currentAsset.manufacturedDate:null,e.currentAsset.expirationDate=e.currentAsset.expirationDate?e.currentAsset.expirationDate:null;var n=t;e.errorMessageHandler(n)}))}else if(this.currentAsset){var o=Object.assign({},this.currentAsset);o.alternateAssetRecordId=o.alternateAssetRecordId?o.alternateAssetRecordId.assetRecordId:0,this.assetService.addAssetIntangible(o).subscribe((function(t){e.allowNextTab=!0,e.currentAsset.updatedBy=e.userName,e.listCollection=t,e.assetService.generalCollection=e.listCollection,e.assetService.listCollection=t,e.alertService.showMessage("Success","Asset Created successfully.",T.d.success);t.assetId;1==e.currentAsset.isIntangible&&(e.activeIndex=1,e.assetService.indexObj.next(e.activeIndex),e.route.navigateByUrl("/assetmodule/assetpages/app-asset-listing"))}),(function(t){var n=t;e.errorMessageHandler(n)}))}}}},{key:"getSelectedLocation",value:function(e){this.currentSelectedLocation=Object.assign({},this.allAssetLocations.filter((function(t){return t.assetLocationId==e}))[0])}},{key:"getSelectedAssetType",value:function(e){this.currentSelectedAssetType=Object.assign({},this.allAssetTypeInfo.filter((function(t){return t.tangibleClassId==e}))[0])}},{key:"nextClick",value:function(e){this.nextOrPreviousTab=e;var t=this.tabRedirectConfirmationModal;this.modal=this.modalService.open(t,{size:"sm"})}},{key:"dismissModelRedirect",value:function(){this.currentAsset=this.assetService.listCollection,this.activeIndex=1,this.assetService.indexObj.next(this.activeIndex);var e=this.currentAsset.assetRecordId;this.dismissModel(),this.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/"+e)}},{key:"redirectToTab",value:function(){this.dismissModel(),this.currentAsset=this.assetService.listCollection,this.activeIndex=1,this.assetService.indexObj.next(this.activeIndex);var e=this.currentAsset.assetRecordId;this.disableSaveForEdit||this.saveAsset(),this.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/"+e)}},{key:"getmemo",value:function(e){this.disableSaveForEdit=!1,this.disableSaveForShortName=!1,this.disableSaveForUOM=!1}},{key:"getuom",value:function(e){for(var t=0;t<this.allUnitOfMeasureinfo.length;t++)if(e==this.allUnitOfMeasureinfo[t].label)return this.allUnitOfMeasureinfo[t].value}},{key:"formatToGlobal",value:function(e){e.unitCost=e.unitCost?Object(z.b)(e.unitCost,2):"0.00"}},{key:"errorMessageHandler",value:function(e){this.isSpinnerEnable=!1,this.alertService.showMessage("Error",e,T.d.error)}},{key:"parsedText",value:function(e){if(e)return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}},{key:"omit_special_char",value:function(e){var t;return(t=e.charCode)>64&&t<91||t>96&&t<123||8==t||32==t||t>=48&&t<=57||45==t||95==t}},{key:"addNew",value:function(){this.route.navigateByUrl("/assetmodule/assetpages/app-create-asset"),this.assetService.listCollection={},this.assetService.isEditMode=!1}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"employeeId",get:function(){return this.authService.currentUser?this.authService.currentUser.employeeId:0}}]),e}();ue.ctorParameters=function(){return[{type:S.ActivatedRoute},{type:F.a},{type:L.c},{type:L.b},{type:le.a},{type:S.Router},{type:x.a},{type:N.a},{type:T.b},{type:J.a},{type:G.a},{type:c.DatePipe},{type:O.a},{type:c.Location},{type:K.a},{type:ce.a},{type:q.a},{type:U.a},{type:E.a},{type:R.a},{type:O.a},{type:P.a},{type:oe.a},{type:de.a}]},a.b([Object(r.ViewChild)("tabRedirectConfirmationModal",{static:!1})],ue.prototype,"tabRedirectConfirmationModal",void 0),ue=a.b([Object(r.Component)({selector:"app-create-asset",template:a.c(n("P7yI")).default,providers:[c.DatePipe],styles:[a.c(n("bEiN")).default]})],ue);var pe=n("XNiG"),me=n("1G5W"),he=function(){function e(t,n,a,r,s,i,o,l,c,d,u,p){_classCallCheck(this,e),this.commonService=t,this.location=n,this.vendorService=a,this.assetService=r,this.assetLocationService=s,this.alertService=i,this.configurations=o,this.authService=l,this.modalService=c,this.route=d,this._actRoute=u,this.datePipe=p,this.todaysDate=new Date,this.disableSaveForEdit=!1,this.currentAsset={},this.isSpinnerVisible=!0,this.pageSize=10,this.isEditMode=!1,this.currentDate=new Date,this.onDestroy$=new pe.a,this.allAssetList=[],this.assetListFilter=[],this.allLocationList=[],this.allCapesInfo=[],this.allVendorsList=[],this.vendorListFilter=[],this.allCurrencyInfo=[],this.allWarrantyStatusList=[],this.cols=[{field:"partNumber",header:"PN"},{field:"partDescription",header:"PN Description"},{field:"captypedescription",header:"Capability Type"},{field:"manufacturer",header:"Aircraft Manufacturer"},{field:"modelname",header:"Models"},{field:"dashnumber",header:"Dash Number"}],this.selectedColumns=this.cols,this.managementStructure={companyId:0,buId:0,divisionId:0,departmentId:0},this.legalEntityList=[],this.businessUnitList=[],this.divisionList=[],this.departmentList=[],this.documentInformation={docName:"",docMemo:"",docDescription:"",attachmentDetailId:0},this.isEditButton=!1,this.sourceViewforDocument=[],this.sourceViewforDocumentWarranty=[],this.customerDocumentsColumns=[{field:"docName",header:"Name"},{field:"docDescription",header:"Description"},{field:"docMemo",header:"Memo"},{field:"fileName",header:"File Name"},{field:"fileSize",header:"File Size"},{field:"createdBy",header:"Created By"},{field:"updatedBy",header:"Updated By"},{field:"createdDate",header:"Created Date"},{field:"updatedDate",header:"Updated Date"}],this.selectedColumnsDoc=this.customerDocumentsColumns,this.sourceViewforDocumentList=[],this.sourceViewforDocumentListWarranty=[],this.sourceViewforDocumentAudit=[],this.disableDocumentSave=!1,this.disableFileAttachmentSubmit=!0,this.selectedFileAttachment=[],this.formDataMain=new FormData,this.formDataWarr=new FormData,this.formDataInt=new FormData,this.allDocumentListOriginal=[],this.pageSizeNew=3,this.allDocumentListOriginalWarranty=[],this.disableFileAttachmentSubmitWarranty=!0,this.selectedFileAttachmentWarranty=[],this.warrantyCompanySelectList=[],this.sourceViewforDocumentListInt=[],this.disableFileAttachmentSubmitInt=!0,this.selectedFileAttachmentInt=[],this.sourceViewforDocumentInt=[],this.arrayVendlsit=[],this.setEditArray=[],this.orignEditData={},this.openCapesModel=!1,this.updateDocuments=!1,this.disleUpdate=!0,this.disableEditor=!0,this.postData={},this.assetStatusList=[],this.assetInventoryStatusList=[],this.restorerecord={},this.isDeletedDocumentlist=!1,this.warrentyDeletedList=!1,this.intangibleDeletedList=!1,this.maitananceeletedList=!1,this.currentAsset.entryDate=this.currentDate,this.currentAsset.isTangible=1,this.currentAsset.assetLocationId=0,this.currentAsset.warrantyStatusId=0}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;0==this.assetService.isEditMode?this.breadcrumbs=[{label:"Asset Inventory"},{label:"Create Asset Inventory"}]:this.breadcrumbs=[{label:"Asset Inventory"},{label:"Edit Asset Inventory"}],this.currentAsset.installationCost="0.00",this.currentAsset.inventoryNumber="Generating",this.getAssetList(),this.loadCurrencyData(""),this.getLocationList(),this.getWarrantyStatusList(),this.assetInventoryId=this._actRoute.snapshot.params.id,this.assetInventoryId?(this.disableSaveForEdit=!0,this.isEditMode=!0,setTimeout((function(){e.getAssetInventoryDataOnEdit(e.assetInventoryId)}),1e3)):(this.getManagementStructureDetails(this.authService.currentUser?this.authService.currentUser.managementStructureId:null,this.authService.currentUser?this.authService.currentUser.employeeId:0),this.getManagementStructureLevelIds(this.authService.currentUser?this.authService.currentUser.managementStructureId:0),this.getAssetStatusList(""),this.getAssetInventoryStatusList(),this.isSpinnerVisible=!1)}},{key:"getAssetList",value:function(){this.filterAssetIdInEdit("")}},{key:"filterAssetIdInEdit",value:function(e){var t=this;this.setEditArray=[],this.currentAsset&&null!=this.currentAsset.assetId&&null!=this.currentAsset.assetId?this.setEditArray.push(this.currentAsset.assetId):this.setEditArray.push(0);var n=e;this.commonService.autoSuggestionSmartDropDownList("Asset","AssetRecordId","AssetId",n,!0,20,this.setEditArray.join()).subscribe((function(e){t.allAssetList=e}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"loadVendorData",value:function(e){var t=this;this.arrayVendlsit=[],this.arrayVendlsit.push(this.orignEditData.calibrationDefaultVendorId,this.orignEditData.certificationDefaultVendorId,this.orignEditData.inspectionDefaultVendorId,this.orignEditData.verificationDefaultVendorId,this.orignEditData.maintenanceDefaultVendorId,this.orignEditData.warrantyDefaultVendorId),this.vendorService.getVendorNameCodeListwithFilter(e,20,this.arrayVendlsit.join()).subscribe((function(e){t.allVendorsList=e.map((function(e){return{value:e.vendorId,label:e.vendorName}})),t.vendorListFilter=t.allVendorsList}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"onFilterAssetCurrency",value:function(e){this.loadCurrencyData(e)}},{key:"loadCurrencyData",value:function(e){var t=this;1==this.isEditMode?(this.setEditArray=[],this.setEditArray.push(this.currentAsset.certificationCurrencyId,this.currentAsset.inspectionCurrencyId,this.currentAsset.calibrationCurrencyId,this.currentAsset.verificationCurrencyId)):this.setEditArray.push(0);var n=e;this.commonService.autoSuggestionSmartDropDownList("Currency","CurrencyId","Code",n,!0,20,this.setEditArray.join()).subscribe((function(e){t.allCurrencyInfo=e}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"getLocationList",value:function(){var e=this;this.commonService.smartDropDownGetNamaWithCode("AssetLocation","AssetLocationId","Name").subscribe((function(t){e.allLocationList=t.map((function(e){return Object.assign({},e,{assetLocationId:e.value,name:e.label})}))}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"getWarrantyStatusList",value:function(){var e=this;this.commonService.smartDropDownList("AssetWarrantyStatus","AssetWarrantyStatusId","warrantyStatus").subscribe((function(t){e.allWarrantyStatusList=t}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"getManagementStructureDetails",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;n=0==n?this.employeeId:n,a=this.isEditMode?a=e:0,this.commonService.getManagmentStrctureData(e,n,a).subscribe((function(e){if(1==t.isEditMode&&("fromHtml"==t.whereItComesFrom?setTimeout((function(){t.isSpinnerVisible=!1}),1500):t.isSpinnerVisible=!1),e){var n=e;n[0]&&"Level1"==n[0].level?(t.legalEntityList=n[0].lstManagmentStrcture,t.currentAsset.companyId=n[0].managementStructureId,t.currentAsset.managementStructureId=n[0].managementStructureId,t.currentAsset.buId=0,t.currentAsset.divisionId=0,t.currentAsset.departmentId=0,t.businessUnitList=[],t.divisionList=[],t.departmentList=[]):(t.currentAsset.companyId=0,t.currentAsset.buId=0,t.currentAsset.divisionId=0,t.currentAsset.departmentId=0,t.legalEntityList=[],t.businessUnitList=[],t.divisionList=[],t.departmentList=[]),n[1]&&"Level2"==n[1].level?(t.businessUnitList=n[1].lstManagmentStrcture,t.currentAsset.buId=n[1].managementStructureId,t.currentAsset.managementStructureId=n[1].managementStructureId,t.currentAsset.divisionId=0,t.currentAsset.departmentId=0,t.divisionList=[],t.departmentList=[]):(n[1]&&"NEXT"==n[1].level&&(t.businessUnitList=n[1].lstManagmentStrcture),t.currentAsset.buId=0,t.currentAsset.divisionId=0,t.currentAsset.departmentId=0,t.divisionList=[],t.departmentList=[]),n[2]&&"Level3"==n[2].level?(t.divisionList=n[2].lstManagmentStrcture,t.currentAsset.divisionId=n[2].managementStructureId,t.currentAsset.managementStructureId=n[2].managementStructureId,t.currentAsset.departmentId=0,t.departmentList=[]):(n[2]&&"NEXT"==n[2].level&&(t.divisionList=n[2].lstManagmentStrcture),t.currentAsset.divisionId=0,t.currentAsset.departmentId=0,t.departmentList=[]),n[3]&&"Level4"==n[3].level?(t.departmentList=n[3].lstManagmentStrcture,t.currentAsset.departmentId=n[3].managementStructureId,t.currentAsset.managementStructureId=n[3].managementStructureId):(t.currentAsset.departmentId=0,n[3]&&"NEXT"==n[3].level&&(t.departmentList=n[3].lstManagmentStrcture))}}),(function(e){t.isSpinnerVisible=!1;var n=e;t.errorMessageHandler(n)}))}},{key:"getManagementStructureLevelIds",value:function(e){var t=this;e&&this.commonService.getManagementStructureData(this.authService.currentUser.masterCompanyId,e).subscribe((function(e){var n=e;null!=n&&(n&&n.levelId1&&(t.managementStructure.companyId=n.levelId1),n&&n.levelId2&&(t.managementStructure.buId=n.levelId2),n&&n.levelId3&&(t.managementStructure.divisionId=n.levelId3),n&&n.levelId4&&(t.managementStructure.departmentId=n.levelId4))}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"getAssetInventoryDataOnEdit",value:function(e){var t=this;null!=e&&this.assetService.getByInventoryId(e).subscribe((function(e){t.orignEditData=e,t.assetRecordIdForCapes=e.assetRecordId,t.loadVendorData(""),t.onAssetIdselection({value:e.assetRecordId},"fromOnload"),t.currentAsset=Object.assign({},e,{memo:e.memo,isTangible:!e.isIntangible,assetRecordId:Object(z.d)("value",e.assetRecordId,t.allAssetList),entryDate:e.entryDate?new Date(e.entryDate):null,manufacturedDate:e.manufacturedDate?new Date(e.manufacturedDate):null,expirationDate:e.expirationDate?new Date(e.expirationDate):null,assetLocationId:e.assetLocationId?parseInt(e.assetLocationId):0,unitCost:e.unitCost?Object(z.b)(e.unitCost,2):"0.00",installationCost:e.installationCost?Object(z.b)(e.installationCost,2):"0.00",freight:e.freight?Object(z.b)(e.freight,2):"0.00",insurance:e.insurance?Object(z.b)(e.insurance,2):"0.00",taxes:e.taxes?Object(z.b)(e.taxes,2):"0.00",residualPercentage:e.residualPercentage?Object(z.b)(e.residualPercentage,2):"0.00",totalCost:e.totalCost?Object(z.b)(e.totalCost,2):"0.00",calibrationDefaultCost:e.calibrationDefaultCost?Object(z.b)(e.calibrationDefaultCost,2):"",certificationDefaultCost:e.certificationDefaultCost?Object(z.b)(e.certificationDefaultCost,2):"",inspectionDefaultCost:e.inspectionDefaultCost?Object(z.b)(e.inspectionDefaultCost,2):"",verificationDefaultCost:e.verificationDefaultCost?Object(z.b)(e.verificationDefaultCost,2):"",defaultVendorId:e.defaultVendorId?Object(z.d)("value",e.defaultVendorId,t.allVendorsList):null,warrantyCompanyId:e.warrantyCompanyId?Object(z.d)("value",e.warrantyCompanyId,t.allVendorsList):null,warrantyStartDate:e.warrantyStartDate?new Date(e.warrantyStartDate):null,warrantyEndDate:e.warrantyEndDate?new Date(e.warrantyEndDate):null}),t.originalAsset=t.currentAsset,t.getAssetStatusList(""),t.getAssetInventoryStatusList(),t.toGetDocumentsListNew(t.assetInventoryId),t.toGetDocumentsListWarranty(t.assetInventoryId),t.currentAsset.isTangible||t.toGetDocumentsListInt(t.assetInventoryId),t.currentAsset.isIntangible}),(function(e){t.isSpinnerVisible=!1;var n=e;t.errorMessageHandler(n)}))}},{key:"filterAssetList",value:function(e){if(this.assetListFilter=this.allAssetList,void 0!==e.query&&null!==e.query){this.filterAssetIdInEdit(e.query);var t=_toConsumableArray(this.allAssetList.filter((function(t){return t.label.toLowerCase().includes(e.query.toLowerCase())})));this.assetListFilter=t}}},{key:"filterVendorList",value:function(e){this.vendorListFilter=this.allVendorsList,void 0!==e.query&&null!==e.query?this.loadVendorData(e.query):this.loadVendorData("");var t=_toConsumableArray(this.allVendorsList.filter((function(t){return t.label.toLowerCase().includes(e.query.toLowerCase())})));this.vendorListFilter=t}},{key:"onAssetIdselection",value:function(e,t){var n=this;e&&null!=e.value&&("fromHtml"==t&&(this.whereItComesFrom=t,this.isSpinnerVisible=!0),this.assetService.getAssetDataForInventoryById(e.value).subscribe((function(e){"fromHtml"==t&&(n.orignEditData=e,n.loadVendorData(""),n.getManagementStructureDetails(e?e.managementStructureId:null,n.authService.currentUser?n.authService.currentUser.employeeId:0),n.getManagementStructureLevelIds(e?e.managementStructureId:0)),n.assetRecordIdForCapes=n.assetRecordIdForCapes?n.assetRecordIdForCapes:e.assetRecordId,setTimeout((function(){n.currentAsset=Object.assign({},e,{isTangible:!e.isIntangible,assetRecordId:{value:e.assetRecordId,label:e.assetId},entryDate:e.entryDate?new Date(e.entryDate):n.currentDate,manufacturedDate:e.manufacturedDate?new Date(e.manufacturedDate):null,expirationDate:e.expirationDate?new Date(e.expirationDate):null,unitCost:e.unitCost?Object(z.b)(e.unitCost,2):"0.00",installationCost:e.installationCost?Object(z.b)(e.installationCost,2):"0.00",freight:e.freight?Object(z.b)(e.freight,2):"0.00",insurance:e.insurance?Object(z.b)(e.insurance,2):"0.00",taxes:e.taxes?Object(z.b)(e.taxes,2):"0.00",residualPercentage:e.residualPercentage?Object(z.b)(e.residualPercentage,2):"0.00",calibrationDefaultCost:e.calibrationDefaultCost?Object(z.b)(e.calibrationDefaultCost,2):"",certificationDefaultCost:e.certificationDefaultCost?Object(z.b)(e.certificationDefaultCost,2):"",inspectionDefaultCost:e.inspectionDefaultCost?Object(z.b)(e.inspectionDefaultCost,2):"",verificationDefaultCost:e.verificationDefaultCost?Object(z.b)(e.verificationDefaultCost,2):"",calibrationDefaultVendorId:e.calibrationDefaultVendorId?Object(z.d)("value",e.calibrationDefaultVendorId,n.allVendorsList):null,certificationDefaultVendorId:e.certificationDefaultVendorId?Object(z.d)("value",e.certificationDefaultVendorId,n.allVendorsList):null,inspectionDefaultVendorId:e.inspectionDefaultVendorId?Object(z.d)("value",e.inspectionDefaultVendorId,n.allVendorsList):null,verificationDefaultVendorId:e.verificationDefaultVendorId?Object(z.d)("value",e.verificationDefaultVendorId,n.allVendorsList):null,maintenanceDefaultVendorId:e.maintenanceDefaultVendorId?Object(z.d)("value",e.maintenanceDefaultVendorId,n.allVendorsList):null,warrantyDefaultVendorId:e.warrantyDefaultVendorId?Object(z.d)("value",e.warrantyDefaultVendorId,n.allVendorsList):null,assetType:e.assetTypeName,isSerialized:!!e.isSerialized&&e.isSerialized,calibrationRequired:!!e.calibrationRequired&&e.calibrationRequired,certificationRequired:!!e.certificationRequired&&e.certificationRequired,inspectionRequired:!!e.inspectionRequired&&e.inspectionRequired,verificationRequired:!!e.verificationRequired&&e.verificationRequired,assetIsMaintenanceReqd:!!e.assetIsMaintenanceReqd&&e.assetIsMaintenanceReqd,isWarrantyRequired:!!e.isWarrantyRequired&&e.isWarrantyRequired,inventoryStatusId:n.basicValue?n.basicValue:1}),n.currentAsset.inventoryNumber=n.originalAsset?n.originalAsset.inventoryNumber:"Generating",n.currentAsset.inventoryNumber=n.originalAsset?n.originalAsset.inventoryNumber:"Generating","fromOnload"==t&&(n.currentAsset.entryDate=n.originalAsset.entryDate?n.originalAsset.entryDate:new Date(e.entryDate),n.currentAsset.manufacturedDate=n.originalAsset.manufacturedDate?n.originalAsset.manufacturedDate:new Date(e.manufacturedDate),n.currentAsset.expirationDate=n.originalAsset.expirationDate?n.originalAsset.expirationDate:new Date(e.expirationDate),n.currentAsset.unitCost=n.originalAsset.unitCost?n.originalAsset.unitCost:Object(z.b)(e.unitCost,2),n.currentAsset.installationCost=n.originalAsset.installationCost?n.originalAsset.installationCost:Object(z.b)(e.installationCost,2),n.currentAsset.freight=n.originalAsset.freight?n.originalAsset.freight:Object(z.b)(e.freight,2),n.currentAsset.insurance=n.originalAsset.insurance?n.originalAsset.insurance:Object(z.b)(e.insurance,2),n.currentAsset.taxes=n.originalAsset.taxes?n.originalAsset.taxes:Object(z.b)(e.taxes,2),n.currentAsset.residualPercentage=n.originalAsset.residualPercentage?n.originalAsset.residualPercentage:Object(z.b)(e.residualPercentage,2),n.currentAsset.calibrationDefaultCost=n.originalAsset.calibrationDefaultCost?n.originalAsset.calibrationDefaultCost:Object(z.b)(e.calibrationDefaultCost,2),n.currentAsset.certificationDefaultCost=n.originalAsset.certificationDefaultCost?n.originalAsset.certificationDefaultCost:Object(z.b)(e.certificationDefaultCost,2),n.currentAsset.inspectionDefaultCost=n.originalAsset.inspectionDefaultCost?n.originalAsset.inspectionDefaultCost:Object(z.b)(e.inspectionDefaultCost,2),n.currentAsset.verificationDefaultCost=n.originalAsset.verificationDefaultCost?n.originalAsset.verificationDefaultCost:Object(z.b)(e.verificationDefaultCost,2),n.currentAsset.assetLocationId=n.originalAsset.assetLocationId?n.originalAsset.assetLocationId:null,n.currentAsset.defaultVendorId=e.defaultVendorId?Object(z.d)("value",e.defaultVendorId,n.allVendorsList):null,n.currentAsset.calibrationDefaultVendorId=n.originalAsset.calibrationDefaultVendorId?Object(z.d)("value",n.originalAsset.calibrationDefaultVendorId,n.allVendorsList):null,n.currentAsset.certificationDefaultVendorId=n.originalAsset.certificationDefaultVendorId?Object(z.d)("value",n.originalAsset.certificationDefaultVendorId,n.allVendorsList):null,n.currentAsset.inspectionDefaultVendorId=n.originalAsset.inspectionDefaultVendorId?Object(z.d)("value",n.originalAsset.inspectionDefaultVendorId,n.allVendorsList):null,n.currentAsset.verificationDefaultVendorId=n.originalAsset.verificationDefaultVendorId?Object(z.d)("value",n.originalAsset.verificationDefaultVendorId,n.allVendorsList):null,n.currentAsset.maintenanceDefaultVendorId=n.originalAsset.maintenanceDefaultVendorId?Object(z.d)("value",n.originalAsset.maintenanceDefaultVendorId,n.allVendorsList):null,n.currentAsset.warrantyDefaultVendorId=n.originalAsset.warrantyDefaultVendorId?Object(z.d)("value",n.originalAsset.warrantyDefaultVendorId,n.allVendorsList):null,n.currentAsset.isSerialized=!!e.isSerialized&&e.isSerialized,n.currentAsset.calibrationRequired=!!e.calibrationRequired&&e.calibrationRequired,n.currentAsset.certificationRequired=!!e.certificationRequired&&e.certificationRequired,n.currentAsset.inspectionRequired=!!e.inspectionRequired&&e.inspectionRequired,n.currentAsset.verificationRequired=!!e.verificationRequired&&e.verificationRequired,n.currentAsset.assetIsMaintenanceReqd=!!e.assetIsMaintenanceReqd&&e.assetIsMaintenanceReqd,n.currentAsset.isWarrantyRequired=!!e.isWarrantyRequired&&e.isWarrantyRequired,n.currentAsset.warrantyStartDate=n.originalAsset.warrantyStartDate?n.originalAsset.warrantyStartDate:null,n.currentAsset.warrantyEndDate=n.originalAsset.warrantyEndDate?n.originalAsset.warrantyEndDate:null,n.currentAsset.maintenanceFrequencyMonths=n.originalAsset.maintenanceFrequencyMonths?n.originalAsset.maintenanceFrequencyMonths:e.maintenanceFrequencyMonths,n.currentAsset.maintenanceFrequencyDays=n.originalAsset.maintenanceFrequencyDays?n.originalAsset.maintenanceFrequencyDays:e.maintenanceFrequencyDays,n.currentAsset.assetLife=n.originalAsset.assetLife?n.originalAsset.assetLife:e.assetLife,n.currentAsset.calibrationCurrencyId=n.originalAsset.calibrationCurrencyId?n.originalAsset.calibrationCurrencyId:e.calibrationCurrencyId,n.currentAsset.certificationCurrencyId=n.originalAsset.certificationCurrencyId?n.originalAsset.certificationCurrencyId:e.certificationCurrencyId,n.currentAsset.inspectionCurrencyId=n.originalAsset.inspectionCurrencyId?n.originalAsset.inspectionCurrencyId:e.inspectionCurrencyId,n.currentAsset.verificationCurrencyId=n.originalAsset.verificationCurrencyId?n.originalAsset.verificationCurrencyId:e.verificationCurrencyId,n.currentAsset.inventoryNumber=n.originalAsset.inventoryNumber?n.originalAsset.inventoryNumber:"Generating",n.currentAsset.inventoryStatusId=n.originalAsset.inventoryStatusId?n.originalAsset.inventoryStatusId:e.inventoryStatusId,n.currentAsset.assetStatusId=n.originalAsset.assetStatusId?n.originalAsset.assetStatusId:e.assetStatusId,n.currentAsset.unitOfMeasureName=n.originalAsset.unitOfMeasureName?n.originalAsset.unitOfMeasureName:e.unitOfMeasureName,n.currentAsset.serialNo=n.originalAsset.serialNo,n.currentAsset.memo=n.originalAsset.memo,n.currentAsset.warrantyMemo=n.originalAsset.warrantyMemo?n.originalAsset.warrantyMemo:e.warrantyMemo,n.currentAsset.warrantyStatusId=n.originalAsset.warrantyStatusId?n.originalAsset.warrantyStatusId:e.warrantyStatusId,n.currentAsset.calibrationMemo=n.originalAsset.calibrationMemo?n.originalAsset.calibrationMemo:e.calibrationMemo,n.currentAsset.certificationMemo=n.originalAsset.certificationMemo?n.originalAsset.certificationMemo:e.certificationMemo,n.currentAsset.inspectionMemo=n.originalAsset.inspectionMemo?n.originalAsset.inspectionMemo:e.inspectionMemo,n.currentAsset.verificationMemo=n.originalAsset.verificationMemo?n.originalAsset.verificationMemo:e.verificationMemo,n.currentAsset.assetCalibrationMemo=n.originalAsset.assetCalibrationMemo?n.originalAsset.assetCalibrationMemo:e.assetCalibrationMemo,n.originalAsset.managementStructureId!=e.managementStructureId?n.currentAsset.managementStructureId=n.originalAsset.managementStructureId:n.currentAsset.managementStructureId=e.managementStructureId,n.getManagementStructureDetails(n.currentAsset?n.currentAsset.managementStructureId:null,n.authService.currentUser?n.authService.currentUser.employeeId:0),n.getManagementStructureLevelIds(n.currentAsset?n.currentAsset.managementStructureId:0)),n.getTotalCost(),"fromHtml"==t?setTimeout((function(){n.isSpinnerVisible=!1}),1e3):n.isSpinnerVisible=!0}),2e3)}),(function(e){n.isSpinnerVisible=!1;var t=e;n.errorMessageHandler(t)})))}},{key:"onChangeUnitCost",value:function(){this.currentAsset.unitCost=this.currentAsset.unitCost?Object(z.b)(this.currentAsset.unitCost,2):"0.00"}},{key:"onChangeInstallCost",value:function(){this.currentAsset.installationCost=this.currentAsset.installationCost?Object(z.b)(this.currentAsset.installationCost,2):"0.00"}},{key:"onChangeFreight",value:function(){this.currentAsset.freight=this.currentAsset.freight?Object(z.b)(this.currentAsset.freight,2):"0.00"}},{key:"onChangeInsurance",value:function(){this.currentAsset.insurance=this.currentAsset.insurance?Object(z.b)(this.currentAsset.insurance,2):"0.00"}},{key:"onChangeTaxes",value:function(){this.currentAsset.taxes=this.currentAsset.taxes?Object(z.b)(this.currentAsset.taxes,2):"0.00"}},{key:"getTotalCost",value:function(){var e=(this.currentAsset.unitCost?parseFloat(this.currentAsset.unitCost.toString().replace(/\,/g,"")):0)+(this.currentAsset.installationCost?parseFloat(this.currentAsset.installationCost.toString().replace(/\,/g,"")):0)+(this.currentAsset.freight?parseFloat(this.currentAsset.freight.toString().replace(/\,/g,"")):0)+(this.currentAsset.insurance?parseFloat(this.currentAsset.insurance.toString().replace(/\,/g,"")):0)+(this.currentAsset.taxes?parseFloat(this.currentAsset.taxes.toString().replace(/\,/g,"")):0);this.currentAsset.totalCost=Object(z.b)(e,2)}},{key:"onChangeCalDefaultCost",value:function(){this.currentAsset.calibrationDefaultCost=this.currentAsset.calibrationDefaultCost?Object(z.b)(this.currentAsset.calibrationDefaultCost,2):"0.00"}},{key:"onChangeCertDefaultCost",value:function(){this.currentAsset.certificationDefaultCost=this.currentAsset.certificationDefaultCost?Object(z.b)(this.currentAsset.certificationDefaultCost,2):"0.00"}},{key:"onChangeInspDefaultCost",value:function(){this.currentAsset.inspectionDefaultCost=this.currentAsset.inspectionDefaultCost?Object(z.b)(this.currentAsset.inspectionDefaultCost,2):"0.00"}},{key:"onChangeVerDefaultCost",value:function(){this.currentAsset.verificationDefaultCost=this.currentAsset.verificationDefaultCost?Object(z.b)(this.currentAsset.verificationDefaultCost,2):"0.00"}},{key:"getPageCount",value:function(e,t){return Math.ceil(e/t)}},{key:"openCapes",value:function(){var e=this;if(this.openCapesModel=!0,this.currentAsset.assetRecordId){var t=Object(z.h)("value",this.currentAsset.assetRecordId);this.assetService.getcapabilityListData(t).subscribe((function(t){e.allCapesInfo=t[0]}),(function(t){var n=t;e.errorMessageHandler(n)}))}}},{key:"closeCpes",value:function(){this.openCapesModel=!1}},{key:"selectedLegalEntity",value:function(e){var t=this;this.businessUnitList=[],this.divisionList=[],this.departmentList=[],this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.currentAsset.managementStructureId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).pipe(Object(me.a)(this.onDestroy$)).subscribe((function(e){t.businessUnitList=e}),(function(e){var n=e;t.errorMessageHandler(n)})))}},{key:"selectedBusinessUnit",value:function(e){var t=this;this.divisionList=[],this.departmentList=[],this.managementStructure.buId=e,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.currentAsset.managementStructureId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).pipe(Object(me.a)(this.onDestroy$)).subscribe((function(e){t.divisionList=e}),(function(e){var n=e;t.errorMessageHandler(n)})))}},{key:"selectedDivision",value:function(e){var t=this;this.departmentList=[],this.managementStructure.divisionId=e,this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(this.currentAsset.managementStructureId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).pipe(Object(me.a)(this.onDestroy$)).subscribe((function(e){t.departmentList=e}),(function(e){var n=e;t.errorMessageHandler(n)})))}},{key:"selectedDepartment",value:function(e){this.managementStructure.departmentId=e,0!=e&&null!=e&&null!=e&&(this.currentAsset.managementStructureId=e)}},{key:"onAddMemo",value:function(e){this.disableEditor=!0,"Memo"==e&&(this.headerMemo=this.currentAsset.memo,this.memoLabel=e),"Tolerance Memo"==e&&(this.headerMemo=this.currentAsset.assetCalibrationMemo,this.memoLabel=e),"Calibration Memo"==e&&(this.headerMemo=this.currentAsset.calibrationMemo,this.memoLabel=e),"Certification Memo"==e&&(this.headerMemo=this.currentAsset.certificationMemo,this.memoLabel=e),"Inspection Memo"==e&&(this.headerMemo=this.currentAsset.inspectionMemo,this.memoLabel=e),"Verification Memo"==e&&(this.headerMemo=this.currentAsset.verificationMemo,this.memoLabel=e),"Maintenance Memo"==e&&(this.headerMemo=this.currentAsset.maintenanceMemo,this.memoLabel=e),"Warranty Memo"==e&&(this.headerMemo=this.currentAsset.warrantyMemo,this.memoLabel=e),"Document Memo"==e&&(this.headerMemo=this.documentInformation.docMemo,this.memoLabel=e)}},{key:"onSaveMemo",value:function(){this.disleUpdate=!1,this.disableSaveForEdit=!1,"Memo"==this.memoLabel&&(this.currentAsset.memo=this.headerMemo),"Calibration Memo"==this.memoLabel&&(this.currentAsset.calibrationMemo=this.headerMemo),"Tolerance Memo"==this.memoLabel&&(this.currentAsset.assetCalibrationMemo=this.headerMemo),"Certification Memo"==this.memoLabel&&(this.currentAsset.certificationMemo=this.headerMemo),"Inspection Memo"==this.memoLabel&&(this.currentAsset.inspectionMemo=this.headerMemo),"Verification Memo"==this.memoLabel&&(this.currentAsset.verificationMemo=this.headerMemo),"Maintenance Memo"==this.memoLabel&&(this.currentAsset.maintenanceMemo=this.headerMemo),"Warranty Memo"==this.memoLabel&&(this.currentAsset.warrantyMemo=this.headerMemo),"Document Memo"==this.memoLabel&&(this.documentInformation.docMemo=this.headerMemo)}},{key:"onChangeWarrantyEndDate",value:function(){this.currentAsset.warrantyEndDate&&(this.currentDate>this.currentAsset.warrantyEndDate?this.currentAsset.warrantyStatusId=2:this.currentAsset.warrantyStatusId=3)}},{key:"closeMyModel",value:function(e){H(e).modal("hide"),this.disableDocumentSave=!0}},{key:"fileUpload",value:function(e){0===e.files.length?this.disableFileAttachmentSubmit=!1:this.disableFileAttachmentSubmit=!0;var t=[];this.selectedFileAttachment=[];var n,a=_createForOfIteratorHelper(e.files);try{for(a.s();!(n=a.n()).done;){for(var r=n.value,s=!1,i=0;i<this.sourceViewforDocumentList.length;i++)this.sourceViewforDocumentList[i].fileName==r.name&&1==this.sourceViewforDocumentList[i].typeId&&(s=!0,this.alertService.showMessage("Duplicate","Already Exists this file ",T.d.warn),this.disableFileAttachmentSubmit=!1,this.fileUploadInput&&this.fileUploadInput.clear());s||(t.push({link:r.objectURL,fileName:r.name,isFileFromServer:!1,fileSize:r.size}),this.formDataMain.append(r.name,r))}}catch(o){a.e(o)}finally{a.f()}for(i=0;i<t.length;i++)this.selectedFileAttachment.push({docName:this.documentInformation.docName,docMemo:this.documentInformation.docMemo,docDescription:this.documentInformation.docDescription,createdBy:this.userName,updatedBy:this.userName,link:t[i].link,fileName:t[i].fileName,fileSize:t[i].fileSize,typeId:1,isFileFromServer:!1,attachmentDetailId:0})}},{key:"removeFileMain",value:function(e){this.formDataMain.delete(e.file.name)}},{key:"removeFileWarr",value:function(e){this.formDataWarr.delete(e.file.name)}},{key:"removeFileInt",value:function(e){this.formDataInt.delete(e.file.name)}},{key:"downloadFileUpload",value:function(e){var t="".concat(this.configurations.baseUrl,"/api/FileUpload/downloadattachedfile?filePath=").concat(e.link);window.location.assign(t)}},{key:"addDocumentInformation",value:function(e,t){if(this.disleUpdate=!0,this.disableSaveForEdit=!1,this.selectedFileAttachment!=[])for(var n=0;n<this.selectedFileAttachment.length;n++)this.sourceViewforDocumentList.push({docName:t.docName,docMemo:t.docMemo,docDescription:t.docDescription,link:this.selectedFileAttachment[n].link,fileName:this.selectedFileAttachment[n].fileName,isFileFromServer:!1,attachmentDetailId:0,createdBy:this.userName,updatedBy:this.userName,createdDate:Date.now(),updatedDate:Date.now(),typeId:1,fileSize:(this.selectedFileAttachment[n].fileSize/1048576).toFixed(2)});if(t.attachmentDetailId>0||this.index>0){for(n=0;n<=this.sourceViewforDocumentList.length;n++)if(this.sourceViewforDocumentList[n].attachmentDetailId>0){if(this.sourceViewforDocumentList[n].attachmentDetailId==t.attachmentDetailId){this.sourceViewforDocumentList[n].docName=t.docName,this.sourceViewforDocumentList[n].docMemo=t.docMemo,this.sourceViewforDocumentList[n].docDescription=t.docDescription;break}}else if(n==this.index){this.sourceViewforDocumentList[n].docName=t.docName,this.sourceViewforDocumentList[n].docMemo=t.docMemo,this.sourceViewforDocumentList[n].docDescription=t.docDescription;break}this.index=0,this.isEditButton=!1,this.disableFileAttachmentSubmit,this.dismissDocumentPopupModelNew(e)}this.dismissDocumentPopupModelNew(e),this.sourceViewforDocumentList=_toConsumableArray(this.sourceViewforDocumentList),this.index=0,this.isEditButton=!1,this.disableFileAttachmentSubmit,this.fileUploadInput&&this.fileUploadInput.clear(),this.isEditMode?this.onUploadDocumentListMain():1==this.updateDocuments?this.alertService.showMessage("Success","Updated Document Successfully.",T.d.success):this.alertService.showMessage("Success","Upload Documents Successfully.",T.d.success)}},{key:"dismissDocumentPopupModelNew",value:function(e){this.fileUploadInput.clear(),this.fileUploadInputWarranty.clear(),this.closeMyModel(e)}},{key:"dateFilterForTableNew",value:function(e,t){if(""!==e&&W(e).format("MMMM DD YYYY")){var n=_toConsumableArray(this.sourceViewforDocumentList.filter((function(n){return W(n.createdDate).format("MMMM DD YYYY")===W(e).format("MMMM DD YYYY")&&"createdDate"===t||W(n.updatedDate).format("MMMM DD YYYY")===W(e).format("MMMM DD YYYY")&&"updatedDate"===t?n:void 0})));this.sourceViewforDocumentList=n}else this.sourceViewforDocumentList=this.allDocumentListOriginal}},{key:"editCustomerDocument",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this.updateDocuments=!0,this.disleUpdate=!0,this.selectedFileAttachment=[],this.isEditButton=!0,this.index=t,this.documentInformation=e,e.attachmentDetailId>0?this.toGetDocumentView(e.attachmentDetailId):this.sourceViewforDocument=e}},{key:"deleteAttachmentRow",value:function(e,t,n){this.selectedRowForDelete=e,console.log("row",this.selectedRowForDelete),this.rowIndex=t,this.modal=this.modalService.open(n,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"onAuditHistoryLoadSuccessful",value:function(e,t){this.alertService.stopLoadingMessage(),this.sourceViewforDocumentAudit=e,this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){}),(function(){}))}},{key:"openHistory",value:function(e,t){var n=this;this.alertService.startLoadingMessage(),this.commonService.GetAttachmentAudit(t.attachmentDetailId).subscribe((function(t){n.onAuditHistoryLoadSuccessful(t,e)}),(function(e){var t=e;n.errorMessageHandler(t)}))}},{key:"getColorCodeForHistory",value:function(e,t,n){var a=this.sourceViewforDocumentAudit,r=a.length;if(e>=0&&e<=r)return e+1===r||a[e+1][t]===n}},{key:"dismissModelNew",value:function(){this.isDeleteMode=!1,this.modal.close()}},{key:"deleteItemAndCloseModelNew",value:function(){var e=this,t=this.selectedRowForDelete.attachmentDetailId;t>0?this.commonService.GetAttachmentDeleteById(t,this.userName).subscribe((function(){e.toGetDocumentsListNew(e.assetInventoryId),e.alertService.showMessage("Success","Deleted Attachment  Successfully",T.d.success),e.disableSaveForEdit=!1}),(function(t){var n=t;e.errorMessageHandler(n)})):(this.sourceViewforDocumentList.splice(this.rowIndex,1),this.sourceViewforDocumentList=_toConsumableArray(this.sourceViewforDocumentList)),this.modal.close()}},{key:"toGetDocumentView",value:function(e){var t=this;this.commonService.GetAttachment(e).subscribe((function(e){t.sourceViewforDocument=e||[]}))}},{key:"toGetDocumentsListNew",value:function(e){var t=this;this.commonService.GetDocumentsListNewAsset(e,54,this.maitananceeletedList).subscribe((function(e){t.sourceViewforDocumentList=e||[],t.allDocumentListOriginal=e,t.sourceViewforDocumentList.length>0&&t.sourceViewforDocumentList.forEach((function(e){e.isFileFromServer=!0}))}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"saveFailedHelper",value:function(){}},{key:"addDocumentDetails",value:function(){this.updateDocuments=!1,this.selectedFileAttachment=[],this.selectedFileAttachmentWarranty=[],this.index=0,this.disableFileAttachmentSubmit=!1,this.disableFileAttachmentSubmitWarranty=!0,this.isEditButton=!1,this.documentInformation={docName:"",docMemo:"",docDescription:"",attachmentDetailId:0}}},{key:"dateFilterForTableWarranty",value:function(e,t){if(""!==e&&W(e).format("MMMM DD YYYY")){var n=_toConsumableArray(this.sourceViewforDocumentListWarranty.filter((function(n){return W(n.createdDate).format("MMMM DD YYYY")===W(e).format("MMMM DD YYYY")&&"createdDate"===t||W(n.updatedDate).format("MMMM DD YYYY")===W(e).format("MMMM DD YYYY")&&"updatedDate"===t?n:void 0})));this.sourceViewforDocumentListWarranty=n}else this.sourceViewforDocumentListWarranty=this.allDocumentListOriginalWarranty}},{key:"editCustomerDocumentWarranty",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this.updateDocuments=!0,this.disleUpdate=!0,this.selectedFileAttachment=[],this.selectedFileAttachmentWarranty=[],this.isEditButton=!0,this.index=t,this.documentInformation=e,e.attachmentDetailId>0?this.toGetDocumentViewWarranty(e.attachmentDetailId):this.sourceViewforDocumentWarranty=e}},{key:"deleteAttachmentRowWarranty",value:function(e,t,n){this.selectedRowForDeleteWarranty=e,this.rowIndex=t,this.modal=this.modalService.open(n,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"toGetDocumentViewWarranty",value:function(e){var t=this;this.commonService.GetAttachment(e).subscribe((function(e){t.sourceViewforDocumentWarranty=e||[]}))}},{key:"deleteItemAndCloseModelWarranty",value:function(){var e=this,t=this.selectedRowForDeleteWarranty.attachmentDetailId;t>0?this.commonService.GetAttachmentDeleteById(t,this.userName).subscribe((function(){e.toGetDocumentsListWarranty(e.assetInventoryId),e.alertService.showMessage("Success","Deleted Attachment  Successfully",T.d.success),e.disableSaveForEdit=!1}),(function(t){var n=t;e.errorMessageHandler(n)})):(this.sourceViewforDocumentListWarranty.splice(this.rowIndex,1),this.sourceViewforDocumentListWarranty=_toConsumableArray(this.sourceViewforDocumentListWarranty)),this.modal.close()}},{key:"toGetDocumentsListWarranty",value:function(e){var t=this;this.commonService.GetDocumentsListNewAsset(e,55,this.warrentyDeletedList).subscribe((function(e){t.sourceViewforDocumentListWarranty=e||[],t.allDocumentListOriginalWarranty=e,t.sourceViewforDocumentListWarranty.length>0&&t.sourceViewforDocumentListWarranty.forEach((function(e){e.isFileFromServer=!0}))}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"fileUploadWarranty",value:function(e){0===e.files.length?this.disableFileAttachmentSubmitWarranty=!0:this.disableFileAttachmentSubmitWarranty=!1;var t=[];this.selectedFileAttachmentWarranty=[];var n,a=_createForOfIteratorHelper(e.files);try{for(a.s();!(n=a.n()).done;){for(var r=n.value,s=!1,i=0;i<this.sourceViewforDocumentListWarranty.length;i++)this.sourceViewforDocumentListWarranty[i].fileName==r.name&&2==this.sourceViewforDocumentListWarranty[i].typeId&&(s=!0,this.alertService.showMessage("Duplicate","Already Exists this file ",T.d.warn),this.disableFileAttachmentSubmitWarranty=!0,this.fileUploadInputWarranty&&this.fileUploadInputWarranty.clear());s||(t.push({link:r.objectURL,fileName:r.name,isFileFromServer:!1,fileSize:r.size}),this.formDataWarr.append(r.name,r))}}catch(o){a.e(o)}finally{a.f()}for(i=0;i<t.length;i++)this.selectedFileAttachmentWarranty.push({docName:this.documentInformation.docName,docMemo:this.documentInformation.docMemo,docDescription:this.documentInformation.docDescription,createdBy:this.userName,updatedBy:this.userName,link:t[i].link,fileName:t[i].fileName,fileSize:t[i].fileSize,typeId:2,isFileFromServer:!1,attachmentDetailId:0})}},{key:"addDocumentInformationWarranty",value:function(e,t){if(this.disableSaveForEdit=!1,this.selectedFileAttachmentWarranty!=[])for(var n=0;n<this.selectedFileAttachmentWarranty.length;n++)this.sourceViewforDocumentListWarranty.push({docName:t.docName,docMemo:t.docMemo,docDescription:t.docDescription,link:this.selectedFileAttachmentWarranty[n].link,fileName:this.selectedFileAttachmentWarranty[n].fileName,isFileFromServer:!1,attachmentDetailId:0,createdBy:this.userName,updatedBy:this.userName,createdDate:Date.now(),updatedDate:Date.now(),typeId:2,fileSize:(this.selectedFileAttachmentWarranty[n].fileSize/1048576).toFixed(2)});if(t.attachmentDetailId>0||this.index>0){for(n=0;n<=this.sourceViewforDocumentListWarranty.length;n++)if(this.sourceViewforDocumentListWarranty[n].attachmentDetailId>0){if(this.sourceViewforDocumentListWarranty[n].attachmentDetailId==t.attachmentDetailId){this.sourceViewforDocumentListWarranty[n].docName=t.docName,this.sourceViewforDocumentListWarranty[n].docMemo=t.docMemo,this.sourceViewforDocumentListWarranty[n].docDescription=t.docDescription;break}}else if(n==this.index){this.sourceViewforDocumentListWarranty[n].docName=t.docName,this.sourceViewforDocumentListWarranty[n].docMemo=t.docMemo,this.sourceViewforDocumentListWarranty[n].docDescription=t.docDescription;break}this.index=0,this.isEditButton=!1,this.disableFileAttachmentSubmitWarranty,this.dismissDocumentPopupModelNew(e)}this.dismissDocumentPopupModelNew(e),this.sourceViewforDocumentListWarranty=_toConsumableArray(this.sourceViewforDocumentListWarranty),this.index=0,this.isEditButton=!1,this.disableFileAttachmentSubmit,this.fileUploadInput&&this.fileUploadInput.clear(),this.isEditMode?this.onUploadDocumentListWarranty():1==this.updateDocuments?this.alertService.showMessage("Success","Updated Document Successfully.",T.d.success):this.alertService.showMessage("Success","Upload Documents Successfully.",T.d.success)}},{key:"fileUploadInt",value:function(e){0===e.files.length?this.disableFileAttachmentSubmitInt=!0:this.disableFileAttachmentSubmitInt=!1;var t=[];this.selectedFileAttachmentInt=[];var n,a=_createForOfIteratorHelper(e.files);try{for(a.s();!(n=a.n()).done;){for(var r=n.value,s=!1,i=0;i<this.sourceViewforDocumentListInt.length;i++)this.sourceViewforDocumentListInt[i].fileName==r.name&&(s=!0,this.alertService.showMessage("Duplicate","Already Exists this file ",T.d.warn),this.disableFileAttachmentSubmitInt=!0,this.fileUploadInputInt&&this.fileUploadInputInt.clear());s||(t.push({link:r.objectURL,fileName:r.name,isFileFromServer:!1,fileSize:r.size}),this.formDataInt.append(r.name,r))}}catch(o){a.e(o)}finally{a.f()}for(i=0;i<t.length;i++)this.selectedFileAttachmentInt.push({docName:this.documentInformation.docName,docMemo:this.documentInformation.docMemo,docDescription:this.documentInformation.docDescription,createdBy:this.userName,updatedBy:this.userName,link:t[i].link,fileName:t[i].fileName,fileSize:t[i].fileSize,typeId:1,isFileFromServer:!1,attachmentDetailId:0})}},{key:"addDocumentInformationInt",value:function(e,t){var n=this;if(this.disableSaveForEdit=!1,this.selectedFileAttachmentInt!=[])for(var a=0;a<this.selectedFileAttachmentInt.length;a++)this.sourceViewforDocumentListInt.push({docName:t.docName,docMemo:t.docMemo,docDescription:t.docDescription,link:this.selectedFileAttachmentInt[a].link,fileName:this.selectedFileAttachmentInt[a].fileName,isFileFromServer:!1,attachmentDetailId:0,createdBy:this.userName,updatedBy:this.userName,createdDate:Date.now(),updatedDate:Date.now(),typeId:3,fileSize:(this.selectedFileAttachmentInt[a].fileSize/1048576).toFixed(2)});if(t.attachmentDetailId>0||this.index>0){for(a=0;a<=this.sourceViewforDocumentListInt.length;a++)if(this.sourceViewforDocumentListInt[a].attachmentDetailId>0){if(this.sourceViewforDocumentListInt[a].attachmentDetailId==t.attachmentDetailId){this.sourceViewforDocumentListInt[a].docName=t.docName,this.sourceViewforDocumentListInt[a].docMemo=t.docMemo,this.sourceViewforDocumentListInt[a].docDescription=t.docDescription;break}}else if(a==this.index){this.sourceViewforDocumentListInt[a].docName=t.docName,this.sourceViewforDocumentListInt[a].docMemo=t.docMemo,this.sourceViewforDocumentListInt[a].docDescription=t.docDescription;break}this.index=0,this.isEditButton=!1,this.disableFileAttachmentSubmitInt,this.dismissDocumentPopupModelNew(e)}this.dismissDocumentPopupModelNew(e),this.sourceViewforDocumentListInt=_toConsumableArray(this.sourceViewforDocumentListInt),this.index=0,setTimeout((function(){n.isEditButton=!1}),1e3),this.disableFileAttachmentSubmitInt,this.fileUploadInputInt&&this.fileUploadInputInt.clear(),this.isEditMode?this.onUploadDocumentListInt():1==this.updateDocuments?this.alertService.showMessage("Success","Updated Document Successfully.",T.d.success):this.alertService.showMessage("Success","Upload Documents Successfully.",T.d.success)}},{key:"deleteItemAndCloseModelInt",value:function(){var e=this,t=this.selectedRowForDeleteInt.attachmentDetailId;t>0?this.commonService.GetAttachmentDeleteById(t,this.userName).subscribe((function(){e.toGetDocumentsListInt(e.assetInventoryId),e.alertService.showMessage("Success","Deleted Attachment  Successfully",T.d.success),e.disableSaveForEdit=!1}),(function(t){var n=t;e.errorMessageHandler(n)})):(this.sourceViewforDocumentListInt.splice(this.rowIndex,1),this.sourceViewforDocumentListInt=_toConsumableArray(this.sourceViewforDocumentListInt)),this.modal.close()}},{key:"toGetDocumentsListInt",value:function(e){var t=this;this.commonService.GetDocumentsListNewAsset(e,56,this.intangibleDeletedList).subscribe((function(e){t.sourceViewforDocumentListInt=e||[],t.allDocumentListOriginal=e,t.sourceViewforDocumentListInt.length>0&&t.sourceViewforDocumentListInt.forEach((function(e){e.isFileFromServer=!0}))}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"dateFilterForTableInt",value:function(e,t){if(""!==e&&W(e).format("MMMM DD YYYY")){var n=_toConsumableArray(this.sourceViewforDocumentListInt.filter((function(n){return W(n.createdDate).format("MMMM DD YYYY")===W(e).format("MMMM DD YYYY")&&"createdDate"===t||W(n.updatedDate).format("MMMM DD YYYY")===W(e).format("MMMM DD YYYY")&&"updatedDate"===t?n:void 0})));this.sourceViewforDocumentListInt=n}else this.sourceViewforDocumentListInt=this.allDocumentListOriginal}},{key:"editCustomerDocumentInt",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this.updateDocuments=!0,this.disleUpdate=!0,this.selectedFileAttachmentInt=[],this.isEditButton=!0,this.index=t,this.documentInformation=e,e.attachmentDetailId>0?this.toGetDocumentViewInt(e.attachmentDetailId):this.sourceViewforDocumentInt=e}},{key:"toGetDocumentViewInt",value:function(e){var t=this;this.commonService.GetAttachment(e).subscribe((function(e){t.sourceViewforDocumentInt=e||[]}))}},{key:"deleteAttachmentRowInt",value:function(e,t,n){this.selectedRowForDeleteInt=e,this.rowIndex=t,this.modal=this.modalService.open(n,{size:"sm"}),this.modal.result.then((function(){}),(function(){}))}},{key:"onUploadDocumentListMain",value:function(){var e=this,t={referenceId:this.assetInventoryId,masterCompanyId:this.currentUserMasterCompanyId,createdBy:this.userName,updatedBy:this.userName,moduleId:54};for(var n in t)this.formDataMain.append(n,t[n]);if(this.sourceViewforDocumentList.length>0){for(var a=[],r=0;r<this.sourceViewforDocumentList.length;r++)a.push({docName:this.sourceViewforDocumentList[r].docName,docMemo:this.sourceViewforDocumentList[r].docMemo,docDescription:this.sourceViewforDocumentList[r].docDescription,link:this.sourceViewforDocumentList[r].link,fileName:this.sourceViewforDocumentList[r].fileName,isFileFromServer:!1,attachmentDetailId:this.sourceViewforDocumentList[r].attachmentDetailId,createdBy:this.sourceViewforDocumentList[r].createdBy,updatedBy:this.sourceViewforDocumentList[r].updatedBy,createdDate:this.sourceViewforDocumentList[r].createdDate,updatedDate:this.sourceViewforDocumentList[r].updatedDate,fileSize:this.sourceViewforDocumentList[r].fileSize,moduleId:this.sourceViewforDocumentList[r].moduleId,typeId:this.sourceViewforDocumentList[r].typeId});this.formDataMain.append("attachmentdetais",JSON.stringify(a)),this.commonService.uploadDocumentsEndpoint(this.formDataMain).subscribe((function(){e.isEditMode&&(1==e.updateDocuments?e.alertService.showMessage("Success","Updated Document Successfully.",T.d.success):e.alertService.showMessage("Success","Upload Documents Successfully.",T.d.success)),e.formDataMain=new FormData,e.toGetDocumentsListNew(e.assetInventoryId)}),(function(t){var n=t;e.errorMessageHandler(n)}))}}},{key:"onUploadDocumentListWarranty",value:function(){var e=this,t={referenceId:this.assetInventoryId,masterCompanyId:this.currentUserMasterCompanyId,createdBy:this.userName,updatedBy:this.userName,moduleId:55};for(var n in t)this.formDataWarr.append(n,t[n]);if(this.sourceViewforDocumentListWarranty.length>0){for(var a=[],r=0;r<this.sourceViewforDocumentListWarranty.length;r++)a.push({docName:this.sourceViewforDocumentListWarranty[r].docName,docMemo:this.sourceViewforDocumentListWarranty[r].docMemo,docDescription:this.sourceViewforDocumentListWarranty[r].docDescription,link:this.sourceViewforDocumentListWarranty[r].link,fileName:this.sourceViewforDocumentListWarranty[r].fileName,isFileFromServer:!1,attachmentDetailId:this.sourceViewforDocumentListWarranty[r].attachmentDetailId,createdBy:this.sourceViewforDocumentListWarranty[r].createdBy,updatedBy:this.sourceViewforDocumentListWarranty[r].updatedBy,createdDate:this.sourceViewforDocumentListWarranty[r].createdDate,updatedDate:this.sourceViewforDocumentListWarranty[r].updatedDate,fileSize:this.sourceViewforDocumentListWarranty[r].fileSize,moduleId:this.sourceViewforDocumentListWarranty[r].moduleId,typeId:this.sourceViewforDocumentListWarranty[r].typeId});this.formDataWarr.append("attachmentdetais",JSON.stringify(a)),this.commonService.uploadDocumentsEndpoint(this.formDataWarr).subscribe((function(){e.isEditMode&&(1==e.updateDocuments?e.alertService.showMessage("Success","Updated Document Successfully.",T.d.success):e.alertService.showMessage("Success","Upload Documents Successfully.",T.d.success)),e.formDataWarr=new FormData,e.toGetDocumentsListWarranty(e.assetInventoryId)}),(function(t){var n=t;e.errorMessageHandler(n)}))}}},{key:"onUploadDocumentListInt",value:function(){var e=this,t={referenceId:this.assetInventoryId,masterCompanyId:this.currentUserMasterCompanyId,createdBy:this.userName,updatedBy:this.userName,moduleId:56};for(var n in t)this.formDataInt.append(n,t[n]);if(this.sourceViewforDocumentListInt.length>0){for(var a=[],r=0;r<this.sourceViewforDocumentListInt.length;r++)a.push({docName:this.sourceViewforDocumentListInt[r].docName,docMemo:this.sourceViewforDocumentListInt[r].docMemo,docDescription:this.sourceViewforDocumentListInt[r].docDescription,link:this.sourceViewforDocumentListInt[r].link,fileName:this.sourceViewforDocumentListInt[r].fileName,isFileFromServer:!1,attachmentDetailId:this.sourceViewforDocumentListInt[r].attachmentDetailId,createdBy:this.sourceViewforDocumentListInt[r].createdBy,updatedBy:this.sourceViewforDocumentListInt[r].updatedBy,createdDate:this.sourceViewforDocumentListInt[r].createdDate,updatedDate:this.sourceViewforDocumentListInt[r].updatedDate,fileSize:this.sourceViewforDocumentListInt[r].fileSize,moduleId:this.sourceViewforDocumentListInt[r].moduleId,typeId:this.sourceViewforDocumentListInt[r].typeId});this.formDataInt.append("attachmentdetais",JSON.stringify(a)),this.commonService.uploadDocumentsEndpoint(this.formDataInt).subscribe((function(){e.isEditMode&&(1==e.updateDocuments?e.alertService.showMessage("Success","Updated Document Successfully.",T.d.success):e.alertService.showMessage("Success","Upload Documents Successfully.",T.d.success)),e.formDataInt=new FormData,e.toGetDocumentsListInt(e.assetInventoryId)}),(function(t){var n=t;e.errorMessageHandler(n)}))}}},{key:"getmemo",value:function(e){this.disableSaveForEdit=!1}},{key:"getmemoInfo",value:function(e){this.disleUpdate=!1}},{key:"editorgetmemo",value:function(e){this.disableEditor=!1}},{key:"onSaveAssetInventory",value:function(){var e=this;if(this.postData={},1==this.currentAsset.isTangible){if(1==this.currentAsset.calibrationRequired&&0==this.currentAsset.calibrationFrequencyMonths&&0==this.currentAsset.calibrationFrequencyDays)return void this.alertService.showMessage("Warning","Months & Days Cant be Zero",T.d.warn);if(1==this.currentAsset.certificationRequired&&0==this.currentAsset.certificationFrequencyMonths&&0==this.currentAsset.certificationFrequencyDays)return void this.alertService.showMessage("Warning","Months & Days Cant be Zero",T.d.warn);if(1==this.currentAsset.inspectionRequired&&0==this.currentAsset.inspectionFrequencyMonths&&0==this.currentAsset.inspectionFrequencyDays)return void this.alertService.showMessage("Warning","Months & Days Cant be Zero",T.d.warn);if(1==this.currentAsset.verificationRequired&&0==this.currentAsset.verificationFrequencyMonths&&0==this.currentAsset.verificationFrequencyDays)return void this.alertService.showMessage("Warning","Months & Days Cant be Zero",T.d.warn);if(1==this.currentAsset.assetIsMaintenanceReqd&&0==this.currentAsset.maintenanceFrequencyMonths&&0==this.currentAsset.maintenanceFrequencyDays)return void this.alertService.showMessage("Warning","Months & Days Cant be Zero",T.d.warn);this.postData=Object.assign({},this.currentAsset,{assetInventoryId:this.assetInventoryId,assetRecordId:Object(z.h)("value",this.currentAsset.assetRecordId),entryDate:this.currentAsset.entryDate?this.datePipe.transform(this.currentAsset.entryDate,"MM/dd/yyyy"):null,manufacturedDate:this.currentAsset.manufacturedDate?this.datePipe.transform(this.currentAsset.manufacturedDate,"MM/dd/yyyy"):null,expirationDate:this.currentAsset.expirationDate?this.datePipe.transform(this.currentAsset.expirationDate,"MM/dd/yyyy"):null,unitCost:this.currentAsset.unitCost?parseFloat(this.currentAsset.unitCost.toString().replace(/\,/g,"")):"0.00",installationCost:this.currentAsset.installationCost?parseFloat(this.currentAsset.installationCost.toString().replace(/\,/g,"")):"0.00",freight:this.currentAsset.freight?parseFloat(this.currentAsset.freight.toString().replace(/\,/g,"")):"0.00",insurance:this.currentAsset.insurance?parseFloat(this.currentAsset.insurance.toString().replace(/\,/g,"")):"0.00",taxes:this.currentAsset.taxes?parseFloat(this.currentAsset.taxes.toString().replace(/\,/g,"")):"0.00",totalCost:this.currentAsset.totalCost?parseFloat(this.currentAsset.totalCost.toString().replace(/\,/g,"")):"0.00",calibrationDefaultCost:this.currentAsset.calibrationDefaultCost?this.currentAsset.calibrationDefaultCost.toString().replace(/\,/g,""):"0.00",certificationDefaultCost:this.currentAsset.certificationDefaultCost?this.currentAsset.certificationDefaultCost.toString().replace(/\,/g,""):"0.00",inspectionDefaultCost:this.currentAsset.inspectionDefaultCost?this.currentAsset.inspectionDefaultCost.toString().replace(/\,/g,""):"0.00",verificationDefaultCost:this.currentAsset.verificationDefaultCost?this.currentAsset.verificationDefaultCost.toString().replace(/\,/g,""):"0.00",warrantyCompanyId:this.currentAsset.warrantyCompanyId?Object(z.h)("value",this.currentAsset.warrantyCompanyId):null,warrantyStartDate:this.currentAsset.warrantyStartDate?this.datePipe.transform(this.currentAsset.warrantyStartDate,"MM/dd/yyyy"):null,warrantyEndDate:this.currentAsset.warrantyEndDate?this.datePipe.transform(this.currentAsset.warrantyEndDate,"MM/dd/yyyy"):null,calibrationDefaultVendorId:this.currentAsset.calibrationDefaultVendorId?Object(z.h)("value",this.currentAsset.calibrationDefaultVendorId):null,certificationDefaultVendorId:this.currentAsset.certificationDefaultVendorId?Object(z.h)("value",this.currentAsset.certificationDefaultVendorId):null,inspectionDefaultVendorId:this.currentAsset.inspectionDefaultVendorId?Object(z.h)("value",this.currentAsset.inspectionDefaultVendorId):null,verificationDefaultVendorId:this.currentAsset.verificationDefaultVendorId?Object(z.h)("value",this.currentAsset.verificationDefaultVendorId):null,maintenanceDefaultVendorId:this.currentAsset.maintenanceDefaultVendorId?Object(z.h)("value",this.currentAsset.maintenanceDefaultVendorId):null,warrantyDefaultVendorId:this.currentAsset.warrantyDefaultVendorId?Object(z.h)("value",this.currentAsset.warrantyDefaultVendorId):null})}else this.postData=Object.assign({},this.currentAsset,{assetInventoryId:this.assetInventoryId,assetRecordId:Object(z.h)("value",this.currentAsset.assetRecordId),entryDate:this.currentAsset.entryDate?this.datePipe.transform(this.currentAsset.entryDate,"MM/dd/yyyy"):null});this.isEditMode?this.assetService.updateAssetInventory(this.postData).subscribe((function(t){t?(e.disableSaveForEdit=!0,e.currentAsset.updatedBy=e.userName,e.assetInventoryId=t.assetInventoryId,e.alertService.showMessage("Success","Asset Inventory Updated Successfully.",T.d.success)):e.alertService.showMessage("Failed","Asset Inventory not Updated Successfully.",T.d.error)}),(function(t){var n=t;e.errorMessageHandler(n)})):this.assetService.addAssetInventory(this.postData).subscribe((function(t){t?(e.currentAsset.updatedBy=e.userName,e.assetInventoryId=t.assetInventoryId,e.onUploadDocumentListMain(),e.onUploadDocumentListWarranty(),e.onUploadDocumentListInt(),e.alertService.showMessage("Success","Asset Inventory Created Successfully.",T.d.success),e.route.navigateByUrl("/assetmodule/assetpages/app-asset-inventory-listing")):e.alertService.showMessage("Failed","Asset Inventory not created successfully.",T.d.error)}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"onFilterAssetStatus",value:function(e){this.getAssetStatusList(e)}},{key:"getAssetStatusList",value:function(e){var t=this;this.setEditArray=[],1==this.isEditMode&&this.currentAsset.assetStatusId?this.setEditArray.push(this.currentAsset.assetStatusId):this.setEditArray.push(0);var n=e;this.commonService.autoSuggestionSmartDropDownList("AssetStatus","AssetStatusId","Name",n,!0,20,this.setEditArray.join()).subscribe((function(e){t.assetStatusList=e.map((function(e){return Object.assign({},e,{assetStatusId:e.value,name:e.label})}))}),(function(e){var n=e;t.errorMessageHandler(n)}))}},{key:"getAssetInventoryStatusList",value:function(){var e=this;if(1==this.isEditMode){this.setEditArray=[],this.setEditArray.push(this.currentAsset.inventoryStatusId);this.commonService.autoSuggestionSmartDropDownList("AssetInventoryStatus","AssetInventoryStatusId","Status","",!0,200,this.setEditArray.join()).subscribe((function(t){e.assetInventoryStatusList=t}),(function(t){var n=t;e.errorMessageHandler(n)}))}else this.commonService.smartDropDownList("AssetInventoryStatus","AssetInventoryStatusId","Status").subscribe((function(t){e.assetInventoryStatusList=t}),(function(t){var n=t;e.errorMessageHandler(n)}));this.currentAsset.inventoryStatusId?this.currentAsset.inventoryStatusId=this.currentAsset.inventoryStatusId:this.assetInventoryStatusList.forEach((function(t){"Available"==t.label&&(e.currentAsset.inventoryStatusId=t.value,e.basicValue=t.value)}))}},{key:"errorMessageHandler",value:function(e){this.isSpinnerVisible=!1,this.alertService.showMessage("Error",e,T.d.error)}},{key:"parsedText",value:function(e){if(e)return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}},{key:"restore",value:function(e,t,n){this.restorerecord=t,this.documentType=n,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then((function(){}),(function(){}))}},{key:"restoreRecord",value:function(){var e=this;this.restorerecord&&null!=this.restorerecord.attachmentDetailId&&this.commonService.updatedeletedrecords("AttachmentDetails","AttachmentDetailId",this.restorerecord.attachmentDetailId).subscribe((function(t){e.getDeleteListByStatus(!0,e.documentType),e.disableSaveForEdit=!1,e.alertService.showMessage("Success","Successfully Updated Status",T.d.success),e.modal.close()}),(function(t){var n=t;e.errorMessageHandler(n)}))}},{key:"dismissModel",value:function(){this.modal.close()}},{key:"getDeleteListByStatus",value:function(e,t){var n=this;this.isSpinnerVisible=!0,1==t?(this.maitananceeletedList=e,this.toGetDocumentsListNew(this.assetInventoryId)):2==t?(this.warrentyDeletedList=e,this.toGetDocumentsListWarranty(this.assetInventoryId)):(this.intangibleDeletedList=e,this.toGetDocumentsListInt(this.assetInventoryId)),setTimeout((function(){n.isSpinnerVisible=!1}),1e3)}},{key:"addNew",value:function(){this.route.navigateByUrl("/assetmodule/assetpages/app-create-asset-inventory"),this.assetService.listCollection={},this.assetService.isEditMode=!1}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"currentUserMasterCompanyId",get:function(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:null}},{key:"employeeId",get:function(){return this.authService.currentUser?this.authService.currentUser.employeeId:0}}]),e}();he.ctorParameters=function(){return[{type:O.a},{type:c.Location},{type:j.a},{type:x.a},{type:P.a},{type:T.b},{type:_.a},{type:U.a},{type:L.c},{type:S.Router},{type:S.ActivatedRoute},{type:c.DatePipe}]},a.b([Object(r.ViewChild)("fileUploadInput",{static:!1})],he.prototype,"fileUploadInput",void 0),a.b([Object(r.ViewChild)("fileUploadInputWarranty",{static:!1})],he.prototype,"fileUploadInputWarranty",void 0),a.b([Object(r.ViewChild)("fileUploadInputInt",{static:!1})],he.prototype,"fileUploadInputInt",void 0),he=a.b([Object(r.Component)({selector:"app-create-asset-inventory",template:a.c(n("JaF0")).default,providers:[c.DatePipe],styles:[a.c(n("jewU")).default]})],he);var ve=n("MKys"),be=function(){function e(t,n){_classCallCheck(this,e),this.alertService=t,this._route=n}return _createClass(e,[{key:"ngOnInit",value:function(){}},{key:"openAllCollapse",value:function(){H("#step1").collapse("show"),H("#step2").collapse("show"),H("#step3").collapse("show"),H("#step4").collapse("show")}},{key:"closeAllCollapse",value:function(){H("#step1").collapse("hide"),H("#step2").collapse("hide"),H("#step3").collapse("hide"),H("#step4").collapse("hide")}}]),e}();be.ctorParameters=function(){return[{type:T.b},{type:S.Router}]},a.b([Object(r.Input)()],be.prototype,"assetViewList",void 0),be=a.b([Object(r.Component)({selector:"app-view-asset",template:a.c(n("Ag15")).default,animations:[k.a],styles:[a.c(n("GCBe")).default]})],be);var fe=function(){function e(t,n,a,r,s,i,o){_classCallCheck(this,e),this.commonService=t,this._actRoute=n,this.assetService=a,this.assetLocationService=r,this.authService=s,this.alertService=i,this.router=o,this.onDestroy$=new pe.a,this.assetAdjustmentSetup={},this.assetAdjustmentData=[],this.allAdjReasonInfo=[],this.allAssetList=[],this.assetListFilter=[],this.allLocationList=[],this.tempAssetData=[],this.isSpinnerVisible=!0,this.existingMgmentStuc={level1:"",level2:"",level3:"",level4:""},this.managementStructure={companyId:0,buId:0,divisionId:0,departmentId:0},this.managementStructureOnLoad={companyId:0,buId:0,divisionId:0,departmentId:0},this.companyAllow=!1,this.businessAllow=!1,this.divisionAllow=!1,this.deptAllow=!1,this.showCompany=!1,this.showBusiness=!1,this.showDivision=!1,this.showDepartment=!1,this.disableLevel1=!1,this.disableLevel2=!1,this.disableLevel3=!1,this.disableLevel4=!1,this.disableMgmtStrucAdj=!1,this.usefulLifeAllow=!1,this.disableUsefulLifeAdj=!1,this.assetIdAllow=!1,this.disableAssetIdAdj=!1,this.locationAllow=!1,this.disableLocationAdj=!1,this.disableLocation=!1}return _createClass(e,[{key:"ngOnInit",value:function(){this.getAssetAdjustmentDataType(),this.getAdjReasonData(),this.assetInventoryId=this._actRoute.snapshot.params.id,this.assetInventoryId&&this.getAssetAdjDetailsById(this.assetInventoryId)}},{key:"getLegalEntity",value:function(){var e=this;this.commonService.getLegalEntityList().pipe(Object(me.a)(this.onDestroy$)).subscribe((function(t){e.legalEntityList=t}))}},{key:"getAssetList",value:function(){var e=this;this.commonService.smartDropDownList("Asset","AssetRecordId","AssetId").pipe(Object(me.a)(this.onDestroy$)).subscribe((function(t){e.allAssetList=t}))}},{key:"getLocationList",value:function(){var e=this;this.assetLocationService.getAssetLocationsList().pipe(Object(me.a)(this.onDestroy$)).subscribe((function(t){e.allLocationList=t}))}},{key:"getAdjReasonData",value:function(){var e=this;this.commonService.smartDropDownList("StocklineAdjustmentReason","AdjustmentReasonId","Description").subscribe((function(t){e.allAdjReasonInfo=t}))}},{key:"getAssetAdjustmentDataType",value:function(){var e=this;this.commonService.smartDropDownList("AssetInventoryAdjustmentDataType","AssetInventoryAdjustmentDataTypeId","Description").pipe(Object(me.a)(this.onDestroy$)).subscribe((function(t){e.assetAdjustmentData=t.map((function(e){return{adjustmentDataTypeId:e.value,assetInventoryAdjustmentDataType:e.label}})),e.assetAdjustmentData=e.assetAdjustmentData.sort((function(e,t){return e.adjustmentDataTypeId>t.adjustmentDataTypeId?1:t.adjustmentDataTypeId>e.adjustmentDataTypeId?-1:0})),e.assetAdjustmentData.map((function(t){t.adjustmentReasonId=0,e.isSpinnerVisible=!1}))}))}},{key:"getAssetAdjDetailsById",value:function(e){var t=this;this.assetService.getAdjustmentByAssetInventoryId(e).subscribe((function(e){console.log(e),t.assetAdjustmentSetup=Object.assign({},e,{unitCost:e.unitCost?Object(z.b)(e.unitCost,2):""}),t.assetAdjustmentData.map((function(e){1==e.adjustmentDataTypeId&&(e.beforeValue=t.assetAdjustmentSetup.managementStructureId),3==e.adjustmentDataTypeId&&(e.beforeValue=t.assetAdjustmentSetup.assetLife?t.assetAdjustmentSetup.assetLife:null),4==e.adjustmentDataTypeId&&(e.beforeValue=t.assetAdjustmentSetup.assetRecordId?t.assetAdjustmentSetup.assetRecordId:null),5==e.adjustmentDataTypeId&&(e.beforeValue=t.assetAdjustmentSetup.asset_Location?t.assetAdjustmentSetup.asset_Location:null)})),t.getManagementStructureCodes(t.assetAdjustmentSetup.managementStructureId)}))}},{key:"getManagementStructureCodes",value:function(e){var t=this;this.commonService.getManagementStructureNamesAndCodes(e).subscribe((function(e){e.Level1Code?t.existingMgmentStuc.level1=e.Level1Code:t.existingMgmentStuc.level1="",e.Level2Code?t.existingMgmentStuc.level2=e.Level2Code:t.existingMgmentStuc.level2="",e.Level3Code?t.existingMgmentStuc.level3=e.Level3Code:t.existingMgmentStuc.level3="",e.Level4Code?t.existingMgmentStuc.level4=e.Level4Code:t.existingMgmentStuc.level4="",t.managementStructureOnLoad={companyId:void 0!==e.Level1?e.Level1:0,buId:void 0!==e.Level2?e.Level2:0,divisionId:void 0!==e.Level3?e.Level3:0,departmentId:void 0!==e.Level4?e.Level4:0}}))}},{key:"isCompanyEnable",value:function(e){this.companyAllow?(this.getLegalEntity(),this.showCompany=!0,this.showBusiness=!0,this.showDivision=!0,this.showDepartment=!0,this.businessAllow=!0,this.divisionAllow=!0,this.deptAllow=!0,e.checkedItem=!0,this.disableLevel1=!0,this.disableMgmtStrucAdj=!0):(this.showCompany=!1,this.showBusiness=!1,this.showDivision=!1,this.showDepartment=!1,this.businessAllow=!1,this.divisionAllow=!1,this.deptAllow=!1,e.checkedItem=!1,this.disableLevel1=!1,this.disableMgmtStrucAdj=!1),this.managementStructure.companyId=0,this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,this.businessUnitList=[],this.divisionList=[],this.departmentList=[],e.adjustmentReasonId=0}},{key:"isBusinessEnable",value:function(e){var t=this;this.businessAllow?(this.showBusiness=!0,this.showDivision=!0,this.showDepartment=!0,this.divisionAllow=!0,this.deptAllow=!0,e.checkedItem=!0,this.disableLevel2=!0):(this.showBusiness=!1,this.showDivision=!1,this.showDepartment=!1,this.divisionAllow=!1,this.deptAllow=!1,e.checkedItem=!1,this.disableLevel2=!1),this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,this.divisionList=[],this.departmentList=[],this.managementStructureOnLoad.companyId&&this.commonService.getBusinessUnitListByLegalEntityId(this.managementStructureOnLoad.companyId).pipe(Object(me.a)(this.onDestroy$)).subscribe((function(e){t.businessUnitList=e})),this.companyAllow||this.businessAllow||this.divisionAllow||this.deptAllow?(e.checkedItem=!0,this.disableMgmtStrucAdj=!0):(e.checkedItem=!1,this.disableMgmtStrucAdj=!1),e.adjustmentReasonId=0}},{key:"isDivisionEnable",value:function(e){var t=this;this.divisionAllow?(this.showDivision=!0,this.showDepartment=!0,this.deptAllow=!0,e.checkedItem=!0,this.disableLevel3=!0):(this.showDivision=!1,this.showDepartment=!1,this.deptAllow=!1,e.checkedItem=!1,this.disableLevel3=!1),this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,this.departmentList=[],this.managementStructureOnLoad.buId&&this.commonService.getDivisionListByBU(this.managementStructureOnLoad.buId).pipe(Object(me.a)(this.onDestroy$)).subscribe((function(e){t.divisionList=e})),this.companyAllow||this.businessAllow||this.divisionAllow||this.deptAllow?(e.checkedItem=!0,this.disableMgmtStrucAdj=!0):(e.checkedItem=!1,this.disableMgmtStrucAdj=!1),e.adjustmentReasonId=0}},{key:"isDeptEnable",value:function(e){var t=this;this.deptAllow?(this.showDepartment=!0,e.checkedItem=!0,this.disableLevel4=!0):(this.showDepartment=!1,e.checkedItem=!1,this.disableLevel4=!1),this.managementStructure.departmentId=0,this.managementStructureOnLoad.divisionId&&this.commonService.getDepartmentListByDivisionId(this.managementStructureOnLoad.divisionId).pipe(Object(me.a)(this.onDestroy$)).subscribe((function(e){t.departmentList=e})),this.companyAllow||this.businessAllow||this.divisionAllow||this.deptAllow?(e.checkedItem=!0,this.disableMgmtStrucAdj=!0):(e.checkedItem=!1,this.disableMgmtStrucAdj=!1),e.adjustmentReasonId=0}},{key:"selectedLegalEntity",value:function(e,t){var n=this;this.businessUnitList=[],this.divisionList=[],this.departmentList=[],this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(t.afterValue=e,this.commonService.getBusinessUnitListByLegalEntityId(e).pipe(Object(me.a)(this.onDestroy$)).subscribe((function(e){n.businessUnitList=e}))),this.disableLevel1="0"==e||0==e}},{key:"selectedBusinessUnit",value:function(e,t){var n=this;this.divisionList=[],this.departmentList=[],this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(t.afterValue=e,this.commonService.getDivisionListByBU(e).pipe(Object(me.a)(this.onDestroy$)).subscribe((function(e){n.divisionList=e}))),this.disableLevel2="0"==e||0==e}},{key:"selectedDivision",value:function(e,t){var n=this;this.departmentList=[],this.managementStructure.departmentId=0,0!=e&&null!=e&&null!=e&&(t.afterValue=e,this.commonService.getDepartmentListByDivisionId(e).pipe(Object(me.a)(this.onDestroy$)).subscribe((function(e){n.departmentList=e}))),this.disableLevel3="0"==e||0==e}},{key:"selectedDepartment",value:function(e,t){0!=e&&null!=e&&null!=e&&(t.afterValue=e),this.disableLevel4="0"==e||0==e}},{key:"onChangeMgmtStrucAdjReason",value:function(e){this.disableMgmtStrucAdj="0"==e||0==e}},{key:"onChangeUsefulLife",value:function(e){e.afterValue="",this.usefulLifeAllow?(e.checkedItem=!0,this.disableUsefulLifeAdj=!0):(e.checkedItem=!1,this.disableUsefulLifeAdj=!1)}},{key:"onChangeUsefulLifeAdjReason",value:function(e){this.disableUsefulLifeAdj="0"==e||0==e}},{key:"filterAssetList",value:function(e){if(this.assetListFilter=this.allAssetList,void 0!==e.query&&null!==e.query){var t=_toConsumableArray(this.allAssetList.filter((function(t){return t.label.toLowerCase().includes(e.query.toLowerCase())})));this.assetListFilter=t}}},{key:"onChangeAssetId",value:function(e){e.afterValue="",this.assetIdAllow?(this.getAssetList(),e.checkedItem=!0,this.disableAssetIdAdj=!0):(e.checkedItem=!1,this.disableAssetIdAdj=!1)}},{key:"onChangeAssetIdAdjReason",value:function(e){this.disableAssetIdAdj="0"==e||0==e}},{key:"onChangeLocation",value:function(e){e.afterValue=0,this.locationAllow?(this.getLocationList(),e.checkedItem=!0,this.disableLocationAdj=!0,this.disableLocation=!0):(e.checkedItem=!1,this.disableLocationAdj=!1,this.disableLocation=!1)}},{key:"onChangeLocationSelect",value:function(e){this.disableLocation="0"==e||0==e}},{key:"onChangeLocationAdjReason",value:function(e){this.disableLocationAdj="0"==e||0==e}},{key:"onSaveAssetAdj",value:function(){var e=this;console.log(this.assetAdjustmentData),this.tempAssetData=[],this.assetAdjustmentData.map((function(t){if(4==t.adjustmentDataTypeId&&(t.afterValue=t.afterValue?Object(z.h)("value",t.afterValue):null),t.adjustmentDataTypeId&&(t.adjustmentReason=t.adjustmentReasonId?Object(z.g)("label","value",t.adjustmentReasonId,e.allAdjReasonInfo):""),t.checkedItem){var n=Object.assign({},t,{assetInventoryId:e.assetInventoryId,masterCompanyId:e.currentUserMasterCompanyId,createdBy:e.userName});e.tempAssetData.push(n)}})),this.assetService.assetAdjustmentPost(this.tempAssetData).subscribe((function(t){console.log(t),e.alertService.showMessage("Success","Saved Asset Adjustment Sucessfully ",T.d.success),e.router.navigateByUrl("/assetmodule/assetpages/app-asset-inventory-listing")}))}},{key:"userName",get:function(){return this.authService.currentUser?this.authService.currentUser.userName:""}},{key:"currentUserMasterCompanyId",get:function(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:null}}]),e}();fe.ctorParameters=function(){return[{type:O.a},{type:S.ActivatedRoute},{type:x.a},{type:P.a},{type:U.a},{type:T.b},{type:S.Router}]};var ge=[{path:"assetpages",component:C,children:[{path:"app-asset-inventory-listing",component:Y,data:{title:"Asset Inventory Listing"}},{path:"app-asset-disposal-sale",component:$,data:{title:"Disposal Sale"}},{path:"app-asset-listing",component:B,data:{title:"Asset List"}},{path:"app-asset-calibration/:id",component:X,data:{title:"Asset Calibration"}},{path:"app-asset-capes/:id",component:ne,data:{title:"Asset Capes"}},{path:"app-asset-general-information",component:ae,data:{title:"Asset GeneralInformation"}},{path:"app-asset-maintenance-warranty/:id",component:re,data:{title:"Asset Maintenance-Warranty"}},{path:"app-create-asset",component:ue,data:{title:"Asset Create"}},{path:"app-create-asset-inventory",component:he,data:{title:"Asset Create Inventory"}},{path:"app-edit-asset-inventory/:id",component:he,data:{title:"Asset Edit Inventory"}},{path:"app-edit-asset/:id",component:ue,data:{title:"Asset Edit"}},{path:"app-view-asset",component:be,data:{title:"Asset View"}},{path:"app-asset-adjustment/:id",component:fe=a.b([Object(r.Component)({selector:"app-asset-adjustment",template:a.c(n("UW3U")).default,styles:[a.c(n("ubCa")).default]})],fe),data:{title:"Asset Adjustment"}}]}],ye=function e(){_classCallCheck(this,e)};ye=a.b([Object(r.NgModule)({imports:[S.RouterModule.forChild(ge)],exports:[S.RouterModule],providers:[U.a,ve.a]})],ye);var Ie=n("tB1I"),Ae=function(){function e(t,n,a){var r=this;_classCallCheck(this,e),this.router=t,this.route=n,this.assetService=a,this.readonly=!0,this.read=!1,this.msgs=[],this.activeIndex=0,this.isDisabledSteps=!1,this.isEditMode=!1,this.currentUrl=this.route.url,this.assetService.alertChangeObject$.subscribe((function(e){r.showComponentPTab=e,r.currentUrl=r.route.url})),this.assetService.indexObjChangeObject$.subscribe((function(e){r.activeIndex=e}))}return _createClass(e,[{key:"ngOnInit",value:function(){var e=this;this.AssetId=this.router.snapshot.params.id,console.log(this.AssetId),this.AssetId?(this.isDisabledSteps=!1,this.isEditMode=!0,this.assetService.isEditMode=!0):(this.isDisabledSteps=!0,this.isEditMode=!1,this.assetService.isEditMode=!1,this.assetService.listCollection=null),this.showComponentPTab=this.assetService.ShowPtab,this.currentUrl=this.route.url,null!=this.assetService.listCollection&&1==this.assetService.isEditMode&&(this.isEditMode=!0),"/assetmodule/assetpages/app-asset-listing"==this.currentUrl?(this.showComponentPTab=!1,this.activeIndex=0):"/assetmodule/assetpages/app-create-asset"==this.currentUrl&&(this.activeIndex=0,this.showComponentPTab=!0,console.log(this.showComponentPTab),this.isEditMode||(this.isDisabledSteps=!0)),"/assetmodule/assetpages/app-edit-asset"==this.currentUrl&&(this.activeIndex=0,this.showComponentPTab=!0,this.isDisabledSteps=!1),"/assetmodule/assetpages/app-asset-inventory-listing"==this.currentUrl?(this.showComponentPTab=!1,this.activeIndex=0):"/assetmodule/assetpages/app-create-asset-inventory"==this.currentUrl&&(this.activeIndex=0,this.showComponentPTab=!0,console.log(this.showComponentPTab),this.isEditMode||(this.isDisabledSteps=!0)),"/assetmodule/assetpages/app-edit-asset-inventory"==this.currentUrl?(this.activeIndex=0,this.showComponentPTab=!0,this.isDisabledSteps=!1):"/assetmodule/assetpages/app-asset-capes"==this.currentUrl?(this.activeIndex=1,this.showComponentPTab=!0):"/assetmodule/assetpages/app-asset-calibration"==this.currentUrl?(this.activeIndex=2,this.showComponentPTab=!0):"/assetmodule/assetpages/app-asset-maintenance-warranty"==this.currentUrl&&(this.activeIndex=3,this.showComponentPTab=!0),this.items=[{label:"General Information",step:1,index:0,command:function(t){e.activeIndex=0,e.msgs.length=0,e.msgs.push({severity:"info",summary:"Create Asset",detail:t.label});var n=e.AssetId.assetId;e.isEditMode?e.route.navigateByUrl("assetmodule/assetpages/app-edit-asset/"+n):e.route.navigateByUrl("/assetmodule/assetpages/app-create-asset")}},{label:"Capes",step:2,index:1,command:function(t){if(!e.isDisabledSteps){e.assetService.financial=!0,e.activeIndex=1,e.msgs.length=0,e.msgs.push({severity:"info",summary:"Capes",detail:t.label});var n=e.AssetId.assetId;e.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/"+n)}}},{label:"Calibration",step:3,index:2,command:function(t){e.isDisabledSteps||(e.activeIndex=2,e.msgs.length=0,e.msgs.push({severity:"info",summary:"Calibration",detail:t.label}),e.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration"))}},{label:"Maintenance & Warranty",step:4,index:3,command:function(t){e.isDisabledSteps||(e.activeIndex=3,e.msgs.length=0,e.msgs.push({severity:"info",summary:"Maintenance & Warranty",detail:t.label}),e.route.navigateByUrl("/assetmodule/assetpages/app-asset-maintenance-warranty"))}}]}},{key:"changeTab",value:function(e){console.log(e),this.AssetId=this.router.snapshot.params.id,(e.index=0)?(this.activeIndex=0,this.route.navigateByUrl("/assetmodule/assetpages/app-edit-asset/as220")):(e.index=1)?(this.activeIndex=1,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-capes/as220")):(e.index=2)?(this.activeIndex=2,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-calibration/as220")):(e.index=3)&&(this.activeIndex=3,this.route.navigateByUrl("/assetmodule/assetpages/app-asset-maintenance-warranty/as220"))}}]),e}();Ae.ctorParameters=function(){return[{type:S.ActivatedRoute},{type:S.Router},{type:x.a}]},Ae=a.b([Object(r.Component)({selector:"app-asset-steps",template:a.c(n("ACB3")).default,styles:[a.c(n("vJmB")).default]})],Ae);var De=n("p8Qr"),Me=n("eNCC"),we=n("DgWh"),Ce=n("agHx"),xe=n("dLo5");n.d(t,"AssetmanagementModule",(function(){return Se}));var Se=function e(){_classCallCheck(this,e)};Se=a.b([Object(r.NgModule)({imports:[s.a,i.FormsModule,i.ReactiveFormsModule,l.a,o.b,c.CommonModule,d.TableModule,u.ButtonModule,p.SelectButtonModule,xe.DropdownModule,m.InputTextModule,h.MultiSelectModule,ye,v.InputSwitchModule,b.CheckboxModule,f.AutoCompleteModule,A.GMapModule,w.RadioButtonModule,M.FileUploadModule,D.CalendarModule,g.StepsModule,I.BreadcrumbModule,y.DialogModule,Me.a,we.EditorModule,Ce.KeyFilterModule,L.e],declarations:[C,B,$,Y,X,ne,ae,re,ue,Ae,be,fe,he],providers:[x.a,De.a,O.a,L.b,Ie.a],schemas:[r.CUSTOM_ELEMENTS_SCHEMA],exports:[B],entryComponents:[ue]})],Se)},bEiN:function(e,t,n){"use strict";n.r(t),t.default="block-bg2 {\n  border: 1px solid lightgray;\n  margin: 2px;\n}\n\ncontrol-label-pad-30 {\n  margin-top: 10px;\n  text-align: left;\n  width: 100% !important;\n  font-weight: 500;\n  padding-left: 30px;\n}\n\nlabel {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: 400;\n}\n\n.span-header-red {\n  color: red;\n  font-weight: bold;\n}\n\ninput[type=text],\ninput[type=number],\ninput[type=email],\nselect,\ntextarea {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.po-head {\n  font-weight: 700;\n  font-size: 16px !important;\n  color: #295d92 !important;\n}\n\n.fa-plus-circle.fa-lg {\n  color: green !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}\n\n.btn-tbl-file-download {\n  line-height: 7px !important;\n  width: 85px !important;\n  height: 19px;\n  border: 0;\n  color: #ffffff !important;\n  background: #337ab7;\n}"},bcEE:function(e,t,n){"use strict";n.r(t),t.default='<p-breadcrumb [model]="breadcrumbs" [home]="home"></p-breadcrumb>\r\n<div class="card new-card">\r\n    <div class="card-header bg-primary">\r\n      <div class="row">\r\n        <div class="col">\r\n          <h4 class="new-card-heading">  {{ assetService.isEditMode == true ? \'Edit\'  : \'Create\'}} Asset Calibration</h4>\r\n        </div>\r\n        <div>\r\n          <button\r\n            type="button"\r\n            class="btn-sm new-btn-primary"\r\n            [routerLink]="[\'/assetmodule/assetpages/app-asset-listing\']">\r\n            Asset List\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class="card-body new-card-body">\r\n<div class="md-stepper-horizontal orange new-stepper-align">\r\n    <div class="md-step"\r\n         [ngClass]="{ active: activeIndex >= 0 , editable : activeIndex === 0}" (click)="changeOfTab(\'General\')">\r\n        <div class="md-step-circle"><span>1</span></div>\r\n        <div class="md-step-title">General Information</div>\r\n        <div class="md-step-bar-left"></div>\r\n        <div class="md-step-bar-right"></div>\r\n    </div>\r\n    <div class="md-step"\r\n         [ngClass]="{ active: activeIndex >= 1, editable : activeIndex === 1 }"\r\n         (click)="changeOfTab(\'Capes\')">\r\n        <div class="md-step-circle"><span>2</span></div>\r\n        <div class="md-step-title">Capes</div>\r\n        <div class="md-step-bar-left"></div>\r\n        <div class="md-step-bar-right"></div>\r\n    </div>\r\n    <div class="md-step"\r\n         [ngClass]="{ active: activeIndex >= 2 , editable : activeIndex === 2 }"\r\n         (click)="changeOfTab(\'Calibration\')">\r\n        <div class="md-step-circle"><span>3</span></div>\r\n        <div class="md-step-title">Calibration</div>\r\n        <div class="md-step-bar-left"></div>\r\n        <div class="md-step-bar-right"></div>\r\n    </div>\r\n    <div class="md-step"\r\n         [ngClass]="{ active: activeIndex >= 3 , editable : activeIndex === 3 }"\r\n         (click)="changeOfTab(\'Maintenance\')">\r\n        <div class="md-step-circle"><span>4</span></div>\r\n        <div class="md-step-title">Maintenance & Warranty</div>\r\n        <div class="md-step-bar-left"></div>\r\n        <div class="md-step-bar-right"></div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<form #generalForm="ngForm" method="post" id="" name="" class="form-horizontal add-custustomer">\r\n        <div class="form-row">\r\n            \r\n            <div class="col-md-12">\r\n    \r\n                <div class="card">\r\n                    <div class="card-body">\r\n                        <div class="col-md-3">\r\n                            <label class="fs12">Asset ID : </label>\r\n                            <span class="span-header-red"> {{assetService.listCollection?.assetId}}</span>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <label class="fs12">Asset Name : </label>\r\n                            <span class="span-header-red"> {{assetService.listCollection?.name}}</span>\r\n\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <label class="fs12">Alt Asset ID : </label>\r\n                            <span class="span-header-red">{{assetService.listCollection?.alternateAssetName}}</span>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <label class="fs12">Asset Class/Attribute : </label>\r\n                            <span class="span-header-red"> {{assetService.listCollection?.assetAttributeType}}</span> \r\n                        </div>\r\n                        <div class="clear"></div>\r\n                        <hr />\r\n                        <div class="clear"></div>\r\n                        <div class="form-row">\r\n                            <div class="col-md-12">\r\n                                <div class="card new-card">\r\n                           \r\n                                    <div class="card-header bg-primary">\r\n                                        <h4 class="new-card-heading"> Calibration</h4>\r\n                                    </div>\r\n                                    </div>\r\n                                    </div>\r\n</div>\r\n                        <div class="col-md-12">\r\n                            <div class="form-row">\r\n                                <div class="col-sm-3 asset_border">\r\n                                    <div class="form-group">\r\n                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                            <label>\r\n                                                <input type="checkbox" (change)="calibrationMethod()" (ngModelChange)="setvaliDate($event)" [ngModelOptions]="{standalone: true}" [(ngModel)]="currentCalibration.calibrationRequired">\r\n                                                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                Calibration Required\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div *ngIf="currentCalibration.calibrationRequired">\r\n                                        <div class="form-group">\r\n                                            <label >Calibration Frequency  <span class="clr-red">*</span></label>\r\n                                            <div class="col-md-12">\r\n                                                <div class="col-sm-6">\r\n                                                    <label >Months</label>\r\n                                                    <input type="number" (ngModelChange)="setvaliDate($event)" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="currentCalibration.calibrationFrequencyMonths" min="0" max="12">\r\n\r\n                                                </div>\r\n                                                <div class="col-sm-6">\r\n                                                    <label > Days</label>\r\n                                                    <input type="number" (ngModelChange)="setvaliDate($event)" (input)="validateDates($event.target.value,currentCalibration,1)" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="currentCalibration.calibrationFrequencyDays" min="0" max="31">\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                     \r\n                                        <div style="padding: 8px;">\r\n                                            <label class="mr-tp-10">Default Vendor</label>\r\n                                            <p-autoComplete (ngModelChange)="setvaliDate($event)"  class="p-autoComplete-ctsm" field="name" name="vendorName" [dropdown]="true"\r\n                                            errorMessage="Records not found"  [suggestions]="allVendorInfoFilter" emptyMessage="No Records Found"\r\n                                            (completeMethod)="filterWarentyVendor($event)"  [size]="30" [minLength]="1"\r\n                                            [(ngModel)]="currentCalibration.calibrationDefaultVendorId"  #prellRevInsp="ngModel" >\r\n                                        </p-autoComplete>\r\n                                        </div>\r\n                                    \r\n                                        <div class="form-group">\r\n\r\n                                            <div class="col-md-12">\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Default Cost</label>\r\n                                                    <input class="form-control amount text-right"  (ngModelChange)="setvaliDate($event)" type="text" [ngModelOptions]="{standalone: true}" \r\n                                                           [(ngModel)]="currentCalibration.calibrationDefaultCost" (change)="formatToGlobal(currentCalibration)">\r\n\r\n                                                </div>\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Currency <span class="clr-red" *ngIf="currentCalibration.calibrationDefaultCost !=0">*</span></label>\r\n                                             \r\n                                                    <p-dropdown [required]="currentCalibration.calibrationDefaultCost !=0" [showClear]="true" class="p-dropdown-100" (ngModelChange)="setvaliDate($event)"   [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentCalibration.calibrationCurrencyId" name="calibrationCurrencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                       \r\n                                        <div style="padding: 8px;">\r\n                                            \r\n                                            <label class="mr-tp-10">GL Account <span class="clr-red" *ngIf="currentCalibration.calibrationRequired">*</span></label>\r\n                            <p-autoComplete (ngModelChange)="setvaliDate($event)"  class="p-autoComplete-ctsm" field="name" name="Inspector1" [dropdown]="true"\r\n                            errorMessage="Records not found"  [suggestions]="allGlInfoFilter" emptyMessage="No Records Found"\r\n                            (completeMethod)="filterWarentyGl($event)"  [size]="30" [minLength]="1"\r\n                            [(ngModel)]="currentCalibration.calibrationGlAccountId" [required]="currentCalibration.calibrationRequired"  #prellRevInsp3="ngModel" >\r\n                        </p-autoComplete> \r\n    \r\n    \r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Calibration Memo</label>\r\n                                          <div class="align_adh">\r\n                                                        <div [innerHTML]="currentCalibration.calibrationMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentCalibration.calibrationMemo)" class="text_editor_box"\r\n                                                            style="width: 96% !important;"></div>\r\n                                                        <i class="fa fa-pencil contoel_v" data-toggle="modal"\r\n                                                            data-target="#textarea-popup" matTooltip="Memo"\r\n                                                            matTooltipPosition="above"\r\n                                                            (click)="onAddTextAreaInfo(currentCalibration.calibrationMemo,1)"></i>\r\n                                                    </div>\r\n                                        </div>\r\n                                        <div class="clear"></div>\r\n                                    </div>\r\n                                    <div class="form-group col-sm-12 calibration-block w400" *ngIf="currentCalibration.calibrationRequired ">\r\n                                        <div>\r\n                                            <table class="table table-bordered table-striped">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th></th>\r\n                                                        <th colspan="2" class="tol_cld">Tolerance</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>Min</td>\r\n                                                        <td>\r\n                                                            <input (ngModelChange)="setvaliDate($event)" type="text" class="form-control mauto" [ngModelOptions]="{standalone: true}"\r\n                                                                   [(ngModel)]="currentCalibration.assetCalibrationMin">\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <input (ngModelChange)="setvaliDate($event)" type="text" class="form-control mauto" [ngModelOptions]="{standalone: true}"\r\n                                                                   [(ngModel)]="currentCalibration.assetCalibrationMinTolerance">\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Max</td>\r\n                                                        <td>\r\n                                                            <input (ngModelChange)="setvaliDate($event)" type="text" class="form-control mauto" [ngModelOptions]="{standalone: true}"\r\n                                                                   [(ngModel)]="currentCalibration.assetCalibratonMax">\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <input type="text" class="form-control mauto" (ngModelChange)="setvaliDate($event)" [ngModelOptions]="{standalone: true}"\r\n                                                                   [(ngModel)]="currentCalibration.assetCalibrationMaxTolerance">\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Expected</td>\r\n                                                        <td>\r\n                                                            <input (ngModelChange)="setvaliDate($event)" type="text" class="form-control mauto" [ngModelOptions]="{standalone: true}"\r\n                                                                   [(ngModel)]="currentCalibration.assetCalibrationExpected">\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            <input (ngModelChange)="setvaliDate($event)" type="text" class="form-control mauto" [ngModelOptions]="{standalone: true}"\r\n                                                                   [(ngModel)]="currentCalibration.assetCalibrationExpectedTolerance">\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Memo</td>\r\n                                                        <td colspan="2">\r\n                                                          <div class="align_adh">\r\n                                                                        <div [innerHTML]="currentCalibration.assetCalibrationMemo"  matTooltipPosition="above" [matTooltip]="parsedText(currentCalibration.assetCalibrationMemo)" class="text_editor_box"\r\n                                                                            style="width: 96% !important;"></div>\r\n                                                                        <i class="fa fa-pencil contoel_v" data-toggle="modal"\r\n                                                                            data-target="#textarea-popup" matTooltip="Memo"\r\n                                                                            matTooltipPosition="above"\r\n                                                                            (click)="onAddTextAreaInfo(currentCalibration.assetCalibrationMemo,5)"></i>\r\n                                                                    </div>\r\n                                                       </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class="col-sm-3 asset_border">\r\n                                    <div class="form-group">\r\n                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                            <label>\r\n                                                <input (change)="ceretificationMethod()" (ngModelChange)="setvaliDate($event)" type="checkbox" [ngModelOptions]="{standalone: true}" [(ngModel)]="currentCalibration.certificationRequired">\r\n                                                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                Certification Required\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div *ngIf="currentCalibration.certificationRequired">\r\n                                        <div class="form-group">\r\n                                            <label>Certification Frequency  <span class="clr-red">*</span></label>\r\n                                            <div class="col-md-12">\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Months</label>\r\n                                                    <input (ngModelChange)="setvaliDate($event)" type="number" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="currentCalibration.certificationFrequencyMonths" min="0" max="12">\r\n\r\n                                                </div>\r\n                                                <div class="col-sm-6">\r\n                                                    <label> Days</label>\r\n                                                    <input (ngModelChange)="setvaliDate($event)" type="number" (input)="validateDates($event.target.value,currentCalibration,2)" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="currentCalibration.certificationFrequencyDays" min="0" max="31">\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                     \r\n                                        <div style="padding: 8px;">\r\n                                            <label class="mr-tp-10">Default Vendor</label>\r\n                                            <p-autoComplete (ngModelChange)="setvaliDate($event)"  class="p-autoComplete-ctsm" field="name" name="vendorName2" [dropdown]="true"\r\n                                            errorMessage="Records not found"  [suggestions]="allVendorInfoFilter" emptyMessage="No Records Found"\r\n                                            (completeMethod)="filterWarentyVendor2($event)"  [size]="30" [minLength]="1"\r\n                                            [(ngModel)]="currentCalibration.certificationDefaultVendorId"  #prellRevInsp="ngModel" >\r\n                                        </p-autoComplete>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n\r\n                                            <div class="col-md-12">\r\n                                                <div class="col-sm-6">\r\n                                                    <label >Default Cost </label>\r\n                                                    <input class="form-control amount text-right" (ngModelChange)="setvaliDate($event)" [ngModelOptions]="{standalone: true}" (change)="formatToGlobal(currentCalibration)"\r\n                                                           [(ngModel)]="currentCalibration.certificationDefaultCost" type="text">\r\n                                                </div>\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Currency <span class="clr-red" *ngIf="currentCalibration.certificationDefaultCost !=0">*</span> </label>\r\n                                                  \r\n                                                    <p-dropdown [required]="currentCalibration.certificationDefaultCost !=0" [showClear]="true" class="p-dropdown-100"  (ngModelChange)="setvaliDate($event)"  [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentCalibration.certificationCurrencyId" name="certificationCurrencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                        </div>\r\n                                      \r\n                                        <div style="padding: 8px;">\r\n                                            <label class="mr-tp-10">GL Account <span class="clr-red" *ngIf="currentCalibration.certificationRequired">*</span></label>\r\n                            <p-autoComplete  (ngModelChange)="setvaliDate($event)" class="p-autoComplete-ctsm" field="name" name="Inspector2" [dropdown]="true"\r\n                            errorMessage="Records not found"  [suggestions]="allGlInfoFilter" emptyMessage="No Records Found"\r\n                            (completeMethod)="filterWarentyGl2($event)"  [size]="30" [minLength]="1"\r\n                            [(ngModel)]="currentCalibration.certificationGlAccountId"  [required]="currentCalibration.certificationRequired" #prellRevInsp3="ngModel" >\r\n                        </p-autoComplete> \r\n    \r\n    \r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Certification Memo</label>\r\n                                            \x3c!-- <textarea (ngModelChange)="setvaliDate($event)" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                      [(ngModel)]="currentCalibration.certificationMemo"></textarea> --\x3e\r\n                                                      <div class="align_adh">\r\n                                                        <div [innerHTML]="currentCalibration.certificationMemo"  matTooltipPosition="above"  [matTooltip]="parsedText(currentCalibration.certificationMemo)" class="text_editor_box"\r\n                                                            style="width: 96% !important;"></div>\r\n                                                        <i class="fa fa-pencil contoel_v" data-toggle="modal"\r\n                                                            data-target="#textarea-popup" matTooltip="Memo"\r\n                                                            matTooltipPosition="above"\r\n                                                            (click)="onAddTextAreaInfo(currentCalibration.certificationMemo,2)"></i>\r\n                                                    </div>\r\n                                      \r\n                                                    </div>\r\n                                        <div class="clear"></div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class="col-sm-3 asset_border">\r\n                                    <div class="form-group">\r\n                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                            <label>\r\n                                                <input (ngModelChange)="setvaliDate($event)" (change)="inspectionMethod()" type="checkbox" [ngModelOptions]="{standalone: true}" [(ngModel)]="currentCalibration.inspectionRequired">\r\n                                                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                Inspection Required\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div *ngIf="currentCalibration.inspectionRequired">\r\n                                        <div class="form-group">\r\n                                            <label>Inspection Frequency  <span class="clr-red">*</span></label>\r\n                                            <div class="col-md-12">\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Months</label>\r\n                                                    <input  (ngModelChange)="setvaliDate($event)" type="number" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="currentCalibration.inspectionFrequencyMonths" min="0" max="12">\r\n\r\n                                                </div>\r\n                                                <div class="col-sm-6">\r\n                                                    <label> Days</label>\r\n                                                    <input (ngModelChange)="setvaliDate($event)" type="number" (input)="validateDates($event.target.value,currentCalibration,3)" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="currentCalibration.inspectionFrequencyDays" min="0" max="31">\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div style="padding: 8px;">\r\n                                            <label class="mr-tp-10">Default Vendor</label>\r\n                                            <p-autoComplete (ngModelChange)="setvaliDate($event)" class="p-autoComplete-ctsm" field="name" name="vendorName3" [dropdown]="true"\r\n                                            errorMessage="Records not found"  [suggestions]="allVendorInfoFilter" emptyMessage="No Records Found"\r\n                                            (completeMethod)="filterWarentyVendor3($event)"  [size]="30" [minLength]="1"\r\n                                            [(ngModel)]="currentCalibration.inspectionDefaultVendorId"  #prellRevInsp="ngModel" >\r\n                                        </p-autoComplete>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n\r\n                                            <div class="col-md-12">\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Default Cost</label>\r\n                                                    <input (ngModelChange)="setvaliDate($event)" class="form-control amount text-right" type="text" [ngModelOptions]="{standalone: true}" (change)="formatToGlobal(currentCalibration)"\r\n                                                           [(ngModel)]="currentCalibration.inspectionDefaultCost">\r\n                                                </div>\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Currency <span class="clr-red" *ngIf="currentCalibration.inspectionDefaultCost !=0">*</span></label>\r\n                                                \r\n                                                    <p-dropdown [required]="currentCalibration.inspectionDefaultCost !=0"  [showClear]="true" class="p-dropdown-100" (ngModelChange)="setvaliDate($event)"   [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentCalibration.inspectionCurrencyId" name="inspectionCurrencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                     \r\n                                        <div style="padding: 8px;">\r\n                                            <label class="mr-tp-10">GL Account <span *ngIf="currentCalibration.inspectionRequired">*</span></label>\r\n                            <p-autoComplete (ngModelChange)="setvaliDate($event)" class="p-autoComplete-ctsm" field="name" name="Inspector3" [dropdown]="true"\r\n                            errorMessage="Records not found"  [suggestions]="allGlInfoFilter" emptyMessage="No Records Found"\r\n                            (completeMethod)="filterWarentyGl3($event)"  [size]="30" [minLength]="1" [required]="currentCalibration.inspectionRequired"\r\n                            [(ngModel)]="currentCalibration.inspectionGlaAccountId"  #prellRevInsp3="ngModel" >\r\n                        </p-autoComplete> \r\n    \r\n    \r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Inspection Memo</label>\r\n                                            \x3c!-- <textarea  (ngModelChange)="setvaliDate($event)" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                      [(ngModel)]="currentCalibration.inspectionMemo"></textarea> --\x3e\r\n                                                      <div class="align_adh">\r\n                                                        <div [innerHTML]="currentCalibration.inspectionMemo"  matTooltipPosition="above" [matTooltip]="parsedText(currentCalibration.inspectionMemo)" class="text_editor_box"\r\n                                                            style="width: 96% !important;"></div>\r\n                                                        <i class="fa fa-pencil contoel_v" data-toggle="modal"\r\n                                                            data-target="#textarea-popup" matTooltip="Memo"\r\n                                                            matTooltipPosition="above"\r\n                                                            (click)="onAddTextAreaInfo(currentCalibration.inspectionMemo,3)"></i>\r\n                                                    </div>\r\n                                                    </div>\r\n                                        <div class="clear"></div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div class="col-sm-3 asset_border">\r\n                                    <div class="form-group">\r\n                                        <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                            <label>\r\n                                                <input (ngModelChange)="setvaliDate($event)" (change)="verificationMethod()" type="checkbox" [ngModelOptions]="{standalone: true}" [(ngModel)]="currentCalibration.verificationRequired">\r\n                                                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                Verification Required\r\n                                            </label>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div *ngIf="currentCalibration.verificationRequired">\r\n                                        <div class="form-group">\r\n                                            <label>Verification Frequency <span class="clr-red">*</span></label>\r\n                                            <div class="col-md-12">\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Months</label>\r\n                                                    <input (ngModelChange)="setvaliDate($event)" type="number" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="currentCalibration.verificationFrequencyMonths" min="0" max="12">\r\n\r\n                                                </div>\r\n                                                <div class="col-sm-6">\r\n                                                    <label> Days</label>\r\n                                                    <input (ngModelChange)="setvaliDate($event)" type="number" (input)="validateDates($event.target.value,currentCalibration,4)" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="currentCalibration.verificationFrequencyDays" min="0" max="31">\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n\r\n                                        <div style="padding: 8px;">\r\n                                            <label class="mr-tp-10">Default Vendor</label>\r\n                                            <p-autoComplete  (ngModelChange)="setvaliDate($event)" class="p-autoComplete-ctsm" field="name" name="vendorName4" [dropdown]="true"\r\n                                            errorMessage="Records not found"  [suggestions]="allVendorInfoFilter" emptyMessage="No Records Found"\r\n                                            (completeMethod)="filterWarentyVendor4($event)"  [size]="30" [minLength]="1"\r\n                                            [(ngModel)]="currentCalibration.verificationDefaultVendorId"  #prellRevInsp="ngModel" >\r\n                                        </p-autoComplete>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n\r\n                                            <div class="col-md-12">\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Default Cost</label>\r\n                                                    <input (ngModelChange)="setvaliDate($event)" class="form-control amount text-right" [ngModelOptions]="{standalone: true}" (change)="formatToGlobal(currentCalibration)"\r\n                                                           [(ngModel)]="currentCalibration.verificationDefaultCost" type="text">\r\n                                                </div>\r\n                                                <div class="col-sm-6">\r\n                                                    <label>Currency <span class="clr-red" *ngIf="currentCalibration.verificationDefaultCost !=0">*</span></label>\r\n            \r\n                                                    <p-dropdown [required]="currentCalibration.verificationDefaultCost !=0"  [showClear]="true" class="p-dropdown-100" (ngModelChange)="setvaliDate($event)"    [options]="allCurrencyInfo" filter="true" [(ngModel)]="currentCalibration.verificationCurrencyId" name="verificationCurrencyId" [resetFilterOnHide]="true" placeholder="Select" ></p-dropdown>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div style="padding: 8px;">\r\n                                            <label class="mr-tp-10">GL Account <span *ngIf="currentCalibration.verificationRequired">*</span></label>\r\n                            <p-autoComplete  (ngModelChange)="setvaliDate($event)" class="p-autoComplete-ctsm" field="name" name="Inspector4" [dropdown]="true"\r\n                            errorMessage="Records not found"  [suggestions]="allGlInfoFilter" emptyMessage="No Records Found"\r\n                            (completeMethod)="filterWarentyGl4($event)"  [size]="30" [minLength]="1" [required]="currentCalibration.verificationRequired"\r\n                            [(ngModel)]="currentCalibration.verificationGlAccountId"  #prellRevInsp3="ngModel" >\r\n                        </p-autoComplete> \r\n    \r\n    \r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <label>Verification Memo</label>\r\n                                            \x3c!-- <textarea (ngModelChange)="setvaliDate($event)" class="form-control" [ngModelOptions]="{standalone: true}"\r\n                                                      [(ngModel)]="currentCalibration.verificationMemo"></textarea> --\x3e\r\n                                                      <div class="align_adh">\r\n                                                        <div [innerHTML]="currentCalibration.verificationMemo"  matTooltipPosition="above" [matTooltip]="parsedText(currentCalibration.verificationMemo)" class="text_editor_box"\r\n                                                            style="width: 96% !important;"></div>\r\n                                                        <i class="fa fa-pencil contoel_v" data-toggle="modal"\r\n                                                            data-target="#textarea-popup" matTooltip="Memo"\r\n                                                            matTooltipPosition="above"\r\n                                                            (click)="onAddTextAreaInfo(currentCalibration.verificationMemo,4)"></i>\r\n                                                    </div>\r\n                                        </div>\r\n                                        <div class="clear"></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-12">\r\n                                    <div class="margintop">\r\n                                        <button type="button" class="btn btn-primary pull-right submit-btn" (click)="nextClick(\'Next\')">Next</button>\r\n                                        <button  [disabled]="!generalForm.valid ||  disableSaveForEdit" type="submit" class="btn btn-primary pull-right submit-btn"\r\n                                                (click)="saveCalibration()">\r\n                                             {{currentCalibration.assetCal==true ? \'Update\' : \'Save\'}}\r\n                                        </button>\r\n                                      <button type="button" class="btn btn-primary pull-right submit-btn" (click)="nextClick(\'Previous\')">Previous</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n                </form>\r\n\r\n\r\n                <ng-template #tabRedirectConfirmationModal3 let-c="close" let-d="dismiss">\r\n                    <div class="modal-header">\r\n                      <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">&times;</button>\r\n                      <h4 class="modal-title">Confirmation</h4>\r\n                    </div>\r\n                    <div class="modal-body">\r\n                      <h6 >\r\n                        Do you want to Save changes and Continue ?\r\n                      </h6>\r\n                    </div>\r\n                    <div class="modal-footer">\r\n                  \r\n                      <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="redirectdismissModel()">No</button>\r\n                      <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="redirectToTab()">Yes</button>\r\n                    </div>\r\n                  </ng-template>\r\n\r\n                  <div class="modal fade" id="textarea-popup" role="dialog" data-backdrop="static" data-keyboard="false">\r\n                    <div class="modal-dialog modal-sm" style="max-width: 500px !important;">\r\n                  <div class="modal-content">\r\n                            <div class="modal-header">\r\n                                <button type="button" class="close" (click)="onCloseTextAreaInfo()">&times;</button>\r\n                                <h4 class="modal-title">Edit Memo</h4>\r\n                            </div>\r\n                            <div class="modal-body">\r\n                                <table class="table table-bordered table-fixed workflow-table-material">\r\n                                    <thead>\r\n                                        <th style="color: #fff;">Memo</th>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <p-editor [(ngModel)]="textAreaInfo"  [style]="{\'height\':\'320px\'}" (ngModelChange)="editorgetmemo($event)"\r\n                                                name="textAreaInfo" required></p-editor>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody> \r\n                                </table>\r\n                                <div style="float:right;margin-top: 12px;">\r\n                                    <button type="button" class="btn btn-primary" (ngModelChange)="setvaliDate($event)" (click)="onSaveTextAreaInfo(textAreaInfo)" [disabled]="disableEditor">Save</button>\r\n                                <button type="button" class="btn btn-danger" (click)="onCloseTextAreaInfo()">Close</button>\r\n                               </div> \r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>   \r\n                </div>\r\n\r\n                <div class="preloader" *ngIf="isSpinnerVisible">\r\n                    <div class="loading">\r\n                        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n                    </div>\r\n                </div>'},jewU:function(e,t,n){"use strict";n.r(t),t.default="label {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.card-stock {\n  margin-top: 20px;\n  margin-bottom: 10px;\n}\n\n.card-stock .card-header {\n  padding: 10px 12px;\n}\n\n.card-stock .card-header h5 {\n  margin-bottom: 0;\n  font-size: 12px;\n}\n\n.card-stock .card-body {\n  padding: 12px 12px 4px;\n}\n\n.text_editor_box {\n  width: 100%;\n}\n\n.card-tolerance .form-group {\n  margin-bottom: 4px;\n}\n\n.add_newAd {\n  height: 22px;\n  position: relative;\n  left: -13px;\n  top: -1px;\n}\n\n.border-box-cstm {\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  padding: 0 10px;\n}\n\n.m-t-5 {\n  margin-top: 5px;\n}\n\n.font_adjust {\n  font-size: 14px !important;\n  margin: 0px;\n  padding: 0px !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n\n  .col-md-6-cstm {\n    max-width: 44%;\n    margin-right: 30px;\n  }\n}"},"k+MB":function(e,t,n){"use strict";n.r(t),t.default='<div style="border: 1px solid red">asset-general-information Component</div>'},kd5I:function(e,t,n){"use strict";n.r(t),t.default=".ms-block {\n  padding: 5px;\n  box-shadow: 1px 1px 5px #bbb;\n  background: #fff;\n  width: 300px;\n  text-align: center;\n}\n\n.atv_cv {\n  margin-bottom: 22px;\n  margin-left: 4px;\n}\n\n.fs12 {\n  display: inline-flex !important;\n}"},nFeV:function(e,t,n){"use strict";n.r(t),t.default=""},qUTz:function(e,t,n){"use strict";n.r(t),t.default='<p-breadcrumb [model]="breadcrumbs" [home]="home"></p-breadcrumb>\r\n<div class="card new-card">\r\n    <div class="card-header bg-primary">\r\n        <div class="row">\r\n            <div class="col">\r\n                <h4 class="new-card-heading">{{ assetService.isEditMode == true ? \'Edit\'  : \'Create\'}} Asset Maintenance\r\n                    & Warranty</h4>\r\n            </div>\r\n            <div>\r\n                <button type="button" class="btn-sm new-btn-primary"\r\n                    [routerLink]="[\'/assetmodule/assetpages/app-asset-listing\']">\r\n                    Asset List\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="card-body new-card-body">\r\n        <div class="md-stepper-horizontal orange new-stepper-align">\r\n            <div class="md-step" [ngClass]="{ active: activeIndex >= 0 , editable : activeIndex === 0}"\r\n                (click)="changeOfTab(\'General\')">\r\n                <div class="md-step-circle"><span>1</span></div>\r\n                <div class="md-step-title">General Information</div>\r\n                <div class="md-step-bar-left"></div>\r\n                <div class="md-step-bar-right"></div>\r\n            </div>\r\n            <div class="md-step" [ngClass]="{ active: activeIndex >= 1, editable : activeIndex === 1 }"\r\n                (click)="changeOfTab(\'Capes\')">\r\n                <div class="md-step-circle"><span>2</span></div>\r\n                <div class="md-step-title">Capes</div>\r\n                <div class="md-step-bar-left"></div>\r\n                <div class="md-step-bar-right"></div>\r\n            </div>\r\n            <div class="md-step" [ngClass]="{ active: activeIndex >= 2 , editable : activeIndex === 2 }"\r\n                (click)="changeOfTab(\'Calibration\')">\r\n                <div class="md-step-circle"><span>3</span></div>\r\n                <div class="md-step-title">Calibration</div>\r\n                <div class="md-step-bar-left"></div>\r\n                <div class="md-step-bar-right"></div>\r\n            </div>\r\n            <div class="md-step" [ngClass]="{ active: activeIndex >= 3 , editable : activeIndex === 3 }"\r\n                (click)="changeOfTab(\'Maintenance\')">\r\n                <div class="md-step-circle"><span>4</span></div>\r\n                <div class="md-step-title">Maintenance & Warranty</div>\r\n                <div class="md-step-bar-left"></div>\r\n                <div class="md-step-bar-right"></div>\r\n            </div>\r\n        </div>\r\n        <div class="form-row">\r\n            <div class="col-md-12">\r\n                <div class="card new-card">\r\n\r\n                    <div class="card-header bg-primary">\r\n                        <h4 class="new-card-heading"> Maintenance & Warranty</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <form #generalForm="ngForm" method="post" id="" name="" class="form-horizontal add-custustomer">\r\n            <div class="form-row">\r\n                <div class="col-md-12">\r\n                    <div class="card">\r\n                        <div class="card-body">\r\n                            <div class="col-md-3">\r\n                                <label class="fs12">Asset ID : </label>\r\n                                <span class="span-header-red"> {{assetService.listCollection?.assetId}}</span>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <label class="fs12">Asset Name : </label>\r\n                                <span class="span-header-red"> {{assetService.listCollection?.name}}</span>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <label class="fs12">Alt Asset ID : </label>\r\n                                <span class="span-header-red">\r\n                                    {{assetService.listCollection?.alternateAssetName}}</span>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <label class="fs12">Asset Class/Attribute : </label>\r\n                                <span class="span-header-red">\r\n                                    {{assetService.listCollection?.assetAttributeType}}</span>\r\n                            </div>\r\n                            <div class="clear"></div>\r\n                            <hr />\r\n                            <div class="clear"></div>\r\n                            <div class="col-md-12">\r\n                                <div class="form-row">\r\n                                    <div class="col-sm-3 asset_border">\r\n                                        \x3c!-- <div class="col-sm-12">\r\n                                            <h5 class="heading">Maintenance</h5>\r\n                                        </div> --\x3e\r\n                                        <div class="form-group">\r\n                                            <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                <label>\r\n                                                    <input (ngModelChange)="getmemo($event)" type="checkbox"\r\n                                                        [ngModelOptions]="{standalone: true}"\r\n                                                        (change)="maintannaceCheckBoxHndl(currentMaintenance.assetIsMaintenanceReqd)"\r\n                                                        [(ngModel)]="currentMaintenance.assetIsMaintenanceReqd">\r\n                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                    Maintenance Required\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="maintenance-block"\r\n                                            *ngIf="currentMaintenance.assetIsMaintenanceReqd">\r\n                                            <div class="form-group">\r\n                                                <div class="checkbox-cstm" style="margin-left: 0;display:none;">\r\n                                                    <label>\r\n                                                        <input type="checkbox"\r\n                                                            (change)="maintannaceCheckBoxHndl(currentMaintenance.assetMaintenanceIsContract)"\r\n                                                            (ngModelChange)="getmemo($event)"\r\n                                                            [ngModelOptions]="{standalone: true}"\r\n                                                            [(ngModel)]="currentMaintenance.assetMaintenanceIsContract">\r\n                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                        Maintenance Contract\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Maintenance Frequency  <span class="clr-red">*</span></label>\r\n                                                <div class="col-md-12">\r\n                                                    <div class="col-sm-6">\r\n                                                        <label>Mths</label>\r\n                                                        <input type="number" class="form-control"\r\n                                                            (ngModelChange)="getmemo($event)"\r\n                                                            [ngModelOptions]="{standalone: true}"\r\n                                                            [(ngModel)]="currentMaintenance.maintenanceFrequencyMonths"\r\n                                                            min="0" max="12">\r\n                                                    </div>\r\n                                                    <div class="col-sm-6">\r\n                                                        <label> Days</label>\r\n                                                        <input type="number" class="form-control"\r\n                                                            [ngModelOptions]="{standalone: true}"\r\n                                                            (input)="validateDates($event.target.value,currentMaintenance)"\r\n                                                            (ngModelChange)="getmemo($event)"\r\n                                                            [(ngModel)]="currentMaintenance.maintenanceFrequencyDays"\r\n                                                            min="0" max="31">\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div style="padding: 8px;">\r\n                                                <label style="    margin-top: 12px;">Default Vendor</label>\r\n                                                <p-autoComplete (ngModelChange)="getmemo($event)"\r\n                                                    class="p-autoComplete-ctsm" field="name" name="vendorName2"\r\n                                                    [dropdown]="true" errorMessage="Records not found"\r\n                                                    [suggestions]="allVendorInfoFilter" emptyMessage="No Records Found"\r\n                                                    (completeMethod)="filterWarentyVendor2($event)" [size]="30"\r\n                                                    [minLength]="1"\r\n                                                    [(ngModel)]="currentMaintenance.maintenanceDefaultVendorId"\r\n                                                    #prellRevInsp="ngModel">\r\n                                                </p-autoComplete>\r\n                                            </div>\r\n                                            <div style="padding: 8px;">\r\n                                                <label>GL Account <span\r\n                                                        *ngIf="currentMaintenance.assetIsMaintenanceReqd">*</span></label>\r\n                                                <p-autoComplete class="p-autoComplete-ctsm"\r\n                                                    (ngModelChange)="getmemo($event)" field="name" name="Inspector2"\r\n                                                    [dropdown]="true" errorMessage="Records not found"\r\n                                                    [suggestions]="allGlInfoFilter" emptyMessage="No Records Found"\r\n                                                    (completeMethod)="filterWarentyGl2($event)" [size]="30"\r\n                                                    [minLength]="1" required\r\n                                                    [(ngModel)]="currentMaintenance.maintenanceGLAccountId"\r\n                                                    #prellRevInsp367="ngModel">\r\n                                                </p-autoComplete>\r\n                                            </div>\r\n                                            <div class="form-group">\r\n                                                <label>Maintenance Memo</label>\r\n                                                <div class="align_adh">\r\n                                                    <div [innerHTML]="currentMaintenance.maintenanceMemo"\r\n                                                        matTooltipPosition="above"\r\n                                                        [matTooltip]="parsedText(currentMaintenance.maintenanceMemo)"\r\n                                                        class="text_editor_box" style="width: 100% !important;"></div>\r\n                                                    <i class="fa fa-pencil contoel_v" data-toggle="modal"\r\n                                                        data-target="#textarea-popup" matTooltip="Memo"\r\n                                                        matTooltipPosition="above"\r\n                                                        (click)="onAddTextAreaInfo(currentMaintenance.maintenanceMemo)"></i>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="clear"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-sm-3 asset_border" style="margin-left: 1%;">\r\n                                        <div class="form-group">\r\n                                            <div class="checkbox-cstm" style="margin-left: 0;">\r\n                                                <label>\r\n                                                    <input type="checkbox" [ngModelOptions]="{standalone: true}"\r\n                                                        (ngModelChange)="getmemo($event)"\r\n                                                        [(ngModel)]="currentMaintenance.isWarrantyRequired"\r\n                                                        (change)="warrentyCheckBoxHndl(currentMaintenance.isWarrantyRequired)">\r\n                                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                    Warranty Required\r\n                                                </label>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div class="warranty-block" *ngIf="currentMaintenance.isWarrantyRequired">\r\n\r\n                                            <div class="form-group">\r\n                                                <label>Warranty Company</label>\r\n                                                <div>\r\n                                                    <div\r\n                                                        class="inner-addon right-addon autosuggesions-add inline-block">\r\n                                                        <input (ngModelChange)="getmemo($event)" type="text"\r\n                                                            class="form-control names ui-autocomplete-input"\r\n                                                            [ngModelOptions]="{standalone: true}"\r\n                                                            [(ngModel)]="currentMaintenance.warrantyCompany">\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div style="padding: 8px;">\r\n                                                <label>Default Vendor</label>\r\n                                                <p-autoComplete (ngModelChange)="getmemo($event)"\r\n                                                    class="p-autoComplete-ctsm" field="name" name="vendorName"\r\n                                                    [dropdown]="true" errorMessage="Records not found"\r\n                                                    [suggestions]="allVendorInfoFilter" emptyMessage="No Records Found"\r\n                                                    (completeMethod)="filterWarentyVendor($event)" [size]="30"\r\n                                                    [minLength]="1"\r\n                                                    [(ngModel)]="currentMaintenance.warrantyDefaultVendorId"\r\n                                                    #prellRevInsp="ngModel">\r\n                                                </p-autoComplete>\r\n                                            </div>\r\n                                            <div style="padding: 8px;">\r\n                                                <label>GL Account <span\r\n                                                        *ngIf="currentMaintenance.isWarrantyRequired">*</span></label>\r\n                                                <p-autoComplete class="p-autoComplete-ctsm"\r\n                                                    (ngModelChange)="getmemo($event)" field="name" name="Inspector12"\r\n                                                    [dropdown]="true" errorMessage="Records not found"\r\n                                                    [suggestions]="allGlInfoFilter" emptyMessage="No Records Found"\r\n                                                    (completeMethod)="filterWarentyGl($event)" [size]="30"\r\n                                                    [minLength]="1" [required]="currentMaintenance.isWarrantyRequired"\r\n                                                    [(ngModel)]="currentMaintenance.warrantyGLAccountId"\r\n                                                    #prellRevInsp3="ngModel">\r\n                                                </p-autoComplete>\r\n                                            </div>\r\n                                            <div class="clear"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-12">\r\n                                        <div class="margintop">\r\n                                            <button type="submit" class="btn btn-primary pull-right submit-btn"\r\n                                                (click)="addNew()">\r\n                                                Add New\r\n                                            </button>\r\n                                            <button\r\n                                                [disabled]="!generalForm.valid || currentMaintenance.isIntangible || disableSaveForEdit "\r\n                                                type="submit" class="btn btn-primary pull-right submit-btn"\r\n                                                (click)="saveWarrenty()">\r\n                                                {{currentMaintenance.assetMain==true ? \'Update\' : \'Save\'}}\r\n                                            </button>\r\n                                            <button type="button" class="btn btn-primary pull-right submit-btn"\r\n                                                (click)="backClick(\'Previous\')">\r\n                                                Previous\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        <ng-template #tabRedirectConfirmationModal4 let-c="close" let-d="dismiss">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal" (click)="dismissModel()">&times;</button>\r\n                <h4 class="modal-title">Confirmation</h4>\r\n            </div>\r\n            <div class="modal-body">\r\n                <h6>\r\n                    Do you want to Save changes and Continue ?\r\n                </h6>\r\n            </div>\r\n            <div class="modal-footer">\r\n\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal"\r\n                    (click)="redirectdismissModel()">No</button>\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal"\r\n                    (click)="redirectToTab()">Yes</button>\r\n            </div>\r\n        </ng-template>\r\n        <div class="modal fade" id="textarea-popup" role="dialog" data-backdrop="static" data-keyboard="false">\r\n            <div class="modal-dialog modal-sm" style="max-width: 500px !important;">\r\n\r\n                <div class="modal-content">\r\n                    <div class="modal-header">\r\n                        <button type="button" class="close" (click)="onCloseTextAreaInfo()">&times;</button>\r\n                        <h4 class="modal-title">Edit Memo</h4>\r\n                    </div>\r\n                    <div class="modal-body">\r\n                        <table class="table table-bordered table-fixed workflow-table-material">\r\n                            <thead>\r\n                                <th style="color: #fff;">Memo</th>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <p-editor [(ngModel)]="textAreaInfo" [style]="{\'height\':\'320px\'}"\r\n                                            (ngModelChange)="editorgetmemo($event)" name="textAreaInfo" required>\r\n                                        </p-editor>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                        <div style="float:right;margin-top: 12px;">\r\n                            <button type="button" class="btn btn-primary" (ngModelChange)="getmemo($event)"\r\n                                (click)="onSaveTextAreaInfo(textAreaInfo)" [disabled]="disableEditor">Save</button>\r\n                            <button type="button" class="btn btn-danger" (click)="onCloseTextAreaInfo()">Close</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="preloader" *ngIf="isSpinnerVisible">\r\n        <div class="loading">\r\n            <div class="lds-roller">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    </div>'},ubCa:function(e,t,n){"use strict";n.r(t),t.default=".bg-white {\n  background-color: #fff;\n}\n\nlabel {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\ntable th {\n  padding: 4px;\n  text-align: center;\n}\n\ntable td {\n  padding: 4px;\n}\n\n.display-tble {\n  display: table;\n}\n\nselect {\n  max-width: 200px;\n  min-width: 150px;\n}\n\n.pull-right {\n  float: right !important;\n}"},"v+D9":function(e,t,n){"use strict";n.r(t),t.default="label {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: 400;\n}\n\n.span-header-red {\n  color: red;\n  font-weight: bold;\n}\n\ninput[type=text],\ninput[type=number],\ninput[type=email],\nselect,\ntextarea {\n  height: 24px !important;\n  width: 100% !important;\n  border-radius: 5px !important;\n}\n\n.po-head {\n  font-weight: 700;\n  font-size: 16px !important;\n  color: #295d92 !important;\n}\n\n.fa-plus-circle.fa-lg {\n  color: green !important;\n}\n\n.tol_cld {\n  text-align: center;\n  padding: 4px;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}\n\n.btn-tbl-file-download {\n  line-height: 7px !important;\n  width: 85px !important;\n  height: 19px;\n  border: 0;\n  color: #ffffff !important;\n  background: #337ab7;\n}"},"vB/z":function(e,t,n){"use strict";n.r(t),t.default='<div>\r\n    <div [@fadeInOut] class="page-content">\r\n        <div class="right_col" role="main">\r\n            <div class="x_panel">\r\n                <div class="card">\r\n                    <div class="card-body">\r\n                        \x3c!--header--\x3e\r\n                        <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="allAssetInfoNew"\r\n                                 [metaKeySelection]="true"\r\n                                 [first]="pageIndex"\r\n                                 [rows]="pageSize"\r\n                                 [paginator]="true"\r\n                                 [pageLinks]="3"\r\n                                 [rowsPerPageOptions]="[10,20,50,100]"\r\n                                 [columns]="selectedColumns"\r\n                                 selectionMode="multiple"\r\n                                 [metaKeySelection]="true"\r\n                                 [resizableColumns]="true"\r\n                                 [reorderableColumns]="true"\r\n                                 [scrollable]="true"\r\n                                 [totalRecords]="totalRecords"\r\n                                 scrollHeight="450px">\r\n                            <ng-template pTemplate="caption">\r\n                                \x3c!-- <div style="text-align: right; margin-left: -6px !important;">\r\n                                    <p-multiSelect [maxSelectedLabels]="2"\r\n                                                   [options]="cols"\r\n                                                   optionLabel="header"\r\n                                                   [(ngModel)]="selectedColumns"\r\n                                                   [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                                   selectedItemsLabel="{0} columns selected"\r\n                                                   defaultLabel="Choose Columns">\r\n                                    </p-multiSelect>\r\n                                    <div class="inner-addon right-addon w50 inline-block  g-filter-search-cstm">\r\n                                        <i class="fa fa-search"></i>\r\n                                        <input type="text" pInputText size="50" class="form-control ui-autocomplete-input"\r\n                                               (input)="dt.filterGlobal($event.target.value, \'contains\')"\r\n                                               placeholder="Filter">\r\n                                    </div>\r\n                                    <button type="button" class="btn btn-primary" matTooltip="Download Data" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" style="padding: 5px 12px !important;" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                                    <button type="button" class="btn btn-primary" matTooltip="Download Selected Data" matTooltipPosition="above" matTooltip="Download Selected Data" matTooltipPosition="above"\r\n                                            pButton icon="fa-download" iconPos="left" style="padding: 5px 12px !important;" label="Export Selected Data" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n                                </div> --\x3e\r\n                                <div class="row">\r\n                                    <div class="col">\r\n                                        <p-multiSelect [maxSelectedLabels]="2"\r\n                                        [options]="cols"\r\n                                        optionLabel="header"\r\n                                        [(ngModel)]="selectedColumns"\r\n                                        [style]="{minWidth: \'200px\'}" style="float:left"\r\n                                        selectedItemsLabel="{0} columns selected"\r\n                                        defaultLabel="Choose Columns">\r\n                                      </p-multiSelect>\r\n                                    </div>\r\n                                    <div class="col">\r\n                                    <div style="width: auto !important; float: right;"\r\n                                     class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                                    >\r\n                                   <i class="fa fa-search"></i>\r\n                                   <input type="text" pInputText size="50"\r\n                                    class="form-control"\r\n                                   (input)="dt.filterGlobal($event.target.value, \'contains\')"\r\n                                   placeholder="Filter" />\r\n                        </div>\r\n                        </div>\r\n                        </div>\r\n                        <div class="row">\r\n                            <div class="col">\r\n\r\n                                <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Data" matTooltipPosition="above"\r\n                                pButton icon="fa-download" iconPos="left" style="padding: 5px 12px !important;" label="Export All Data" (click)="dt.exportCSV()"></button>\r\n                        <button type="button" class="btn btn-primary new-table-button" matTooltip="Download Selected Data" matTooltipPosition="above" matTooltip="Download Selected Data" matTooltipPosition="above"\r\n                                pButton icon="fa-download" iconPos="left" style="padding: 5px 12px !important;" label="Export Selected Data" (click)="dt.exportCSV({selectionOnly:true})"></button>\r\n\r\n                            </div>\r\n                        </div>\r\n\r\n                                <div style="padding-bottom: 1%"><br></div>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="colgroup" let-columns>\r\n                                <colgroup>\r\n                                    <col *ngFor="let col of columns" style="width:140px">\r\n                                </colgroup>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="header" let-columns style="padding-top: 1% !important">\r\n                                <tr>\r\n                                    <ng-container *ngFor="let col of columns">\r\n                                        <th class="text-center" *ngIf="col.field!=\'companyName\' && col.field!=\'buName\' && col.field!=\'deptName\' && col.field!=\'divName\'" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                            {{col.header}}\r\n                                            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                                        </th>\r\n                                        <th class="text-center" *ngIf="col.field==\'companyName\'" \r\n                                        colspan="4" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                                            Management Structure\r\n                                        </th>\r\n                                    </ng-container>\r\n                                    <th style="width:150px;position: sticky;" *ngIf="selectedColumns.length> 0">Actions</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <th style="width:auto" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                        <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field,\'contains\')">\r\n                                    </th>\r\n                                    <th style="width:150px;position: sticky"></th>\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="body" let-rowData let-columns="columns" let-asset>\r\n                                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openView(rowData)">\r\n\r\n                                    <td style="width:auto" *ngFor="let col of columns" class="ui-resizable-column"\r\n                                        pReorderableRowHandle>\r\n                                        {{rowData[col.field]}}\r\n                                    </td>\r\n                                    <td class="action-icons-cstm" style="width:150px" *ngIf="selectedColumns.length> 0">\r\n                                        <div>\r\n                                            <p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" matTooltipPosition="above" onLabel="on"\r\n                                                           offLabel="off" (onChange)="toggleIsActive(rowData,$event)"\r\n                                                           [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                            <p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" matTooltipPosition="above" onLabel="on"\r\n                                                           offLabel="off" (onChange)="toggleIsActive(rowData,$event)"\r\n                                                           [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n                                            <p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" matTooltipPosition="above" onLabel="on"\r\n                                                           offLabel="off" (onChange)="toggleIsActive(rowData,$event)"\r\n                                                           [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n                                            \r\n                                                           <span data-target="#contentHist" data-toggle="modal"><a class="btn nobg"\r\n                                                            (click)="openSaleHistory(rowData)"\r\n                                                             matTooltip="Sale"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n                                            \r\n                                            \r\n                                                           \x3c!-- <button class="btn-history" mat-icon-button matTooltip="Sale" matTooltipPosition="above"\r\n                                                    data-target="#contentHist" data-toggle="modal"\r\n                                                    (click)="openSaleHistory(history,rowData)">\r\n                                                <mat-icon color="green">history</mat-icon>\r\n                                            </button> --\x3e\r\n                                           \r\n                                           \r\n                                            <span  data-target="#contentWriteOffHist" data-toggle="modal"><a class="btn nobg"\r\n                                                (click)="openSaleHistory(rowData)"\r\n                                                 matTooltip="Write Off"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n                                           \r\n                                            \x3c!-- <button class="btn-history" mat-icon-button matTooltip="Write Off" matTooltipPosition="above"\r\n                                                    data-target="#contentWriteOffHist" data-toggle="modal"\r\n                                                    (click)="openSaleHistory(history,rowData)">\r\n                                                <mat-icon color="green">history</mat-icon>\r\n                                            </button> --\x3e\r\n\r\n                                            <span  data-target="#contentWriteDownHist" data-toggle="modal"><a class="btn nobg"\r\n                                                (click)="openSaleHistory(rowData)"\r\n                                                 matTooltip="Write Down"  matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n\r\n\r\n                                            \x3c!-- <button class="btn-history" mat-icon-button matTooltip="Write Down" matTooltipPosition="above"\r\n                                                    data-target="#contentWriteDownHist" data-toggle="modal"\r\n                                                    (click)="openSaleHistory(history,rowData)">\r\n                                                <mat-icon color="green">history</mat-icon>\r\n                                            </button> --\x3e\r\n                                            \r\n                                        </div>\r\n                                    </td>\r\n\r\n                                </tr>\r\n                            </ng-template>\r\n                            <ng-template pTemplate="summary" id="footer">\r\n                                <div style="text-align: right;">\r\n                                    <label id="footer" class="footer">Total:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText type="text" /> &nbsp;&nbsp;\r\n                                    <label id="footer" class="footer1">Pages Count:</label>\r\n                                    <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText type="text" />\r\n                                </div>\r\n                            </ng-template>\r\n                        </p-table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <div id="contentHist" #contentHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-xl">\r\n\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">\r\n                        Disposal Type: Sale\r\n                    </h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="table-responsive rro-table-cstm">\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Asset ID: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Alt Asset ID: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Existing Cost: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Asset Name: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>AD: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>In service Date: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Existing Book Value: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Last Depr Date: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Control Num: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                        <hr>\r\n\r\n                        <div class="col-sm-6">\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Type</label>\r\n                                <div class="col-sm-7">\r\n                                    <select class="form-control" disabled="">\r\n                                        <option>Sale</option>\r\n                                        <option>Write Off</option>\r\n                                        <option>Write Down</option>\r\n                                    </select>\r\n                                  \r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Select Customer</label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="inner-addon right-addon inline-block">\r\n                                        <i class="fa fa-pencil"></i>\r\n                                        <input type="text" class="form-control names ui-autocomplete-input" id="" name="" value="" autocomplete="off">\r\n                                    </div>\r\n\r\n                                \r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Currency</label>\r\n                                <div class="col-sm-7">\r\n                                    <select>\r\n                                        <option>-- Select --</option>\r\n                                    </select>\r\n                                \r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Proceeds</label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control" id="" name="" value="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Sales Tax</label>\r\n                               \r\n\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" autocomplete="off" class="autosuggest es-input">\r\n                                    \r\n                                </div>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Taxes Other</label>\r\n                               \r\n\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" autocomplete="off" class="autosuggest es-input">\r\n                                    \r\n                                </div>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Effective Date </label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control datepicker hasDatepicker" id="" name="">\r\n                                  \r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Accounting Period  </label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n                                  \r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class="col-sm-6">\r\n\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Upload Documents</label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="upload">\r\n                                       \r\n                                    </div>\r\n                                   \r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Memo</label>\r\n                                <div class="col-sm-7">\r\n                                    <textarea class="form-control h50"></textarea>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-info" data-dismiss="modal" id="" name="">Process</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="">Cancel</button>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div id="contentWriteOffHist" #contentWriteOffHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-xl">\r\n\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">\r\n                        Disposal Type: Write Off\r\n                    </h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="table-responsive rro-table-cstm">\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Asset ID: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Alt Asset ID: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Existing Cost: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Asset Name: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>AD: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>In service Date: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Existing Book Value: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Last Depr Date: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Control Num: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                        <hr>\r\n\r\n                        <div class="col-sm-6">\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Type</label>\r\n                                <div class="col-sm-7">\r\n                                    <select class="form-control" disabled="">\r\n                                        <option>Sale</option>\r\n                                        <option>Write Off</option>\r\n                                        <option>Write Down</option>\r\n                                    </select>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Select Customer</label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="inner-addon right-addon inline-block">\r\n                                        <i class="fa fa-pencil"></i>\r\n                                        <input type="text" class="form-control names ui-autocomplete-input" id="" name="" value="" autocomplete="off">\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Currency</label>\r\n                                <div class="col-sm-7">\r\n                                    <select>\r\n                                        <option>-- Select --</option>\r\n                                    </select>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Proceeds</label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control" id="" name="" value="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Sales Tax</label>\r\n\r\n\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" autocomplete="off" class="autosuggest es-input">\r\n\r\n                                </div>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Taxes Other</label>\r\n\r\n\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" autocomplete="off" class="autosuggest es-input">\r\n\r\n                                </div>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Effective Date </label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control datepicker hasDatepicker" id="" name="">\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Accounting Period  </label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class="col-sm-6">\r\n\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Upload Documents</label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="upload">\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Memo</label>\r\n                                <div class="col-sm-7">\r\n                                    <textarea class="form-control h50"></textarea>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-info" data-dismiss="modal" id="" name="">Process</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="">Cancel</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n    <div id="contentWriteDownHist" #contentWriteDownHist class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n        <div class="modal-dialog modal-xl">\r\n\r\n            \x3c!-- Modal content--\x3e\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">\r\n                        Disposal Type: Write Down\r\n                    </h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <div class="table-responsive rro-table-cstm">\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Asset ID: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Alt Asset ID: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Existing Cost: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Asset Name: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>AD: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>In service Date: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Existing Book Value: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="col-sm-3">\r\n                            <p><span class="label"><b>Last Depr Date: </b></span><span class="value"></span></p>\r\n                            <p><span class="label"><b>Control Num: </b></span><span class="value"></span></p>\r\n                        </div>\r\n                        <div class="clear"></div>\r\n                        <hr>\r\n\r\n                        <div class="col-sm-6">\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Type</label>\r\n                                <div class="col-sm-7">\r\n                                    <select class="form-control" disabled="">\r\n                                        <option>Sale</option>\r\n                                        <option>Write Off</option>\r\n                                        <option>Write Down</option>\r\n                                    </select>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Select Customer</label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="inner-addon right-addon inline-block">\r\n                                        <i class="fa fa-pencil"></i>\r\n                                        <input type="text" class="form-control names ui-autocomplete-input" id="" name="" value="" autocomplete="off">\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Currency</label>\r\n                                <div class="col-sm-7">\r\n                                    <select>\r\n                                        <option>-- Select --</option>\r\n                                    </select>\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Proceeds</label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control" id="" name="" value="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Sales Tax</label>\r\n\r\n\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" autocomplete="off" class="autosuggest es-input">\r\n\r\n                                </div>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Taxes Other</label>\r\n\r\n\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" autocomplete="off" class="autosuggest es-input">\r\n\r\n                                </div>\r\n                                <div class="col-sm-2">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Effective Date </label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control datepicker hasDatepicker" id="" name="">\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Accounting Period  </label>\r\n                                <div class="col-sm-7">\r\n                                    <input type="text" class="form-control" id="" name="" value="" disabled="">\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class="col-sm-6">\r\n\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Upload Documents</label>\r\n                                <div class="col-sm-7">\r\n                                    <div class="upload">\r\n\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group col-sm-12">\r\n                                <label class="control-label col-sm-4">Disposal Memo</label>\r\n                                <div class="col-sm-7">\r\n                                    <textarea class="form-control h50"></textarea>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-info" data-dismiss="modal" id="" name="">Process</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal" id="" name="">Cancel</button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n\x3c!--<div *ngIf="isWorkOrder">\r\n    <app-view-asset [assetViewList]="assetViewList"></app-view-asset>\r\n</div>--\x3e\r\n\x3c!--code for asset creation audit\r\n            <ng-template #auditContent let-c="close" let-d="dismiss">\r\n                <div *ngIf="AuditDetails != undefined && AuditDetails.length > 0">\r\n                    <app-audit [Data]="AuditDetails" [Modal]="modal"></app-audit>\r\n                </div>\r\n            </ng-template>--\x3e\r\n'},vJmB:function(e,t,n){"use strict";n.r(t),t.default=""},vk6m:function(e,t,n){"use strict";n.r(t),t.default="label {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: 400;\n}\n\n.span-header-red {\n  color: red;\n  font-weight: bold;\n}\n\ninput[type=text],\ninput[type=number],\ninput[type=email],\nselect,\ntextarea {\n  height: 24px !important;\n  width: 100% !important;\n  border-radius: 5px !important;\n}\n\n.po-head {\n  font-weight: 700;\n  font-size: 16px !important;\n  color: #295d92 !important;\n}\n\n.fa-plus-circle.fa-lg {\n  color: green !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}\n\n.btn-tbl-file-download {\n  line-height: 7px !important;\n  width: 85px !important;\n  height: 19px;\n  border: 0;\n  color: #ffffff !important;\n  background: #337ab7;\n}"}}]);