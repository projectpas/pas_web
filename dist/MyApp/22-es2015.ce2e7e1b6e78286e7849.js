(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{"/83f":function(e,t,n){"use strict";n.r(t),t.default='<div class="ro-view-receiving">\r\n        <div class="x_panel">\r\n            <div>\r\n                <div>\r\n                    <div id="adminsearchlocationajax">\r\n                        <div class="">\r\n                            <table class="table table-bordered table-wrap">\r\n                                <thead>\r\n                                    <tr class="po-table-tr">\r\n                                        <th>Line no</th>\r\n                                        <th>PN</th>\r\n                                        <th>Qty to Repair</th>\r\n                                        <th>Qty Repaired</th>\r\n                                        <th>Back Ord</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngIf="repairOrderPart != undefined">\r\n                                    <ng-container *ngFor="let part of repairOrderPart;let row_index=index">\r\n                                        <tr class="basic-info" *ngIf="part.stockLine != null && part.stockLine.length > 0">\r\n                                            <td>{{row_index + 1}}</td>\r\n                                            <td>{{part.itemMaster?.partNumber}}</td>\r\n                                            <td>{{part.quantityToRepair}}</td>\r\n                                            <td>{{part.stockLine.length}}</td>\r\n                                            <td>{{part.quantityToRepair - part.stockLine.length}}</td>\r\n                                            <td class="details-control eachcol" style="padding: 4px 6px;">\r\n                                                <i class="fa fa-{{ part.showStockLineGridDraft ? \'minus\':\'plus\'}} btn btn-success btn-cstm btn-xs margin0 btn-receiving-toggle" (click)="toggleExpandIcon(part)"></i>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                        <tr class="more-info" *ngIf="part.showStockLineGridDraft">\r\n\r\n                                            <td colspan="6">\r\n                                                <div class="label-value-row">\r\n                                                    <div class="col-sm-3">\r\n                                                        <p><span class="label"><b>PN: </b></span><span class="value"> {{part.itemMaster?.partNumber}}</span></p>\r\n                                                        <p><span class="label"><b>Qty Actually Received: </b></span><span class="value">{{part.stockLine?.length}}</span></p>\r\n                                                    </div>\r\n                                                    <div class="col-sm-3">\r\n                                                        <p><span class="label"><b>PN Description: </b></span><span class="value">{{part.itemMaster?.partDescription}}</span></p>\r\n                                                        <p><span class="label"><b>Qty Rejected: </b></span><span class="value">{{part.itemMaster?.quantityRejected}}</span></p>\r\n                                                    </div>\r\n                                                    <div class="col-sm-3">\r\n                                                        <p><span class="label"><b>Cond: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].conditionText}}</span></p>\r\n                                                        <p><span class="label"><b>GL Account: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].glAccountText}}</span></p>\r\n                                                    </div>                                                   \r\n                                                </div>\r\n\r\n                                                <div class="stockGridpanel2">\r\n                                                    <h3 class="add-details-heading" style="padding-top: 10px;"> {{ part.itemMaster?.partNumber }} receiving Qty  {{ (part.stockLine[currentStockLineShowIndex].currentSLIndexDraft + 1) }} of {{ part.stockLine.length }}</h3>\r\n                                                   \r\n                                                    <div class="pull-right" style="margin-top: -37px;margin-right: 85px;"> \x3c!--*ngIf="part.itemMaster?.isSerialized"--\x3e\r\n                                                        <i class="fa fa-chevron-left btn btn-primary btn-ad-icons" \r\n      (click)="moveStockLinePage(\'stockline\', part.stockLine[currentStockLineShowIndex].currentSLIndexDraft - 1, part, part.stockLine[currentSLIndexDraft])"></i>\r\n                                                        <input [value]="part.stockLine[currentStockLineShowIndex].currentSLIndexDraft + 1" type="text" pInputText pKeyFilter="pnum" (keyup)="gotoStockLinePage($event, part, part.stockLine[currentSLIndexDraft])" (focusout)="paginatorFocusOut($event, part)" class="form-control" style="width: 50px;border-radius: 0 !important;" /><i class="fa fa-chevron-right btn btn-primary btn-ad-icons" \r\n    (click)="moveStockLinePage(\'stockline\', part.stockLine[currentStockLineShowIndex].currentSLIndexDraft + 1, part, part.stockLine[currentSLIndexDraft])"></i>\r\n                                                        <p>Page {{part.stockLine[currentStockLineShowIndex].currentSLIndexDraft + 1}} of {{part.stockLine.length}} Pages</p>\r\n                                                    </div>\r\n                                                \r\n\r\n                                                    <section class="receiving-stockline-view" *ngIf="part.stockLine">\r\n                                                        <div class="label-value-row">\r\n                                                            <div class="col-sm-3" style="margin-right: 20px;width: 210px !important;">\r\n                                                                <div class="card" style="margin-top: 13px;">\r\n                                                                    <div class="card-header" style="padding: 0 10px;">\r\n                                                                        <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure</h5>\r\n                                                                    </div>\r\n                                                                    <div class="card-body" style="padding: 0 12px 12px;">\r\n                                                                        <p><span class="label"><b>Company: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].companyText}}</span></p>\r\n                                                                        <p><span class="label"><b>BU: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].businessUnitText}}</span></p>\r\n                                                                        <p><span class="label"><b>Division: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].divisionText}}</span></p>\r\n                                                                        <p><span class="label"><b>Dept: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].departmentText}}</span></p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                               \r\n                                                                <p><span class="label"><b>Site: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].siteText}}</span></p>\r\n                                                                <p><span class="label"><b>Warehouse: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].warehouseText}}</span></p>\r\n                                                                <p><span class="label"><b>Location: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].locationText}}</span></p>\r\n                                                                <p><span class="label"><b>Shelf: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].shelfText}}</span></p>\r\n                                                            </div>\r\n                                                            <div class="col-sm-3">\r\n\r\n                                                                <p><span class="label"><b>Bin: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].binText}}</span></p>\r\n                                                                <p><span class="label"><b>Obtain From: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].obtainFrom}}</span></p>\r\n                                                                <p><span class="label"><b>Owner: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].owner}}</span></p>\r\n                                                                <p><span class="label"><b>Traceable To: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].traceableTo}}</span></p>\r\n                                                                <p><span class="label"><b>MFG: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].manufacturerName}}</span></p>\r\n                                                                <p><span class="label"><b>MFG Lot Num: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].manufacturerLotNumber}}</span></p>\r\n                                                                <p><span class="label"><b>MFG Date: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].manufacturingDate}}</span></p>\r\n                                                                <p><span class="label"><b>MFG Trace: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].manufacturingTrace}}</span></p>\r\n                                                            </div>\r\n                                                           \r\n                                                            <div class="col-sm-3">\r\n\r\n                                                                <p><span class="label"><b>MFG Batch Num: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].manufacturingBatchNumber}}</span></p>\r\n                                                                <p><span class="label"><b>Expiration Date: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].expirationDate}}</span></p>\r\n                                                                <p><span class="label"><b>Unit Cost: </b></span><span class="value">\r\n                                                                    {{part.stockLine[currentStockLineShowIndex].repairOrderUnitCost}}</span></p>\r\n                                                                <p><span class="label"><b>Extended Cost: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].repairOrderExtendedCost}}</span></p>\r\n                                                                <p><span class="label"><b>Parts Cert Num: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].partCertificationNumber}}</span></p>\r\n                                                                <p><span class="label"><b>Cert By: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].certifiedByName}}</span></p>\r\n                                                                <p><span class="label"><b>Certified Date: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].certifiedDate}}</span></p>\r\n                                                                <p><span class="label"><b>Certified Due Date: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].certifiedDueDate}}</span></p>\r\n                                                            </div>\r\n                                                            <div class="col-sm-3">\r\n                                                                <p><span class="label"><b>Tag Type: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].tageTypeName}}</span></p>\r\n                                                                <p><span class="label"><b>Tag Date: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].tagDate}}</span></p>\r\n                                                                <p><span class="label"><b>ESN: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].engineSerialNumber}}</span></p>\r\n                                                                <p><span class="label"><b>Aircraft Tail Num: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].aircraftTailNumber}}</span></p>\r\n                                                                <p><span class="label"><b>Ship Via: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].shippingViaText}}</span></p>\r\n                                                                <p><span class="label"><b>Shipping Ref#/AWB: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].shippingReference}}</span></p>\r\n                                                                <p><span class="label"><b>Shipping Account: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].shippingAccount}}</span></p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </section>\r\n\r\n                                                    <section style="clear: both;" *ngIf="part.stockLine">\r\n                                                        <h3 class="add-details-heading" style="text-align: left;padding-top: 30px;">Serialized</h3>\r\n                                                        <div class="form-row">\r\n                                                            <div class="col-md-3">\r\n                                                                <p><span class="label"><b>Serial Num: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].serialNumber ? part.stockLine[currentStockLineShowIndex].serialNumber : \'-\'}}</span></p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </section>\r\n\r\n                                                    <section *ngIf="part.timeLife">\r\n                                                        <h3 class="add-details-heading" style="text-align: left;">Time Life</h3>\r\n                                                        <div class="time-remaining">\r\n                                                            <table class="table table-bordered timelife-table">\r\n                                                                <thead>\r\n                                                                    <tr class="po-table-tr">\r\n                                                                        <th colspan="2" class="text-center">Cycles</th>\r\n                                                                        <th colspan="2" class="text-center">Time (in hours)</th>\r\n                                                                        <th colspan="2" class="text-center">Last (in hours)</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody *ngIf="part.timeLife[currentStockLineShowIndex]">\r\n                                                                    <tr>\r\n                                                                        <td>Remaining</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].cyclesRemaining}}</td>\r\n                                                                        <td>Remaining</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].timeRemaining}}</td>\r\n                                                                        <td>Since New</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].lastSinceNew}}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since New</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].cyclesSinceNew}}</td>\r\n                                                                        <td>Since New</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].timeSinceNew}}</td>\r\n                                                                        <td>Since Ovh</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].lastSinceOVH}}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since Ovh</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].cyclesSinceOVH}}</td>\r\n                                                                        <td>Since Ovh</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].timeSinceOVH}}</td>\r\n                                                                        <td>Since Insp</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].lastSinceInspection}}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since Insp</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].cyclesSinceInspection}}</td>\r\n                                                                        <td>Since Insp</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].timeSinceInspection}}</td>\r\n                                                                        <td></td>\r\n                                                                        <td></td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since Repair</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].cyclesSinceRepair}}</td>\r\n                                                                        <td>Since Repair</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].timeSinceRepair}}</td>\r\n                                                                        <td></td>\r\n                                                                        <td></td>\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </section>\r\n\r\n                                                    \x3c!--<section>\r\n                                                        <h3 class="add-details-heading" style="text-align: left;">Calibrated Equipment</h3>\r\n                                                        <div class="form-row">\r\n                                                            <div class="col-md-3">\r\n                                                                <p><span class="label"><b>Inspection Date: </b></span><span class="value">-</span></p>\r\n                                                            </div>\r\n                                                            <div class="col-md-3">\r\n                                                                <p><span class="label"><b>Frequency: </b></span><span class="value">-</span></p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </section>--\x3e\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </ng-container>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>'},"4IXD":function(e,t,n){"use strict";n.r(t),t.default='<div class="x_panel">\r\n    <div class="x_content">\r\n        <div class="card" *ngIf="purchaseOrderHeaderData">\r\n            <div class="card-header">\r\n                <nav class="pull-left" aria-label="breadcrumb">\r\n                    <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n                        <li class="breadcrumb-item active" aria-current="page">Receiving</li>\r\n                        \x3c!-- <li class="breadcrumb-item " aria-current="page">PO-RO</li> --\x3e\r\n                        <li class="breadcrumb-item " aria-current="page">Receiving PO Grid</li>\r\n                    </ol>\r\n                </nav>\r\n                <button class="btn btn-primary" (click)="toggle_epo_header=!toggle_epo_header">\r\n                    {{toggle_epo_header ? \'Collapse\' : \'Expand\'}}\r\n                </button>\r\n            </div>\r\n            <div class="card-body">\r\n                <h4 class="po-head">Receiving - PO Grid (Single PO)</h4>\r\n                <form id="" class="ro-grid-form" name="">\r\n                    <div class="form-row">\r\n                        <div class="col-md-8">\r\n                            <div class="form-group">\r\n                                <label style="float:left; width:auto; margin-right:20px; padding-top:3px;">Status:</label>\r\n                                <div>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;" *ngFor="let status of poStatus">\r\n                                        <label class="radio-cstm radio-cstm-d wauto">\r\n                                            <input type="radio" [checked]="status.value == purchaseOrderHeaderData.statusId" name="poStatus" class="form-control" value="{{status.value}}" disabled>\r\n                                            <span class="checkmark"></span>\r\n                                            {{status.label}}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-9">\r\n                        <div class="form-row">\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>RO Num</label>\r\n                                    <input class="form-control" type="text" name="purchaseOrderNumber" [(ngModel)]="purchaseOrderHeaderData.purchaseOrderNumber" disabled >\r\n                                </div>                        \r\n                            </div>\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>Vendor Name</label>\r\n                                    <input class="form-control" type="text" name="vendorName" [(ngModel)]="purchaseOrderHeaderData.vendorName" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>Requisitioner</label>\r\n                                    <input class="form-control" type="text" name="requestedBy" [(ngModel)]="purchaseOrderHeaderData.requestedBy" disabled>\r\n                                </div>\r\n                            </div>\r\n                            \x3c!-- <div class="col-md-3">\r\n                                <div class="form-group">\r\n                                    <label>Approver</label>\r\n                                    <input class="form-control" type="text" name="approver" [(ngModel)]="purchaseOrderHeaderData.approver" disabled>\r\n                                </div>\r\n                            </div> --\x3e\r\n                        </div> \r\n                     </div>\r\n                    </div>\r\n                    <hr *ngIf="toggle_epo_header"/>\r\n               \r\n                    <div class="form-row" *ngIf="toggle_epo_header">\r\n                        <div class="col-md-9">\r\n                        <div class="form-row">\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>Open Date</label>\r\n                                    <p-calendar class="pas-clder" [showIcon]="true" name="openDate" [(ngModel)]="purchaseOrderHeaderData.openDate" [disabled]="true"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Closed/Cancelled Date</label>\r\n                                    <p-calendar class="pas-clder" [showIcon]="true" name="closedDate" [(ngModel)]="purchaseOrderHeaderData.closedDate" [disabled]="true"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Need By</label>\r\n                                    <p-calendar class="pas-clder" [showIcon]="true" name="needByDate" [(ngModel)]="purchaseOrderHeaderData.needByDate" [disabled]="true"></p-calendar>  \r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Priority</label>\r\n                                    <input class="form-control" type="text" name="priority" [(ngModel)]="purchaseOrderHeaderData.priority" disabled>\r\n                                </div>                            \r\n                            </div>                       \r\n                            <div class="col-md-4">                                \r\n                                <div class="form-group">\r\n                                    <label>Vendor Code</label>\r\n                                    <input class="form-control" type="text" name="vendorCode" [(ngModel)]="purchaseOrderHeaderData.vendorCode" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Vendor Contact</label>\r\n                                    <input class="form-control" type="text" name="vendorContact" [(ngModel)]="purchaseOrderHeaderData.vendorContact" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Contact Phone</label>\r\n                                    <input class="form-control" type="text" name="contactPhone" [(ngModel)]="purchaseOrderHeaderData.vendorPhone" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Credit Limit &amp; Terms</label>\r\n                                    <div class="form-row">\r\n                                        <div class="col-sm-5">\r\n                                            <input class="form-control" type="text" name="creditLimit" [(ngModel)]="purchaseOrderHeaderData.creditLimit" disabled>\r\n                                        </div>\r\n                                        <div class="col-sm-7">\r\n                                            <input class="form-control" type="text" name="creditTerms" [(ngModel)]="purchaseOrderHeaderData.terms" disabled>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n            \r\n                            </div>\r\n                            <div class="col-md-4">                                                                \r\n                                \x3c!-- <div class="form-group">\r\n                                    <label>Approved Date</label>\r\n                                    <p-calendar class="pas-clder" [showIcon]="true" name="approvedDate" [(ngModel)]="purchaseOrderHeaderData.dateApproved" [disabled]="true"></p-calendar>\r\n                                </div> --\x3e\r\n                                <div class="form-group memo-popup-cstm" style="margin-top: 12px;">\r\n                                        <label>Memo</label>\r\n                                        <span   matTooltipPosition="above" matTooltip="{{purchaseOrderHeaderData.memo}}">\r\n                                            <input type="text" name="memo" pInputText class="form-control" value="{{purchaseOrderHeaderData.memo}}" disabled /></span>\r\n                                        <i class="fa fa-info-circle fa-lg"   matTooltipPosition="above" matTooltip="{{purchaseOrderHeaderData.memo}}"></i>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm" style="margin-top: 15px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="resale" class="form-control" [(ngModel)]="purchaseOrderHeaderData.resale" disabled>\r\n                                            <span class="cr" style="opacity: 0.6;"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Resale\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="deferredReceiver" [(ngModel)]="purchaseOrderHeaderData.deferredReceiver" disabled>\r\n                                            <span class="cr" style="opacity: 0.6;"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Deferred Receiver\r\n                                        </label>\r\n                                    </div>\r\n                                </div>                        \r\n                            </div>\r\n                        </div>\r\n                        <div class="form-row">\r\n                            <div class="col-md-12" style="max-width: 100%;">\r\n                                <div class="form-group">\r\n                                    <label>Notes</label>\r\n                                    <textarea name="ponotes" class="form-control head-notes" rows="2" \r\n                                    [(ngModel)]="purchaseOrderHeaderData.notes" disabled></textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                     </div>\r\n                            <div class="col-md-3">\r\n                                <div class="card" style="margin-top: 20px;">\r\n                                    <div class="card-header" style="padding: 10px 12px;">\r\n                                        <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure</h5>\r\n                                    </div>\r\n                                    <div class="card-body" style="padding: 4px 12px 6px;">\r\n                                        <div class="form-group" style="margin-bottom: 2px;">\r\n                                            \x3c!-- <label>Company</label> --\x3e\r\n                                            <input class="form-control" type="text" name="companyName" [(ngModel)]="headerManagementStructure.level1" disabled>\r\n                                        </div>\r\n                                        <div class="form-group" style="margin-bottom: 2px;">\r\n                                            \x3c!-- <label>BU</label> --\x3e\r\n                                            <input class="form-control" type="text" name="BUName" [(ngModel)]="headerManagementStructure.level2" disabled>\r\n                                        </div>\r\n                                        <div class="form-group" style="margin-bottom: 2px;">\r\n                                            \x3c!-- <label>Division</label> --\x3e\r\n                                            <input class="form-control" type="text" name="divisionName" [(ngModel)]="headerManagementStructure.level3" disabled>\r\n                                        </div>\r\n                                        <div class="form-group" style="margin-bottom: 2px;">\r\n                                            \x3c!-- <label>Dept</label> --\x3e\r\n                                            <input class="form-control" type="text" name="deptName" [(ngModel)]="headerManagementStructure.level4" disabled>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>                                            \r\n                            </div>\r\n                        </div>\r\n                   \r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="table-responsive pas-table-cstm ero-table-cstm">\r\n            <table class="table table-bordered " id="po-table">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Item Num</th>\r\n                        <th>PN</th>\r\n                        <th>Alt PN</th>\r\n                        <th>PN Description</th>\r\n                        <th>Manufacturer</th>\r\n                        <th>Stock Type</th>\r\n                        <th>Qty Ord</th>\r\n                        <th>Discount</th>\r\n                        <th>Unit Cost</th>\r\n                        <th>Extended Cost</th>\r\n                        <th>WO</th>\r\n                        <th>SO</th>\r\n                        <th>Sub-WO</th>\r\n                        <th colspan="4" style="text-align: center;">Management Structure</th>\r\n                        <th colspan="43"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf="purchaseOrderData != undefined">\r\n                    <ng-container *ngFor="let part of purchaseOrderData;let row_index=index">\r\n                        <tr *ngIf="part.stockLine != null && part.stockLine.length > 0" class="parent-data">\r\n                            <td class="text-right">{{row_index + 1}}</td>\r\n                            <td>{{part.itemMaster.partNumber}}</td>\r\n                            <td>{{part.altEquiPartNumber}}</td>\r\n                            <td>{{part.itemMaster.partDescription}}</td>\r\n                            <td>{{part.itemMaster.manufacturer?.name}}</td>\r\n                            \x3c!-- <td>{{part.conditionText}}</td>\r\n                            <td>{{part.uomText}}</td> --\x3e\r\n                            <td>{{part.itemMaster.isPma ? "PMA," : \'\' + part.itemMaster.isDer ? "DER" : \'\'}}</td>\r\n                            <td class="text-right">{{part.quantityOrdered}}</td>\r\n                            <td class="text-right">{{part.discountPerUnit}}</td>\r\n                            <td class="text-right">{{part.unitCost}}</td>\r\n                            <td class="text-right">{{part.extendedCost}}</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td style="min-width: 130px;">\r\n                                \x3c!-- <label style="width:90px;">Company:</label> --\x3e\r\n                                {{part.companyText}}\r\n                            </td>\r\n                            <td style="min-width: 130px;">\r\n                                \x3c!-- <label style="width:90px;">BU:</label> --\x3e\r\n                                {{part.businessUnitText}}\r\n                                \r\n                            </td>\r\n                            <td style="min-width: 130px;">\r\n                                \x3c!-- <label style="width:90px;">Division:</label> --\x3e\r\n                                {{part.divisionText}}\r\n                                \r\n                            </td>\r\n                            <td style="min-width: 130px;">\r\n                                \x3c!-- <label style="width:90px;">Dept:</label> --\x3e\r\n                                {{part.departmentText}}\r\n                            </td>\r\n                            <th colspan="43"></th>\r\n                        </tr>\r\n\r\n                        <ng-container>\r\n                            <tr *ngIf="part.stockLine.length > 0"> \x3c!--part.stockLine != null--\x3e\r\n                                \x3c!--<th>Stock Line</th>--\x3e\r\n                                <th></th>\r\n                                <th>PN</th>\r\n                                <th>PN Description</th>\r\n                                <th>Ctrl Num</th>\r\n                                <th>Ctrl Id</th>\r\n                                <th>Cond</th>\r\n                                <th>Serial Num</th>\r\n                                <th>Qty Received</th>\r\n                                <th>Back Ord</th>\r\n                                <th>Receiver No.</th>\r\n                                <th>Unit Cost</th>\r\n                                <th>Extended Cost</th>\r\n                                <th>WO </th>\r\n                                <th>SO </th>\r\n                                <th>Sub-WO </th>\r\n                                <th colspan="4" style="text-align: center;">Management Structure</th>\r\n                                <th>Site</th>\r\n                                <th>Warehouse</th>\r\n                                <th>Location</th>\r\n                                <th>Shelf</th>\r\n                                <th>Bin</th>\r\n                                <th>Owner</th>\r\n                                <th>Name</th>\r\n                                <th>Obtain From</th>\r\n                                <th>Name</th>\r\n                                <th>Traceable to</th>\r\n                                <th>Name</th>\r\n                                <th>Trace</th>\r\n                                <th>Mfg</th>\r\n                                <th>Mfg Lot Num</th>\r\n                                <th>Mfg Date</th>\r\n                                <th>Mfg Batch Num</th>\r\n                                <th>Part Cert Num </th>\r\n                                <th>Certified Date</th>\r\n                                <th class="date">Certified Due Date</th>\r\n                                <th>Tagged By </th>\r\n                                <th class="date">Date Tagged </th>\r\n                                <th class="date">Tag Exp Date </th>\r\n                                <th>Shipping Ref#/AWB</th>\r\n                                <th>Ship Via</th>\r\n                                <th>Shipping Account</th>\r\n                                <th>ESN</th>\r\n                                <th>GL Account</th>\r\n                                <th>Time Life</th>\r\n                                <th colspan="5">Cycles</th>\r\n                                <th colspan="5">Time</th>\r\n                                <th colspan="5">Last</th>\r\n                            </tr>\r\n                            <ng-container *ngFor="let SL of part.stockLine;let stockline_row_index=index">\r\n                                <tr *ngIf="!SL.isDeleted">\r\n                                    \x3c!--<td>{{SL.stockLineNumber}}</td>--\x3e\r\n                                    <td><a class="btn nobg btn-delete-cstm"\r\n                                        (click)="deleteStockLine(SL)" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a></td>\r\n                                    <td>{{part.itemMaster.partNumber}}</td>\r\n                                    <td>{{part.itemMaster.partDescription}}</td>\r\n                                    <td>{{SL.controlNumber}}</td>\r\n                                    <td>{{SL.idNumber}}</td>\r\n                                    <td>{{SL.conditionText}}</td>\r\n                                    <td>{{SL.serialNumber}}</td>\r\n                                    <td class="text-right">{{SL.quantity}}</td>\r\n                                    <td class="text-right">{{part.quantityBackOrdered}}</td>\r\n                                    <td>{{SL.receiverNumber}}</td>\r\n                                    <td class="text-right">{{SL.purchaseOrderUnitCost}}</td>\r\n                                    <td class="text-right">{{SL.purchaseOrderExtendedCost}}</td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td style="min-width: 120px;">\r\n                                        \x3c!-- <label style="width:90px;">Company:</label> --\x3e\r\n                                        {{SL.companyText}}\r\n                                    </td>\r\n                                    <td style="min-width: 120px;">\r\n                                        \x3c!-- <label style="width:90px;">BU:</label> --\x3e\r\n                                        {{SL.businessUnitText}}\r\n                                    </td>\r\n                                    <td style="min-width: 120px;">\r\n                                        \x3c!-- <label style="width:90px;">Division:</label> --\x3e\r\n                                        {{SL.divisionText}}\r\n                                    </td>\r\n                                    <td style="min-width: 120px;">\r\n                                        \x3c!-- <label style="width:90px;">Dept:</label> --\x3e\r\n                                        {{SL.departmentText}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{part.stockLine[stockline_row_index].siteText}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{part.stockLine[stockline_row_index].warehouseText}}\r\n                                    </td>\r\n                                    <td>\r\n                                            {{part.stockLine[stockline_row_index].locationText}}\r\n                                    </td>\r\n                                    <td>\r\n                                            {{part.stockLine[stockline_row_index].shelfText}}\r\n                                    </td>\r\n                                    <td>\r\n                                            {{part.stockLine[stockline_row_index].binText}}\r\n                                    </td>\r\n                                    \x3c!-- <td>{{SL.ownerType == 3 ? \'Vendor\' : SL.ownerType == 1 ? \'Customer\' : \'Other\' }}</td> --\x3e\r\n                                    <td>{{SL.ownerType == 1 ? \'Customer\' : SL.ownerType == 2 ? \'Vendor\' : SL.ownerType == 9 ? \'Company\' : \'Other\' }}</td>\r\n                                    <td>{{SL.ownerText}}</td>\r\n                                    \x3c!-- <td>{{SL.obtainFromType == 3 ? \'Vendor\' : SL.obtainFromType == 1 ? \'Customer\' : \'Other\' }}</td> --\x3e\r\n                                    <td>{{SL.obtainFromType == 1 ? \'Customer\' : SL.obtainFromType == 2 ? \'Vendor\' : SL.obtainFromType == 9 ? \'Company\' : \'Other\' }}</td>\r\n                                    <td>{{SL.obtainFromText}}</td>\r\n                                    \x3c!-- <td>{{SL.traceableToType == 3 ? \'Vendor\' : SL.traceableToType == 1 ? \'Customer\' : \'Other\' }}</td> --\x3e\r\n                                    <td>{{SL.traceableToType == 1 ? \'Customer\' : SL.traceableToType == 2 ? \'Vendor\' : SL.traceableToType == 9 ? \'Company\' : \'Other\' }}</td>\r\n                                    <td>{{SL.traceableToText}}</td>\r\n                                    <td>{{SL.manufacturingTrace}}</td>\r\n                                    <td>{{SL.manufacturerText}}</td> \x3c!--manufacturerName--\x3e\r\n                                    <td>{{SL.manufacturerLotNumber}}</td> \r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [maxDate]="currentDate"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [showIcon]="true"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.manufacturingDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>{{SL.manufacturingBatchNumber}}</td> \r\n                                    <td>{{SL.partCertificationNumber}}</td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [maxDate]="currentDate"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [showIcon]="true"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.certifiedDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [maxDate]="currentDate"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [showIcon]="true"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.certifiedDueDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>{{SL.certifiedBy}}</td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [maxDate]="currentDate"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [showIcon]="true"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.tagDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [showIcon]="true"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.expirationDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>{{SL.shippingReference}}</td>\r\n                                    <td>{{SL.shippingViaText}}</td>\r\n                                    <td>{{SL.shippingAccount}}</td>\r\n                                    <td>{{SL.engineSerialNumber}}</td>\r\n                                    <td>{{SL.glAccountText}}</td>\r\n                                    <td>\r\n                                        <input type="checkbox" disabled [checked]="part.itemMaster.isTimeLife != false" />\r\n                                    </td>\r\n                                    <td colspan="13" *ngIf="part.timeLife[stockline_row_index] == undefined "> </td>\r\n                                    <ng-container *ngIf="part.timeLife[stockline_row_index] != undefined">\r\n                                        <td style="min-width: 106px;">Remaining {{part.timeLife[stockline_row_index].cyclesRemaining}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since New {{part.timeLife[stockline_row_index].cyclesSinceNew}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since OVH {{part.timeLife[stockline_row_index].cyclesSinceOVH}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since Insp {{part.timeLife[stockline_row_index].cyclesSinceInspection}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since Repair {{part.timeLife[stockline_row_index].cyclesSinceRepair}} hrs</td>\r\n    \r\n                                        <td style="min-width: 106px;">Remaining {{part.timeLife[stockline_row_index].timeRemaining}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since New {{part.timeLife[stockline_row_index].timeSinceNew}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since OVH {{part.timeLife[stockline_row_index].timeSinceOVH}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since Insp {{part.timeLife[stockline_row_index].timeSinceInspection}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since Repair {{part.timeLife[stockline_row_index].timeSinceRepair}} hrs</td>\r\n    \r\n                                        <td style="min-width: 106px;">Since New {{part.timeLife[stockline_row_index].lastSinceNew}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since OVH {{part.timeLife[stockline_row_index].lastSinceOVH}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since Insp {{part.timeLife[stockline_row_index].lastSinceInspection}} hrs</td>\r\n                                    </ng-container>                                \r\n                                </tr>\r\n                            </ng-container>\r\n                            \r\n                        </ng-container>\r\n                    </ng-container>\r\n\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n\r\n        <button class="btn btn-primary pull-right" (click)="CreatePurchaseOrderStockline()">Create Stockline</button>\r\n    </div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},"633Q":function(e,t,n){"use strict";n.r(t),t.default='.x_panel {\n  border: none;\n}\n\n.rpo-bcrumb {\n  background-color: transparent;\n  color: #295d92;\n}\n\n.rpo-bcrumb li {\n  font-family: "Roboto";\n  font-weight: bold;\n}\n\n.right-addon .fa-search {\n  right: 14px;\n}\n\n.rro-btn {\n  margin-top: -60px;\n  float: right;\n  position: absolute;\n  right: 15px;\n}\n\n.ro-popupview-form label {\n  width: 93px;\n  text-align: right;\n}\n\n.roview-table-cstm {\n  min-height: 300px;\n  text-align: center;\n}\n\n.roview-table-cstm .child-data td, .roview-table-cstm .parent-data td {\n  background: #fff !important;\n  padding: 3px;\n}\n\n.roview-table-cstm .child-header {\n  background: #fafafa !important;\n}\n\n.ro-view-address label, .ro-view-receiving label {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\n.ro-view-address input[type=text], .ro-view-address input[type=number],\n.ro-view-receiving input[type=text], .ro-view-receiving input[type=number] {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.po-table-tr th {\n  padding: 8px 4px;\n  font-size: 8px;\n}\n\n.po-sub-tr {\n  background-color: #fafafa;\n}\n\n.po-sub-tr th {\n  padding: 8px 4px;\n  font-size: 8px;\n}\n\n.btn-po-details {\n  width: 85px !important;\n  padding: 6px 2px 6px !important;\n  color: #fff;\n  border-radius: 4px !important;\n}\n\n.btn-po-details:hover {\n  color: #fff;\n  background-color: #286090 !important;\n  border-color: #204d74;\n}\n\n.add-details-heading {\n  font-size: 20px;\n  margin-top: 20px;\n  text-align: center;\n  color: #337ab7;\n}\n\n.btn-ad-icons {\n  padding: 6px !important;\n  width: 24px !important;\n  height: 24px !important;\n  margin: -3px 2px 0 1px !important;\n  border-radius: 0 !important;\n}\n\n.time-remaining input {\n  width: 140px;\n  margin: 5px;\n  float: left;\n}\n\np .label {\n  width: 40%;\n  padding: 0;\n  display: inline-block;\n}\n\np .value {\n  width: 60%;\n  display: inline-block;\n}\n\n.label-value-row {\n  margin-top: 10px;\n}\n\n.receiving-stockline-view p {\n  margin-top: 10px;\n}\n\n.timelife-table tr td {\n  padding: 5px;\n}\n\n@media (min-width: 768px) {\n  .ro-view-address .col-md-3 {\n    max-width: 22%;\n    margin-right: 80px;\n  }\n\n  .ro-view-receiving .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}'},"6qr/":function(e,t,n){"use strict";n.r(t),t.default='.x_panel {\n  border: none;\n}\n\n.rpo-bcrumb {\n  background-color: transparent;\n  color: #295d92;\n}\n\n.rpo-bcrumb li {\n  font-family: "Roboto";\n  font-weight: bold;\n}\n\n.right-addon .fa-search {\n  right: 14px;\n}\n\n.rro-btn {\n  margin-top: -60px;\n  float: right;\n  position: absolute;\n  right: 15px;\n}\n\n.ro-popupview-form label {\n  width: 93px;\n  text-align: right;\n}\n\n.roview-table-cstm {\n  min-height: 300px;\n  text-align: center;\n}\n\n.roview-table-cstm .child-data td, .roview-table-cstm .parent-data td {\n  background: #fff !important;\n  padding: 3px;\n}\n\n.roview-table-cstm .child-header {\n  background: #fafafa !important;\n}\n\n.ro-view-address label, .ro-view-receiving label {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\n.ro-view-address input[type=text], .ro-view-address input[type=number],\n.ro-view-receiving input[type=text], .ro-view-receiving input[type=number] {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.po-table-tr th {\n  padding: 8px 4px;\n  font-size: 8px;\n}\n\n.po-sub-tr {\n  background-color: #fafafa;\n}\n\n.po-sub-tr th {\n  padding: 8px 4px;\n  font-size: 8px;\n}\n\n.btn-po-details {\n  width: 85px !important;\n  padding: 6px 2px 6px !important;\n  color: #fff;\n  border-radius: 4px !important;\n}\n\n.btn-po-details:hover {\n  color: #fff;\n  background-color: #286090 !important;\n  border-color: #204d74;\n}\n\n.add-details-heading {\n  font-size: 20px;\n  margin-top: 20px;\n  text-align: center;\n  color: #337ab7;\n}\n\n.btn-ad-icons {\n  padding: 6px !important;\n  width: 24px !important;\n  height: 24px !important;\n  margin: -3px 2px 0 1px !important;\n  border-radius: 0 !important;\n}\n\n.time-remaining input {\n  width: 140px;\n  margin: 5px;\n  float: left;\n}\n\np .label {\n  width: 40%;\n  padding: 0;\n  display: inline-block;\n}\n\np .value {\n  width: 60%;\n  display: inline-block;\n}\n\n.label-value-row {\n  margin-top: 10px;\n}\n\n.receiving-stockline-view p {\n  margin-top: 10px;\n}\n\n.timelife-table tr td {\n  padding: 5px;\n}\n\n.btn-receiving-toggle {\n  width: 28px !important;\n  height: 23px !important;\n}\n\n@media (min-width: 768px) {\n  .ro-view-address .col-md-3 {\n    max-width: 22%;\n    margin-right: 80px;\n  }\n\n  .ro-view-receiving .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}'},"7dti":function(e,t,n){"use strict";n.r(t),t.default='<app-polist [isReceivingPolist]="isReceivingPolist"></app-polist>\r\n\r\n'},"90el":function(e,t,n){"use strict";n.r(t),t.default='<div class="x_panel">\r\n    <div class="x_content" *ngIf="purchaseOrderData != undefined && purchaseOrderData != null && purchaseOrderData != undefined && purchaseOrderData != null">\r\n        <div class="card new-card">\r\n            <div class="card-header header">\r\n                \x3c!-- <nav class="pull-left" aria-label="breadcrumb">\r\n                    <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n                        <li class="breadcrumb-item active" aria-current="page">Receiving</li>\r\n                        <li class="breadcrumb-item " aria-current="page">PO-RO</li>\r\n                        <li class="breadcrumb-item " aria-current="page">Receiving PO Grid</li>\r\n                    </ol>\r\n                </nav> --\x3e\r\n                <div class="row">\r\n                    <div class="col">\r\n                        <h4 class="header-name">Reviewing PO Receipt\r\n                <button class="btn-sm header-button header-button-alignment" (click)="toggle_epo_header=!toggle_epo_header">\r\n                    {{toggle_epo_header ? \'Collapse\' : \'Expand\'}}\r\n                </button>\r\n                 </h4>\r\n             </div>\r\n             <div>\r\n\r\n                <button\r\n                type="button" class="btn-sm header-button pull-right"\r\n                [routerLink]="[\'/receivingmodule/receivingpages/app-purchase-order\']">\r\n                PO List\r\n            </button>\r\n            </div>\r\n            </div>\r\n            </div>\r\n            <div class="card-body">\r\n                \x3c!-- <h4 class="po-head">Reviewing PO Receipt</h4> --\x3e\r\n                <form id="" class="ro-grid-form createPO-form" name="">\r\n                    <div class="form-row">\r\n                        <div class="col-md-8 ro-status-radios">\r\n                            <div class="form-group">\r\n                                <label style="float:left; width:auto; margin-right:20px; padding-top:3px;">Status:</label>\r\n                                <div>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;" *ngFor="let status of poStatus">\r\n                                        <label class="radio-cstm radio-cstm-d wauto">\r\n                                            <input type="radio" [checked]="status.value == purchaseOrderData.statusId" name="poStatus" class="form-control" value="{{status.value}}" disabled>\r\n                                            <span class="checkmark"></span>\r\n                                            {{status.label}}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                      <div class="col-md-9">\r\n                        <div class="form-row">\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>PO Num</label>\r\n                                    <input class="form-control" type="text" name="purchaseOrderNum" [(ngModel)]="purchaseOrderData.purchaseOrderNumber" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>Vendor Name</label>\r\n                                    <input class="form-control" type="text" name="vendorName" [(ngModel)]="purchaseOrderData.vendorName" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>Requisitioner</label>\r\n                                    <input class="form-control" type="text" name="requestedBy" [(ngModel)]="purchaseOrderData.requestedBy" disabled>\r\n                                </div>\r\n                            </div>\r\n                            \x3c!-- <div class="col-md-3">\r\n                                <div class="form-group">\r\n                                    <label>Approver</label>\r\n                                    <input class="form-control" type="text" name="approver" [(ngModel)]="purchaseOrderData.approver" disabled>\r\n                                </div>\r\n                            </div> --\x3e\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <hr *ngIf="toggle_epo_header" />\r\n                    <div class="form-row" *ngIf="toggle_epo_header">\r\n                        <div class="col-md-9">\r\n                            <div class="form-row">\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>Open Date</label>\r\n                                    <p-calendar class="pas-clder" [showIcon]="true" name="openDate" [(ngModel)]="purchaseOrderData.openDate" [disabled]="true"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Closed/Cancelled Date</label>\r\n                                    <p-calendar class="pas-clder" [showIcon]="true" name="closedDate" [(ngModel)]="purchaseOrderData.closedDate" [disabled]="true"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Need By</label>\r\n                                    <p-calendar class="pas-clder" [showIcon]="true" name="needByDate" [(ngModel)]="purchaseOrderData.needByDate" [disabled]="true"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Priority</label>\r\n                                    <input class="form-control" type="text" name="priority" [(ngModel)]="purchaseOrderData.priority" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>Vendor Code</label>\r\n                                    <input class="form-control" type="text" name="vendorCode" [(ngModel)]="purchaseOrderData.vendorCode" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Vendor Contact</label>\r\n                                    <input class="form-control" type="text" name="vendorContact" [(ngModel)]="purchaseOrderData.vendorContact" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Contact Phone</label>\r\n                                    <input class="form-control" type="text" name="contactPhone" [(ngModel)]="purchaseOrderData.vendorPhone" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Credit Limit &amp; Terms</label>\r\n                                    <div class="form-row">\r\n                                        <div class="col-sm-5">\r\n                                            <input class="form-control" type="text" name="creditLimit" [(ngModel)]="purchaseOrderData.creditLimit" disabled>\r\n                                        </div>\r\n                                        <div class="col-sm-7">\r\n                                            <input class="form-control" type="text" name="creditTerms" [(ngModel)]="purchaseOrderData.terms" disabled>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class="col-md-4">                                \r\n                                \x3c!-- <div class="form-group">\r\n                                    <label>Approved Date</label>\r\n                                    <p-calendar class="pas-clder" [showIcon]="true" name="approvedDate" [(ngModel)]="purchaseOrderData.dateApproved" [disabled]="true"></p-calendar>\r\n                                </div> --\x3e\r\n                              \r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm" style="margin-top: 15px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="resale" class="form-control" [(ngModel)]="purchaseOrderData.resale" disabled>\r\n                                            <span class="cr" style="opacity: 0.6;"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Resale\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="deferredReceiver" [(ngModel)]="purchaseOrderData.deferredReceiver" disabled>\r\n                                            <span class="cr" style="opacity: 0.6;"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Deferred Receiver\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                            <div class="col-md-4">\r\n                                <div class="form-group memo-popup-cstm">\r\n                                    <label>Notes\r\n                                        <span class="editor-span"\r\n                                        ><a\r\n                                          class="btn nobg"\r\n                                          data-toggle="modal"\r\n                                          data-target="#add-notes"\r\n                                          (click)="onAddNotes()"\r\n                                          matTooltipPosition="above" matTooltip="Notes"\r\n                                          ><i class="fa fa-pencil" ></i\r\n                                        ></a>\r\n                                        </span>\r\n                                    </label>\r\n                                        \x3c!-- <textarea name="ponotes" class="form-control head-notes" rows="2" \r\n                                        [(ngModel)]="purchaseOrderData.notes" disabled></textarea> --\x3e\r\n\r\n                                        \x3c!-- <div [innerHTML]="purchaseOrderData.notes" \r\n                                        class="form-group head-notes memo-popup-cstm mat_emo"\r\n                               style="width:100%;background-color: #c9c9c9 !important;" class="text_editor_box" disabled>\r\n                               </div> --\x3e\r\n                               <span>\r\n                                <div [innerHTML]="purchaseOrderData.notes"\r\n                                [matTooltip]="parsedText(purchaseOrderData.notes)"\r\n                                matTooltipPosition="above"\r\n                                 class="form-control text-editor-field"\r\n                                    class="text_editor_box text-editor-width">\r\n                                </div>\r\n                            \r\n                            </span>\r\n                           </div>\r\n                          </div>\r\n                          <div class="col-md-4">\r\n                            <div class="form-group memo-popup-cstm">\r\n                                <label>Memo \r\n                                       <span class="editor-span"\r\n                                       ><a\r\n                                         class="btn nobg"\r\n                                         data-toggle="modal"\r\n                                         data-target="#cpo-memo" matTooltipPosition="above" \r\n                                         matTooltip="Add Memo" disabled="true"  (click)="onAddMemo()"\r\n                                         ><i class="fa fa-pencil" ></i\r\n                                       ></a>\r\n                                       </span>\r\n                                   </label>\r\n                                \x3c!-- <span>\r\n                                    <div [innerHTML]="purchaseOrderData.memo" \r\n                                    class="form-group head-notes memo-popup-cstm mat_emo"\r\n                           style="width:100%;background-color: #c9c9c9 !important;" class="text_editor_box" disabled>\r\n                           </div>\r\n                                    \r\n                                </span> --\x3e\r\n                                <span> <div [innerHTML]="purchaseOrderData.memo" \r\n                                    [matTooltip]="parsedText(purchaseOrderData.memo)"\r\n                                    matTooltipPosition="above"\r\n                                     class="form-control " \r\n                                    class="text_editor_box text-editor-field" disabled="true"></div> \r\n                                     </span>\r\n                                </div>\r\n                               \r\n                            </div>\r\n                         </div>\r\n                            <div class="col-md-3">\r\n                                <div class="card" style="margin-top: 20px;">\r\n                                    <div class="card-header" style="padding: 10px 12px;">\r\n                                        <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure</h5>\r\n                                    </div>\r\n                                    <div class="card-body" style="padding: 4px 12px 6px;">\r\n                                        <div class="form-group" style="margin-bottom: 2px;margin-top: 5px;">\r\n                                            \x3c!-- <label>Company</label> --\x3e\r\n                                            <input class="form-control" type="text" name="companyName" [(ngModel)]="headerManagementStructure.level1" disabled>\r\n                                        </div>\r\n                                        <div class="form-group" style="margin-bottom: 2px;margin-top: 7px;">\r\n                                            \x3c!-- <label>BU</label> --\x3e\r\n                                            <input class="form-control" type="text" name="BUName" [(ngModel)]="headerManagementStructure.level2" disabled>\r\n                                        </div>\r\n                                        <div class="form-group" style="margin-bottom: 2px;margin-top: 7px;">\r\n                                            \x3c!-- <label>Division</label> --\x3e\r\n                                            <input class="form-control" type="text" name="divisionName" [(ngModel)]="headerManagementStructure.level3" disabled>\r\n                                        </div>\r\n                                        <div class="form-group" style="margin-bottom: 2px;margin-top: 7px;">\r\n                                            \x3c!-- <label>Dept</label> --\x3e\r\n                                            <input class="form-control" type="text" name="deptName" [(ngModel)]="headerManagementStructure.level4" disabled>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                </form>\r\n            </div>\r\n         \x3c!-- </div> --\x3e\r\n    </div>\r\n\r\n    <div class="card new-card">\r\n        <div class="card-body">\r\n    <div class="table-responsive pas-table-cstm header-table-width poro-table-cstm parts-list-table-align parts-zindex" >\r\n        <div class="tableFixHead">\r\n            <table class="table table-bordered " id="po-table">\r\n                <thead>\r\n                    <tr>\r\n                        \x3c!-- <th colspan="2" style="text-align: left;">\r\n                            <a href="javascript:void(0);" matTooltip="Edit" matTooltipPosition="above" class="btn boxed-float-btn nobg edit" style="padding-bottom:0; color:#fff;"><i class="fa fa-edit" (click)="editPart(part)"></i></a>\r\n                        </th> --\x3e\r\n                        <th colspan="2"></th>\r\n                        <th>Item Num</th>\r\n                        <th>PN</th>\r\n                        <th>Alt PN</th>\r\n                        <th>PN Description</th>\r\n                        <th>Manufacturer</th>\r\n                        <th>Cond</th>\r\n                        <th>UOM</th>\r\n                        <th>Stock Type</th>\r\n                        <th>Qty Ord</th>\r\n                        <th>Discount</th>\r\n                        <th>Unit Cost</th>\r\n                        <th>Extended Cost</th>\r\n                        <th>WO</th>\r\n                        <th>SO</th>\r\n                        <th>Sub-WO</th>\r\n                        <th colspan="4" style="text-align: center;">Management Structure</th>\r\n                        \x3c!-- <th colspan="7"></th> --\x3e\r\n                        <th>Site</th>\r\n                        <th>Warehouse</th>\r\n                        <th>Location</th>\r\n                        <th>Shelf</th>\r\n                        <th>Bin</th>\r\n                        <th colspan="49"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf="purchaseOrderData != undefined && purchaseOrderData.purchaseOderPart != undefined">\r\n                    <ng-container *ngFor="let part of purchaseOrderData.purchaseOderPart;let row_index=index">\r\n                        <tr class="table-parent-data" *ngIf="part.stockLine != null && part.stockLine.length > 0" class="parent-data">                            \r\n                            <td colspan="2"><a matTooltip="Edit" matTooltipPosition="above" class="btn boxed-float-btn nobg edit"><i class="fa fa-edit" (click)="editPart(part)"></i></a></td>                            \r\n                            <td class="text-right">{{row_index + 1}}</td>\r\n                            <td>{{part.itemMaster.partNumber}}</td>\r\n                            <td>{{part.altEquiPartNumber}}</td>\r\n                            <td>{{part.itemMaster.partDescription}}</td>\r\n                            <td>{{part.itemMaster.manufacturer?.name}}</td>\r\n                            <td>\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.conditionId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="conditionChange(part)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let condition of ConditionList" [value]="condition.Key">{{condition.Value}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>{{part.uomText}}</td>\r\n                            <td>{{part.itemMaster.pma ? "PMA," : \'\' + part.itemMaster.der ? "DER" : \'\'}}</td>\r\n                            <td class="text-right">{{part.quantityOrdered}}</td>\r\n                            <td class="text-right">{{part.DiscountPerUnit}}</td>\r\n                            <td>\r\n                                <input type="text" class="form-control text-right" pInputText pKeyFilter="pnum"\r\n                                       (focusout)="calculatePartExtendedCost(part)"\r\n                                       [disabled]="!part.isEnabled"\r\n                                       [(ngModel)]="part.unitCost">\r\n                            </td>\r\n                            <td>\r\n                                <input class="form-control text-right" type="text" disabled pInputText pKeyFilter="pnum"\r\n                                       [(ngModel)]="part.extendedCost" [disabled]="true">\r\n\r\n                            </td>\r\n                            <td>\r\n                                \x3c!-- <input type="text" class="form-control" value="Pending" [disabled]="true"> --\x3e\r\n                            </td>\r\n                            <td>\r\n                                \x3c!-- <input type="text" class="form-control" value="Pending" [disabled]="true"> --\x3e\r\n                            </td>\r\n                            <td>\r\n                                \x3c!-- <input type="text" class="form-control" value="Pending" [disabled]="true"> --\x3e\r\n                            </td>\r\n                            <td>\r\n                                \x3c!-- <label style="width:90px;">Company:</label> --\x3e\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.companyId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        (change)="getPartBUList(part)"\r\n                                        [disabled]="!part.isEnabled">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let company of part.CompanyList" [value]="company.value">{{company.label}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                \x3c!-- <label style="width:90px;">BU:</label> --\x3e\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.businessUnitId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="getPartDiviList(part)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let businessUnit of part.BusinessUnitList" [value]="businessUnit.value">{{businessUnit.label}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                \x3c!-- <label style="width:90px;">Division:</label> --\x3e\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.divisionId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="getPartDeptList(part)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let division of part.DivisionList" [value]="division.value">{{division.label}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                \x3c!-- <label style="width:90px;">Dept:</label> --\x3e\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.departmentId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="onSelectPartDept(part)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let department of part.DepartmentList" [value]="department.value">{{department.label}}</option>\r\n                                </select>\r\n                            </td>\r\n                            \x3c!-- <td colspan="6"></td> --\x3e\r\n                            <td>\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.siteId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="getPartWareHouse(part, true)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let site of part.SiteList" [value]="site.Key">{{site.Value}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.warehouseId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="getPartLocation(part, true)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let warehouse of part.WareHouseList" [value]="warehouse.Key">{{warehouse.Value}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.locationId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="getPartShelf(part, true)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let loc of part.LocationList" [value]="loc.Key">{{loc.Value}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.shelfId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="getPartBin(part, true)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let shelf of part.ShelfList" [value]="shelf.Key">{{shelf.Value}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.binId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="setPartBinIdToStockline(part)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let bin of part.BinList" [value]="bin.Key">{{bin.Value}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <th colspan="49"></th>\r\n                        </tr>\r\n\r\n                        <ng-container>\r\n                            <tr class="child-header splitship-head child-header-back" *ngIf="part.stockLine.length > 0"> \x3c!--part.stockLine != null--\x3e\r\n                                <th colspan="2"></th>\r\n                                \x3c!--<th>Stock Line</th>--\x3e\r\n                                <th>PN</th>\r\n                                <th>PN Description</th>\r\n                                <th>Ctrl Id</th>\r\n                                <th>Ctrl Num</th>\r\n                                <th>Cond</th>\r\n                                <th>Serial Num</th>\r\n                                <th>Qty Received</th>\r\n                                <th>Back Ord</th>\r\n                                <th>Receiver No.</th>\r\n                                <th>Unit Cost <span class="clr-red"></span></th>\r\n                                <th>Extended Cost</th>\r\n                                <th>WO </th>\r\n                                <th>SO </th>\r\n                                <th>Sub-WO </th>\r\n                                <th colspan="4" style="text-align: center;">Management Structure</th>\r\n                                <th>Owner Type</th>\r\n                                <th>Owner</th>\r\n                                <th>Obtain From Type</th>\r\n                                <th>Obtain From</th>\r\n                                <th>Traceable To Type</th>\r\n                                <th>Traceable To</th>\r\n                                <th>Site</th>\r\n                                <th>Warehouse</th>\r\n                                <th>Location</th>\r\n                                <th>Shelf</th>\r\n                                <th>Bin</th>\r\n                                <th>Trace</th>\r\n                                <th>Mfg</th>\r\n                                <th>Mfg Lot Num</th>\r\n                                <th>Mfg Date</th>\r\n                                <th>Mfg Batch Num</th>\r\n                                <th>Part Cert Num </th>\r\n                                <th>Certified Date</th>\r\n                                <th class="date">Certified Due Date</th>\r\n                                <th>Tagged By </th>\r\n                                <th class="date">Date Tagged </th>\r\n                                <th class="date">Tag Exp Date </th>\r\n                                <th>Shipping Ref#/AWB</th>\r\n                                <th>Ship Via</th>\r\n                                <th>Shipping Account</th>\r\n                                <th>ESN</th>\r\n                                \x3c!-- <th class="date">Core Due Date</th>\r\n                                <th class="date"> Core Returned Date</th> --\x3e\r\n                                <th>GL Account</th>\r\n                                <th>Time Life</th>\r\n                                <th colspan="5">Cycles</th>\r\n                                <th colspan="5">Time</th>\r\n                                <th colspan="5">Last</th>\r\n                            </tr>\r\n                            <ng-container *ngFor="let SL of part.stockLine;let stockline_row_index=index">\r\n                                <tr *ngIf="!SL.isDeleted">\r\n                                    <td><a href="javascript:void(0);" class="btn boxed-float-btn nobg edit" matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-edit" (click)="editStockLine(SL)"></i></a></td>\r\n                                    <td><a class="btn nobg btn-delete-cstm"\r\n                                        (click)="deleteStockLine(SL)" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a></td>\r\n                                    \x3c!--<td>{{SL.stockLineNumber}}</td>--\x3e\r\n                                    <td>{{part.itemMaster.partNumber}}</td>\r\n                                    <td>{{part.itemMaster.partDescription}}</td>\r\n                                    <td>{{SL.idNumber}}</td>\r\n                                    <td>{{SL.controlNumber}}</td>\r\n                                    <td>\r\n                                        <select class="form-control"\r\n                                                [(ngModel)]="SL.conditionId"\r\n                                                #selects="ngModel"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                [disabled]="!SL.isEnabled">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let condition of ConditionList" [value]="condition.Key">{{condition.Value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>{{SL.serialNumber}}</td>\r\n                                    <td class="text-right">{{SL.quantity}}</td>\r\n                                    <td class="text-right">{{part.quantityBackOrdered}}</td>\r\n                                    <td>{{SL.ReceiverNumber}}</td>\r\n                                    <td>\r\n                                        <input type="text" class="form-control text-right" pInputText pKeyFilter="pnum"\r\n                                               (focusout)="calculateExtendedCost(part, SL)"\r\n                                               [disabled]="!SL.isEnabled"\r\n                                               [(ngModel)]="SL.purchaseOrderUnitCost" />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control text-right" type="text" pInputText pKeyFilter="pnum"\r\n                                               [(ngModel)]="SL.purchaseOrderExtendedCost"\r\n                                               disabled="disabled" />\r\n                                    </td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td>\r\n                                        \x3c!-- <label style="width:90px;">Company:</label> --\x3e\r\n                                        <select class="form-control"\r\n                                                [(ngModel)]="SL.companyId"\r\n                                                #selects="ngModel"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                (change)="getStockLineBUList(SL, SL.companyId)"\r\n                                                [disabled]="!SL.isEnabled">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let company of SL.CompanyList" [value]="company.value">{{company.label}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        \x3c!-- <label style="width:90px;">BU:</label> --\x3e\r\n                                        <select class="form-control"\r\n                                                [(ngModel)]="SL.businessUnitId"\r\n                                                #selects="ngModel"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                (change)="getStockLineDiviList(SL, SL.businessUnitId)">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let businessUnit of SL.BusinessUnitList" [value]="businessUnit.value">{{businessUnit.label}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        \x3c!-- <label style="width:90px;">Division:</label> --\x3e\r\n                                        <select class="form-control"\r\n                                                [(ngModel)]="SL.divisionId"\r\n                                                #selects="ngModel"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                (change)="getStockLineDeptList(SL, SL.divisionId)">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let division of SL.DivisionList" [value]="division.value">{{division.label}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        \x3c!-- <label style="width:90px;">Dept:</label> --\x3e\r\n                                        <select class="form-control"\r\n                                                [(ngModel)]="SL.departmentId"\r\n                                                #selects="ngModel"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                (change)="onSelectStockLineDept(SL, SL.departmentId)">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let department of SL.DepartmentList" [value]="department.value">{{department.label}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control" [disabled]="!SL.isEnabled" (change)="onOwnerChange($event, SL)" [(ngModel)]="SL.ownerType">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">{{item.moduleName}}</option>\r\n                                            \x3c!-- <option value="1">Customer</option>\r\n                                            <option value="2">Vendor</option>\r\n                                            <option value="3">Company</option>\r\n                                            <option value="4">Other</option> --\x3e\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="form-group" *ngIf="SL.ownerType != undefined && SL.ownerType > 0">\r\n                                            <div class="form-row">\r\n                                                <div class="col-sm-11">\r\n\r\n                                                    <p-autoComplete *ngIf="SL.ownerType == 1"\r\n                                                                    [(ngModel)]="SL.ownerObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.ownerType)"\r\n                                                                    (onSelect)="onOwnerSelect(SL)"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n\r\n                                                    </p-autoComplete>\r\n\r\n                                                    <p-autoComplete *ngIf="SL.ownerType == 2"\r\n                                                                    [(ngModel)]="SL.ownerObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.ownerType)"\r\n                                                                    (onSelect)="onOwnerSelect(SL)"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n\r\n                                                    </p-autoComplete>\r\n\r\n                                                    <p-autoComplete *ngIf="SL.ownerType == 9"\r\n                                                                    [(ngModel)]="SL.ownerObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.ownerType)"\r\n                                                                    (onSelect)="onOwnerSelect(SL)"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n                                                    </p-autoComplete>\r\n\r\n                                                    <input *ngIf="SL.ownerType == 4"\r\n                                                           class="form-control"\r\n                                                           type="text"\r\n                                                           [ngModelOptions]="{standalone: true}"\r\n                                                           [disabled]="!SL.isEnabled"\r\n                                                           [(ngModel)]="SL.owner"\r\n                                                           pInputText>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control"\r\n                                                [(ngModel)]="SL.obtainFromType"\r\n                                                #selects="ngModel"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                (change)="onObtainFromChange($event, SL)">\r\n                                                <option value="0">Select</option>\r\n                                                <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">{{item.moduleName}}</option>\r\n                                                \x3c!-- <option value="1">Customer</option>\r\n                                                <option value="2">Vendor</option>\r\n                                                <option value="3">Company</option>\r\n                                                <option value="4">Other</option> --\x3e\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="form-group" *ngIf="SL.obtainFromType != undefined && SL.obtainFromType > 0">\r\n                                            <div class="form-row">\r\n                                                <div class="col-sm-11">\r\n\r\n                                                    <p-autoComplete *ngIf="SL.obtainFromType == 1"\r\n                                                                    [(ngModel)]="SL.obtainFromObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.obtainFromType)"\r\n                                                                    (onSelect)="onObtainSelect(SL)"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n\r\n                                                    </p-autoComplete>\r\n\r\n                                                    <p-autoComplete *ngIf="SL.obtainFromType == 2"\r\n                                                                    [(ngModel)]="SL.obtainFromObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.obtainFromType)"\r\n                                                                    (onSelect)="onObtainSelect(SL)"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n\r\n                                                    </p-autoComplete>\r\n\r\n                                                    <p-autoComplete *ngIf="SL.obtainFromType == 9"\r\n                                                                    [(ngModel)]="SL.obtainFromObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.obtainFromType)"\r\n                                                                    (onSelect)="onObtainSelect(SL)"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n                                                    </p-autoComplete>\r\n\r\n                                                    <input *ngIf="SL.obtainFromType == 4"\r\n                                                           class="form-control"\r\n                                                           type="text"\r\n                                                           [disabled]="!SL.isEnabled"\r\n                                                           [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="SL.obtainFrom"\r\n                                                           pInputText>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control" [disabled]="!SL.isEnabled" (change)="onTraceableToChange($event, SL)" [(ngModel)]="SL.traceableToType">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">{{item.moduleName}}</option>\r\n                                            \x3c!-- <option value="1">Customer</option>\r\n                                            <option value="2">Vendor</option>\r\n                                            <option value="3">Company</option>\r\n                                            <option value="4">Other</option> --\x3e\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="form-group" *ngIf="SL.traceableToType != undefined && SL.traceableToType > 0">\r\n                                            <div class="form-row">\r\n                                                <div class="col-sm-11">\r\n\r\n                                                    <p-autoComplete *ngIf="SL.traceableToType == 1"\r\n                                                                    [(ngModel)]="SL.traceableToObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.traceableToType)"\r\n                                                                    (onSelect)="onTraceableToSelect(SL)"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n\r\n                                                    </p-autoComplete>\r\n\r\n                                                    <p-autoComplete *ngIf="SL.traceableToType == 2"\r\n                                                                    [(ngModel)]="SL.traceableToObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.traceableToType)"\r\n                                                                    (onSelect)="onTraceableToSelect(SL)"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n\r\n                                                    </p-autoComplete>\r\n\r\n                                                    <p-autoComplete *ngIf="SL.traceableToType == 9"\r\n                                                                    [(ngModel)]="SL.traceableToObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.traceableToType)"\r\n                                                                    (onSelect)="onTraceableToSelect(SL)"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n                                                    </p-autoComplete>\r\n\r\n                                                    <input *ngIf="SL.traceableToType == 4"\r\n                                                           class="form-control"\r\n                                                           type="text"\r\n                                                           [disabled]="!SL.isEnabled"\r\n                                                           [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="SL.traceableTo"\r\n                                                           pInputText>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control"\r\n                                                [(ngModel)]="SL.siteId"\r\n                                                #selects="ngModel"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                (change)="getStockLineWareHouse(SL, false)">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let site of SL.SiteList" [value]="site.Key">{{site.Value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control"\r\n                                                [(ngModel)]="SL.warehouseId"\r\n                                                #selects="ngModel"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                (change)="getStockLineLocation(SL, false)">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let warehouse of SL.WareHouseList" [value]="warehouse.Key">{{warehouse.Value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control"\r\n                                                [(ngModel)]="SL.locationId"\r\n                                                #selects="ngModel"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                (change)="getStockLineShelf(SL, false)">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let loc of SL.LocationList" [value]="loc.Key">{{loc.Value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control"\r\n                                                [(ngModel)]="SL.shelfId"\r\n                                                #selects="ngModel"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                (change)="getStockLineBin(SL, false)">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let shelf of SL.ShelfList" [value]="shelf.Key">{{shelf.Value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control"\r\n                                                [(ngModel)]="SL.binId"\r\n                                                #selects="ngModel"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                [ngModelOptions]="{standalone: true}">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let bin of SL.BinList" [value]="bin.Key">{{bin.Value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control" type="text"\r\n                                               [disabled]="!SL.isEnabled"\r\n                                               [(ngModel)]="SL.manufacturingTrace"\r\n                                               pInputText [maxLength]="200">\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control"\r\n                                                [(ngModel)]="SL.manufacturerId"\r\n                                                disabled>\r\n                                            <option [value]="0">Select</option>\r\n                                            <option [value]="manufacturer.Key" *ngFor="let manufacturer of ManufacturerList">{{manufacturer.Value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control"\r\n                                               [(ngModel)]="SL.manufacturerLotNumber"\r\n                                               type="text"\r\n                                               [disabled]="!SL.isEnabled"\r\n                                               pInputText [maxLength]="200">\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [(ngModel)]="SL.manufacturingDate"\r\n                                                    [showIcon]="true"></p-calendar>\r\n\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control"\r\n                                               [disabled]="!SL.isEnabled"\r\n                                               [(ngModel)]="SL.manufacturingBatchNumber"\r\n                                               type="text" pInputText\r\n                                               [maxLength]="200">\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control"\r\n                                               type="text" pInputText\r\n                                               [disabled]="!SL.isEnabled"\r\n                                               [(ngModel)]="SL.partCertificationNumber"\r\n                                               [maxLength]="200">\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [maxDate]="currentDate"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [showIcon]="true"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.certifiedDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [maxDate]="currentDate"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [showIcon]="true"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.certifiedDueDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control"\r\n                                               [(ngModel)]="SL.certifiedBy"\r\n                                               type="text" pInputText\r\n                                               [disabled]="!SL.isEnabled"\r\n                                               [maxLength]="200">\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [maxDate]="currentDate"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [showIcon]="true"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.tagDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [showIcon]="true"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.expirationDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control" type="text" [disabled]="!SL.isEnabled" [(ngModel)]="SL.shippingReference" pInputText [maxLength]="200">\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control" required [(ngModel)]="SL.shippingViaId" [disabled]="!SL.isEnabled">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let shippingVia of ShippingViaList" [value]="shippingVia.Key">{{shippingVia.Value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control" type="text" [disabled]="!SL.isEnabled" [(ngModel)]="SL.shippingAccount" pInputText [maxLength]="200">\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control" type="text" [disabled]="!SL.isEnabled" [(ngModel)]="SL.engineSerialNumber" pInputText [maxLength]="200">\r\n                                    </td>\r\n                                    \x3c!-- <td>\r\n                                        <input type="text" class="form-control" disabled value="unknown field" />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="text" class="form-control" disabled value="unknown field" />\r\n                                    </td> --\x3e\r\n                                    <td>{{SL.glAccountText}}</td>\r\n                                    <td>\r\n                                        <input type="checkbox" disabled [checked]="part.timeLife[stockline_row_index].stockLineDraftId > 0" /> \x3c!--part.itemMaster.isTimeLife != false--\x3e\r\n                                    </td>\r\n                                    <td colspan="13" *ngIf="!(part.timeLife[stockline_row_index].stockLineDraftId > 0)">\r\n\r\n                                    </td>\r\n                                    <ng-container *ngIf="part.timeLife[stockline_row_index].stockLineDraftId > 0"> \x3c!--part.itemMaster.isTimeLife == true--\x3e\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesRemainingHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesRemainingMin" (change)="onChangeTimeLifeMin(\'cyclesRemainingMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesSinceNewHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesSinceNewMin" (change)="onChangeTimeLifeMin(\'cyclesSinceNewMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesSinceOVHHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesSinceOVHMin" (change)="onChangeTimeLifeMin(\'cyclesSinceOVHMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesSinceInspectionHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesSinceInspectionMin" (change)="onChangeTimeLifeMin(\'cyclesSinceInspectionMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesSinceRepairHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesSinceRepairMin" (change)="onChangeTimeLifeMin(\'cyclesSinceRepairMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeRemainingHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeRemainingMin" (change)="onChangeTimeLifeMin(\'timeRemainingMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeSinceNewHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeSinceNewMin" (change)="onChangeTimeLifeMin(\'timeSinceNewMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeSinceOVHHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeSinceOVHMin" (change)="onChangeTimeLifeMin(\'timeSinceOVHMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeSinceInspectionHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeSinceInspectionMin" (change)="onChangeTimeLifeMin(\'timeSinceInspectionMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeSinceRepairHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeSinceRepairMin" (change)="onChangeTimeLifeMin(\'timeSinceRepairMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].lastSinceNewHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].lastSinceNewMin" (change)="onChangeTimeLifeMin(\'lastSinceNewMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].lastSinceOVHHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].lastSinceOVHMin" (change)="onChangeTimeLifeMin(\'lastSinceOVHMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].lastSinceInspectionHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].lastSinceInspectionMin" (change)="onChangeTimeLifeMin(\'lastSinceInspectionMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n                                    </ng-container>\r\n                                </tr>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                        </ng-container>\r\n\r\n                </tbody>\r\n                <tbody *ngIf="!isPOStockline">\r\n                    <tr>\r\n                        <td colspan="50" style="color: red; font-weight: bold; text-align: center; padding: 5px;">\r\n                          No records found\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n\r\n        <button class="btn btn-primary pull-right" (click)="updateStockLine()">Submit</button>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="add-notes" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Edit Notes</h4>\r\n            </div>\r\n\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                    <th style="color: #fff;">Notes</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <p-editor [(ngModel)]="headerNotes" [style]="{\'height\':\'320px\'}"\r\n                                           name="headerNotes" required></p-editor>\r\n                                \x3c!-- <textarea [(ngModel)] = "material.description"></textarea> --\x3e\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class="editor-buttons">  \r\n                    <button type="button"  class="btn btn-primary editor-buttons-margin"\r\n                            data-dismiss="modal" (click)="onSaveNotes()">\r\n                        Save\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger editor-buttons-margin"\r\n                            data-dismiss="modal">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="cpo-memo" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Edit Memo</h4>\r\n            </div>\r\n\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                    <th style="color: #fff;">Memo</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <p-editor [(ngModel)]="headerMemo" [style]="{\'height\':\'320px\'}" name="headerMemo" required></p-editor>\r\n                                \x3c!-- <textarea [(ngModel)] = "material.description"></textarea> --\x3e\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class="editor-buttons">\r\n                    <button type="button" class="btn btn-primary editor-buttons-margin" \r\n                            data-dismiss="modal" (click)="onSaveMemo()">\r\n                        Save\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger editor-buttons-margin"\r\n                            data-dismiss="modal">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            \x3c!-- <div class="modal-body">\r\n                <div class="form-group">\r\n                    <label>Memo</label>\r\n                    <textarea class="form-control" name="tempMemo" [(ngModel)]="tempMemo" value={{tempMemo}}></textarea>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="onSaveMemo()">Save</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div> --\x3e\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},Cqyt:function(e,t,n){"use strict";n.r(t),t.default=""},D4xI:function(e,t,n){"use strict";n.r(t),t.default="<router-outlet></router-outlet>"},DUoY:function(e,t,n){"use strict";n.r(t),t.default='.x_panel {\n  border: none;\n}\n\n.rpo-bcrumb {\n  background-color: transparent;\n  color: #295d92;\n}\n\n.rpo-bcrumb li {\n  font-family: "Roboto";\n  font-weight: bold;\n}\n\n.roview-table-cstm table.table-bordered thead tr th {\n  min-width: 60px !important;\n}\n\ninput.hidePlaceHolder {\n  color: transparent !important;\n}\n\ninput.hidePlaceHolder:focus,\ninput.hidePlaceHolder:hover,\ninput.hidePlaceHolder:active {\n  color: #000 !important;\n}\n\n.status-radio label {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}'},Dj76:function(e,t,n){"use strict";n.r(t),t.default='.x_panel {\n  border: none;\n}\n\n.rpo-bcrumb {\n  background-color: transparent;\n  color: #295d92;\n}\n\n.rpo-bcrumb li {\n  font-family: "Roboto";\n  font-weight: bold;\n}\n\n.align_center {\n  text-align: center;\n}\n\n.roview-table-cstm table.table-bordered thead tr th {\n  min-width: 60px !important;\n}\n\ninput.hidePlaceHolder {\n  color: transparent !important;\n}\n\ninput.hidePlaceHolder:focus,\ninput.hidePlaceHolder:hover,\ninput.hidePlaceHolder:active {\n  color: #000 !important;\n}\n\n.status-radio label {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}\n\n.red {\n  color: #ED2939 !important;\n  font-weight: bold !important;\n}\n\ninput.hidePlaceHolder {\n  color: transparent !important;\n}\n\n.child-data splitship-child td {\n  background: #fafafa !important;\n}\n\n.roview-table-cstm .child-data td {\n  background: #fafafa !important;\n}\n\n#poView .modal-body p .label {\n  width: 40% !important;\n}\n\n#poView .modal-body p .value {\n  width: 60% !important;\n}\n\n.roview-table-cstm table.table-bordered thead tr th {\n  min-width: 70px !important;\n}\n\n.host ::ng-deep .ui-table-scrollable-header .ui-widget-header {\n  width: 100% !important;\n  overflow: scroll !important;\n}\n\n.table-child-header-mgmt {\n  min-width: 300px !important;\n}\n\n.check-box-back {\n  background-color: #fff !important;\n}\n\n.history-body {\n  overflow-y: scroll;\n}\n\n.address-memo-view {\n  vertical-align: top;\n}\n\n.approver-parent-checkbox {\n  min-width: 90px;\n  align-items: center;\n}\n\n.approver-memo {\n  float: left !important;\n}\n\n.approver-total-cost {\n  text-align: right !important;\n}\n\n.mgmt-sructure-td-width {\n  min-width: 300px !important;\n}'},EDmY:function(e,t,n){"use strict";n.r(t),t.default='<div class="x_panel">\r\n    <div class="x_content">\r\n        <div class="card new-card" *ngIf="repairOrderHeaderData">\r\n            <div class="card-header header">\r\n                \x3c!-- <nav class="pull-left" aria-label="breadcrumb">\r\n                    <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n                        <li class="breadcrumb-item active" aria-current="page">Receiving</li>\r\n                        \r\n                        <li class="breadcrumb-item " aria-current="page">Receiving RO Grid</li>\r\n                    </ol>\r\n                </nav> --\x3e\r\n                 <div class="row">\r\n                    <div class="col">\r\n                        <h4 class="header-name">Reviewing RO Receipt\r\n                <button class="btn-sm header-button header-button-alignment" (click)="toggle_epo_header=!toggle_epo_header">\r\n                    {{toggle_epo_header ? \'Collapse\' : \'Expand\'}}\r\n                </button>\r\n                </h4>\r\n            </div>\r\n            <div>\r\n                <button\r\n                    type="button"\r\n                    class="btn-sm header-button pull-right"\r\n                    [routerLink]="[\'/receivingmodule/receivingpages/app-ro\']">\r\n                    Receiving RO\r\n                </button>\r\n            </div>\r\n          </div>\r\n     </div>\r\n    <div class="card-body">           \r\n                \x3c!-- <h4 class="po-head">Reviewing RO Receipt</h4> --\x3e\r\n                <form id="" class="ro-grid-form" name="">\r\n\r\n                    <div class="form-row">\r\n                        <div class="col-md-8 ro-status-radios">\r\n                            <div class="form-group">\r\n                                <label style="float:left; width:auto; margin-right:20px; padding-top:3px;">Status:</label>\r\n                                <div>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;" *ngFor="let status of roStatus">\r\n                                        <label class="radio-cstm radio-cstm-d wauto">\r\n                                            <input type="radio" [checked]="status.value == repairOrderHeaderData.statusId" name="roStatus" class="form-control" value="{{status.value}}" disabled>\r\n                                            <span class="checkmark"></span>\r\n                                            {{status.label}}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-9">\r\n                        <div class="form-row">\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>RO Num</label>\r\n                                    <input class="form-control" type="text" name="repairOrderNum" [(ngModel)]="repairOrderHeaderData.repairOrderNumber" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>Vendor Name</label>\r\n                                    <input class="form-control" type="text" name="vendorName" [(ngModel)]="repairOrderHeaderData.vendorName" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>Requisitioner</label>\r\n                                    <input class="form-control" type="text" name="requestedBy" [(ngModel)]="repairOrderHeaderData.requestedBy" disabled>\r\n                                </div>\r\n                            </div>\r\n                            \x3c!-- <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>Approver</label>\r\n                                    <input class="form-control" type="text" name="approver" [(ngModel)]="repairOrderHeaderData.approver" disabled>\r\n                                </div>\r\n                            </div> --\x3e\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <hr *ngIf="toggle_epo_header"/>\r\n                    \r\n                    <div class="form-row" *ngIf="toggle_epo_header">\r\n                        <div class="col-md-9">\r\n                        <div class="form-row">\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>Open Date</label>\r\n                                    <p-calendar class="pas-clder" [showIcon]="true" name="openDate" [(ngModel)]="repairOrderHeaderData.openDate" [disabled]="true"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Closed/Cancelled Date</label>\r\n                                    <p-calendar class="pas-clder" [showIcon]="true" name="closedDate" [(ngModel)]="repairOrderHeaderData.closedDate" [disabled]="true"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Need By</label>\r\n                                    <p-calendar class="pas-clder" [showIcon]="true" name="needByDate" [(ngModel)]="repairOrderHeaderData.needByDate" [disabled]="true"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Priority</label>\r\n                                    <input class="form-control" type="text" name="priority" [(ngModel)]="repairOrderHeaderData.priority" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>Vendor Code</label>\r\n                                    <input class="form-control" type="text" name="vendorCode" [(ngModel)]="repairOrderHeaderData.vendorCode" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Vendor Contact</label>\r\n                                    <input class="form-control" type="text" name="vendorContact" [(ngModel)]="repairOrderHeaderData.vendorContact" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Contact Phone</label>\r\n                                    <input class="form-control" type="text" name="contactPhone" [(ngModel)]="repairOrderHeaderData.vendorPhone" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Credit Limit &amp; Terms</label>\r\n                                    <div class="form-row">\r\n                                        <div class="col-sm-5">\r\n                                            <input class="form-control" type="text" name="creditLimit" [(ngModel)]="repairOrderHeaderData.creditLimit" disabled>\r\n                                        </div>\r\n                                        <div class="col-sm-7">\r\n                                            <input class="form-control" type="text" name="creditTerms" [(ngModel)]="repairOrderHeaderData.terms" disabled>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class="col-md-4">                                \r\n                                \x3c!-- <div class="form-group">\r\n                                    <label>Approved Date</label>\r\n                                    <p-calendar class="pas-clder" [showIcon]="true" name="approvedDate" [(ngModel)]="repairOrderHeaderData.dateApproved" [disabled]="true"></p-calendar>\r\n                                </div> --\x3e\r\n                               \r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm" style="margin-top: 15px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="resale" class="form-control" [(ngModel)]="repairOrderHeaderData.resale" disabled>\r\n                                            <span class="cr" style="opacity: 0.6;"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Resale\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="deferredReceiver" [(ngModel)]="repairOrderHeaderData.deferredReceiver" disabled>\r\n                                            <span class="cr" style="opacity: 0.6;"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Deferred Receiver\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-4">\r\n                            <div class="form-group memo-popup-cstm">\r\n                                <label>Notes\r\n                                    <span class="editor-span"\r\n                                    ><a\r\n                                      class="btn nobg"\r\n                                      data-toggle="modal"\r\n                                      data-target="#add-notes"\r\n                                      (click)="onAddNotes()"\r\n                                      matTooltipPosition="above" matTooltip="Notes"\r\n                                      ><i class="fa fa-pencil" ></i\r\n                                    ></a>\r\n                                    </span>\r\n                                </label>\r\n                                    \x3c!-- <textarea name="ponotes" class="form-control head-notes" rows="2" \r\n                                    [(ngModel)]="repairOrderHeaderData.notes" disabled></textarea> --\x3e\r\n                                    <span>\r\n                                        <div [innerHTML]="repairOrderHeaderData.notes"\r\n                                        [matTooltip]="parsedText(repairOrderHeaderData.notes)"\r\n                                        matTooltipPosition="above"\r\n                                         class="form-control text-editor-field"\r\n                                            class="text_editor_box text-editor-width">\r\n                                        </div>\r\n                                    \r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-4">\r\n                   \r\n                            \x3c!-- <div class="form-group">\r\n                                <label>Approver</label>\r\n                                <input class="form-control" type="text" name="approver" [(ngModel)]="repairOrderHeaderData.approver" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Approved Date</label>\r\n                                <p-calendar class="pas-clder" [showIcon]="true" name="approvedDate" [(ngModel)]="repairOrderHeaderData.dateApproved" [disabled]="true"></p-calendar>\r\n                            </div> --\x3e\r\n                            <div class="form-group memo-popup-cstm">\r\n                                    <label>Memo \r\n                                         \x3c!-- <i class="fa fa-info-circle fa-lg"  \r\n                                          matTooltipPosition="above"\r\n                                           matTooltip="{{repairOrderHeaderData.memo}}"></i> --\x3e\r\n                                           <span class="editor-span"\r\n                                           ><a\r\n                                             class="btn nobg"\r\n                                             data-toggle="modal"\r\n                                             data-target="#cpo-memo" matTooltipPosition="above" \r\n                                             matTooltip="Add Memo" disabled="true"  (click)="onAddMemo()"\r\n                                             ><i class="fa fa-pencil" ></i\r\n                                           ></a>\r\n                                           </span>\r\n                                       </label>\r\n                            \x3c!-- <span   matTooltipPosition="above" matTooltip="{{repairOrderHeaderData.memo}}">\r\n                                <input type="text" name="memo" pInputText class="form-control" value="{{repairOrderHeaderData.memo}}" disabled />\r\n                            </span> --\x3e\r\n                            <span> <div [innerHTML]="repairOrderHeaderData.memo" \r\n                                [matTooltip]="parsedText(repairOrderHeaderData.memo)"\r\n                                matTooltipPosition="above"\r\n                                 class="form-control " \r\n                                class="text_editor_box text-editor-field" disabled="true"></div> \r\n                                 </span>\r\n                </div>\r\n                \x3c!-- </div> --\x3e\r\n                           \r\n                        </div>\r\n                     </div>\r\n                            <div class="col-md-3">\r\n                                <div class="card" style="margin-top: 20px;">\r\n                                    <div class="card-header" style="padding: 10px 12px;">\r\n                                        <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure</h5>\r\n                                    </div>\r\n                                    <div class="card-body" style="padding: 4px 12px 6px;">\r\n                                        <div class="form-group" style="margin-bottom: 2px;margin-top: 5px;">\r\n                                            \x3c!-- <label>Company</label> --\x3e\r\n                                            <input class="form-control" type="text" name="companyName" [(ngModel)]="headerManagementStructure.level1" disabled>\r\n                                        </div>\r\n                                        <div class="form-group" style="margin-bottom: 2px;margin-top: 7px;">\r\n                                            \x3c!-- <label>BU</label> --\x3e\r\n                                            <input class="form-control" type="text" name="BUName" [(ngModel)]="headerManagementStructure.level2" disabled>\r\n                                        </div>\r\n                                        <div class="form-group" style="margin-bottom: 2px;margin-top: 7px;">\r\n                                            \x3c!-- <label>Division</label> --\x3e\r\n                                            <input class="form-control" type="text" name="divisionName" [(ngModel)]="headerManagementStructure.level3" disabled>\r\n                                        </div>\r\n                                        <div class="form-group" style="margin-bottom: 2px;margin-top: 7px;">\r\n                                            \x3c!-- <label>Dept</label> --\x3e\r\n                                            <input class="form-control" type="text" name="deptName" [(ngModel)]="headerManagementStructure.level4" disabled>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    \r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n        <div class="card new-card">\r\n            <div class="card-body">\r\n        <div class="table-responsive pas-table-cstm header-table-width poro-table-cstm parts-list-table-align parts-zindex" >\r\n            <div class="tableFixHead">\r\n            <table class="table table-bordered " id="po-table">\r\n                <thead>\r\n                    <tr>\r\n                        \x3c!-- <th style="text-align: left;" colspan="2">\r\n                            <a href="javascript:void(0);" matTooltip="Edit" matTooltipPosition="above" class="btn boxed-float-btn nobg edit" style="padding-bottom:0; color:#fff;"><i class="fa fa-edit"></i></a>\r\n                        </th> --\x3e\r\n                        <th class="th-width" colspan="2"></th>\r\n                        <th>Item Num</th>\r\n                        <th>PN</th>\r\n                        <th>Alt PN</th>\r\n                        <th>PN Description</th>\r\n                        <th>Manufacturer</th>\r\n                        <th>Cond</th>\r\n                        <th>UOM</th>\r\n                        <th>Stock Type</th>\r\n                        <th>Qty to Repair</th>\r\n                        <th>Discount</th>\r\n                        <th>Unit Cost</th>\r\n                        <th>Extended Cost</th>\r\n                        <th>WO</th>\r\n                        <th>SO</th>\r\n                        <th>Sub-WO</th>\r\n                        <th colspan="4">Management Structure</th>\r\n                        \x3c!-- <th colspan="6"></th> --\x3e\r\n                        <th>Site</th>\r\n                        <th>Warehouse</th>\r\n                        <th>Location</th>\r\n                        <th>Shelf</th>\r\n                        <th>Bin</th>\r\n                        <th colspan="49"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf="repairOrderData != undefined">\r\n                    <ng-container *ngFor="let part of repairOrderData;let row_index=index">\r\n                        <tr class="table-parent-data" *ngIf="part.stockLine != null && part.stockLine.length > 0" class="parent-data">\r\n                            <td colspan="2"><a matTooltip="Edit" matTooltipPosition="above" class="btn boxed-float-btn nobg edit"><i class="fa fa-edit" (click)="editPart(part)"></i></a></td>\r\n                            <td class="text-right">{{row_index + 1}}</td>\r\n                            <td>{{part.itemMaster.partNumber}}</td>\r\n                            <td>{{part.altEquiPartNumber}}</td>\r\n                            <td>{{part.itemMaster.partDescription}}</td>\r\n                            <td>{{part.itemMaster.manufacturer?.name}}</td>\r\n                            <td>\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.conditionId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="conditionChange(part)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let condition of ConditionList" [value]="condition.Key">{{condition.Value}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>{{part.uomText}}</td>\r\n                            <td>{{part.itemMaster.isPma ? "PMA," : \'\' + part.itemMaster.isDer ? "DER" : \'\'}}</td>\r\n                            <td class="text-right">{{part.quantityToRepair}}</td>\r\n                            <td class="text-right">{{part.discountPerUnit}}</td>\r\n                            <td>\r\n                                <input type="text" class="form-control text-right" pInputText pKeyFilter="pnum"\r\n                                       (focusout)="calculatePartExtendedCost(part);"\r\n                                       [disabled]="!part.isEnabled"\r\n                                       [(ngModel)]="part.unitCost"> \x3c!--SetStockLineUnitCost(part);--\x3e\r\n                            </td>\r\n                            <td>\r\n                                <input class="form-control text-right" type="text" disabled pInputText pKeyFilter="pnum"\r\n                                       [(ngModel)]="part.extendedCost"\r\n                                       [disabled]="true">\r\n\r\n                            </td>\r\n                            <td>\r\n                                \x3c!-- <input type="text" class="form-control" value="Pending" [disabled]="true"> --\x3e\r\n                            </td>\r\n                            <td>\r\n                                \x3c!-- <input type="text" class="form-control" value="Pending" [disabled]="true"> --\x3e\r\n                            </td>\r\n                            <td>\r\n                                \x3c!-- <input type="text" class="form-control" value="Pending" [disabled]="true"> --\x3e\r\n                            </td>\r\n                            <td>\r\n                                \x3c!-- <label style="width:90px;">Company:</label> --\x3e\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.companyId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        (change)="getPartBUList(part)"\r\n                                        [disabled]="!part.isEnabled">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let company of part.CompanyList" [value]="company.value">{{company.label}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                \x3c!-- <label style="width:90px;">BU:</label> --\x3e\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.businessUnitId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="getPartDiviList(part)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let businessUnit of part.BusinessUnitList" [value]="businessUnit.value">{{businessUnit.label}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                \x3c!-- <label style="width:90px;">Division:</label> --\x3e\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.divisionId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="getPartDeptList(part)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let division of part.DivisionList" [value]="division.value">{{division.label}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                \x3c!-- <label style="width:90px;">Dept:</label> --\x3e\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.departmentId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="onSelectPartDept(part)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let department of part.DepartmentList" [value]="department.value">{{department.label}}</option>\r\n                                </select>\r\n                            </td>\r\n                            \x3c!-- <td colspan="6"></td> --\x3e\r\n                            <td>\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.siteId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="getPartWareHouse(part, true)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let site of part.SiteList" [value]="site.Key">{{site.Value}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.warehouseId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="getPartLocation(part, true)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let warehouse of part.WareHouseList" [value]="warehouse.Key">{{warehouse.Value}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.locationId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="getPartShelf(part, true)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let loc of part.LocationList" [value]="loc.Key">{{loc.Value}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.shelfId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="getPartBin(part, true)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let shelf of part.ShelfList" [value]="shelf.Key">{{shelf.Value}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <td>\r\n                                <select class="form-control"\r\n                                        [(ngModel)]="part.binId"\r\n                                        #selects="ngModel"\r\n                                        [ngModelOptions]="{standalone: true}"\r\n                                        [disabled]="!part.isEnabled"\r\n                                        (change)="setPartBinIdToStockline(part)">\r\n                                    <option value="0">Select</option>\r\n                                    <option *ngFor="let bin of part.BinList" [value]="bin.Key">{{bin.Value}}</option>\r\n                                </select>\r\n                            </td>\r\n                            <th colspan="49"></th>\r\n                        </tr>\r\n\r\n                        <ng-container>\r\n                            <tr  class="child-header splitship-head child-header-back" *ngIf="part.stockLine.length > 0">\r\n                                \x3c!--part.stockLine != null--\x3e\r\n                                <th colspan="2"></th>\r\n                                \x3c!--<th>Stock Line</th>--\x3e\r\n                                <th>PN</th>\r\n                                <th>PN Description</th>\r\n                                <th>Ctrl Id</th>\r\n                                <th>Ctrl Num</th>\r\n                                <th>Cond</th>\r\n                                <th>Serial Num</th>\r\n                                <th>Qty Received</th>\r\n                                <th>Back Ord</th>\r\n                                <th>Receiver No.</th>\r\n                                <th>Unit Cost</th>\r\n                                <th>Extended Cost</th>\r\n                                <th>WO </th>\r\n                                <th>SO </th>\r\n                                <th>Sub-WO </th>\r\n                                <th colspan="4">Management Structure</th>\r\n                                <th>Owner Type</th>\r\n                                <th>Owner</th>\r\n                                <th>Obtain From Type</th>\r\n                                <th>Obtain From</th>\r\n                                <th>Traceable To Type</th>\r\n                                <th>Traceable To</th>\r\n                                <th>Site</th>\r\n                                <th>Warehouse</th>\r\n                                <th>Location</th>\r\n                                <th>Shelf</th>\r\n                                <th>Bin</th>\r\n                                <th>Trace</th>\r\n                                <th>Mfg</th>\r\n                                <th>Mfg Lot Num</th>\r\n                                <th>Mfg Date</th>\r\n                                <th>Mfg Batch Num</th>\r\n                                <th>Part Cert Num </th>\r\n                                <th>Certified Date</th>\r\n                                <th class="date">Certified Due Date</th>\r\n                                <th>Tagged By </th>\r\n                                <th class="date">Date Tagged </th>\r\n                                <th class="date">Tag Exp Date </th>\r\n                                <th>Shipping Ref#/AWB</th>\r\n                                <th>Ship Via</th>\r\n                                <th>Shipping Account</th>\r\n                                <th>ESN</th>\r\n                                <th>GL Account</th>\r\n                                <th>Time Life</th>\r\n                                \x3c!-- <ng-container *ngIf="part.timeLife != null && part.timeLife.length > 0 "> --\x3e\r\n                                <th colspan="5">Cycles</th>\r\n                                <th colspan="5">Time</th>\r\n                                <th colspan="5">Last</th>\r\n                                \x3c!-- </ng-container> --\x3e\r\n                            </tr>\r\n                            <ng-container *ngFor="let SL of part.stockLine;let stockline_row_index=index">\r\n                                <tr *ngIf="!SL.isDeleted">\r\n                                    <td><a href="javascript:void(0);" class="btn boxed-float-btn nobg edit" matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-edit" (click)="editStockLine(SL)"></i></a></td>\r\n                                    <td><a class="btn nobg btn-delete-cstm"\r\n                                        (click)="deleteStockLine(SL)" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a></td>\r\n                                    \x3c!--<td>{{SL.stockLineNumber}}</td>--\x3e\r\n                                    <td>{{part.itemMaster.partNumber}}</td>\r\n                                    <td>{{part.itemMaster.partDescription}}</td>\r\n                                    <td>{{SL.idNumber}}</td>\r\n                                    <td>{{SL.controlNumber}}</td>\r\n                                    <td>\r\n                                        <select class="form-control"\r\n                                                [(ngModel)]="SL.conditionId"\r\n                                                #selects="ngModel"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                [disabled]="!SL.isEnabled">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let condition of ConditionList" [value]="condition.Key">{{condition.Value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>{{SL.serialNumber}}</td>\r\n                                    <td class="text-right">{{SL.quantity}}</td>\r\n                                    <td class="text-right">{{part.quantityBackOrdered}}</td>\r\n                                    <td>{{SL.receiverNumber}}</td>\r\n                                    <td>\r\n                                        <input type="text" class="form-control text-right" pInputText pKeyFilter="pnum"\r\n                                               (focusout)="calculateExtendedCost(part, SL)"\r\n                                               [disabled]="!SL.isEnabled"\r\n                                               [(ngModel)]="SL.repairOrderUnitCost" />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control text-right" type="text" pInputText pKeyFilter="pnum"\r\n                                               [(ngModel)]="SL.repairOrderExtendedCost"\r\n                                               disabled="true" />\r\n                                    </td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td>\r\n                                        \x3c!-- <label style="width:90px;">Company:</label> --\x3e\r\n                                        <select class="form-control"\r\n                                                name="companyId{{stockline_row_index}}"\r\n                                                [(ngModel)]="SL.companyId"\r\n                                                #selects="ngModel"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                (change)="getStockLineBUList(SL, SL.companyId)"\r\n                                                [disabled]="!SL.isEnabled">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let company of SL.CompanyList" [value]="company.value">{{company.label}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        \x3c!-- <label style="width:90px;">BU:</label> --\x3e\r\n                                        <select class="form-control"\r\n                                                name="businessUnitId{{stockline_row_index}}"\r\n                                                [(ngModel)]="SL.businessUnitId"\r\n                                                #selects="ngModel"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                (change)="getStockLineDiviList(SL, SL.businessUnitId)">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let businessUnit of SL.BusinessUnitList" [value]="businessUnit.value">{{businessUnit.label}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        \x3c!-- <label style="width:90px;">Division:</label> --\x3e\r\n                                        <select class="form-control"\r\n                                                name="divisionId{{stockline_row_index}}"\r\n                                                [(ngModel)]="SL.divisionId"\r\n                                                #selects="ngModel"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                (change)="getStockLineDeptList(SL, SL.divisionId)">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let division of SL.DivisionList" [value]="division.value">{{division.label}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        \x3c!-- <label style="width:90px;">Dept:</label> --\x3e\r\n                                        <select class="form-control"\r\n                                                name="departmentId{{stockline_row_index}}"\r\n                                                [(ngModel)]="SL.departmentId"\r\n                                                #selects="ngModel"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                (change)="onSelectStockLineDept(SL, SL.departmentId)">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let department of SL.DepartmentList" [value]="department.value">{{department.label}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control" [disabled]="!SL.isEnabled" (change)="onOwnerChange($event, SL)" [(ngModel)]="SL.ownerType">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">{{item.moduleName}}</option>\r\n                                            \x3c!-- <option value="1">Customer</option>\r\n                                            <option value="2">Vendor</option>\r\n                                            <option value="3">Company</option>\r\n                                            <option value="4">Other</option> --\x3e\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="form-group" *ngIf="SL.ownerType != undefined && SL.ownerType > 0">\r\n                                            <div class="form-row">\r\n                                                <div class="col-sm-11">\r\n                                                    <p-autoComplete *ngIf="SL.ownerType == 1"\r\n                                                                    [(ngModel)]="SL.ownerObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.ownerType)"\r\n                                                                    (onSelect)="onOwnerSelect(SL)"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n    \r\n                                                    </p-autoComplete>\r\n    \r\n                                                    <p-autoComplete *ngIf="SL.ownerType == 2"\r\n                                                                    [(ngModel)]="SL.ownerObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.ownerType)"\r\n                                                                    (onSelect)="onOwnerSelect(SL)"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n    \r\n                                                    </p-autoComplete>\r\n    \r\n                                                    <p-autoComplete *ngIf="SL.ownerType == 9"\r\n                                                                    [(ngModel)]="SL.ownerObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.ownerType)"\r\n                                                                    (onSelect)="onOwnerSelect(SL)"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n                                                    </p-autoComplete>\r\n    \r\n                                                    <input *ngIf="SL.ownerType == 4"\r\n                                                           class="form-control"\r\n                                                           type="text"\r\n                                                           [ngModelOptions]="{standalone: true}"\r\n                                                           [disabled]="!SL.isEnabled"\r\n                                                           [(ngModel)]="SL.owner"\r\n                                                           pInputText>\r\n    \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control"\r\n                                                [(ngModel)]="SL.obtainFromType"\r\n                                                #selects="ngModel"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                (change)="onObtainFromChange($event, SL)">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">{{item.moduleName}}</option>\r\n                                            \x3c!-- <option value="1">Customer</option>\r\n                                            <option value="2">Vendor</option>\r\n                                            <option value="3">Company</option>\r\n                                            <option value="4">Other</option> --\x3e\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="form-group" *ngIf="SL.obtainFromType != undefined && SL.obtainFromType > 0">\r\n                                            <div class="form-row">\r\n                                                <div class="col-sm-11">\r\n    \r\n                                                    <p-autoComplete *ngIf="SL.obtainFromType == 1"\r\n                                                                    [(ngModel)]="SL.obtainFromObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.obtainFromType)"\r\n                                                                    (onSelect)="onObtainSelect(SL)"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n    \r\n                                                    </p-autoComplete>\r\n    \r\n                                                    <p-autoComplete *ngIf="SL.obtainFromType == 2"\r\n                                                                    [(ngModel)]="SL.obtainFromObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.obtainFromType)"\r\n                                                                    (onSelect)="onObtainSelect(SL)"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n    \r\n                                                    </p-autoComplete>\r\n                                                    \r\n                                                    <p-autoComplete *ngIf="SL.obtainFromType == 9"\r\n                                                                    [(ngModel)]="SL.obtainFromObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.obtainFromType)"\r\n                                                                    (onSelect)="onObtainSelect(SL)"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n                                                    </p-autoComplete>\r\n    \r\n                                                    <input *ngIf="SL.obtainFromType == 4"\r\n                                                           class="form-control"\r\n                                                           type="text"\r\n                                                           [disabled]="!SL.isEnabled"\r\n                                                           [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="SL.obtainFrom"\r\n                                                           pInputText>\r\n    \r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control" [disabled]="!SL.isEnabled" (change)="onTraceableToChange($event, SL)" [(ngModel)]="SL.traceableToType">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">{{item.moduleName}}</option>\r\n                                            \x3c!-- <option value="1">Customer</option>\r\n                                            <option value="2">Vendor</option>\r\n                                            <option value="3">Company</option>\r\n                                            <option value="4">Other</option> --\x3e\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div class="form-group" *ngIf="SL.traceableToType != undefined && SL.traceableToType > 0">\r\n                                            <div class="form-row">\r\n                                                <div class="col-sm-11">\r\n    \r\n                                                    <p-autoComplete *ngIf="SL.traceableToType == 1"\r\n                                                                    [(ngModel)]="SL.traceableToObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.traceableToType)"\r\n                                                                    (onSelect)="onTraceableToSelect(SL)"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n                                                    </p-autoComplete>\r\n    \r\n                                                    <p-autoComplete *ngIf="SL.traceableToType == 2"\r\n                                                                    [(ngModel)]="SL.traceableToObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.traceableToType)"\r\n                                                                    (onSelect)="onTraceableToSelect(SL)"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n    \r\n                                                    </p-autoComplete>\r\n    \r\n                                                    <p-autoComplete *ngIf="SL.traceableToType == 9"\r\n                                                                    [(ngModel)]="SL.traceableToObject"\r\n                                                                    [suggestions]="SL.filteredRecords"\r\n                                                                    [disabled]="!SL.isEnabled"\r\n                                                                    (completeMethod)="onFilter($event, SL, SL.traceableToType)"\r\n                                                                    (onSelect)="onTraceableToSelect(SL)"\r\n                                                                    [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                    field="Value" class="rpo-acomp">\r\n                                                    </p-autoComplete>\r\n    \r\n                                                    <input *ngIf="SL.traceableToType == 4"\r\n                                                           class="form-control"\r\n                                                           type="text"\r\n                                                           [disabled]="!SL.isEnabled"\r\n                                                           [ngModelOptions]="{standalone: true}"\r\n                                                           [(ngModel)]="SL.traceableTo"\r\n                                                           pInputText>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n    \r\n                                    <td>\r\n                                        <select class="form-control"\r\n                                                name="siteId{{stockline_row_index}}"\r\n                                                [(ngModel)]="SL.siteId"\r\n                                                #selects="ngModel"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                (change)="getStockLineWareHouse(SL, false)">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let site of SL.SiteList" [value]="site.Key">{{site.Value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control"\r\n                                                name="warehouseId{{stockline_row_index}}"\r\n                                                [(ngModel)]="SL.warehouseId"\r\n                                                #selects="ngModel"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                (change)="getStockLineLocation(SL, false)">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let warehouse of SL.WareHouseList" [value]="warehouse.Key">{{warehouse.Value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control"\r\n                                                name="locationId{{stockline_row_index}}"\r\n                                                [(ngModel)]="SL.locationId"\r\n                                                #selects="ngModel"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                (change)="getStockLineShelf(SL, false)">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let loc of SL.LocationList" [value]="loc.Key">{{loc.Value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control"\r\n                                                name="shelfId{{stockline_row_index}}"\r\n                                                [(ngModel)]="SL.shelfId"\r\n                                                #selects="ngModel"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                [ngModelOptions]="{standalone: true}"\r\n                                                (change)="getStockLineBin(SL, false)">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let shelf of SL.ShelfList" [value]="shelf.Key">{{shelf.Value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control"\r\n                                                name="binId{{stockline_row_index}}"\r\n                                                [(ngModel)]="SL.binId"\r\n                                                #selects="ngModel"\r\n                                                [disabled]="!SL.isEnabled"\r\n                                                [ngModelOptions]="{standalone: true}">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let bin of SL.BinList" [value]="bin.Key">{{bin.Value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control" type="text"\r\n                                               [disabled]="!SL.isEnabled"\r\n                                               [(ngModel)]="SL.manufacturingTrace"\r\n                                               pInputText [maxLength]="200">\r\n                                       \r\n                                    </td>\r\n                                    \r\n                                    <td>\r\n                                        <select class="form-control"\r\n                                                [(ngModel)]="SL.manufacturerId"\r\n                                                disabled>\r\n                                            <option [value]="0">Select</option>\r\n                                            <option [value]="manufacturer.Key" *ngFor="let manufacturer of ManufacturerList">{{manufacturer.Value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control"\r\n                                               [(ngModel)]="SL.manufacturerLotNumber"\r\n                                               type="text"\r\n                                               [disabled]="!SL.isEnabled"\r\n                                               pInputText [maxLength]="200">\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [(ngModel)]="SL.manufacturingDate"\r\n                                                    [showIcon]="true"></p-calendar>\r\n    \r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control"\r\n                                               [disabled]="!SL.isEnabled"\r\n                                               [(ngModel)]="SL.manufacturingBatchNumber"\r\n                                               type="text" pInputText\r\n                                               [maxLength]="200">\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control"\r\n                                               type="text" pInputText\r\n                                               [disabled]="!SL.isEnabled"\r\n                                               [(ngModel)]="SL.partCertificationNumber"\r\n                                               [maxLength]="200">\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [maxDate]="currentDate"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [showIcon]="true"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.certifiedDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [maxDate]="currentDate"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [showIcon]="true"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.certifiedDueDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control"\r\n                                               [(ngModel)]="SL.certifiedBy"\r\n                                               type="text" pInputText\r\n                                               [disabled]="!SL.isEnabled"\r\n                                               [maxLength]="200">\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [maxDate]="currentDate"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [showIcon]="true"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.tagDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [showIcon]="true"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.expirationDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control" type="text" [disabled]="!SL.isEnabled" [(ngModel)]="SL.shippingReference" pInputText [maxLength]="200">\r\n                                    </td>\r\n                                    <td>\r\n                                        <select class="form-control" required [(ngModel)]="SL.shippingViaId" [disabled]="!SL.isEnabled">\r\n                                            <option value="0">Select</option>\r\n                                            <option *ngFor="let shippingVia of ShippingViaList" [value]="shippingVia.Key">{{shippingVia.Value}}</option>\r\n                                        </select>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control" type="text" [disabled]="!SL.isEnabled" [(ngModel)]="SL.shippingAccount" pInputText [maxLength]="200">\r\n                                    </td>\r\n                                    <td>\r\n                                        <input class="form-control" type="text" [disabled]="!SL.isEnabled" [(ngModel)]="SL.engineSerialNumber" pInputText [maxLength]="200">\r\n                                    </td>\r\n                                    <td>{{SL.glAccountText}}</td>\r\n                                    <td>\r\n                                        <input type="checkbox" disabled [checked]="part.timeLife[stockline_row_index].stockLineDraftId > 0" />\r\n                                    </td>\r\n                                    <td colspan="13" *ngIf="!(part.timeLife[stockline_row_index].stockLineDraftId > 0)"></td>\r\n                                    <ng-container *ngIf="part.timeLife[stockline_row_index].stockLineDraftId > 0">\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesRemainingHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesRemainingMin" (change)="onChangeTimeLifeMin(\'cyclesRemainingMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesSinceNewHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesSinceNewMin" (change)="onChangeTimeLifeMin(\'cyclesSinceNewMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesSinceOVHHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesSinceOVHMin" (change)="onChangeTimeLifeMin(\'cyclesSinceOVHMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesSinceInspectionHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesSinceInspectionMin" (change)="onChangeTimeLifeMin(\'cyclesSinceInspectionMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesSinceRepairHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].cyclesSinceRepairMin" (change)="onChangeTimeLifeMin(\'cyclesSinceRepairMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeRemainingHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeRemainingMin" (change)="onChangeTimeLifeMin(\'timeRemainingMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeSinceNewHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeSinceNewMin" (change)="onChangeTimeLifeMin(\'timeSinceNewMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeSinceOVHHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeSinceOVHMin" (change)="onChangeTimeLifeMin(\'timeSinceOVHMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeSinceInspectionHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeSinceInspectionMin" (change)="onChangeTimeLifeMin(\'timeSinceInspectionMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeSinceRepairHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].timeSinceRepairMin" (change)="onChangeTimeLifeMin(\'timeSinceRepairMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].lastSinceNewHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].lastSinceNewMin" (change)="onChangeTimeLifeMin(\'lastSinceNewMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].lastSinceOVHHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].lastSinceOVHMin" (change)="onChangeTimeLifeMin(\'lastSinceOVHMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n\r\n                                        <td class="time-remaining-td">\r\n                                            <div class="form-row">\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="HH" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].lastSinceInspectionHrs"></div>\r\n                                                <div class="col-md-1"><span class="time-remaining-span"> : </span></div>\r\n                                                <div class="col-md-5"><input class="form-control time-remaining-input" placeholder="MM" [disabled]="!SL.isEnabled" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLife[stockline_row_index].lastSinceInspectionMin" (change)="onChangeTimeLifeMin(\'lastSinceInspectionMin\', stockline_row_index)"></div>\r\n                                            </div>\r\n                                        </td>\r\n                                    </ng-container>\r\n                                </tr>\r\n                            </ng-container>\r\n                        </ng-container>\r\n                    </ng-container>\r\n\r\n                </tbody>\r\n                <tbody *ngIf="!isROStockline">\r\n                    <tr>\r\n                        <td colspan="50" style="color: red; font-weight: bold; text-align: center; padding: 5px;">\r\n                          No records found\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n\r\n        </div>\r\n        </div>\r\n        </div>\r\n\r\n        <button class="btn btn-primary pull-right" (click)="updateStockLine()">Submit</button>\r\n    </div>\r\n</div>\r\n<div class="modal fade" id="add-notes" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Edit Notes</h4>\r\n            </div>\r\n\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                    <th style="color: #fff;">Notes</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <p-editor [(ngModel)]="headerNotes" [style]="{\'height\':\'320px\'}"\r\n                                           name="headerNotes" required></p-editor>\r\n                                \x3c!-- <textarea [(ngModel)] = "material.description"></textarea> --\x3e\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class="editor-buttons">  \r\n                    <button type="button"  class="btn btn-primary editor-buttons-margin"\r\n                            data-dismiss="modal" (click)="onSaveNotes()">\r\n                        Save\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger editor-buttons-margin"\r\n                            data-dismiss="modal">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="cpo-memo" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Edit Memo</h4>\r\n            </div>\r\n\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                    <th style="color: #fff;">Memo</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <p-editor [(ngModel)]="headerMemo" [style]="{\'height\':\'320px\'}" name="headerMemo" required></p-editor>\r\n                                \x3c!-- <textarea [(ngModel)] = "material.description"></textarea> --\x3e\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class="editor-buttons">\r\n                    <button type="button" class="btn btn-primary editor-buttons-margin" \r\n                            data-dismiss="modal" (click)="onSaveMemo()">\r\n                        Save\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger editor-buttons-margin"\r\n                            data-dismiss="modal">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            \x3c!-- <div class="modal-body">\r\n                <div class="form-group">\r\n                    <label>Memo</label>\r\n                    <textarea class="form-control" name="tempMemo" [(ngModel)]="tempMemo" value={{tempMemo}}></textarea>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="onSaveMemo()">Save</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div> --\x3e\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},"EyF/":function(e,t,n){"use strict";n.r(t),t.default="label {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.inner-addon .ui-autocomplete-input {\n  width: 100% !important;\n}\n\n.partsList-table-tr th {\n  min-width: 80px;\n}\n\n.addpn-btn {\n  padding: 5px 10px !important;\n  font-size: 13px;\n}\n\na.fa.fa-plus-circle {\n  color: green !important;\n}\n\n.partsList-modal .form-group {\n  margin-bottom: 6px !important;\n}\n\n.rpo-table-cstm th {\n  padding: 8px 5px !important;\n}\n\n.child-add-icon {\n  cursor: pointer;\n  margin: 2px -12px;\n}\n\n.child-add-icon a:before, .child-add-icon i:before {\n  font-size: 16px;\n}\n\ntable th {\n  padding: 4px;\n}\n\ntable td {\n  padding: 4px;\n}\n\n.card-timelife {\n  margin-bottom: 10px;\n  margin-top: 10px;\n}\n\n.card-timelife .card-body {\n  padding: 4px 10px 0px !important;\n}\n\n.card-body {\n  padding: 12px !important;\n}\n\n.customer_stock_styel {\n  margin-top: 22px;\n  margin-bottom: 12.2px;\n}\n\n.disabled_color {\n  background-color: #e9ecef;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    margin-right: 0px;\n  }\n\n  .main_facture {\n    padding-right: 0px;\n    padding-left: 4px;\n  }\n\n  .col-md-6 .col-md-6 {\n    max-width: 47%;\n    margin-right: 15px;\n  }\n\n  .col-md-5 {\n    flex: 0 0 44.666667%;\n    max-width: 44.666667%;\n  }\n\n  .col-md-7 {\n    flex: 0 0 58.333333%;\n    max-width: 55.333333%;\n  }\n}\n\n.grayColor {\n  color: gray;\n}"},JgFG:function(e,t,n){"use strict";n.r(t),t.default=".x_panel {\n  border: none;\n}\n\nlabel {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.child-data td, .parent-data td {\n  background: #fff !important;\n  padding: 3px;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.head-notes {\n  height: 28px !important;\n}\n\n.parent-data {\n  background: #fff !important;\n}\n\n.child-header {\n  background: #fafafa !important;\n}\n\n.pas-table-cstm select, .pas-table-cstm input {\n  min-width: 90px;\n}\n\na.fa.fa-plus-circle {\n  color: green !important;\n}\n\n.form-group {\n  margin-bottom: 0px;\n}\n\n.ro-grid-form .form-group {\n  margin-bottom: 10px;\n}\n\n.parent-data {\n  background: #fff !important;\n}\n\n.pas-table-cstm tr th {\n  min-width: 110px;\n  text-align: center;\n}\n\n.time-remaining-td {\n  min-width: 90px;\n}\n\n.time-remaining-input {\n  min-width: initial !important;\n  width: 100%;\n}\n\n.time-remaining-span {\n  float: left;\n  margin-top: 5px;\n}\n\n.time-remaining-td .form-row [class*=col-] {\n  padding-right: 0 !important;\n}\n\n.ro-status-radios {\n  margin-bottom: 15px !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}"},LX4B:function(e,t,n){"use strict";n.r(t),t.default='.x_panel {\n  border: none;\n}\n\n.rpo-bcrumb {\n  background-color: transparent;\n  color: #295d92;\n}\n\n.rpo-bcrumb li {\n  font-family: "Roboto";\n  font-weight: bold;\n}\n\n.right-addon .fa-search {\n  right: 14px;\n}\n\n.rro-btn {\n  margin-top: -60px;\n  float: right;\n  position: absolute;\n  right: 15px;\n}\n\n.ro-popupview-form label {\n  width: 93px;\n  text-align: right;\n}\n\n.roview-table-cstm {\n  min-height: 300px;\n  text-align: center;\n}\n\n.roview-table-cstm .child-data td, .roview-table-cstm .parent-data td {\n  background: #fff !important;\n  padding: 3px;\n}\n\n.roview-table-cstm .child-header {\n  background: #fafafa !important;\n}\n\n.ro-view-address label, .ro-view-receiving label {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\n.ro-view-address input[type=text], .ro-view-address input[type=number],\n.ro-view-receiving input[type=text], .ro-view-receiving input[type=number] {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.po-table-tr th {\n  padding: 8px 4px;\n  font-size: 8px;\n}\n\n.po-sub-tr {\n  background-color: #fafafa;\n}\n\n.po-sub-tr th {\n  padding: 8px 4px;\n  font-size: 8px;\n}\n\n.btn-po-details {\n  width: 85px !important;\n  padding: 6px 2px 6px !important;\n  color: #fff;\n  border-radius: 4px !important;\n}\n\n.btn-po-details:hover {\n  color: #fff;\n  background-color: #286090 !important;\n  border-color: #204d74;\n}\n\n.add-details-heading {\n  font-size: 20px;\n  margin-top: 20px;\n  text-align: center;\n  color: #337ab7;\n}\n\n.btn-ad-icons {\n  padding: 6px !important;\n  width: 24px !important;\n  height: 24px !important;\n  margin: -3px 2px 0 1px !important;\n  border-radius: 0 !important;\n}\n\n.time-remaining input {\n  width: 140px;\n  margin: 5px;\n  float: left;\n}\n\np .label {\n  width: 40%;\n  padding: 0;\n  display: inline-block;\n}\n\np .value {\n  width: 60%;\n  display: inline-block;\n}\n\n.label-value-row {\n  margin-top: 10px;\n}\n\n.receiving-stockline-view p {\n  margin-top: 10px;\n}\n\n.timelife-table tr td {\n  padding: 5px;\n}\n\n@media (min-width: 768px) {\n  .ro-view-address .col-md-3 {\n    max-width: 22%;\n    margin-right: 80px;\n  }\n\n  .ro-view-receiving .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}'},V5dO:function(e,t,n){"use strict";n.r(t);var r=n("mrSG"),i=n("8Y7J"),a=n("u9T3"),s=n("s7LF"),o=n("TSSN"),l=n("1+r1"),c=n("8YFm"),d=n("MCl+"),p=n("CYTX"),u=n("bv+N"),m=n("Jfay"),h=n("sa3O"),g=n("ByPc"),v=n("NGzr"),b=n("FfGd"),f=n("1zQ3"),L=n("a4ce"),S=n("AkAD"),y=n("SVse"),I=n("I0ai"),x=n("3/N/"),M=n("wB/n"),w=n("ldMm"),k=n("BY74"),O=n("agHx"),D=n("r5xa"),T=n("iInd"),C=n("r6Dd");let N=class{constructor(e,t,n){this.router=e,this.route=t,this.receivingCustomerWorkService=n}ngOnInit(){}};N.ctorParameters=()=>[{type:T.ActivatedRoute},{type:T.Router},{type:C.a}],N=r.b([Object(i.Component)({selector:"quickapp-pro-receiving",template:r.c(n("D4xI")).default})],N);var F=n("8rEH"),R=n("G0yt"),H=n("sYxu"),P=n("3LUQ"),E=n("lGQG"),V=n("d8Wx"),j=n("Hocb"),A=n("OlR4"),B=n("435O"),U=n("EVdn"),_=n("JPLv"),W=n("wd/R");let q=class{constructor(e,t,n,r,i,a,s,o,l,c){this.receivingCustomerWorkService=e,this.datePipe=t,this.masterComapnyService=n,this._route=r,this.authService=i,this.alertService=a,this.modalService=s,this.commonService=o,this.stocklineService=l,this.configurations=c,this.isEditMode=!1,this.allRecevinginfo=[],this.selectedOnly=!1,this.showViewProperties={},this.Active="Active",this.currentStatus="active",this.pageSize=10,this.pageIndex=0,this.totalRecords=0,this.totalPages=0,this.isSpinnerVisible=!1,this.currentStatusCW="1",this.moduleName="ReceivingCustomerWork",this.breadcrumbs=[{label:"Receiving"},{label:"Customer Work"},{label:"Customer Work List"}],this.cols=[{field:"customerName",header:"Customer Name"},{field:"partNumber",header:"MPN"},{field:"partDescription",header:"MPN Description"},{field:"serialNumber",header:"Serial Num"},{field:"woNumber",header:"WO Num"},{field:"receivingNumber",header:"Receiver Num"},{field:"receivedDate",header:"Received Date"},{field:"receivedBy",header:"Received By"},{field:"levelCode1",header:"Level 01"},{field:"levelCode2",header:"Level 02"},{field:"levelCode3",header:"Level 03"},{field:"levelCode4",header:"Level 04"},{field:"stageCode",header:"Stage Code"},{field:"status",header:"Status"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"Created By"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"Updated By"}],this.sourceViewforDocumentAudit=[],this.documentTableColumns=[{field:"docName",header:"Name"},{field:"docDescription",header:"Description"},{field:"docMemo",header:"Memo"},{field:"fileName",header:"File Name"},{field:"fileSize",header:"File Size"},{field:"createdDate",header:"Created Date"},{field:"createdBy",header:"CreatedBy"},{field:"updatedDate",header:"Updated Date"},{field:"updatedBy",header:"UpdatedBy"},{field:"download",header:"Actions"}],this.selectedColumns=this.cols,this.viewCustWorkInfo={},this.selectedRowForDelete={},this.managementStructure={},this.timeLifeInfo={},this.customerWorkDocumentsList=[],this.isEditCustomer=!1,this.isAddWorkOrder=!1,this.currentDeletedstatus=!1,this.filterText="",this.allCustomerFinanceDocumentsListOriginal=[],this.restorerecord={},this.dateObject={},this.dataSource=new F.a,this.receivingCustomerWorkService.isEditMode=!1}ngOnInit(){this.getCustomerWarningsList()}dateFilterForTable(e,t){if(""!==e&&W(e).format("MMMM DD YYYY")){this.customerWorkDocumentsList=this.allCustomerFinanceDocumentsListOriginal;const n=[...this.customerWorkDocumentsList.filter(n=>W(n.createdDate).format("MMMM DD YYYY")===W(e).format("MMMM DD YYYY")&&"createdDate"===t||W(n.updatedDate).format("MMMM DD YYYY")===W(e).format("MMMM DD YYYY")&&"updatedDate"===t?n:void 0)];this.customerWorkDocumentsList=n}else this.customerWorkDocumentsList=this.allCustomerFinanceDocumentsListOriginal}dateFilterForReceivingCustomerList(e,t){if(this.dateObject={},e=W(e).format("MM/DD/YYYY"),W(e).format("MM/DD/YY"),""!=e&&W(e,"MM/DD/YYYY",!0).isValid()){"createdDate"==t?this.dateObject={createdDate:e}:"updatedDate"==t?this.dateObject={updatedDate:e}:"workflowCreateDate"==t?this.dateObject={workflowCreateDate:e}:"workflowExpirationDate"==t&&(this.dateObject={workflowExpirationDate:e}),this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{woFilter:this.currentStatusCW},this.dateObject);const n=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(j.j)(this.lazyLoadEventDataInput.filters)});this.getList(n)}else{this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{woFilter:this.currentStatusCW},this.dateObject),this.lazyLoadEventDataInput.filters&&this.lazyLoadEventDataInput.filters.createdDate&&delete this.lazyLoadEventDataInput.filters.createdDate,this.lazyLoadEventDataInput.filters&&this.lazyLoadEventDataInput.filters.updatedDate&&delete this.lazyLoadEventDataInput.filters.updatedDate,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{woFilter:this.currentStatusCW},this.dateObject);const e=Object.assign({},this.lazyLoadEventDataInput,{filters:Object(j.j)(this.lazyLoadEventDataInput.filters)});this.getList(e)}}pageIndexChange(e){this.pageSize=e.rows}getPageCount(e,t){return Math.ceil(e/t)}navigateTogeneralInfo(){this.receivingCustomerWorkService.isEditMode=!1,this.receivingCustomerWorkService.enableExternal=!1,this._route.navigateByUrl("receivingmodule/receivingpages/app-customer-work-edit")}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}get employeeId(){return this.authService.currentUser?this.authService.currentUser.employeeId:0}get currentUserMasterCompanyId(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:null}loadData(e){this.lazyLoadEventData=e;const t=parseInt(e.first)/e.rows;this.pageIndex=t,this.pageSize=e.rows,e.first=t,this.lazyLoadEventDataInput=e,e.filters=Object.assign({},e.filters,{woFilter:this.currentStatusCW}),""==this.filterText?this.getList(e):this.globalSearch(this.filterText)}getList(e){const t=!!this.currentDeletedstatus;e.filters.isDeleted=t,e.filters.masterCompanyId=this.currentUserMasterCompanyId,e.filters.employeeId=this.employeeId;const n=Object.assign({},e,{filters:Object(j.j)(e.filters)});this.isSpinnerVisible=!0,this.receivingCustomerWorkService.getCustomerWorkAll(n).subscribe(e=>{this.allRecevinginfo=e.results.map(e=>Object.assign({},e,{createdDate:e.createdDate?this.datePipe.transform(e.createdDate,"MM/dd/yyyy hh:mm a"):"",updatedDate:e.updatedDate?this.datePipe.transform(e.updatedDate,"MM/dd/yyyy hh:mm a"):"",receivedDate:e.receivedDate?this.datePipe.transform(e.receivedDate,"MM/dd/yyyy"):""})),e.results.length>0?(this.totalRecords=e.totalRecordsCount,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)):(this.totalRecords=0,this.totalPages=0),this.isSpinnerVisible=!1},e=>{this.isSpinnerVisible=!1})}getCustWorkStatus(e){this.currentStatusCW=e,this.lazyLoadEventData.filters=Object.assign({},this.lazyLoadEventData.filters,{woFilter:e}),this.getList(this.lazyLoadEventData)}openView(e){this.viewCustWorkInfo={},this.timeLifeInfo={},this.customerWorkDocumentsList=[];const{receivingCustomerWorkId:t}=e;this.rcId=e.receivingCustomerWorkId,this.isSpinnerVisible=!0,this.receivingCustomerWorkService.getCustomerWorkdataById(t).subscribe(e=>{this.isSpinnerVisible=!1,this.viewCustWorkInfo=Object.assign({},e,{tagDate:e.tagDate?new Date(e.tagDate):"",mfgDate:e.mfgDate?new Date(e.mfgDate):"",expDate:e.expDate?new Date(e.expDate):"",timeLifeDate:e.timeLifeDate?new Date(e.timeLifeDate):""}),null!=e.timeLifeCyclesId&&0!=e.timeLifeCyclesId&&null!=e.timeLifeCyclesId&&this.getTimeLifeOnEdit(e.timeLifeCyclesId)},e=>{this.isSpinnerVisible=!1})}viewSelectedRowdbl(e){this.openView(e),U("#cusView").modal("show")}getManagementStructureCodes(e){this.commonService.getManagementStructureCodes(e).subscribe(e=>{e.Level1?this.managementStructure.level1=e.Level1:this.managementStructure.level1="-",e.Level2?this.managementStructure.level2=e.Level2:this.managementStructure.level2="-",e.Level3?this.managementStructure.level3=e.Level3:this.managementStructure.level3="-",e.Level4?this.managementStructure.level4=e.Level4:this.managementStructure.level4="-"})}getTimeLifeOnEdit(e){this.stocklineService.getStockLineTimeLifeList(e).subscribe(e=>{this.timeLifeInfo=e[0]})}openHist(e,t){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.sourcereceving=t,this.isSaving=!0,this.receivingCustomerWorkService.historyReason(this.sourcereceving.chargeId).subscribe(t=>this.onHistoryLoadSuccessful(t[0],e),e=>this.saveFailedHelper(e))}onHistoryLoadSuccessful(e,t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=e,this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1,windowClass:"assetMange"})}saveFailedHelper(e){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",P.d.error,e),this.alertService.showStickyMessage(e,null,P.d.error)}exportCSV(e){this.isSpinnerVisible=!0;const t=!!this.currentDeletedstatus;let n={first:0,rows:e.totalRecords,sortOrder:1,filters:{woFilter:this.currentStatusCW,isDeleted:t,masterCompanyId:this.currentUserMasterCompanyId,employeeId:this.employeeId},globalFilter:""};Object.keys(e.filters).forEach(t=>{n.filters[t]=e.filters[t].value}),this.receivingCustomerWorkService.getCustomerWorkAll(n).subscribe(t=>{e._value=t.results.map(e=>Object.assign({},e,{createdDate:e.createdDate?this.datePipe.transform(e.createdDate,"MMM-dd-yyyy hh:mm a"):"",updatedDate:e.updatedDate?this.datePipe.transform(e.updatedDate,"MMM-dd-yyyy hh:mm a"):"",receivedDate:e.receivedDate?this.datePipe.transform(e.receivedDate,"MMM-dd-yyyy"):""})),e.exportCSV(),e.value=this.allRecevinginfo,this.isSpinnerVisible=!1},e=>{this.isSpinnerVisible=!1})}closeDeleteModal(){U("#downloadConfirmation").modal("hide")}deleteItemAndCloseModel(){this.isSaving=!0,this.isDeleteMode=!0,this.sourcereceving.isdelete=!1,this.sourcereceving.updatedBy=this.userName,this.receivingCustomerWorkService.deleteReason(this.sourcereceving.receivingCustomerWorkId,this.userName).subscribe(e=>this.saveCompleted(this.sourcereceving),e=>this.saveFailedHelper(e)),this.modal.close()}openDelete(e,t){this.isEditMode=!1,this.isDeleteMode=!0,this.selectedRowForDelete=t,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}dismissModel(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}saveCompleted(e){this.isSaving=!1,this.getList(this.lazyLoadEventData),1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",P.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",P.d.success)}toggleIsActive(e,t){0==t.checked?(this.sourcereceving=e,this.sourcereceving.updatedBy=this.userName,this.Active="In Active",this.sourcereceving.isActive,this.receivingCustomerWorkService.updateActionforActive(this.sourcereceving.receivingCustomerWorkId,this.sourcereceving.isActive,this.userName).subscribe(e=>this.saveCompleted(this.sourcereceving),e=>this.saveFailedHelper(e))):(this.sourcereceving=e,this.sourcereceving.updatedBy=this.userName,this.Active="Active",this.sourcereceving.isActive,this.receivingCustomerWorkService.updateActionforActive(this.sourcereceving.receivingCustomerWorkId,this.sourcereceving.isActive,this.userName).subscribe(e=>this.saveCompleted(this.sourcereceving),e=>this.saveFailedHelper(e)))}openHistory(e,t){this.alertService.startLoadingMessage(),this.receivingCustomerWorkService.getAuditHistory(t.receivingCustomerWorkId).subscribe(t=>this.onAuditHistoryLoadSuccessful(t[0],e),e=>this.saveFailedHelper(e))}onAuditHistoryLoadSuccessful(e,t){this.alertService.stopLoadingMessage(),this.customerWorkHisory=e,this.modal=this.modalService.open(t,{size:"lg",backdrop:"static",keyboard:!1,windowClass:"assetMange"})}getColorCodeForHistory(e,t,n){const r=this.customerWorkHisory,i=r.length;if(e>=0&&e<=i)return e+1===i||r[e+1][t]===n}globalSearch(e){this.pageIndex=0,this.filteredText=e;const t=parseInt(this.lazyLoadEventDataInput.first)/this.lazyLoadEventDataInput.rows;this.pageIndex=t,this.pageSize=this.lazyLoadEventDataInput.rows,this.lazyLoadEventDataInput.first=t,this.lazyLoadEventDataInput.globalFilter=e,this.filterText=e,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{woFilter:this.currentStatusCW}),this.getList(this.lazyLoadEventDataInput)}getDeleteListByStatus(e){this.currentDeletedstatus=!0,1==e?(this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{woFilter:this.currentStatusCW}),this.getList(this.lazyLoadEventDataInput)):(this.currentDeletedstatus=!1,this.lazyLoadEventDataInput.filters=Object.assign({},this.lazyLoadEventDataInput.filters,{woFilter:this.currentStatusCW}),this.getList(this.lazyLoadEventDataInput))}restoreRecord(){this.commonService.updatedeletedrecords("ReceivingCustomerWork","ReceivingCustomerWorkId",this.restorerecord.receivingCustomerWorkId).subscribe(e=>{this.getDeleteListByStatus(!0),this.modal.close(),this.alertService.showMessage("Success","Successfully Updated Status",P.d.success)})}restore(e,t){this.restorerecord=t,this.modal=this.modalService.open(e,{size:"sm",backdrop:"static",keyboard:!1})}refreshList(){""!=this.filteredText&&null!=this.filteredText&&null!=this.filteredText?this.globalSearch(this.filteredText):this.table.reset()}enableDateFilter(e){""===e.value?e.classList.add("hidePlaceHolder"):e.classList.remove("hidePlaceHolder")}toGetDocumentsList(e){this.commonService.GetDocumentsListNew(e,37).subscribe(e=>{this.customerWorkDocumentsList=e,this.allCustomerFinanceDocumentsListOriginal=e})}downloadFileUpload(e){const t=`${this.configurations.baseUrl}/api/FileUpload/downloadattachedfile?filePath=${e.link}`;window.location.assign(t)}getCustomerWarningsList(){this.commonService.smartDropDownList("CustomerWarningType","CustomerWarningTypeId ","Name").subscribe(e=>{e.forEach(e=>{"Create WO for MPN"!=e.label||(this.customerWarningListId=e.value)})})}openEdits(e){this.editData=e,this.isEditCustomer=!0;const{receivingCustomerWorkId:t}=e;this._route.navigateByUrl("receivingmodule/receivingpages/app-customer-work-setup/edit/"+t)}gotoWorkOrder(e){this.editData=e,this.isAddWorkOrder=!0,this.customerResctrictions(e.customerId),this._route.navigateByUrl("/workordersmodule/workorderspages/app-work-order-receivingcustworkid/"+e.receivingCustomerWorkId)}gotoCustomer(e){this._route.navigateByUrl("customersmodule/customerpages/app-customer-edit/"+e.customerId)}customerWarnings(e){e&&this.customerWarningListId&&(this.warningMessage="",this.commonService.customerWarnings(e,this.customerWarningListId).subscribe(t=>{t&&(this.warningMessage=t.warningMessage,this.warningID=t.customerWarningId),this.customerResctrictions(e)}))}customerResctrictions(e){this.restrictMessage="",e&&this.customerWarningListId&&this.commonService.customerResctrictions(e,this.customerWarningListId).subscribe(e=>{if(e&&(this.restrictMessage=e.restrictMessage,this.restrictID=e.customerWarningId),0!=this.restrictID)this.showAlertMessage();else{const{receivingCustomerWorkId:e}=this.editData;this._route.navigateByUrl("/workordersmodule/workorderspages/app-work-order-receivingcustworkid/"+e)}})}showAlertMessage(){U("#warnRestrictMesg").modal("show")}WarnRescticModel(){U("#warnRestrictMesg").modal("hide"),this.warningMessage="",this.restrictMessage="";const{receivingCustomerWorkId:e}=this.editData;1==this.isEditCustomer&&0==this.restrictID?this._route.navigateByUrl("receivingmodule/receivingpages/app-customer-work-setup/edit/"+e):1==this.isAddWorkOrder&&0==this.restrictID&&this._route.navigateByUrl("/workordersmodule/workorderspages/app-work-order-receivingcustworkid/"+e),this.isAddWorkOrder=!1,this.isEditCustomer=!1}openHistoryDoc(e){this.commonService.GetAttachmentAudit(e.attachmentDetailId).subscribe(e=>{this.sourceViewforDocumentAudit=e})}dismissDocumentPopupModel(e){this.closeMyModel(e)}closeMyModel(e){U(e).modal("hide")}getColorCodeForHistoryDoc(e,t,n){const r=this.sourceViewforDocumentAudit,i=r.length;if(e>=0&&e<=i)return e+1===i||r[e+1][t]===n}parsedText(e){if(e){return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}}};q.ctorParameters=()=>[{type:C.a},{type:y.DatePipe},{type:V.a},{type:T.Router},{type:E.a},{type:P.b},{type:R.c},{type:A.a},{type:B.a},{type:_.a}],q=r.b([Object(i.Component)({selector:"app-customer-works-list",template:r.c(n("fl7f")).default,animations:[H.a],providers:[y.DatePipe],styles:[r.c(n("VVaU")).default]})],q);var K=n("XNiG");let z=class{constructor(e,t,n,r,i,a,s,o){this.commonService=e,this.datePipe=t,this._actRoute=n,this.receivingCustomerWorkService=r,this.authService=i,this.router=a,this.alertService=s,this.stocklineService=o,this.receivingForm={},this.isEditMode=!1,this.onDestroy$=new K.a,this.uploadDocs=new K.a,this.breadcrumbs=[{label:"Receiving"},{label:"Customer Work List"},{label:"Receiving Customer Work"}],this.disableSave=!0,this.allVendorsList=[],this.allCompanyList=[],this.customersList=[],this.vendorsList=[],this.companyList=[],this.allEmployeeList=[],this.employeeNames=[],this.allCustomersInfo=[],this.customerNamesInfo=[],this.customerCodesInfo=[],this.allPartnumbersList=[],this.partNumbersInfo=[],this.allWareHouses=[],this.allLocations=[],this.allShelfs=[],this.allBins=[],this.allSites=[],this.isDocumentsToShow=!1,this.sourceViewforDocumentList=[],this.sourceViewforDocument=[],this.sourceViewforDocumentAudit=[],this.isEditButton=!1,this.managementStructure={companyId:0,buId:0,divisionId:0,departmentId:0},this.legalEntityList=[],this.businessUnitList=[],this.divisionList=[],this.departmentList=[],this.allConditionInfo=[],this.customerContactList=[],this.customerContactInfo=[],this.customerPhoneInfo=[],this.allTagTypes=[],this.currentDate=new Date,this.disableMagmtStruct=!0,this.sourceTimeLife={},this.disableCondition=!0,this.disableSite=!0,this.formData=new FormData,this.isEditCustomerWork=!1,this.moduleListDropdown=[],this.isSpinnerVisible=!1,this.moduleName="ReceivingCustomerWork",this.setEditArray=[],this.arrayVendlsit=[],this.disableUpdateButton=!1,this.isCustomerStock=0,this.arrayCustlist=[],this.workScopeList=[],this.gettagTypeIds=[],this.allCustomerFinanceDocumentsListOriginal=[],this.disableSaveadd=!0,this.disabledMemo=!1,this.receivingForm.receivingNumber="Creating",this.receivingForm.conditionId=0,this.receivingForm.siteId=0,this.receivingForm.warehouseId=0,this.receivingForm.locationId=0,this.receivingForm.shelfId=0,this.receivingForm.binId=0,this.receivingForm.obtainFromTypeId=1,this.receivingForm.ownerTypeId=1,this.receivingForm.traceableToTypeId=1,this.receivingForm.tagType=null,this.receivingForm.quantity=1,this.receivingForm.isCustomerStock=!0,this.receivingForm.receivedDate=new Date}ngOnInit(){this.loadSiteData("fromOnload"),this.loadModulesNamesForObtainOwnerTraceable(),this.receivingCustomerWorkId=this._actRoute.snapshot.params.id,this.loadPartNumData(""),this.loadCompanyData(),this.getCustomerWarningsList(),this.receivingCustomerWorkId?(this.isEditMode=!0,this.disableUpdateButton=!0,this.getReceivingCustomerDataonEdit(this.receivingCustomerWorkId),this.breadcrumbs=[{label:"Receiving"},{label:"Customer Work List"},{label:"Receiving Customer Work"}]):(this.getEmployeeData(),this.loadTagTypes(""),this.loadEmployeeData(""),this.loadConditionData(""),this.getworkScope(""),this.getManagementStructureDetails(this.authService.currentUser?this.authService.currentUser.managementStructureId:null,this.authService.currentUser?this.authService.currentUser.employeeId:0))}loadModulesNamesForObtainOwnerTraceable(){this.commonService.getModuleListForObtainOwnerTraceable().subscribe(e=>{this.moduleListDropdown=e})}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}get employeeId(){return this.authService.currentUser?this.authService.currentUser.employeeId:0}filterPartNumbers(e){void 0!==e.query&&null!==e.query?this.loadPartNumData(e.query):this.loadPartNumData("")}loadPartNumData(e=""){this.setEditArray=[],1==this.isEditMode?this.setEditArray.push(this.receivingForm.itemMasterId?this.receivingForm.itemMasterId.value:0):this.setEditArray.push(0);const t=this.authService.currentUser?this.authService.currentUser.masterCompanyId:null;this.commonService.autoCompleteSmartDropDownItemMasterList(e,!0,20,this.setEditArray.join(),t).subscribe(e=>{this.allPartnumbersList=e,this.partNumbersInfo=this.allPartnumbersList})}loadEmployeeData(e){this.setEditArray=[],1==this.isEditMode?(this.setEditArray.push(this.receivingForm.employeeId?this.receivingForm.employeeId.value:0),this.msId=this.receivingForm.managementStructureId):(this.setEditArray.push(0),this.msId=this.authService.currentUser?this.authService.currentUser.managementStructureId:null),0==this.setEditArray.length&&this.setEditArray.push(0);const t=e||"";this.commonService.autoCompleteDropdownsEmployeeByMS(t,!0,20,this.setEditArray.join(),this.msId).subscribe(e=>{e&&0!=e.length&&(this.allEmployeeList=e)})}getEmployeeData(){this.receivingForm.employeeId=this.authService.currentEmployee,this.selectedLegalEntity(this.authService.currentManagementStructure.levelId1,"onLoad"),this.selectedBusinessUnit(this.authService.currentManagementStructure.levelId2,"onLoad"),this.selectedDivision(this.authService.currentManagementStructure.levelId3,"onLoad"),this.selectedDepartment(this.authService.currentManagementStructure.levelId4,"onLoad"),this.managementStructure.companyId=this.authService.currentManagementStructure.levelId1,this.managementStructure.buId=this.authService.currentManagementStructure.levelId2,this.managementStructure.divisionId=this.authService.currentManagementStructure.levelId3,this.managementStructure.departmentId=this.authService.currentManagementStructure.levelId4}filterVendorNames(e){void 0!==e.query&&null!==e.query?this.loadVendorData(e.query):this.loadVendorData("")}loadVendorData(e=""){this.arrayVendlsit=[],1==this.isEditMode?this.arrayVendlsit.push(this.receivingForm.traceableTo?this.receivingForm.traceableTo.value:0,this.receivingForm.owner?this.receivingForm.owner.value:0,this.receivingForm.obtainFrom?this.receivingForm.obtainFrom.value:0):this.arrayVendlsit.push(0);const t=this.authService.currentUser?this.authService.currentUser.masterCompanyId:null;this.commonService.autoSuggestionSmartDropDownList("Vendor","VendorId","VendorName",e,!0,20,this.arrayVendlsit.join(),t).subscribe(e=>{this.allVendorsList=e,this.vendorsList=this.allVendorsList})}filterCompanyNames(e){void 0!==e.query&&null!==e.query?this.loadCompanyData(e.query):this.loadCompanyData("")}loadCompanyData(e=""){this.arrayVendlsit=[],1==this.isEditMode?this.arrayVendlsit.push(this.receivingForm.traceableTo?this.receivingForm.traceableTo.value:0,this.receivingForm.owner?this.receivingForm.owner.value:0,this.receivingForm.obtainFrom?this.receivingForm.obtainFrom.value:0):this.arrayVendlsit.push(0);const t=this.authService.currentUser?this.authService.currentUser.masterCompanyId:null;this.commonService.autoSuggestionSmartDropDownList("LegalEntity","LegalEntityId","Name",e,!0,20,this.arrayVendlsit.join(),t).subscribe(e=>{this.allCompanyList=e,this.companyList=this.allCompanyList})}loadConditionData(e){this.setEditArray=[],1==this.isEditMode?this.setEditArray.push(this.receivingForm.conditionId?this.receivingForm.conditionId:0):this.setEditArray.push(0);const t=e||"",n=this.authService.currentUser?this.authService.currentUser.masterCompanyId:null;this.commonService.autoSuggestionSmartDropDownList("Condition","ConditionId","Description",t,!0,20,this.setEditArray.join(),n).subscribe(e=>{e&&0!=e.length&&(this.allConditionInfo=e.map(e=>Object.assign({},e,{conditionId:e.value,description:e.label})),this.receivingCustomerWorkId||(this.receivingForm.conditionId=this.allConditionInfo[0].conditionId,this.onSelectCondition()))})}getActive(){this.disableUpdateButton=!1}onFilterTangible(e){this.loadTagTypes(e)}loadTagTypes(e){this.setEditArray=[],1==this.isEditMode?this.setEditArray.push(this.receivingForm.tagTypeId?this.receivingForm.tagTypeId:0):this.setEditArray.push(0);const t=e||"",n=this.authService.currentUser?this.authService.currentUser.masterCompanyId:null;this.commonService.autoSuggestionSmartDropDownList("TagType","TagTypeId","Name",t,!0,20,this.setEditArray.join(),n).subscribe(e=>{if(e&&0!=e.length&&(this.allTagTypes=e),1==this.isEditMode)if(this.receivingForm.tagType&&"0"!=this.receivingForm.tagType){this.receivingForm.tagType=this.receivingForm.tagType.split(",").filter((function(e){return null!=e&&""!=e}));for(let e=0;e<this.receivingForm.tagType.length;e++)this.receivingForm.tagType[e]=this.getIdFromArrayOfObjectByValue("value","label",this.receivingForm.tagType[e],this.allTagTypes)}else this.receivingForm.tagType=[]})}getReceivingCustomerDataonEdit(e){this.isSpinnerVisible=!0,this.receivingCustomerWorkService.getCustomerWorkdataById(e).subscribe(e=>{this.loadEmployeeData(""),this.isDocumentsToShow=!0,this.customerId=e.customerId,this.isEditCustomerWork=!0,this.managementStructureId=e.managementStructureId,this.receivingForm.customerContactId=e,this.receivingForm.customerPhone=e,1==this.receivingForm.isCustomerStock?this.isCustomerStock=0:this.isCustomerStock=1,this.customerWarnings(this.customerId),this.receivingForm=Object.assign({},e,{itemMasterId:{value:e.itemMasterId,label:e.partNumber},tagDate:e.tagDate?new Date(e.tagDate):"",mfgDate:e.mfgDate?new Date(e.mfgDate):"",expDate:e.expDate?new Date(e.expDate):"",receivedDate:e.receivedDate?new Date(e.receivedDate):"",timeLifeDate:e.timeLifeDate?new Date(e.timeLifeDate):"",custReqDate:e.custReqDate?new Date(e.custReqDate):"",customerId:{customerId:e.customerId,name:e.customerName},employeeId:{value:e.employeeId,label:e.employeeName},customerCode:e.customerCode,customerContactId:e,customerPhone:e}),this.getManagementStructureDetails(this.receivingForm?this.receivingForm.managementStructureId:null,this.authService.currentUser?this.authService.currentUser.employeeId:0),this.getAllCustomerContact(e.customerId,"formEditapi"),this.onPartNumberSelected(e,"onLoad"),setTimeout(()=>{this.getSiteDetailsOnEdit(e)},1e3),this.getObtainOwnerTraceOnEdit(e),this.loadTagTypes(""),"Vendor"!=e.obtainFromType&&"Vendor"!=e.ownerType&&"Vendor"!=e.tracableToType||this.loadVendorData(""),this.loadConditionData(""),this.getworkScope(""),null==e.timeLifeCyclesId&&0==e.timeLifeCyclesId||(this.timeLifeCyclesId=e.timeLifeCyclesId,this.getTimeLifeOnEdit(e.timeLifeCyclesId)),this.onChangeSiteName(),this.onSelectCondition(),this.isSpinnerVisible=!1},e=>{this.isSpinnerVisible=!1})}getSiteDetailsOnEdit(e){this.getInactiveObjectOnEdit("value",e.siteId,this.allSites,"Site","SiteId","Name"),this.getInactiveObjectOnEdit("value",e.warehouseId,this.allWareHouses,"Warehouse","WarehouseId","Name"),this.getInactiveObjectOnEdit("value",e.locationId,this.allLocations,"Location","LocationId","Name"),this.getInactiveObjectOnEdit("value",e.shelfId,this.allShelfs,"Shelf","ShelfId","Name"),this.getInactiveObjectOnEdit("value",e.binId,this.allBins,"Bin","BinId","Name")}getStockStatus(e){this.disableUpdateButton=!1,this.receivingForm.isCustomerStock=0==e}getObtainOwnerTraceOnEdit(e){1==e.obtainFromTypeId?this.receivingForm.obtainFrom={customerId:e.obtainFrom,name:e.obtainFromName}:2==e.obtainFromTypeId||9==e.obtainFromTypeId?this.receivingForm.obtainFrom={label:e.obtainFromName,value:e.obtainFrom}:4==e.obtainFromTypeId&&(this.receivingForm.obtainFrom=e.obtainFrom),1==e.ownerTypeId?this.receivingForm.owner={customerId:e.owner,name:e.ownerName}:2==e.ownerTypeId||9==e.ownerTypeId?this.receivingForm.owner={label:e.ownerName,value:e.owner}:4==e.ownerTypeId&&(this.receivingForm.owner=e.owner),1==e.traceableToTypeId?this.receivingForm.traceableTo={customerId:e.traceableTo,name:e.tracableToName}:2==e.traceableToTypeId||9==e.traceableToTypeId?this.receivingForm.traceableTo={label:e.tracableToName,value:e.traceableTo}:4==e.traceableToTypeId&&(this.receivingForm.traceableTo=e.traceableTo)}getTimeLifeOnEdit(e){this.stocklineService.getStockLineTimeLifeList(e).subscribe(e=>{this.sourceTimeLife=e[0]})}filterEmployees(e){void 0!==e.query&&null!==e.query?this.loadEmployeeData(e.query):this.loadEmployeeData("")}filterCustomerNames(e){void 0!==e.query&&null!==e.query?this.getCustomers(e.query,2):this.getCustomers("",2)}filterCustNames(e){void 0!==e.query&&null!==e.query?this.getCustomers(e.query,1):this.getCustomers("",1)}getCustomers(e="",t){this.arrayCustlist=[],1==this.isEditMode?this.arrayCustlist.push(this.receivingForm.traceableTo?this.receivingForm.traceableTo.customerId:0,this.receivingForm.owner?this.receivingForm.owner.customerId:0,this.receivingForm.obtainFrom?this.receivingForm.obtainFrom.customerId:0,this.receivingForm.customerId?this.receivingForm.customerId.customerId:0):this.arrayCustlist.push(0);const n=this.authService.currentUser?this.authService.currentUser.masterCompanyId:null;this.commonService.autoSuggestionSmartDropDownList("Customer","CustomerId","Name",e,!0,20,this.arrayCustlist.join(),n).subscribe(e=>{this.allCustomersInfo=e.map(e=>Object.assign({},e,{customerId:e.value,name:e.label})),this.customerNamesInfo=this.allCustomersInfo,this.customersList=this.allCustomersInfo,this.isEditMode&&1==t&&this.onSelectCustomeronEdit(this.customerId)})}onFilterWorkScope(e){this.getworkScope(e)}getworkScope(e=""){this.arrayCustlist=[],1==this.isEditMode?this.arrayCustlist.push(this.receivingForm.workScopeId?this.receivingForm.workScopeId:0):this.arrayCustlist.push(0);const t=this.authService.currentUser?this.authService.currentUser.masterCompanyId:null;this.commonService.autoSuggestionSmartDropDownList("WorkScope","WorkScopeId","WorkScopeCode",e,!0,20,this.arrayCustlist.join(),t).subscribe(e=>{this.workScopeList=e})}filterCustCodes(e){if(this.customerCodesInfo=this.allCustomersInfo,void 0!==e.query&&null!==e.query){const t=[...this.allCustomersInfo.filter(t=>t.customerCode.toLowerCase().includes(e.query.toLowerCase()))];this.customerCodesInfo=t}}filterCustContacts(e){if(this.customerContactInfo=this.customerContactList,void 0!==e.query&&null!==e.query){const t=[...this.customerContactList.filter(t=>t.customerContact.toLowerCase().includes(e.query.toLowerCase()))];this.customerContactInfo=t}}filterCustContactPhone(e){if(this.customerPhoneInfo=this.customerContactList,void 0!==e.query&&null!==e.query){const t=[...this.customerContactList.filter(t=>t.workPhone.toLowerCase().includes(e.query.toLowerCase()))];this.customerPhoneInfo=t}}loadSiteData(e){0==this.isEditCustomerWork&&(this.managementStructureId=this.authService.currentUser.managementStructureId),"fromstructure"==e&&(this.managementStructureId=this.receivingForm.managementStructureId),this.setEditArray=[],1==this.isEditMode?this.setEditArray.push(this.receivingForm.siteId?this.receivingForm.siteId:0):this.setEditArray.push(0);const t=this.authService.currentUser?this.authService.currentUser.masterCompanyId:null;this.commonService.autoSuggestionSmartDropDownList("Site","SiteId","Name","",!0,20,this.setEditArray.join(),t).subscribe(e=>{e&&0!=e.length&&(this.allSites=e.map(e=>Object.assign({siteId:e.value,name:e.label},e)))})}siteValueChange(e){this.allWareHouses=[],this.allLocations=[],this.allShelfs=[],this.allBins=[],this.commonService.smartDropDownList("Warehouse","WarehouseId","Name","SiteId",e).subscribe(e=>{this.allWareHouses=e.map(e=>Object.assign({warehouseId:e.value,name:e.label},e))}),this.onChangeSiteName()}onChangeSiteName(){0!=this.receivingForm.siteId?this.disableSite=!1:this.disableSite=!0}wareHouseValueChange(e){this.allLocations=[],this.allShelfs=[],this.allBins=[],0!=e?this.commonService.smartDropDownList("Location","LocationId","Name","WarehouseId",e).subscribe(e=>{this.allLocations=e.map(e=>Object.assign({locationId:e.value,name:e.label},e))}):this.allLocations=[]}locationValueChange(e){this.allShelfs=[],this.allBins=[],0!=e?this.commonService.smartDropDownList("Shelf","ShelfId","Name","LocationId",e).subscribe(e=>{this.allShelfs=e.map(e=>Object.assign({shelfId:e.value,name:e.label},e))}):this.allShelfs=[]}shelfValueChange(e){this.allBins=[],0!=e?this.commonService.smartDropDownList("Bin","BinId","Name","ShelfId",e).subscribe(e=>{this.allBins=e.map(e=>Object.assign({binId:e.value,name:e.label},e))}):this.allBins=[]}onAddTextAreaInfo(e){"memo"==e&&(this.textAreaLabel="Memo",this.textAreaInfo=this.receivingForm.memo)}onSaveTextAreaInfo(){"Memo"==this.textAreaLabel&&(this.receivingForm.memo=this.textAreaInfo)}onSelectCustomer(e){0==this.isEditCustomerWork&&(this.receivingForm.obtainFrom=e,this.receivingForm.owner=e,this.receivingForm.traceableTo=e),this.receivingForm.customerId=e,this.customerWarnings(e.customerId),this.getAllCustomerContact(e.customerId,"select"),this.customergenericinformation(e.customerId)}customergenericinformation(e){this.commonService.customergenericinformation(e).subscribe(e=>{e&&(this.receivingForm.customerCode=e[0].customerCode)})}onSelectCustomerContact(e){this.receivingForm.customerPhone=e,this.receivingForm.customerContactId=e}onSelectCustomerContactPhone(e){this.receivingForm.customerPhone=e}onSelectCustomeronEdit(e){Object(j.d)("customerId",e,this.allCustomersInfo);this.getAllCustomerContact(e,"edit")}getAllCustomerContact(e,t){if(e){this.setEditArray=[],1==this.isEditMode?this.setEditArray.push(this.receivingForm.customerContactId?this.receivingForm.customerContactId.customerContactId:0):this.setEditArray.push(0);const n="";this.authService.currentUser&&this.authService.currentUser.masterCompanyId;this.commonService.autoDropListCustomerContacts(e,n,20,this.setEditArray.join()).subscribe(e=>{this.customerContactList=e.map(e=>Object.assign({},e,{customerContact:e.customerContactName,workPhone:`${e.workPhone} ${e.workPhoneExtn}`}));const n=this.customerContactList.filter(e=>(e.isDefaultContact,e));"formEditapi"!=t||this.customerContactList&&0!=this.customerContactList.length?(this.receivingForm.customerContactId=n[0],this.receivingForm.customerPhone=n[0]):this.receivingForm.customerPhone={workPhone:this.receivingForm.contactPhone,customerContactId:this.receivingForm.customerContactId}})}}onPartNumberSelected(e,t){"html"==t&&(this.disableUpdateButton=!1,this.receivingForm.partNumber=e.label,this.receivingForm.partDescription=e.partDescription,this.receivingForm.manufacturerId=e.manufacturerId,this.receivingForm.manufacturer=e.manufacturer,this.receivingForm.revisedPart=e.revisedPart,this.receivingForm.isSerialized=e.isSerialized,this.receivingForm.isTimeLife=e.isTimeLife,this.receivingForm.itemGroup=e.itemGroup)}resetSerialNoTimeLife(){this.receivingForm.isSkipSerialNo=!1,this.receivingForm.serialNumber="",this.receivingForm.isSkipTimeLife=!1,this.receivingForm.timeLifeDate=null,this.receivingForm.timeLifeOrigin="",this.sourceTimeLife={}}resetSerialNo(){this.receivingForm.serialNumber=""}resetTimelife(){this.receivingForm.timeLifeDate=null,this.receivingForm.timeLifeOrigin="",this.sourceTimeLife={}}onSelectObrainFrom(e){this.receivingForm.obtainFrom=void 0,this.receivingForm.obtainFromTypeId=e}onSelectOwner(e){this.receivingForm.owner=void 0,this.receivingForm.ownerTypeId=e}onSelectTraceableTo(e){this.receivingForm.traceableTo=void 0,this.receivingForm.traceableToTypeId=e}onSelectCondition(){0!=this.receivingForm.conditionId?this.disableCondition=!1:this.disableCondition=!0}removeFile(e){}restrictMinus(e){var t=e.keyCode?e.keyCode:e.which;null!=t&&45==t&&e.preventDefault()}getIdFromArrayOfObjectByValue(e,t,n,r){if(""!==e&&void 0!==e&&""!==t&&void 0!==t&&""!==n&&void 0!==n&&void 0!==r&&r.length>0){return r.filter(e=>{if(e[t].toLowerCase()===n.toLowerCase())return e})[0][e]}}onSaveCustomerReceiving(){if(this.gettagTypeIds=[],this.receivingForm.tagType&&this.receivingForm.tagType.length>0){this.allTagTypes.forEach(e=>{this.receivingForm.tagType.forEach(t=>{e.value==t&&this.gettagTypeIds.push(e.value)})}),this.receivingForm.tagTypeIds=this.gettagTypeIds.join();for(let e=0;e<this.receivingForm.tagType.length;e++)this.receivingForm.tagType[e]=Object(j.g)("label","value",this.receivingForm.tagType[e],this.allTagTypes);this.receivingForm.tagType=this.receivingForm.tagType.join()}else this.receivingForm.tagType="";console.log("receiving form",this.receivingForm);const e=Object.assign({},this.receivingForm,{customerId:Object(j.h)("customerId",this.receivingForm.customerId),customerContactId:Object(j.h)("customerContactId",this.receivingForm.customerContactId),mfgDate:this.receivingForm.mfgDate?this.datePipe.transform(this.receivingForm.mfgDate,"MM/dd/yyyy"):"",receivedDate:this.receivingForm.receivedDate?this.datePipe.transform(this.receivingForm.receivedDate,"MM/dd/yyyy"):"",expDate:this.receivingForm.expDate?this.datePipe.transform(this.receivingForm.expDate,"MM/dd/yyyy"):"",tagDate:this.receivingForm.tagDate?this.datePipe.transform(this.receivingForm.tagDate,"MM/dd/yyyy"):"",custReqDate:this.receivingForm.custReqDate?this.datePipe.transform(this.receivingForm.custReqDate,"MM/dd/yyyy"):"",timeLifeDate:this.receivingForm.timeLifeDate?this.datePipe.transform(this.receivingForm.timeLifeDate,"MM/dd/yyyy"):"",itemMasterId:this.receivingForm.itemMasterId?Object(j.a)("value",this.receivingForm.itemMasterId):"",employeeId:this.receivingForm.employeeId?Object(j.a)("value",this.receivingForm.employeeId):"",createdBy:this.userName,updatedBy:this.userName,masterCompanyId:this.authService.currentUser.masterCompanyId,warehouseId:0!=this.receivingForm.warehouseId?this.receivingForm.warehouseId:null,locationId:this.receivingForm.locationId?this.receivingForm.locationId:null,binId:0!=this.receivingForm.binId?this.receivingForm.binId:null,shelfId:0!=this.receivingForm.shelfId?this.receivingForm.shelfId:null,workScopeId:this.receivingForm.workScopeId,isSerialized:!!this.receivingForm.isSerialized&&this.receivingForm.isSerialized,isTimeLife:!!this.receivingForm.isTimeLife&&this.receivingForm.isTimeLife,timeLife:Object.assign({},this.sourceTimeLife,{timeLifeCyclesId:this.timeLifeCyclesId,updatedDate:new Date})});console.log("receiving form receivingForm",e);const{customerCode:t,customerPhone:n,partDescription:i,manufacturer:a,revisePartId:s}=e,o=r.f(e,["customerCode","customerPhone","partDescription","manufacturer","revisePartId"]);this.isSpinnerVisible=!0,this.isEditMode?(1==o.obtainFromTypeId?o.obtainFrom=o.obtainFrom.customerId:((o.obtainFromTypeId=2)||9==o.obtainFromTypeId)&&(o.obtainFrom=o.obtainFrom.value),1==o.ownerTypeId?o.owner=o.owner.customerId:((o.ownerTypeId=2)||9==o.ownerTypeId)&&(o.owner=o.owner.value),1==o.traceableToTypeId?o.traceableTo=o.traceableTo.customerId:((o.traceableToTypeId=2)||9==o.traceableToTypeId)&&(o.traceableTo=o.traceableTo.value),this.receivingCustomerWorkService.updateCustomerWorkReceiving(o).subscribe(e=>{this.receivingCustomerWorkId=e.receivingCustomerWorkId,this.uploadDocs.next(!0),U("#workorderpopup").modal("show"),this.alertService.showMessage("Success","Updated Customer Work Successfully",P.d.success)},e=>{this.isSpinnerVisible=!1})):(o.obtainFrom=this.receivingForm.obtainFrom?Object(j.a)("value",this.receivingForm.obtainFrom):"",o.owner=this.receivingForm.owner?Object(j.a)("value",this.receivingForm.owner):"",o.traceableTo=this.receivingForm.traceableTo?Object(j.a)("value",this.receivingForm.traceableTo):"",this.receivingCustomerWorkService.newReason(o).subscribe(e=>{this.receivingCustomerWorkId=e.receivingCustomerWorkId,this.uploadDocs.next(!0),U("#workorderpopup").modal("show"),this.alertService.showMessage("Success","Saved Customer Work Successfully",P.d.success)},e=>{this.isSpinnerVisible=!1}))}goToWorkOrder(){this.router.navigateByUrl("/workordersmodule/workorderspages/app-work-order-receivingcustworkid/"+this.receivingCustomerWorkId)}goToCustomerWorkList(){this.router.navigateByUrl("/receivingmodule/receivingpages/app-customer-works-list")}getCustomerWarningsList(){this.setEditArray.push(0);const e=this.authService.currentUser?this.authService.currentUser.masterCompanyId:null;this.commonService.autoSuggestionSmartDropDownList("CustomerWarningType","CustomerWarningTypeId ","Name","Receive MPN",!0,20,this.setEditArray.join(),e).subscribe(e=>{e.forEach(e=>{"Receive MPN"!=e.label||(this.customerWarningListId=e.value)})})}customerWarnings(e){e&&this.customerWarningListId&&(this.warningMessage="",this.commonService.customerWarnings(e,this.customerWarningListId).subscribe(t=>{t&&(this.warningMessage=t.warningMessage,this.warningID=t.customerWarningId),0==this.isEditCustomerWork?this.customerResctrictions(e,this.warningMessage):(0!=this.warningID&&this.showAlertMessage(),this.restrictID=0)}))}customerResctrictions(e,t){this.restrictMessage="",e&&this.customerWarningListId&&this.commonService.customerResctrictions(e,this.customerWarningListId).subscribe(e=>{e&&(this.restrictMessage=e.restrictMessage,this.restrictID=e.customerWarningId),0!=this.warningID&&0==this.restrictID||0==this.warningID&&0!=this.restrictID||0!=this.warningID&&0!=this.restrictID?this.showAlertMessage():0==this.warningID&&this.restrictID})}showAlertMessage(){U("#warnRestrictMesg").modal("show")}WarnRescticModel(){this.isEditCustomerWork=!1,U("#warnRestrictMesg").modal("hide"),this.warningMessage="",this.restrictMessage="",0!=this.restrictID&&(this.receivingForm.customerCode=null,this.receivingForm.customerId=null,this.receivingForm.customerId=null,this.receivingForm.customerContactId=null,this.receivingForm.customerPhone=null)}closeMyModel(e){U(e).modal("hide")}enableSave(){1==this.isEditMode&&(this.disableSave=!1)}dismissModel(){this.modal.close()}getManagementStructureDetails(e,t=0,n=0){t=0==t?this.employeeId:t,n=this.isEditMode?n=e:0,this.commonService.getManagmentStrctureData(e,t,n).subscribe(e=>{if(e){const t=e;t[0]&&"Level1"==t[0].level?(this.legalEntityList=t[0].lstManagmentStrcture,this.managementStructure.companyId=t[0].managementStructureId,this.receivingForm.managementStructureId=t[0].managementStructureId,this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,this.businessUnitList=[],this.divisionList=[],this.departmentList=[]):(this.managementStructure.companyId=0,this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,this.legalEntityList=[],this.businessUnitList=[],this.divisionList=[],this.departmentList=[]),t[1]&&"Level2"==t[1].level?(this.businessUnitList=t[1].lstManagmentStrcture,this.managementStructure.buId=t[1].managementStructureId,this.receivingForm.managementStructureId=t[1].managementStructureId,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,this.divisionList=[],this.departmentList=[]):(t[1]&&"NEXT"==t[1].level&&(this.businessUnitList=t[1].lstManagmentStrcture),this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,this.divisionList=[],this.departmentList=[]),t[2]&&"Level3"==t[2].level?(this.divisionList=t[2].lstManagmentStrcture,this.managementStructure.divisionId=t[2].managementStructureId,this.receivingForm.managementStructureId=t[2].managementStructureId,this.managementStructure.departmentId=0,this.departmentList=[]):(t[2]&&"NEXT"==t[2].level&&(this.divisionList=t[2].lstManagmentStrcture),this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,this.departmentList=[]),t[3]&&"Level4"==t[3].level?(this.departmentList=t[3].lstManagmentStrcture,this.managementStructure.departmentId=t[3].managementStructureId,this.receivingForm.managementStructureId=t[3].managementStructureId):(this.managementStructure.departmentId=0,t[3]&&"NEXT"==t[3].level&&(this.departmentList=t[3].lstManagmentStrcture))}})}selectedLegalEntity(e,t){e?(this.managementStructure.companyId=e,this.receivingForm.managementStructureId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe(e=>{this.businessUnitList=e,this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0}),this.disableMagmtStruct=!1):this.disableMagmtStruct=!0}getEmployeebylegalentity(e){}selectedBusinessUnit(e,t){e&&(this.managementStructure.buId=e,this.receivingForm.managementStructureId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe(e=>{this.divisionList=e,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0}))}selectedDivision(e,t){e&&(this.managementStructure.divisionId=e,this.receivingForm.managementStructureId=e,this.commonService.getManagementStructurelevelWithEmployee(e,this.employeeId).subscribe(e=>{this.departmentList=e,this.managementStructure.departmentId=0}))}selectedDepartment(e,t){e&&(this.managementStructure.departmentId=e,this.receivingForm.managementStructureId=e)}getInactiveObjectOnEdit(e,t,n,r,i,a){if(t){for(let r=0;r<n.length;r++)if(n[r][e]==t)return t;let s={};return this.commonService.smartDropDownGetObjectById(r,i,a,i,t).subscribe(e=>{s=e[0],"Site"==r?(s.siteId=s.value,s.name=s.label,this.allSites=[...n,s]):"Warehouse"==r?(s.warehouseId=s.value,s.name=s.label,this.allWareHouses=[...n,s]):"Location"==r?(s.locationId=s.value,s.name=s.label,this.allLocations=[...n,s]):"Shelf"==r?(s.shelfId=s.value,s.name=s.label,this.allShelfs=[...n,s]):"Bin"==r&&(s.binId=s.value,s.name=s.label,this.allBins=[...n,s])}),t}return null}onClickMemo(){U("#textareapopup").modal("show"),this.memoPopupContent=this.receivingForm.memo}onClickPopupSave(){this.receivingForm.memo=this.memoPopupContent,this.memoPopupContent="",U("#textareapopup").modal("hide"),this.disabledMemo=!0,this.disableUpdateButton=!1}closeMemoModel(){U("#textareapopup").modal("hide"),this.disabledMemo=!0}enableSaveMemo(){this.disabledMemo=!1}parsedText(e){if(e){return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}}changeOfStatus(e){this.disableUpdateButton=!1}};z.ctorParameters=()=>[{type:A.a},{type:y.DatePipe},{type:T.ActivatedRoute},{type:C.a},{type:E.a},{type:T.Router},{type:P.b},{type:B.a}],z=r.b([Object(i.Component)({selector:"app-customer-work-setup",template:r.c(n("bcrJ")).default,animations:[H.a],providers:[y.DatePipe],styles:[r.c(n("EyF/")).default]})],z);var G=n("MKys"),$=n("Skqz"),Q=n("TeDh"),Y=n("h55p"),J=n("++Ae"),X=n("NRZ7"),Z=n("+yGV"),ee=n("XcjK"),te=n("4Ica");class ne{}class re{}class ie{}class ae{contructor(e,t){this.Key=e,this.Value=t}}var se=n("7+Ft"),oe=n("yKWY"),le=n("IheW"),ce=n("zE9r"),de=(n("tcIq"),n("H4X+"),n("AJX/"),n("tOyL"));let pe=class extends de.a{constructor(e,t,n){super(e,t,n),this._shippingReferenceUrl="/api/Shipping/GetShippingReference",this._shippingViaUrl="/api/Shipping/getShippingVia",this._shippingAccountUrl="/api/Shipping/getShippingAccount",this._receivePartsUrl="/api/receivingPart/receiveParts",this._updateStockLinesUrl="/api/receivingPart/updateStockLines"}get ShippingRefenceURL(){return this.configurations.baseUrl+this._shippingReferenceUrl}get ShippingViaURL(){return this.configurations.baseUrl+this._shippingViaUrl}get ShippingAccountURL(){return this.configurations.baseUrl+this._shippingAccountUrl}get ReceivePartsURL(){return this.configurations.baseUrl+this._receivePartsUrl}get UpdateStockLinesURL(){return this.configurations.baseUrl+this._updateStockLinesUrl}getAllShippingReference(){return this.http.get(this.ShippingRefenceURL,this.getRequestHeaders()).catch(e=>this.handleError(e,()=>this.getAllShippingReference()))}getAllShippingVia(){return this.http.get(this.ShippingViaURL,this.getRequestHeaders()).catch(e=>this.handleError(e,()=>this.getAllShippingVia()))}getAllShippingAccount(){return this.http.get(this.ShippingAccountURL,this.getRequestHeaders()).catch(e=>this.handleError(e,()=>this.getAllShippingAccount()))}receiveParts(e){var t=[];for(let n of e){let e={itemMasterId:n.itemMasterId,isSerialized:n.isSerialized,isSameDetailsForAllParts:n.isSameDetailsForAllParts,purchaseOrderPartRecordId:n.purchaseOrderPartRecordId,quantityRejected:n.quantityRejected,quantityActuallyReceived:n.quantityActuallyReceived,stockLines:n.stockLines,timeLife:n.timeLife};t.push(e)}return this.http.post(this.ReceivePartsURL,JSON.parse(JSON.stringify(t)),this.getRequestHeaders()).catch(t=>this.handleError(t,()=>this.receiveParts(e)))}updateStockLine(e){var t=[];for(let n of e){let e=[];n.stockLines.forEach(t=>{var n=new re;n.stockLineNumber=t.stockLineNumber,n.owner=t.owner,n.ownerType=t.ownerType,n.obtainFrom=t.obtainFrom,n.obtainFromType=t.obtainFromType,n.traceableTo=t.traceableTo,n.traceableToType=t.traceableToType,n.engineSerialNumber=t.engineSerialNumber,n.shippingAccount=t.shippingAccount,n.shippingReference=t.shippingReference,n.shippingViaId=t.shippingViaId,n.partCertificationNumber=t.partCertificationNumber,n.stockLineDraftId=t.stockLineDraftId,n.conditionId=t.conditionId,n.quantityRejected=0,n.purchaseOrderUnitCost=t.purchaseOrderUnitCost,n.purchaseOrderExtendedCost=t.purchaseOrderExtendedCost,n.manufacturingTrace=t.manufacturingTrace,n.manufacturerLotNumber=t.manufacturerLotNumber,n.manufacturingDate=t.manufacturingDate,n.manufacturingBatchNumber=t.manufacturingBatchNumber,n.certifiedDate=t.certifiedDate,n.certifiedBy=t.certifiedBy,n.tagDate=t.tagDate,n.expirationDate=t.expirationDate,n.certifiedDueDate=t.certifiedDueDate,n.managementStructureEntityId=t.managementStructureEntityId,n.siteId=t.siteId,n.warehouseId=t.warehouseId,n.locationId=t.locationId,n.shelfId=t.shelfId,n.binId=t.binId,n.isDeleted=t.isDeleted,e.push(n)});let r={purchaseOrderPartRecordId:n.purchaseOrderPartRecordId,managementStructureEntityId:n.managementStructureEntityId,stockLines:e,timeLife:n.timeLife};t.push(r)}return this.http.post(this.UpdateStockLinesURL,JSON.parse(JSON.stringify(t)),this.getRequestHeaders()).catch(t=>this.handleError(t,()=>this.updateStockLine(e)))}};pe.ctorParameters=()=>[{type:le.HttpClient},{type:_.a},{type:i.Injector}],pe=r.b([Object(i.Injectable)()],pe);let ue=class{constructor(e,t,n,r){this.router=e,this.http=t,this.authService=n,this.shippingService=r}getAllShippingReference(){return ce.a.forkJoin(this.shippingService.getAllShippingReference())}getAllShippingVia(){return ce.a.forkJoin(this.shippingService.getAllShippingVia())}getAllShippingAccount(){return ce.a.forkJoin(this.shippingService.getAllShippingAccount())}receiveParts(e){return this.shippingService.receiveParts(e)}updateStockLine(e){return this.shippingService.updateStockLine(e)}};ue.ctorParameters=()=>[{type:T.Router},{type:le.HttpClient},{type:E.a},{type:pe}],ue=r.b([Object(i.Injectable)()],ue);var me=n("0zL+"),he=n("QBlu");let ge=class{constructor(e,t,n,r,i,a,s,o,l,c,d,p,u,m,h,g,v,b){this.receivingService=e,this.priority=t,this.vendorService=n,this.conditionService=r,this.siteService=i,this.binservice=a,this.legalEntityService=s,this.manufacturerService=o,this.route=l,this.alertService=c,this.uomService=d,this.glAccountService=p,this.shippingService=u,this._actRoute=m,this.commonService=h,this.customerService=g,this.localStorage=v,this.datePipe=b,this.allconditioninfo=[],this.localData=[],this.partBulist=[],this.partDepartmentList=[],this.partDivisionlist=[],this.allPriorityInfo=[],this.toggle_epo_header=!1,this.obtainfromcustomer=!1,this.obtainfromother=!1,this.obtainfromvendor=!1,this.ownercustomer=!1,this.ownerother=!1,this.ownervendor=!1,this.traceabletocustomer=!1,this.traceabletoother=!1,this.traceabletovendor=!1,this.rpoEditPF=!0,this.rpoEditCF=!0,this.purchaseOrderData={},this.pageTitle="Edit Receieve PO",this.ConditionList=[],this.managementStructureHierarchy=[],this.selectedManagementStructure=[],this.ManufacturerList=[],this.headerManagementStructure={},this.CustomerList=[],this.VendorList=[],this.CompanyList=[],this.isPOStockline=!1,this.legalEntityList=[],this.isSpinnerVisible=!0,this.moduleListDropdown=[],this.localPoData=this.vendorService.selectedPoCollection,this.editPoData=this.localData[0],this.currentDate=new Date}ngOnInit(){if(this.getLegalEntity(),this.loadModulesNamesForObtainOwnerTraceable(),this.receivingService.purchaseOrderId=this._actRoute.snapshot.queryParams.purchaseorderid,null==this.receivingService.purchaseOrderId&&null==this.receivingService.purchaseOrderId)return this.alertService.showMessage(this.pageTitle,"No purchase order is selected to edit.",P.d.error),this.route.navigate(["/receivingmodule/receivingpages/app-purchase-order"]);this.receivingService.getReceivingPOHeaderById(this.receivingService.purchaseOrderId).subscribe(e=>{this.purchaseOrderData=e,this.purchaseOrderId=e.purchaseOrderId,this.purchaseOrderData.openDate=this.purchaseOrderData.openDate?new Date(this.purchaseOrderData.openDate):"",this.purchaseOrderData.closedDate=this.purchaseOrderData.closedDate?new Date(this.purchaseOrderData.closedDate):"",this.purchaseOrderData.dateApproved=this.purchaseOrderData.dateApproved?new Date(this.purchaseOrderData.dateApproved):"",this.purchaseOrderData.needByDate=this.purchaseOrderData.needByDate?new Date(this.purchaseOrderData.needByDate):"",this.getManagementStructureCodes(this.purchaseOrderData.managementStructureId)},e=>{}),this.receivingService.getPurchaseOrderDataForEditById(this.receivingService.purchaseOrderId).subscribe(e=>{if(null==e[0]||null==e[0])return this.alertService.showMessage(this.pageTitle,"No purchase order is selected to edit.",P.d.error),this.route.navigate(["/receivingmodule/receivingpages/app-purchase-order"]);e[0]&&(this.purchaseOrderData.purchaseOderPart=e[0].map(e=>Object.assign({},e,{stockLine:this.getStockLineDetails(e.stockLine),timeLife:this.getTimeLifeDetails(e.timeLife)})));const t=this.purchaseOrderData.purchaseOderPart;for(var n=0;n<t.length;n++)if(t[n].stockLine.length>0){this.isPOStockline=!0;break}var r=this.purchaseOrderData.purchaseOderPart.filter(e=>1==e.isParent);for(let o of r){var i=this.purchaseOrderData.purchaseOderPart.filter(e=>!e.isParent&&e.itemMaster.partNumber==o.itemMaster.partNumber);if(i.length>0){o.hasChildren=!0,o.quantityOrdered=0;for(let e of i)o.stockLineCount+=e.stockLineCount,e.managementStructureId=o.managementStructureId,e.managementStructureName=o.managementStructureName,o.quantityOrdered+=e.quantityOrdered}else o.hasChildren=!1}for(let o of this.purchaseOrderData.purchaseOderPart){o.isEnabled=!1;let e=[],t=[];if(e.reverse(),t.reverse(),null!=e[0]&&e[0].length>0){o.companyId=t[0].managementStructureId,o.CompanyList=[];for(let t of e[0]){(s=new ae).Key=t.managementStructureId.toLocaleString(),s.Value=t.code,o.CompanyList.push(s)}}if(null!=e[1]&&e[1].length>0){o.businessUnitId=t[1].managementStructureId,o.BusinessUnitList=[];for(let t of e[1]){(s=new ae).Key=t.managementStructureId.toLocaleString(),s.Value=t.code,o.BusinessUnitList.push(s)}}if(null!=e[2]&&e[2].length>0){o.divisionId=t[2].managementStructureId,o.DivisionList=[];for(let t of e[2]){(s=new ae).Key=t.managementStructureId.toLocaleString(),s.Value=t.code,o.DivisionList.push(s)}}if(null!=e[3]&&e[3].length>0){o.departmentId=t[3].managementStructureId,o.DepartmentList=[];for(let t of e[3]){(s=new ae).Key=t.managementStructureId.toLocaleString(),s.Value=t.code,o.DepartmentList.push(s)}}if(null!=o.stockLine)for(var a of o.stockLine){a.isEnabled=!1;let e=[],t=[];if(e.reverse(),t.reverse(),null!=e[0]&&e[0].length>0){a.companyId=t[0].managementStructureId,a.CompanyList=[];for(let t of e[0]){(s=new ae).Key=t.managementStructureId.toLocaleString(),s.Value=t.code,a.CompanyList.push(s)}}if(null!=e[1]&&e[1].length>0){a.businessUnitId=t[1].managementStructureId,a.BusinessUnitList=[];for(let t of e[1]){(s=new ae).Key=t.managementStructureId.toLocaleString(),s.Value=t.code,a.BusinessUnitList.push(s)}}if(null!=e[2]&&e[2].length>0){a.divisionId=t[2].managementStructureId,a.DivisionList=[];for(let t of e[2]){(s=new ae).Key=t.managementStructureId.toLocaleString(),s.Value=t.code,a.DivisionList.push(s)}}if(null!=e[3]&&e[3].length>0){a.departmentId=t[3].managementStructureId,a.DepartmentList=[];for(let t of e[3]){var s;(s=new ae).Key=t.managementStructureId.toLocaleString(),s.Value=t.code,a.DepartmentList.push(s)}}}if(o.CompanyList=this.legalEntityList,null!=o.stockLine)for(var a of o.stockLine)a.CompanyList=this.legalEntityList,this.getManagementStructureDetailsForStockline(a)}if(this.purchaseOrderData.dateRequested=new Date,this.purchaseOrderData.dateApprovied=new Date(this.purchaseOrderData.dateApprovied),this.purchaseOrderData.needByDate=new Date,this.getManufacturers(),this.getStatus(),this.getConditionList(),this.getAllSite(),this.getShippingVia(),this.getCustomers(),this.getVendors(),this.getCompanyList(),this.isSpinnerVisible=!1,this.purchaseOrderData.purchaseOderPart){for(let e=0;e<this.purchaseOrderData.purchaseOderPart.length;e++)this.getCondIdPart(this.purchaseOrderData.purchaseOderPart[e]),this.getSiteDetailsOnEdit(this.purchaseOrderData.purchaseOderPart[e]);console.log(this.purchaseOrderData.purchaseOderPart)}},e=>(this.alertService.showMessage(this.pageTitle,"Something went wrong while loading the Purchase Order detail",P.d.error),this.route.navigate(["/receivingmodule/receivingpages/app-purchase-order"]))),this.localData=[{partNumber:"PN123"}]}getLegalEntity(){this.commonService.getLegalEntityList().subscribe(e=>{this.legalEntityList=e})}loadModulesNamesForObtainOwnerTraceable(){this.commonService.getModuleListForObtainOwnerTraceable().subscribe(e=>{this.moduleListDropdown=e})}parsedText(e){if(e){return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}}onAddNotes(){this.headerNotes=this.purchaseOrderData.notes}onSaveNotes(){this.purchaseOrderData.notes=this.headerNotes}onAddMemo(){this.headerMemo=this.purchaseOrderData.memo}onSaveMemo(){this.purchaseOrderData.memo=this.headerMemo}getStockLineDetails(e){return e=e.map(e=>Object.assign({},e,{purchaseOrderUnitCost:e.purchaseOrderUnitCost?Object(j.b)(e.purchaseOrderUnitCost,2):"0.00",purchaseOrderExtendedCost:e.purchaseOrderExtendedCost?Object(j.b)(e.purchaseOrderExtendedCost,2):"0.00"}))}getTimeLifeDetails(e){return e=e.map(e=>({stockLineDraftId:e.stockLineDraftId,timeLifeDraftCyclesId:e.timeLifeDraftCyclesId,cyclesRemainingHrs:e.cyclesRemaining?e.cyclesRemaining.split(":")[0]:null,cyclesRemainingMin:e.cyclesRemaining?e.cyclesRemaining.split(":")[1]:null,cyclesSinceInspectionHrs:e.cyclesSinceInspection?e.cyclesSinceInspection.split(":")[0]:null,cyclesSinceInspectionMin:e.cyclesSinceInspection?e.cyclesSinceInspection.split(":")[1]:null,cyclesSinceNewHrs:e.cyclesSinceNew?e.cyclesSinceNew.split(":")[0]:null,cyclesSinceNewMin:e.cyclesSinceNew?e.cyclesSinceNew.split(":")[1]:null,cyclesSinceOVHHrs:e.cyclesSinceOVH?e.cyclesSinceOVH.split(":")[0]:null,cyclesSinceOVHMin:e.cyclesSinceOVH?e.cyclesSinceOVH.split(":")[1]:null,cyclesSinceRepairHrs:e.cyclesSinceRepair?e.cyclesSinceRepair.split(":")[0]:null,cyclesSinceRepairMin:e.cyclesSinceRepair?e.cyclesSinceRepair.split(":")[1]:null,timeRemainingHrs:e.timeRemaining?e.timeRemaining.split(":")[0]:null,timeRemainingMin:e.timeRemaining?e.timeRemaining.split(":")[1]:null,timeSinceInspectionHrs:e.timeSinceInspection?e.timeSinceInspection.split(":")[0]:null,timeSinceInspectionMin:e.timeSinceInspection?e.timeSinceInspection.split(":")[1]:null,timeSinceNewHrs:e.timeSinceNew?e.timeSinceNew.split(":")[0]:null,timeSinceNewMin:e.timeSinceNew?e.timeSinceNew.split(":")[1]:null,timeSinceOVHHrs:e.timeSinceOVH?e.timeSinceOVH.split(":")[0]:null,timeSinceOVHMin:e.timeSinceOVH?e.timeSinceOVH.split(":")[1]:null,timeSinceRepairHrs:e.timeSinceRepair?e.timeSinceRepair.split(":")[0]:null,timeSinceRepairMin:e.timeSinceRepair?e.timeSinceRepair.split(":")[1]:null,lastSinceInspectionHrs:e.lastSinceInspection?e.lastSinceInspection.split(":")[0]:null,lastSinceInspectionMin:e.lastSinceInspection?e.lastSinceInspection.split(":")[1]:null,lastSinceNewHrs:e.lastSinceNew?e.lastSinceNew.split(":")[0]:null,lastSinceNewMin:e.lastSinceNew?e.lastSinceNew.split(":")[1]:null,lastSinceOVHHrs:e.lastSinceOVH?e.lastSinceOVH.split(":")[0]:null,lastSinceOVHMin:e.lastSinceOVH?e.lastSinceOVH.split(":")[1]:null}))}getCondIdPart(e){if(e.stockLine&&e.stockLine.length>0){const t=e.stockLine[0].conditionId;e.conditionId=t}}getSiteDetailsOnEdit(e){const t=e.stockLine[0];t&&(e.siteId=t.siteId?t.siteId:null,this.getPartWareHouse(e),e.warehouseId=t.warehouseId?t.warehouseId:null,this.getPartLocation(e),e.locationId=t.locationId?t.locationId:null,this.getPartShelf(e),e.shelfId=t.shelfId?t.shelfId:null,this.getPartBin(e),e.binId=t.binId?t.binId:null)}getCustomers(){this.commonService.smartDropDownList("Customer","CustomerId","Name").subscribe(e=>{for(let n of e){var t=new ae;t.Key=n.value.toLocaleString(),t.Value=n.label,this.CustomerList.push(t)}for(let n of this.purchaseOrderData.purchaseOderPart)for(let e of n.stockLine)null!=e.owner&&""!=e.owner&&1==e.ownerType&&(e.ownerObject=this.CustomerList.find(t=>t.Key==e.owner)),null!=e.obtainFrom&&""!=e.obtainFrom&&1==e.obtainFromType&&(e.obtainFromObject=this.CustomerList.find(t=>t.Key==e.obtainFrom)),null!=e.traceableTo&&""!=e.traceableTo&&1==e.traceableToType&&(e.traceableToObject=this.CustomerList.find(t=>t.Key==e.traceableTo))},e=>this.onDataLoadFailed(e))}getVendors(){this.commonService.smartDropDownList("Vendor","VendorId","VendorName").subscribe(e=>{for(let n of e){var t=new ae;t.Key=n.value.toLocaleString(),t.Value=n.label,this.VendorList.push(t)}for(let n of this.purchaseOrderData.purchaseOderPart)for(let e of n.stockLine)null!=e.owner&&""!=e.owner&&2==e.ownerType&&(e.ownerObject=this.VendorList.find(t=>t.Key==e.owner)),null!=e.obtainFrom&&""!=e.obtainFrom&&2==e.obtainFromType&&(e.obtainFromObject=this.VendorList.find(t=>t.Key==e.obtainFrom)),null!=e.traceableTo&&""!=e.traceableTo&&2==e.traceableToType&&(e.traceableToObject=this.VendorList.find(t=>t.Key==e.traceableTo))},e=>this.onDataLoadFailed(e))}getCompanyList(){this.commonService.smartDropDownList("LegalEntity","LegalEntityId","Name").subscribe(e=>{for(let n of e){var t=new ae;t.Key=n.value.toLocaleString(),t.Value=n.label,this.CompanyList.push(t)}for(let n of this.purchaseOrderData.purchaseOderPart)for(let e of n.stockLine)null!=e.owner&&""!=e.owner&&9==e.ownerType&&(e.ownerObject=this.CompanyList.find(t=>t.Key==e.owner)),null!=e.obtainFrom&&""!=e.obtainFrom&&9==e.obtainFromType&&(e.obtainFromObject=this.CompanyList.find(t=>t.Key==e.obtainFrom)),null!=e.traceableTo&&""!=e.traceableTo&&9==e.traceableToType&&(e.traceableToObject=this.CompanyList.find(t=>t.Key==e.traceableTo))},e=>this.onDataLoadFailed(e))}getManagementStructure(){return this.legalEntityService.getManagemententity()}getManagementStructureHierarchy(e,t,n){var r=this.managementStructure.filter((function(t){return t.managementStructureId==e}));if(null!=r&&r.length>0){var i=r[0];if(null!=i.parentId){var a=this.managementStructure.filter((function(e){return e.parentId==i.parentId}));null!=t&&t.push(a),null!=n&&n.push(i),this.getManagementStructureHierarchy(i.parentId,t,n)}else{a=this.managementStructure.filter((function(e){return null==e.parentId}));null!=t&&t.push(a),null!=n&&n.push(i)}}}getConditionList(){this.commonService.smartDropDownList("Condition","ConditionId","Description").subscribe(e=>{for(let n of e){var t=new ae;t.Key=n.value.toLocaleString(),t.Value=n.label,this.ConditionList.push(t)}},e=>this.onDataLoadFailed(e))}getStatus(){this.poStatus=[],this.commonService.smartDropDownList("POStatus","POStatusId","Description").subscribe(e=>{this.poStatus=e,this.poStatus=this.poStatus.sort((e,t)=>e.value>t.value?1:t.value>e.value?-1:0)})}getPartBusinessUnitList(e){e.managementStructureId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.companyId}));e.BusinessUnitList=[],e.DivisionList=[],e.DepartmentList=[],e.businessUnitId=0,e.divisionId=0,e.departmentId=0;for(let r of t){var n=new ae;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.BusinessUnitList.push(n)}}getPartDivision(e){null!=e.businessUnitId&&e.businessUnitId>0?e.managementStructureId=e.businessUnitId:e.managementStructureId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.businessUnitId}));e.DivisionList=[],e.DepartmentList=[],e.divisionId=0,e.departmentId=0;for(let r of t){var n=new ae;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DivisionList.push(n)}}getPartDepartment(e){null!=e.divisionId&&e.divisionId>0?e.managementStructureId=e.divisionId:e.managementStructureId=e.businessUnitId;var t=this.managementStructure.filter((function(t){return t.parentId==e.divisionId}));e.DepartmentList=[],e.departmentId=0;for(let r of t){var n=new ae;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DepartmentList.push(n)}}setPartDepartmentManagementStructureId(e){null!=e.departmentId&&e.departmentId>0?e.managementStructureId=e.departmentId:e.managementStructureId=e.divisionId}getStockLineBusinessUnitList(e){e.managementStructureEntityId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.companyId}));e.BusinessUnitList=[],e.DivisionList=[],e.DepartmentList=[],e.businessUnitId=0,e.divisionId=0,e.departmentId=0;for(let r of t){var n=new ae;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.BusinessUnitList.push(n)}}getStockLineDivision(e){null!=e.businessUnitId&&e.businessUnitId>0?e.managementStructureEntityId=e.businessUnitId:e.managementStructureEntityId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.businessUnitId}));e.DivisionList=[],e.DepartmentList=[],e.divisionId=0,e.departmentId=0;for(let r of t){var n=new ae;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DivisionList.push(n)}}getStockLineDepartment(e){null!=e.divisionId&&e.divisionId>0?e.managementStructureEntityId=e.divisionId:e.managementStructureEntityId=e.businessUnitId;var t=this.managementStructure.filter((function(t){return t.parentId==e.divisionId}));e.DepartmentList=[],e.departmentId=0;for(let r of t){var n=new ae;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DepartmentList.push(n)}}setStockLineDepartmentManagementStructureId(e){null!=e.departmentId&&e.departmentId>0?e.managementStructureEntityId=e.departmentId:e.managementStructureEntityId=e.divisionId}getAllSite(){this.commonService.smartDropDownList("Site","SiteId","Name").subscribe(e=>{for(var t of(this.SiteList=e.map(e=>({siteId:e.value,name:e.label})),this.purchaseOrderData.purchaseOderPart))if(t.stockLine){for(var n of(t.SiteList=[],this.SiteList)){(i=new ae).Key=n.siteId.toLocaleString(),i.Value=n.name,t.SiteList.push(i)}for(var r of t.stockLine){for(var n of(r.SiteList=[],this.SiteList)){var i;(i=new ae).Key=n.siteId.toLocaleString(),i.Value=n.name,r.SiteList.push(i)}r.siteId>0&&this.getStockLineWareHouse(r,!0),r.warehouseId>0&&this.getStockLineLocation(r,!0),r.locationId>0&&this.getStockLineShelf(r,!0),r.shelfId>0&&this.getStockLineBin(r,!0)}}},e=>this.onDataLoadFailed(e))}getStockLineSite(e,t){e.SiteList=[],e.WareHouseList=[],e.LocationList=[],e.ShelfList=[],e.BinList=[],t||(e.siteId=0,e.warehouseId=0,e.locationId=0,e.shelfId=0,e.binId=0);for(let r of this.SiteList){var n=new ae;n.Key=r.siteId.toLocaleString(),n.Value=r.name,e.SiteList.push(n)}}getStockLineWareHouse(e,t){e.WareHouseList=[],e.LocationList=[],e.ShelfList=[],e.BinList=[],t||(e.warehouseId=0,e.locationId=0,e.shelfId=0,e.binId=0),0!=e.siteId&&this.commonService.smartDropDownList("Warehouse","WarehouseId","Name","SiteId",e.siteId).subscribe(t=>{for(let r of t){var n=new ae;n.Key=r.value.toLocaleString(),n.Value=r.label,e.WareHouseList.push(n)}},e=>this.onDataLoadFailed(e))}getStockLineLocation(e,t){e.LocationList=[],e.ShelfList=[],e.BinList=[],t||(e.locationId=0,e.shelfId=0,e.binId=0),this.commonService.smartDropDownList("Location","LocationId","Name","WarehouseId",e.warehouseId).subscribe(t=>{console.log(t);for(let r of t){var n=new ae;n.Key=r.value.toLocaleString(),n.Value=r.label,e.LocationList.push(n)}},e=>this.onDataLoadFailed(e))}getStockLineShelf(e,t){e.ShelfList=[],e.BinList=[],t||(e.shelfId=0,e.binId=0),this.commonService.smartDropDownList("Shelf","ShelfId","Name","LocationId",e.locationId).subscribe(t=>{for(let r of t){var n=new ae;n.Key=r.value.toLocaleString(),n.Value=r.label,e.ShelfList.push(n)}},e=>this.onDataLoadFailed(e))}getPartWareHouse(e,t){if(e.WareHouseList=[],e.LocationList=[],e.ShelfList=[],e.BinList=[],e.warehouseId=0,e.locationId=0,e.shelfId=0,e.binId=0,e.stockLine&&t)for(var n of e.stockLine)n.siteId=e.siteId,n.warehouseId=0,n.locationId=0,n.shelfId=0,n.binId=0,n.WareHouseList=[],n.LocationList=[],n.ShelfList=[],n.BinList=[];this.commonService.smartDropDownList("Warehouse","WarehouseId","Name","SiteId",e.siteId).subscribe(n=>{for(let a of n){var r=new ae;if(r.Key=a.value.toLocaleString(),r.Value=a.label,e.WareHouseList.push(r),e.stockLine&&t)for(var i of e.stockLine)i.WareHouseList.push(r)}},e=>this.onDataLoadFailed(e))}getPartLocation(e,t){if(e.LocationList=[],e.ShelfList=[],e.BinList=[],e.locationId=0,e.shelfId=0,e.binId=0,e.stockLine&&t)for(var n of e.stockLine)n.warehouseId=e.warehouseId,n.locationId=0,n.shelfId=0,n.binId=0,n.LocationList=[],n.ShelfList=[],n.BinList=[];this.commonService.smartDropDownList("Location","LocationId","Name","WarehouseId",e.warehouseId).subscribe(n=>{for(let a of n){var r=new ae;if(r.Key=a.value.toLocaleString(),r.Value=a.label,e.LocationList.push(r),e.stockLine&&t)for(var i of e.stockLine)i.LocationList.push(r)}},e=>this.onDataLoadFailed(e))}getPartShelf(e,t){if(e.ShelfList=[],e.BinList=[],e.shelfId=0,e.binId=0,e.stockLine&&t)for(var n of e.stockLine)n.locationId=e.locationId,n.shelfId=0,n.binId=0,n.ShelfList=[],n.BinList=[];this.commonService.smartDropDownList("Shelf","ShelfId","Name","LocationId",e.locationId).subscribe(n=>{for(let a of n){var r=new ae;if(r.Key=a.value.toLocaleString(),r.Value=a.label,e.ShelfList.push(r),e.stockLine&&t)for(var i of e.stockLine)i.ShelfList.push(r)}},e=>this.onDataLoadFailed(e))}getPartBin(e,t){if(e.BinList=[],e.binId=0,e.stockLine&&t)for(var n of e.stockLine)n.shelfId=e.shelfId,n.binId=0,n.BinList=[];this.commonService.smartDropDownList("Bin","BinId","Name","ShelfId",e.shelfId).subscribe(n=>{for(let a of n){var r=new ae;if(r.Key=a.value.toLocaleString(),r.Value=a.label,e.BinList.push(r),e.stockLine&&t)for(var i of e.stockLine)i.BinList.push(r)}},e=>this.onDataLoadFailed(e))}setPartBinIdToStockline(e){if(e.stockLine)for(var t of e.stockLine)t.binId=e.binId}conditionChange(e){if(e.stockLine)for(var t of e.stockLine)t.conditionId=e.conditionId}getStockLineBin(e,t){e.BinList=[],t||(e.binId=0),this.commonService.smartDropDownList("Bin","BinId","Name","ShelfId",e.shelfId).subscribe(t=>{for(let r of t){var n=new ae;n.Key=r.value.toLocaleString(),n.Value=r.label,e.BinList.push(n)}},e=>this.onDataLoadFailed(e))}calculateExtendedCost(e,t){if(null!=t.purchaseOrderUnitCost&&""!=t.purchaseOrderUnitCost){if(e.itemMaster.isSerialized)t.purchaseOrderExtendedCost=t.purchaseOrderUnitCost;else{const n=t.purchaseOrderUnitCost?parseFloat(t.purchaseOrderUnitCost.toString().replace(/\,/g,"")):0;t.purchaseOrderExtendedCost=n*e.quantityActuallyReceived}t.purchaseOrderUnitCost&&(t.purchaseOrderUnitCost=t.purchaseOrderUnitCost?Object(j.b)(t.purchaseOrderUnitCost,2):"0.00"),t.purchaseOrderExtendedCost&&(t.purchaseOrderExtendedCost=t.purchaseOrderExtendedCost?Object(j.b)(t.purchaseOrderExtendedCost,2):"0.00")}}calculatePartExtendedCost(e){if(null!=e.unitCost&&""!=e.unitCost){if(e.unitCost=e.unitCost?Object(j.b)(e.unitCost,2):"0.00",e.itemMaster.isSerialized){const t=e.unitCost?parseFloat(e.unitCost.toString().replace(/\,/g,"")):"0.00";e.extendedCost=t?Object(j.b)(t,2):"0.00"}else{const t=(e.unitCost?parseFloat(e.unitCost.toString().replace(/\,/g,"")):0)*e.quantityActuallyReceived;e.extendedCost=t?Object(j.b)(t,2):"0.00"}if(e.stockLine)for(var t of e.stockLine)t.purchaseOrderUnitCost=e.unitCost,t.purchaseOrderExtendedCost=e.extendedCost}}onDataLoadFailed(e){this.isSpinnerVisible=!1}onObtainFromChange(e,t){t.obtainFromObject={},t.obtainFrom="","1"===e.target.value&&(this.obtainfromcustomer=!0,this.obtainfromother=!1,this.obtainfromvendor=!1),"2"===e.target.value&&(this.obtainfromother=!0,this.obtainfromcustomer=!1,this.obtainfromvendor=!1),"3"===e.target.value&&(this.obtainfromvendor=!0,this.obtainfromcustomer=!1,this.obtainfromother=!1)}onOwnerChange(e,t){t.ownerObject={},t.owner="","1"===e.target.value&&(this.ownercustomer=!0,this.ownerother=!1,this.ownervendor=!1),"2"===e.target.value&&(this.ownerother=!0,this.ownercustomer=!1,this.ownervendor=!1),"3"===e.target.value&&(this.ownervendor=!0,this.ownercustomer=!1,this.ownerother=!1)}onTraceableToChange(e,t){t.traceableToObject="",t.traceableTo="","1"===e.target.value&&(this.traceabletocustomer=!0,this.traceabletoother=!1,this.traceabletovendor=!1),"2"===e.target.value&&(this.traceabletoother=!0,this.traceabletocustomer=!1,this.traceabletovendor=!1),"3"===e.target.value&&(this.traceabletovendor=!0,this.traceabletocustomer=!1,this.traceabletoother=!1)}onFilter(e,t,n){if(t.filteredRecords=[],1==n)var r=this.CustomerList;else if(2==n)r=this.VendorList;else if(9==n)r=this.CompanyList;if(null!=r&&r.length>0)for(let i of r)null!=i.Value&&0==i.Value.toLowerCase().indexOf(e.query.toLowerCase())&&t.filteredRecords.push(i)}onObtainSelect(e){e.obtainFrom=e.obtainFromObject.Key}onOwnerSelect(e){e.owner=e.ownerObject.Key}onTraceableToSelect(e){e.traceableTo=e.traceableToObject.Key}editPart(e){if(e.isEnabled=!e.isEnabled,e.stockLine)for(var t of e.stockLine)t.isEnabled=e.isEnabled,t.quantityRejected=0}deleteStockLine(e){if(e&&1==confirm("Stock Line will be deleted after save/update. Do you still want to continue?"))return e.isEnabled=!0,e.isDeleted=!0,void this.alertService.showMessage(this.pageTitle,"Stock Line removed from the list.",P.d.success)}editStockLine(e){e.isEnabled=!e.isEnabled,e.quantityRejected=0}updateStockLine(){let e=[];for(var t of this.purchaseOrderData.purchaseOderPart)if(t.stockLine){var n=[],r=t.stockLine;for(var i of r){if(null==i.conditionId||0==i.conditionId)return void this.alertService.showMessage(this.pageTitle,"Please select Condition in Part No. "+t.itemMaster.partNumber+" at stockline "+i.stockLineNumber,P.d.error);if(null==i.siteId||0==i.siteId)return void this.alertService.showMessage(this.pageTitle,"Please select Site in Part No. "+t.itemMaster.partNumber+" of stockline "+i.stockLineNumber,P.d.error);if(null==i.purchaseOrderUnitCost||null!=i.purchaseOrderUnitCost&&""==i.purchaseOrderUnitCost.toString())return void this.alertService.showMessage(this.pageTitle,"Please enter Unit Cost in Part No. "+t.itemMaster.partNumber+" of stockline "+i.stockLineNumber,P.d.error);for(var a of t.timeLife)a.stockLineDraftId==i.stockLineDraftId&&n.push(a);1}if(r.length>0){let i=new ie;i.purchaseOrderPartRecordId=t.purchaseOrderPartRecordId,i.managementStructureEntityId=t.managementStructureEntityId?t.managementStructureEntityId:null,i.stockLines=r,i.timeLife=this.getTimeLife(n,t.purchaseOrderPartRecordId),e.push(i)}}e.length>0?this.shippingService.updateStockLine(e).subscribe(e=>{this.alertService.showMessage(this.pageTitle,"Stock Line updated successfully.",P.d.success),this.route.navigateByUrl("/receivingmodule/receivingpages/app-view-po?purchaseOrderId="+this.purchaseOrderId)},e=>{var t="";t=e.error.constructor==Array?e.error[0].errorMessage:e.error.Message,this.alertService.showMessage(this.pageTitle,t,P.d.error)}):this.alertService.showMessage(this.pageTitle,"Please edit Stock Line to update.",P.d.info)}getTimeLife(e,t){let n=[];return n=e.map(e=>({stockLineDraftId:e.stockLineDraftId,timeLifeDraftCyclesId:e.timeLifeDraftCyclesId,cyclesRemaining:(e.cyclesRemainingHrs?e.cyclesRemainingHrs:"00")+":"+(e.cyclesRemainingMin?e.cyclesRemainingMin:"00"),timeRemaining:(e.timeRemainingHrs?e.timeRemainingHrs:"00")+":"+(e.timeRemainingMin?e.timeRemainingMin:"00"),cyclesSinceNew:(e.cyclesSinceNewHrs?e.cyclesSinceNewHrs:"00")+":"+(e.cyclesSinceNewMin?e.cyclesSinceNewMin:"00"),timeSinceNew:(e.timeSinceNewHrs?e.timeSinceNewHrs:"00")+":"+(e.timeSinceNewMin?e.timeSinceNewMin:"00"),lastSinceNew:(e.lastSinceNewHrs?e.lastSinceNewHrs:"00")+":"+(e.lastSinceNewMin?e.lastSinceNewMin:"00"),cyclesSinceOVH:(e.cyclesSinceOVHHrs?e.cyclesSinceOVHHrs:"00")+":"+(e.cyclesSinceOVHMin?e.cyclesSinceOVHMin:"00"),timeSinceOVH:(e.timeSinceOVHHrs?e.timeSinceOVHHrs:"00")+":"+(e.timeSinceOVHMin?e.timeSinceOVHMin:"00"),lastSinceOVH:(e.lastSinceOVHHrs?e.lastSinceOVHHrs:"00")+":"+(e.lastSinceOVHMin?e.lastSinceOVHMin:"00"),cyclesSinceInspection:(e.cyclesSinceInspectionHrs?e.cyclesSinceInspectionHrs:"00")+":"+(e.cyclesSinceInspectionMin?e.cyclesSinceInspectionMin:"00"),timeSinceInspection:(e.timeSinceInspectionHrs?e.timeSinceInspectionHrs:"00")+":"+(e.timeSinceInspectionMin?e.timeSinceInspectionMin:"00"),lastSinceInspection:(e.lastSinceInspectionHrs?e.lastSinceInspectionHrs:"00")+":"+(e.lastSinceInspectionMin?e.lastSinceInspectionMin:"00"),cyclesSinceRepair:(e.cyclesSinceRepairHrs?e.cyclesSinceRepairHrs:"00")+":"+(e.cyclesSinceRepairMin?e.cyclesSinceRepairMin:"00"),timeSinceRepair:(e.timeSinceRepairHrs?e.timeSinceRepairHrs:"00")+":"+(e.timeSinceRepairMin?e.timeSinceRepairMin:"00"),purchaseOrderPartRecordId:t,isActive:!0})),n}onChangeTimeLifeMin(e,t){for(let n=0;n<this.purchaseOrderData.purchaseOderPart.length;n++){let r=this.purchaseOrderData.purchaseOderPart[n];r.timeLife[t][e]>59&&(r.timeLife[t][e]=0,this.alertService.showMessage(this.pageTitle,"Minutes can't be greater than 59",P.d.error))}}getShippingVia(){this.commonService.smartDropDownList("ShippingVia","ShippingViaId","Name").subscribe(e=>{this.ShippingViaList=[];for(let n of e){var t=new ae;t.Key=n.value.toLocaleString(),t.Value=n.label,this.ShippingViaList.push(t)}})}getManufacturers(){this.ManufacturerList=[],this.commonService.smartDropDownList("Manufacturer","ManufacturerId","Name").subscribe(e=>{for(let n of e){var t=new ae;t.Key=n.value.toLocaleString(),t.Value=n.label,this.ManufacturerList.push(t)}},e=>this.onDataLoadFailed(e))}getManagementStructureCodes(e){this.commonService.getManagementStructureCodes(e).subscribe(e=>{e.Level1&&(this.headerManagementStructure.level1=e.Level1),e.Level2&&(this.headerManagementStructure.level2=e.Level2),e.Level3&&(this.headerManagementStructure.level3=e.Level3),e.Level4&&(this.headerManagementStructure.level4=e.Level4)})}getPartBUList(e){null!=e.stockLine&&e.stockLine.map(t=>{e.BusinessUnitList=[],e.DivisionList=[],e.DepartmentList=[],e.businessUnitId=0,e.divisionId=0,e.departmentId=0,t.BusinessUnitList=[],t.DivisionList=[],t.DepartmentList=[],t.businessUnitId=0,t.divisionId=0,t.departmentId=0,t.companyId=e.companyId,0!=e.companyId&&null!=e.companyId&&null!=e.companyId&&(t.managementStructureEntityId=e.companyId,e.managementStructureEntityId=e.companyId,this.commonService.getBusinessUnitListByLegalEntityId(e.companyId).subscribe(n=>{e.BusinessUnitList=n,t.BusinessUnitList=n}))})}getPartDiviList(e){null!=e.stockLine&&e.stockLine.map(t=>{e.DivisionList=[],e.DepartmentList=[],e.divisionId=0,e.departmentId=0,t.DivisionList=[],t.DepartmentList=[],t.divisionId=0,t.departmentId=0,t.businessUnitId=e.businessUnitId,0!=e.businessUnitId&&null!=e.businessUnitId&&null!=e.businessUnitId&&(t.managementStructureEntityId=e.businessUnitId,e.managementStructureEntityId=e.businessUnitId,this.commonService.getDivisionListByBU(e.businessUnitId).subscribe(n=>{e.DivisionList=n,t.DivisionList=n}))})}getPartDeptList(e){null!=e.stockLine&&e.stockLine.map(t=>{e.DepartmentList=[],e.departmentId=0,t.DepartmentList=[],t.departmentId=0,t.divisionId=e.divisionId,0!=e.divisionId&&null!=e.divisionId&&null!=e.divisionId&&(t.managementStructureEntityId=e.divisionId,e.managementStructureEntityId=e.divisionId,this.commonService.getDepartmentListByDivisionId(e.divisionId).subscribe(n=>{e.DepartmentList=n,t.DepartmentList=n}))})}onSelectPartDept(e){null!=e.stockLine&&e.stockLine.map(t=>{t.departmentId=e.departmentId,0!=e.departmentId&&null!=e.departmentId&&null!=e.departmentId&&(t.managementStructureEntityId=e.departmentId,e.managementStructureEntityId=e.departmentId)})}getManagementStructureDetailsForStockline(e){this.commonService.getManagementStructureDetails(e.managementStructureEntityId).subscribe(t=>{this.getStockLineBUList(e,t.Level1),this.getStockLineDiviList(e,t.Level2),this.getStockLineDeptList(e,t.Level3),this.onSelectStockLineDept(e,t.Level4),e.companyId=void 0!==t.Level1?t.Level1:0,e.businessUnitId=void 0!==t.Level1?t.Level2:0,e.divisionId=void 0!==t.Level1?t.Level3:0,e.departmentId=void 0!==t.Level1?t.Level4:0})}getStockLineBUList(e,t){e.BusinessUnitList=[],e.DivisionList=[],e.DepartmentList=[],e.businessUnitId=0,e.divisionId=0,e.departmentId=0,0!=t&&null!=t&&null!=t&&(e.managementStructureEntityId=t,this.commonService.getBusinessUnitListByLegalEntityId(t).subscribe(t=>{e.BusinessUnitList=t}))}getStockLineDiviList(e,t){e.DivisionList=[],e.DepartmentList=[],e.divisionId=0,e.departmentId=0,0!=t&&null!=t&&null!=t&&(e.managementStructureEntityId=t,this.commonService.getDivisionListByBU(t).subscribe(t=>{e.DivisionList=t}))}getStockLineDeptList(e,t){e.DepartmentList=[],e.departmentId=0,0!=t&&null!=t&&null!=t&&(e.managementStructureEntityId=t,this.commonService.getDepartmentListByDivisionId(t).subscribe(t=>{e.DepartmentList=t}))}onSelectStockLineDept(e,t){0!=t&&null!=t&&null!=t&&(e.managementStructureEntityId=t)}};ge.ctorParameters=()=>[{type:te.a},{type:ee.a},{type:$.a},{type:Q.a},{type:Z.a},{type:X.a},{type:Y.a},{type:J.a},{type:T.Router},{type:P.b},{type:se.a},{type:oe.a},{type:ue},{type:T.ActivatedRoute},{type:A.a},{type:me.a},{type:he.a},{type:y.DatePipe}],ge=r.b([Object(i.Component)({selector:"app-edit-po",template:r.c(n("90el")).default,providers:[y.DatePipe],styles:[r.c(n("YHKB")).default]})],ge);let ve=class{constructor(){this.isReceivingPolist=!0}ngOnInit(){}};ve=r.b([Object(i.Component)({selector:"app-purchase-order",template:r.c(n("7dti")).default,styles:[r.c(n("Dj76")).default]})],ve);var be=n("Np0n"),fe=n("6c3z"),Le=n("pjuo"),Se=n("Ph3x"),ye=n("wPjA"),Ie=n("flj8"),xe=n("ZtWP"),Me=n("B4Mn");let we=class extends de.a{constructor(e,t,n){super(e,t,n),this._tagTypeUrl="/api/TagType/Get",this._tagTypeNewUrl="/api/TagType/add",this._tagTypeEditUrl="/api/TagType/update",this._deleteTagType="/api/TagType/remove"}get tagTypeUrl(){return this.configurations.baseUrl+this._tagTypeUrl}getTagTypeEndpoint(){return this.http.get(this.tagTypeUrl,this.getRequestHeaders()).catch(e=>this.handleError(e,()=>this.getTagTypeEndpoint()))}addTagTypeEndpoint(e){return this.http.post(this._tagTypeNewUrl,JSON.stringify(e),this.getRequestHeaders()).catch(t=>this.handleError(t,()=>this.addTagTypeEndpoint(e)))}updateTagTypeEndpoint(e){let t=""+this._tagTypeEditUrl;return this.http.post(t,JSON.stringify(e),this.getRequestHeaders()).catch(t=>this.handleError(t,()=>this.updateTagTypeEndpoint(e)))}removeTagTypeEndpoint(e){let t=`${this._deleteTagType}/${e}`;return this.http.delete(t,this.getRequestHeaders()).catch(t=>this.handleError(t,()=>this.removeTagTypeEndpoint(e)))}};we.ctorParameters=()=>[{type:le.HttpClient},{type:_.a},{type:i.Injector}],we=r.b([Object(i.Injectable)()],we);let ke=class{constructor(e,t,n,r){this.router=e,this.http=t,this.authService=n,this.tagTypeEndpoint=r,this._rolesChanged=new Me.a}getAll(){return ce.a.forkJoin(this.tagTypeEndpoint.getTagTypeEndpoint())}add(e){return this.tagTypeEndpoint.addTagTypeEndpoint(e)}update(e){return this.tagTypeEndpoint.updateTagTypeEndpoint(e)}remove(e){return this.tagTypeEndpoint.removeTagTypeEndpoint(e)}};ke.roleAddedOperation="add",ke.roleDeletedOperation="delete",ke.roleModifiedOperation="modify",ke.ctorParameters=()=>[{type:T.Router},{type:le.HttpClient},{type:E.a},{type:we}],ke=r.b([Object(i.Injectable)()],ke);let Oe=class{constructor(e,t,n,r,i,a,s,o,l,c,d,p,u,m,h,g,v,b,f,L,S,y,I,x,M,w,k,O,D){this.binservice=e,this.manufacturerService=t,this.legalEntityService=n,this.receivingService=r,this.priorityService=i,this.stocklineService=a,this.siteService=s,this.warehouseService=o,this.vendorService=l,this.customerService=c,this.companyService=d,this.itemmaster=p,this.modalService=u,this.route=m,this.currencyService=h,this.unitofmeasureService=g,this.conditionService=v,this.creditTermsService=b,this.employeeService=f,this.alertService=L,this.accountService=S,this.glAccountService=y,this.shippingService=I,this._actRoute=x,this.tagTypeService=M,this.commonService=w,this.localStorage=k,this.authService=O,this.datePipe=D,this.poStatus=[],this.managementStructureHierarchy=[],this.selectedManagementStructure=[],this.CustomerList=[],this.VendorList=[],this.CompanyList=[],this.ManufacturerList=[],this.ConditionList=[],this.GLAccountList=[],this.TagTypeList=[],this.receiving_po_header=!0,this.ConditionId=0,this.quantityreceive=!1,this.toggleIcon=!1,this.currentSLIndex=0,this.currentTLIndex=0,this.currentSERIndex=0,this.pageTitle="Receive PO",this.isDisabledSNboxes=!1,this.obtainfromcustomer=!1,this.obtainfromother=!1,this.obtainfromvendor=!1,this.ownercustomer=!1,this.ownerother=!1,this.ownervendor=!1,this.quantityreceivebtn=!1,this.traceabletocustomer=!1,this.traceabletoother=!1,this.traceabletovendor=!1,this.creditTermsList=[],this.headerManagementStructure={},this.disableParentSpace=!1,this.legalEntityList=[],this.isSpinnerVisible=!0,this.moduleListDropdown=[],this.getAllSite(),this.getCustomers(),this.getVendors(),this.getCompanyList(),this.getManufacturers(),this.getConditionList(),this.getAllGLAccount(),this.getShippingVia(),this.getTagType()}ngOnInit(){this.getLegalEntity(),this.loadModulesNamesForObtainOwnerTraceable(),this.receivingService.purchaseOrderId=this._actRoute.snapshot.queryParams.purchaseorderid,this.getReceivingPOHeaderById(this.receivingService.purchaseOrderId),this.receivingService.getPurchaseOrderDataById(this.receivingService.purchaseOrderId).subscribe(e=>{this.receivingService.purchaseOrder=e[0],this.loadPurchaseOrderData(e[0])},e=>(this.alertService.showMessage(this.pageTitle,"Something went wrong while loading the Purchase Order detail",P.d.error),this.route.navigate(["/receivingmodule/receivingpages/app-purchase-order"]))),this.poStatus=[],this.quantityreceivebtn=!1,this.getStatus()}get currentUserMasterCompanyId(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:null}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}getLegalEntity(){this.commonService.getLegalEntityList().subscribe(e=>{this.legalEntityList=e})}loadModulesNamesForObtainOwnerTraceable(){this.commonService.getModuleListForObtainOwnerTraceable().subscribe(e=>{this.moduleListDropdown=e})}getReceivingPOHeaderById(e){this.receivingService.getReceivingPOHeaderById(e).subscribe(e=>{this.poDataHeader=e,this.poDataHeader.openDate=this.poDataHeader.openDate?new Date(this.poDataHeader.openDate):"",this.poDataHeader.closedDate=this.poDataHeader.closedDate?new Date(this.poDataHeader.closedDate):"",this.poDataHeader.dateApproved=this.poDataHeader.dateApproved?new Date(this.poDataHeader.dateApproved):"",this.poDataHeader.needByDate=this.poDataHeader.needByDate?new Date(this.poDataHeader.needByDate):"",this.getManagementStructureCodes(this.poDataHeader.managementStructureId)},e=>{})}getManagementStructureCodes(e){this.commonService.getManagementStructureCodes(e).subscribe(e=>{e.Level1&&(this.headerManagementStructure.level1=e.Level1),e.Level2&&(this.headerManagementStructure.level2=e.Level2),e.Level3&&(this.headerManagementStructure.level3=e.Level3),e.Level4&&(this.headerManagementStructure.level4=e.Level4)})}getItemMasterById(e,t){this.itemmaster.getItemMasterByItemMasterId(t.itemMaster.itemMasterId).subscribe(n=>{if(null!=n&&null!=n[0])if("serialized"==e)t.itemMaster.isSerialized=n[0].isSerialized,t.serialNumber="";else{t.itemMaster.isTimeLife=n[0].isTimeLife,t.timeLifeList=[];for(var r=0;r<t.stocklineListObj.length;r++){let e=new ne;e.timeLifeDraftCyclesId=0,e.purchaseOrderId=t.purchaseOrderId,e.purchaseOrderPartRecordId=t.purchaseOrderPartRecordId,e.cyclesRemainingHrs=null,e.cyclesRemainingMin=null,e.cyclesSinceInspectionHrs=null,e.cyclesSinceInspectionMin=null,e.cyclesSinceNewHrs=null,e.cyclesSinceNewMin=null,e.cyclesSinceOVHHrs=null,e.cyclesSinceOVHMin=null,e.cyclesSinceRepairHrs=null,e.cyclesSinceRepairMin=null,e.timeRemainingHrs=null,e.timeRemainingMin=null,e.timeSinceInspectionHrs=null,e.timeSinceInspectionMin=null,e.timeSinceNewHrs=null,e.timeSinceNewMin=null,e.timeSinceOVHHrs=null,e.timeSinceOVHMin=null,e.timeSinceRepairHrs=null,e.timeSinceRepairMin=null,e.lastSinceNewHrs=null,e.lastSinceNewMin=null,e.lastSinceInspectionHrs=null,e.lastSinceInspectionMin=null,e.lastSinceOVHHrs=null,e.lastSinceOVHMin=null,e.detailsNotProvided=!1,t.timeLifeList.push(e)}}"serialized"!=e||n[0].isSerialized||this.alertService.showMessage(this.pageTitle,"Serialized is not enabled",P.d.info),"timelife"!=e||n[0].isTimeLife||this.alertService.showMessage(this.pageTitle,"Time Life is not enabled",P.d.info)})}getShippingVia(){this.commonService.smartDropDownList("ShippingVia","ShippingViaId","Name").subscribe(e=>{this.ShippingViaList=[];for(let n of e){var t=new ae;t.Key=n.value.toLocaleString(),t.Value=n.label,this.ShippingViaList.push(t)}})}getStatus(){this.poStatus=[],this.commonService.smartDropDownList("POStatus","POStatusId","Description").subscribe(e=>{this.poStatus=e,this.poStatus=this.poStatus.sort((e,t)=>e.value>t.value?1:t.value>e.value?-1:0)})}getStatusById(e){if(null==e)return"NA"}getUserTypeById(e){if(null==e)return"NA"}getAddress(e){let t="";return null!=e&&(e.line1&&(t+=e.line1+", "),e.line2&&(t+=e.line2+", "),e.line3&&(t+=e.line3+", "),e.city&&(t+=e.city+", "),e.stateOrProvince&&(t+=e.stateOrProvince+", "),e.postalCode&&(t+=e.postalCode+", "),e.country&&(t+=e.country)),t}loadPurchaseOrderData(e){let t;this.purchaseOrderData=e;var n=this.purchaseOrderData.purchaseOderPart.filter(e=>1==e.isParent);for(let i of n){i.currentSLIndex=0,i.currentTLIndex=0,i.currentSERIndex=0,i.isDisabledTLboxes=!1,i.quantityRejected=0;var r=this.purchaseOrderData.purchaseOderPart.filter(e=>!e.isParent&&e.itemMaster.partNumber==i.itemMaster.partNumber);if(r.length>0){i.hasChildren=!0,i.quantityOrdered=0;for(let e of r)i.stockLineCount+=e.stockLineCount,i.quantityRejected+=null!=e.quantityRejected?e.quantityRejected:0,e.managementStructureId=i.managementStructureId,e.managementStructureName=i.managementStructureName,i.quantityOrdered+=e.quantityOrdered}else i.hasChildren=!1}for(let i of this.purchaseOrderData.purchaseOderPart){i.toggleIcon=!1,i.stocklineListObj=[],i.timeLifeList=[],i.currentSLIndex=0,i.currentTLIndex=0,i.currentSERIndex=0,i.isDisabledTLboxes=!1,i.visible=!1,i.showStockLineGrid=!1,i.isSameDetailsForAllParts=!1;let e=[];if(i.eCCNAlreadyExist=null!=i.itemMaster.exportECCN&&i.itemMaster.exportECCN.length>0,i.itarNumberExist=null!=i.itemMaster.itarNumber&&i.itemMaster.itarNumber.length>0,i.isParent){e.reverse(),i.managementStructureName=[];for(let t of e)i.managementStructureName.push(t.code);t=i}else i.addressText=this.getAddress(i.poPartSplitAddress),1==i.poPartSplitUserTypeId&&this.customerService.getCustomerdata(i.poPartSplitUserId).subscribe(e=>{i.userName=e[0][0].name},e=>this.onDataLoadFailed(e)),i.userTypeName=this.getUserTypeById(i.poPartSplitUserTypeId.toLocaleString()),i.statusText=this.getStatusById(i.status),i.managementStructureName=t.managementStructureName;this.getManagementStructureCodesForPart(i)}this.purchaseOrderData.dateRequested=new Date,this.purchaseOrderData.dateApprovied=new Date(this.purchaseOrderData.dateApprovied),this.purchaseOrderData.needByDate=new Date,this.isSpinnerVisible=!1}parsedText(e){if(e){return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}}onAddNotes(){this.headerNotes=this.poDataHeader.notes}onSaveNotes(){this.poDataHeader.notes=this.headerNotes}onAddMemo(){this.headerMemo=this.poDataHeader.memo}onSaveMemo(){this.poDataHeader.memo=this.headerMemo}getManagementStructureCodesForPart(e){e.managementStructureName=[],this.commonService.getManagementStructureCodes(e.managementStructureId).subscribe(t=>{t.Level1&&e.managementStructureName.push(t.Level1),t.Level2&&e.managementStructureName.push(t.Level2),t.Level3&&e.managementStructureName.push(t.Level3),t.Level4&&e.managementStructureName.push(t.Level4)})}getManagementStructure(){return this.legalEntityService.getManagemententity()}setStockLineManagementStructure(e,t){let n=[[]],r=[];if(null!=this.managementStructure&&this.managementStructure.length>0){if(t.CompanyList=[],t.BusinessUnitList=[],t.DivisionList=[],t.DepartmentList=[],this.getManagementStructureHierarchy(e,n,r),n.reverse(),r.reverse(),null!=n[0]&&n[0].length>0){t.companyId=r[0].managementStructureId,t.managementStructureEntityId=t.companyId;for(let e of n[0]){(i=new ae).Key=e.managementStructureId.toLocaleString(),i.Value=e.code,t.CompanyList.push(i)}}if(null!=n[1]&&n[1].length>0){t.businessUnitId=r[1].managementStructureId,t.managementStructureEntityId=t.businessUnitId;for(let e of n[1]){(i=new ae).Key=e.managementStructureId.toLocaleString(),i.Value=e.code,t.BusinessUnitList.push(i)}}if(null!=n[2]&&n[2].length>0){t.divisionId=r[2].managementStructureId,t.managementStructureEntityId=t.divisionId;for(let e of n[2]){(i=new ae).Key=e.managementStructureId.toLocaleString(),i.Value=e.code,t.DivisionList.push(i)}}if(null!=n[3]&&n[3].length>0){t.departmentId=r[3].managementStructureId,t.managementStructureEntityId=t.departmentId;for(let e of n[3]){var i;(i=new ae).Key=e.managementStructureId.toLocaleString(),i.Value=e.code,t.DepartmentList.push(i)}}}}managementStructureSuccess(e,t){if(this.alertService.stopLoadingMessage(),this.managementStructure=t,null!=this.managementStructure&&this.managementStructure.length>0){if(this.poCompanyList=[],this.poBusinessUnitList=[],this.poDivisionList=[],this.poDepartmentList=[],this.getManagementStructureHierarchy(e,this.managementStructureHierarchy,this.selectedManagementStructure),this.managementStructureHierarchy.reverse(),this.selectedManagementStructure.reverse(),null!=this.managementStructureHierarchy[0]&&this.managementStructureHierarchy[0].length>0){this.poSelectedCompanyId=this.selectedManagementStructure[0].managementStructureId;for(let e of this.managementStructureHierarchy[0]){(n=new ae).Key=e.managementStructureId.toLocaleString(),n.Value=e.code,this.poCompanyList.push(n)}}if(null!=this.managementStructureHierarchy[1]&&this.managementStructureHierarchy[1].length>0){this.poSelectedBusinessUnitId=this.selectedManagementStructure[1].managementStructureId;for(let e of this.managementStructureHierarchy[1]){(n=new ae).Key=e.managementStructureId.toLocaleString(),n.Value=e.code,this.poBusinessUnitList.push(n)}}if(null!=this.managementStructureHierarchy[2]&&this.managementStructureHierarchy[2].length>0){this.poSelectedDivisionId=this.selectedManagementStructure[2].managementStructureId;for(let e of this.managementStructureHierarchy[2]){(n=new ae).Key=e.managementStructureId.toLocaleString(),n.Value=e.code,this.poDivisionList.push(n)}}if(null!=this.managementStructureHierarchy[3]&&this.managementStructureHierarchy[3].length>0){this.poSelectedDepartmentId=this.selectedManagementStructure[3].managementStructureId;for(let e of this.managementStructureHierarchy[3]){var n;(n=new ae).Key=e.managementStructureId.toLocaleString(),n.Value=e.code,this.poDepartmentList.push(n)}}}}getManagementStructureHierarchy(e,t,n){var r=this.managementStructure.filter((function(t){return t.managementStructureId==e}));if(null!=r&&r.length>0){var i=r[0];if(null!=i.parentId){var a=this.managementStructure.filter((function(e){return e.parentId==i.parentId}));null!=t&&t.push(a),null!=n&&n.push(i),this.getManagementStructureHierarchy(i.parentId,t,n)}else{a=this.managementStructure.filter((function(e){return null==e.parentId}));null!=t&&t.push(a),null!=n&&n.push(i)}}}showSplitShipmentParts(e){console.log(this.purchaseOrderData.purchaseOderPart),console.log(e),this.purchaseOrderData.purchaseOderPart.filter((function(t){return t.itemMasterId==e.itemMasterId})).forEach(e=>{e.toggleIcon=!e.toggleIcon,e.visible=!e.visible});const t=this.purchaseOrderData.purchaseOderPart;for(var n=0;n<t.length;n++){if(0==t[n].isParent&&1==t[n].visible){this.disableParentSpace=!0;break}this.disableParentSpace=!1}}isSplitShipmentPart(e){return this.purchaseOrderData.purchaseOderPart.filter(t=>t.itemMaster.itemMasterId==e&&!t.isParent).length>0}onDataLoadFailed(e){console.log(e),this.alertService.stopLoadingMessage(),this.isSpinnerVisible=!1}btnactive(e){}toggleStockLine(e,t){if(null==t.quantityActuallyReceived||null==t.quantityActuallyReceived?this.quantityreceive=!0:this.quantityreceive=!1,t.showStockLineGrid)return void this.addStockLine(t,!1);if(null==t.quantityActuallyReceived||0==t.quantityActuallyReceived)return t.showStockLineGrid=!1,void this.alertService.showMessage(this.pageTitle,"Please enter Quantity Received.",P.d.error);let n=""!=(null!=t.quantityActuallyReceived||t.quantityActuallyReceived.toString())?t.quantityActuallyReceived:0;if((t.itemMaster.isSerialized&&t.stocklineListObj.length!=n||!t.itemMaster.isSerialized&&t.stocklineListObj.length>0&&t.stocklineListObj[0].quantity!=n)&&(t.stocklineListObj=[],t.timeLifeList=[],t.isSameDetailsForAllParts=!1,t.currentSLIndex=0,t.currentTLIndex=0,t.currentSERIndex=0),this.purchaseOrderData.purchaseOderPart.filter(e=>e.itemMaster.partnumber==t.itemMaster.partnumber&&0==e.itemMaster.isParent).length>1){if(n>t.quantityOrdered-t.stockLineCount)return void this.alertService.showMessage(this.pageTitle,"Quantity receive can not be more than quantity ordered",P.d.error)}else if(n>t.quantityOrdered-t.stockLineCount)return void this.alertService.showMessage(this.pageTitle,"Quantity receive can not be more than quantity ordered",P.d.error);if(t.visible=!0,t.stocklineListObj.length!=n&&(this.createStockLineItems(t),t.itemMaster.isTimeLife))for(var r=0;r<n;r++){let e=new ne;e.timeLifeDraftCyclesId=0,e.purchaseOrderId=t.purchaseOrderId,e.purchaseOrderPartRecordId=t.purchaseOrderPartRecordId,e.cyclesRemainingHrs=null,e.cyclesRemainingMin=null,e.cyclesSinceInspectionHrs=null,e.cyclesSinceInspectionMin=null,e.cyclesSinceNewHrs=null,e.cyclesSinceNewMin=null,e.cyclesSinceOVHHrs=null,e.cyclesSinceOVHMin=null,e.cyclesSinceRepairHrs=null,e.cyclesSinceRepairMin=null,e.timeRemainingHrs=null,e.timeRemainingMin=null,e.timeSinceInspectionHrs=null,e.timeSinceInspectionMin=null,e.timeSinceNewHrs=null,e.timeSinceNewMin=null,e.timeSinceOVHHrs=null,e.timeSinceOVHMin=null,e.timeSinceRepairHrs=null,e.timeSinceRepairMin=null,e.lastSinceNewHrs=null,e.lastSinceNewMin=null,e.lastSinceInspectionHrs=null,e.lastSinceInspectionMin=null,e.lastSinceOVHHrs=null,e.lastSinceOVHMin=null,e.detailsNotProvided=!1,t.timeLifeList.push(e)}this.addStockLine(t,!0),1==this.quantityreceive?this.quantityreceivebtn=!0:this.quantityreceivebtn=!1,console.log(t)}addStockLine(e,t){const n=e.stocklineListObj;e.stocklineListObj=n.map(t=>Object.assign({},t,{siteId:this.getSiteDetailsOnEdit(e,t),shippingViaId:e.shipViaId?e.shipViaId.toLocaleString():null,shippingAccount:e.shippingAccountInfo,purchaseOrderUnitCost:Object(j.b)(t.purchaseOrderUnitCost,2),purchaseOrderExtendedCost:Object(j.b)(t.purchaseOrderExtendedCost,2)}));for(let r=0;r<e.stocklineListObj.length;r++)e.stocklineListObj[r].CompanyList=this.legalEntityList,this.getManagementStructureOnEdit(e,e.stocklineListObj[r]);console.log(e.stocklineListObj),e.showStockLineGrid=null==t?!e.showStockLineGrid:t,null==e.quantityActuallyReceived||null==e.quantityActuallyReceived||""==e.quantityActuallyReceived.toString()?this.quantityreceive=!1:(this.quantityreceive=!0,this.quantityreceivebtn=!1),console.log(e)}getManagementStructureOnEdit(e,t){this.commonService.getManagementStructureDetails(e.managementStructureId).subscribe(e=>(this.selectedLegalEntity(e.Level1,t),this.selectedBusinessUnit(e.Level2,t),this.selectedDivision(e.Level3,t),this.selectedDepartment(e.Level4,t),t.companyId=void 0!==e.Level1?e.Level1.toString():0,t.businessUnitId=void 0!==e.Level2?e.Level2.toString():0,t.divisionId=void 0!==e.Level3?e.Level3.toString():0,t.departmentId=void 0!==e.Level4?e.Level4.toString():0,t.companyId)),console.log(t)}selectedLegalEntity(e,t){t.BusinessUnitList=[],t.DivisionList=[],t.DepartmentList=[],t.businessUnitId=0,t.divisionId=0,t.departmentId=0,0!=e&&null!=e&&null!=e&&(t.managementStructureEntityId=e,this.commonService.getBusinessUnitListByLegalEntityId(e).subscribe(e=>{t.BusinessUnitList=e}))}selectedBusinessUnit(e,t){return r.a(this,void 0,void 0,(function*(){t.DivisionList=[],t.DepartmentList=[],t.divisionId=0,t.departmentId=0,0!=e&&null!=e&&null!=e&&(t.managementStructureEntityId=e,yield this.commonService.getDivisionListByBU(e).subscribe(e=>{t.DivisionList=e}))}))}selectedDivision(e,t){return r.a(this,void 0,void 0,(function*(){t.DepartmentList=[],t.departmentId=0,0!=e&&null!=e&&null!=e&&(t.managementStructureEntityId=e,yield this.commonService.getDepartmentListByDivisionId(e).subscribe(e=>{t.DepartmentList=e}))}))}selectedDepartment(e,t){0!=e&&null!=e&&null!=e&&(t.managementStructureEntityId=e)}getSiteDetailsOnEdit(e,t){const n=e.itemMaster;return t.siteId=n.siteId?n.siteId.toLocaleString():null,this.getStockLineWareHouse(t),t.warehouseId=n.warehouseId?n.warehouseId.toLocaleString():null,this.getStockLineLocation(t),t.locationId=n.locationId?n.locationId.toLocaleString():null,this.getStockLineShelf(t),t.shelfId=n.shelfId?n.shelfId.toLocaleString():null,this.getStockLineBin(t),t.binId=n.binId?n.binId.toLocaleString():null,t.siteId}paginatorFocusOut(e,t){""==e.target.value&&(t.isSameDetailsForAllParts||(t.currentSLIndex=0,t.currentSERIndex=0),t.currentTLIndex=0,t.currentSERIndex=0)}createStockLineItems(e){e.stocklineListObj=[],this.currentSLIndex=0;for(var t=0;t<e.quantityActuallyReceived;t++){let t=new re;t.purchaseOrderId=e.purchaseOrderId,t.purchaseOrderPartRecordId=e.purchaseOrderPartRecordId,t.itemMasterId=e.itemMaster.itemMasterId,t.partNumber=e.itemMaster.partNumber,t.quantity=e.quantityActuallyReceived,t.stockLineDraftId=0,t.createdDate=new Date,t.manufacturerId=e.itemMaster.manufacturerId,t.visible=!1,t.shippingReference="",t.shippingViaId=null,t.shelfId=null,t.warehouseId=null,t.binId=null,t.repairOrderId=null,t.locationId=null,t.shippingAccount="",t.conditionId=0,t.masterCompanyId=this.currentUserMasterCompanyId,t.serialNumberNotProvided=!1,t.purchaseOrderUnitCost=0,t.purchaseOrderExtendedCost=e.unitCost,t.currentDate=new Date,t.obtainFromType=2,t.obtainFrom=this.purchaseOrderData.vendor.vendorId.toString(),t.ownerType=2,t.owner=this.purchaseOrderData.vendor.vendorId.toString(),t.obtainFromObject=this.VendorList.find(e=>e.Key==this.purchaseOrderData.vendor.vendorId.toString()),t.ownerObject=this.VendorList.find(e=>e.Key==this.purchaseOrderData.vendor.vendorId.toString()),null!=e.itemMaster&&(t.purchaseOrderUnitCost=e.unitCost,e.itemMaster.isSerialized||(t.purchaseOrderExtendedCost=e.quantityActuallyReceived*e.unitCost)),this.getStockLineSite(t),e.stocklineListObj.push(t)}}getManagementDetails(e){this.commonService.getLegalEntityList().subscribe(t=>{e.CompanyList=t,console.log(e.CompanyList)})}gotoStockLineMainPage(e,t){let n=e.target.value,r=0;if(""!=n){if(r=Number.parseInt(n)-1,!(r<t.stocklineListObj.length&&r>=0))return this.alertService.showMessage(this.pageTitle,"Invalid stock line page",P.d.error),e.target.value="1",void(t.isSameDetailsForAllParts||(t.currentSLIndex=0));t.isSameDetailsForAllParts||(t.currentSLIndex=r)}}gotoStockLinePage(e,t){let n=e.target.value,r=0;if(""!=n){if(r=Number.parseInt(n)-1,!(r<t.stocklineListObj.length&&r>=0))return this.alertService.showMessage(this.pageTitle,"Invalid stock line page",P.d.error),e.target.value="1",t.isSameDetailsForAllParts||(t.currentSERIndex=0),t.currentTLIndex=0,void(t.currentSERIndex=0);!t.isSameDetailsForAllParts&&t.itemMaster.isSerialized&&(t.currentSERIndex=r),t.currentTLIndex=r}}moveStockLineMainPage(e,t,n){var r="stockline"==e?n.stocklineListObj.length:n.timeLifeList.length;t>=0&&t<r&&(n.currentSLIndex=t)}moveStockLinePage(e,t,n){var r="stockline"==e?n.stocklineListObj.length:n.timeLifeList.length;t>=0&&t<r&&(n.currentSERIndex=t,n.currentTLIndex=t)}getStockLineCompanies(e){var t=this.managementStructure.filter((function(e){return null==e.parentId}));e.CompanyList=[],e.BusinessUnitList=[],e.DivisionList=[],e.DepartmentList=[],e.companyId=0,e.businessUnitId=0,e.divisionId=0,e.departmentId=0;for(let r of t){var n=new ae;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.CompanyList.push(n)}}getStockLineBusinessUnitList(e){e.managementStructureEntityId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.companyId}));e.BusinessUnitList=[],e.DivisionList=[],e.DepartmentList=[],e.businessUnitId=0,e.divisionId=0,e.departmentId=0;for(let r of t){var n=new ae;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.BusinessUnitList.push(n)}}getStockLineDivision(e){null!=e.businessUnitId&&e.businessUnitId>0?e.managementStructureEntityId=e.businessUnitId:e.managementStructureEntityId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.businessUnitId}));e.DivisionList=[],e.DepartmentList=[],e.divisionId=0,e.departmentId=0;for(let r of t){var n=new ae;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DivisionList.push(n)}}getStockLineDepartment(e){null!=e.divisionId&&e.divisionId>0?e.managementStructureEntityId=e.divisionId:e.managementStructureEntityId=e.businessUnitId;var t=this.managementStructure.filter((function(t){return t.parentId==e.divisionId}));e.DepartmentList=[],e.departmentId=0;for(let r of t){var n=new ae;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DepartmentList.push(n)}}setStockLineDepartmentManagementStructureId(e){null!=e.departmentId&&e.departmentId>0?e.managementStructureEntityId=e.departmentId:e.managementStructureEntityId=e.divisionId}getAllSite(){this.commonService.smartDropDownList("Site","SiteId","Name").subscribe(e=>{this.sites=e})}getStockLineSite(e){e.SiteList=[],e.siteId=0,e.WareHouseList=[],e.warehouseId=0,e.LocationList=[],e.locationId=0,e.ShelfList=[],e.shelfId=0,e.BinList=[],e.binId=0;for(let n of this.sites){var t=new ae;t.Key=n.value.toLocaleString(),t.Value=n.label,e.SiteList.push(t)}}getStockLineWareHouse(e){e.WareHouseList=[],e.warehouseId=0,e.LocationList=[],e.locationId=0,e.ShelfList=[],e.shelfId=0,e.BinList=[],e.binId=0,e.siteId&&this.commonService.smartDropDownList("Warehouse","WarehouseId","Name","SiteId",e.siteId).subscribe(t=>{console.log(t);for(let r of t){var n=new ae;n.Key=r.value.toLocaleString(),n.Value=r.label,e.WareHouseList.push(n)}},e=>this.onDataLoadFailed(e))}getStockLineLocation(e){e.LocationList=[],e.locationId=0,e.ShelfList=[],e.shelfId=0,e.BinList=[],e.binId=0,e.warehouseId&&this.commonService.smartDropDownList("Location","LocationId","Name","WarehouseId",e.warehouseId).subscribe(t=>{console.log(t);for(let r of t){var n=new ae;n.Key=r.value.toLocaleString(),n.Value=r.label,e.LocationList.push(n)}},e=>this.onDataLoadFailed(e))}getStockLineShelf(e){e.ShelfList=[],e.shelfId=0,e.BinList=[],e.binId=0,e.locationId&&this.commonService.smartDropDownList("Shelf","ShelfId","Name","LocationId",e.locationId).subscribe(t=>{console.log(t);for(let r of t){var n=new ae;n.Key=r.value.toLocaleString(),n.Value=r.label,e.ShelfList.push(n)}},e=>this.onDataLoadFailed(e))}getStockLineBin(e){e.BinList=[],e.binId=0,e.shelfId&&this.commonService.smartDropDownList("Bin","BinId","Name","ShelfId",e.shelfId).subscribe(t=>{for(let r of t){var n=new ae;n.Key=r.value.toLocaleString(),n.Value=r.label,e.BinList.push(n)}},e=>this.onDataLoadFailed(e))}getCustomers(){this.commonService.smartDropDownList("Customer","CustomerId","Name").subscribe(e=>{for(let n of e){var t=new ae;t.Key=n.value.toLocaleString(),t.Value=n.label,this.CustomerList.push(t)}},e=>this.onDataLoadFailed(e))}getVendors(){this.commonService.smartDropDownList("Vendor","VendorId","VendorName").subscribe(e=>{for(let n of e){var t=new ae;t.Key=n.value.toLocaleString(),t.Value=n.label,this.VendorList.push(t)}},e=>this.onDataLoadFailed(e))}getCompanyList(){this.commonService.smartDropDownList("LegalEntity","LegalEntityId","Name").subscribe(e=>{for(let n of e){var t=new ae;t.Key=n.value.toLocaleString(),t.Value=n.label,this.CompanyList.push(t)}},e=>this.onDataLoadFailed(e))}getManufacturers(){this.ManufacturerList=[],this.commonService.smartDropDownList("Manufacturer","ManufacturerId","Name").subscribe(e=>{for(let n of e){var t=new ae;t.Key=n.value.toLocaleString(),t.Value=n.label,this.ManufacturerList.push(t)}},e=>this.onDataLoadFailed(e))}onSerialNumberNotProvided(e){e.isDisabledSNboxes=!e.isDisabledSNboxes,e.serialNumber="",e.serialNumberNotProvided=!e.serialNumberNotProvided}onChangeTimeLife(e){e.timeLifeList[e.currentTLIndex].timeLifeDraftCyclesId=0,e.timeLifeList[e.currentTLIndex].purchaseOrderId=e.purchaseOrderId,e.timeLifeList[e.currentTLIndex].purchaseOrderPartRecordId=e.purchaseOrderPartRecordId,e.timeLifeList[e.currentTLIndex].cyclesRemainingHrs=null,e.timeLifeList[e.currentTLIndex].cyclesRemainingMin=null,e.timeLifeList[e.currentTLIndex].cyclesSinceInspectionHrs=null,e.timeLifeList[e.currentTLIndex].cyclesSinceInspectionMin=null,e.timeLifeList[e.currentTLIndex].cyclesSinceNewHrs=null,e.timeLifeList[e.currentTLIndex].cyclesSinceNewMin=null,e.timeLifeList[e.currentTLIndex].cyclesSinceOVHHrs=null,e.timeLifeList[e.currentTLIndex].cyclesSinceOVHMin=null,e.timeLifeList[e.currentTLIndex].cyclesSinceRepairHrs=null,e.timeLifeList[e.currentTLIndex].cyclesSinceRepairMin=null,e.timeLifeList[e.currentTLIndex].timeRemainingHrs=null,e.timeLifeList[e.currentTLIndex].timeRemainingMin=null,e.timeLifeList[e.currentTLIndex].timeSinceInspectionHrs=null,e.timeLifeList[e.currentTLIndex].timeSinceInspectionMin=null,e.timeLifeList[e.currentTLIndex].timeSinceNewHrs=null,e.timeLifeList[e.currentTLIndex].timeSinceNewMin=null,e.timeLifeList[e.currentTLIndex].timeSinceOVHHrs=null,e.timeLifeList[e.currentTLIndex].timeSinceOVHMin=null,e.timeLifeList[e.currentTLIndex].timeSinceRepairHrs=null,e.timeLifeList[e.currentTLIndex].timeSinceRepairMin=null,e.timeLifeList[e.currentTLIndex].lastSinceNewHrs=null,e.timeLifeList[e.currentTLIndex].lastSinceNewMin=null,e.timeLifeList[e.currentTLIndex].lastSinceInspectionHrs=null,e.timeLifeList[e.currentTLIndex].lastSinceInspectionMin=null,e.timeLifeList[e.currentTLIndex].lastSinceOVHHrs=null,e.timeLifeList[e.currentTLIndex].lastSinceOVHMin=null}onSubmitToReceive(){let e=this.validatePage();if(e.length>0)return void this.alertService.showMessage(this.pageTitle,e[0],P.d.error);let t=this.extractAllAllStockLines();this.shippingService.receiveParts(t).subscribe(e=>{this.alertService.showMessage(this.pageTitle,"Parts Received successfully.",P.d.success),this.route.navigateByUrl("/receivingmodule/receivingpages/app-edit-po?purchaseOrderId="+this.receivingService.purchaseOrderId)},e=>{var t="";t=e.error.constructor==Array?e.error[0].errorMessage:e.error.Message,this.alertService.showMessage(this.pageTitle,t,P.d.error)})}extractAllAllStockLines(){let e=[],t=this.purchaseOrderData.purchaseOderPart.filter(e=>e.quantityActuallyReceived>0);for(let r of t){let t=new ie;t.itemMasterId=r.itemMaster.itemMasterId,t.isSerialized=r.itemMaster.isSerialized,t.purchaseOrderPartRecordId=r.purchaseOrderPartRecordId,t.stockLines=r.stocklineListObj,t.quantityActuallyReceived=r.quantityActuallyReceived?parseInt(r.quantityActuallyReceived.toString()):null,t.quantityRejected=r.quantityRejected,t.isSameDetailsForAllParts=!!r.isSameDetailsForAllParts&&r.isSameDetailsForAllParts,t.timeLife=this.getTimeLife(r.timeLifeList,r.purchaseOrderPartRecordId),e.push(t)}for(let r of t){for(let e of r.stocklineListObj)if(e.createdBy=this.userName,e.updatedBy=this.userName,e.tagType&&e.tagType.length>0){for(let t=0;t<e.tagType.length;t++)e.tagType[t]=Object(j.g)("label","value",e.tagType[t],this.TagTypeList);e.tagType=e.tagType.join()}else e.tagType="";if(r.isSameDetailsForAllParts){var n=Object.assign({},r.stocklineListObj[r.currentSLIndex]);for(let e of r.stocklineListObj)e=n}}return e}getTimeLife(e,t){let n=[];return n=e.map(e=>({cyclesRemaining:(e.cyclesRemainingHrs?e.cyclesRemainingHrs:"00")+":"+(e.cyclesRemainingMin?e.cyclesRemainingMin:"00"),timeRemaining:(e.timeRemainingHrs?e.timeRemainingHrs:"00")+":"+(e.timeRemainingMin?e.timeRemainingMin:"00"),cyclesSinceNew:(e.cyclesSinceNewHrs?e.cyclesSinceNewHrs:"00")+":"+(e.cyclesSinceNewMin?e.cyclesSinceNewMin:"00"),timeSinceNew:(e.timeSinceNewHrs?e.timeSinceNewHrs:"00")+":"+(e.timeSinceNewMin?e.timeSinceNewMin:"00"),lastSinceNew:(e.lastSinceNewHrs?e.lastSinceNewHrs:"00")+":"+(e.lastSinceNewMin?e.lastSinceNewMin:"00"),cyclesSinceOVH:(e.cyclesSinceOVHHrs?e.cyclesSinceOVHHrs:"00")+":"+(e.cyclesSinceOVHMin?e.cyclesSinceOVHMin:"00"),timeSinceOVH:(e.timeSinceOVHHrs?e.timeSinceOVHHrs:"00")+":"+(e.timeSinceOVHMin?e.timeSinceOVHMin:"00"),lastSinceOVH:(e.lastSinceOVHHrs?e.lastSinceOVHHrs:"00")+":"+(e.lastSinceOVHMin?e.lastSinceOVHMin:"00"),cyclesSinceInspection:(e.cyclesSinceInspectionHrs?e.cyclesSinceInspectionHrs:"00")+":"+(e.cyclesSinceInspectionMin?e.cyclesSinceInspectionMin:"00"),timeSinceInspection:(e.timeSinceInspectionHrs?e.timeSinceInspectionHrs:"00")+":"+(e.timeSinceInspectionMin?e.timeSinceInspectionMin:"00"),lastSinceInspection:(e.lastSinceInspectionHrs?e.lastSinceInspectionHrs:"00")+":"+(e.lastSinceInspectionMin?e.lastSinceInspectionMin:"00"),cyclesSinceRepair:(e.cyclesSinceRepairHrs?e.cyclesSinceRepairHrs:"00")+":"+(e.cyclesSinceRepairMin?e.cyclesSinceRepairMin:"00"),timeSinceRepair:(e.timeSinceRepairHrs?e.timeSinceRepairHrs:"00")+":"+(e.timeSinceRepairMin?e.timeSinceRepairMin:"00"),purchaseOrderPartRecordId:t})),n}validatePage(){let e=this.purchaseOrderData.purchaseOderPart.filter(e=>e.quantityActuallyReceived>0),t=[];for(let s of e){0==s.itemMaster.glAccountId&&t.push("Please select GL Account of Part No. "+s.itemMaster.partNumber),null!=s.conditionId&&0!=s.conditionId||t.push("Please select Condition of Part No. "+s.itemMaster.partNumber),(null==s.quantityRejected||null!=s.quantityRejected&&""==s.quantityRejected.toString())&&t.push("Please enter Quantity Rejected of Part No."+s.itemMaster.partNumber),null!=s.stocklineListObj&&0!=s.stocklineListObj.length||t.push("No part received for Part No."+s.itemMaster.PartNumber),null!=s.stocklineListObj&&0!=s.stocklineListObj.length||t.push("No part received for shippingViaId"+s.itemMaster.shippingViaId),null!=s.stocklineListObj&&0!=s.stocklineListObj.length||t.push("No part received for shipping Reference"+s.itemMaster.shippingReference);var n=" of Part No. "+s.itemMaster.partNumber;if(null!=s.stocklineListObj&&s.stocklineListObj.length>0)for(var r=0;r<s.stocklineListObj.length;r++)if(s.stocklineListObj[r].gLAccountId=s.itemMaster.glAccountId,s.stocklineListObj[r].conditionId=s.conditionId,s.stocklineListObj[r].quantityRejected=Number(s.quantityRejected),s.stocklineListObj[r].isSerialized=null!=s.itemMaster.isSerialized&&s.itemMaster.isSerialized,s.stocklineListObj[r].isPMA=s.itemMaster.pma,s.stocklineListObj[r].isDER=s.itemMaster.der,s.stocklineListObj[r].purchaseOrderExtendedCost=null==s.stocklineListObj[r].purchaseOrderExtendedCost||""==s.stocklineListObj[r].purchaseOrderExtendedCost.toString()?0:s.stocklineListObj[r].purchaseOrderExtendedCost,(null==s.stocklineListObj[r].purchaseOrderUnitCost||null!=s.stocklineListObj[r].purchaseOrderUnitCost&&""==s.stocklineListObj[r].purchaseOrderUnitCost.toString())&&t.push("Please enter Unit Cost in Receiving Qty - "+(r+1).toString()+n),null!=s.stocklineListObj[r].companyId&&0!=s.stocklineListObj[r].companyId||t.push("Please select Company in Receiving Qty - "+(r+1).toString()+n),null!=s.stocklineListObj[r].siteId&&0!=s.stocklineListObj[r].siteId||t.push("Please select Site in Receiving Qty - "+(r+1).toString()+n),null!=s.stocklineListObj[r].shippingViaId&&0!=s.stocklineListObj[r].shippingViaId||t.push("Please select shipping Via in Receiving Qty - "+(r+1).toString()+n),null!=s.stocklineListObj[r].shippingReference&&""!=s.stocklineListObj[r].shippingReference||t.push("Please select shipping Reference in Receiving Qty - "+(r+1).toString()+n),1==s.itemMaster.isSerialized&&(s.stocklineListObj[r].serialNumber=null!=s.stocklineListObj[r].serialNumber?s.stocklineListObj[r].serialNumber.trim():"",s.stocklineListObj[r].serialNumberNotProvided||null!=s.stocklineListObj[r].serialNumber&&""!=s.stocklineListObj[r].serialNumber||t.push("Please enter Serial Number in Receiving Qty - "+(r+1).toString()+n),!s.stocklineListObj[r].serialNumberNotProvided))for(var i=r+1;i<s.stocklineListObj.length;i++)s.stocklineListObj[r].serialNumberNotProvided||s.stocklineListObj[i].serialNumber!=s.stocklineListObj[r].serialNumber||t.push("Duplicate Serial Number is entered in Stock Line Page "+(r+1).toString()+" and Page "+(i+1).toString());if(null!=s.timeLifeList&&s.timeLifeList.length>0)for(r=0;r<s.timeLifeList.length;r++){var a=s.timeLifeList[r];1!=a.detailsNotProvided&&null==a.cyclesRemainingHrs&&null==a.cyclesRemainingMin&&null==a.cyclesSinceNewHrs&&null==a.cyclesSinceNewMin&&null==a.cyclesSinceOVHHrs&&null==a.cyclesSinceOVHMin&&null==a.cyclesSinceInspectionHrs&&null==a.cyclesSinceInspectionMin&&null==a.cyclesSinceRepairHrs&&null==a.cyclesSinceRepairMin&&null==a.timeRemainingHrs&&null==a.timeRemainingMin&&null==a.timeSinceNewHrs&&null==a.timeSinceNewMin&&null==a.timeSinceOVHHrs&&null==a.timeSinceOVHMin&&null==a.timeSinceInspectionHrs&&null==a.timeSinceInspectionMin&&null==a.timeSinceRepairHrs&&null==a.timeSinceRepairMin&&null==a.lastSinceNewHrs&&null==a.lastSinceNewMin&&null==a.lastSinceOVHHrs&&null==a.lastSinceOVHMin&&null==a.lastSinceInspectionHrs&&null==a.lastSinceInspectionMin&&t.push("Please enter atleast one field in Time Life Page - "+(r+1).toString()+n)}}return t}onObtainFromChange(e,t){t.obtainFrom="",t.obtainFromObject={},"1"===e.target.value&&(this.obtainfromcustomer=!0,this.obtainfromother=!1,this.obtainfromvendor=!1),"2"===e.target.value&&(this.obtainfromother=!0,this.obtainfromcustomer=!1,this.obtainfromvendor=!1),"3"===e.target.value&&(this.obtainfromvendor=!0,this.obtainfromcustomer=!1,this.obtainfromother=!1)}onOwnerChange(e,t){t.owner="",t.ownerObject={},"1"===e.target.value&&(this.ownercustomer=!0,this.ownerother=!1,this.ownervendor=!1),"2"===e.target.value&&(this.ownerother=!0,this.ownercustomer=!1,this.ownervendor=!1),"3"===e.target.value&&(this.ownervendor=!0,this.ownercustomer=!1,this.ownerother=!1)}onTraceableToChange(e,t){t.traceableTo="",t.traceableToObject={},"1"===e.target.value&&(this.traceabletocustomer=!0,this.traceabletoother=!1,this.traceabletovendor=!1),"2"===e.target.value&&(this.traceabletoother=!0,this.traceabletocustomer=!1,this.traceabletovendor=!1),"3"===e.target.value&&(this.traceabletovendor=!0,this.traceabletocustomer=!1,this.traceabletoother=!1)}addPageCustomer(){this.route.navigateByUrl("/customersmodule/customerpages/app-customer-general-information")}onFilter(e,t,n){if(t.filteredRecords=[],1==n)var r=this.CustomerList;else if(2==n)r=this.VendorList;else if(9==n)r=this.CompanyList;if(null!=r&&r.length>0)for(let i of r)null!=i.Value&&0==i.Value.toLowerCase().indexOf(e.query.toLowerCase())&&t.filteredRecords.push(i)}onObtainSelect(e){e.obtainFrom=e.obtainFromObject.Key}onOwnerSelect(e){e.owner=e.ownerObject.Key}onTraceableToSelect(e){e.traceableTo=e.traceableToObject.Key}getConditionList(){this.commonService.smartDropDownList("Condition","ConditionId","Description").subscribe(e=>{for(let n of e){var t=new ae;t.Key=n.value.toLocaleString(),t.Value=n.label,this.ConditionList.push(t)}},e=>this.onDataLoadFailed(e))}getAllGLAccount(){this.commonService.getGlAccountList().subscribe(e=>{for(let n of e){var t=new ae;t.Key=n.value.toLocaleString(),t.Value=n.label,this.GLAccountList.push(t)}})}toggleSameDetailsForAllParts(e){if(e.isSameDetailsForAllParts=!e.isSameDetailsForAllParts,e.isSameDetailsForAllParts)for(var t=e.currentSLIndex;t<e.stocklineListObj.length;t++){var n=Object.assign({},e.stocklineListObj[e.currentSLIndex]);e.stocklineListObj[t]=n}}isCheckedSameDetailsForAllParts(e){if(e.isSameDetailsForAllParts)for(var t=e.currentSLIndex;t<e.stocklineListObj.length;t++){var n=Object.assign({},e.stocklineListObj[e.currentSLIndex]);e.stocklineListObj[t]=n}}togglePartSerialized(e){null==e.itemMaster.isSerialized&&e.itemMaster.isSerialized,this.itemmaster.updateItemMasterSerialized(e.itemMasterId,e.itemMaster.isSerialized).subscribe(t=>{e.stocklineListObj[this.currentSLIndex];var n=this.purchaseOrderData.purchaseOderPart.filter(t=>t.itemMaster.partNumber==e.itemMaster.partNumber&&!t.itemMaster.isParent);for(let r of n)r.itemMaster.isSerialized=e.itemMaster.isSerialized;this.alertService.showMessage(this.pageTitle,"Part "+e.itemMaster.partNumber+" IsSerialized feature "+(e.itemMaster.isSerialized?"enabled":"disabled")+" successfully.",P.d.success)},t=>{e.itemMaster.isSerialized=!e.itemMaster.isSerialized,this.alertService.showMessage(this.pageTitle,"Something went wrong while updating Item Master",P.d.error)})}togglePartTimeLife(e,t){if((null==e.itemMaster.isSerialized||0==e.itemMaster.isSerialized)&&1==e.itemMaster.isTimeLife)return e.itemMaster.isTimeLife=!1,this.alertService.showMessage(this.pageTitle,"Part is not serialized, please make the part serialzed before making it timeLife.",P.d.error),!1;this.itemmaster.updateItemMasterTimeLife(e.itemMasterId,e.itemMaster.isTimeLife).subscribe(t=>{if(e.timeLifeList=[],e.quantityActuallyReceived&&1==e.itemMaster.isTimeLife){e.currentSLIndex=0,e.currentSERIndex=0,e.currentTLIndex=0;for(var n=0;n<e.quantityActuallyReceived;n++){let t=new ne;t.timeLifeDraftCyclesId=0,t.purchaseOrderId=e.purchaseOrderId,t.purchaseOrderPartRecordId=e.purchaseOrderPartRecordId,t.cyclesRemainingHrs=null,t.cyclesRemainingMin=null,t.cyclesSinceInspectionHrs=null,t.cyclesSinceInspectionMin=null,t.cyclesSinceNewHrs=null,t.cyclesSinceNewMin=null,t.cyclesSinceOVHHrs=null,t.cyclesSinceOVHMin=null,t.cyclesSinceRepairHrs=null,t.cyclesSinceRepairMin=null,t.timeRemainingHrs=null,t.timeRemainingMin=null,t.timeSinceInspectionHrs=null,t.timeSinceInspectionMin=null,t.timeSinceNewHrs=null,t.timeSinceNewMin=null,t.timeSinceOVHHrs=null,t.timeSinceOVHMin=null,t.timeSinceRepairHrs=null,t.timeSinceRepairMin=null,t.lastSinceNewHrs=null,t.lastSinceNewMin=null,t.lastSinceInspectionHrs=null,t.lastSinceInspectionMin=null,t.lastSinceOVHHrs=null,t.lastSinceOVHMin=null,t.detailsNotProvided=!1,e.timeLifeList.push(t)}}var r=this.purchaseOrderData.purchaseOderPart.filter(t=>t.itemMaster.partNumber==e.itemMaster.partNumber&&!t.itemMaster.isParent);for(let i of r)i.itemMaster.isTimeLife=e.itemMaster.isTimeLife;this.alertService.showMessage(this.pageTitle,"Part "+e.itemMaster.partNumber+" IsTimeLife feature "+(e.itemMaster.isTimeLife?"enabled":"disabled")+" successfully.",P.d.success)},t=>{e.itemMaster.isSerialized=!e.itemMaster.isSerialized,this.alertService.showMessage(this.pageTitle,"Something went wrong while update Item Master",P.d.error)}),this.receiving_po_header=!1}quantityRejectedFocusOut(e,t){if(""==e.target.value)return e.target.value="0",!0}quantityRejectedFocusIn(e,t){if("0"==e.target.value)return e.target.value="",!0}calculateExtendedCost(e,t){if(null!=t.stocklineListObj[t.currentSLIndex].purchaseOrderUnitCost&&""!=t.stocklineListObj[t.currentSLIndex].purchaseOrderUnitCost){if(t.itemMaster.isSerialized)t.stocklineListObj[t.currentSLIndex].purchaseOrderExtendedCost=t.stocklineListObj[t.currentSLIndex].purchaseOrderUnitCost;else{const e=t.stocklineListObj[t.currentSLIndex].purchaseOrderUnitCost?parseFloat(t.stocklineListObj[t.currentSLIndex].purchaseOrderUnitCost.toString().replace(/\,/g,"")):0;t.stocklineListObj[t.currentSLIndex].purchaseOrderExtendedCost=e*t.quantityActuallyReceived}t.stocklineListObj[t.currentSLIndex].purchaseOrderUnitCost&&(t.stocklineListObj[t.currentSLIndex].purchaseOrderUnitCost=Object(j.b)(t.stocklineListObj[t.currentSLIndex].purchaseOrderUnitCost,2)),t.stocklineListObj[t.currentSLIndex].purchaseOrderExtendedCost&&(t.stocklineListObj[t.currentSLIndex].purchaseOrderExtendedCost=Object(j.b)(t.stocklineListObj[t.currentSLIndex].purchaseOrderUnitCost,2))}}moveByKey(e,t){e.ctrlKey&&40==e.keyCode&&this.moveStockLinePage("stockline",t.currentSERIndex+1,t),e.ctrlKey&&38==e.keyCode&&this.moveStockLinePage("stockline",t.currentSERIndex-1,t)}getTagType(){this.commonService.smartDropDownList("TagType","TagTypeId","Name").subscribe(e=>{this.TagTypeList=e})}onChangeTimeLifeMin(e,t,n){t.timeLifeList[n][e]>59&&(t.timeLifeList[n][e]=0,this.alertService.showMessage(this.pageTitle,"Minutes can't be greater than 59",P.d.error))}};Oe.ctorParameters=()=>[{type:X.a},{type:J.a},{type:Y.a},{type:te.a},{type:ee.a},{type:B.a},{type:Z.a},{type:ye.a},{type:$.a},{type:me.a},{type:xe.a},{type:Se.a},{type:R.c},{type:T.Router},{type:fe.a},{type:se.a},{type:Q.a},{type:be.a},{type:Le.a},{type:P.b},{type:Ie.a},{type:oe.a},{type:ue},{type:T.ActivatedRoute},{type:ke},{type:A.a},{type:he.a},{type:E.a},{type:y.DatePipe}],Oe=r.b([Object(i.Component)({selector:"app-receivng-po",template:r.c(n("YJ2Z")).default,providers:[y.DatePipe],styles:[r.c(n("ZfrE")).default]})],Oe);let De=class{constructor(){}};De=r.b([Object(i.Component)({selector:"app-repair-order",template:r.c(n("W/Kn")).default,styles:[r.c(n("pQFC")).default]})],De);let Te=class{constructor(e,t,n,r,i,a,s,o,l,c,d,p,u,m,h){this.receivingService=e,this.priority=t,this.vendorService=n,this.conditionService=r,this.siteService=i,this.binservice=a,this.legalEntityService=s,this.manufacturerService=o,this.route=l,this.alertService=c,this.uomService=d,this.glAccountService=p,this.shippingService=u,this._actRoute=m,this.commonService=h,this.allManufacturerInfo=[],this.allconditioninfo=[],this.localData=[],this.partBulist=[],this.partDepartmentList=[],this.partDivisionlist=[],this.allPriorityInfo=[],this.toggle_epo_header=!1,this.obtainfromcustomer=!1,this.obtainfromother=!1,this.obtainfromvendor=!1,this.ownercustomer=!1,this.ownerother=!1,this.ownervendor=!1,this.traceabletocustomer=!1,this.traceabletoother=!1,this.traceabletovendor=!1,this.rpoEditPF=!0,this.rpoEditCF=!0,this.purchaseOrderData=[],this.pageTitle="Edit Receieve RO",this.managementStructureHierarchy=[],this.selectedManagementStructure=[],this.ManufacturerList=[],this.headerManagementStructure={},this.isSpinnerVisible=!0,this.localPoData=this.vendorService.selectedPoCollection,this.editPoData=this.localData[0],this.currentDate=new Date}ngOnInit(){this.purchaseOrderId=this._actRoute.snapshot.queryParams.purchaseorderid,this.receivingService.getReceivingPOHeaderById(this.purchaseOrderId).subscribe(e=>{console.log(e),this.purchaseOrderHeaderData=e,this.purchaseOrderHeaderData.openDate=this.purchaseOrderHeaderData.openDate?new Date(this.purchaseOrderHeaderData.openDate):"",this.purchaseOrderHeaderData.closedDate=this.purchaseOrderHeaderData.closedDate?new Date(this.purchaseOrderHeaderData.closedDate):"",this.purchaseOrderHeaderData.dateApproved=this.purchaseOrderHeaderData.dateApproved?new Date(this.purchaseOrderHeaderData.dateApproved):"",this.purchaseOrderHeaderData.needByDate=this.purchaseOrderHeaderData.needByDate?new Date(this.purchaseOrderHeaderData.needByDate):"",this.getManagementStructureCodes(this.purchaseOrderHeaderData.managementStructureId)}),this.getStockDetailsOnLoad(),this.localData=[{partNumber:"PN123"}]}getStockDetailsOnLoad(){this.receivingService.getReceivingPOPartsForViewById(this.purchaseOrderId).subscribe(e=>{this.purchaseOrderData=e.map(e=>Object.assign({},e,{unitCost:e.unitCost?Object(j.b)(e.unitCost,2):"",extendedCost:e.extendedCost?Object(j.b)(e.extendedCost,2):"",stockLine:this.getStockLineDetails(e.stockLine),timeLife:this.getTimeLifeDetails(e.timeLife)}));var t=this.purchaseOrderData.filter(e=>1==e.isParent);for(let r of t){var n=this.purchaseOrderData.filter(e=>!e.isParent&&e.itemMaster.partNumber==r.itemMaster.partNumber);if(n.length>0){r.hasChildren=!0,r.quantityOrdered=0;for(let e of n)r.stockLineCount+=e.stockLineCount,e.managementStructureId=r.managementStructureId,e.managementStructureName=r.managementStructureName,r.quantityOrdered+=e.quantityOrdered}else r.hasChildren=!1}for(let r of this.purchaseOrderData)r.isEnabled=!1,r.conditionId=0,this.commonService.getManagementStructureCodes(r.managementStructureId).subscribe(e=>{e.Level1&&(r.companyText=e.Level1),e.Level2&&(r.businessUnitText=e.Level2),e.Level3&&(r.divisionText=e.Level3),e.Level4&&(r.departmentText=e.Level4)}),null!=r.stockLine&&r.stockLine.map(e=>{this.commonService.getManagementStructureCodes(e.managementStructureEntityId).subscribe(t=>{t.Level1&&(e.companyText=t.Level1),t.Level2&&(e.businessUnitText=t.Level2),t.Level3&&(e.divisionText=t.Level3),t.Level4&&(e.departmentText=t.Level4)})});this.getStatus(),this.isSpinnerVisible=!1},e=>{this.alertService.showMessage(this.pageTitle,"Something went wrong while loading the Purchase Order detail",P.d.error)})}getStockLineDetails(e){return e=e.map(e=>Object.assign({},e,{purchaseOrderUnitCost:e.purchaseOrderUnitCost?Object(j.b)(e.purchaseOrderUnitCost,2):"0.00",purchaseOrderExtendedCost:e.purchaseOrderExtendedCost?Object(j.b)(e.purchaseOrderExtendedCost,2):"0.00"}))}getTimeLifeDetails(e){return e=e.map(e=>({cyclesRemaining:e.cyclesRemaining?e.cyclesRemaining:"00:00",cyclesSinceInspection:e.cyclesSinceInspection?e.cyclesSinceInspection:"00:00",cyclesSinceNew:e.cyclesSinceNew?e.cyclesSinceNew:"00:00",cyclesSinceOVH:e.cyclesSinceOVH?e.cyclesSinceOVH:"00:00",cyclesSinceRepair:e.cyclesSinceRepair?e.cyclesSinceRepair:"00:00",timeRemaining:e.timeRemaining?e.timeRemaining:"00:00",timeSinceInspection:e.timeSinceInspection?e.timeSinceInspection:"00:00",timeSinceNew:e.timeSinceNew?e.timeSinceNew:"00:00",timeSinceOVH:e.timeSinceOVH?e.timeSinceOVH:"00:00",timeSinceRepair:e.timeSinceRepair?e.timeSinceRepair:"00:00",lastSinceInspection:e.lastSinceInspection?e.lastSinceInspection:"00:00",lastSinceNew:e.lastSinceNew?e.lastSinceNew:"00:00",lastSinceOVH:e.lastSinceOVH?e.lastSinceOVH:"00:00"}))}getManagementStructureCodes(e){this.commonService.getManagementStructureCodes(e).subscribe(e=>{e.Level1&&(this.headerManagementStructure.level1=e.Level1),e.Level2&&(this.headerManagementStructure.level2=e.Level2),e.Level3&&(this.headerManagementStructure.level3=e.Level3),e.Level4&&(this.headerManagementStructure.level4=e.Level4)})}getManagementStructure(){return this.legalEntityService.getManagemententity()}getManagementStructureHierarchy(e,t,n){var r=this.managementStructure.filter((function(t){return t.managementStructureId==e}));if(null!=r&&r.length>0){var i=r[0];if(null!=i.parentId){var a=this.managementStructure.filter((function(e){return e.parentId==i.parentId}));null!=t&&t.push(a),null!=n&&n.push(i),this.getManagementStructureHierarchy(i.parentId,t,n)}else{a=this.managementStructure.filter((function(e){return null==e.parentId}));null!=t&&t.push(a),null!=n&&n.push(i)}}}getStatus(){this.poStatus=[],this.commonService.smartDropDownList("POStatus","POStatusId","Description").subscribe(e=>{this.poStatus=e,this.poStatus=this.poStatus.sort((e,t)=>e.value>t.value?1:t.value>e.value?-1:0)})}getPartBusinessUnitList(e){e.managementStructureId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.companyId}));e.BusinessUnitList=[],e.DivisionList=[],e.DepartmentList=[],e.businessUnitId=0,e.divisionId=0,e.departmentId=0;for(let r of t){var n=new ae;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.BusinessUnitList.push(n)}}getPartDivision(e){null!=e.businessUnitId&&e.businessUnitId>0?e.managementStructureId=e.businessUnitId:e.managementStructureId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.businessUnitId}));e.DivisionList=[],e.DepartmentList=[],e.divisionId=0,e.departmentId=0;for(let r of t){var n=new ae;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DivisionList.push(n)}}getPartDepartment(e){null!=e.divisionId&&e.divisionId>0?e.managementStructureId=e.divisionId:e.managementStructureId=e.businessUnitId;var t=this.managementStructure.filter((function(t){return t.parentId==e.divisionId}));e.DepartmentList=[],e.departmentId=0;for(let r of t){var n=new ae;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DepartmentList.push(n)}}setPartDepartmentManagementStructureId(e){null!=e.departmentId&&e.departmentId>0?e.managementStructureId=e.departmentId:e.managementStructureId=e.divisionId}getStockLineBusinessUnitList(e){e.managementStructureEntityId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.companyId}));e.BusinessUnitList=[],e.DivisionList=[],e.DepartmentList=[],e.businessUnitId=0,e.divisionId=0,e.departmentId=0;for(let r of t){var n=new ae;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.BusinessUnitList.push(n)}}getStockLineDivision(e){null!=e.businessUnitId&&e.businessUnitId>0?e.managementStructureEntityId=e.businessUnitId:e.managementStructureEntityId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.businessUnitId}));e.DivisionList=[],e.DepartmentList=[],e.divisionId=0,e.departmentId=0;for(let r of t){var n=new ae;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DivisionList.push(n)}}getStockLineDepartment(e){null!=e.divisionId&&e.divisionId>0?e.managementStructureEntityId=e.divisionId:e.managementStructureEntityId=e.businessUnitId;var t=this.managementStructure.filter((function(t){return t.parentId==e.divisionId}));e.DepartmentList=[],e.departmentId=0;for(let r of t){var n=new ae;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DepartmentList.push(n)}}setStockLineDepartmentManagementStructureId(e){null!=e.departmentId&&e.departmentId>0?e.managementStructureEntityId=e.departmentId:e.managementStructureEntityId=e.divisionId}getStockLineSite(e,t){e.SiteList=[],e.WareHouseList=[],e.LocationList=[],e.ShelfList=[],e.BinList=[],t||(e.siteId=0,e.warehouseId=0,e.locationId=0,e.shelfId=0,e.binId=0);for(let r of this.SiteList){var n=new ae;n.Key=r.siteId.toLocaleString(),n.Value=r.name,e.SiteList.push(n)}}getStockLineWareHouse(e,t){e.WareHouseList=[],e.LocationList=[],e.ShelfList=[],e.BinList=[],t||(e.warehouseId=0,e.locationId=0,e.shelfId=0,e.binId=0),this.binservice.getWareHouseBySiteId(e.siteId).subscribe(t=>{for(let r of t){var n=new ae;n.Key=r.warehouseId.toLocaleString(),n.Value=r.warehouseName,e.WareHouseList.push(n)}},e=>this.onDataLoadFailed(e))}getStockLineLocation(e,t){e.LocationList=[],e.ShelfList=[],e.BinList=[],t||(e.locationId=0,e.shelfId=0,e.binId=0),this.binservice.getLocationByWareHouseId(e.warehouseId).subscribe(t=>{console.log(t);for(let r of t){var n=new ae;n.Key=r.locationId.toLocaleString(),n.Value=r.name,e.LocationList.push(n)}},e=>this.onDataLoadFailed(e))}getStockLineShelf(e,t){e.ShelfList=[],e.BinList=[],t||(e.shelfId=0,e.binId=0),this.binservice.getShelfByLocationId(e.locationId).subscribe(t=>{for(let r of t){var n=new ae;n.Key=r.shelfId.toLocaleString(),n.Value=r.name,e.ShelfList.push(n)}},e=>this.onDataLoadFailed(e))}getPartWareHouse(e){if(e.WareHouseList=[],e.LocationList=[],e.ShelfList=[],e.BinList=[],e.warehouseId=0,e.locationId=0,e.shelfId=0,e.binId=0,e.stockLine)for(var t of e.stockLine)t.siteId=e.siteId,t.warehouseId=0,t.locationId=0,t.shelfId=0,t.binId=0,t.WareHouseList=[],t.LocationList=[],t.ShelfList=[],t.BinList=[];this.binservice.getWareHouseBySiteId(e.siteId).subscribe(t=>{for(let i of t){var n=new ae;if(n.Key=i.warehouseId.toLocaleString(),n.Value=i.warehouseName,e.WareHouseList.push(n),e.stockLine)for(var r of e.stockLine)r.WareHouseList.push(n)}},e=>this.onDataLoadFailed(e))}getPartLocation(e){if(e.LocationList=[],e.ShelfList=[],e.BinList=[],e.locationId=0,e.shelfId=0,e.binId=0,e.stockLine)for(var t of e.stockLine)t.warehouseId=e.warehouseId,t.locationId=0,t.shelfId=0,t.binId=0,t.LocationList=[],t.ShelfList=[],t.BinList=[];this.binservice.getLocationByWareHouseId(e.warehouseId).subscribe(t=>{for(let i of t){var n=new ae;if(n.Key=i.locationId.toLocaleString(),n.Value=i.name,e.LocationList.push(n),e.stockLine)for(var r of e.stockLine)r.LocationList.push(n)}},e=>this.onDataLoadFailed(e))}getPartShelf(e){if(e.ShelfList=[],e.BinList=[],e.shelfId=0,e.binId=0,e.stockLine)for(var t of e.stockLine)t.locationId=e.locationId,t.shelfId=0,t.binId=0,t.ShelfList=[],t.BinList=[];this.binservice.getShelfByLocationId(e.locationId).subscribe(t=>{for(let i of t){var n=new ae;if(n.Key=i.shelfId.toLocaleString(),n.Value=i.name,e.ShelfList.push(n),e.stockLine)for(var r of e.stockLine)r.ShelfList.push(n)}},e=>this.onDataLoadFailed(e))}getPartBin(e){if(e.BinList=[],e.binId=0,e.stockLine)for(var t of e.stockLine)t.shelfId=e.shelfId,t.binId=0,t.BinList=[];this.binservice.getBinByShelfId(e.shelfId).subscribe(t=>{for(let r of t){var n=new ae;n.Key=r.binId.toLocaleString(),n.Value=r.name,e.BinList.push(n)}},e=>this.onDataLoadFailed(e))}setPartBinIdToStockline(e){if(e.stockLine)for(var t of e.stockLine)t.binId=e.binId}conditionChange(e){if(e.stockLine)for(var t of e.stockLine)t.conditionId=e.conditionId}getStockLineBin(e,t){e.BinList=[],t||(e.binId=0),this.binservice.getBinByShelfId(e.shelfId).subscribe(t=>{for(let r of t){var n=new ae;n.Key=r.binId.toLocaleString(),n.Value=r.name,e.BinList.push(n)}},e=>this.onDataLoadFailed(e))}calculateExtendedCost(e,t){null!=t.purchaseOrderUnitCost&&""!=t.purchaseOrderUnitCost&&(e.itemMaster.isSerialized?t.purchaseOrderExtendedCost=t.purchaseOrderUnitCost:t.purchaseOrderExtendedCost=t.purchaseOrderUnitCost*e.quantityActuallyReceived)}calculatePartExtendedCost(e){if(null!=e.unitCost&&""!=e.unitCost&&(e.itemMaster.isSerialized?e.extendedCost=e.unitCost:e.extendedCost=e.unitCost*e.quantityActuallyReceived,e.stockLine))for(var t of e.stockLine)t.purchaseOrderUnitCost=e.unitCost,t.purchaseOrderExtendedCost=e.extendedCost}onDataLoadFailed(e){this.isSpinnerVisible=!1}onObtainFromChange(e){"1"===e.target.value&&(this.obtainfromcustomer=!0,this.obtainfromother=!1,this.obtainfromvendor=!1),"2"===e.target.value&&(this.obtainfromother=!0,this.obtainfromcustomer=!1,this.obtainfromvendor=!1),"3"===e.target.value&&(this.obtainfromvendor=!0,this.obtainfromcustomer=!1,this.obtainfromother=!1)}onOwnerChange(e){"1"===e.target.value&&(this.ownercustomer=!0,this.ownerother=!1,this.ownervendor=!1),"2"===e.target.value&&(this.ownerother=!0,this.ownercustomer=!1,this.ownervendor=!1),"3"===e.target.value&&(this.ownervendor=!0,this.ownercustomer=!1,this.ownerother=!1)}onTraceableToChange(e){"1"===e.target.value&&(this.traceabletocustomer=!0,this.traceabletoother=!1,this.traceabletovendor=!1),"2"===e.target.value&&(this.traceabletoother=!0,this.traceabletocustomer=!1,this.traceabletovendor=!1),"3"===e.target.value&&(this.traceabletovendor=!0,this.traceabletocustomer=!1,this.traceabletoother=!1)}editStockLine(e){e.isEnabled=!e.isEnabled,e.quantityRejected=0}CreatePurchaseOrderStockline(){this.receivingService.createStockLine(this.purchaseOrderId).subscribe(e=>(this.alertService.showMessage(this.pageTitle,"Stockline created successfully.",P.d.success),this.route.navigate(["/receivingmodule/receivingpages/app-purchase-order"])),e=>this.onDataLoadFailed(e))}deleteStockLine(e){if(e&&1==confirm("Stock Line will be deleted after save/update. Do you still want to continue?"))return this.isSpinnerVisible=!0,this.receivingService.deleteStockLineDraft(e.stockLineDraftId,e.quantity).subscribe(e=>{this.getStockDetailsOnLoad()},e=>{this.isSpinnerVisible=!1}),void this.alertService.showMessage(this.pageTitle,"Stock Line removed from the list.",P.d.success)}};Te.ctorParameters=()=>[{type:te.a},{type:ee.a},{type:$.a},{type:Q.a},{type:Z.a},{type:X.a},{type:Y.a},{type:J.a},{type:T.Router},{type:P.b},{type:se.a},{type:oe.a},{type:ue},{type:T.ActivatedRoute},{type:A.a}],Te=r.b([Object(i.Component)({selector:"app-view-po",template:r.c(n("4IXD")).default,styles:[r.c(n("bcpz")).default]})],Te);class Ce{}class Ne{}class Fe{}class Re{contructor(e,t){this.Key=e,this.Value=t}}let He=class{constructor(e,t,n,r,i,a,s,o,l,c,d,p,u,m,h,g,v,b){this.receivingService=e,this.priority=t,this.vendorService=n,this.conditionService=r,this.siteService=i,this.binservice=a,this.legalEntityService=s,this.manufacturerService=o,this.route=l,this.alertService=c,this.uomService=d,this.glAccountService=p,this.shippingService=u,this._actRoute=m,this.commonService=h,this.customerService=g,this.localStorage=v,this.datePipe=b,this.allconditioninfo=[],this.localData=[],this.partBulist=[],this.partDepartmentList=[],this.partDivisionlist=[],this.allPriorityInfo=[],this.toggle_epo_header=!1,this.obtainfromcustomer=!1,this.obtainfromother=!1,this.obtainfromvendor=!1,this.ownercustomer=!1,this.ownerother=!1,this.ownervendor=!1,this.traceabletocustomer=!1,this.traceabletoother=!1,this.traceabletovendor=!1,this.rpoEditPF=!0,this.rpoEditCF=!0,this.repairOrderData=[],this.pageTitle="Edit Receieve RO",this.ConditionList=[],this.managementStructureHierarchy=[],this.selectedManagementStructure=[],this.ManufacturerList=[],this.headerManagementStructure={},this.CustomerList=[],this.VendorList=[],this.CompanyList=[],this.isROStockline=!1,this.legalEntityList=[],this.isSpinnerVisible=!0,this.moduleListDropdown=[],this.localPoData=this.vendorService.selectedPoCollection,this.editPoData=this.localData[0],this.currentDate=new Date}ngOnInit(){this.getLegalEntity(),this.loadModulesNamesForObtainOwnerTraceable(),this.repairOrderId=this._actRoute.snapshot.queryParams.repairorderid,this.receivingService.getReceivingROHeaderById(this.repairOrderId).subscribe(e=>{this.repairOrderHeaderData=e,this.repairOrderHeaderData.openDate=this.repairOrderHeaderData.openDate?new Date(this.repairOrderHeaderData.openDate):"",this.repairOrderHeaderData.closedDate=this.repairOrderHeaderData.closedDate?new Date(this.repairOrderHeaderData.closedDate):"",this.repairOrderHeaderData.dateApproved=this.repairOrderHeaderData.dateApproved?new Date(this.repairOrderHeaderData.dateApproved):"",this.repairOrderHeaderData.needByDate=this.repairOrderHeaderData.needByDate?new Date(this.repairOrderHeaderData.needByDate):"",this.getManagementStructureCodes(this.repairOrderHeaderData.managementStructureId)}),this.receivingService.getReceivingROPartsForEditById(this.repairOrderId).subscribe(e=>{this.repairOrderData=e.map(e=>Object.assign({},e,{stockLine:this.getStockLineDetails(e.stockLine),timeLife:this.getTimeLifeDetails(e.timeLife)}));const t=this.repairOrderData;for(var n=0;n<t.length;n++)if(t[n].stockLine.length>0){this.isROStockline=!0;break}var r=this.repairOrderData.filter(e=>1==e.isParent);for(let o of r){var i=this.repairOrderData.filter(e=>!e.isParent&&e.itemMaster.partNumber==o.itemMaster.partNumber);if(i.length>0){o.hasChildren=!0,o.quantityOrdered=0;for(let e of i)o.stockLineCount+=e.stockLineCount,e.managementStructureId=o.managementStructureId,e.managementStructureName=o.managementStructureName,o.quantityOrdered+=e.quantityOrdered}else o.hasChildren=!1}for(let o of this.repairOrderData){o.isEnabled=!1;let e=[],t=[];if(e.reverse(),t.reverse(),null!=e[0]&&e[0].length>0){o.companyId=t[0].managementStructureId,o.CompanyList=[];for(let t of e[0]){(s=new Re).Key=t.managementStructureId.toLocaleString(),s.Value=t.code,o.CompanyList.push(s)}}if(null!=e[1]&&e[1].length>0){o.businessUnitId=t[1].managementStructureId,o.BusinessUnitList=[];for(let t of e[1]){(s=new Re).Key=t.managementStructureId.toLocaleString(),s.Value=t.code,o.BusinessUnitList.push(s)}}if(null!=e[2]&&e[2].length>0){o.divisionId=t[2].managementStructureId,o.DivisionList=[];for(let t of e[2]){(s=new Re).Key=t.managementStructureId.toLocaleString(),s.Value=t.code,o.DivisionList.push(s)}}if(null!=e[3]&&e[3].length>0){o.departmentId=t[3].managementStructureId,o.DepartmentList=[];for(let t of e[3]){(s=new Re).Key=t.managementStructureId.toLocaleString(),s.Value=t.code,o.DepartmentList.push(s)}}if(null!=o.stockLine)for(var a of o.stockLine){a.obtainFromObject=new Re,a.ownerObject=new Re,a.traceableToObject=new Re,a.isEnabled=!1;let e=[],t=[];if(e.reverse(),t.reverse(),null!=e[0]&&e[0].length>0){a.companyId=t[0].managementStructureId,a.CompanyList=[];for(let t of e[0]){(s=new Re).Key=t.managementStructureId.toLocaleString(),s.Value=t.code,a.CompanyList.push(s)}}if(null!=e[1]&&e[1].length>0){a.businessUnitId=t[1].managementStructureId,a.BusinessUnitList=[];for(let t of e[1]){(s=new Re).Key=t.managementStructureId.toLocaleString(),s.Value=t.code,a.BusinessUnitList.push(s)}}if(null!=e[2]&&e[2].length>0){a.divisionId=t[2].managementStructureId,a.DivisionList=[];for(let t of e[2]){(s=new Re).Key=t.managementStructureId.toLocaleString(),s.Value=t.code,a.DivisionList.push(s)}}if(null!=e[3]&&e[3].length>0){a.departmentId=t[3].managementStructureId,a.DepartmentList=[];for(let t of e[3]){var s;(s=new Re).Key=t.managementStructureId.toLocaleString(),s.Value=t.code,a.DepartmentList.push(s)}}}if(o.CompanyList=this.legalEntityList,null!=o.stockLine)for(var a of o.stockLine)a.CompanyList=this.legalEntityList,this.getManagementStructureDetailsForStockline(a)}if(this.getManufacturers(),this.getStatus(),this.getConditionList(),this.getAllSite(),this.getShippingVia(),this.getCustomers(),this.getVendors(),this.getCompanyList(),this.isSpinnerVisible=!1,this.repairOrderData){for(let e=0;e<this.repairOrderData.length;e++)this.getCondIdPart(this.repairOrderData[e]),this.getSiteDetailsOnEdit(this.repairOrderData[e]);console.log(this.repairOrderData)}},e=>{this.alertService.showMessage(this.pageTitle,"Something went wrong while loading the Repair Order detail",P.d.error)}),this.localData=[{partNumber:"PN123"}]}parsedText(e){if(e){return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}}onAddNotes(){this.headerNotes=this.repairOrderHeaderData.notes}onSaveNotes(){this.repairOrderHeaderData.notes=this.headerNotes}onAddMemo(){this.headerMemo=this.repairOrderHeaderData.memo}onSaveMemo(){this.repairOrderHeaderData.memo=this.headerMemo}getLegalEntity(){this.commonService.getLegalEntityList().subscribe(e=>{this.legalEntityList=e})}loadModulesNamesForObtainOwnerTraceable(){this.commonService.getModuleListForObtainOwnerTraceable().subscribe(e=>{this.moduleListDropdown=e})}getStockLineDetails(e){return e=e.map(e=>Object.assign({},e,{repairOrderUnitCost:e.repairOrderUnitCost?Object(j.b)(e.repairOrderUnitCost,2):"0.00",repairOrderExtendedCost:e.repairOrderExtendedCost?Object(j.b)(e.repairOrderExtendedCost,2):"0.00"}))}getTimeLifeDetails(e){return e=e.map(e=>({stockLineDraftId:e.stockLineDraftId,timeLifeDraftCyclesId:e.timeLifeDraftCyclesId,cyclesRemainingHrs:e.cyclesRemaining?e.cyclesRemaining.split(":")[0]:null,cyclesRemainingMin:e.cyclesRemaining?e.cyclesRemaining.split(":")[1]:null,cyclesSinceInspectionHrs:e.cyclesSinceInspection?e.cyclesSinceInspection.split(":")[0]:null,cyclesSinceInspectionMin:e.cyclesSinceInspection?e.cyclesSinceInspection.split(":")[1]:null,cyclesSinceNewHrs:e.cyclesSinceNew?e.cyclesSinceNew.split(":")[0]:null,cyclesSinceNewMin:e.cyclesSinceNew?e.cyclesSinceNew.split(":")[1]:null,cyclesSinceOVHHrs:e.cyclesSinceOVH?e.cyclesSinceOVH.split(":")[0]:null,cyclesSinceOVHMin:e.cyclesSinceOVH?e.cyclesSinceOVH.split(":")[1]:null,cyclesSinceRepairHrs:e.cyclesSinceRepair?e.cyclesSinceRepair.split(":")[0]:null,cyclesSinceRepairMin:e.cyclesSinceRepair?e.cyclesSinceRepair.split(":")[1]:null,timeRemainingHrs:e.timeRemaining?e.timeRemaining.split(":")[0]:null,timeRemainingMin:e.timeRemaining?e.timeRemaining.split(":")[1]:null,timeSinceInspectionHrs:e.timeSinceInspection?e.timeSinceInspection.split(":")[0]:null,timeSinceInspectionMin:e.timeSinceInspection?e.timeSinceInspection.split(":")[1]:null,timeSinceNewHrs:e.timeSinceNew?e.timeSinceNew.split(":")[0]:null,timeSinceNewMin:e.timeSinceNew?e.timeSinceNew.split(":")[1]:null,timeSinceOVHHrs:e.timeSinceOVH?e.timeSinceOVH.split(":")[0]:null,timeSinceOVHMin:e.timeSinceOVH?e.timeSinceOVH.split(":")[1]:null,timeSinceRepairHrs:e.timeSinceRepair?e.timeSinceRepair.split(":")[0]:null,timeSinceRepairMin:e.timeSinceRepair?e.timeSinceRepair.split(":")[1]:null,lastSinceInspectionHrs:e.lastSinceInspection?e.lastSinceInspection.split(":")[0]:null,lastSinceInspectionMin:e.lastSinceInspection?e.lastSinceInspection.split(":")[1]:null,lastSinceNewHrs:e.lastSinceNew?e.lastSinceNew.split(":")[0]:null,lastSinceNewMin:e.lastSinceNew?e.lastSinceNew.split(":")[1]:null,lastSinceOVHHrs:e.lastSinceOVH?e.lastSinceOVH.split(":")[0]:null,lastSinceOVHMin:e.lastSinceOVH?e.lastSinceOVH.split(":")[1]:null}))}getCondIdPart(e){if(e.stockLine&&e.stockLine.length>0){const t=e.stockLine[0].conditionId;e.conditionId=t}}getSiteDetailsOnEdit(e){const t=e.stockLine[0];t&&(e.siteId=t.siteId?t.siteId:null,this.getPartWareHouse(e),e.warehouseId=t.warehouseId?t.warehouseId:null,this.getPartLocation(e),e.locationId=t.locationId?t.locationId:null,this.getPartShelf(e),e.shelfId=t.shelfId?t.shelfId:null,this.getPartBin(e),e.binId=t.binId?t.binId:null)}getManagementStructureCodes(e){this.commonService.getManagementStructureCodes(e).subscribe(e=>{e.Level1&&(this.headerManagementStructure.level1=e.Level1),e.Level2&&(this.headerManagementStructure.level2=e.Level2),e.Level3&&(this.headerManagementStructure.level3=e.Level3),e.Level4&&(this.headerManagementStructure.level4=e.Level4)})}getCustomers(){this.commonService.smartDropDownList("Customer","CustomerId","Name").subscribe(e=>{for(let n of e){var t=new Re;t.Key=n.value.toLocaleString(),t.Value=n.label,this.CustomerList.push(t)}for(let n of this.repairOrderData)for(let e of n.stockLine)null!=e.owner&&""!=e.owner&&1==e.ownerType&&(e.ownerObject=this.CustomerList.find(t=>t.Key==e.owner)),null!=e.obtainFrom&&""!=e.obtainFrom&&1==e.obtainFromType&&(e.obtainFromObject=this.CustomerList.find(t=>t.Key==e.obtainFrom)),null!=e.traceableTo&&""!=e.traceableTo&&1==e.traceableToType&&(e.traceableToObject=this.CustomerList.find(t=>t.Key==e.traceableTo))},e=>this.onDataLoadFailed(e))}getVendors(){this.commonService.smartDropDownList("Vendor","VendorId","VendorName").subscribe(e=>{for(let n of e){var t=new Re;t.Key=n.value.toLocaleString(),t.Value=n.label,this.VendorList.push(t)}for(let n of this.repairOrderData)for(let e of n.stockLine)null!=e.owner&&""!=e.owner&&2==e.ownerType&&(e.ownerObject=this.VendorList.find(t=>t.Key==e.owner)),null!=e.obtainFrom&&""!=e.obtainFrom&&2==e.obtainFromType&&(e.obtainFromObject=this.VendorList.find(t=>t.Key==e.obtainFrom)),null!=e.traceableTo&&""!=e.traceableTo&&2==e.traceableToType&&(e.traceableToObject=this.VendorList.find(t=>t.Key==e.traceableTo))},e=>this.onDataLoadFailed(e))}getCompanyList(){this.commonService.smartDropDownList("LegalEntity","LegalEntityId","Name").subscribe(e=>{for(let n of e){var t=new Re;t.Key=n.value.toLocaleString(),t.Value=n.label,this.CompanyList.push(t)}for(let n of this.repairOrderData)for(let e of n.stockLine)null!=e.owner&&""!=e.owner&&9==e.ownerType&&(e.ownerObject=this.CompanyList.find(t=>t.Key==e.owner)),null!=e.obtainFrom&&""!=e.obtainFrom&&9==e.obtainFromType&&(e.obtainFromObject=this.CompanyList.find(t=>t.Key==e.obtainFrom)),null!=e.traceableTo&&""!=e.traceableTo&&9==e.traceableToType&&(e.traceableToObject=this.CompanyList.find(t=>t.Key==e.traceableTo))},e=>this.onDataLoadFailed(e))}onFilter(e,t,n){if(t.filteredRecords=[],1==n)var r=this.CustomerList;else if(2==n)r=this.VendorList;else if(9==n)r=this.CompanyList;if(null!=r&&r.length>0)for(let i of r)null!=i.Value&&0==i.Value.toLowerCase().indexOf(e.query.toLowerCase())&&t.filteredRecords.push(i)}getManagementStructure(){return this.legalEntityService.getManagemententity()}getManagementStructureHierarchy(e,t,n){var r=this.managementStructure.filter((function(t){return t.managementStructureId==e}));if(null!=r&&r.length>0){var i=r[0];if(null!=i.parentId){var a=this.managementStructure.filter((function(e){return e.parentId==i.parentId}));null!=t&&t.push(a),null!=n&&n.push(i),this.getManagementStructureHierarchy(i.parentId,t,n)}else{a=this.managementStructure.filter((function(e){return null==e.parentId}));null!=t&&t.push(a),null!=n&&n.push(i)}}}getConditionList(){this.commonService.smartDropDownList("Condition","ConditionId","Description").subscribe(e=>{for(let n of e){var t=new Re;t.Key=n.value.toLocaleString(),t.Value=n.label,this.ConditionList.push(t)}},e=>this.onDataLoadFailed(e))}getStatus(){this.roStatus=[],this.commonService.smartDropDownList("ROStatus","ROStatusId","Description").subscribe(e=>{this.roStatus=e,this.roStatus=this.roStatus.sort((e,t)=>e.value>t.value?1:t.value>e.value?-1:0)})}getPartBusinessUnitList(e){e.managementStructureId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.companyId}));e.BusinessUnitList=[],e.DivisionList=[],e.DepartmentList=[],e.businessUnitId=0,e.divisionId=0,e.departmentId=0;for(let r of t){var n=new Re;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.BusinessUnitList.push(n)}}getPartDivision(e){null!=e.businessUnitId&&e.businessUnitId>0?e.managementStructureId=e.businessUnitId:e.managementStructureId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.businessUnitId}));e.DivisionList=[],e.DepartmentList=[],e.divisionId=0,e.departmentId=0;for(let r of t){var n=new Re;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DivisionList.push(n)}}getPartDepartment(e){null!=e.divisionId&&e.divisionId>0?e.managementStructureId=e.divisionId:e.managementStructureId=e.businessUnitId;var t=this.managementStructure.filter((function(t){return t.parentId==e.divisionId}));e.DepartmentList=[],e.departmentId=0;for(let r of t){var n=new Re;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DepartmentList.push(n)}}setPartDepartmentManagementStructureId(e){null!=e.departmentId&&e.departmentId>0?e.managementStructureId=e.departmentId:e.managementStructureId=e.divisionId}getStockLineBusinessUnitList(e){e.managementStructureEntityId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.companyId}));e.BusinessUnitList=[],e.DivisionList=[],e.DepartmentList=[],e.businessUnitId=0,e.divisionId=0,e.departmentId=0;for(let r of t){var n=new Re;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.BusinessUnitList.push(n)}}getStockLineDivision(e){null!=e.businessUnitId&&e.businessUnitId>0?e.managementStructureEntityId=e.businessUnitId:e.managementStructureEntityId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.businessUnitId}));e.DivisionList=[],e.DepartmentList=[],e.divisionId=0,e.departmentId=0;for(let r of t){var n=new Re;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DivisionList.push(n)}}getStockLineDepartment(e){null!=e.divisionId&&e.divisionId>0?e.managementStructureEntityId=e.divisionId:e.managementStructureEntityId=e.businessUnitId;var t=this.managementStructure.filter((function(t){return t.parentId==e.divisionId}));e.DepartmentList=[],e.departmentId=0;for(let r of t){var n=new Re;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DepartmentList.push(n)}}setStockLineDepartmentManagementStructureId(e){null!=e.departmentId&&e.departmentId>0?e.managementStructureEntityId=e.departmentId:e.managementStructureEntityId=e.divisionId}getAllSite(){this.commonService.smartDropDownList("Site","SiteId","Name").subscribe(e=>{for(var t of(this.SiteList=e.map(e=>({siteId:e.value,name:e.label})),this.repairOrderData))if(t.stockLine){for(var n of(t.SiteList=[],this.SiteList)){(i=new Re).Key=n.siteId.toLocaleString(),i.Value=n.name,t.SiteList.push(i)}for(var r of t.stockLine){for(var n of(r.SiteList=[],this.SiteList)){var i;(i=new Re).Key=n.siteId.toLocaleString(),i.Value=n.name,r.SiteList.push(i)}r.siteId>0&&this.getStockLineWareHouse(r,!0),r.warehouseId>0&&this.getStockLineLocation(r,!0),r.locationId>0&&this.getStockLineShelf(r,!0),r.shelfId>0&&this.getStockLineBin(r,!0)}}},e=>this.onDataLoadFailed(e))}getStockLineSite(e,t){e.SiteList=[],e.WareHouseList=[],e.LocationList=[],e.ShelfList=[],e.BinList=[],t||(e.siteId=0,e.warehouseId=0,e.locationId=0,e.shelfId=0,e.binId=0);for(let r of this.SiteList){var n=new Re;n.Key=r.siteId.toLocaleString(),n.Value=r.name,e.SiteList.push(n)}}getStockLineWareHouse(e,t){e.WareHouseList=[],e.LocationList=[],e.ShelfList=[],e.BinList=[],t||(e.warehouseId=0,e.locationId=0,e.shelfId=0,e.binId=0),0!=e.siteId&&this.commonService.smartDropDownList("Warehouse","WarehouseId","Name","SiteId",e.siteId).subscribe(t=>{for(let r of t){var n=new Re;n.Key=r.value.toLocaleString(),n.Value=r.label,e.WareHouseList.push(n)}},e=>this.onDataLoadFailed(e))}getStockLineLocation(e,t){e.LocationList=[],e.ShelfList=[],e.BinList=[],t||(e.locationId=0,e.shelfId=0,e.binId=0),this.commonService.smartDropDownList("Location","LocationId","Name","WarehouseId",e.warehouseId).subscribe(t=>{console.log(t);for(let r of t){var n=new Re;n.Key=r.value.toLocaleString(),n.Value=r.label,e.LocationList.push(n)}},e=>this.onDataLoadFailed(e))}getStockLineShelf(e,t){e.ShelfList=[],e.BinList=[],t||(e.shelfId=0,e.binId=0),this.commonService.smartDropDownList("Shelf","ShelfId","Name","LocationId",e.locationId).subscribe(t=>{for(let r of t){var n=new Re;n.Key=r.value.toLocaleString(),n.Value=r.label,e.ShelfList.push(n)}},e=>this.onDataLoadFailed(e))}getPartWareHouse(e,t){if(e.WareHouseList=[],e.LocationList=[],e.ShelfList=[],e.BinList=[],e.warehouseId=0,e.locationId=0,e.shelfId=0,e.binId=0,e.stockLine&&t)for(var n of e.stockLine)n.siteId=e.siteId,n.warehouseId=0,n.locationId=0,n.shelfId=0,n.binId=0,n.WareHouseList=[],n.LocationList=[],n.ShelfList=[],n.BinList=[];this.commonService.smartDropDownList("Warehouse","WarehouseId","Name","SiteId",e.siteId).subscribe(n=>{for(let a of n){var r=new Re;if(r.Key=a.value.toLocaleString(),r.Value=a.label,e.WareHouseList.push(r),e.stockLine&&t)for(var i of e.stockLine)i.WareHouseList.push(r)}},e=>this.onDataLoadFailed(e))}getPartLocation(e,t){if(e.LocationList=[],e.ShelfList=[],e.BinList=[],e.locationId=0,e.shelfId=0,e.binId=0,e.stockLine&&t)for(var n of e.stockLine)n.warehouseId=e.warehouseId,n.locationId=0,n.shelfId=0,n.binId=0,n.LocationList=[],n.ShelfList=[],n.BinList=[];this.commonService.smartDropDownList("Location","LocationId","Name","WarehouseId",e.warehouseId).subscribe(n=>{for(let a of n){var r=new Re;if(r.Key=a.value.toLocaleString(),r.Value=a.label,e.LocationList.push(r),e.stockLine&&t)for(var i of e.stockLine)i.LocationList.push(r)}},e=>this.onDataLoadFailed(e))}getPartShelf(e,t){if(e.ShelfList=[],e.BinList=[],e.shelfId=0,e.binId=0,e.stockLine&&t)for(var n of e.stockLine)n.locationId=e.locationId,n.shelfId=0,n.binId=0,n.ShelfList=[],n.BinList=[];this.commonService.smartDropDownList("Shelf","ShelfId","Name","LocationId",e.locationId).subscribe(n=>{for(let a of n){var r=new Re;if(r.Key=a.value.toLocaleString(),r.Value=a.label,e.ShelfList.push(r),e.stockLine&&t)for(var i of e.stockLine)i.ShelfList.push(r)}},e=>this.onDataLoadFailed(e))}getPartBin(e,t){if(e.BinList=[],e.binId=0,e.stockLine&&t)for(var n of e.stockLine)n.shelfId=e.shelfId,n.binId=0,n.BinList=[];this.commonService.smartDropDownList("Bin","BinId","Name","ShelfId",e.shelfId).subscribe(n=>{for(let a of n){var r=new Re;if(r.Key=a.value.toLocaleString(),r.Value=a.label,e.BinList.push(r),e.stockLine&&t)for(var i of e.stockLine)i.BinList.push(r)}},e=>this.onDataLoadFailed(e))}setPartBinIdToStockline(e){if(e.stockLine)for(var t of e.stockLine)t.binId=e.binId}conditionChange(e){if(e.stockLine)for(var t of e.stockLine)t.conditionId=e.conditionId}getStockLineBin(e,t){e.BinList=[],t||(e.binId=0),this.commonService.smartDropDownList("Bin","BinId","Name","ShelfId",e.shelfId).subscribe(t=>{for(let r of t){var n=new Re;n.Key=r.value.toLocaleString(),n.Value=r.label,e.BinList.push(n)}},e=>this.onDataLoadFailed(e))}calculateExtendedCost(e,t){if(null!=t.repairOrderUnitCost&&""!=t.repairOrderUnitCost){if(e.itemMaster.isSerialized)t.repairOrderExtendedCost=t.repairOrderUnitCost;else{const n=t.repairOrderUnitCost?parseFloat(t.repairOrderUnitCost.toString().replace(/\,/g,"")):0;t.repairOrderExtendedCost=n*e.quantityActuallyReceived}t.repairOrderUnitCost&&(t.repairOrderUnitCost=t.repairOrderUnitCost?Object(j.b)(t.repairOrderUnitCost,2):"0.00"),t.repairOrderExtendedCost&&(t.repairOrderExtendedCost=t.repairOrderExtendedCost?Object(j.b)(t.repairOrderExtendedCost,2):"0.00")}}calculatePartExtendedCost(e){if(null!=e.unitCost&&""!=e.unitCost){if(e.unitCost=e.unitCost?Object(j.b)(e.unitCost,2):"0.00",e.itemMaster.isSerialized){const t=e.unitCost?parseFloat(e.unitCost.toString().replace(/\,/g,"")):"0.00";e.extendedCost=t?Object(j.b)(t,2):"0.00"}else{const t=(e.unitCost?parseFloat(e.unitCost.toString().replace(/\,/g,"")):0)*e.quantityActuallyReceived;e.extendedCost=t?Object(j.b)(t,2):"0.00"}if(e.stockLine)for(var t of e.stockLine)t.repairOrderUnitCost=e.unitCost,t.repairOrderExtendedCost=e.extendedCost}}onDataLoadFailed(e){this.isSpinnerVisible=!1}onObtainFromChange(e,t){t.obtainFromObject={},t.obtainFrom="","1"===e.target.value&&(this.obtainfromcustomer=!0,this.obtainfromother=!1,this.obtainfromvendor=!1),"2"===e.target.value&&(this.obtainfromother=!0,this.obtainfromcustomer=!1,this.obtainfromvendor=!1),"3"===e.target.value&&(this.obtainfromvendor=!0,this.obtainfromcustomer=!1,this.obtainfromother=!1)}onOwnerChange(e,t){t.ownerObject={},t.owner="","1"===e.target.value&&(this.ownercustomer=!0,this.ownerother=!1,this.ownervendor=!1),"2"===e.target.value&&(this.ownerother=!0,this.ownercustomer=!1,this.ownervendor=!1),"3"===e.target.value&&(this.ownervendor=!0,this.ownercustomer=!1,this.ownerother=!1)}onTraceableToChange(e,t){t.traceableToObject="",t.traceableTo="","1"===e.target.value&&(this.traceabletocustomer=!0,this.traceabletoother=!1,this.traceabletovendor=!1),"2"===e.target.value&&(this.traceabletoother=!0,this.traceabletocustomer=!1,this.traceabletovendor=!1),"3"===e.target.value&&(this.traceabletovendor=!0,this.traceabletocustomer=!1,this.traceabletoother=!1)}onObtainSelect(e){e.obtainFrom=e.obtainFromObject.Key}onOwnerSelect(e){e.owner=e.ownerObject.Key}onTraceableToSelect(e){e.traceableTo=e.traceableToObject.Key}editPart(e){if(e.isEnabled=!e.isEnabled,e.stockLine)for(var t of e.stockLine)t.isEnabled=e.isEnabled,t.quantityRejected=0}editStockLine(e){e.isEnabled=!e.isEnabled,e.quantityRejected=0}updateStockLine(){let e=[];for(var t of this.repairOrderData)if(t.stockLine){var n=[],r=t.stockLine;for(var i of r){if(null==i.conditionId||0==i.conditionId)return void this.alertService.showMessage(this.pageTitle,"Please select Condition in Part No. "+t.itemMaster.partNumber+" at stockline "+i.stockLineNumber,P.d.error);if(null==i.siteId||0==i.siteId)return void this.alertService.showMessage(this.pageTitle,"Please select Site in Part No. "+t.itemMaster.partNumber+" of stockline "+i.stockLineNumber,P.d.error);for(var a of t.timeLife)a.stockLineDraftId==i.stockLineDraftId&&n.push(a)}if(r.length>0){let i=new Fe;i.repairOrderPartRecordId=t.repairOrderPartRecordId,i.managementStructureEntityId=t.managementStructureEntityId?t.managementStructureEntityId:null,i.stockLines=r,i.timeLife=this.getTimeLife(n,t.repairOrderPartRecordId),e.push(i)}}e.length>0?this.receivingService.updateStockLine(e).subscribe(e=>{this.alertService.showMessage(this.pageTitle,"Stock Line updated successfully.",P.d.success),this.route.navigateByUrl("/receivingmodule/receivingpages/app-view-ro?repairOrderId="+this.repairOrderId)},e=>{var t="";t=e.error.constructor==Array?e.error[0].errorMessage:e.error.Message,this.alertService.showMessage(this.pageTitle,t,P.d.error)}):this.alertService.showMessage(this.pageTitle,"Please edit Stock Line to update.",P.d.info)}getTimeLife(e,t){let n=[];return n=e.map(e=>({stockLineDraftId:e.stockLineDraftId,timeLifeDraftCyclesId:e.timeLifeDraftCyclesId,cyclesRemaining:(e.cyclesRemainingHrs?e.cyclesRemainingHrs:"00")+":"+(e.cyclesRemainingMin?e.cyclesRemainingMin:"00"),timeRemaining:(e.timeRemainingHrs?e.timeRemainingHrs:"00")+":"+(e.timeRemainingMin?e.timeRemainingMin:"00"),cyclesSinceNew:(e.cyclesSinceNewHrs?e.cyclesSinceNewHrs:"00")+":"+(e.cyclesSinceNewMin?e.cyclesSinceNewMin:"00"),timeSinceNew:(e.timeSinceNewHrs?e.timeSinceNewHrs:"00")+":"+(e.timeSinceNewMin?e.timeSinceNewMin:"00"),lastSinceNew:(e.lastSinceNewHrs?e.lastSinceNewHrs:"00")+":"+(e.lastSinceNewMin?e.lastSinceNewMin:"00"),cyclesSinceOVH:(e.cyclesSinceOVHHrs?e.cyclesSinceOVHHrs:"00")+":"+(e.cyclesSinceOVHMin?e.cyclesSinceOVHMin:"00"),timeSinceOVH:(e.timeSinceOVHHrs?e.timeSinceOVHHrs:"00")+":"+(e.timeSinceOVHMin?e.timeSinceOVHMin:"00"),lastSinceOVH:(e.lastSinceOVHHrs?e.lastSinceOVHHrs:"00")+":"+(e.lastSinceOVHMin?e.lastSinceOVHMin:"00"),cyclesSinceInspection:(e.cyclesSinceInspectionHrs?e.cyclesSinceInspectionHrs:"00")+":"+(e.cyclesSinceInspectionMin?e.cyclesSinceInspectionMin:"00"),timeSinceInspection:(e.timeSinceInspectionHrs?e.timeSinceInspectionHrs:"00")+":"+(e.timeSinceInspectionMin?e.timeSinceInspectionMin:"00"),lastSinceInspection:(e.lastSinceInspectionHrs?e.lastSinceInspectionHrs:"00")+":"+(e.lastSinceInspectionMin?e.lastSinceInspectionMin:"00"),cyclesSinceRepair:(e.cyclesSinceRepairHrs?e.cyclesSinceRepairHrs:"00")+":"+(e.cyclesSinceRepairMin?e.cyclesSinceRepairMin:"00"),timeSinceRepair:(e.timeSinceRepairHrs?e.timeSinceRepairHrs:"00")+":"+(e.timeSinceRepairMin?e.timeSinceRepairMin:"00"),repairOrderPartRecordId:t,isActive:!0})),n}onChangeTimeLifeMin(e,t){for(let n=0;n<this.repairOrderData.length;n++){let r=this.repairOrderData[n];r.timeLife[t][e]>59&&(r.timeLife[t][e]=0,this.alertService.showMessage(this.pageTitle,"Minutes can't be greater than 59",P.d.error))}}getShippingVia(){this.commonService.smartDropDownList("ShippingVia","ShippingViaId","Name").subscribe(e=>{this.ShippingViaList=[];for(let n of e){var t=new Re;t.Key=n.value.toLocaleString(),t.Value=n.label,this.ShippingViaList.push(t)}})}getManufacturers(){this.ManufacturerList=[],this.commonService.smartDropDownList("Manufacturer","ManufacturerId","Name").subscribe(e=>{for(let n of e){var t=new Re;t.Key=n.value.toLocaleString(),t.Value=n.label,this.ManufacturerList.push(t)}},e=>this.onDataLoadFailed(e))}deleteStockLine(e){if(e&&1==confirm("Stock Line will be deleted after save/update. Do you still want to continue?"))return e.isEnabled=!0,e.isDeleted=!0,void this.alertService.showMessage(this.pageTitle,"Stock Line removed from the list.",P.d.success)}getPartBUList(e){null!=e.stockLine&&e.stockLine.map(t=>{e.BusinessUnitList=[],e.DivisionList=[],e.DepartmentList=[],e.businessUnitId=0,e.divisionId=0,e.departmentId=0,t.BusinessUnitList=[],t.DivisionList=[],t.DepartmentList=[],t.businessUnitId=0,t.divisionId=0,t.departmentId=0,t.companyId=e.companyId,0!=e.companyId&&null!=e.companyId&&null!=e.companyId&&(t.managementStructureEntityId=e.companyId,e.managementStructureEntityId=e.companyId,this.commonService.getBusinessUnitListByLegalEntityId(e.companyId).subscribe(n=>{e.BusinessUnitList=n,t.BusinessUnitList=n}))})}getPartDiviList(e){null!=e.stockLine&&e.stockLine.map(t=>{e.DivisionList=[],e.DepartmentList=[],e.divisionId=0,e.departmentId=0,t.DivisionList=[],t.DepartmentList=[],t.divisionId=0,t.departmentId=0,t.businessUnitId=e.businessUnitId,0!=e.businessUnitId&&null!=e.businessUnitId&&null!=e.businessUnitId&&(t.managementStructureEntityId=e.businessUnitId,e.managementStructureEntityId=e.businessUnitId,this.commonService.getDivisionListByBU(e.businessUnitId).subscribe(n=>{e.DivisionList=n,t.DivisionList=n}))})}getPartDeptList(e){null!=e.stockLine&&e.stockLine.map(t=>{e.DepartmentList=[],e.departmentId=0,t.DepartmentList=[],t.departmentId=0,t.divisionId=e.divisionId,0!=e.divisionId&&null!=e.divisionId&&null!=e.divisionId&&(t.managementStructureEntityId=e.divisionId,e.managementStructureEntityId=e.divisionId,this.commonService.getDepartmentListByDivisionId(e.divisionId).subscribe(n=>{e.DepartmentList=n,t.DepartmentList=n}))})}onSelectPartDept(e){null!=e.stockLine&&e.stockLine.map(t=>{t.departmentId=e.departmentId,0!=e.departmentId&&null!=e.departmentId&&null!=e.departmentId&&(t.managementStructureEntityId=e.departmentId,e.managementStructureEntityId=e.departmentId)})}getManagementStructureDetailsForStockline(e){this.commonService.getManagementStructureDetails(e.managementStructureEntityId).subscribe(t=>{this.getStockLineBUList(e,t.Level1),this.getStockLineDiviList(e,t.Level2),this.getStockLineDeptList(e,t.Level3),this.onSelectStockLineDept(e,t.Level4),e.companyId=void 0!==t.Level1?t.Level1:0,e.businessUnitId=void 0!==t.Level1?t.Level2:0,e.divisionId=void 0!==t.Level1?t.Level3:0,e.departmentId=void 0!==t.Level1?t.Level4:0})}getStockLineBUList(e,t){e.BusinessUnitList=[],e.DivisionList=[],e.DepartmentList=[],e.businessUnitId=0,e.divisionId=0,e.departmentId=0,0!=t&&null!=t&&null!=t&&(e.managementStructureEntityId=t,this.commonService.getBusinessUnitListByLegalEntityId(t).subscribe(t=>{e.BusinessUnitList=t}))}getStockLineDiviList(e,t){e.DivisionList=[],e.DepartmentList=[],e.divisionId=0,e.departmentId=0,0!=t&&null!=t&&null!=t&&(e.managementStructureEntityId=t,this.commonService.getDivisionListByBU(t).subscribe(t=>{e.DivisionList=t}))}getStockLineDeptList(e,t){e.DepartmentList=[],e.departmentId=0,0!=t&&null!=t&&null!=t&&(e.managementStructureEntityId=t,this.commonService.getDepartmentListByDivisionId(t).subscribe(t=>{e.DepartmentList=t}))}onSelectStockLineDept(e,t){0!=t&&null!=t&&null!=t&&(e.managementStructureEntityId=t)}};He.ctorParameters=()=>[{type:te.a},{type:ee.a},{type:$.a},{type:Q.a},{type:Z.a},{type:X.a},{type:Y.a},{type:J.a},{type:T.Router},{type:P.b},{type:se.a},{type:oe.a},{type:ue},{type:T.ActivatedRoute},{type:A.a},{type:me.a},{type:he.a},{type:y.DatePipe}],He=r.b([Object(i.Component)({selector:"app-edit-ro",template:r.c(n("EDmY")).default,providers:[y.DatePipe],styles:[r.c(n("JgFG")).default]})],He);let Pe=class{constructor(){this.isReceivingRolist=!0}ngOnInit(){}};Pe=r.b([Object(i.Component)({selector:"app-ro",template:r.c(n("Wzmp")).default,styles:[r.c(n("DUoY")).default]})],Pe);let Ee=class{constructor(e,t,n,r,i,a,s,o,l,c,d,p,u,m,h,g,v,b,f,L,S,y,I,x,M,w,k,O){this.binservice=e,this.manufacturerService=t,this.legalEntityService=n,this.receivingService=r,this.priorityService=i,this.stocklineService=a,this.siteService=s,this.warehouseService=o,this.vendorService=l,this.customerService=c,this.companyService=d,this.itemmaster=p,this.modalService=u,this.route=m,this.currencyService=h,this.unitofmeasureService=g,this.conditionService=v,this.creditTermsService=b,this.employeeService=f,this.alertService=L,this.accountService=S,this.glAccountService=y,this.shippingService=I,this._actRoute=x,this.commonService=M,this.localStorage=w,this.authService=k,this.datePipe=O,this.repairOrderData=[],this.headerManagementStructure={},this.roStatus=[],this.roUserType=[],this.receiving_ro_header=!0,this.managementStructureHierarchy=[],this.selectedManagementStructure=[],this.CustomerList=[],this.VendorList=[],this.CompanyList=[],this.ManufacturerList=[],this.ConditionList=[],this.GLAccountList=[],this.ConditionId=0,this.toggleIcon=!1,this.currentSLIndex=0,this.currentTLIndex=0,this.currentSERIndex=0,this.pageTitle="Receive RO",this.isDisabledSNboxes=!1,this.obtainfromcustomer=!1,this.obtainfromother=!1,this.obtainfromvendor=!1,this.ownercustomer=!1,this.ownerother=!1,this.ownervendor=!1,this.traceabletocustomer=!1,this.traceabletoother=!1,this.traceabletovendor=!1,this.disableParentSpace=!1,this.TagTypeList=[],this.quantityreceivebtn=!1,this.quantityreceive=!1,this.legalEntityList=[],this.isSpinnerVisible=!0,this.moduleListDropdown=[],this.getAllSite(),this.getCustomers(),this.getVendors(),this.getCompanyList(),this.getManufacturers(),this.getConditionList(),this.getAllGLAccount(),this.getShippingVia(),this.getTagType()}ngOnInit(){this.getLegalEntity(),this.loadModulesNamesForObtainOwnerTraceable(),this.repairOrderId=this._actRoute.snapshot.queryParams.repairorderid,this.receivingService.getReceivingROHeaderById(this.repairOrderId).subscribe(e=>{console.log(e),this.repairOrderHeaderData=e,this.repairOrderHeaderData.openDate=this.repairOrderHeaderData.openDate?new Date(this.repairOrderHeaderData.openDate):"",this.repairOrderHeaderData.closedDate=this.repairOrderHeaderData.closedDate?new Date(this.repairOrderHeaderData.closedDate):"",this.repairOrderHeaderData.dateApproved=this.repairOrderHeaderData.dateApproved?new Date(this.repairOrderHeaderData.dateApproved):"",this.repairOrderHeaderData.needByDate=this.repairOrderHeaderData.needByDate?new Date(this.repairOrderHeaderData.needByDate):"",this.getManagementStructureCodes(this.repairOrderHeaderData.managementStructureId)}),this.receivingService.getReceivingROPartById(this.repairOrderId).subscribe(e=>{console.log(e),this.loadRepairOrderData(e)}),this.roStatus=[],this.quantityreceivebtn=!1,this.getStatus()}get currentUserMasterCompanyId(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:null}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}getLegalEntity(){this.commonService.getLegalEntityList().subscribe(e=>{this.legalEntityList=e})}loadModulesNamesForObtainOwnerTraceable(){this.commonService.getModuleListForObtainOwnerTraceable().subscribe(e=>{this.moduleListDropdown=e})}getManagementStructureCodes(e){this.commonService.getManagementStructureCodes(e).subscribe(e=>{e.Level1&&(this.headerManagementStructure.level1=e.Level1),e.Level2&&(this.headerManagementStructure.level2=e.Level2),e.Level3&&(this.headerManagementStructure.level3=e.Level3),e.Level4&&(this.headerManagementStructure.level4=e.Level4)})}getItemMasterById(e,t){this.itemmaster.getItemMasterByItemMasterId(t.itemMaster.itemMasterId).subscribe(n=>{if(null!=n&&null!=n[0])if("serialized"==e)t.itemMaster.isSerialized=n[0].isSerialized,t.serialNumber="";else{t.itemMaster.isTimeLife=n[0].isTimeLife,t.timeLifeList=[];for(var r=0;r<t.stocklineListObj.length;r++){let e=new Ce;e.timeLifeCyclesId=0,e.repairOrderId=t.repairOrderId,e.repairOrderPartRecordId=t.repairOrderPartRecordId,e.cyclesRemainingHrs=null,e.cyclesRemainingMin=null,e.cyclesSinceInspectionHrs=null,e.cyclesSinceInspectionMin=null,e.cyclesSinceNewHrs=null,e.cyclesSinceNewMin=null,e.cyclesSinceOVHHrs=null,e.cyclesSinceOVHMin=null,e.cyclesSinceRepairHrs=null,e.cyclesSinceRepairMin=null,e.timeRemainingHrs=null,e.timeRemainingMin=null,e.timeSinceInspectionHrs=null,e.timeSinceInspectionMin=null,e.timeSinceNewHrs=null,e.timeSinceNewMin=null,e.timeSinceOVHHrs=null,e.timeSinceOVHMin=null,e.timeSinceRepairHrs=null,e.timeSinceRepairMin=null,e.lastSinceNewHrs=null,e.lastSinceNewMin=null,e.lastSinceInspectionHrs=null,e.lastSinceInspectionMin=null,e.lastSinceOVHHrs=null,e.lastSinceOVHMin=null,e.detailsNotProvided=!1,t.timeLifeList.push(e)}}"serialized"!=e||n[0].isSerialized||this.alertService.showMessage(this.pageTitle,"Serialized is not enabled",P.d.info),"timelife"!=e||n[0].isTimeLife||this.alertService.showMessage(this.pageTitle,"Time Life is not enabled",P.d.info)})}getShippingVia(){this.commonService.smartDropDownList("ShippingVia","ShippingViaId","Name").subscribe(e=>{this.ShippingViaList=[];for(let n of e){var t=new Re;t.Key=n.value.toLocaleString(),t.Value=n.label,this.ShippingViaList.push(t)}})}getStatus(){this.roStatus=[],this.commonService.smartDropDownList("ROStatus","ROStatusId","Description").subscribe(e=>{this.roStatus=e,this.roStatus=this.roStatus.sort((e,t)=>e.value>t.value?1:t.value>e.value?-1:0)})}getStatusById(e){return null==e?"NA":this.roStatus.filter((function(t){return t.Key==e}))[0].Value}getUserTypeById(e){return null==e?"NA":this.roUserType.filter((function(t){return t.Key==e}))[0].Value}getAddress(e){let t="";return null!=e&&(e.line1&&(t+=e.line1+", "),e.line2&&(t+=e.line2+", "),e.line3&&(t+=e.line3+", "),e.city&&(t+=e.city+", "),e.stateOrProvince&&(t+=e.stateOrProvince+", "),e.postalCode&&(t+=e.postalCode+", "),e.country&&(t+=e.country)),t}loadRepairOrderData(e){let t;this.repairOrderData=e;var n=this.repairOrderData.filter(e=>1==e.isParent);for(let i of n){i.currentSLIndex=0,i.currentTLIndex=0,i.currentSERIndex=0,i.isDisabledTLboxes=!1;var r=this.repairOrderData.filter(e=>!e.isParent&&e.itemMaster.partNumber==i.itemMaster.partNumber);if(r.length>0){i.hasChildren=!0,i.quantityToRepair=0;for(let e of r)i.quantityRepaired+=e.quantityRepaired,e.managementStructureId=i.managementStructureId,e.managementStructureName=i.managementStructureName,i.quantityToRepair+=e.quantityToRepair}else i.hasChildren=!1}for(let i of this.repairOrderData){i.toggleIcon=!1,i.stocklineListObj=[],i.timeLifeList=[],i.currentSLIndex=0,i.currentTLIndex=0,i.currentSERIndex=0,i.isDisabledTLboxes=!1,i.visible=!1,i.showStockLineGrid=!1,i.isSameDetailsForAllParts=!1;let e=[];if(i.eCCNAlreadyExist=null!=i.itemMaster.exportECCN&&i.itemMaster.exportECCN.length>0,i.itarNumberExist=null!=i.itemMaster.itarNumber&&i.itemMaster.itarNumber.length>0,i.quantityRejected="0",i.isParent){e.reverse(),i.managementStructureName=[];for(let t of e)i.managementStructureName.push(t.code);t=i}else i.addressText=this.getAddress(i.roPartSplitAddress),1==i.roPartSplitUserTypeId&&this.customerService.getCustomerdata(i.roPartSplitUserId).subscribe(e=>{i.userName=e[0][0].name},e=>this.onDataLoadFailed(e)),i.userTypeName=i.roPartSplitUserTypeId?this.getUserTypeById(i.roPartSplitUserTypeId.toLocaleString()):"",i.statusText=this.getStatusById(i.status),i.managementStructureName=t.managementStructureName;this.getManagementStructureCodesForPart(i)}this.isSpinnerVisible=!1}getManagementStructureCodesForPart(e){e.managementStructureName=[],this.commonService.getManagementStructureCodes(e.managementStructureId).subscribe(t=>{t.Level1&&e.managementStructureName.push(t.Level1),t.Level2&&e.managementStructureName.push(t.Level2),t.Level3&&e.managementStructureName.push(t.Level3),t.Level4&&e.managementStructureName.push(t.Level4)})}getManagementStructure(){return this.legalEntityService.getManagemententity()}setStockLineManagementStructure(e,t){let n=[[]],r=[];if(null!=this.managementStructure&&this.managementStructure.length>0){if(t.CompanyList=[],t.BusinessUnitList=[],t.DivisionList=[],t.DepartmentList=[],this.getManagementStructureHierarchy(e,n,r),n.reverse(),r.reverse(),null!=n[0]&&n[0].length>0){t.companyId=r[0].managementStructureId,t.managementStructureEntityId=t.companyId;for(let e of n[0]){(i=new Re).Key=e.managementStructureId.toLocaleString(),i.Value=e.code,t.CompanyList.push(i)}}if(null!=n[1]&&n[1].length>0){t.businessUnitId=r[1].managementStructureId,t.managementStructureEntityId=t.businessUnitId;for(let e of n[1]){(i=new Re).Key=e.managementStructureId.toLocaleString(),i.Value=e.code,t.BusinessUnitList.push(i)}}if(null!=n[2]&&n[2].length>0){t.divisionId=r[2].managementStructureId,t.managementStructureEntityId=t.divisionId;for(let e of n[2]){(i=new Re).Key=e.managementStructureId.toLocaleString(),i.Value=e.code,t.DivisionList.push(i)}}if(null!=n[3]&&n[3].length>0){t.departmentId=r[3].managementStructureId,t.managementStructureEntityId=t.departmentId;for(let e of n[3]){var i;(i=new Re).Key=e.managementStructureId.toLocaleString(),i.Value=e.code,t.DepartmentList.push(i)}}}}parsedText(e){if(e){return(new DOMParser).parseFromString("<!doctype html><body>"+e,"text/html").body.textContent}}onAddNotes(){this.headerNotes=this.repairOrderHeaderData.notes}onSaveNotes(){this.repairOrderHeaderData.notes=this.headerNotes}onAddMemo(){this.headerMemo=this.repairOrderHeaderData.memo}onSaveMemo(){this.repairOrderHeaderData.memo=this.headerMemo}managementStructureSuccess(e,t){if(this.alertService.stopLoadingMessage(),this.managementStructure=t,null!=this.managementStructure&&this.managementStructure.length>0){if(this.roCompanyList=[],this.roBusinessUnitList=[],this.roDivisionList=[],this.roDepartmentList=[],this.getManagementStructureHierarchy(e,this.managementStructureHierarchy,this.selectedManagementStructure),this.managementStructureHierarchy.reverse(),this.selectedManagementStructure.reverse(),null!=this.managementStructureHierarchy[0]&&this.managementStructureHierarchy[0].length>0){this.roSelectedCompanyId=this.selectedManagementStructure[0].managementStructureId;for(let e of this.managementStructureHierarchy[0]){(n=new Re).Key=e.managementStructureId.toLocaleString(),n.Value=e.code,this.roCompanyList.push(n)}}if(null!=this.managementStructureHierarchy[1]&&this.managementStructureHierarchy[1].length>0){this.roSelectedBusinessUnitId=this.selectedManagementStructure[1].managementStructureId;for(let e of this.managementStructureHierarchy[1]){(n=new Re).Key=e.managementStructureId.toLocaleString(),n.Value=e.code,this.roBusinessUnitList.push(n)}}if(null!=this.managementStructureHierarchy[2]&&this.managementStructureHierarchy[2].length>0){this.roSelectedDivisionId=this.selectedManagementStructure[2].managementStructureId;for(let e of this.managementStructureHierarchy[2]){(n=new Re).Key=e.managementStructureId.toLocaleString(),n.Value=e.code,this.roDivisionList.push(n)}}if(null!=this.managementStructureHierarchy[3]&&this.managementStructureHierarchy[3].length>0){this.roSelectedDepartmentId=this.selectedManagementStructure[3].managementStructureId;for(let e of this.managementStructureHierarchy[3]){var n;(n=new Re).Key=e.managementStructureId.toLocaleString(),n.Value=e.code,this.roDepartmentList.push(n)}}}}getManagementStructureHierarchy(e,t,n){var r=this.managementStructure.filter((function(t){return t.managementStructureId==e}));if(null!=r&&r.length>0){var i=r[0];if(null!=i.parentId){var a=this.managementStructure.filter((function(e){return e.parentId==i.parentId}));null!=t&&t.push(a),null!=n&&n.push(i),this.getManagementStructureHierarchy(i.parentId,t,n)}else{a=this.managementStructure.filter((function(e){return null==e.parentId}));null!=t&&t.push(a),null!=n&&n.push(i)}}}showSplitShipmentParts(e){this.repairOrderData.filter((function(t){return t.itemMasterId==e.itemMasterId})).forEach(e=>{e.toggleIcon=!e.toggleIcon,e.visible=!e.visible});const t=this.repairOrderData;for(var n=0;n<t.length;n++){if(0==t[n].isParent&&1==t[n].visible){this.disableParentSpace=!0;break}this.disableParentSpace=!1}}isSplitShipmentPart(e){return this.repairOrderData.filter(t=>t.itemMasterId==e&&!t.isParent).length>0}onDataLoadFailed(e){console.log(e),this.alertService.stopLoadingMessage(),this.isSpinnerVisible=!1}toggleStockLine(e,t){if(null==t.quantityActuallyReceived||null==t.quantityActuallyReceived?this.quantityreceive=!0:this.quantityreceive=!1,t.showStockLineGrid)return void this.addStockLine(t,!1);if(null==t.quantityActuallyReceived||0==t.quantityActuallyReceived)return t.showStockLineGrid=!1,void this.alertService.showMessage(this.pageTitle,"Please enter Quantity Received.",P.d.error);let n=""!=(null!=t.quantityActuallyReceived||t.quantityActuallyReceived.toString())?t.quantityActuallyReceived:0;if((t.itemMaster.isSerialized&&t.stocklineListObj.length!=n||!t.itemMaster.isSerialized&&t.stocklineListObj.length>0&&t.stocklineListObj[0].quantity!=n)&&(t.stocklineListObj=[],t.timeLifeList=[],t.isSameDetailsForAllParts=!1,t.currentSLIndex=0,t.currentTLIndex=0,t.currentSERIndex=0),this.repairOrderData.filter(e=>e.itemMaster.partnumber==t.itemMaster.partnumber&&0==e.itemMaster.isParent).length>1){if(n>t.quantityToRepair-t.quantityRepaired)return void this.alertService.showMessage(this.pageTitle,"Quantity receive can not be more than quantity ordered",P.d.error)}else if(n>t.quantityToRepair-t.quantityRepaired)return void this.alertService.showMessage(this.pageTitle,"Quantity receive can not be more than quantity ordered",P.d.error);if(t.visible=!0,t.stocklineListObj.length!=n&&(this.createStockLineItems(t),t.itemMaster.isTimeLife)){t.timeLifeList=[];for(var r=0;r<n;r++){let e=new Ce;e.timeLifeCyclesId=0,e.repairOrderId=t.repairOrderId,e.repairOrderPartRecordId=t.repairOrderPartRecordId,e.cyclesRemainingHrs=null,e.cyclesRemainingMin=null,e.cyclesSinceInspectionHrs=null,e.cyclesSinceInspectionMin=null,e.cyclesSinceNewHrs=null,e.cyclesSinceNewMin=null,e.cyclesSinceOVHHrs=null,e.cyclesSinceOVHMin=null,e.cyclesSinceRepairHrs=null,e.cyclesSinceRepairMin=null,e.timeRemainingHrs=null,e.timeRemainingMin=null,e.timeSinceInspectionHrs=null,e.timeSinceInspectionMin=null,e.timeSinceNewHrs=null,e.timeSinceNewMin=null,e.timeSinceOVHHrs=null,e.timeSinceOVHMin=null,e.timeSinceRepairHrs=null,e.timeSinceRepairMin=null,e.lastSinceNewHrs=null,e.lastSinceNewMin=null,e.lastSinceInspectionHrs=null,e.lastSinceInspectionMin=null,e.lastSinceOVHHrs=null,e.lastSinceOVHMin=null,e.detailsNotProvided=!1,t.timeLifeList.push(e)}}this.addStockLine(t,!0),1==this.quantityreceive?this.quantityreceivebtn=!0:this.quantityreceivebtn=!1}addStockLine(e,t){const n=e.stocklineListObj;e.stocklineListObj=n.map(t=>Object.assign({},t,{siteId:this.getSiteDetailsOnEdit(e,t),shippingViaId:e.shipViaId?e.shipViaId.toLocaleString():null,shippingAccount:e.shippingAccountInfo,repairOrderUnitCost:Object(j.b)(t.repairOrderUnitCost,2),repairOrderExtendedCost:Object(j.b)(t.repairOrderExtendedCost,2)}));for(let r=0;r<e.stocklineListObj.length;r++)e.stocklineListObj[r].CompanyList=this.legalEntityList,this.getManagementStructureOnEdit(e,e.stocklineListObj[r]);console.log(e.stocklineListObj),e.showStockLineGrid=null==t?!e.showStockLineGrid:t,null==e.quantityActuallyReceived||null==e.quantityActuallyReceived||""==e.quantityActuallyReceived.toString()?this.quantityreceive=!1:(this.quantityreceive=!0,this.quantityreceivebtn=!1)}getManagementStructureOnEdit(e,t){this.commonService.getManagementStructureDetails(e.managementStructureId).subscribe(e=>(this.selectedLegalEntity(e.Level1,t),this.selectedBusinessUnit(e.Level2,t),this.selectedDivision(e.Level3,t),this.selectedDepartment(e.Level4,t),t.companyId=void 0!==e.Level1?e.Level1.toString():0,t.businessUnitId=void 0!==e.Level2?e.Level2.toString():0,t.divisionId=void 0!==e.Level3?e.Level3.toString():0,t.departmentId=void 0!==e.Level4?e.Level4.toString():0,t.companyId)),console.log(t)}selectedLegalEntity(e,t){t.BusinessUnitList=[],t.DivisionList=[],t.DepartmentList=[],t.businessUnitId=0,t.divisionId=0,t.departmentId=0,0!=e&&null!=e&&null!=e&&(t.managementStructureEntityId=e,this.commonService.getBusinessUnitListByLegalEntityId(e).subscribe(e=>{t.BusinessUnitList=e}))}selectedBusinessUnit(e,t){return r.a(this,void 0,void 0,(function*(){t.DivisionList=[],t.DepartmentList=[],t.divisionId=0,t.departmentId=0,0!=e&&null!=e&&null!=e&&(t.managementStructureEntityId=e,yield this.commonService.getDivisionListByBU(e).subscribe(e=>{t.DivisionList=e}))}))}selectedDivision(e,t){return r.a(this,void 0,void 0,(function*(){t.DepartmentList=[],t.departmentId=0,0!=e&&null!=e&&null!=e&&(t.managementStructureEntityId=e,yield this.commonService.getDepartmentListByDivisionId(e).subscribe(e=>{t.DepartmentList=e}))}))}selectedDepartment(e,t){0!=e&&null!=e&&null!=e&&(t.managementStructureEntityId=e)}getSiteDetailsOnEdit(e,t){const n=e.itemMaster;return t.siteId=n.siteId?n.siteId.toLocaleString():null,this.getStockLineWareHouse(t),t.warehouseId=n.warehouseId?n.warehouseId.toLocaleString():null,this.getStockLineLocation(t),t.locationId=n.locationId?n.locationId.toLocaleString():null,this.getStockLineShelf(t),t.shelfId=n.shelfId?n.shelfId.toLocaleString():null,this.getStockLineBin(t),t.binId=n.binId?n.binId.toLocaleString():null,t.siteId}paginatorFocusOut(e,t){""==e.target.value&&(t.isSameDetailsForAllParts||(t.currentSLIndex=0,t.currentSERIndex=0),t.currentTLIndex=0,t.currentSERIndex=0)}createStockLineItems(e){e.stocklineListObj=[],this.currentSLIndex=0;for(var t=0;t<e.quantityActuallyReceived;t++){let t=new Ne;this.setStockLineManagementStructure(e.managementStructureId,t),t.repairOrderId=e.repairOrderId,t.repairOrderPartRecordId=e.repairOrderPartRecordId,t.itemMasterId=e.itemMaster.itemMasterId,t.partNumber=e.itemMaster.partNumber,t.quantity=e.quantityActuallyReceived,t.stockLineId=0,t.createdDate=new Date,t.manufacturerId=e.itemMaster.manufacturerId,t.visible=!1,t.shippingReference="",t.shippingViaId=null,t.shelfId=null,t.warehouseId=null,t.binId=null,t.locationId=null,t.shippingAccount="",t.conditionId=0,t.masterCompanyId=this.currentUserMasterCompanyId,t.serialNumberNotProvided=!1,t.repairOrderUnitCost=0,t.repairOrderExtendedCost=e.unitCost,t.currentDate=new Date,t.obtainFromType=2,t.obtainFrom=this.repairOrderHeaderData.vendorId.toString(),t.ownerType=2,t.owner=this.repairOrderHeaderData.vendorId.toString(),t.obtainFromObject=this.VendorList.find(e=>e.Key==this.repairOrderHeaderData.vendorId.toString()),t.ownerObject=this.VendorList.find(e=>e.Key==this.repairOrderHeaderData.vendorId.toString()),null!=e.itemMaster&&(t.repairOrderUnitCost=e.unitCost,e.itemMaster.isSerialized||(t.repairOrderExtendedCost=e.quantityActuallyReceived*e.unitCost)),this.getStockLineSite(t),e.stocklineListObj.push(t)}}gotoStockLineMainPage(e,t){let n=e.target.value,r=0;if(""!=n){if(r=Number.parseInt(n)-1,!(r<t.stocklineListObj.length&&r>=0))return this.alertService.showMessage(this.pageTitle,"Invalid stock line page",P.d.error),e.target.value="1",void(t.isSameDetailsForAllParts||(t.currentSLIndex=0));t.isSameDetailsForAllParts||(t.currentSLIndex=r)}}gotoStockLinePage(e,t){let n=e.target.value,r=0;if(""!=n){if(r=Number.parseInt(n)-1,!(r<t.stocklineListObj.length&&r>=0))return this.alertService.showMessage(this.pageTitle,"Invalid stock line page",P.d.error),e.target.value="1",t.isSameDetailsForAllParts||(t.currentSERIndex=0),t.currentTLIndex=0,void(t.currentSERIndex=0);!t.isSameDetailsForAllParts&&t.itemMaster.isSerialized&&(t.currentSERIndex=r),t.currentTLIndex=r}}moveStockLineMainPage(e,t,n){var r="stockline"==e?n.stocklineListObj.length:n.timeLifeList.length;t>=0&&t<r&&(n.currentSLIndex=t)}moveStockLinePage(e,t,n){var r="stockline"==e?n.stocklineListObj.length:n.timeLifeList.length;t>=0&&t<r&&(n.currentSERIndex=t,n.currentTLIndex=t)}getStockLineCompanies(e){var t=this.managementStructure.filter((function(e){return null==e.parentId}));e.CompanyList=[],e.BusinessUnitList=[],e.DivisionList=[],e.DepartmentList=[],e.companyId=0,e.businessUnitId=0,e.divisionId=0,e.departmentId=0;for(let r of t){var n=new Re;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.CompanyList.push(n)}}getStockLineBusinessUnitList(e){e.managementStructureEntityId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.companyId}));e.BusinessUnitList=[],e.DivisionList=[],e.DepartmentList=[],e.businessUnitId=0,e.divisionId=0,e.departmentId=0;for(let r of t){var n=new Re;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.BusinessUnitList.push(n)}}getStockLineDivision(e){null!=e.businessUnitId&&e.businessUnitId>0?e.managementStructureEntityId=e.businessUnitId:e.managementStructureEntityId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.businessUnitId}));e.DivisionList=[],e.DepartmentList=[],e.divisionId=0,e.departmentId=0;for(let r of t){var n=new Re;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DivisionList.push(n)}}getStockLineDepartment(e){null!=e.divisionId&&e.divisionId>0?e.managementStructureEntityId=e.divisionId:e.managementStructureEntityId=e.businessUnitId;var t=this.managementStructure.filter((function(t){return t.parentId==e.divisionId}));e.DepartmentList=[],e.departmentId=0;for(let r of t){var n=new Re;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DepartmentList.push(n)}}setStockLineDepartmentManagementStructureId(e){null!=e.departmentId&&e.departmentId>0?e.managementStructureEntityId=e.departmentId:e.managementStructureEntityId=e.divisionId}getAllSite(){this.commonService.smartDropDownList("Site","SiteId","Name").subscribe(e=>{this.sites=e})}getStockLineSite(e){e.SiteList=[],e.siteId=0,e.WareHouseList=[],e.warehouseId=0,e.LocationList=[],e.locationId=0,e.ShelfList=[],e.shelfId=0,e.BinList=[],e.binId=0;for(let n of this.sites){var t=new Re;t.Key=n.value.toLocaleString(),t.Value=n.label,e.SiteList.push(t)}}getStockLineWareHouse(e){e.WareHouseList=[],e.warehouseId=0,e.LocationList=[],e.locationId=0,e.ShelfList=[],e.shelfId=0,e.BinList=[],e.binId=0,e.siteId&&this.commonService.smartDropDownList("Warehouse","WarehouseId","Name","SiteId",e.siteId).subscribe(t=>{console.log(t);for(let r of t){var n=new Re;n.Key=r.value.toLocaleString(),n.Value=r.label,e.WareHouseList.push(n)}},e=>this.onDataLoadFailed(e))}getStockLineLocation(e){e.LocationList=[],e.locationId=0,e.ShelfList=[],e.shelfId=0,e.BinList=[],e.binId=0,e.warehouseId&&this.commonService.smartDropDownList("Location","LocationId","Name","WarehouseId",e.warehouseId).subscribe(t=>{console.log(t);for(let r of t){var n=new Re;n.Key=r.value.toLocaleString(),n.Value=r.label,e.LocationList.push(n)}},e=>this.onDataLoadFailed(e))}getStockLineShelf(e){e.ShelfList=[],e.shelfId=0,e.BinList=[],e.binId=0,e.locationId&&this.commonService.smartDropDownList("Shelf","ShelfId","Name","LocationId",e.locationId).subscribe(t=>{console.log(t);for(let r of t){var n=new Re;n.Key=r.value.toLocaleString(),n.Value=r.label,e.ShelfList.push(n)}},e=>this.onDataLoadFailed(e))}getStockLineBin(e){e.BinList=[],e.binId=0,e.shelfId&&this.commonService.smartDropDownList("Bin","BinId","Name","ShelfId",e.shelfId).subscribe(t=>{for(let r of t){var n=new Re;n.Key=r.value.toLocaleString(),n.Value=r.label,e.BinList.push(n)}},e=>this.onDataLoadFailed(e))}getCustomers(){this.commonService.smartDropDownList("Customer","CustomerId","Name").subscribe(e=>{for(let n of e){var t=new Re;t.Key=n.value.toLocaleString(),t.Value=n.label,this.CustomerList.push(t)}},e=>this.onDataLoadFailed(e))}getVendors(){this.commonService.smartDropDownList("Vendor","VendorId","VendorName").subscribe(e=>{for(let n of e){var t=new Re;t.Key=n.value.toLocaleString(),t.Value=n.label,this.VendorList.push(t)}},e=>this.onDataLoadFailed(e))}getCompanyList(){this.commonService.smartDropDownList("LegalEntity","LegalEntityId","Name").subscribe(e=>{for(let n of e){var t=new Re;t.Key=n.value.toLocaleString(),t.Value=n.label,this.CompanyList.push(t)}},e=>this.onDataLoadFailed(e))}getManufacturers(){this.ManufacturerList=[],this.commonService.smartDropDownList("Manufacturer","ManufacturerId","Name").subscribe(e=>{for(let n of e){var t=new Re;t.Key=n.value.toLocaleString(),t.Value=n.label,this.ManufacturerList.push(t)}},e=>this.onDataLoadFailed(e))}onSerialNumberNotProvided(e){e.isDisabledSNboxes=!e.isDisabledSNboxes,e.serialNumber="",e.serialNumberNotProvided=!e.serialNumberNotProvided}onChangeTimeLife(e){e.timeLifeList[e.currentTLIndex].timeLifeCyclesId=0,e.timeLifeList[e.currentTLIndex].repairOrderId=e.repairOrderId,e.timeLifeList[e.currentTLIndex].repairOrderPartRecordId=e.repairOrderPartRecordId,e.timeLifeList[e.currentTLIndex].cyclesRemainingHrs=null,e.timeLifeList[e.currentTLIndex].cyclesRemainingMin=null,e.timeLifeList[e.currentTLIndex].cyclesSinceInspectionHrs=null,e.timeLifeList[e.currentTLIndex].cyclesSinceInspectionMin=null,e.timeLifeList[e.currentTLIndex].cyclesSinceNewHrs=null,e.timeLifeList[e.currentTLIndex].cyclesSinceNewMin=null,e.timeLifeList[e.currentTLIndex].cyclesSinceOVHHrs=null,e.timeLifeList[e.currentTLIndex].cyclesSinceOVHMin=null,e.timeLifeList[e.currentTLIndex].cyclesSinceRepairHrs=null,e.timeLifeList[e.currentTLIndex].cyclesSinceRepairMin=null,e.timeLifeList[e.currentTLIndex].timeRemainingHrs=null,e.timeLifeList[e.currentTLIndex].timeRemainingMin=null,e.timeLifeList[e.currentTLIndex].timeSinceInspectionHrs=null,e.timeLifeList[e.currentTLIndex].timeSinceInspectionMin=null,e.timeLifeList[e.currentTLIndex].timeSinceNewHrs=null,e.timeLifeList[e.currentTLIndex].timeSinceNewMin=null,e.timeLifeList[e.currentTLIndex].timeSinceOVHHrs=null,e.timeLifeList[e.currentTLIndex].timeSinceOVHMin=null,e.timeLifeList[e.currentTLIndex].timeSinceRepairHrs=null,e.timeLifeList[e.currentTLIndex].timeSinceRepairMin=null,e.timeLifeList[e.currentTLIndex].lastSinceNewHrs=null,e.timeLifeList[e.currentTLIndex].lastSinceNewMin=null,e.timeLifeList[e.currentTLIndex].lastSinceInspectionHrs=null,e.timeLifeList[e.currentTLIndex].lastSinceInspectionMin=null,e.timeLifeList[e.currentTLIndex].lastSinceOVHHrs=null,e.timeLifeList[e.currentTLIndex].lastSinceOVHMin=null}onSubmitToReceive(){let e=this.validatePage();if(e.length>0)return void this.alertService.showMessage(this.pageTitle,e[0],P.d.error);let t=this.extractAllAllStockLines();this.receivingService.receiveParts(t).subscribe(e=>{this.alertService.showMessage(this.pageTitle,"Stockline drafted successfully.",P.d.success),this.route.navigateByUrl("/receivingmodule/receivingpages/app-edit-ro?repairOrderId="+this.repairOrderId)},e=>{var t="";t=e.error.constructor==Array?e.error[0].errorMessage:e.error.Message,this.alertService.showMessage(this.pageTitle,t,P.d.error)})}extractAllAllStockLines(){let e=[],t=this.repairOrderData.filter(e=>e.quantityActuallyReceived>0);for(let r of t){let t=new Fe;t.itemMasterId=r.itemMaster.itemMasterId,t.isSerialized=r.itemMaster.isSerialized,t.isSameDetailsForAllParts=!!r.isSameDetailsForAllParts&&r.isSameDetailsForAllParts,t.repairOrderPartRecordId=r.repairOrderPartRecordId,t.stockLines=r.stocklineListObj,t.quantityActuallyReceived=r.quantityActuallyReceived?parseInt(r.quantityActuallyReceived.toString()):null,t.timeLife=this.getTimeLife(r.timeLifeList,r.repairOrderPartRecordId),e.push(t)}for(let r of t){for(let e of r.stocklineListObj)if(e.createdBy=this.userName,e.updatedBy=this.userName,e.tagType&&e.tagType.length>0){for(let t=0;t<e.tagType.length;t++)e.tagType[t]=Object(j.g)("label","value",e.tagType[t],this.TagTypeList);e.tagType=e.tagType.join()}else e.tagType="";if(r.isSameDetailsForAllParts){var n=Object.assign({},r.stocklineListObj[r.currentSLIndex]);for(let e of r.stocklineListObj)e=n}}return e}getTimeLife(e,t){let n=[];return n=e.map(e=>({cyclesRemaining:(e.cyclesRemainingHrs?e.cyclesRemainingHrs:"00")+":"+(e.cyclesRemainingMin?e.cyclesRemainingMin:"00"),timeRemaining:(e.timeRemainingHrs?e.timeRemainingHrs:"00")+":"+(e.timeRemainingMin?e.timeRemainingMin:"00"),cyclesSinceNew:(e.cyclesSinceNewHrs?e.cyclesSinceNewHrs:"00")+":"+(e.cyclesSinceNewMin?e.cyclesSinceNewMin:"00"),timeSinceNew:(e.timeSinceNewHrs?e.timeSinceNewHrs:"00")+":"+(e.timeSinceNewMin?e.timeSinceNewMin:"00"),lastSinceNew:(e.lastSinceNewHrs?e.lastSinceNewHrs:"00")+":"+(e.lastSinceNewMin?e.lastSinceNewMin:"00"),cyclesSinceOVH:(e.cyclesSinceOVHHrs?e.cyclesSinceOVHHrs:"00")+":"+(e.cyclesSinceOVHMin?e.cyclesSinceOVHMin:"00"),timeSinceOVH:(e.timeSinceOVHHrs?e.timeSinceOVHHrs:"00")+":"+(e.timeSinceOVHMin?e.timeSinceOVHMin:"00"),lastSinceOVH:(e.lastSinceOVHHrs?e.lastSinceOVHHrs:"00")+":"+(e.lastSinceOVHMin?e.lastSinceOVHMin:"00"),cyclesSinceInspection:(e.cyclesSinceInspectionHrs?e.cyclesSinceInspectionHrs:"00")+":"+(e.cyclesSinceInspectionMin?e.cyclesSinceInspectionMin:"00"),timeSinceInspection:(e.timeSinceInspectionHrs?e.timeSinceInspectionHrs:"00")+":"+(e.timeSinceInspectionMin?e.timeSinceInspectionMin:"00"),lastSinceInspection:(e.lastSinceInspectionHrs?e.lastSinceInspectionHrs:"00")+":"+(e.lastSinceInspectionMin?e.lastSinceInspectionMin:"00"),cyclesSinceRepair:(e.cyclesSinceRepairHrs?e.cyclesSinceRepairHrs:"00")+":"+(e.cyclesSinceRepairMin?e.cyclesSinceRepairMin:"00"),timeSinceRepair:(e.timeSinceRepairHrs?e.timeSinceRepairHrs:"00")+":"+(e.timeSinceRepairMin?e.timeSinceRepairMin:"00"),repairOrderPartRecordId:t})),n}validatePage(){let e=this.repairOrderData.filter(e=>e.quantityActuallyReceived>0),t=[];for(let s of e){0==s.itemMaster.glAccountId&&t.push("Please select GL Account of Part No. "+s.itemMaster.partNumber),null!=s.conditionId&&0!=s.conditionId||t.push("Please select Condition of Part No. "+s.itemMaster.partNumber),null!=s.quantityRejected&&""!=s.quantityRejected||t.push("Please enter Quantity Rejected of Part No."+s.itemMaster.partNumber),null!=s.stocklineListObj&&0!=s.stocklineListObj.length||t.push("No part received for Part No."+s.itemMaster.PartNumber);var n=" of Part No. "+s.itemMaster.partNumber;if(null!=s.stocklineListObj&&s.stocklineListObj.length>0)for(var r=0;r<s.stocklineListObj.length;r++)if(s.stocklineListObj[r].gLAccountId=s.itemMaster.glAccountId,s.stocklineListObj[r].conditionId=s.conditionId,s.stocklineListObj[r].quantityRejected=Number(s.quantityRejected),s.stocklineListObj[r].isSerialized=null!=s.itemMaster.isSerialized&&s.itemMaster.isSerialized,s.stocklineListObj[r].isPMA=s.itemMaster.pma,s.stocklineListObj[r].isDER=s.itemMaster.der,s.stocklineListObj[r].repairOrderExtendedCost=null==s.stocklineListObj[r].repairOrderExtendedCost||""==s.stocklineListObj[r].repairOrderExtendedCost.toString()?0:s.stocklineListObj[r].repairOrderExtendedCost,s.stocklineListObj[r].repairOrderUnitCost=null==s.stocklineListObj[r].repairOrderUnitCost||""==s.stocklineListObj[r].repairOrderUnitCost.toString()?0:s.stocklineListObj[r].repairOrderUnitCost,null!=s.stocklineListObj[r].companyId&&0!=s.stocklineListObj[r].companyId||t.push("Please select Company in Receiving Qty - "+(r+1).toString()+n),null!=s.stocklineListObj[r].siteId&&0!=s.stocklineListObj[r].siteId||t.push("Please select Site in Receiving Qty - "+(r+1).toString()+n),1==s.itemMaster.isSerialized&&(s.stocklineListObj[r].serialNumber=null!=s.stocklineListObj[r].serialNumber?s.stocklineListObj[r].serialNumber.trim():"",s.stocklineListObj[r].serialNumberNotProvided||null!=s.stocklineListObj[r].serialNumber&&""!=s.stocklineListObj[r].serialNumber||t.push("Please enter Serial Number in Receiving Qty - "+(r+1).toString()+n),!s.stocklineListObj[r].serialNumberNotProvided))for(var i=r+1;i<s.stocklineListObj.length;i++)s.stocklineListObj[r].serialNumberNotProvided||s.stocklineListObj[i].serialNumber!=s.stocklineListObj[r].serialNumber||t.push("Duplicate Serial Number is entered in Stock Line Page "+(r+1).toString()+" and Page "+(i+1).toString());if(null!=s.timeLifeList&&s.timeLifeList.length>0)for(r=0;r<s.timeLifeList.length;r++){var a=s.timeLifeList[r];if(1!=s.detailsNotProvided)null==(a=s.timeLifeList[r]).cyclesRemainingHrs&&null==a.cyclesRemainingMin&&null==a.cyclesSinceNewHrs&&null==a.cyclesSinceNewMin&&null==a.cyclesSinceOVHHrs&&null==a.cyclesSinceOVHMin&&null==a.cyclesSinceInspectionHrs&&null==a.cyclesSinceInspectionMin&&null==a.cyclesSinceRepairHrs&&null==a.cyclesSinceRepairMin&&null==a.timeRemainingHrs&&null==a.timeRemainingMin&&null==a.timeSinceNewHrs&&null==a.timeSinceNewMin&&null==a.timeSinceOVHHrs&&null==a.timeSinceOVHMin&&null==a.timeSinceInspectionHrs&&null==a.timeSinceInspectionMin&&null==a.timeSinceRepairHrs&&null==a.timeSinceRepairMin&&null==a.lastSinceNewHrs&&null==a.lastSinceNewMin&&null==a.lastSinceOVHHrs&&null==a.lastSinceOVHMin&&null==a.lastSinceInspectionHrs&&null==a.lastSinceInspectionMin&&t.push("Please enter atleast one field in Time Life Page - "+(r+1).toString()+n)}}return t}onObtainFromChange(e,t){t.obtainFrom="",t.obtainFromObject={},"1"===e.target.value&&(this.obtainfromcustomer=!0,this.obtainfromother=!1,this.obtainfromvendor=!1),"2"===e.target.value&&(this.obtainfromother=!0,this.obtainfromcustomer=!1,this.obtainfromvendor=!1),"3"===e.target.value&&(this.obtainfromvendor=!0,this.obtainfromcustomer=!1,this.obtainfromother=!1)}onOwnerChange(e,t){t.owner="",t.ownerObject={},"1"===e.target.value&&(this.ownercustomer=!0,this.ownerother=!1,this.ownervendor=!1),"2"===e.target.value&&(this.ownerother=!0,this.ownercustomer=!1,this.ownervendor=!1),"3"===e.target.value&&(this.ownervendor=!0,this.ownercustomer=!1,this.ownerother=!1)}onTraceableToChange(e,t){t.traceableTo="",t.traceableToObject={},"1"===e.target.value&&(this.traceabletocustomer=!0,this.traceabletoother=!1,this.traceabletovendor=!1),"2"===e.target.value&&(this.traceabletoother=!0,this.traceabletocustomer=!1,this.traceabletovendor=!1),"3"===e.target.value&&(this.traceabletovendor=!0,this.traceabletocustomer=!1,this.traceabletoother=!1)}addPageCustomer(){this.route.navigateByUrl("/customersmodule/customerpages/app-customer-general-information")}onFilter(e,t,n){if(t.filteredRecords=[],1==n)var r=this.CustomerList;else if(2==n)r=this.VendorList;else if(9==n)r=this.CompanyList;if(null!=r&&r.length>0)for(let i of r)null!=i.Value&&0==i.Value.toLowerCase().indexOf(e.query.toLowerCase())&&t.filteredRecords.push(i)}onObtainSelect(e){e.obtainFrom=e.obtainFromObject.Key}onOwnerSelect(e){e.owner=e.ownerObject.Key}onTraceableToSelect(e){e.traceableTo=e.traceableToObject.Key}getConditionList(){this.commonService.smartDropDownList("Condition","ConditionId","Description").subscribe(e=>{for(let n of e){var t=new Re;t.Key=n.value.toLocaleString(),t.Value=n.label,this.ConditionList.push(t)}},e=>this.onDataLoadFailed(e))}getAllGLAccount(){this.commonService.getGlAccountList().subscribe(e=>{for(let n of e){var t=new Re;t.Key=n.value.toLocaleString(),t.Value=n.label,this.GLAccountList.push(t)}})}toggleSameDetailsForAllParts(e){if(e.isSameDetailsForAllParts=!e.isSameDetailsForAllParts,e.isSameDetailsForAllParts)for(var t=e.currentSLIndex;t<e.stocklineListObj.length;t++){var n=Object.assign({},e.stocklineListObj[e.currentSLIndex]);e.stocklineListObj[t]=n}}isCheckedSameDetailsForAllParts(e){if(e.isSameDetailsForAllParts)for(var t=e.currentSLIndex;t<e.stocklineListObj.length;t++){var n=Object.assign({},e.stocklineListObj[e.currentSLIndex]);e.stocklineListObj[t]=n}}togglePartSerialized(e){null==e.itemMaster.isSerialized&&e.itemMaster.isSerialized,this.itemmaster.updateItemMasterSerialized(e.itemMasterId,e.itemMaster.isSerialized).subscribe(t=>{var n=this.repairOrderData.filter(t=>t.itemMaster.partNumber==e.itemMaster.partNumber&&!t.itemMaster.isParent);for(let r of n)r.itemMaster.isSerialized=e.itemMaster.isSerialized;this.alertService.showMessage(this.pageTitle,"Part "+e.itemMaster.partNumber+" IsSerialized feature "+(e.itemMaster.isSerialized?"enabled":"disabled")+" successfully.",P.d.success)},t=>{e.itemMaster.isSerialized=!e.itemMaster.isSerialized,this.alertService.showMessage(this.pageTitle,"Something went wrong while updating Item Master",P.d.error)})}togglePartTimeLife(e){null==e.itemMaster.isTimeLife&&e.itemMaster.isTimeLife,this.itemmaster.updateItemMasterTimeLife(e.itemMasterId,e.itemMaster.isTimeLife).subscribe(t=>{if(e.timeLifeList=[],e.quantityActuallyReceived&&1==e.itemMaster.isTimeLife){e.currentSLIndex=0,e.currentSERIndex=0,e.currentTLIndex=0;for(var n=0;n<e.quantityActuallyReceived;n++){let t=new Ce;t.timeLifeCyclesId=0,t.repairOrderId=e.repairOrderId,t.repairOrderPartRecordId=e.repairOrderPartRecordId,t.cyclesRemainingHrs=null,t.cyclesRemainingMin=null,t.cyclesSinceInspectionHrs=null,t.cyclesSinceInspectionMin=null,t.cyclesSinceNewHrs=null,t.cyclesSinceNewMin=null,t.cyclesSinceOVHHrs=null,t.cyclesSinceOVHMin=null,t.cyclesSinceRepairHrs=null,t.cyclesSinceRepairMin=null,t.timeRemainingHrs=null,t.timeRemainingMin=null,t.timeSinceInspectionHrs=null,t.timeSinceInspectionMin=null,t.timeSinceNewHrs=null,t.timeSinceNewMin=null,t.timeSinceOVHHrs=null,t.timeSinceOVHMin=null,t.timeSinceRepairHrs=null,t.timeSinceRepairMin=null,t.lastSinceNewHrs=null,t.lastSinceNewMin=null,t.lastSinceInspectionHrs=null,t.lastSinceInspectionMin=null,t.lastSinceOVHHrs=null,t.lastSinceOVHMin=null,t.detailsNotProvided=!1,e.timeLifeList.push(t)}}var r=this.repairOrderData.filter(t=>t.itemMaster.partNumber==e.itemMaster.partNumber&&!t.itemMaster.isParent);for(let i of r)i.itemMaster.isTimeLife=e.itemMaster.isTimeLife;this.alertService.showMessage(this.pageTitle,"Part "+e.itemMaster.partNumber+" IsTimeLife feature "+(e.itemMaster.isTimeLife?"enabled":"disabled")+" successfully.",P.d.success)},t=>{e.itemMaster.isSerialized=!e.itemMaster.isSerialized,this.alertService.showMessage(this.pageTitle,"Something went wrong while update Item Master",P.d.error)})}quantityRejectedFocusOut(e,t){if(""==e.target.value)return e.target.value="0",!0}quantityRejectedFocusIn(e,t){if("0"==e.target.value)return e.target.value="",!0}calculateExtendedCost(e,t){if(null!=t.stocklineListObj[t.currentSLIndex].repairOrderUnitCost&&""!=t.stocklineListObj[t.currentSLIndex].repairOrderUnitCost){if(t.itemMaster.isSerialized)t.stocklineListObj[t.currentSLIndex].repairOrderExtendedCost=t.stocklineListObj[t.currentSLIndex].repairOrderUnitCost;else{const e=t.stocklineListObj[t.currentSLIndex].repairOrderUnitCost?parseFloat(t.stocklineListObj[t.currentSLIndex].repairOrderUnitCost.toString().replace(/\,/g,"")):0;t.stocklineListObj[t.currentSLIndex].repairOrderExtendedCost=e*t.quantityActuallyReceived}t.stocklineListObj[t.currentSLIndex].repairOrderUnitCost&&(t.stocklineListObj[t.currentSLIndex].repairOrderUnitCost=Object(j.b)(t.stocklineListObj[t.currentSLIndex].repairOrderUnitCost,2)),t.stocklineListObj[t.currentSLIndex].repairOrderExtendedCost&&(t.stocklineListObj[t.currentSLIndex].repairOrderExtendedCost=Object(j.b)(t.stocklineListObj[t.currentSLIndex].repairOrderExtendedCost,2))}}moveByKey(e,t){e.ctrlKey&&40==e.keyCode&&this.moveStockLinePage("stockline",t.currentSERIndex+1,t),e.ctrlKey&&38==e.keyCode&&this.moveStockLinePage("stockline",t.currentSERIndex-1,t)}getTagType(){this.commonService.smartDropDownList("TagType","TagTypeId","Name").subscribe(e=>{this.TagTypeList=e})}onChangeTimeLifeMin(e,t,n){t.timeLifeList[n][e]>59&&(t.timeLifeList[n][e]=0,this.alertService.showMessage(this.pageTitle,"Minutes can't be greater than 59",P.d.error))}};Ee.ctorParameters=()=>[{type:X.a},{type:J.a},{type:Y.a},{type:te.a},{type:ee.a},{type:B.a},{type:Z.a},{type:ye.a},{type:$.a},{type:me.a},{type:xe.a},{type:Se.a},{type:R.c},{type:T.Router},{type:fe.a},{type:se.a},{type:Q.a},{type:be.a},{type:Le.a},{type:P.b},{type:Ie.a},{type:oe.a},{type:ue},{type:T.ActivatedRoute},{type:A.a},{type:he.a},{type:E.a},{type:y.DatePipe}],Ee=r.b([Object(i.Component)({selector:"app-receiving-ro",template:r.c(n("W2kj")).default,providers:[y.DatePipe],styles:[r.c(n("xS9c")).default]})],Ee);let Ve=class{constructor(e,t,n,r,i,a,s,o,l,c,d,p,u,m,h){this.receivingService=e,this.priority=t,this.vendorService=n,this.conditionService=r,this.siteService=i,this.binservice=a,this.legalEntityService=s,this.manufacturerService=o,this.route=l,this.alertService=c,this.uomService=d,this.glAccountService=p,this.shippingService=u,this._actRoute=m,this.commonService=h,this.allManufacturerInfo=[],this.allconditioninfo=[],this.localData=[],this.partBulist=[],this.partDepartmentList=[],this.partDivisionlist=[],this.allPriorityInfo=[],this.toggle_epo_header=!1,this.obtainfromcustomer=!1,this.obtainfromother=!1,this.obtainfromvendor=!1,this.ownercustomer=!1,this.ownerother=!1,this.ownervendor=!1,this.traceabletocustomer=!1,this.traceabletoother=!1,this.traceabletovendor=!1,this.rpoEditPF=!0,this.rpoEditCF=!0,this.repairOrderData=[],this.pageTitle="Edit Receieve RO",this.managementStructureHierarchy=[],this.selectedManagementStructure=[],this.ManufacturerList=[],this.headerManagementStructure={},this.isSpinnerVisible=!0,this.localPoData=this.vendorService.selectedPoCollection,this.editPoData=this.localData[0],this.currentDate=new Date}ngOnInit(){if(this.repairOrderId=this._actRoute.snapshot.queryParams.repairorderid,null==this.repairOrderId)return this.alertService.showMessage(this.pageTitle,"No purchase order is selected to view.",P.d.error),this.route.navigate(["/receivingmodule/receivingpages/app-purchase-order"]);this.receivingService.getReceivingROHeaderById(this.repairOrderId).subscribe(e=>{console.log(e),this.repairOrderHeaderData=e,this.repairOrderHeaderData.openDate=this.repairOrderHeaderData.openDate?new Date(this.repairOrderHeaderData.openDate):"",this.repairOrderHeaderData.closedDate=this.repairOrderHeaderData.closedDate?new Date(this.repairOrderHeaderData.closedDate):"",this.repairOrderHeaderData.dateApproved=this.repairOrderHeaderData.dateApproved?new Date(this.repairOrderHeaderData.dateApproved):"",this.repairOrderHeaderData.needByDate=this.repairOrderHeaderData.needByDate?new Date(this.repairOrderHeaderData.needByDate):"",this.getManagementStructureCodes(this.repairOrderHeaderData.managementStructureId)}),this.getStockDetailsOnLoad(),this.localData=[{partNumber:"PN123"}]}getStockDetailsOnLoad(){this.receivingService.getReceivingROPartsForViewById(this.repairOrderId).subscribe(e=>{this.repairOrderData=e.map(e=>Object.assign({},e,{stockLine:this.getStockLineDetails(e.stockLineDraft),timeLife:this.getTimeLifeDetails(e.timeLifeDraft),unitCost:e.unitCost?Object(j.b)(e.unitCost,2):"",extendedCost:e.extendedCost?Object(j.b)(e.extendedCost,2):""}));for(let r=0;r<this.repairOrderData.length;r++)this.getManagementStructureCodesForPart(this.repairOrderData[r]);var t=this.repairOrderData.filter(e=>1==e.isParent);for(let r of t){var n=this.repairOrderData.filter(e=>!e.isParent&&e.itemMaster.partNumber==r.itemMaster.partNumber);if(n.length>0){r.hasChildren=!0,r.quantityOrdered=0;for(let e of n)r.stockLineCount+=e.stockLineCount,e.managementStructureId=r.managementStructureId,e.managementStructureName=r.managementStructureName,r.quantityOrdered+=e.quantityOrdered}else r.hasChildren=!1}this.getStatus(),this.isSpinnerVisible=!1},e=>{this.alertService.showMessage(this.pageTitle,"Something went wrong while loading the Repair Order detail",P.d.error),this.isSpinnerVisible=!1})}getStockLineDetails(e){return e=e.map(e=>Object.assign({},e,{repairOrderUnitCost:e.repairOrderUnitCost?Object(j.b)(e.repairOrderUnitCost,2):"0.00",repairOrderExtendedCost:e.repairOrderExtendedCost?Object(j.b)(e.repairOrderExtendedCost,2):"0.00"}))}getTimeLifeDetails(e){return e=e.map(e=>({cyclesRemaining:e.cyclesRemaining?e.cyclesRemaining:"00:00",cyclesSinceInspection:e.cyclesSinceInspection?e.cyclesSinceInspection:"00:00",cyclesSinceNew:e.cyclesSinceNew?e.cyclesSinceNew:"00:00",cyclesSinceOVH:e.cyclesSinceOVH?e.cyclesSinceOVH:"00:00",cyclesSinceRepair:e.cyclesSinceRepair?e.cyclesSinceRepair:"00:00",timeRemaining:e.timeRemaining?e.timeRemaining:"00:00",timeSinceInspection:e.timeSinceInspection?e.timeSinceInspection:"00:00",timeSinceNew:e.timeSinceNew?e.timeSinceNew:"00:00",timeSinceOVH:e.timeSinceOVH?e.timeSinceOVH:"00:00",timeSinceRepair:e.timeSinceRepair?e.timeSinceRepair:"00:00",lastSinceInspection:e.lastSinceInspection?e.lastSinceInspection:"00:00",lastSinceNew:e.lastSinceNew?e.lastSinceNew:"00:00",lastSinceOVH:e.lastSinceOVH?e.lastSinceOVH:"00:00"}))}getManagementStructureCodes(e){this.commonService.getManagementStructureCodes(e).subscribe(e=>{e.Level1&&(this.headerManagementStructure.level1=e.Level1),e.Level2&&(this.headerManagementStructure.level2=e.Level2),e.Level3&&(this.headerManagementStructure.level3=e.Level3),e.Level4&&(this.headerManagementStructure.level4=e.Level4)})}getManagementStructureCodesForPart(e){this.commonService.getManagementStructureCodes(e.managementStructureId).subscribe(t=>{t.Level1&&(e.companyText=t.Level1),t.Level2&&(e.businessUnitText=t.Level2),t.Level3&&(e.divisionText=t.Level3),t.Level4&&(e.departmentText=t.Level4)})}getManagementStructure(){return this.legalEntityService.getManagemententity()}getManagementStructureHierarchy(e,t,n){var r=this.managementStructure.filter((function(t){return t.managementStructureId==e}));if(null!=r&&r.length>0){var i=r[0];if(null!=i.parentId){var a=this.managementStructure.filter((function(e){return e.parentId==i.parentId}));null!=t&&t.push(a),null!=n&&n.push(i),this.getManagementStructureHierarchy(i.parentId,t,n)}else{a=this.managementStructure.filter((function(e){return null==e.parentId}));null!=t&&t.push(a),null!=n&&n.push(i)}}}getStatus(){this.roStatus=[],this.commonService.smartDropDownList("ROStatus","ROStatusId","Description").subscribe(e=>{this.roStatus=e,this.roStatus=this.roStatus.sort((e,t)=>e.value>t.value?1:t.value>e.value?-1:0)})}getPartBusinessUnitList(e){e.managementStructureId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.companyId}));e.BusinessUnitList=[],e.DivisionList=[],e.DepartmentList=[],e.businessUnitId=0,e.divisionId=0,e.departmentId=0;for(let r of t){var n=new Re;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.BusinessUnitList.push(n)}}getPartDivision(e){null!=e.businessUnitId&&e.businessUnitId>0?e.managementStructureId=e.businessUnitId:e.managementStructureId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.businessUnitId}));e.DivisionList=[],e.DepartmentList=[],e.divisionId=0,e.departmentId=0;for(let r of t){var n=new Re;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DivisionList.push(n)}}getPartDepartment(e){null!=e.divisionId&&e.divisionId>0?e.managementStructureId=e.divisionId:e.managementStructureId=e.businessUnitId;var t=this.managementStructure.filter((function(t){return t.parentId==e.divisionId}));e.DepartmentList=[],e.departmentId=0;for(let r of t){var n=new Re;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DepartmentList.push(n)}}setPartDepartmentManagementStructureId(e){null!=e.departmentId&&e.departmentId>0?e.managementStructureId=e.departmentId:e.managementStructureId=e.divisionId}getStockLineBusinessUnitList(e){e.managementStructureEntityId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.companyId}));e.BusinessUnitList=[],e.DivisionList=[],e.DepartmentList=[],e.businessUnitId=0,e.divisionId=0,e.departmentId=0;for(let r of t){var n=new Re;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.BusinessUnitList.push(n)}}getStockLineDivision(e){null!=e.businessUnitId&&e.businessUnitId>0?e.managementStructureEntityId=e.businessUnitId:e.managementStructureEntityId=e.companyId;var t=this.managementStructure.filter((function(t){return t.parentId==e.businessUnitId}));e.DivisionList=[],e.DepartmentList=[],e.divisionId=0,e.departmentId=0;for(let r of t){var n=new Re;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DivisionList.push(n)}}getStockLineDepartment(e){null!=e.divisionId&&e.divisionId>0?e.managementStructureEntityId=e.divisionId:e.managementStructureEntityId=e.businessUnitId;var t=this.managementStructure.filter((function(t){return t.parentId==e.divisionId}));e.DepartmentList=[],e.departmentId=0;for(let r of t){var n=new Re;n.Key=r.managementStructureId.toLocaleString(),n.Value=r.code,e.DepartmentList.push(n)}}setStockLineDepartmentManagementStructureId(e){null!=e.departmentId&&e.departmentId>0?e.managementStructureEntityId=e.departmentId:e.managementStructureEntityId=e.divisionId}getStockLineSite(e,t){e.SiteList=[],e.WareHouseList=[],e.LocationList=[],e.ShelfList=[],e.BinList=[],t||(e.siteId=0,e.warehouseId=0,e.locationId=0,e.shelfId=0,e.binId=0);for(let r of this.SiteList){var n=new Re;n.Key=r.siteId.toLocaleString(),n.Value=r.name,e.SiteList.push(n)}}getStockLineWareHouse(e,t){e.WareHouseList=[],e.LocationList=[],e.ShelfList=[],e.BinList=[],t||(e.warehouseId=0,e.locationId=0,e.shelfId=0,e.binId=0),this.binservice.getWareHouseBySiteId(e.siteId).subscribe(t=>{for(let r of t){var n=new Re;n.Key=r.warehouseId.toLocaleString(),n.Value=r.warehouseName,e.WareHouseList.push(n)}},e=>this.onDataLoadFailed(e))}getStockLineLocation(e,t){e.LocationList=[],e.ShelfList=[],e.BinList=[],t||(e.locationId=0,e.shelfId=0,e.binId=0),this.binservice.getLocationByWareHouseId(e.warehouseId).subscribe(t=>{console.log(t);for(let r of t){var n=new Re;n.Key=r.locationId.toLocaleString(),n.Value=r.name,e.LocationList.push(n)}},e=>this.onDataLoadFailed(e))}getStockLineShelf(e,t){e.ShelfList=[],e.BinList=[],t||(e.shelfId=0,e.binId=0),this.binservice.getShelfByLocationId(e.locationId).subscribe(t=>{for(let r of t){var n=new Re;n.Key=r.shelfId.toLocaleString(),n.Value=r.name,e.ShelfList.push(n)}},e=>this.onDataLoadFailed(e))}getPartWareHouse(e){if(e.WareHouseList=[],e.LocationList=[],e.ShelfList=[],e.BinList=[],e.warehouseId=0,e.locationId=0,e.shelfId=0,e.binId=0,e.stockLine)for(var t of e.stockLine)t.siteId=e.siteId,t.warehouseId=0,t.locationId=0,t.shelfId=0,t.binId=0,t.WareHouseList=[],t.LocationList=[],t.ShelfList=[],t.BinList=[];this.binservice.getWareHouseBySiteId(e.siteId).subscribe(t=>{for(let i of t){var n=new Re;if(n.Key=i.warehouseId.toLocaleString(),n.Value=i.warehouseName,e.WareHouseList.push(n),e.stockLine)for(var r of e.stockLine)r.WareHouseList.push(n)}},e=>this.onDataLoadFailed(e))}getPartLocation(e){if(e.LocationList=[],e.ShelfList=[],e.BinList=[],e.locationId=0,e.shelfId=0,e.binId=0,e.stockLine)for(var t of e.stockLine)t.warehouseId=e.warehouseId,t.locationId=0,t.shelfId=0,t.binId=0,t.LocationList=[],t.ShelfList=[],t.BinList=[];this.binservice.getLocationByWareHouseId(e.warehouseId).subscribe(t=>{for(let i of t){var n=new Re;if(n.Key=i.locationId.toLocaleString(),n.Value=i.name,e.LocationList.push(n),e.stockLine)for(var r of e.stockLine)r.LocationList.push(n)}},e=>this.onDataLoadFailed(e))}getPartShelf(e){if(e.ShelfList=[],e.BinList=[],e.shelfId=0,e.binId=0,e.stockLine)for(var t of e.stockLine)t.locationId=e.locationId,t.shelfId=0,t.binId=0,t.ShelfList=[],t.BinList=[];this.binservice.getShelfByLocationId(e.locationId).subscribe(t=>{for(let i of t){var n=new Re;if(n.Key=i.shelfId.toLocaleString(),n.Value=i.name,e.ShelfList.push(n),e.stockLine)for(var r of e.stockLine)r.ShelfList.push(n)}},e=>this.onDataLoadFailed(e))}getPartBin(e){if(e.BinList=[],e.binId=0,e.stockLine)for(var t of e.stockLine)t.shelfId=e.shelfId,t.binId=0,t.BinList=[];this.binservice.getBinByShelfId(e.shelfId).subscribe(t=>{for(let r of t){var n=new Re;n.Key=r.binId.toLocaleString(),n.Value=r.name,e.BinList.push(n)}},e=>this.onDataLoadFailed(e))}setPartBinIdToStockline(e){if(e.stockLine)for(var t of e.stockLine)t.binId=e.binId}conditionChange(e){if(e.stockLine)for(var t of e.stockLine)t.conditionId=e.conditionId}getStockLineBin(e,t){e.BinList=[],t||(e.binId=0),this.binservice.getBinByShelfId(e.shelfId).subscribe(t=>{for(let r of t){var n=new Re;n.Key=r.binId.toLocaleString(),n.Value=r.name,e.BinList.push(n)}},e=>this.onDataLoadFailed(e))}calculateExtendedCost(e,t){null!=t.purchaseOrderUnitCost&&""!=t.purchaseOrderUnitCost&&(e.itemMaster.isSerialized?t.purchaseOrderExtendedCost=t.purchaseOrderUnitCost:t.purchaseOrderExtendedCost=t.purchaseOrderUnitCost*e.quantityActuallyReceived)}calculatePartExtendedCost(e){if(null!=e.unitCost&&""!=e.unitCost&&(e.itemMaster.isSerialized?e.extendedCost=e.unitCost:e.extendedCost=e.unitCost*e.quantityActuallyReceived,e.stockLine))for(var t of e.stockLine)t.purchaseOrderUnitCost=e.unitCost,t.purchaseOrderExtendedCost=e.extendedCost}onDataLoadFailed(e){this.isSpinnerVisible=!1}onObtainFromChange(e){"1"===e.target.value&&(this.obtainfromcustomer=!0,this.obtainfromother=!1,this.obtainfromvendor=!1),"2"===e.target.value&&(this.obtainfromother=!0,this.obtainfromcustomer=!1,this.obtainfromvendor=!1),"3"===e.target.value&&(this.obtainfromvendor=!0,this.obtainfromcustomer=!1,this.obtainfromother=!1)}onOwnerChange(e){"1"===e.target.value&&(this.ownercustomer=!0,this.ownerother=!1,this.ownervendor=!1),"2"===e.target.value&&(this.ownerother=!0,this.ownercustomer=!1,this.ownervendor=!1),"3"===e.target.value&&(this.ownervendor=!0,this.ownercustomer=!1,this.ownerother=!1)}onTraceableToChange(e){"1"===e.target.value&&(this.traceabletocustomer=!0,this.traceabletoother=!1,this.traceabletovendor=!1),"2"===e.target.value&&(this.traceabletoother=!0,this.traceabletocustomer=!1,this.traceabletovendor=!1),"3"===e.target.value&&(this.traceabletovendor=!0,this.traceabletocustomer=!1,this.traceabletoother=!1)}editStockLine(e){e.isEnabled=!e.isEnabled,e.quantityRejected=0}CreateRepairOrderStockline(){this.receivingService.CreateStockLineForRepairOrder(this.repairOrderId).subscribe(e=>(this.alertService.showMessage(this.pageTitle,"Stockline created successfully.",P.d.success),this.route.navigate(["/receivingmodule/receivingpages/app-ro"])),e=>this.onDataLoadFailed(e))}deleteStockLine(e){if(e&&1==confirm("Stock Line will be deleted after save/update. Do you still want to continue?"))return this.isSpinnerVisible=!0,this.receivingService.deleteStockLineDraft(e.stockLineDraftId,e.quantity).subscribe(e=>{this.getStockDetailsOnLoad()},e=>{this.isSpinnerVisible=!1}),void this.alertService.showMessage(this.pageTitle,"Stock Line removed from the list.",P.d.success)}};Ve.ctorParameters=()=>[{type:te.a},{type:ee.a},{type:$.a},{type:Q.a},{type:Z.a},{type:X.a},{type:Y.a},{type:J.a},{type:T.Router},{type:P.b},{type:se.a},{type:oe.a},{type:ue},{type:T.ActivatedRoute},{type:A.a}],Ve=r.b([Object(i.Component)({selector:"app-view-ro",template:r.c(n("mzUF")).default,styles:[r.c(n("oGWj")).default]})],Ve);const je=[{path:"receivingpages",component:N,children:[{path:"app-customer-works-list",component:q,data:{title:"Customer Work List"}},{path:"app-customer-work-setup",component:z,data:{title:"Customer Work Setup"}},{path:"app-customer-work-setup/edit/:id",component:z,data:{title:"Customer Work Setup"}},{path:"app-edit-po",component:ge,data:{title:"Reviewing PO Receipt"}},{path:"app-view-po",component:Te,data:{title:"View PO"}},{path:"app-purchase-order",component:ve,data:{title:"Purchase Order"}},{path:"app-receivng-po",component:Oe,data:{title:"Receivng PO"}},{path:"app-repair-order",component:De,data:{title:"Repair Order"}},{path:"app-edit-ro",component:He,data:{title:"Reviewing RO Receipt"}},{path:"app-edit-ro?repairOrderId=:id",component:He,data:{title:"Edit RO"}},{path:"app-ro",component:Pe,data:{title:"Repair Order"}},{path:"app-receiving-ro",component:Ee,data:{title:"Receivng RO"}},{path:"app-receiving-ro?repairOrderId=:id",component:Ee,data:{title:"Receivng RO"}},{path:"app-view-ro",component:Ve,data:{title:"View RO"}}]}];let Ae=class{};Ae=r.b([Object(i.NgModule)({imports:[T.RouterModule.forChild(je)],exports:[T.RouterModule],providers:[E.a,G.a]})],Ae);var Be=n("s6ns"),Ue=n("wKas");let _e=class{constructor(e,t,n,r,i,a,s,o,l,c,d,p,u,m,h,g,v,b){this.router=e,this.conditionService=t,this.workFlowtService1=n,this.siteService=r,this.binService=i,this.vendorservice=a,this.employeeService=s,this.alertService=o,this.itemser=l,this.authService=c,this.modalService=d,this.activeModal=p,this._fb=u,this.receivingCustomerWorkService=m,this.dialog=h,this.masterComapnyService=g,this.customerservices=v,this.workOrderService=b,this.allEmployeeinfo=[],this.itemclaColl=[],this.allPartnumbersInfo=[],this.isEditMode=!1,this.allRecevinginfo=[],this.allActions=[],this.descriptionbyPart=[],this.allEmpActions=[],this.allManagemtninfo=[],this.maincompanylist=[],this.CustomerInfoByName=[],this.sourcereceivingEdit={},this.sourceTimeLife={},this.parentManagementInfo=[],this.childManagementInfo=[],this.bulist=[],this.divisionlist=[],this.departmentList=[],this.partListData=[],this.sourcereceving={},this.sourcerecevingForWorkOrder={},this.allWorkFlows=[],this.dataSource=new F.a,this.receivingCustomerWorkService.listCollection&&1==this.receivingCustomerWorkService.isEditMode&&(this.showLable=!0,this.sourcereceving=this.receivingCustomerWorkService.listCollection,this.sourcereceving.serialNumber=this.receivingCustomerWorkService.listCollection.serialNumber,this.sourcereceving.name=this.receivingCustomerWorkService.listCollection.customer.name,this.sourcereceving.serialNumber&&(this.sourcereceving.isSerialized=!0),null==this.sourcereceving.serialNumber&&(this.sourcereceving.isSerialized=!1),this.sourcereceving.siteId&&this.binService.getWareHouseDate(this.sourcereceving.siteId).subscribe(e=>this.onDataLoadWareHouse(e),e=>this.onDataLoadFailed(e)),this.sourcereceving.warehouseId&&this.binService.getLocationDate(this.sourcereceving.warehouseId).subscribe(e=>this.onDataLoadLocation(e),e=>this.onDataLoadFailed(e)),this.sourcereceving.locationId&&this.binService.getShelfDate(this.sourcereceving.locationId).subscribe(e=>this.onDataLoadShelf(e),e=>this.onDataLoadFailed(e)),this.sourcereceving.shelfId&&this.binService.getBinDataById(this.sourcereceving.shelfId).subscribe(e=>this.onDataLoadBin(e),e=>this.onDataLoadFailed(e)),this.sourcereceving.timeLifeDate?this.sourcereceving.timeLifeDate=new Date(this.sourcereceving.timeLifeDate):this.sourcereceving.timeLifeDate=new Date,this.sourcereceving.manufacturingDate?this.sourcereceving.manufacturingDate=new Date(this.sourcereceving.manufacturingDate):this.sourcereceving.manufacturingDate=new Date,this.sourcereceving.tagDate?this.sourcereceving.tagDate=new Date(this.sourcereceving.tagDate):this.sourcereceving.tagDate=new Date,this.sourcereceving.expirationDate?this.sourcereceving.expirationDate=new Date(this.sourcereceving.expirationDate):this.sourcereceving.expirationDate=new Date)}ngOnInit(){this.sourcereceving.isCustomerStock=!0,this.employeedata(),this.loadData(),this.ptnumberlistdata(),this.Receveingcustomerlist(),this.loadDataForCondition(),this.customerList(),this.loadItemmasterData(),this.vendorList(),this.loadSiteData(),this.loadManagementdata(),this.loadManagementdataForTree(),this.sourcereceving.receivingCustomerWorkId?this.sourcereceivingEdit.receivingCustomerWorkId=this.sourcereceving.receivingCustomerWorkId:(this.sourcereceving.receivingCustomerNumber="Creating",this.sourcereceving.expirationDate=new Date,this.sourcereceving.tagDate=new Date,this.sourcereceving.manufacturingDate=new Date,this.sourcereceving.timeLifeDate=new Date)}ngAfterViewInit(){}loadData(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.employeeService.getEmployeeList().subscribe(e=>this.onDataLoadSuccessful(e[0]),e=>this.onDataLoadFailed(e))}onDataLoadSuccessful(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.allEmpActions=e}loadMasterCompanies(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe(e=>this.onDataMasterCompaniesLoadSuccessful(e[0]),e=>this.onDataLoadFailed(e))}applyFilter(e){this.dataSource.filter=e}onHistoryLoadSuccessful(e,t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=e,this.modal=this.modalService.open(t,{size:"lg"}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}onDataMasterCompaniesLoadSuccessful(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=e}onDataLoadFailed(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}handleChange(e,t){0==t.checked?(this.sourcereceving=e,this.sourcereceving.updatedBy=this.userName,this.Active="In Active",this.sourcereceving.isActive,this.receivingCustomerWorkService.updateReason(this.sourcereceving).subscribe(e=>this.saveCompleted(this.sourcereceving),e=>this.saveFailedHelper(e)),alert(t)):(this.sourcereceving=e,this.sourcereceving.updatedBy=this.userName,this.Active="Active",this.sourcereceving.isActive,this.receivingCustomerWorkService.updateReason(this.sourcereceving).subscribe(e=>this.saveCompleted(this.sourcereceving),e=>this.saveFailedHelper(e)),alert(t))}open(e){this.isEditMode=!1,this.isDeleteMode=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourcereceving.isActive=!0,this.chargeName="",this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}openDelete(e,t){this.isEditMode=!1,this.isDeleteMode=!0,this.sourcereceving=t,this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}openEdit(e,t){this.isEditMode=!0,this.isSaving=!0,this.loadMasterCompanies(),this.sourcereceving=t,this.sourcereceving.timeLifeDate?this.sourcereceving.timeLifeDate=new Date(this.sourcereceving.timeLifeDate):this.sourcereceving.timeLifeDate=new Date,this.sourcereceving.manufacturingDate?this.sourcereceving.manufacturingDate=new Date(this.sourcereceving.manufacturingDate):this.sourcereceving.manufacturingDate=new Date,this.sourcereceving.tagDate?this.sourcereceving.tagDate=new Date(this.sourcereceving.tagDate):this.sourcereceving.tagDate=new Date,this.sourcereceving.expirationDate?this.sourcereceving.expirationDate=new Date(this.sourcereceving.expirationDate):this.sourcereceving.expirationDate=new Date,this.loadMasterCompanies(),this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}openHelpText(e){this.modal=this.modalService.open(e,{size:"sm"}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}filterCodes(e){this.custcodes=this.allCustomer,this.custcodes=[...this.allCustomer.filter(t=>t.customerCode.toLowerCase().includes(e.query.toLowerCase()))]}editItemAndCloseModel(e){this.isSaving=!0,this.sourcereceving.receivingCustomerWorkId?(this.sourcereceving.updatedBy=this.userName,this.sourcereceving.createdBy=this.userName,this.sourcereceving.masterCompanyId=1,this.receivingCustomerWorkService.updateReason(this.sourcereceving).subscribe(e=>this.saveCompleted(this.sourcereceving),e=>this.saveFailedHelper(e)),this.sourcereceving.timeLifeCyclesId?(console.log("Update Timelife"),this.receivingCustomerWorkService.updateStockLineTimelife(this.sourceTimeLife).subscribe(e=>{this.collectionofstockLine=e,this.router.navigateByUrl("receivingmodule/receivingpages/app-customer-works-list")})):this.receivingCustomerWorkService.newStockLineTimeLife(this.sourceTimeLife).subscribe(e=>{this.collectionofstockLine=e,this.value=1,this.router.navigateByUrl("receivingmodule/receivingpages/app-customer-works-list")}),this.sourcereceving={}):(this.sourcereceving.createdBy=this.userName,this.sourcereceving.updatedBy=this.userName,this.sourceTimeLife.createdBy=this.userName,this.sourceTimeLife.updatedBy=this.userName,this.sourcereceving.masterCompanyId=1,this.sourcereceving.isActive=!0,this.sourcerecevingForWorkOrder=this.sourcereceving,console.log(this.sourcereceving),null==this.sourceTimeLife&&"null"==this.sourceTimeLife||(this.sourceTimeLife.timeLife?this.receivingCustomerWorkService.newStockLineTimeLife(this.sourceTimeLife).subscribe(t=>{switch(this.collectionofstockLineTimeLife=t,this.sourcereceving.timeLifeCyclesId=t.timeLifeCyclesId,this.value=1,null!=this.sourcereceving.isSerialized&&0!=this.sourcereceving.isSerialized||(this.sourcereceving.serialNumber="",this.sourcereceving.certifiedBy="",this.sourcereceving.tagDate="",this.sourcereceving.tagType="",this.sourcereceving.partCertificationNumber=""),this.sourcereceving.traceableToType){case"1":this.sourcereceving.traceableTo=this.sourcereceving.traceableToCustomerId;break;case"2":this.sourcereceving.traceableTo=this.sourcereceving.traceableToOther;break;case"3":this.sourcereceving.traceableTo=this.sourcereceving.traceableToVendorId;break;case"4":this.sourcereceving.traceableTo=this.sourcereceving.traceableToCompanyId}switch(this.sourcereceving.obtainFromType){case"1":this.sourcereceving.obtainFrom=this.sourcereceving.obtainFromCustomerId;break;case"2":this.sourcereceving.obtainFrom=this.sourcereceving.obtainFromOther;break;case"3":this.sourcereceving.obtainFrom=this.sourcereceving.obtainFromVendorId;break;case"4":this.sourcereceving.obtainFrom=this.sourcereceving.obtainFromCompanyId}console.log(this.sourcereceving),this.receivingCustomerWorkService.newReason(this.sourcereceving).subscribe(t=>this.saveSuccessHelper(t,e),e=>this.saveFailedHelper(e)),this.sourcereceving={}}):(this.receivingCustomerWorkService.newReason(this.sourcereceving).subscribe(t=>this.saveSuccessHelper(t,e),e=>this.saveFailedHelper(e)),this.sourcereceving={})))}deleteItemAndCloseModel(){this.isSaving=!0,this.sourcereceving.updatedBy=this.userName,this.receivingCustomerWorkService.deleteReason(this.sourcereceving.receivingCustomerWorkId,this.userName).subscribe(e=>this.saveCompleted(this.sourceAction),e=>this.saveFailedHelper(e)),this.modal.close()}dismissModel(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}saveCompleted(e){this.isSaving=!1,this.router.navigateByUrl("receivingmodule/receivingpages/app-customer-works-list"),1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",P.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",P.d.success),this.loadData()}saveSuccessHelper(e,t){this.isSaving=!1,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}CreateWorkOrderModel(){this.modal.close(),this.router.navigateByUrl("/workordersmodule/workorderspages/app-work-order-add")}GotoList(){this.modal.close(),this.router.navigateByUrl("receivingmodule/receivingpages/app-customer-works-list"),this.loadData()}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}saveFailedHelper(e){this.isSaving=!1,this.router.navigateByUrl("receivingmodule/receivingpages/app-customer-works-list"),this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",P.d.error,e),this.alertService.showStickyMessage(e,null,P.d.error)}getDismissReason(e){return e===R.a.ESC?"by pressing ESC":e===R.a.BACKDROP_CLICK?"by clicking on a backdrop":"with: "+e}Receveingcustomerlist(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.receivingCustomerWorkService.getReceiveCustomerList().subscribe(e=>this.onDataLoadrecevingSuccessful(e[0]),e=>this.onDataLoadFailed(e))}onDataLoadrecevingSuccessful(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.allRecevinginfo=e}employeedata(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.employeeService.getEmployeeList().subscribe(e=>this.onempDataLoadSuccessful(e[0]),e=>this.onDataLoadFailed(e)),this.selectedColumns=this.cols}onempDataLoadSuccessful(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allEmployeeinfo=e}filterfirstName(e){this.firstCollection=[];for(let t=0;t<this.allEmployeeinfo.length;t++){let n=this.allEmployeeinfo[t].firstName;0==n.toLowerCase().indexOf(e.query.toLowerCase())&&this.firstCollection.push(n)}}onptnmbersSuccessful(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.allPartnumbersInfo=e}ptnumberlistdata(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.itemser.getPrtnumberslistList().subscribe(e=>this.onptnmbersSuccessful(e[0]),e=>this.onDataLoadFailed(e))}filterNames(e){if(this.customerNames=[],this.allCustomer&&this.allCustomer.length>0)for(let t=0;t<this.allCustomer.length;t++){let n=this.allCustomer[t].name;0==n.toLowerCase().indexOf(e.query.toLowerCase())&&this.customerNames.push(n)}}filterReferenceNames(e){if(this.customerReferenceNames=[],this.allCustomer&&this.allCustomer.length>0)for(let t=0;t<this.allCustomer.length;t++){let n=this.allCustomer[t].name;0==n.toLowerCase().indexOf(e.query.toLowerCase())&&this.customerReferenceNames.push(n)}}filterpartItems(e){if(this.partCollection=[],this.itemclaColl=[],this.allPartnumbersInfo&&this.allPartnumbersInfo.length>0)for(let t=0;t<this.allPartnumbersInfo.length;t++){let n=this.allPartnumbersInfo[t].partNumber;n&&0==n.toLowerCase().indexOf(e.query.toLowerCase())&&(this.itemclaColl.push([{partId:this.allPartnumbersInfo[t].itemMasterId,partName:n}]),this.partCollection.push(n))}}onitemmasterSuccessful(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.allActions=e}loadItemmasterData(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.itemser.getItemMasterList().subscribe(e=>this.onitemmasterSuccessful(e[0]),e=>this.onDataLoadFailed(e))}partnmId(e){this.itemclaColl&&this.itemser.getDescriptionbypart(e).subscribe(e=>this.onpartnumberloadsuccessfull(e[0]),e=>this.onDataLoadFailed(e))}patternMobilevalidationWithSpl(e){let t=String.fromCharCode(e.charCode);8==e.keyCode||/[0-9\+\-()\ ]/.test(t)||e.preventDefault()}customerNameId(e){if(this.allCustomer){for(let t=0;t<this.allCustomer.length;t++)e==this.allCustomer[t].name&&(this.sourcereceving.customerId=this.allCustomer[t].customerId,this.sourcereceving.customerCode=Object(j.d)("customerId",this.allCustomer[t].customerId,this.allCustomer),console.log(this.sourcereceving.customerCode),this.selectedActionName=e,this.getAllCustomerContact(this.allCustomer[t].customerId));this.customerservices.getDescriptionbypart(e).subscribe(e=>this.oncustomernumberloadsuccessfull(e[0]),e=>this.onDataLoadFailed(e))}}customerReferenceNameId(e){if(this.allCustomer)for(let t=0;t<this.allCustomer.length;t++)e==this.allCustomer[t].name&&(this.sourcereceving.customerReference=this.allCustomer[t].customerId)}getAllCustomerContact(e){this.customerservices.getContacts(e).subscribe(e=>{this.customerContactList=e[0]})}customerContactChange(e){for(let t=0;t<this.customerContactList.length;t++)e==this.customerContactList[t].contactId&&(this.sourcereceving.workPhone=this.customerContactList[t].workPhone)}eventHandler(e){if(""!=e.target.value){let t=e.target.value.toLowerCase();this.selectedActionName&&(t==this.selectedActionName.toLowerCase()?this.disableSavepartNumber=!0:(this.disableSavepartNumber=!1,this.sourcereceving.partDescription="",this.disableSavepartDescription=!1))}}onpartnumberloadsuccessfull(e){this.sourcereceving.manufacturerId=e[0].manufacturerId,this.sourcereceving.manufacturer=e[0].manufacturer.name,this.sourcereceving.partDescription=e[0].partDescription,this.sourcereceving.isSerialized=e[0].isSerialized,this.sourcereceving.isTimeLife=e[0].isTimeLife,1==this.sourcereceving.isSerialized?(this.showRestrictQuantity=!0,this.showFreeQuantity=!1,this.showNormalQuantity=!1):(this.showRestrictQuantity=!1,this.showFreeQuantity=!0,this.showNormalQuantity=!1),1==this.sourcereceving.isTimeLife?this.sourceTimeLife.timeLife=!0:this.sourceTimeLife.timeLife=!1}oncustomernumberloadsuccessfull(e){}onDataLoadSuccessfulForCondition(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.allConditionInfo=e}loadDataForCondition(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.conditionService.getConditionList().subscribe(e=>this.onDataLoadSuccessfulForCondition(e[0]),e=>this.onDataLoadFailed(e))}onCustomerDataLoadSuccessful(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.allCustomer=e}customerList(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.customerservices.getWorkFlows().subscribe(e=>this.onCustomerDataLoadSuccessful(e[0]),e=>this.onDataLoadFailed(e))}onVendorDataLoadSuccessful(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.allVendorList=e}vendorList(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.vendorservice.getVendorList().subscribe(e=>this.onVendorDataLoadSuccessful(e[0]),e=>this.onDataLoadFailed(e))}siteValueChange(e){this.allWareHouses=[],this.allLocations=[],this.allShelfs=[],this.allBins=[],this.sourcereceving.warehouseId=null,this.sourcereceving.locationId=0,this.sourcereceving.shelfId=0,this.sourcereceving.binId=0,this.binService.getWareHouseDate(this.sourcereceving.siteId).subscribe(e=>this.onDataLoadWareHouse(e),e=>this.onDataLoadFailed(e))}onDataLoadWareHouse(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allWareHouses=e}wareHouseValueChange(e){this.allLocations=[],this.allShelfs=[],this.allBins=[],this.sourcereceving.locationId=0,this.sourcereceving.shelfId=0,this.sourcereceving.binId=0,this.binService.getLocationDate(e).subscribe(e=>this.onDataLoadLocation(e),e=>this.onDataLoadFailed(e))}onDataLoadLocation(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allLocations=e}locationValueChange(e){this.allShelfs=[],this.allBins=[],this.sourcereceving.shelfId=0,this.sourcereceving.binId=0,this.binService.getShelfDate(e).subscribe(e=>this.onDataLoadShelf(e),e=>this.onDataLoadFailed(e))}onDataLoadShelf(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allShelfs=e}shelfValueChange(e){this.allBins=[],this.sourcereceving.binId=0,this.binService.getBinDataById(e).subscribe(e=>this.onDataLoadBin(e),e=>this.onDataLoadFailed(e))}onDataLoadBin(e){this.loadingIndicator=!1,this.allBins=e}binValueSelect(e){}loadSiteData(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.siteService.getSiteList().subscribe(e=>this.onSaiteDataLoadSuccessful(e[0]),e=>this.onDataLoadFailed(e))}onSaiteDataLoadSuccessful(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.allSites=e}onManagemtntdataLoad(e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=e,this.allManagemtninfo=e;for(let t=0;t<this.allManagemtninfo.length;t++)null==this.allManagemtninfo[t].parentId&&this.maincompanylist.push(this.allManagemtninfo[t])}loadManagementdata(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.workFlowtService1.getManagemententity().subscribe(e=>this.onManagemtntdataLoad(e[0]),e=>this.onDataLoadFailed(e))}empnameId(e){if(this.allEmployeeinfo)for(let t=0;t<this.allEmployeeinfo.length;t++)e==this.allEmployeeinfo[t].firstName&&(this.sourcereceving.employeeId=this.allEmployeeinfo[t].employeeId,this.selectedActionName=e)}loadManagementdataForTree(){this.workFlowtService1.getManagemententity().subscribe(e=>this.onManagemtntdataLoadTree(e[0]),e=>this.onDataLoadFailed(e))}onManagemtntdataLoadTree(e){this.allManagemtninfo=e,this.parentManagementInfo=e,this.childManagementInfo=e;for(let t=0;t<this.allManagemtninfo.length;t++)null==this.allManagemtninfo[t].parentId&&(this.bulist=[],this.divisionlist=[],this.departmentList=[],this.maincompanylist.push(this.allManagemtninfo[t]))}getBUList(e){this.sourcereceving.managementStructureId=e,this.bulist=[],this.divisionlist=[],this.departmentList=[];for(let t=0;t<this.allManagemtninfo.length;t++)this.allManagemtninfo[t].parentId==e&&this.bulist.push(this.allManagemtninfo[t]);for(let t=0;t<this.partListData.length;t++)if(this.partListData[t].parentCompanyId=e,this.getParentBUList(this.partListData[t]),this.partListData[t].childList)for(let n=0;n<this.partListData[t].childList.length;n++)this.partListData[t].childList[n].childCompanyId=e,this.getChildBUList(this.partListData[t].childList[n])}getDivisionlist(e){this.sourcereceving.managementStructureId=e,this.divisionlist=[],this.departmentList=[];for(let t=0;t<this.allManagemtninfo.length;t++)this.allManagemtninfo[t].parentId==e&&this.divisionlist.push(this.allManagemtninfo[t]);for(let t=0;t<this.partListData.length;t++)if(this.partListData[t].parentbuId=e,this.getParentDivisionlist(this.partListData[t]),this.partListData[t].childList)for(let n=0;n<this.partListData[t].childList.length;n++)this.partListData[t].childList[n].childbuId=e,this.getChildDivisionlist(this.partListData[t].childList[n])}getDepartmentlist(e){this.sourcereceving.managementStructureId=e,this.departmentList=[];for(let t=0;t<this.allManagemtninfo.length;t++)this.allManagemtninfo[t].parentId==e&&this.departmentList.push(this.allManagemtninfo[t]);for(let t=0;t<this.partListData.length;t++)if(this.partListData[t].parentDivisionId=e,this.getParentDeptlist(this.partListData[t]),this.partListData[t].childList)for(let n=0;n<this.partListData[t].childList.length;n++)this.partListData[t].childList[n].childDivisionId=e,this.getChildDeptlist(this.partListData[t].childList[n])}getDepartmentId(e){this.sourcereceving.managementStructureId=e;for(let t=0;t<this.partListData.length;t++)this.partListData[t].parentDeptId=e;for(let t=0;t<this.partListData.length;t++)if(this.partListData[t].parentDeptId=e,this.getParentDeptId(this.partListData[t]),this.partListData[t].childList)for(let n=0;n<this.partListData[t].childList.length;n++)this.partListData[t].childList[n].childDeptId=e,this.getChildDeptId(this.partListData[t].childList[n])}getParentBUList(e){e.managementStructureId=e.parentCompanyId,e.parentBulist=[],e.parentDivisionlist=[],e.parentDepartmentlist=[];for(let t=0;t<this.parentManagementInfo.length;t++)this.parentManagementInfo[t].parentId==e.parentCompanyId&&e.parentBulist.push(this.parentManagementInfo[t])}getParentDivisionlist(e){e.managementStructureId=e.parentbuId,e.parentDivisionlist=[],e.parentDepartmentlist=[];for(let t=0;t<this.parentManagementInfo.length;t++)this.parentManagementInfo[t].parentId==e.parentbuId&&e.parentDivisionlist.push(this.parentManagementInfo[t])}getParentDeptlist(e){e.managementStructureId=e.parentDivisionId,e.parentDepartmentlist=[];for(let t=0;t<this.parentManagementInfo.length;t++)this.parentManagementInfo[t].parentId==e.parentDivisionId&&e.parentDepartmentlist.push(this.parentManagementInfo[t])}getParentDeptId(e){e.managementStructureId=e.parentDeptId}getChildBUList(e){e.managementStructureId=e.childCompanyId,console.log(e.managementStructureId),e.childBulist=[],e.childDivisionlist=[],e.childDepartmentlist=[];for(let t=0;t<this.childManagementInfo.length;t++)this.childManagementInfo[t].parentId==e.childCompanyId&&e.childBulist.push(this.childManagementInfo[t])}getChildDivisionlist(e){e.managementStructureId=e.childbuId,e.childDivisionlist=[],e.childDepartmentlist=[];for(let t=0;t<this.childManagementInfo.length;t++)this.childManagementInfo[t].parentId==e.childbuId&&e.childDivisionlist.push(this.childManagementInfo[t])}getChildDeptlist(e){e.managementStructureId=e.childDivisionId,e.childDepartmentlist=[];for(let t=0;t<this.childManagementInfo.length;t++)this.childManagementInfo[t].parentId==e.childDivisionId&&e.childDepartmentlist.push(this.childManagementInfo[t])}getChildDeptId(e){e.managementStructureId=e.childDeptId}editItemExpertiesCloseModel(){}filterEmployeeNames(e){}};_e.ctorParameters=()=>[{type:T.Router},{type:Q.a},{type:Y.a},{type:Z.a},{type:X.a},{type:$.a},{type:Le.a},{type:P.b},{type:Se.a},{type:E.a},{type:R.c},{type:R.b},{type:s.FormBuilder},{type:C.a},{type:Be.b},{type:V.a},{type:me.a},{type:Ue.a}],_e=r.b([Object(i.Component)({selector:"app-customer-work-edit",template:r.c(n("Zjjw")).default,animations:[H.a],styles:[r.c(n("Cqyt")).default]})],_e);var We=n("1bHX"),qe=n("yaP0");let Ke=class{constructor(e,t){this.receivingService=e,this.alertService=t,this.toggleIcon=!1,this.toggleAddDetails=!1,this.currentSLIndex=0,this.currentTLIndex=0,this.currentSERIndex=0,this.pageTitle="View Purchase Order"}ngOnInit(){console.log(this.purchaseOrderData)}moveStockLinePage(e,t,n){var r="stockline"==e?n.stockLine.length:n.timeLife.length;t>=0&&t<r&&(n.currentSLIndex=t,n.currentSERIndex=t,n.currentTLIndex=t)}gotoStockLinePage(e,t){let n=e.target.value,r=0;if(""!=n){if(r=Number.parseInt(n)-1,!(r<t.stockLine.length&&r>=0))return this.alertService.showMessage(this.pageTitle,"Invalid stock line page",P.d.error),e.target.value="1",t.isSameDetailsForAllParts||(t.currentSLIndex=0,t.currentSERIndex=0),t.currentTLIndex=0,void(t.currentSERIndex=0);t.itemMaster.isSerialized&&(t.currentSLIndex=r,t.currentSERIndex=r),t.currentTLIndex=r}}onDataLoadFailed(e){}toggleExpandIcon(e){e.showStockLineGrid=!e.showStockLineGrid}addStockLine(){this.toggleAddDetails=!this.toggleAddDetails}paginatorFocusOut(e,t){}};Ke.ctorParameters=()=>[{type:te.a},{type:P.b}],r.b([Object(i.Input)()],Ke.prototype,"purchaseOrderData",void 0),Ke=r.b([Object(i.Component)({selector:"app-po-view-list",template:r.c(n("j7B6")).default,styles:[r.c(n("t8lN")).default]})],Ke);let ze=class{constructor(e,t){this.receivingService=e,this.alertService=t,this.repairOrderData=[],this.toggleIcon=!1,this.toggleAddDetails=!1,this.currentSLIndex=0,this.currentTLIndex=0,this.currentSERIndex=0,this.pageTitle="View Repair Order"}ngOnInit(){console.log(this.repairOrderData)}moveStockLinePage(e,t,n){var r="stockline"==e?n.stockLine.length:n.timeLife.length;t>=0&&t<r&&(n.itemMaster.isSerialized&&(n.currentSLIndex=t),n.currentSERIndex=t,n.currentTLIndex=t)}gotoStockLinePage(e,t){let n=e.target.value,r=0;if(""!=n){if(r=Number.parseInt(n)-1,!(r<t.stockLine.length&&r>=0))return this.alertService.showMessage(this.pageTitle,"Invalid stock line page",P.d.error),e.target.value="1",t.isSameDetailsForAllParts||(t.currentSLIndex=0,t.currentSERIndex=0),t.currentTLIndex=0,void(t.currentSERIndex=0);t.itemMaster.isSerialized&&(t.currentSLIndex=r,t.currentSERIndex=r),t.currentTLIndex=r}}onDataLoadFailed(e){}toggleExpandIcon(e){e.showStockLineGrid=!e.showStockLineGrid}addStockLine(){this.toggleAddDetails=!this.toggleAddDetails}paginatorFocusOut(e,t){}};ze.ctorParameters=()=>[{type:te.a},{type:P.b}],r.b([Object(i.Input)()],ze.prototype,"repairOrderData",void 0),ze=r.b([Object(i.Component)({selector:"app-ro-view-list",template:r.c(n("Xe++")).default,styles:[r.c(n("6qr/")).default]})],ze);let Ge=class{constructor(e,t){this.receivingService=e,this.alertService=t,this.toggleIcon=!1,this.toggleAddDetails=!1,this.currentSLIndexDraft=0,this.currentTLIndexDraft=0,this.currentSERIndexDraft=0,this.pageTitle="View Purchase Order",this.purchaseOrderPart=[],this.currentStockLineShowIndex=0}ngOnInit(){console.log(this.purchaseOrderData),this.purchaseOrderData.purchaseOderPart.map(e=>{const t=Object.assign({},e,{stockLine:this.getStockline(e),timeLife:e.timeLifeDraft});this.purchaseOrderPart.push(t)})}getStockline(e){return e.stockLineDraft=e.stockLineDraft.map((e,t)=>Object.assign({},e,{purchaseOrderUnitCost:e.purchaseOrderUnitCost?Object(j.b)(e.purchaseOrderUnitCost,2):"0.00",purchaseOrderExtendedCost:e.purchaseOrderExtendedCost?Object(j.b)(e.purchaseOrderExtendedCost,2):"0.00",currentSLIndexDraft:t})),e.stockLineDraft}moveStockLinePage(e,t,n,r){var i="stockline"==e?n.stockLine.length:n.timeLife.length;t>=0&&t<i&&(this.currentStockLineShowIndex=t,console.log(t),console.log(r),r.currentSERIndexDraft=t,r.currentTLIndexDraft=t)}gotoStockLinePage(e,t,n){let r=e.target.value,i=0;if(""!=r){if(i=Number.parseInt(r)-1,!(i<t.stockLine.length&&i>=0))return this.alertService.showMessage(this.pageTitle,"Invalid stock line page",P.d.error),e.target.value="1",t.isSameDetailsForAllParts||(this.currentStockLineShowIndex=i,n.currentSERIndexDraft=0),n.currentTLIndexDraft=0,void(n.currentSERIndexDraft=0);this.currentStockLineShowIndex=i,n.currentSERIndexDraft=i,n.currentTLIndexDraft=i}}onDataLoadFailed(e){}toggleExpandIcon(e){e.showStockLineGridDraft=!e.showStockLineGridDraft}addStockLine(){this.toggleAddDetails=!this.toggleAddDetails}};Ge.ctorParameters=()=>[{type:te.a},{type:P.b}],r.b([Object(i.Input)()],Ge.prototype,"purchaseOrderData",void 0),Ge=r.b([Object(i.Component)({selector:"app-po-view-draftlist",template:r.c(n("kbtz")).default,styles:[r.c(n("LX4B")).default]})],Ge);let $e=class{constructor(e,t){this.receivingService=e,this.alertService=t,this.repairOrderData=[],this.toggleIcon=!1,this.toggleAddDetails=!1,this.currentSLIndexDraft=0,this.currentTLIndexDraft=0,this.currentSERIndexDraft=0,this.pageTitle="View Repair Order",this.repairOrderPart=[],this.currentStockLineShowIndex=0}ngOnInit(){this.repairOrderData.map(e=>{const t=Object.assign({},e,{stockLine:this.getStockline(e),timeLife:e.timeLifeDraft});this.repairOrderPart.push(t)})}getStockline(e){return e.stockLineDraft=e.stockLineDraft.map((e,t)=>Object.assign({},e,{purchaseOrderUnitCost:e.purchaseOrderUnitCost?Object(j.b)(e.purchaseOrderUnitCost,2):"0.00",purchaseOrderExtendedCost:e.purchaseOrderExtendedCost?Object(j.b)(e.purchaseOrderExtendedCost,2):"0.00",currentSLIndexDraft:t})),e.stockLineDraft}moveStockLinePage(e,t,n,r){var i="stockline"==e?n.stockLine.length:n.timeLife.length;t>=0&&t<i&&(this.currentStockLineShowIndex=t,console.log(t),console.log(r),r.currentSERIndexDraft=t,r.currentTLIndexDraft=t)}gotoStockLinePage(e,t,n){let r=e.target.value,i=0;if(""!=r){if(i=Number.parseInt(r)-1,!(i<t.stockLine.length&&i>=0))return this.alertService.showMessage(this.pageTitle,"Invalid stock line page",P.d.error),e.target.value="1",t.isSameDetailsForAllParts||(this.currentStockLineShowIndex=i,n.currentSERIndexDraft=0),n.currentTLIndexDraft=0,void(n.currentSERIndexDraft=0);this.currentStockLineShowIndex=i,n.currentSERIndexDraft=i,n.currentTLIndexDraft=i}}onDataLoadFailed(e){}toggleExpandIcon(e){e.showStockLineGridDraft=!e.showStockLineGridDraft}addStockLine(){this.toggleAddDetails=!this.toggleAddDetails}paginatorFocusOut(e,t){}};$e.ctorParameters=()=>[{type:te.a},{type:P.b}],r.b([Object(i.Input)()],$e.prototype,"repairOrderData",void 0),$e=r.b([Object(i.Component)({selector:"app-ro-view-draftlist",template:r.c(n("/83f")).default,styles:[r.c(n("633Q")).default]})],$e);var Qe=n("dLo5"),Ye=n("8XG2"),Je=n("DgWh"),Xe=n("pAhr");n.d(t,"ReceivingPagesModule",(function(){return Ze}));let Ze=class{};Ze=r.b([Object(i.NgModule)({imports:[Xe.VendorPagesModule,a.a,s.FormsModule,s.ReactiveFormsModule,l.a,o.b,y.CommonModule,c.TableModule,d.ButtonModule,p.SelectButtonModule,u.InputTextModule,m.MultiSelectModule,Qe.DropdownModule,Ae,h.AutoCompleteModule,Ye.a,Je.EditorModule,g.GMapModule,b.RadioButtonModule,v.FileUploadModule,L.DialogModule,f.StepsModule,S.BreadcrumbModule,We.CalendarModule,I.InputSwitchModule,x.CheckboxModule,M.TreeModule,w.TreeTableModule,k.TabViewModule,O.KeyFilterModule,D.TooltipModule],declarations:[q,z,_e,ge,ve,Oe,N,De,Te,He,Pe,Ee,Ve,Ke,Ge,ze,$e],providers:[te.a,qe.a,ue,pe,A.a,we,ke],entryComponents:[]})],Ze)},VVaU:function(e,t,n){"use strict";n.r(t),t.default="table th {\n  padding: 4px;\n}\n\ntable td {\n  padding: 4px;\n}\n\n.managementstr input {\n  padding: 4px !important;\n}\n\n.status-radio label {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput.hidePlaceHolder {\n  color: transparent !important;\n}\n\n.managementstr {\n  width: 100%;\n}\n\n.mantstr {\n  width: 100%;\n}\n\ninput.hidePlaceHolder:focus,\ninput.hidePlaceHolder:hover,\ninput.hidePlaceHolder:active {\n  color: #000 !important;\n}\n\n.ui-table {\n  padding: 0px !important;\n}\n\n.ui-table-wrapper {\n  padding: 0px 0px !important;\n}"},"W/Kn":function(e,t,n){"use strict";n.r(t),t.default='<div style="border: 1px solid red">repair-order Component</div>'},W2kj:function(e,t,n){"use strict";n.r(t),t.default='<div class="x_content" *ngIf="repairOrderHeaderData">\r\n\r\n        <div class="card new-card">\r\n            <div class="card-header header">\r\n                <div class="row">\r\n                    <div class="col">\r\n                        <h4 class="header-name">Receiving RO\r\n                            <button class="btn-sm header-button header-button-alignment" (click)="receiving_ro_header=!receiving_ro_header" style="margin-left: 20px;">\r\n                                {{receiving_ro_header ? \'Collapse\' : \'Expand\'}}\r\n                            </button>\r\n\r\n                        </h4>\r\n                </div>\r\n                \x3c!-- <nav aria-label="breadcrumb">\r\n                    <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n                        <li class="breadcrumb-item active" aria-current="page">Receiving RO</li>\r\n                    </ol>\r\n                 \r\n                </nav> --\x3e\r\n\r\n                <div>\r\n                    <button\r\n                        type="button"\r\n                        class="btn-sm header-button pull-right"\r\n                        [routerLink]="[\'/receivingmodule/receivingpages/app-ro\']">\r\n                        Receiving RO\r\n                    </button>\r\n                </div>\r\n        </div>\r\n    </div>\r\n        <div class="card-body">\r\n                <form id="" class="ro-grid-form createPO-form" name="">\r\n                        <div class="form-row">\r\n                                <div class="col-md-8 ro-status-radios">\r\n                                    <div class="form-group">\r\n                                        <label class="status-radios">Status:</label>\r\n                                        <div>\r\n                                            <div class="pull-left status-radios-alignment" *ngFor="let status of roStatus">\r\n                                                <label class="radio-cstm radio-cstm-d wauto">\r\n                                                    <input type="radio" [checked]="status.value == repairOrderHeaderData.statusId" name="roStatus" class="form-control" value="{{status.value}}" disabled>\r\n                                                    <span class="checkmark"></span>\r\n                                                    {{status.label}}\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-md-9">\r\n                                    <div class="form-row">\r\n                                        <div class="col-md-4">\r\n                                            <div class="form-group">\r\n                                                <label>RO Num</label>\r\n                                                <input class="form-control" type="text" name="repairOrderNumber" [(ngModel)]="repairOrderHeaderData.repairOrderNumber" disabled >\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-4">\r\n                                            <div class="form-group">\r\n                                                <label>Vendor Name</label>\r\n                                                <input class="form-control" type="text" name="vendorName" [(ngModel)]="repairOrderHeaderData.vendorName" disabled>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-md-4">\r\n                                            <div class="form-group">\r\n                                                <label>Requisitioner</label>\r\n                                                <input class="form-control" type="text" name="requestedBy" [(ngModel)]="repairOrderHeaderData.requestedBy" disabled>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    </div>\r\n                            </div>\r\n                          \r\n                            <hr *ngIf="receiving_ro_header" />\r\n            <div class="form-row expand-div-alignment"  *ngIf="receiving_ro_header">\r\n                <div class="col-md-9">\r\n                    <div class="form-row">\r\n                <div class="col-md-4">\r\n                   \r\n                    <div class="form-group">\r\n                        <label>Open Date</label>\r\n                        <p-calendar class="pas-clder" [showIcon]="true" name="openDate" [(ngModel)]="repairOrderHeaderData.openDate" [disabled]="true"></p-calendar>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <label>Closed/Cancelled Date</label>\r\n                        <p-calendar class="pas-clder" [showIcon]="true" name="closedDate" [(ngModel)]="repairOrderHeaderData.closedDate" [disabled]="true"></p-calendar>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <label>Need By</label>\r\n                        <p-calendar class="pas-clder" [showIcon]="true" name="needByDate" [(ngModel)]="repairOrderHeaderData.needByDate" [disabled]="true"></p-calendar>  \r\n                    </div>\r\n                    <div class="form-group">\r\n                        <label>Priority</label>\r\n                        <input class="form-control" type="text" name="priority" [(ngModel)]="repairOrderHeaderData.priority" disabled>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div class="col-md-4">\r\n                    \r\n                    <div class="form-group">\r\n                        <label>Vendor Code</label>\r\n                        <input class="form-control" type="text" name="vendorCode" [(ngModel)]="repairOrderHeaderData.vendorCode" disabled>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <label>Vendor Contact</label>\r\n                        <input class="form-control" type="text" name="vendorContact" [(ngModel)]="repairOrderHeaderData.vendorContact" disabled>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <label>Contact Phone</label>\r\n                        <input class="form-control" type="text" name="contactPhone" [(ngModel)]="repairOrderHeaderData.vendorPhone" disabled>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <label>Credit Limit &amp; Terms</label>\r\n                        <div class="form-row">\r\n                            <div class="col-sm-5">\r\n                                <input class="form-control" type="text" placeholder="limit" name="creditLimit" [(ngModel)]="repairOrderHeaderData.creditLimit" disabled>\r\n                            </div>\r\n                            <div class="col-sm-7">\r\n                                <input class="form-control" type="text" name="creditTerms" [(ngModel)]="repairOrderHeaderData.terms" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n               \r\n                    <div class="col-md-4">\r\n                    <div class="form-group">\r\n                        <div class="checkbox-cstm resale-align">\r\n                            <label>\r\n                                <input type="checkbox" name="resale" class="form-control" [(ngModel)]="repairOrderHeaderData.resale" disabled>\r\n                                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                Resale\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <div class="checkbox-cstm receiver-align">\r\n                            <label>\r\n                                <input type="checkbox" class="receiver-input-back" name="deferredReceiver" [(ngModel)]="repairOrderHeaderData.deferredReceiver" disabled>\r\n                                <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                Deferred Receiver\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    <div class="col-md-4">\r\n                        <div class="form-group memo-popup-cstm">\r\n                            <label>Notes\r\n                                <span class="editor-span"\r\n                                ><a\r\n                                  class="btn nobg"\r\n                                  data-toggle="modal"\r\n                                  data-target="#add-notes"\r\n                                  (click)="onAddNotes()"\r\n                                  matTooltipPosition="above" matTooltip="Notes"\r\n                                  ><i class="fa fa-pencil" ></i\r\n                                ></a>\r\n                                </span>\r\n                            </label>\r\n                            \x3c!-- <textarea name="ponotes" class="form-control head-notes" rows="2" \r\n                            disabled></textarea> --\x3e\r\n                            <span>\r\n                                    <div [innerHTML]="repairOrderHeaderData.notes"\r\n                                    [matTooltip]="parsedText(repairOrderHeaderData.notes)"\r\n                                    matTooltipPosition="above"\r\n                                     class="form-control text-editor-field"\r\n                                        class="text_editor_box text-editor-width">\r\n                                    </div>\r\n                                \r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-4">\r\n                   \r\n                        \x3c!-- <div class="form-group">\r\n                            <label>Approver</label>\r\n                            <input class="form-control" type="text" name="approver" [(ngModel)]="repairOrderHeaderData.approver" disabled>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Approved Date</label>\r\n                            <p-calendar class="pas-clder" [showIcon]="true" name="approvedDate" [(ngModel)]="repairOrderHeaderData.dateApproved" [disabled]="true"></p-calendar>\r\n                        </div> --\x3e\r\n                        <div class="form-group memo-popup-cstm">\r\n                                <label>Memo \r\n                                     \x3c!-- <i class="fa fa-info-circle fa-lg"  \r\n                                      matTooltipPosition="above"\r\n                                       matTooltip="{{repairOrderHeaderData.memo}}"></i> --\x3e\r\n                                       <span class="editor-span"\r\n                                       ><a\r\n                                         class="btn nobg"\r\n                                         data-toggle="modal"\r\n                                         data-target="#cpo-memo" matTooltipPosition="above" \r\n                                         matTooltip="Add Memo" disabled="true"  (click)="onAddMemo()"\r\n                                         ><i class="fa fa-pencil" ></i\r\n                                       ></a>\r\n                                       </span>\r\n                                   </label>\r\n                                \x3c!-- <span   matTooltipPosition="above"\r\n                                 matTooltip="{{repairOrderHeaderData.memo}}">\r\n                                    <input type="text" name="memo" pInputText class="form-control"\r\n                                     value="{{repairOrderHeaderData.memo}}" disabled /></span> --\x3e\r\n                                     <span> <div [innerHTML]="repairOrderHeaderData.memo" \r\n                                        [matTooltip]="parsedText(repairOrderHeaderData.memo)"\r\n                                        matTooltipPosition="above"\r\n                                         class="form-control " \r\n                                        class="text_editor_box text-editor-field" disabled="true"></div> \r\n                                         </span>\r\n                        </div>\r\n                        </div>\r\n                </div>\r\n                </div>\r\n               \r\n                   \r\n            \r\n                <div class="col-md-3">\r\n                    <div class="card management-structure-card">\r\n                        <div class="card-header management-structure-card-header">\r\n                            <h5 class="management-structure-header">Management Structure</h5>\r\n                        </div>\r\n                        <div class="card-body structure-card-body">\r\n                            <div class="form-group structure-body-input">\r\n                                \x3c!-- <label>Company</label> --\x3e\r\n                                <input class="form-control" type="text" name="companyName" [(ngModel)]="headerManagementStructure.level1" disabled>\r\n                            </div>\r\n                            <div class="form-group structure-body-input">\r\n                                \x3c!-- <label>BU</label> --\x3e\r\n                                <input class="form-control" type="text" name="BUName" [(ngModel)]="headerManagementStructure.level2" disabled>\r\n                            </div>\r\n                            <div class="form-group structure-body-input">\r\n                                \x3c!-- <label>Division</label> --\x3e\r\n                                <input class="form-control" type="text" name="divisionName" [(ngModel)]="headerManagementStructure.level3" disabled>\r\n                            </div>\r\n                            <div class="form-group structure-body-input">\r\n                                \x3c!-- <label>Dept</label> --\x3e\r\n                                <input class="form-control" type="text" name="deptName" [(ngModel)]="headerManagementStructure.level4" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n            </div>  \r\n            </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n    \r\n    \x3c!-- <div class="col-md-12 col-sm-12 col-xs-12 po-ro-setup">\r\n        <div class="x_panel">\r\n            <div>\r\n                <div>\r\n                   \r\n                        <div class=""> --\x3e\r\n                            <div id="adminsearchlocationajax">\r\n                            <div class="card new-card">\r\n                                <div class="card-body">\r\n                            <div class="table-responsive pas-table-cstm header-table-width poro-table-cstm parts-list-table-align parts-zindex" >\r\n                                <div class="tableFixHead">     \r\n                            <table *ngIf="repairOrderData != undefined && repairOrderData != undefined" class="table table-bordered table-wrap">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th class="th-width"></th>\r\n                                        <th>Line Num</th>\r\n                                        <th>PN</th>\r\n                                        <th>PN Desc</th>\r\n                                        <th>Alt/Equiv</th>\r\n                                        <th>Item Type</th>\r\n                                        <th>Stock Type</th>\r\n                                        <th>Qty to Repair </th> \x3c!--Qty Ordered--\x3e\r\n                                        <th>Qty Drafted</th>\r\n                                        <th>Qty Repaired</th> \x3c!--Qty Received--\x3e\r\n                                        \x3c!-- <th>Qty Rejected</th> --\x3e\r\n                                        <th>Back Ord</th>\r\n                                        <th>Status</th>\r\n                                        <th>Stockline Num</th>\r\n                                        \x3c!-- <th>Control Num</th>\r\n    <th>PO Num</th> --\x3e\r\n                                        <th colspan="3" class="text-center" *ngIf="disableParentSpace"></th>\r\n                                        <th colspan="2">Management Structure</th>\r\n                                        <th>Is Serialized</th>\r\n                                        <th>Is TimeLife</th>\r\n                                        <th>Qty to Receive <span class="clr-red">*</span></th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <ng-container *ngFor="let part of repairOrderData;let row_index=index">\r\n                                        \x3c!--this row is for the parent part--\x3e\r\n                                        <tr class="basic-info" *ngIf="part.isParent">\r\n                                            <td class="details-control eachcol plus-icon-align" >\r\n                                                <section *ngIf="isSplitShipmentPart(part.itemMasterId)">\r\n                                                    <i class="fa fa-{{ part.toggleIcon ? \'minus\':\'plus\'}} btn btn-success btn-cstm btn-xs margin0" (click)="showSplitShipmentParts(part)"></i>\r\n                                                </section>\r\n                                            </td>\r\n                                            <td class="text-right">{{row_index + 1}}</td>\r\n                                            <td>\r\n                                                {{part.itemMaster.partNumber}}\r\n                                            </td>\r\n                                            <td>{{part.itemMaster.partDescription}}</td>\r\n                                            <td>{{part.altEquiPartNumber}}</td>\r\n                                            <td>{{part.itemType}}</td>\r\n                                            <td>{{part.stockType}}</td>\r\n                                            <td class="text-right">\r\n                                                {{part?.quantityToRepair}}\r\n                                            </td>\r\n                                            <td class="text-right">\r\n                                                {{part.quantityDrafted}}\r\n                                            </td>\r\n                                            <td class="text-right">\r\n                                                {{part.quantityRepaired}}\r\n                                            </td>\r\n    \r\n                                            \x3c!-- <td>{{part?.userName}}</td> --\x3e\r\n                                            <td class="text-right">\r\n                                                {{part.quantityBackOrdered}}\r\n                                            </td>\r\n                                            <td>{{part.quantityRepaired == 0 ? \'Pending\' : part.quantityRepaired < part.quantityToRepair ? \'Fulfilling\' : \'Received\'}}</td>\r\n                                            <td>{{part.stockLine.stockLineNumber}}</td>\r\n                                            \x3c!-- <td>{{part.stockLine.controlNumber}}</td>\r\n                                            <td>{{part.stockLine.purchaseOrderNumber}}</td> --\x3e\r\n                                            <td colspan="3" *ngIf="disableParentSpace"></td>\r\n                                            <td colspan="2" *ngIf="part.managementStructureName != undefined && part.managementStructureName.length > 0">{{part?.managementStructureName[0]}}, {{part?.managementStructureName[1]}}, {{part?.managementStructureName[2]}}, {{part?.managementStructureName[3]}}</td>\r\n                                            <td colspan="2" *ngIf="part.managementStructureName == undefined || part.managementStructureName.length < 1"></td>\r\n                                            <td>\r\n                                                <section *ngIf="part.itemMaster != null && part.quantityRepaired < part.quantityToRepair">\r\n                                                    <p-inputSwitch *ngIf="part.itemMaster.isSerialized == true" [(ngModel)]="part.itemMaster.isSerialized" matTooltipPosition="above" matTooltip="Active" tooltipPosition="bottom" onLabel="on" offLabel="off" (onChange)="togglePartSerialized(part)"></p-inputSwitch>\r\n                                                    <p-inputSwitch *ngIf="part.itemMaster.isSerialized == false" [(ngModel)]="part.itemMaster.isSerialized" matTooltipPosition="above" matTooltip="In Active" tooltipPosition="bottom" onLabel="on" offLabel="off" (onChange)="togglePartSerialized(part)"></p-inputSwitch>\r\n                                                    <p-inputSwitch *ngIf="part.itemMaster.isSerialized == null" [(ngModel)]="part.itemMaster.isSerialized" matTooltipPosition="above" matTooltip="Active" tooltipPosition="bottom" onLabel="on" offLabel="off" (onChange)="togglePartSerialized(part)"></p-inputSwitch>\r\n                                                </section>\r\n                                            </td>\r\n                                            <td>\r\n                                                <section *ngIf="part.itemMaster != null && part.quantityRepaired < part.quantityToRepair">\r\n                                                    <p-inputSwitch *ngIf="part.itemMaster.isTimeLife == true" [(ngModel)]="part.itemMaster.isTimeLife" matTooltipPosition="above" matTooltip="Active" tooltipPosition="bottom" onLabel="on" offLabel="off" (onChange)="togglePartTimeLife(part)"></p-inputSwitch>\r\n                                                    <p-inputSwitch *ngIf="part.itemMaster.isTimeLife == false" [(ngModel)]="part.itemMaster.isTimeLife" matTooltipPosition="above" matTooltip="In Active" tooltipPosition="bottom" onLabel="on" offLabel="off" (onChange)="togglePartTimeLife(part)"></p-inputSwitch>\r\n                                                    <p-inputSwitch *ngIf="part.itemMaster.isTimeLife == null" [(ngModel)]="part.itemMaster.isTimeLife" matTooltipPosition="above" matTooltip="Active" tooltipPosition="bottom" onLabel="on" offLabel="off" (onChange)="togglePartTimeLife(part)"></p-inputSwitch>\r\n                                                </section>\r\n                                            </td>\r\n                                            <td style="padding:4px;">\r\n                                                <input type="text" *ngIf="!part.hasChildren && part.quantityRepaired < part.quantityToRepair" [(ngModel)]="part.quantityActuallyReceived" (keyup)="addStockLine(part, false)" pInputText pKeyFilter="pnum" class="form-control text-right" [maxLength]="12" required/>\r\n    \r\n                                                \x3c!--<a *ngIf="part.quantityBackOrdered" (click)="addDetailsClick(part)" style="color:red">Add Details</a>--\x3e\r\n                                            </td>\r\n                                            <td><button *ngIf="!part.hasChildren && part.quantityRepaired < part.quantityToRepair" [disabled]="!part.quantityActuallyReceived" class="btn btn-primary btn-po-details" (click)="toggleStockLine($event, part)">{{ part.showStockLineGrid ? \'Close\' : \'Receive\'}}</button></td>\r\n    \r\n                                        </tr>\r\n    \r\n                                        <tr class="child-header splitship-head child-header-back" [hidden]="repairOrderData[row_index+1] != undefined && !repairOrderData[row_index+1].visible" *ngIf="part.isParent && repairOrderData[row_index+1] != undefined && (!repairOrderData[row_index+1].isParent)">\r\n                                            <th></th>\r\n                                            <th></th>\r\n                                            <th colspan="5">PN</th>\r\n                                            <th>Qty to Repair </th> \x3c!--Qty Ordered--\x3e\r\n                                            <th colspan="2">Qty Repaired</th> \x3c!--Qty Received--\x3e\r\n                                            \x3c!-- <th>Qty Rejected</th> --\x3e\r\n                                            <th>Back Ord</th>\r\n                                            <th>Status</th>\r\n                                            <th>Stockline Num</th>\r\n                                            \x3c!-- <th>Control Num</th>\r\n                                            <th>PO Num</th> --\x3e\r\n                                            <th>User Type</th>\r\n                                            <th>User Name</th>\r\n                                            <th>Address</th>\r\n                                            <th colspan="3">Management Structure</th>\r\n                                            <th>Receive Quantity</th>\r\n                                            <th> </th>\r\n                                            <th> </th>\r\n                                        </tr>\r\n    \r\n                                        <tr  class="child-data splitship-child child-data-back" [hidden]="!part.visible" *ngIf="!part.isParent">\r\n                                            <td>&nbsp;</td>\r\n                                            <td>&nbsp;</td>\r\n                                            <td colspan="5">{{part?.itemMaster?.partNumber}}</td>\r\n                                            <td>{{part?.quantityToRepair}}</td> \x3c!--quantityOrdered--\x3e\r\n                                            <td colspan="2">{{part?.quantityRepaired}}</td> \x3c!--stockLineCount--\x3e\r\n    \r\n                                            \x3c!-- <td>{{\'NA\'}}</td> --\x3e\r\n                                            <td>{{part.quantityToRepair - part.quantityRepaired}}</td>\r\n                                            <td>\r\n                                                {{part.quantityRepaired == 0 ? \'Pending\' : part.quantityRepaired < part.quantityToRepair ? \'Fulfilling\' : \'Received\'}}\r\n                                            </td>\r\n                                            <td>\r\n                                                {{part.stockLine.stockLineNumber}}\r\n                                            </td>                                            \r\n                                            \x3c!-- <td>{{part.stockLine.controlNumber}}</td>\r\n                                            <td>{{part.stockLine.purchaseOrderNumber}}</td> --\x3e\r\n                                            \x3c!-- <td>{{part.roPartSplitUserTypeId == 3 ? \'Vendor\' : part.roPartSplitUserTypeId == 1 ? \'Customer\' : \'Company\'}}</td> --\x3e\r\n                                            <td>{{part.roPartSplitUserTypeName}}</td>\r\n                                            <td>{{part.roPartSplitUserName}}</td>\r\n                                            \x3c!-- <td>{{part?.userName}}</td> --\x3e\r\n                                            \x3c!-- <td></td> --\x3e\r\n                                            <td>{{part?.roPartSplitAddress1}}, {{part?.roPartSplitCity}}, {{part?.roPartSplitCountry}}, {{part?.roPartSplitPostalCode}}</td>\r\n                                            <td colspan="3" *ngIf="part.managementStructureName != undefined && part.managementStructureName.length > 0">{{part.managementStructureName[0]}}, {{part.managementStructureName[1]}}, {{part.managementStructureName[2]}}, {{part.managementStructureName[3]}}</td>\r\n                                            <td colspan="3" *ngIf="part.managementStructureName == undefined || part.managementStructureName.length < 1"></td>\r\n                                            <td><input type="text" *ngIf="part.quantityRepaired < part.quantityToRepair" [(ngModel)]="part.quantityActuallyReceived" (keyup)="addStockLine(part, false)" pInputText pKeyFilter="pnum" class="form-control" [maxLength]="12"/></td>\r\n                                            <td><button class="btn btn-primary btn-po-details-child" *ngIf="part.quantityRepaired < part.quantityToRepair" [disabled]="!part.quantityActuallyReceived" (click)="toggleStockLine($event, part)">{{ part.showStockLineGrid ? \'Close\' : \'Receive\'}}</button></td>\r\n                                            <td></td>\r\n                                            \x3c!--<td><a (click)="addStockLine(part)" class="btn btn-primary btn-po-details">Add Details</a></td>--\x3e\r\n                                            \x3c!--<button type="button" (click)="showDialog()" pButton icon="fa-external-link-square" label="Show"></button>--\x3e\r\n                                        </tr>\r\n    \r\n                                        <tr class="more-info" *ngIf="part.showStockLineGrid" [hidden]="!part.visible">\r\n                                            <td colspan="22">\r\n                                                <div class="form-row" style="margin-top: 10px;padding: 0px 7px;">\r\n                                                    <div class="col-md-2">\r\n                                                        <div class="form-group">\r\n                                                            <label>PN</label>\r\n                                                            <input type="text" pInputText pKeyFilter="pnum" class="form-control" value="{{part.itemMaster?.partNumber}}" disabled />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="col-md-2">\r\n                                                        <div class="form-group">\r\n                                                            <label>PN Description</label>\r\n                                                            <input type="text" pInputText class="form-control" disabled [value]="part.itemMaster?.partDescription" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="col-md-2">\r\n                                                        <div class="form-group">\r\n                                                            <label>Cond <span class="clr-red">*</span></label>\r\n                                                            <select class="form-control" required\r\n                                                                    [(ngModel)]="part.conditionId"\r\n                                                                    #selects="ngModel"\r\n                                                                    [ngModelOptions]="{standalone: true}">\r\n                                                                <option value="0">Select</option>\r\n                                                                <option *ngFor="let condition of ConditionList" [value]="condition.Key">{{condition.Value}}</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="col-md-1">\r\n                                                        <div class="form-group">\r\n                                                            <label>Qty To Receive</label>\r\n                                                            <input type="text" pInputText pKeyFilter="pnum" class="form-control text-right" disabled="disabled" [value]="part.quantityToRepair" maxlength="12" />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="col-md-2">\r\n                                                        <div class="form-group">\r\n                                                            <label>Qty Actually Received</label>\r\n                                                            <input type="text"  *ngIf="part.quantityRepaired < part.quantityToRepair" value="{{part.quantityActuallyReceived}}" maxlength="12" pInputText pKeyFilter="pnum" class="form-control text-right" required />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="col-md-1">\r\n                                                        <div class="form-group">\r\n                                                            <label>Qty Rejected <span class="clr-red">*</span></label>\r\n                                                            <input type="text" [(ngModel)]="part.quantityRejected" (focusin)="quantityRejectedFocusIn($event, part)" maxlength="12" (focusout)="quantityRejectedFocusOut($event, part)" pInputText pKeyFilter="pnum" class="form-control text-right" required />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="col-md-2">\r\n                                                        <div class="form-group">\r\n                                                            <label>GL Account <span class="clr-red">*</span></label>\r\n                                                            <select class="form-control"\r\n                                                                    [(ngModel)]="part.itemMaster.glAccountId"\r\n                                                                    #selects="ngModel"\r\n                                                                    [ngModelOptions]="{standalone: true}">\r\n                                                                <option value="0">Select</option>\r\n                                                                <option *ngFor="let glAccount of GLAccountList" [value]="glAccount.Key">{{glAccount.Value}}</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n    \r\n                                                <div class="form-row" style="margin-top: 10px;padding: 0px 7px;">\r\n                                                    \x3c!--<div class="col-md-1">\r\n                                                        <div class="form-group">\r\n                                                            <label>Qty Rejected <span class="clr-red">*</span></label>\r\n                                                            <input type="text" [(ngModel)]="part.quantityRejected" (focusin)="quantityRejectedFocusIn($event, part)" (focusout)="quantityRejectedFocusOut($event, part)" pInputText pKeyFilter="pnum" class="form-control" required />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="col-md-2">\r\n                                                        <div class="form-group">\r\n                                                            <label>GL Account <span class="clr-red">*</span></label>\r\n                                                            <select class="form-control"\r\n                                                                    [(ngModel)]="part.itemMaster.glAccountId"\r\n                                                                    #selects="ngModel"\r\n                                                                    [ngModelOptions]="{standalone: true}">\r\n                                                                <option value="0">Select</option>\r\n                                                                <option *ngFor="let glAccount of GLAccountList" [value]="glAccount.Key">{{glAccount.Value}}</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>--\x3e\r\n                                                    \x3c!--<div class="col-md-2">\r\n                                                        <div class="form-group">\r\n                                                            <label matTooltip="Export Control Classification Number">ECCN</label>\r\n                                                            <input class="form-control" [(ngModel)]="part.itemMaster.exportECCN" disabled="{{part.eCCNAlreadyExist}}" type="text" pInputText pKeyFilter="pnum" [maxLength]="25">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="col-md-2">\r\n                                                        <div class="form-group">\r\n                                                            <label matTooltip="International Traffic in Arms Regulations Number">ITAR Num</label>\r\n                                                            <input class="form-control" [(ngModel)]="part.itemMaster.itarNumber" disabled="{{part.itarNumberExist}}" type="text" pInputText pKeyFilter="pnum" [maxLength]="25">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="col-md-2">\r\n                                                        <div class="form-group">\r\n                                                            <label matTooltip="National Stock Number">NSN</label>\r\n                                                            <input class="form-control" [(ngModel)]="part.itemMaster.nationalStockNumber" type="text" pInputText pKeyFilter="pnum" [maxLength]="25">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="col-md-2">\r\n                                                        <div class="form-group">\r\n                                                            <label matTooltip="Top Level Assembly">TLA</label>\r\n                                                            <input class="form-control" [(ngModel)]="part.itemMaster.TopLevelAssembly" type="text" pInputText [maxLength]="25">\r\n                                                        </div>\r\n                                                    </div>--\x3e\r\n    \r\n                                                </div>\r\n    \r\n                                                \x3c!--<div class="form-row" style="margin-top: 10px;padding: 0px 7px;">\r\n                                                    <div class="col-md-2">\r\n                                                        <div class="form-group">\r\n                                                            <label matTooltip="Next Higher Assembly">NHA</label>\r\n                                                            <input class="form-control" [(ngModel)]="part.itemMaster.nha" type="text" pInputText>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>--\x3e\r\n                                                <div class="stockGridpanel" *ngIf="part.stocklineListObj != undefined && part.stocklineListObj.length > 0">\r\n                                                    <h3 class="add-details-heading">{{ part.itemMaster?.partNumber }} receiving Qty  {{ (part.currentSLIndex + 1) }} of {{ part.stocklineListObj.length }} </h3>\r\n                                                    <div class="pull-right" style="margin-top: -37px;margin-right: 85px;" *ngIf="!part.isSameDetailsForAllParts"> \x3c!--*ngIf="part.itemMaster.isSerialized"--\x3e\r\n                                                        <i class="fa fa-chevron-left btn btn-primary btn-ad-icons" (click)="moveStockLineMainPage(\'stockline\', part.currentSLIndex - 1, part)"></i>\r\n                                                        <input [value]="part.currentSLIndex + 1" type="text" pInputText pKeyFilter="pnum" (keyup)="gotoStockLineMainPage($event, part)" (focusout)="paginatorFocusOut($event, part)" class="form-control" style="width: 50px;border-radius: 0 !important;" />\r\n                                                        <i class="fa fa-chevron-right btn btn-primary btn-ad-icons" (click)="moveStockLineMainPage(\'stockline\', part.currentSLIndex + 1, part)"></i>\r\n                                                        <p>Page {{part.currentSLIndex + 1}} of {{part.stocklineListObj.length}} Pages</p>\r\n                                                    </div>\r\n                                                    <section>\r\n                                                        <div class="form-row">\r\n                                                            <div class="col-md-3">\r\n                                                                <div class="form-group">\r\n                                                                    <div class="checkbox-cstm" style="margin-top: 4px">\r\n                                                                        <label style="width: 200px;"> \x3c!--*ngIf="part.itemMaster.isSerialized"--\x3e\r\n                                                                            <input type="checkbox" class="form-control" (change)="toggleSameDetailsForAllParts(part)">\r\n                                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span> Same Details For All Parts\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n    \r\n                                                        <div class="form-row">\r\n                                                            <div class="col-md-3">\r\n                                                                <div class="card" style="margin-top: 20px; margin-bottom: 10px;">\r\n                                                                    <div class="card-header" style="padding: 10px 12px;">\r\n                                                                        <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure <span class="clr-red">*</span></h5>\r\n                                                                    </div>\r\n                                                                    <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                                                        <div class="form-group">\r\n                                                                            <select class="form-control"\r\n                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].companyId"\r\n                                                                            #selects="ngModel"\r\n                                                                            [ngModelOptions]="{standalone: true}"\r\n                                                                            (change)="selectedLegalEntity(part.stocklineListObj[part.currentSLIndex].companyId, part.stocklineListObj[part.currentSLIndex]); isCheckedSameDetailsForAllParts(part)">\r\n                                                                            <option value="0">Select Legal Entity</option>\r\n                                                                            <option *ngFor="let company of part.stocklineListObj[part.currentSLIndex].CompanyList" [value]="company.value">{{company.label}}</option>\r\n                                                                        </select>\r\n                                                                        </div>\r\n                                                                        <div class="form-group">\r\n                                                                            <select class="form-control"\r\n                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].businessUnitId"\r\n                                                                            #selects="ngModel"\r\n                                                                            [ngModelOptions]="{standalone: true}"\r\n                                                                            (change)="selectedBusinessUnit(part.stocklineListObj[part.currentSLIndex].businessUnitId, part.stocklineListObj[part.currentSLIndex])">\r\n                                                                            <option value="0">Select</option>\r\n                                                                            <option *ngFor="let businessUnit of part.stocklineListObj[part.currentSLIndex].BusinessUnitList" [value]="businessUnit.value">{{businessUnit.label}}</option>\r\n                                                                        </select>\r\n                                                                        </div>\r\n                                                                        <div class="form-group">\r\n                                                                            <select class="form-control"\r\n                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].divisionId"\r\n                                                                            #selects="ngModel"\r\n                                                                            [ngModelOptions]="{standalone: true}"\r\n                                                                            (change)="selectedDivision(part.stocklineListObj[part.currentSLIndex].divisionId, part.stocklineListObj[part.currentSLIndex])">\r\n                                                                            <option value="0">Select</option>\r\n                                                                            <option *ngFor="let division of part.stocklineListObj[part.currentSLIndex].DivisionList" [value]="division.value">{{division.label}}</option>\r\n                                                                        </select>\r\n                                                                        </div>\r\n                                                                        <div class="form-group">\r\n                                                                            <select class="form-control"\r\n                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].departmentId"\r\n                                                                            #selects="ngModel"\r\n                                                                            [ngModelOptions]="{standalone: true}"\r\n                                                                            (change)="selectedDepartment(part.stocklineListObj[part.currentSLIndex].departmentId, part.stocklineListObj[part.currentSLIndex])">\r\n                                                                            <option value="0">Select</option>\r\n                                                                            <option *ngFor="let department of part.stocklineListObj[part.currentSLIndex].DepartmentList" [value]="department.value">{{department.label}}</option>\r\n                                                                        </select>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                \x3c!-- <div class="form-group">\r\n                                                                    <label>Company <span class="clr-red">*</span></label>\r\n                                                                    <select class="form-control"\r\n                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].companyId"\r\n                                                                            #selects="ngModel"\r\n                                                                            [ngModelOptions]="{standalone: true}"\r\n                                                                            (change)="selectedLegalEntity(part.stocklineListObj[part.currentSLIndex].companyId, part.stocklineListObj[part.currentSLIndex]); isCheckedSameDetailsForAllParts(part)">\r\n                                                                        <option value="0">Select</option>\r\n                                                                        <option *ngFor="let company of part.stocklineListObj[part.currentSLIndex].CompanyList" [value]="company.value">{{company.label}}</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>BU</label>\r\n                                                                    <select class="form-control"\r\n                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].businessUnitId"\r\n                                                                            #selects="ngModel"\r\n                                                                            [ngModelOptions]="{standalone: true}"\r\n                                                                            (change)="selectedBusinessUnit(part.stocklineListObj[part.currentSLIndex].businessUnitId, part.stocklineListObj[part.currentSLIndex])">\r\n                                                                        <option value="0">Select</option>\r\n                                                                        <option *ngFor="let businessUnit of part.stocklineListObj[part.currentSLIndex].BusinessUnitList" [value]="businessUnit.value">{{businessUnit.label}}</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Division</label>\r\n                                                                    <select class="form-control"\r\n                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].divisionId"\r\n                                                                            #selects="ngModel"\r\n                                                                            [ngModelOptions]="{standalone: true}"\r\n                                                                            (change)="selectedDivision(part.stocklineListObj[part.currentSLIndex].divisionId, part.stocklineListObj[part.currentSLIndex])">\r\n                                                                        <option value="0">Select</option>\r\n                                                                        <option *ngFor="let division of part.stocklineListObj[part.currentSLIndex].DivisionList" [value]="division.value">{{division.label}}</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Dept</label>\r\n                                                                    <select class="form-control"\r\n                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].departmentId"\r\n                                                                            #selects="ngModel"\r\n                                                                            [ngModelOptions]="{standalone: true}"\r\n                                                                            (change)="selectedDepartment(part.stocklineListObj[part.currentSLIndex].departmentId, part.stocklineListObj[part.currentSLIndex])">\r\n                                                                        <option value="0">Select</option>\r\n                                                                        <option *ngFor="let department of part.stocklineListObj[part.currentSLIndex].DepartmentList" [value]="department.value">{{department.label}}</option>\r\n                                                                    </select>\r\n                                                                </div> --\x3e\r\n                                                                <div class="form-group">\r\n                                                                    <label>Site <span class="clr-red">*</span></label>\r\n                                                                    <select class="form-control"\r\n                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].siteId"\r\n                                                                            #selects="ngModel"\r\n                                                                            [ngModelOptions]="{standalone: true}"\r\n                                                                            (change)="getStockLineWareHouse(part.stocklineListObj[part.currentSLIndex]); isCheckedSameDetailsForAllParts(part)">\r\n                                                                        <option value="0">Select</option>\r\n                                                                        <option *ngFor="let site of part.stocklineListObj[part.currentSLIndex].SiteList" [value]="site.Key">{{site.Value}}</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Warehouse</label>\r\n                                                                    <select class="form-control"\r\n                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].warehouseId"\r\n                                                                            #selects="ngModel"\r\n                                                                            [ngModelOptions]="{standalone: true}"\r\n                                                                            (change)="getStockLineLocation(part.stocklineListObj[part.currentSLIndex])">\r\n                                                                        <option value="0">Select</option>\r\n                                                                        <option *ngFor="let warehouse of part.stocklineListObj[part.currentSLIndex].WareHouseList" [value]="warehouse.Key">{{warehouse.Value}}</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Location</label>\r\n                                                                    <select class="form-control"\r\n                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].locationId"\r\n                                                                            #selects="ngModel"\r\n                                                                            [ngModelOptions]="{standalone: true}"\r\n                                                                            (change)="getStockLineShelf(part.stocklineListObj[part.currentSLIndex])">\r\n                                                                        <option value="0">Select</option>\r\n                                                                        <option *ngFor="let loc of part.stocklineListObj[part.currentSLIndex].LocationList" [ngValue]="loc.Key">{{loc.Value}}</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Shelf</label>\r\n                                                                    <select class="form-control"\r\n                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].shelfId"\r\n                                                                            #selects="ngModel"\r\n                                                                            [ngModelOptions]="{standalone: true}"\r\n                                                                            (change)="getStockLineBin(part.stocklineListObj[part.currentSLIndex])">\r\n                                                                        <option value="0">Select</option>\r\n                                                                        <option *ngFor="let shelf of part.stocklineListObj[part.currentSLIndex].ShelfList" [ngValue]="shelf.Key">{{shelf.Value}}</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Bin</label>\r\n                                                                    <select class="form-control"\r\n                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].binId"\r\n                                                                            #selects="ngModel"\r\n                                                                            [ngModelOptions]="{standalone: true}">\r\n                                                                        <option value="0">Select</option>\r\n                                                                        <option *ngFor="let bin of part.stocklineListObj[part.currentSLIndex].BinList" [ngValue]="bin.Key">{{bin.Value}}</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class="col-md-3">\r\n                                                                <div class="form-group">\r\n                                                                    <label>Obtain From </label>\r\n    \r\n                                                                    <select class="form-control"\r\n                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].obtainFromType"\r\n                                                                            #selects="ngModel"\r\n                                                                            [ngModelOptions]="{standalone: true}"\r\n                                                                            (change)="onObtainFromChange($event, part.stocklineListObj[part.currentSLIndex])">\r\n                                                                            <option value="0">Select</option>\r\n                                                                            <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">{{item.moduleName}}</option>\r\n                                                                            \x3c!-- <option value="1">Customer</option>\r\n                                                                            <option value="2">Vendor</option>\r\n                                                                            <option value="3">Company</option>\r\n                                                                            <option value="4">Other</option> --\x3e\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                                <div class="form-group" *ngIf="part.stocklineListObj[part.currentSLIndex].obtainFromType != undefined && part.stocklineListObj[part.currentSLIndex].obtainFromType > 0">\r\n                                                                    <div class="form-row">\r\n                                                                        <div class="col-sm-12">\r\n                                                                            <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].obtainFromType == 1"\r\n                                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].obtainFromObject"\r\n                                                                                            [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                            (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].obtainFromType)"\r\n                                                                                            (onSelect)="onObtainSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                            [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                            field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n                                                                            </p-autoComplete>\r\n\r\n                                                                            <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].obtainFromType == 2"\r\n                                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].obtainFromObject"\r\n                                                                                            [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                            (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].obtainFromType)"\r\n                                                                                            (onSelect)="onObtainSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                            [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                            field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n                                                                            </p-autoComplete>\r\n    \r\n                                                                            <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].obtainFromType == 9"\r\n                                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].obtainFromObject"\r\n                                                                                            [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                            (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].obtainFromType)"\r\n                                                                                            (onSelect)="onObtainSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                            [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                            field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n                                                                            </p-autoComplete>\r\n\r\n                                                                            <input *ngIf="part.stocklineListObj[part.currentSLIndex].obtainFromType == 4"\r\n                                                                                   class="form-control"\r\n                                                                                   type="text"\r\n                                                                                   [ngModelOptions]="{standalone: true}"\r\n                                                                                   [(ngModel)]="part.stocklineListObj[part.currentSLIndex].obtainFrom"\r\n                                                                                   pInputText>\r\n    \r\n                                                                        </div>\r\n                                                                        \x3c!-- <div class="col-sm-1">\r\n                                                                            <div *ngIf="part.stocklineListObj[part.currentSLIndex].obtainFromType == 1" style="cursor:pointer; font-size:14px; margin:6px -8px;"><a class="fa fa-plus-circle fa-lg" (click)="addPageCustomer()"></a></div>\r\n                                                                        </div> --\x3e\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Owner </label>\r\n                                                                    <select class="form-control" (change)="onOwnerChange($event, part.stocklineListObj[part.currentSLIndex])" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].ownerType">\r\n                                                                        <option value="0">Select</option>\r\n                                                                        <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">{{item.moduleName}}</option>\r\n                                                                        \x3c!-- <option value="1">Customer</option>\r\n                                                                        <option value="2">Vendor</option>\r\n                                                                        <option value="3">Company</option>\r\n                                                                        <option value="4">Other</option> --\x3e\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                                <div class="form-group" *ngIf="part.stocklineListObj[part.currentSLIndex].ownerType != undefined && part.stocklineListObj[part.currentSLIndex].ownerType > 0">\r\n                                                                    <div class="form-row">\r\n                                                                        <div class="col-sm-12">\r\n    \r\n                                                                            <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].ownerType == 1"\r\n                                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].ownerObject"\r\n                                                                                            [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                            (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].ownerType)"\r\n                                                                                            (onSelect)="onOwnerSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                            [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                            field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n                                                                            </p-autoComplete>\r\n    \r\n                                                                            <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].ownerType == 2"\r\n                                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].ownerObject"\r\n                                                                                            [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                            (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].ownerType)"\r\n                                                                                            (onSelect)="onOwnerSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                            [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                            field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n                                                                            </p-autoComplete>\r\n    \r\n                                                                            <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].ownerType == 9"\r\n                                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].ownerObject"\r\n                                                                                            [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                            (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].ownerType)"\r\n                                                                                            (onSelect)="onOwnerSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                            [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                            field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n                                                                            </p-autoComplete>\r\n\r\n                                                                            <input *ngIf="part.stocklineListObj[part.currentSLIndex].ownerType == 4"\r\n                                                                                   class="form-control"\r\n                                                                                   type="text"\r\n                                                                                   [ngModelOptions]="{standalone: true}"\r\n                                                                                   [(ngModel)]="part.stocklineListObj[part.currentSLIndex].owner"\r\n                                                                                   pInputText>\r\n    \r\n                                                                        </div>\r\n                                                                        \x3c!-- <div class="col-sm-1">\r\n                                                                            <div *ngIf="part.stocklineListObj[part.currentSLIndex].ownerType == 1" style="cursor:pointer; font-size:14px; margin:6px -8px;"><a class="fa fa-plus-circle fa-lg" (click)="addPageCustomer()"></a></div>\r\n                                                                        </div> --\x3e\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Traceable To</label>\r\n                                                                    <select class="form-control" (change)="onTraceableToChange($event, part.stocklineListObj[part.currentSLIndex])" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].traceableToType">\r\n                                                                        <option value="0">Select</option>\r\n                                                                        <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">{{item.moduleName}}</option>\r\n                                                                        \x3c!-- <option value="1">Customer</option>\r\n                                                                        <option value="2">Vendor</option>\r\n                                                                        <option value="3">Company</option>\r\n                                                                        <option value="4">Other</option> --\x3e\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                                <div class="form-group" *ngIf="part.stocklineListObj[part.currentSLIndex].traceableToType != undefined && part.stocklineListObj[part.currentSLIndex].traceableToType > 0">\r\n                                                                    <div class="form-row">\r\n                                                                        <div class="col-sm-12">\r\n    \r\n                                                                            <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].traceableToType == 1"\r\n                                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].traceableToObject"\r\n                                                                                            [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                            (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].traceableToType)"\r\n                                                                                            (onSelect)="onTraceableToSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                            [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                            field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n                                                                            </p-autoComplete>\r\n\r\n                                                                            <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].traceableToType == 2"\r\n                                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].traceableToObject"\r\n                                                                                            [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                            (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].traceableToType)"\r\n                                                                                            (onSelect)="onTraceableToSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                            [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                            field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n                                                                            </p-autoComplete>\r\n                                                                                \r\n                                                                            <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].traceableToType == 9"\r\n                                                                                            [(ngModel)]="part.stocklineListObj[part.currentSLIndex].traceableToObject"\r\n                                                                                            [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                            (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].traceableToType)"\r\n                                                                                            (onSelect)="onTraceableToSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                            [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                            field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n                                                                            </p-autoComplete>\r\n\r\n                                                                            <input *ngIf="part.stocklineListObj[part.currentSLIndex].traceableToType == 4"\r\n                                                                                   class="form-control"\r\n                                                                                   type="text"\r\n                                                                                   [ngModelOptions]="{standalone: true}"\r\n                                                                                   [(ngModel)]="part.stocklineListObj[part.currentSLIndex].traceableTo"\r\n                                                                                   pInputText>\r\n    \r\n                                                                        </div>\r\n                                                                        \x3c!-- <div class="col-sm-1">\r\n                                                                            <div *ngIf="part.stocklineListObj[part.currentSLIndex].traceableToType == 1" style="cursor:pointer; font-size:14px; margin:6px -8px;"><a class="fa fa-plus-circle fa-lg" (click)="addPageCustomer()"></a></div>\r\n                                                                        </div> --\x3e\r\n                                                                    </div>\r\n                                                                </div>\r\n    \r\n                                                                <div class="form-group">\r\n                                                                    <label>MFG <span class="clr-red"></span></label>\r\n                                                                    <select class="form-control" disabled [(ngModel)]="part.stocklineListObj[part.currentSLIndex].manufacturerId">\r\n                                                                        <option [value]="0">Select</option>\r\n                                                                        <option [value]="manufacturer.Key" *ngFor="let manufacturer of ManufacturerList">{{manufacturer.Value}}</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>MFG Lot Num</label>\r\n                                                                    <input class="form-control" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].manufacturerLotNumber" type="text" pInputText [maxLength]="200">\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>MFG Date</label>\r\n                                                                    <p-calendar class="pas-clder" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].manufacturingDate" [showIcon]="true"></p-calendar>\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>MFG Trace</label>\r\n                                                                    <input class="form-control" type="text" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].manufacturingTrace" pInputText value="Map pending" [maxLength]="200">\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class="col-md-3">\r\n                                                                <div class="form-group">\r\n                                                                    <label>MFG Batch Num</label>\r\n                                                                    <input class="form-control" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].manufacturingBatchNumber" type="text" pInputText [maxLength]="200">\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Expiration Date</label>\r\n                                                                    <p-calendar class="pas-clder" [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].expirationDate"></p-calendar>\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Unit Cost <span class="clr-red">*</span></label>\r\n                                                                    <input type="text" class="form-control text-right" pInputText pKeyFilter="pnum" (focusout)="calculateExtendedCost($event, part); isCheckedSameDetailsForAllParts(part)" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].repairOrderUnitCost" required>\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Extended Cost</label>\r\n                                                                    <input class="form-control text-right" type="text" disabled pInputText pKeyFilter="pnum" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].repairOrderExtendedCost">\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Parts Cert Num</label>\r\n                                                                    <input class="form-control" type="text" pInputText [(ngModel)]="part.stocklineListObj[part.currentSLIndex].partCertificationNumber" [maxLength]="200">\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Cert By</label>\r\n                                                                    \x3c!-- <select [(ngModel)]="part.stocklineListObj[part.currentSLIndex].certifiedBy" name="certifiedBy">\r\n                                                                        <option value="0">-- Select --</option>\r\n                                                                        <option *ngFor="let item of allEmployeeList" [ngValue]="item.value">{{item.label}}</option>\r\n                                                                    </select> --\x3e\r\n                                                                    <input class="form-control" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].certifiedBy" type="text" pInputText [maxLength]="200">\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Certified Date</label>\r\n                                                                    <p-calendar class="pas-clder" [maxDate]="part.stocklineListObj[part.currentSLIndex].currentDate" [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].certifiedDate"></p-calendar>\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Certified Due Date</label>\r\n                                                                    <p-calendar class="pas-clder" [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].certifiedDueDate"></p-calendar>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class="col-md-3">\r\n                                                                <div class="form-group">\r\n                                                                    <label>Tag Type</label>\r\n                                                                    <p-multiSelect [options]="TagTypeList" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].tagType" name="tagType{{part.currentSLIndex}}">\r\n                                                                    </p-multiSelect>\r\n                                                                    \x3c!-- <select class="form-control" name="tagType{{part.currentSLIndex}}" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].tagType">\r\n                                                                        <option value="0">Select</option>\r\n                                                                        <option *ngFor="let tagType of TagTypeList" [value]="tagType.Key">{{tagType.Value}}</option>\r\n                                                                    </select> --\x3e\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Tag Date</label>\r\n                                                                    <p-calendar class="pas-clder" [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].tagDate"></p-calendar>\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Engine Serial Number</label> \x3c!--matTooltip="Engine Serial Number"--\x3e\r\n                                                                    <input class="form-control" type="text" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].engineSerialNumber" pInputText [maxLength]="25">\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Aircraft Tail Num</label>\r\n                                                                    <input class="form-control" type="text" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].aircraftTailNumber" pInputText [maxLength]="25">\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Ship Via <span class="clr-red">*</span></label>\r\n                                                                    <select class="form-control" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].shippingViaId" (change)="isCheckedSameDetailsForAllParts(part)" required>\r\n                                                                        \x3c!-- <option value="0">Select</option> --\x3e\r\n                                                                        <option *ngFor="let shippingVia of ShippingViaList" [ngValue]="shippingVia.Key">{{shippingVia.Value}}</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Shipping Ref#/AWB <span class="clr-red">*</span></label>\r\n                                                                    <input class="form-control" type="text" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].shippingReference" pInputText [maxLength]="200" (change)="isCheckedSameDetailsForAllParts(part)" required>\r\n                                                                </div>\r\n                                                                <div class="form-group">\r\n                                                                    <label>Shipping Account</label>\r\n                                                                    <input class="form-control" type="text" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].shippingAccount" pInputText [maxLength]="200">\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </section>\r\n                                                    <br />\r\n                                                    <section>\r\n                                                        <h4 class="add-details-heading" style="text-align: left;" *ngIf="part.itemMaster.isSerialized">Serialized</h4>\r\n                                                        <div class="pull-right" style="margin-top: 19px;margin-right: 85px;" *ngIf="part.itemMaster.isSerialized">\r\n                                                            <i class="fa fa-chevron-left btn btn-primary btn-ad-icons" (click)="moveStockLinePage(\'stockline\', part.currentSERIndex - 1, part)"></i>\r\n                                                            <input [value]="part.currentSERIndex + 1" type="text" pInputText pKeyFilter="pnum" (keyup)="gotoStockLinePage($event, part)" (focusout)="paginatorFocusOut($event, part)" class="form-control" style="width: 50px;border-radius: 0 !important;" />\r\n                                                            <i class="fa fa-chevron-right btn btn-primary btn-ad-icons" (click)="moveStockLinePage(\'stockline\', part.currentSERIndex + 1, part)"></i>\r\n                                                            <p>Page {{part.currentSERIndex + 1}} of {{part.stocklineListObj.length}} Pages</p>\r\n                                                        </div>\r\n                                                        <div class="form-row" *ngIf="part.itemMaster.isSerialized">\r\n                                                            <div class="col-md-3">\r\n                                                                <div class="form-group">\r\n                                                                    <label>Serial Num</label>\r\n                                                                    <input class="form-control" (keyup)="moveByKey($event, part)"  disabled="{{part.stocklineListObj[part.currentSERIndex].serialNumberNotProvided}}" [(ngModel)]="part.stocklineListObj[part.currentSERIndex].serialNumber" type="text" pInputText [maxLength]="25">\r\n                                                                    <div class="checkbox-cstm" style="margin-top: 4px">\r\n                                                                        <label style="width: 200px;">\r\n                                                                            <input type="checkbox" class="form-control" [(ngModel)]="part.stocklineListObj[part.currentSERIndex].serialNumberNotProvided" (click)="onSerialNumberNotProvided(part.stocklineListObj[part.currentSERIndex])">\r\n                                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span> Serial Number not provided\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </section>\r\n                                                    <br />\r\n                                                    <section *ngIf="part.itemMaster.isTimeLife">\r\n                                                        <h3 class="add-details-heading"> {{ part.itemMaster?.partNumber }} receiving Qty Time Life  {{ (part.currentTLIndex + 1) }} of {{ part.timeLifeList.length }}   </h3>\r\n                                                        <div class="pull-right" style="margin-top: -37px;margin-right: 85px;" *ngIf="part.itemMaster.isTimeLife">\r\n                                                            <i class="fa fa-chevron-left btn btn-primary btn-ad-icons" (click)="moveStockLinePage(\'timelife\', part.currentTLIndex - 1, part)"></i>\r\n                                                            <input [value]="part.currentTLIndex + 1" type="text" pInputText pKeyFilter="pnum" (keyup)="gotoStockLinePage($event, part)" (focusout)="paginatorFocusOut($event, part)" class="form-control" style="width: 50px;border-radius: 0 !important;" />\r\n                                                            <i class="fa fa-chevron-right btn btn-primary btn-ad-icons" (click)="moveStockLinePage(\'timelife\', part.currentTLIndex + 1, part)"></i>\r\n                                                            <p>Page {{part.currentTLIndex + 1}} of {{part.timeLifeList.length}} Pages</p>\r\n                                                        </div>\r\n    \r\n                                                        <div class="form-row">\r\n                                                            <div class="col-md-3">\r\n                                                                <div class="form-group">\r\n                                                                    <div class="checkbox-cstm" style="margin-top: 4px">\r\n                                                                        <label style="width: 200px;">\r\n                                                                            <input type="checkbox" [(ngModel)]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" class="form-control" (click)="onChangeTimeLife(part)">\r\n                                                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span> Time Life details not provided\r\n                                                                        </label>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class="time-remaining">\r\n                                                            <table class="table table-bordered">\r\n                                                                <thead>\r\n                                                                    <tr class="po-table-tr">\r\n                                                                        <th colspan="2" class="text-center">Cycles</th>\r\n                                                                        <th colspan="2" class="text-center">Time (in hours)</th>\r\n                                                                        <th colspan="2" class="text-center">Last (in hours)</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody>\r\n                                                                    <tr>\r\n                                                                        <td>Remaining</td>\r\n                                                                        <td>\r\n                                                                            <input class="form-control" placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesRemainingHrs">\r\n                                                                            <span> : </span>\r\n                                                                            <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesRemainingMin" (change)="onChangeTimeLifeMin(\'cyclesRemainingMin\', part, part.currentTLIndex)">\r\n                                                                        </td>\r\n                                                                        <td>Remaining</td>\r\n                                                                    <td>\r\n                                                                        <input class="form-control" placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeRemainingHrs">\r\n                                                                        <span> : </span>\r\n                                                                        <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeRemainingMin" (change)="onChangeTimeLifeMin(\'timeRemainingMin\', part, part.currentTLIndex)">\r\n                                                                    </td>\r\n                                                                    <td>Since New</td>\r\n                                                                    <td>\r\n                                                                        <input class="form-control" placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].lastSinceNewHrs">\r\n                                                                        <span> : </span>\r\n                                                                        <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].lastSinceNewMin" (change)="onChangeTimeLifeMin(\'lastSinceNewMin\', part, part.currentTLIndex)">\r\n                                                                    </td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since New</td>\r\n                                                                        <td>\r\n                                                                            <input class="form-control" placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesSinceNewHrs">\r\n                                                                            <span> : </span>\r\n                                                                            <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesSinceNewMin" (change)="onChangeTimeLifeMin(\'cyclesSinceNewMin\', part, part.currentTLIndex)">\r\n                                                                        </td>\r\n                                                                        <td>Since New</td>\r\n                                                                        <td>\r\n                                                                            <input class="form-control" placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeSinceNewHrs">\r\n                                                                            <span> : </span>\r\n                                                                            <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeSinceNewMin" (change)="onChangeTimeLifeMin(\'timeSinceNewMin\', part, part.currentTLIndex)">\r\n                                                                        </td>\r\n                                                                        <td>Since Ovh</td>\r\n                                                                        <td>\r\n                                                                            <input class="form-control" placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].lastSinceOVHHrs">\r\n                                                                            <span> : </span>\r\n                                                                            <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].lastSinceOVHMin" (change)="onChangeTimeLifeMin(\'lastSinceOVHMin\', part, part.currentTLIndex)">\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since Ovh</td>\r\n                                                                        <td>\r\n                                                                            <input class="form-control" placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesSinceOVHHrs">\r\n                                                                            <span> : </span>\r\n                                                                            <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesSinceOVHMin" (change)="onChangeTimeLifeMin(\'cyclesSinceOVHMin\', part, part.currentTLIndex)">\r\n                                                                        </td>\r\n                                                                        <td>Since Ovh</td>\r\n                                                                        <td>\r\n                                                                            <input class="form-control" placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeSinceOVHHrs">\r\n                                                                            <span> : </span>\r\n                                                                            <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeSinceOVHMin" (change)="onChangeTimeLifeMin(\'timeSinceOVHMin\', part, part.currentTLIndex)">\r\n                                                                        </td>\r\n                                                                        <td>Since Insp</td>\r\n                                                                        <td>\r\n                                                                            <input class="form-control" placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].lastSinceInspectionHrs">\r\n                                                                            <span> : </span>\r\n                                                                            <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].lastSinceInspectionMin" (change)="onChangeTimeLifeMin(\'lastSinceInspectionMin\', part, part.currentTLIndex)">\r\n                                                                        </td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since Insp</td>\r\n                                                                        <td>\r\n                                                                            <input class="form-control" placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesSinceInspectionHrs">\r\n                                                                            <span> : </span>\r\n                                                                            <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesSinceInspectionMin" (change)="onChangeTimeLifeMin(\'cyclesSinceInspectionMin\', part, part.currentTLIndex)">\r\n                                                                        </td>\r\n                                                                        <td>Since Insp</td>\r\n                                                                        <td>\r\n                                                                            <input class="form-control" placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeSinceInspectionHrs">\r\n                                                                            <span> : </span>\r\n                                                                            <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeSinceInspectionMin" (change)="onChangeTimeLifeMin(\'timeSinceInspectionMin\', part, part.currentTLIndex)">\r\n                                                                        </td>\r\n                                                                        <td></td>\r\n                                                                        <td></td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since Repair</td>\r\n                                                                        <td>\r\n                                                                            <input class="form-control" placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesSinceRepairHrs">\r\n                                                                            <span> : </span>\r\n                                                                            <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesSinceRepairMin" (change)="onChangeTimeLifeMin(\'cyclesSinceRepairMin\', part, part.currentTLIndex)">\r\n                                                                        </td>\r\n                                                                        <td>Since Repair</td>\r\n                                                                        <td>\r\n                                                                            <input class="form-control" placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeSinceRepairHrs">\r\n                                                                            <span> : </span>\r\n                                                                            <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeSinceRepairMin" (change)="onChangeTimeLifeMin(\'timeSinceRepairMin\', part, part.currentTLIndex)">\r\n                                                                        </td>\r\n                                                                        <td></td>\r\n                                                                        <td></td>\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </section>\r\n    \r\n                                                    <section *ngIf="part.assetId != null">\r\n                                                        <h3 class="add-details-heading" style="text-align: left;">Calibrated Equipment</h3>\r\n                                                        <div class="form-row">\r\n                                                            <div class="col-md-3">\r\n                                                                <div class="form-group">\r\n                                                                    <label>Inspection Date</label>\r\n                                                                    <p-calendar class="pas-clder" [showIcon]="true"></p-calendar>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class="col-md-3">\r\n                                                                <div class="form-group">\r\n                                                                    <label>Frequency</label>\r\n                                                                    <input class="form-control" type="text" pInputText pKeyFilter="pnum">\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </section>\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </ng-container>\r\n                                </tbody>\r\n                            </table>\r\n                          \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div class="clear"></div>\r\n            <hr>\r\n            <button class="btn btn-primary pull-right" [disabled]="!quantityreceivebtn" (click)="onSubmitToReceive()">Submit to Receive</button>\r\n            <div class="clear"></div>\r\n            <br>\r\n            <br>\r\n            <br>\r\n            <br>\r\n        \x3c!-- </div>\r\n    \r\n    </div> --\x3e\r\n\r\n    <div class="modal fade" id="add-notes" role="dialog" data-backdrop="static">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">Edit Notes</h4>\r\n                </div>\r\n    \r\n                <div class="modal-body">\r\n                    <table class="table table-bordered table-fixed workflow-table-material">\r\n                        <thead>\r\n                        <th style="color: #fff;">Notes</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <p-editor [(ngModel)]="headerNotes" [style]="{\'height\':\'320px\'}"\r\n                                               name="headerNotes" required></p-editor>\r\n                                    \x3c!-- <textarea [(ngModel)] = "material.description"></textarea> --\x3e\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div class="editor-buttons">  \r\n                        <button type="button"  class="btn btn-primary editor-buttons-margin"\r\n                                data-dismiss="modal" (click)="onSaveNotes()">\r\n                            Save\r\n                        </button>\r\n                        <button type="button" class="btn btn-danger editor-buttons-margin"\r\n                                data-dismiss="modal">\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n    \r\n    \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="modal fade" id="cpo-memo" role="dialog" data-backdrop="static">\r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">Edit Memo</h4>\r\n                </div>\r\n    \r\n                <div class="modal-body">\r\n                    <table class="table table-bordered table-fixed workflow-table-material">\r\n                        <thead>\r\n                        <th style="color: #fff;">Memo</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <p-editor [(ngModel)]="headerMemo" [style]="{\'height\':\'320px\'}" name="headerMemo" required></p-editor>\r\n                                    \x3c!-- <textarea [(ngModel)] = "material.description"></textarea> --\x3e\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div class="editor-buttons">\r\n                        <button type="button" class="btn btn-primary editor-buttons-margin" \r\n                                data-dismiss="modal" (click)="onSaveMemo()">\r\n                            Save\r\n                        </button>\r\n                        <button type="button" class="btn btn-danger editor-buttons-margin"\r\n                                data-dismiss="modal">\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n    \r\n    \r\n    \r\n                \x3c!-- <div class="modal-body">\r\n                    <div class="form-group">\r\n                        <label>Memo</label>\r\n                        <textarea class="form-control" name="tempMemo" [(ngModel)]="tempMemo" value={{tempMemo}}></textarea>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="onSaveMemo()">Save</button>\r\n                    <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n                </div> --\x3e\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="preloader" *ngIf="isSpinnerVisible">\r\n        <div class="loading">\r\n            <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    </div>'},Wzmp:function(e,t,n){"use strict";n.r(t),t.default='<app-ro-list [isReceivingRolist]="isReceivingRolist"></app-ro-list>'},"Xe++":function(e,t,n){"use strict";n.r(t),t.default='<div class="ro-view-receiving">\r\n        <div class="x_panel">\r\n            <div>\r\n                <div>\r\n                    <div id="adminsearchlocationajax">\r\n                        <div class="">\r\n                            <table class="table table-bordered table-wrap">\r\n                                <thead>\r\n                                    <tr class="po-table-tr">\r\n                                        <th>Line no</th>\r\n                                        <th>PN</th>\r\n                                        <th>Qty to Repair</th>\r\n                                        <th>Qty Repaired</th>\r\n                                        <th>Back Ord</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngIf="repairOrderData != undefined">\r\n                                    <ng-container *ngFor="let part of repairOrderData;let row_index=index">\r\n                                        <tr class="basic-info" *ngIf="part.stockLine != null && part.stockLine.length > 0">\r\n                                            <td class="text-right">{{row_index + 1}}</td>\r\n                                            <td>{{part.itemMaster?.partNumber}}</td>\r\n                                            <td class="text-right">{{part.quantityToRepair}}</td>\r\n                                            <td class="text-right">{{part.stockLine.length}}</td>\r\n                                            <td class="text-right">{{part.quantityToRepair - part.stockLine.length}}</td>\r\n                                            <td class="details-control eachcol" style="padding: 4px 6px;">\r\n                                                <i class="fa fa-{{ part.showStockLineGrid ? \'minus\':\'plus\'}} btn btn-success btn-cstm btn-xs margin0 btn-receiving-toggle" (click)="toggleExpandIcon(part)"></i>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                        <tr class="more-info" *ngIf="part.showStockLineGrid">\r\n                                            <td colspan="6">\r\n                                                <div class="label-value-row">\r\n                                                    <div class="col-sm-4">\r\n                                                        <p><span class="label"><b>PN: </b></span><span class="value"> {{part.itemMaster?.partNumber}}</span></p>\r\n                                                        <p><span class="label"><b>Qty Actually Received: </b></span><span class="value">{{part.stockLine?.length}}</span></p>\r\n                                                    </div>\r\n                                                    <div class="col-sm-4">\r\n                                                        <p><span class="label"><b>PN Description: </b></span><span class="value">{{part.itemMaster?.partDescription}}</span></p>\r\n                                                        <p><span class="label"><b>Qty Rejected: </b></span><span class="value">{{part.itemMaster?.quantityRejected}}</span></p>\r\n                                                    </div>\r\n                                                    <div class="col-sm-4">\r\n                                                        <p><span class="label"><b>Cond: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].conditionText}}</span></p>\r\n                                                        <p><span class="label"><b>GL Account: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].glAccountText}}</span></p>\r\n                                                    </div>                                                   \r\n                                                </div>\r\n\r\n                                                <div class="stockGridpanel2">\r\n                                                    <h3 class="add-details-heading" style="padding-top: 10px;"> {{ part.itemMaster?.partNumber }} receiving Qty  {{ (part.currentSLIndex + 1) }} of {{ part.stockLine.length }}</h3>\r\n                                                   \r\n                                                    <div class="pull-right" style="margin-top: -37px;margin-right: 85px;" *ngIf="part.itemMaster?.isSerialized">\r\n                                                        <i class="fa fa-chevron-left btn btn-primary btn-ad-icons" (click)="moveStockLinePage(\'stockline\', part.currentSLIndex - 1, part)"></i>\r\n                                                        <input [value]="part.currentSLIndex + 1" type="text" pInputText pKeyFilter="pnum" (keyup)="gotoStockLinePage($event, part)" (focusout)="paginatorFocusOut($event, part)" class="form-control" style="width: 50px;border-radius: 0 !important;" />\r\n                                                        <i class="fa fa-chevron-right btn btn-primary btn-ad-icons" (click)="moveStockLinePage(\'stockline\', part.currentSLIndex + 1, part)"></i>\r\n                                                        <p>Page {{part.currentSLIndex + 1}} of {{part.stockLine.length}} Pages</p>\r\n                                                    </div>\r\n                                                \r\n\r\n                                                    <section class="receiving-stockline-view">\r\n                                                        <div class="label-value-row">\r\n                                                            <div class="col-sm-3" style="margin-right: 20px;width: 210px !important;">\r\n                                                                <div class="card" style="margin-top: 13px;">\r\n                                                                    <div class="card-header" style="padding: 0 10px;">\r\n                                                                        <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure</h5>\r\n                                                                    </div>\r\n                                                                    <div class="card-body" style="padding: 0 12px 12px;">\r\n                                                                        <p><span class="label"><b>Company: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].companyText}}</span></p>\r\n                                                                        <p><span class="label"><b>BU: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].businessUnitText}}</span></p>\r\n                                                                        <p><span class="label"><b>Division: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].divisionText}}</span></p>\r\n                                                                        <p><span class="label"><b>Dept: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].departmentText}}</span></p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                               \r\n                                                                <p><span class="label"><b>Site: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].siteText}}</span></p>\r\n                                                                <p><span class="label"><b>Warehouse: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].warehouseText}}</span></p>\r\n                                                                <p><span class="label"><b>Location: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].locationText}}</span></p>\r\n                                                                <p><span class="label"><b>Shelf: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].shelfText}}</span></p>\r\n                                                            </div>\r\n                                                            <div class="col-sm-3">\r\n                                                                <p><span class="label"><b>Bin: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].binText}}</span></p>\r\n                                                                <p><span class="label"><b>Obtain From: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].obtainFrom}}</span></p>\r\n                                                                <p><span class="label"><b>Owner: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].owner}}</span></p>\r\n                                                                <p><span class="label"><b>Traceable To: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].traceableTo}}</span></p>\r\n                                                                <p><span class="label"><b>MFG: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].manufacturerName}}</span></p>\r\n                                                                <p><span class="label"><b>MFG Lot Num: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].manufacturerLotNumber}}</span></p>\r\n                                                                <p><span class="label"><b>MFG Date: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].manufacturingDate}}</span></p>\r\n                                                                <p><span class="label"><b>MFG Trace: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].manufacturingTrace}}</span></p>\r\n                                                            </div>\r\n                                                            <div class="col-sm-3">\r\n                                                                <p><span class="label"><b>MFG Batch Num: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].manufacturingBatchNumber}}</span></p>\r\n                                                                <p><span class="label"><b>Expiration Date: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].expirationDate}}</span></p>\r\n                                                                <p><span class="label"><b>Unit Cost: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].repairOrderUnitCost}}</span></p>\r\n                                                                <p><span class="label"><b>Extended Cost: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].repairOrderExtendedCost}}</span></p>\r\n                                                                <p><span class="label"><b>Parts Cert Num: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].partCertificationNumber}}</span></p>\r\n                                                                <p><span class="label"><b>Cert By: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].certifiedByName}}</span></p>\r\n                                                                <p><span class="label"><b>Certified Date: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].certifiedDate}}</span></p>\r\n                                                                <p><span class="label"><b>Certified Due Date: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].certifiedDueDate}}</span></p>\r\n                                                            </div>\r\n                                                            <div class="col-sm-3">\r\n                                                                <p><span class="label"><b>Tag Type: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].tageTypeName}}</span></p>\r\n                                                                <p><span class="label"><b>Tag Date: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].tagDate}}</span></p>\r\n                                                                <p><span class="label"><b>ESN: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].engineSerialNumber}}</span></p>\r\n                                                                <p><span class="label"><b>Aircraft Tail Num: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].aircraftTailNumber}}</span></p>\r\n                                                                <p><span class="label"><b>Ship Via: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].shippingViaText}}</span></p>\r\n                                                                <p><span class="label"><b>Shipping Ref#/AWB: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].shippingReference}}</span></p>\r\n                                                                <p><span class="label"><b>Shipping Account: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].shippingAccount}}</span></p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </section>\r\n\r\n                                                    <section style="clear: both;">\r\n                                                        <h3 class="add-details-heading" style="text-align: left;padding-top: 30px;">Serialized</h3>\r\n                                                        <div class="form-row">\r\n                                                            <div class="col-md-3">\r\n                                                                <p><span class="label"><b>Serial Num: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].serialNumber}}</span></p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </section>\r\n\r\n                                                    <section>\r\n                                                        <h3 class="add-details-heading" style="text-align: left;">Time Life</h3>\r\n                                                        <div class="time-remaining">\r\n                                                            <table class="table table-bordered timelife-table">\r\n                                                                <thead>\r\n                                                                    <tr class="po-table-tr">\r\n                                                                        <th colspan="2" class="text-center">Cycles</th>\r\n                                                                        <th colspan="2" class="text-center">Time (in hours)</th>\r\n                                                                        <th colspan="2" class="text-center">Last (in hours)</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody *ngIf="part.timeLife[part.currentSLIndex]">\r\n                                                                    <tr>\r\n                                                                        <td>Remaining</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].cyclesRemaining}}</td>\r\n                                                                        <td>Remaining</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].timeRemaining}}</td>\r\n                                                                        <td>Since New</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].lastSinceNew}}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since New</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].cyclesSinceNew}}</td>\r\n                                                                        <td>Since New</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].timeSinceNew}}</td>\r\n                                                                        <td>Since Ovh</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].lastSinceOVH}}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since Ovh</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].cyclesSinceOVH}}</td>\r\n                                                                        <td>Since Ovh</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].timeSinceOVH}}</td>\r\n                                                                        <td>Since Insp</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].lastSinceInspection}}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since Insp</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].cyclesSinceInspection}}</td>\r\n                                                                        <td>Since Insp</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].timeSinceInspection}}</td>\r\n                                                                        <td></td>\r\n                                                                        <td></td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since Repair</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].cyclesSinceRepair}}</td>\r\n                                                                        <td>Since Repair</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].timeSinceRepair}}</td>\r\n                                                                        <td></td>\r\n                                                                        <td></td>\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </section>\r\n\r\n                                                    \x3c!--<section>\r\n                                                        <h3 class="add-details-heading" style="text-align: left;">Calibrated Equipment</h3>\r\n                                                        <div class="form-row">\r\n                                                            <div class="col-md-3">\r\n                                                                <p><span class="label"><b>Inspection Date: </b></span><span class="value">-</span></p>\r\n                                                            </div>\r\n                                                            <div class="col-md-3">\r\n                                                                <p><span class="label"><b>Frequency: </b></span><span class="value">-</span></p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </section>--\x3e\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </ng-container>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>'},YHKB:function(e,t,n){"use strict";n.r(t),t.default=".x_panel {\n  border: none;\n}\n\nlabel {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.child-data td, .parent-data td {\n  background: #fff !important;\n  padding: 3px;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.head-notes {\n  height: 28px !important;\n}\n\n.child-header {\n  background: #fafafa !important;\n}\n\n.pas-table-cstm select, .pas-table-cstm input {\n  min-width: 90px;\n}\n\na.fa.fa-plus-circle {\n  color: green !important;\n}\n\n.nobg {\n  background: none;\n}\n\n.form-group {\n  margin-bottom: 0px;\n}\n\n.ro-grid-form .form-group {\n  margin-bottom: 10px;\n}\n\n.ro-status-radios {\n  margin-bottom: 15px;\n}\n\n.parent-data {\n  background: #fff !important;\n}\n\n.pas-table-cstm tr th {\n  min-width: 110px;\n  text-align: center;\n}\n\n.time-remaining-td {\n  min-width: 90px;\n}\n\n.time-remaining-input {\n  min-width: initial !important;\n  width: 100%;\n}\n\n.time-remaining-span {\n  float: left;\n  margin-top: 5px;\n}\n\n.time-remaining-td .form-row [class*=col-] {\n  padding-right: 0 !important;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}"},YJ2Z:function(e,t,n){"use strict";n.r(t),t.default='<form id="" class="ro-grid-form createPO-form" name="">\r\n\r\n<div class="x_content" *ngIf="purchaseOrderData">\r\n\r\n    <div class="card new-card">\r\n        <div class="card-header header">\r\n            <div class="row">\r\n                <div class="col">\r\n                    <h4 class="header-name"> Receiving/Purchase Order\r\n\r\n                        <button class="btn-sm header-button header-button-alignment" (click)="receiving_po_header=!receiving_po_header" style="margin-left: 20px;">\r\n                            {{receiving_po_header ? \'Collapse\' : \'Expand\'}}\r\n                        </button>\r\n                    </h4>\r\n                </div>\r\n            \x3c!-- <nav aria-label="breadcrumb">\r\n                <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n                    <li class="breadcrumb-item active" aria-current="page">Receiving/Purchase Order</li>\r\n                </ol>\r\n               \r\n            </nav> --\x3e\r\n          \r\n\r\n            <button\r\n            type="button"\r\n            class="btn-sm header-button pull-right"\r\n            [routerLink]="[\'/vendorsmodule/vendorpages/app-polist\']">\r\n            PO List\r\n           </button>\r\n\r\n         </div>\r\n        \r\n        </div>\r\n\r\n        <div class="card-body">\r\n                <div class="form-row">\r\n                    <div class="col-md-8 ro-status-radios">\r\n                        <div class="form-group">\r\n                            <label style="float:left; width:auto; margin-right:20px; padding-top:3px;">Status:</label>\r\n                            <div>\r\n                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;" *ngFor="let status of poStatus">\r\n                                    <label class="radio-cstm wauto">\r\n                                        <input type="radio" [checked]="status.value == purchaseOrderData.statusId" name="postatus" \r\n                                        class="form-control" value="{{status.value}}" disabled required>\r\n                                        <span class="checkmark"></span>\r\n                                        {{status.label}}\r\n                                   \r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \x3c!-- <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                        <label class="radio-cstm wauto">\r\n                            <input type="radio" name="woStatus" class="form-control" value="closed"\r\n                                   [(ngModel)]="currentStatus" (click)="changeOfStatus(\'closed\', \'\')">\r\n                            <span class="checkmark"></span>Closed\r\n                        </label>\r\n                    </div>\r\n                    --\x3e\r\n                   \r\n                   \r\n                    <div class="col-md-9">\r\n                        <div class="form-row">\r\n                        <div class="col-md-4">\r\n                            <div class="form-group">\r\n                                <label>PO Num</label>\r\n                                <input class="form-control" type="text" name="purchaseOrderNumber" [(ngModel)]="poDataHeader.purchaseOrderNumber" disabled >\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-4">\r\n                            <div class="form-group">\r\n                                <label>Vendor Name</label>\r\n                                <input class="form-control" type="text" name="vendorName" [(ngModel)]="poDataHeader.vendorName" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-4">\r\n                            <div class="form-group">\r\n                                <label>Requisitioner</label>\r\n                                <input class="form-control" type="text" name="requestedBy" [(ngModel)]="poDataHeader.requestedBy" disabled>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n               \r\n                \r\n                \r\n                <hr *ngIf="receiving_po_header" />\r\n                <div class="form-row" *ngIf="receiving_po_header" style="margin-top: 10px;">\r\n                    <div class="col-md-9">\r\n                        <div class="form-row">\r\n                    <div class="col-md-4">\r\n                        <div class="form-group">\r\n                            <label>Open Date</label>\r\n                            <p-calendar class="pas-clder" [showIcon]="true" name="openDate" [(ngModel)]="poDataHeader.openDate" [disabled]="true"></p-calendar>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Closed/Cancelled Date</label>\r\n                            <p-calendar class="pas-clder" [showIcon]="true" name="closedDate" [(ngModel)]="poDataHeader.closedDate" [disabled]="true"></p-calendar>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Need By</label>\r\n                            <p-calendar class="pas-clder" [showIcon]="true" name="needByDate" [(ngModel)]="poDataHeader.needByDate" [disabled]="true"></p-calendar>  \r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Priority</label>\r\n                            <input class="form-control" type="text" name="priority" [(ngModel)]="poDataHeader.priority" disabled>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                   \r\n                    <div class="col-md-4">\r\n                        <div class="form-group">\r\n                            <label>Vendor Code</label>\r\n                            <input class="form-control" type="text" name="vendorCode" [(ngModel)]="poDataHeader.vendorCode" disabled>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Vendor Contact</label>\r\n                            <input class="form-control" type="text" name="vendorContact" [(ngModel)]="poDataHeader.vendorContact" disabled>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Contact Phone</label>\r\n                            <input class="form-control" type="text" name="contactPhone" [(ngModel)]="poDataHeader.vendorPhone" disabled>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Credit Limit &amp; Terms</label>\r\n                            <div class="form-row">\r\n                                <div class="col-sm-5">\r\n                                    <input class="form-control" type="text" placeholder="limit" name="creditLimit" [(ngModel)]="poDataHeader.creditLimit" disabled>\r\n                                </div>\r\n                                <div class="col-sm-7">\r\n                                    <input class="form-control" type="text" name="creditTerms" [(ngModel)]="poDataHeader.terms" disabled>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n    \r\n                    </div>\r\n                    <div class="col-md-4">\r\n                        \x3c!-- <div class="form-group">\r\n                            <label>Approver</label>\r\n                            <input class="form-control" type="text" name="approver" [(ngModel)]="poDataHeader.approver" disabled>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label>Approved Date</label>\r\n                            <p-calendar class="pas-clder" [showIcon]="true" name="approvedDate" [(ngModel)]="poDataHeader.dateApproved" [disabled]="true"></p-calendar>\r\n                        </div> --\x3e\r\n                                          \r\n                        <div class="form-group">\r\n                            <div class="checkbox-cstm" style="margin-top: 15px;">\r\n                                <label>\r\n                                    <input type="checkbox" name="resale" class="form-control" [(ngModel)]="poDataHeader.resale" disabled>\r\n                                    <span class="cr" style="opacity: 0.6;"><i class="cr-icon pi pi-check"></i></span>\r\n                                    Resale\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <div class="checkbox-cstm" style="margin-top: 10px;">\r\n                                <label>\r\n                                    <input type="checkbox" name="deferredReceiver" [(ngModel)]="poDataHeader.deferredReceiver" disabled>\r\n                                    <span class="cr" style="opacity: 0.6;"><i class="cr-icon pi pi-check"></i></span>\r\n                                    Deferred Receiver\r\n                                </label>\r\n                            </div>\r\n                        </div>                        \r\n                    </div>\r\n               \r\n                <div class="col-md-4">\r\n                    <div class="form-group memo-popup-cstm">\r\n                        <label>Notes\r\n                            <span class="editor-span"\r\n                            ><a\r\n                              class="btn nobg"\r\n                              data-toggle="modal"\r\n                              data-target="#add-notes"\r\n                              (click)="onAddNotes()"\r\n                              matTooltipPosition="above" matTooltip="Notes"\r\n                              ><i class="fa fa-pencil" ></i\r\n                            ></a>\r\n                            </span>\r\n                        </label>\r\n                            \x3c!-- <textarea name="ponotes" class="form-control head-notes" rows="2" \r\n                            [(ngModel)]="poDataHeader.notes" disabled></textarea> --\x3e\r\n\r\n                            <span>\r\n                                <div [innerHTML]="poDataHeader.notes"\r\n                                [matTooltip]="parsedText(poDataHeader.notes)"\r\n                                matTooltipPosition="above"\r\n                                 class="form-control text-editor-field"\r\n                                    class="text_editor_box text-editor-width">\r\n                                </div>\r\n                            \r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                                \x3c!-- <div [innerHTML]="poDataHeader.notes" \r\n                                class="form-group head-notes memo-popup-cstm mat_emo"\r\n                       style="width:100%;background-color: #c9c9c9 !important;" class="text_editor_box" disabled>\r\n                       </div> --\x3e\r\n                      \r\n\r\n                <div class="col-md-4">\r\n                    <div class="form-group memo-popup-cstm">\r\n                            <label>Memo \r\n                                   <span class="editor-span"\r\n                                   ><a\r\n                                     class="btn nobg"\r\n                                     data-toggle="modal"\r\n                                     data-target="#cpo-memo" matTooltipPosition="above" \r\n                                     matTooltip="Add Memo" disabled="true"  (click)="onAddMemo()"\r\n                                     ><i class="fa fa-pencil" ></i\r\n                                   ></a>\r\n                                   </span>\r\n                               </label>\r\n                     \r\n\r\n               \x3c!-- <div [innerHTML]="poDataHeader.memo" \r\n               class="form-group memo-popup-cstm mat_emo"\r\n      style="width:100%;background-color: #c9c9c9 !important;" class="text_editor_box" disabled>\r\n      </div> --\x3e\r\n\r\n                       <span> <div [innerHTML]="poDataHeader.memo" \r\n                                [matTooltip]="parsedText(poDataHeader.memo)"\r\n                                  matTooltipPosition="above"\r\n                                 class="form-control " \r\n                                class="text_editor_box text-editor-field" disabled="true"></div> \r\n                               </span>\r\n                            </div>\r\n                        </div>\r\n                     \x3c!-- </div> --\x3e\r\n                    \x3c!-- </div> --\x3e\r\n                    \r\n                \x3c!-- </div> --\x3e\r\n            </div>\r\n        </div>\r\n                    <div class="col-md-3">\r\n                        <div class="card management-structure-card">\r\n                            <div class="card-header management-structure-card-header">\r\n                                <h5 class="management-structure-header">Management Structure</h5>\r\n                            </div>\r\n                            <div class="card-body structure-card-body">\r\n                                <div class="form-group" style="margin-bottom: 2px; margin-top: 5px;">\r\n                                    <input class="form-control" type="text" name="companyName" [(ngModel)]="headerManagementStructure.level1" disabled>\r\n                                </div>\r\n                                <div class="form-group" style="margin-bottom: 2px; margin-top: 7px;">\r\n                                    <input class="form-control" type="text" name="BUName" [(ngModel)]="headerManagementStructure.level2" disabled>\r\n                                </div>\r\n                                <div class="form-group" style="margin-bottom: 2px; margin-top: 7px;">\r\n                                    <input class="form-control" type="text" name="divisionName" [(ngModel)]="headerManagementStructure.level3" disabled>\r\n                                </div>\r\n                                <div class="form-group" style="margin-bottom: 2px; margin-top: 7px;">\r\n                                    <input class="form-control" type="text" name="deptName" [(ngModel)]="headerManagementStructure.level4" disabled>\r\n                                </div>\r\n                            </div>\r\n                        </div>                            \r\n                    </div>\r\n                </div>  \r\n\r\n                \x3c!-- <div class="form-row" style="margin-top: 15px;">\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>PO Num</label>\r\n                            <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="purchaseOrderData.purchaseOrderNumber" disabled="disabled" required>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Vendor Num</label>\r\n                            <div class="inner-addon right-addon inline-block">\r\n                                <input class="form-control" type="text" [value]="purchaseOrderData.vendor.vendorCode" disabled="disabled" required>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Requisitioner</label>\r\n                            <input type="text" disabled="disabled" class="form-control" value="{{purchaseOrderData.requestedByText}}" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-row">\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Open Date</label>\r\n                            <p-calendar disabled="disabled" class="pas-clder" [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="purchaseOrderData.dateRequested" [required]="true"></p-calendar>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Vendor Name</label>\r\n                            <div class="inner-addon right-addon inline-block">\r\n                                <input type="text" class="form-control" [value]="purchaseOrderData.vendor.vendorName" disabled="disabled" required>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Approver</label>\r\n                            <div class="inner-addon">\r\n                                <input disabled="disabled" type="text" class="form-control" [ngModelOptions]="{standalone: true}" [(ngModel)]="purchaseOrderData.approver" required>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-row">\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Need By</label>\r\n                            <p-calendar disabled="disabled" class="pas-clder" [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="purchaseOrderData.dateRequested" [required]="true"></p-calendar>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Vendor Contact</label>\r\n                            <input class="form-control" [ngModelOptions]="{standalone: true}" [(ngModel)]="purchaseOrderData.vendor.vendorName" type="text" disabled="disabled" />\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Approved Date</label>\r\n                            <p-calendar disabled="disabled" class="pas-clder" [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="purchaseOrderData.dateApproved" [required]="true"></p-calendar>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-row">\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Priority</label>\r\n                            <div class="inner-addon right-addon inline-block">\r\n                                <select disabled="disabled" class="form-control" #selects="ngModel" [ngModelOptions]="{standalone: true}" [(ngModel)]="purchaseOrderData.priorityId">\r\n                                    <option *ngFor="let priority of poPriorityInfo" [value]="priority.Key">{{priority.Value}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Contact Phone</label>\r\n                            <input disabled="disabled" class="form-control" type="text" pKeyFilter="pnum" [ngModelOptions]="{standalone: true}" [(ngModel)]="purchaseOrderData.vendor.vendorPhone">\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Credit Limit &amp; Terms</label>\r\n                            <div class="form-row">\r\n                                <div class="col-sm-5">\r\n                                    <input class="form-control" type="text" disabled [ngModelOptions]="{standalone: true}" [(ngModel)]="purchaseOrderData.creditLimit">\r\n                                </div>\r\n                                <div class="col-sm-7">\r\n                                    <input class="form-control" type="text" disabled [ngModelOptions]="{standalone: true}" [(ngModel)]="purchaseOrderData.terms">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-row">\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Deferred Receiver</label>\r\n                            <input type="checkbox" disabled [checked]="purchaseOrderData.deferredReceiver" class="form-control names ui-autocomplete-input">\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Resale</label>\r\n                            <input type="checkbox" disabled [checked]="purchaseOrderData.resale" class="form-control names ui-autocomplete-input">\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="form-group">\r\n                            <label>Memo</label>\r\n                            <textarea disabled class="form-control h100 scroll-x" [ngModelOptions]="{standalone: true}" [(ngModel)]="purchaseOrderData.notes"></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div> --\x3e\r\n            \r\n        </div>\r\n    </div>\r\n</div>\r\n</form>\r\n\r\n\r\n\x3c!-- <div class="col-md-12 col-sm-12 col-xs-12 po-ro-setup">\r\n    <div class="x_panel">\r\n        <div>\r\n            <div> --\x3e\r\n                <div id="adminsearchlocationajax">\r\n                    <div class="card new-card">\r\n                        <div class="card-body">\r\n                    <div class="table-responsive pas-table-cstm header-table-width poro-table-cstm parts-list-table-align parts-zindex" >\r\n                        <div class="tableFixHead">     \r\n\r\n                        <table *ngIf="purchaseOrderData != undefined && purchaseOrderData.purchaseOderPart != undefined" class="table table-bordered table-wrap">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th></th>\r\n                                    <th>Line Num</th>\r\n                                    <th>PN</th>\r\n                                    <th>PN Desc</th>\r\n                                    <th>Alt/Equiv</th>\r\n                                    <th>Item Type</th>\r\n                                    <th>Stock Type</th>\r\n                                    <th>Qty Ord </th>\r\n                                    <th>Qty Drafted</th>\r\n                                    <th>Qty Received</th>\r\n                                    <th>Qty Rejected</th>\r\n                                    <th>Back Ord </th>\r\n                                    <th>Status</th>\r\n                                    \x3c!-- <th [attr.colspan]="disableParentSpace ? \'0\' : \'3\'" class="text-center"></th> --\x3e\r\n                                    <th colspan="3" class="text-center" *ngIf="disableParentSpace"></th>\r\n                                    <th colspan="2">Management Structure</th>\r\n                                    <th>Is Serialized</th>\r\n                                    <th>Is TimeLife</th>\r\n                                    <th>Qty to Receive <span class="clr-red">*</span></th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <ng-container *ngFor="let part of purchaseOrderData.purchaseOderPart;let row_index=index">\r\n                                    \x3c!--this row is for the parent part--\x3e\r\n                                    <tr class="basic-info" *ngIf="part.isParent">\r\n                                        <td class="details-control eachcol" style="padding: 4px 6px;">\r\n                                            <section *ngIf="isSplitShipmentPart(part.itemMasterId)">\r\n                                                <i class="fa fa-{{ part.toggleIcon ? \'minus\':\'plus\'}} btn btn-success btn-cstm btn-xs margin0" (click)="showSplitShipmentParts(part)"></i>\r\n                                            </section>\r\n                                        </td>\r\n                                        <td class="text-right">{{row_index + 1}}</td>\r\n                                        <td>\r\n                                            {{part.itemMaster.partNumber}}\r\n                                        </td>\r\n                                        <td>{{part.itemMaster.partDescription}}</td>\r\n                                        <td>{{part.altEquiPartNumber}}</td>\r\n                                        <td>{{part.itemType}}</td>\r\n                                        <td>{{part.stockType}}</td>\r\n                                        <td class="text-right">\r\n                                            {{part?.quantityOrdered}}\r\n                                        </td>\r\n                                        <td class="text-right">\r\n                                            {{part.draftedStockLineCount}}\r\n                                        </td>\r\n                                        <td class="text-right">\r\n                                            {{part.stockLineCount}}\r\n                                        </td>\r\n\r\n\r\n                                        <td class="text-right">{{part.quantityRejected}}</td>\r\n                                        <td class="text-right">\r\n                                            {{part.quantityBackOrdered}}\r\n                                        </td>\r\n                                        <td>{{part.stockLineCount == 0 ? \'Pending\' : part.stockLineCount < part.quantityOrdered ? \'Fulfilling\' : \'Received\'}}</td>\r\n                                        <td colspan="3" *ngIf="disableParentSpace"></td>\r\n                                        <td *ngIf="part.managementStructureName != undefined && part.managementStructureName.length > 0" colspan="2">{{part?.managementStructureName[0]}}, {{part?.managementStructureName[1]}}, {{part?.managementStructureName[2]}}, {{part?.managementStructureName[3]}}</td>\r\n                                        <td>\r\n                                            <section *ngIf="part.itemMaster != null && part.stockLineCount < part.quantityOrdered">\r\n                                                <p-inputSwitch *ngIf="part.itemMaster.isSerialized == true" [(ngModel)]="part.itemMaster.isSerialized" matTooltipPosition="above" matTooltip="Active" tooltipPosition="bottom" onLabel="on" offLabel="off" (onChange)="togglePartSerialized(part)"></p-inputSwitch>\r\n                                                <p-inputSwitch *ngIf="part.itemMaster.isSerialized == false" [(ngModel)]="part.itemMaster.isSerialized" matTooltipPosition="above" matTooltip="In Active" tooltipPosition="bottom" onLabel="on" offLabel="off" (onChange)="togglePartSerialized(part)"></p-inputSwitch>\r\n                                                <p-inputSwitch *ngIf="part.itemMaster.isSerialized == null" [(ngModel)]="part.itemMaster.isSerialized" matTooltipPosition="above" matTooltip="In Active" tooltipPosition="bottom" onLabel="on" offLabel="off" (onChange)="togglePartSerialized(part)"></p-inputSwitch>\r\n                                            </section>\r\n                                        </td>\r\n                                        <td>\r\n                                            <section *ngIf="part.itemMaster != null && part.stockLineCount < part.quantityOrdered">\r\n                                                <p-inputSwitch [(ngModel)]="part.itemMaster.isTimeLife"\r\n                                                               matTooltipPosition="above" matTooltip="{{part.itemMaster.isTimeLife == true ? \'Active\' : \'In Active\'}}"\r\n                                                               tooltipPosition="bottom"\r\n                                                               onLabel="on"\r\n                                                               offLabel="off"\r\n                                                               (onChange)="togglePartTimeLife(part, $event)"></p-inputSwitch>\r\n                                                \x3c!--<p-inputSwitch [(ngModel)]="part.itemMaster.isTimeLife" matTooltipPosition="above" matTooltip="In Active" tooltipPosition="bottom" onLabel="on" offLabel="off" (onChange)="togglePartTimeLife(part)"></p-inputSwitch>\r\n            <p-inputSwitch [(ngModel)]="part.itemMaster.isTimeLife" matTooltipPosition="above" matTooltip="In Active" tooltipPosition="bottom" onLabel="on" offLabel="off" (onChange)="togglePartTimeLife(part)"></p-inputSwitch>--\x3e\r\n                                            </section>\r\n                                        </td>\r\n                                        <td style="padding:4px;">\r\n                                            <input type="text" *ngIf="!part.hasChildren && part.stockLineCount < part.quantityOrdered" [(ngModel)]="part.quantityActuallyReceived" (keyup)="addStockLine(part, false)" (ngModelChange)="btnactive($event)" pInputText pKeyFilter="pnum" class="form-control text-right" style="width: 50px;float: right;" [maxLength]="12" required/>\r\n\r\n                                            \x3c!--<a *ngIf="part.quantityBackOrdered" (click)="addDetailsClick(part)" style="color:red">Add Details</a>--\x3e\r\n                                        </td>\r\n                                        <td>\r\n                                            <button *ngIf="!part.hasChildren && part.stockLineCount < part.quantityOrdered" [disabled]="!part.quantityActuallyReceived" class="btn btn-primary btn-po-details" (click)="toggleStockLine($event, part)">{{ part.showStockLineGrid ? \'Close\' : \'Receive\'}}</button>\r\n                                         </td>\r\n                                        \x3c!--<td><a *ngIf="!part.hasChildren && part.stockLineCount < part.quantityOrdered" [disabled]="!quantityreceive" class="btn btn-primary btn-po-details" (click)="toggleStockLine($event, part)">{{ part.showStockLineGrid ? \'Close\' : \'Receive\'}}</a></td>--\x3e\r\n\r\n                                    </tr>\r\n\r\n                                    <tr class="child-header splitship-head child-header-back" [hidden]="purchaseOrderData.purchaseOderPart[row_index+1] != undefined && !purchaseOrderData.purchaseOderPart[row_index+1].visible" *ngIf="part.isParent && purchaseOrderData.purchaseOderPart[row_index+1] != undefined && (!purchaseOrderData.purchaseOderPart[row_index+1].isParent)">\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th colspan="5">PN</th>\r\n                                        <th>Qty Ord</th>\r\n                                        <th colspan="2">Qty Received</th>\r\n                                        <th>Qty Rejected</th>\r\n                                        <th>Back Ord</th>\r\n                                        <th>Status</th>\r\n                                        <th>User Type</th>\r\n                                        <th>User Name</th>\r\n                                        <th>Address</th>\r\n                                        <th colspan="2">Management Structure</th>\r\n                                        <th></th>\r\n                                        <th></th>\r\n                                        <th>Receive Quantity</th>\r\n                                        <th> </th>\r\n                                    </tr>\r\n\r\n                                    <tr class="child-data splitship-child child-data-back" [hidden]="!part.visible" *ngIf="!part.isParent">\r\n                                        <td>&nbsp;</td>\r\n                                        <td>&nbsp;</td>\r\n                                        <td colspan="5">{{part?.itemMaster?.partNumber}}</td>\r\n                                        <td>{{part?.quantityOrdered}}</td>\r\n                                        <td colspan="2">{{part?.stockLineCount}}</td>\r\n\r\n                                        <td>{{part?.quantityRejected}}</td>\r\n                                        <td>{{part.quantityOrdered - part.stockLineCount}}</td>\r\n                                        <td>\r\n                                            {{part.stockLineCount == 0 ? \'Pending\' : part.stockLineCount < part.quantityOrdered ? \'Fulfilling\' : \'Received\'}}\r\n                                        </td>\r\n                                        <td>{{part.poPartSplitUserTypeName}}</td>\r\n                                        <td>{{part?.poPartSplitUserName}}</td>\r\n                                        <td>{{part.addressText }}</td>\r\n                                        <td *ngIf="part.managementStructureName != undefined && part.managementStructureName.length > 0" colspan="2">{{part.managementStructureName[0]}}, {{part.managementStructureName[1]}}, {{part.managementStructureName[2]}}, {{part.managementStructureName[3]}}</td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td><input type="text" *ngIf="part.stockLineCount < part.quantityOrdered" [(ngModel)]="part.quantityActuallyReceived" (keyup)="addStockLine(part, false)" pInputText pKeyFilter="pnum" class="form-control" [maxLength]="12" /></td>\r\n                                        <td><button class="btn btn-primary btn-po-details" [disabled]="!part.quantityActuallyReceived" *ngIf="part.stockLineCount < part.quantityOrdered" (click)="toggleStockLine($event, part)">{{ part.showStockLineGrid ? \'Close\' : \'Receive\'}}</button></td>\r\n                                        \x3c!--<td><a (click)="addStockLine(part)" class="btn btn-primary btn-po-details">Add Details</a></td>--\x3e\r\n                                        \x3c!--<button type="button" (click)="showDialog()" pButton icon="fa-external-link-square" label="Show"></button>--\x3e\r\n                                    </tr>\r\n\r\n                                    <tr class="more-info" *ngIf="part.showStockLineGrid" [hidden]="!part.visible">\r\n                                        <td colspan="22">\r\n                                            <div class="form-row" style="margin-top: 10px;padding: 0px 7px;">\r\n                                                <div class="col-md-2">\r\n                                                    <div class="form-group">\r\n                                                        <label>PN</label>\r\n                                                        <input type="text" pInputText pKeyFilter="pnum" class="form-control" value="{{part.itemMaster?.partNumber}}" disabled />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="col-md-2">\r\n                                                    <div class="form-group">\r\n                                                        <label>PN Description</label>\r\n                                                        <input type="text" pInputText class="form-control" disabled [value]="part.itemMaster?.partDescription" />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="col-md-2">\r\n                                                    <div class="form-group">\r\n                                                        <label>Cond <span class="clr-red">*</span></label>\r\n                                                        <select class="form-control" required\r\n                                                                [(ngModel)]="part.conditionId"\r\n                                                                #selects="ngModel"\r\n                                                                [ngModelOptions]="{standalone: true}">\r\n                                                            <option value="0">Select</option>\r\n                                                            <option *ngFor="let condition of ConditionList" [value]="condition.Key">{{condition.Value}}</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="col-md-1">\r\n                                                    <div class="form-group">\r\n                                                        <label>Qty To Receive</label>\r\n                                                        <input type="text" maxlength="12" pInputText pKeyFilter="pnum" class="form-control text-right" disabled="disabled" [value]="part.quantityOrdered" />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="col-md-2">\r\n                                                    <div class="form-group">\r\n                                                        <label>Qty Actually Received</label>\r\n                                                        <input type="text" maxlength="12" *ngIf="part.stockLineCount < part.quantityOrdered" value="{{part.quantityActuallyReceived}}" pInputText pKeyFilter="pnum" class="form-control text-right" required />\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div class="col-md-1" style="left:0px">\r\n                                                    <div class="form-group">\r\n                                                        <label>Qty Rejected <span class="clr-red">*</span></label>\r\n                                                        <input type="text" maxlength="12" [(ngModel)]="part.quantityRejected" (focusin)="quantityRejectedFocusIn($event, part)" (focusout)="quantityRejectedFocusOut($event, part)" pInputText pKeyFilter="pnum" class="form-control text-right" required />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="col-md-2">\r\n                                                    <div class="form-group">\r\n                                                        <label>GL Account <span class="clr-red">*</span></label>\r\n                                                        <select class="form-control"\r\n                                                                [(ngModel)]="part.itemMaster.glAccountId"\r\n                                                                #selects="ngModel"\r\n                                                                [ngModelOptions]="{standalone: true}">\r\n                                                            <option value="0">Select</option>\r\n                                                            <option *ngFor="let glAccount of GLAccountList" [value]="glAccount.Key">{{glAccount.Value}}</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n                                            <div class="form-row" style="margin-top: 10px;padding: 0px 7px;">\r\n                                                \x3c!--<div class="col-md-2">\r\n                                                    <div class="form-group">\r\n                                                        <label>Qty Rejected <span class="clr-red">*</span></label>\r\n                                                        <input type="text" [(ngModel)]="part.quantityRejected" (focusin)="quantityRejectedFocusIn($event, part)" (focusout)="quantityRejectedFocusOut($event, part)" pInputText pKeyFilter="pnum" class="form-control" required />\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="col-md-2">\r\n                                                    <div class="form-group">\r\n                                                        <label>GL Account <span class="clr-red">*</span></label>\r\n                                                        <select class="form-control"\r\n                                                                [(ngModel)]="part.itemMaster.glAccountId"\r\n                                                                #selects="ngModel"\r\n                                                                [ngModelOptions]="{standalone: true}">\r\n                                                            <option value="0">Select</option>\r\n                                                            <option *ngFor="let glAccount of GLAccountList" [value]="glAccount.Key">{{glAccount.Value}}</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>--\x3e\r\n                                                \x3c!--<div class="col-md-2">\r\n                                                    <div class="form-group">\r\n                                                        <label matTooltip="Export Control Classification Number">ECCN</label>\r\n                                                        <input class="form-control" [(ngModel)]="part.itemMaster.exportECCN" disabled="{{part.eCCNAlreadyExist}}" type="text" pInputText pKeyFilter="pnum" [maxLength]="25">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="col-md-2">\r\n                                                    <div class="form-group">\r\n                                                        <label matTooltip="International Traffic in Arms Regulations Number">ITAR Num</label>\r\n                                                        <input class="form-control" [(ngModel)]="part.itemMaster.itarNumber" disabled="{{part.itarNumberExist}}" type="text" pInputText pKeyFilter="pnum" [maxLength]="25">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="col-md-2">\r\n                                                    <div class="form-group">\r\n                                                        <label matTooltip="National Stock Number">NSN</label>\r\n                                                        <input class="form-control" [(ngModel)]="part.itemMaster.nationalStockNumber" type="text" pInputText pKeyFilter="pnum" [maxLength]="25">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="col-md-2">\r\n                                                    <div class="form-group">\r\n                                                        <label matTooltip="Top Level Assembly">TLA</label>\r\n                                                        <input class="form-control" [(ngModel)]="part.itemMaster.TopLevelAssembly" type="text" pInputText [maxLength]="25">\r\n                                                    </div>\r\n                                                </div>--\x3e\r\n\r\n                                            </div>\r\n\r\n                                            \x3c!--<div class="form-row" style="margin-top: 10px;padding: 0px 7px;">\r\n                                                <div class="col-md-2">\r\n                                                    <div class="form-group">\r\n                                                        <label matTooltip="Next Higher Assembly">NHA</label>\r\n                                                        <input class="form-control" [(ngModel)]="part.itemMaster.nha" type="text" pInputText>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>--\x3e\r\n                                            <div class="stockGridpanel" *ngIf="part.stocklineListObj != undefined && part.stocklineListObj.length > 0">\r\n                                                <h3 class="add-details-heading">{{ part.itemMaster?.partNumber }} receiving Qty  {{ (part.currentSLIndex + 1) }} of {{ part.stocklineListObj.length }} </h3>\r\n                                                <div class="pull-right" style="margin-top: -37px;margin-right: 85px;" *ngIf="!part.isSameDetailsForAllParts"> \x3c!--*ngIf="part.itemMaster.isSerialized"--\x3e\r\n                                                    <i class="fa fa-chevron-left btn btn-primary btn-ad-icons" (click)="moveStockLineMainPage(\'stockline\', part.currentSLIndex - 1, part)"></i>\r\n                                                    <input [value]="part.currentSLIndex + 1" type="text" pInputText pKeyFilter="pnum" (keyup)="gotoStockLineMainPage($event, part)" (focusout)="paginatorFocusOut($event, part)" class="form-control" style="width: 50px;border-radius: 0 !important;" />\r\n                                                    <i class="fa fa-chevron-right btn btn-primary btn-ad-icons" (click)="moveStockLineMainPage(\'stockline\', part.currentSLIndex + 1, part)"></i>\r\n                                                    <p>Page {{part.currentSLIndex + 1}} of {{part.stocklineListObj.length}} Pages</p>\r\n                                                </div>\r\n                                                <section>\r\n                                                    <div class="form-row">\r\n                                                        <div class="col-md-3">\r\n                                                            <div class="form-group">\r\n                                                                <div class="checkbox-cstm" style="margin-top: 4px">\r\n                                                                    <label style="width: 200px;"> \x3c!--*ngIf="part.itemMaster.isSerialized"--\x3e\r\n                                                                        <input type="checkbox" class="form-control" (change)="toggleSameDetailsForAllParts(part)">\r\n                                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span> Same Details For All Parts\r\n                                                                    </label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div class="form-row">\r\n                                                        <div class="col-md-3">\r\n                                                            <div class="card" style="margin-top: 20px; margin-bottom: 10px;">\r\n                                                                <div class="card-header" style="padding: 10px 12px;">\r\n                                                                    <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure <span class="clr-red">*</span></h5>\r\n                                                                </div>\r\n                                                                <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                                                    <div class="form-group">\r\n                                                                        <select class="form-control"\r\n                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].companyId"\r\n                                                                        #selects="ngModel"\r\n                                                                        [ngModelOptions]="{standalone: true}"\r\n                                                                        (change)="selectedLegalEntity(part.stocklineListObj[part.currentSLIndex].companyId, part.stocklineListObj[part.currentSLIndex]); isCheckedSameDetailsForAllParts(part)">\r\n                                                                        <option value="0">Select Legal Entity</option>\r\n                                                                        <option *ngFor="let company of part.stocklineListObj[part.currentSLIndex].CompanyList" [value]="company.value">{{company.label}}</option>\r\n                                                                    </select>\r\n                                                                    </div>\r\n                                                                    <div class="form-group">\r\n                                                                        <select class="form-control"\r\n                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].businessUnitId"\r\n                                                                        #selects="ngModel"\r\n                                                                        [ngModelOptions]="{standalone: true}"\r\n                                                                        (change)="selectedBusinessUnit(part.stocklineListObj[part.currentSLIndex].businessUnitId, part.stocklineListObj[part.currentSLIndex])">\r\n                                                                        <option value="0">Select</option>\r\n                                                                        <option *ngFor="let businessUnit of part.stocklineListObj[part.currentSLIndex].BusinessUnitList" [value]="businessUnit.value">{{businessUnit.label}}</option>\r\n                                                                    </select>\r\n                                                                    </div>\r\n                                                                    <div class="form-group">\r\n                                                                        <select class="form-control"\r\n                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].divisionId"\r\n                                                                        #selects="ngModel"\r\n                                                                        [ngModelOptions]="{standalone: true}"\r\n                                                                        (change)="selectedDivision(part.stocklineListObj[part.currentSLIndex].divisionId, part.stocklineListObj[part.currentSLIndex])">\r\n                                                                        <option value="0">Select</option>\r\n                                                                        <option *ngFor="let division of part.stocklineListObj[part.currentSLIndex].DivisionList" [value]="division.value">{{division.label}}</option>\r\n                                                                    </select>\r\n                                                                    </div>\r\n                                                                    <div class="form-group">\r\n                                                                        <select class="form-control"\r\n                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].departmentId"\r\n                                                                        #selects="ngModel"\r\n                                                                        [ngModelOptions]="{standalone: true}"\r\n                                                                        (change)="selectedDepartment(part.stocklineListObj[part.currentSLIndex].departmentId, part.stocklineListObj[part.currentSLIndex])">\r\n                                                                        <option value="0">Select</option>\r\n                                                                        <option *ngFor="let department of part.stocklineListObj[part.currentSLIndex].DepartmentList" [value]="department.value">{{department.label}}</option>\r\n                                                                    </select>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            \x3c!-- <div class="form-group">\r\n                                                                <label>Company <span class="clr-red">*</span></label>\r\n                                                                <select class="form-control"\r\n                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].companyId"\r\n                                                                        #selects="ngModel"\r\n                                                                        [ngModelOptions]="{standalone: true}"\r\n                                                                        (change)="selectedLegalEntity(part.stocklineListObj[part.currentSLIndex].companyId, part.stocklineListObj[part.currentSLIndex]); isCheckedSameDetailsForAllParts(part)">\r\n                                                                    <option value="0">Select</option>\r\n                                                                    <option *ngFor="let company of part.stocklineListObj[part.currentSLIndex].CompanyList" [value]="company.value">{{company.label}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>BU</label>\r\n                                                                <select class="form-control"\r\n                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].businessUnitId"\r\n                                                                        #selects="ngModel"\r\n                                                                        [ngModelOptions]="{standalone: true}"\r\n                                                                        (change)="selectedBusinessUnit(part.stocklineListObj[part.currentSLIndex].businessUnitId, part.stocklineListObj[part.currentSLIndex])">\r\n                                                                    <option value="0">Select</option>\r\n                                                                    <option *ngFor="let businessUnit of part.stocklineListObj[part.currentSLIndex].BusinessUnitList" [value]="businessUnit.value">{{businessUnit.label}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Division</label>\r\n                                                                <select class="form-control"\r\n                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].divisionId"\r\n                                                                        #selects="ngModel"\r\n                                                                        [ngModelOptions]="{standalone: true}"\r\n                                                                        (change)="selectedDivision(part.stocklineListObj[part.currentSLIndex].divisionId, part.stocklineListObj[part.currentSLIndex])">\r\n                                                                    <option value="0">Select</option>\r\n                                                                    <option *ngFor="let division of part.stocklineListObj[part.currentSLIndex].DivisionList" [value]="division.value">{{division.label}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Dept</label>\r\n                                                                <select class="form-control"\r\n                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].departmentId"\r\n                                                                        #selects="ngModel"\r\n                                                                        [ngModelOptions]="{standalone: true}"\r\n                                                                        (change)="selectedDepartment(part.stocklineListObj[part.currentSLIndex].departmentId, part.stocklineListObj[part.currentSLIndex])">\r\n                                                                    <option value="0">Select</option>\r\n                                                                    <option *ngFor="let department of part.stocklineListObj[part.currentSLIndex].DepartmentList" [value]="department.value">{{department.label}}</option>\r\n                                                                </select>\r\n                                                            </div> --\x3e\r\n                                                            <div class="form-group">\r\n                                                                <label>Site <span class="clr-red">*</span></label>\r\n                                                                <select class="form-control"\r\n                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].siteId"\r\n                                                                        #selects="ngModel"\r\n                                                                        name="siteId{{part.currentSLIndex}}" required\r\n                                                                        (change)="getStockLineWareHouse(part.stocklineListObj[part.currentSLIndex]); isCheckedSameDetailsForAllParts(part)">\r\n                                                                    <option value="0">Select</option>\r\n                                                                    <option *ngFor="let site of part.stocklineListObj[part.currentSLIndex].SiteList" [value]="site.Key">{{site.Value}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Warehouse</label>\r\n                                                                <select class="form-control"\r\n                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].warehouseId"\r\n                                                                        #selects="ngModel"\r\n                                                                        name="warehouseId{{part.currentSLIndex}}"\r\n                                                                        (change)="getStockLineLocation(part.stocklineListObj[part.currentSLIndex])">\r\n                                                                    <option value="0">Select</option>\r\n                                                                    <option *ngFor="let warehouse of part.stocklineListObj[part.currentSLIndex].WareHouseList" [value]="warehouse.Key">{{warehouse.Value}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Location</label>\r\n                                                                <select class="form-control"\r\n                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].locationId"\r\n                                                                        #selects="ngModel"\r\n                                                                        name="locationId{{part.currentSLIndex}}"\r\n                                                                        (change)="getStockLineShelf(part.stocklineListObj[part.currentSLIndex])">\r\n                                                                    <option value="0">Select</option>\r\n                                                                    <option *ngFor="let loc of part.stocklineListObj[part.currentSLIndex].LocationList" [ngValue]="loc.Key">{{loc.Value}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Shelf</label>\r\n                                                                <select class="form-control"\r\n                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].shelfId"\r\n                                                                        #selects="ngModel"\r\n                                                                        name="shelfId{{part.currentSLIndex}}"\r\n                                                                        (change)="getStockLineBin(part.stocklineListObj[part.currentSLIndex])">\r\n                                                                    <option value="0">Select</option>\r\n                                                                    <option *ngFor="let shelf of part.stocklineListObj[part.currentSLIndex].ShelfList" [ngValue]="shelf.Key">{{shelf.Value}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Bin</label>\r\n                                                                <select class="form-control"\r\n                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].binId"\r\n                                                                        #selects="ngModel"\r\n                                                                        name="binId{{part.currentSLIndex}}">\r\n                                                                    <option value="0">Select</option>\r\n                                                                    <option *ngFor="let bin of part.stocklineListObj[part.currentSLIndex].BinList" [ngValue]="bin.Key">{{bin.Value}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class="col-md-3">                                                            \r\n                                                            <div class="form-group">\r\n                                                                <label>Obtain From </label>\r\n\r\n                                                                <select class="form-control"\r\n                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].obtainFromType"\r\n                                                                        #selects="ngModel"\r\n                                                                        [ngModelOptions]="{standalone: true}"\r\n                                                                        (change)="onObtainFromChange($event, part.stocklineListObj[part.currentSLIndex])">\r\n                                                                        <option value="0">Select</option>\r\n                                                                        <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">{{item.moduleName}}</option>\r\n                                                                        \x3c!-- <option value="1">Customer</option>\r\n                                                                        <option value="2">Vendor</option>\r\n                                                                        <option value="3">Company</option>\r\n                                                                        <option value="4">Other</option> --\x3e\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group" *ngIf="part.stocklineListObj[part.currentSLIndex].obtainFromType != undefined && part.stocklineListObj[part.currentSLIndex].obtainFromType > 0">\r\n                                                                <div class="form-row">\r\n                                                                    <div class="col-sm-12">\r\n                                                                        <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].obtainFromType == 1"\r\n                                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].obtainFromObject"\r\n                                                                                        [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                        (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].obtainFromType)"\r\n                                                                                        (onSelect)="onObtainSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                        [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                        field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n\r\n                                                                        </p-autoComplete>\r\n\r\n                                                                        <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].obtainFromType == 2"\r\n                                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].obtainFromObject"\r\n                                                                                        [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                        (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].obtainFromType)"\r\n                                                                                        (onSelect)="onObtainSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                        [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                        field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n\r\n                                                                        </p-autoComplete>\r\n                                                                        \r\n                                                                        <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].obtainFromType == 9"\r\n                                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].obtainFromObject"\r\n                                                                                        [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                        (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].obtainFromType)"\r\n                                                                                        (onSelect)="onObtainSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                        [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                        field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n                                                                        </p-autoComplete>\r\n\r\n                                                                        <input *ngIf="part.stocklineListObj[part.currentSLIndex].obtainFromType == 4"\r\n                                                                               class="form-control"\r\n                                                                               type="text"\r\n                                                                               [ngModelOptions]="{standalone: true}"\r\n                                                                               [(ngModel)]="part.stocklineListObj[part.currentSLIndex].obtainFrom"\r\n                                                                               pInputText>\r\n\r\n                                                                    </div>\r\n                                                                    \x3c!-- <div class="col-sm-1">\r\n                                                                        <div *ngIf="part.stocklineListObj[part.currentSLIndex].obtainFromType == 1" style="cursor:pointer; font-size:14px; margin:6px -8px;"><a class="fa fa-plus-circle fa-lg" (click)="addPageCustomer()"></a></div>\r\n                                                                    </div> --\x3e\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Owner </label>\r\n                                                                <select class="form-control" (change)="onOwnerChange($event, part.stocklineListObj[part.currentSLIndex])" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].ownerType">\r\n                                                                    <option value="0">Select</option>\r\n                                                                    <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">{{item.moduleName}}</option>\r\n                                                                        \x3c!-- <option value="1">Customer</option>\r\n                                                                        <option value="2">Vendor</option>\r\n                                                                        <option value="3">Company</option>\r\n                                                                        <option value="4">Other</option> --\x3e\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group" *ngIf="part.stocklineListObj[part.currentSLIndex].ownerType != undefined && part.stocklineListObj[part.currentSLIndex].ownerType > 0">\r\n                                                                <div class="form-row">\r\n                                                                    <div class="col-sm-12">\r\n                                                                        <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].ownerType == 1"\r\n                                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].ownerObject"\r\n                                                                                        [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                        (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].ownerType)"\r\n                                                                                        (onSelect)="onOwnerSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                        [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                        field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n                                                                        </p-autoComplete>\r\n\r\n                                                                        <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].ownerType == 2"\r\n                                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].ownerObject"\r\n                                                                                        [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                        (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].ownerType)"\r\n                                                                                        (onSelect)="onOwnerSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                        [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                        field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n                                                                        </p-autoComplete>\r\n\r\n                                                                        <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].ownerType == 9"\r\n                                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].ownerObject"\r\n                                                                                        [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                        (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].ownerType)"\r\n                                                                                        (onSelect)="onOwnerSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                        [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                        field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n                                                                        </p-autoComplete>\r\n\r\n                                                                        <input *ngIf="part.stocklineListObj[part.currentSLIndex].ownerType == 4"\r\n                                                                               class="form-control"\r\n                                                                               type="text"\r\n                                                                               [ngModelOptions]="{standalone: true}"\r\n                                                                               [(ngModel)]="part.stocklineListObj[part.currentSLIndex].owner"\r\n                                                                               pInputText>\r\n\r\n                                                                    </div>\r\n                                                                    \x3c!-- <div class="col-sm-1">\r\n                                                                        <div *ngIf="part.stocklineListObj[part.currentSLIndex].ownerType == 1" style="cursor:pointer; font-size:14px; margin:6px -8px;"><a class="fa fa-plus-circle fa-lg" (click)="addPageCustomer()"></a></div>\r\n                                                                    </div> --\x3e\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Traceable To</label>\r\n                                                                <select class="form-control" (change)="onTraceableToChange($event, part.stocklineListObj[part.currentSLIndex])" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].traceableToType">\r\n                                                                    <option value="0">Select</option>\r\n                                                                    <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">{{item.moduleName}}</option>\r\n                                                                        \x3c!-- <option value="1">Customer</option>\r\n                                                                        <option value="2">Vendor</option>\r\n                                                                        <option value="3">Company</option>\r\n                                                                        <option value="4">Other</option> --\x3e\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group" *ngIf="part.stocklineListObj[part.currentSLIndex].traceableToType != undefined && part.stocklineListObj[part.currentSLIndex].traceableToType > 0">\r\n                                                                <div class="form-row">\r\n                                                                    <div class="col-sm-12">\r\n                                                                        <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].traceableToType == 1"\r\n                                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].traceableToObject"\r\n                                                                                        [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                        (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].traceableToType)"\r\n                                                                                        (onSelect)="onTraceableToSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                        [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                        field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n                                                                        </p-autoComplete>\r\n\r\n                                                                        <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].traceableToType == 2"\r\n                                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].traceableToObject"\r\n                                                                                        [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                        (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].traceableToType)"\r\n                                                                                        (onSelect)="onTraceableToSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                        [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                        field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n                                                                        </p-autoComplete>\r\n\r\n                                                                        <p-autoComplete *ngIf="part.stocklineListObj[part.currentSLIndex].traceableToType == 9"\r\n                                                                                        [(ngModel)]="part.stocklineListObj[part.currentSLIndex].traceableToObject"\r\n                                                                                        [suggestions]="part.stocklineListObj[part.currentSLIndex].filteredRecords"\r\n                                                                                        (completeMethod)="onFilter($event, part.stocklineListObj[part.currentSLIndex], part.stocklineListObj[part.currentSLIndex].traceableToType)"\r\n                                                                                        (onSelect)="onTraceableToSelect(part.stocklineListObj[part.currentSLIndex])"\r\n                                                                                        [dropdown]="true" [size]="32" [minLength]="1"\r\n                                                                                        field="Value" class="autocomp-customer-cstm" [forceSelection]="true">\r\n                                                                        </p-autoComplete>\r\n\r\n                                                                        <input *ngIf="part.stocklineListObj[part.currentSLIndex].traceableToType == 4"\r\n                                                                               class="form-control"\r\n                                                                               type="text"\r\n                                                                               [ngModelOptions]="{standalone: true}"\r\n                                                                               [(ngModel)]="part.stocklineListObj[part.currentSLIndex].traceableTo"\r\n                                                                               pInputText>\r\n\r\n                                                                    </div>\r\n                                                                    \x3c!-- <div class="col-sm-1">\r\n                                                                        <div *ngIf="part.stocklineListObj[part.currentSLIndex].traceableToType == 1" style="cursor:pointer; font-size:14px; margin:6px -8px;"><a class="fa fa-plus-circle fa-lg" (click)="addPageCustomer()"></a></div>\r\n                                                                    </div> --\x3e\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <div class="form-group">\r\n                                                                <label>MFG <span class="clr-red"></span></label>\r\n                                                                <select class="form-control" disabled [(ngModel)]="part.stocklineListObj[part.currentSLIndex].manufacturerId">\r\n                                                                    <option [value]="0">Select</option>\r\n                                                                    <option [value]="manufacturer.Key" *ngFor="let manufacturer of ManufacturerList">{{manufacturer.Value}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>MFG Lot Num</label>\r\n                                                                <input class="form-control" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].manufacturerLotNumber" type="text" pInputText [maxLength]="200">\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>MFG Date</label>\r\n                                                                <p-calendar class="pas-clder" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].manufacturingDate" [showIcon]="true"></p-calendar>\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>MFG Trace</label>\r\n                                                                <input class="form-control" type="text" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].manufacturingTrace" pInputText value="Map pending" [maxLength]="200">\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class="col-md-3">\r\n                                                            <div class="form-group">\r\n                                                                <label>MFG Batch Num</label>\r\n                                                                <input class="form-control" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].manufacturingBatchNumber" type="text" pInputText [maxLength]="200">\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Expiration Date</label>\r\n                                                                <p-calendar class="pas-clder" [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].expirationDate"></p-calendar>\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Unit Cost <span class="clr-red">*</span></label>\r\n                                                                <input type="text" class="form-control text-right" pInputText pKeyFilter="pnum" (focusout)="calculateExtendedCost($event, part); isCheckedSameDetailsForAllParts(part)" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].purchaseOrderUnitCost" required>\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Extended Cost</label>\r\n                                                                <input class="form-control text-right" type="text" disabled pInputText pKeyFilter="pnum" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].purchaseOrderExtendedCost">\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Parts Cert Num</label>\r\n                                                                <input class="form-control" type="text" pInputText [(ngModel)]="part.stocklineListObj[part.currentSLIndex].partCertificationNumber" [maxLength]="200">\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Cert By</label>\r\n                                                                \x3c!-- <select [(ngModel)]="part.stocklineListObj[part.currentSLIndex].certifiedBy" name="certifiedBy">\r\n                                                                    <option value="0">-- Select --</option>\r\n                                                                    <option *ngFor="let item of allEmployeeList" [ngValue]="item.value">{{item.label}}</option>\r\n                                                                </select> --\x3e\r\n                                                                <input class="form-control" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].certifiedBy" type="text" pInputText [maxLength]="200">\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Certified Date</label>\r\n                                                                <p-calendar class="pas-clder" [maxDate]="part.stocklineListObj[part.currentSLIndex].currentDate" [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].certifiedDate"></p-calendar>\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Certified Due Date</label>\r\n                                                                <p-calendar class="pas-clder" [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].certifiedDueDate"></p-calendar>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class="col-md-3">\r\n                                                            <div class="form-group">\r\n                                                                <label>Tag Type</label>\r\n                                                                <p-multiSelect [options]="TagTypeList" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].tagType" name="tagType{{part.currentSLIndex}}">\r\n                                                                </p-multiSelect>\r\n                                                                \x3c!-- <select class="form-control" name="tagType{{part.currentSLIndex}}" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].tagType">\r\n                                                                    <option value="0">Select</option>\r\n                                                                    <option *ngFor="let tagType of TagTypeList" [value]="tagType.Key">{{tagType.Value}}</option>\r\n                                                                </select> --\x3e\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Tag Date</label>\r\n                                                                <p-calendar class="pas-clder" [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].tagDate"></p-calendar>\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Engine Serial Number</label> \x3c!--matTooltip="Engine Serial Number"--\x3e\r\n                                                                <input class="form-control" type="text" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].engineSerialNumber" pInputText [maxLength]="25">\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Aircraft Tail Num</label>\r\n                                                                <input class="form-control" type="text" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].aircraftTailNumber" pInputText [maxLength]="25">\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Ship Via <span class="clr-red">*</span></label>\r\n                                                                <select class="form-control" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].shippingViaId" (change)="isCheckedSameDetailsForAllParts(part)" required>\r\n                                                                    \x3c!-- <option value="0">Select</option> --\x3e\r\n                                                                    <option *ngFor="let shippingVia of ShippingViaList" [ngValue]="shippingVia.Key">{{shippingVia.Value}}</option>\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Shipping Ref#/AWB <span class="clr-red">*</span></label>\r\n                                                                <input class="form-control" type="text" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].shippingReference" (change)="isCheckedSameDetailsForAllParts(part)" pInputText [maxLength]="200" required>\r\n                                                            </div>\r\n                                                            <div class="form-group">\r\n                                                                <label>Shipping Account</label>\r\n                                                                <input class="form-control" type="text" [(ngModel)]="part.stocklineListObj[part.currentSLIndex].shippingAccount" pInputText [maxLength]="200">\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </section>\r\n                                                <br />\r\n                                                <section>\r\n                                                    <h4 class="add-details-heading" style="text-align: left;" *ngIf="part.itemMaster.isSerialized">Serialized</h4>\r\n                                                    <div class="pull-right" style="margin-top: 19px;margin-right: 85px;" *ngIf="part.itemMaster.isSerialized">\r\n                                                        <i class="fa fa-chevron-left btn btn-primary btn-ad-icons" (click)="moveStockLinePage(\'stockline\', part.currentSERIndex - 1, part)"></i>\r\n                                                        <input [value]="part.currentSERIndex + 1" type="text" pInputText pKeyFilter="pnum" (keyup)="gotoStockLinePage($event, part)" (focusout)="paginatorFocusOut($event, part)" class="form-control" style="width: 50px;border-radius: 0 !important;" />\r\n                                                        <i class="fa fa-chevron-right btn btn-primary btn-ad-icons" (click)="moveStockLinePage(\'stockline\', part.currentSERIndex + 1, part)"></i>\r\n                                                        <p>Page {{part.currentSERIndex + 1}} of {{part.stocklineListObj.length}} Pages</p>\r\n                                                    </div>\r\n                                                    <div class="form-row" *ngIf="part.itemMaster.isSerialized">\r\n                                                        <div class="col-md-3">\r\n                                                            <div class="form-group">\r\n                                                                <label>Serial Num</label>\r\n                                                                <input class="form-control" (keyup)="moveByKey($event, part)" disabled="{{part.stocklineListObj[part.currentSERIndex].serialNumberNotProvided}}" [(ngModel)]="part.stocklineListObj[part.currentSERIndex].serialNumber" type="text" pInputText [maxLength]="25">\r\n                                                                <div class="checkbox-cstm" style="margin-top: 4px">\r\n                                                                    <label style="width: 200px;">\r\n                                                                        <input type="checkbox" class="form-control" [(ngModel)]="part.stocklineListObj[part.currentSERIndex].serialNumberNotProvided" (click)="onSerialNumberNotProvided(part.stocklineListObj[part.currentSERIndex])">\r\n                                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span> Serial Number not provided\r\n                                                                    </label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </section>\r\n                                                <br />\r\n                                                <section *ngIf="part.itemMaster.isTimeLife">\r\n                                                    <h3 class="add-details-heading"> {{ part.itemMaster?.partNumber }} receiving Qty Time Life  {{ (part.currentTLIndex + 1) }} of {{ part.timeLifeList.length }}   </h3>\r\n                                                    <div class="pull-right" style="margin-top: -37px;margin-right: 85px;" *ngIf="part.itemMaster.isTimeLife">\r\n                                                        <i class="fa fa-chevron-left btn btn-primary btn-ad-icons" (click)="moveStockLinePage(\'timelife\', part.currentTLIndex - 1, part)"></i>\r\n                                                        <input [value]="part.currentTLIndex + 1" type="text" pInputText pKeyFilter="pnum" (keyup)="gotoStockLinePage($event, part)" (focusout)="paginatorFocusOut($event, part)" class="form-control" style="width: 50px;border-radius: 0 !important;" />\r\n                                                        <i class="fa fa-chevron-right btn btn-primary btn-ad-icons" (click)="moveStockLinePage(\'timelife\', part.currentTLIndex + 1, part)"></i>\r\n                                                        <p>Page {{part.currentTLIndex + 1}} of {{part.timeLifeList.length}} Pages</p>\r\n                                                    </div>\r\n\r\n                                                    <div class="form-row">\r\n                                                        <div class="col-md-3">\r\n                                                            <div class="form-group">\r\n                                                                <div class="checkbox-cstm" style="margin-top: 4px">\r\n                                                                    <label style="width: 200px;">\r\n                                                                        <input type="checkbox" [(ngModel)]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" class="form-control" (click)="onChangeTimeLife(part)">\r\n                                                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span> Time Life details not provided\r\n                                                                    </label>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="time-remaining">\r\n                                                        <table class="table table-bordered">\r\n                                                            <thead>\r\n                                                                <tr class="po-table-tr">\r\n                                                                    <th colspan="2" class="text-center">Cycles</th>\r\n                                                                    <th colspan="2" class="text-center">Time (in hours)</th>\r\n                                                                    <th colspan="2" class="text-center">Last (in hours)</th>\r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                <tr>\r\n                                                                    <td>Remaining</td>\r\n                                                                    <td>\r\n                                                                        \x3c!-- <p-calendar class="timeLife-time" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesRemaining" name="cyclesRemaining" [timeOnly]="true" [defaultDate]="defaultDate" showTime="true" hourFormat="24"></p-calendar> --\x3e\r\n                                                                        <input class="form-control"  placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesRemainingHrs">\r\n                                                                        \x3c!-- <span> : </span> --\x3e\r\n                                                                        \x3c!-- <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesRemainingMin" (change)="onChangeTimeLifeMin(\'cyclesRemainingMin\', part, part.currentTLIndex)"> --\x3e\r\n                                                                    </td>\r\n                                                                    <td>Remaining</td>\r\n                                                                    <td>\r\n                                                                        <input class="form-control"  placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeRemainingHrs">\r\n                                                                        \x3c!-- <span> : </span> --\x3e\r\n                                                                        \x3c!-- <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeRemainingMin" (change)="onChangeTimeLifeMin(\'timeRemainingMin\', part, part.currentTLIndex)"> --\x3e\r\n                                                                    </td>\r\n                                                                    <td>Since New</td>\r\n                                                                    <td>\r\n                                                                        <input class="form-control"  placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].lastSinceNewHrs">\r\n                                                                        \x3c!-- <span> : </span> --\x3e\r\n                                                                        \x3c!-- <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].lastSinceNewMin" (change)="onChangeTimeLifeMin(\'lastSinceNewMin\', part, part.currentTLIndex)"> --\x3e\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td>Since New</td>\r\n                                                                    <td>\r\n                                                                        <input class="form-control"  placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesSinceNewHrs">\r\n                                                                        \x3c!-- <span> : </span> --\x3e\r\n                                                                        \x3c!-- <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesSinceNewMin" (change)="onChangeTimeLifeMin(\'cyclesSinceNewMin\', part, part.currentTLIndex)"> --\x3e\r\n                                                                    </td>\r\n                                                                    <td>Since New</td>\r\n                                                                    <td>\r\n                                                                        <input class="form-control"  placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeSinceNewHrs">\r\n                                                                        \x3c!-- <span> : </span> --\x3e\r\n                                                                        \x3c!-- <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeSinceNewMin" (change)="onChangeTimeLifeMin(\'timeSinceNewMin\', part, part.currentTLIndex)"> --\x3e\r\n                                                                    </td>\r\n                                                                    <td>Since Ovh</td>\r\n                                                                    <td>\r\n                                                                        <input class="form-control"  placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].lastSinceOVHHrs">\r\n                                                                        \x3c!-- <span> : </span> --\x3e\r\n                                                                        \x3c!-- <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].lastSinceOVHMin" (change)="onChangeTimeLifeMin(\'lastSinceOVHMin\', part, part.currentTLIndex)"> --\x3e\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td>Since Ovh</td>\r\n                                                                    <td>\r\n                                                                        <input class="form-control"  placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesSinceOVHHrs">\r\n                                                                        \x3c!-- <span> : </span> --\x3e\r\n                                                                        \x3c!-- <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesSinceOVHMin" (change)="onChangeTimeLifeMin(\'cyclesSinceOVHMin\', part, part.currentTLIndex)"> --\x3e\r\n                                                                    </td>\r\n                                                                    <td>Since Ovh</td>\r\n                                                                    <td>\r\n                                                                        <input class="form-control"  placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeSinceOVHHrs">\r\n                                                                        \x3c!-- <span> : </span> --\x3e\r\n                                                                        \x3c!-- <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeSinceOVHMin" (change)="onChangeTimeLifeMin(\'timeSinceOVHMin\', part, part.currentTLIndex)"> --\x3e\r\n                                                                    </td>\r\n                                                                    <td>Since Insp</td>\r\n                                                                    <td>\r\n                                                                        <input class="form-control"  placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].lastSinceInspectionHrs">\r\n                                                                        \x3c!-- <span> : </span> --\x3e\r\n                                                                        \x3c!-- <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].lastSinceInspectionMin" (change)="onChangeTimeLifeMin(\'lastSinceInspectionMin\', part, part.currentTLIndex)"> --\x3e\r\n                                                                    </td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td>Since Insp</td>\r\n                                                                    <td>\r\n                                                                        <input class="form-control" placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesSinceInspectionHrs">\r\n                                                                        \x3c!-- <span> : </span> --\x3e\r\n                                                                        \x3c!-- <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesSinceInspectionMin" (change)="onChangeTimeLifeMin(\'cyclesSinceInspectionMin\', part, part.currentTLIndex)"> --\x3e\r\n                                                                    </td>\r\n                                                                    <td>Since Insp</td>\r\n                                                                    <td>\r\n                                                                        <input class="form-control"  placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeSinceInspectionHrs">\r\n                                                                        \x3c!-- <span> : </span> --\x3e\r\n                                                                        \x3c!-- <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeSinceInspectionMin" (change)="onChangeTimeLifeMin(\'timeSinceInspectionMin\', part, part.currentTLIndex)"> --\x3e\r\n                                                                    </td>\r\n                                                                    <td></td>\r\n                                                                    <td></td>\r\n                                                                </tr>\r\n                                                                <tr>\r\n                                                                    <td>Since Repair</td>\r\n                                                                    <td>\r\n                                                                        <input class="form-control" placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesSinceRepairHrs">\r\n                                                                        \x3c!-- <span> : </span> --\x3e\r\n                                                                        \x3c!-- <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].cyclesSinceRepairMin" (change)="onChangeTimeLifeMin(\'cyclesSinceRepairMin\', part, part.currentTLIndex)"> --\x3e\r\n                                                                    </td>\r\n                                                                    <td>Since Repair</td>\r\n                                                                    <td>\r\n                                                                        <input class="form-control" placeholder="HH" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeSinceRepairHrs">\r\n                                                                        \x3c!-- <span> : </span> --\x3e\r\n                                                                        \x3c!-- <input class="form-control" placeholder="MM" [disabled]="part.timeLifeList[part.currentTLIndex].detailsNotProvided" type="number" pInputText pKeyFilter="hex" [(ngModel)]="part.timeLifeList[part.currentTLIndex].timeSinceRepairMin" (change)="onChangeTimeLifeMin(\'timeSinceRepairMin\', part, part.currentTLIndex)"> --\x3e\r\n                                                                    </td>\r\n                                                                    <td></td>\r\n                                                                    <td></td>\r\n                                                                </tr>\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                </section>\r\n\r\n                                                <section *ngIf="part.assetId != null">\r\n                                                    <h3 class="add-details-heading" style="text-align: left;">Calibrated Equipment</h3>\r\n                                                    <div class="form-row">\r\n                                                        <div class="col-md-3">\r\n                                                            <div class="form-group">\r\n                                                                <label>Inspection Date</label>\r\n                                                                <p-calendar class="pas-clder" [showIcon]="true"></p-calendar>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class="col-md-3">\r\n                                                            <div class="form-group">\r\n                                                                <label>Frequency</label>\r\n                                                                <input class="form-control" type="text" pInputText pKeyFilter="pnum">\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </section>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </ng-container>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n        </div>\r\n        <div class="clear"></div>\r\n        <hr>\r\n        \x3c!--<a class="btn btn-primary pull-right" [disabled]="quantityreceivebtn" (click)="onSubmitToReceive()">Submit to Receive</a>--\x3e\r\n        <button class="btn btn-primary pull-right" [disabled]="!quantityreceivebtn" (click)="onSubmitToReceive()">Submit to Receive</button>\r\n        <div class="clear"></div>\r\n        <br>\r\n        <br>\r\n        <br>\r\n        <br>\r\n    \x3c!-- </div> --\x3e\r\n</div>\r\n\r\n<div class="modal fade" id="add-notes" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Edit Notes</h4>\r\n            </div>\r\n\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                    <th style="color: #fff;">Notes</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <p-editor [(ngModel)]="headerNotes" [style]="{\'height\':\'320px\'}"\r\n                                           name="headerNotes" required></p-editor>\r\n                                \x3c!-- <textarea [(ngModel)] = "material.description"></textarea> --\x3e\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class="editor-buttons">  \r\n                    <button type="button"  class="btn btn-primary editor-buttons-margin"\r\n                            data-dismiss="modal" (click)="onSaveNotes()">\r\n                        Save\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger editor-buttons-margin"\r\n                            data-dismiss="modal">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="cpo-memo" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title">Edit Memo</h4>\r\n            </div>\r\n\r\n            <div class="modal-body">\r\n                <table class="table table-bordered table-fixed workflow-table-material">\r\n                    <thead>\r\n                    <th style="color: #fff;">Memo</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <p-editor [(ngModel)]="headerMemo" [style]="{\'height\':\'320px\'}" name="headerMemo" required></p-editor>\r\n                                \x3c!-- <textarea [(ngModel)] = "material.description"></textarea> --\x3e\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <div class="editor-buttons">\r\n                    <button type="button" class="btn btn-primary editor-buttons-margin" \r\n                            data-dismiss="modal" (click)="onSaveMemo()">\r\n                        Save\r\n                    </button>\r\n                    <button type="button" class="btn btn-danger editor-buttons-margin"\r\n                            data-dismiss="modal">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            \x3c!-- <div class="modal-body">\r\n                <div class="form-group">\r\n                    <label>Memo</label>\r\n                    <textarea class="form-control" name="tempMemo" [(ngModel)]="tempMemo" value={{tempMemo}}></textarea>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="onSaveMemo()">Save</button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div> --\x3e\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},ZfrE:function(e,t,n){"use strict";n.r(t),t.default='label {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ntable {\n  background: #fff;\n}\n\n.rpo-bcrumb {\n  background-color: transparent;\n  color: #295d92;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.ro-status-radios {\n  margin-bottom: 15px;\n}\n\n.head-notes {\n  height: 28px !important;\n}\n\n.rpo-bcrumb li {\n  font-family: "Roboto";\n  font-weight: bold;\n}\n\ninput[type=text], input[type=number], select, textarea {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.btn-cstm {\n  padding: 3px 8px !important;\n}\n\n.btn-cstm:before {\n  font-size: 11px;\n}\n\n.po-table-tr th {\n  padding: 8px 4px;\n  text-align: center;\n}\n\n.btn-po-details {\n  width: 75px !important;\n  padding: 6px 2px 19px !important;\n  color: #fff;\n  border-radius: 4px !important;\n}\n\n.btn-po-details:hover {\n  color: #fff;\n  background-color: #286090 !important;\n  border-color: #204d74;\n}\n\n.add-details-heading {\n  font-size: 20px;\n  margin-top: 20px;\n  text-align: center;\n  color: #337ab7;\n}\n\n.btn-ad-icons {\n  padding: 6px !important;\n  width: 24px !important;\n  height: 24px !important;\n  margin: -3px 2px 0 1px !important;\n  border-radius: 0 !important;\n}\n\n.time-remaining input {\n  width: 40px;\n  margin: 5px;\n  float: left;\n}\n\n.time-remaining tr td input:first-child {\n  width: 50px;\n}\n\n.time-remaining span {\n  float: left;\n  margin-top: 10px;\n}\n\n.po-sub-tr {\n  background-color: #fafafa;\n}\n\n.po-sub-tr th {\n  padding: 8px 4px;\n}\n\n#adminsearchlocationajax .clr-red {\n  font-size: 17px;\n  line-height: 14px;\n}\n\n.stockGridpanel {\n  margin-left: 6px;\n  border: 1px solid #b0aeae;\n  padding: 0px 6px 20px;\n  margin-bottom: 5px;\n}\n\n.btn-po-details {\n  font-size: 10.5px !important;\n  font-weight: normal !important;\n}\n\n.more-info {\n  background-color: #e8e8e8;\n}\n\n.time-remaining table td {\n  padding: 4px;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}'},Zjjw:function(e,t,n){"use strict";n.r(t),t.default='<div [@fadeInOut] class="page-content">\r\n    <div class="right_col" role="main" style="min-height: 629px;">\r\n        <div class="x_panel" style="">\r\n            <div class="x_content add-customer-work">\r\n                <nav aria-label="breadcrumb">\r\n                    <nav aria-label="breadcrumb">\r\n                        <ol class="breadcrumb">\r\n                            <li class="breadcrumb-item" aria-current="page">Receiving</li>\r\n                            <li class="breadcrumb-item" aria-current="page">Customer Work</li>\r\n                            <li class="breadcrumb-item active" aria-current="page">Create Customer Work</li>\r\n                        </ol>\r\n                    </nav>\r\n                </nav>\r\n                <div class="pheading">\r\n                    <h4 class="page-heading clr-green">Create Customer Work</h4>\r\n                </div>\r\n                <div class="clear"></div>\r\n                <div class="tab-content form-bg"> \r\n                    <div class="tab-pane active" id="home">\r\n                <form  #addcustomerworkForm="ngForm"   class="form-horizontal">\r\n\r\n                    <div class="card">\r\n                        <div class="form-row col-row col-row1">\r\n                                <div class="col-sm-4 blocks3">\r\n                                    <div class="form-group col-sm-12">\r\n\r\n                                        <label class="control-label col-sm-4">Employee Name<strong class="clr-red">*</strong></label>\r\n                                        <div class="col-sm-7 add-icon-inline-right">\r\n                                            \x3c!--<div class="inner-addon right-addon inline-block">--\x3e\r\n\r\n                                                <p-autoComplete  class="pautocomp-cstm" [(ngModel)]="sourcereceving.firstName" name="firstName" (onSelect)="empnameId($event)" [suggestions]="firstCollection" (completeMethod)="filterfirstName($event)" [size]="30" required\r\n                                                                [minLength]="1" [dropdown]="true" >\r\n                                                    <ng-template let-firstName pTemplate="item">\r\n                                                        <div class="ui-helper-clearfix">{{firstName}}</div>\r\n                                                    </ng-template>\r\n                                                </p-autoComplete>\r\n                                                \x3c!--<a matTooltip="Create Employee" style="position: absolute;right: -20px;top: 0;"\r\n                                                   class=""\r\n                                                   [routerLink]="[\r\n      \'/employeesmodule/employeepages/app-employee-general-information\'\r\n    ]">\r\n                                                    <i class="fa fa-plus-circle fa-lg"></i>\r\n                                                </a>--\x3e\r\n                                            \x3c!--</div>--\x3e\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                        </div>\r\n                    </div>\r\n                                <div class="clear"></div>\r\n                                <hr class="hr-dark">\r\n                                <div class="card">\r\n                                    <div class="form-row col-row col-row1 padding-10">\r\n                                <div class="col-sm-4 blocks3">\r\n\r\n                                    <div class="form-group col-sm-12">\r\n                                        <label class="control-label col-sm-4">Customer Name<strong class="clr-red">*</strong></label>\r\n                                        <div class="col-sm-7 add-icon-inline-right">\r\n\r\n                                            <p-autoComplete class="pautocomp-cstm" [(ngModel)]="sourcereceving.name" (onSelect)="customerNameId($event)" [ngModelOptions]="{standalone: true}" [suggestions]="customerNames" (completeMethod)="filterNames($event)" [size]="30" required\r\n                                                            [minLength]="1" [dropdown]="true">\r\n                                                <ng-template let-name pTemplate="item">\r\n                                                    <div class="ui-helper-clearfix">{{name}}</div>\r\n                                                </ng-template>\r\n                                            </p-autoComplete>\r\n                                            \x3c!--<a matTooltip="Create Customer" style="position: absolute;right: -20px;top: 0;"\r\n                                     class=""\r\n                                     [routerLink]="[\r\n      \'/customersmodule/customerpages/app-customer-create\'\r\n    ]">\r\n                                      <i class="fa fa-plus-circle fa-lg"></i>\r\n                                  </a>--\x3e\r\n                                            \x3c!--<div *ngIf="disableSaveCusName" class="clr-red">Entry Already Exists</div>--\x3e\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-group col-sm-12">\r\n                                            <label class="control-label col-sm-4">Customer Code<strong class="clr-red">*</strong></label>\r\n                                            <div class="col-sm-7  add-icon-inline-right">\r\n                                                <p-autoComplete class="pautocomp-cstm" sstyle="font-size: 1px"\r\n                                                                name="customerCode"\r\n                                                                [(ngModel)]="sourcereceving.customerCode" [suggestions]="custcodes"\r\n                                                                field="customerCode"\r\n                                                                (completeMethod)="filterCodes($event)" [size]="30" #customerCode="ngModel"\r\n                                                                [minLength]="1" [dropdown]="true" required>\r\n\r\n                                                </p-autoComplete>\r\n                                                \x3c!--<a matTooltip="Create Customer" style="position: absolute;right: -20px;top: 0;"\r\n                                     class=""\r\n                                     [routerLink]="[\r\n      \'/customersmodule/customerpages/app-customer-create\'\r\n    ]">\r\n                                      <i class="fa fa-plus-circle fa-lg"></i>\r\n                                  </a>--\x3e\r\n                                                \x3c!--<input sstyle="font-size: 1px" class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.customerCode" readonly>--\x3e\r\n                                            </div>\r\n                                        </div>\r\n                                    <div class="form-group col-sm-12">\r\n                                        <label class="control-label col-sm-4">Receiving Num</label>\r\n                                        <div class="col-sm-7">\r\n                                            <input sstyle="font-size: 1px" class="form-control" type="text" name="receivingCustomerNumber" [(ngModel)]="sourcereceving.receivingCustomerNumber" readonly>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div class="form-group col-sm-12">\r\n                                        <label class="control-label col-sm-4">Ref<strong class="clr-red">*</strong></label>\r\n                                        <div class="col-sm-7">\r\n                                            <div class="inner-addon right-addon inline-block">\r\n                                                \x3c!--<i class="fa fa-search"></i>--\x3e\r\n                                                \x3c!--<input sstyle="font-size: 1px" type="text" class="form-control" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.customerReference">--\x3e\r\n                                                <p-autoComplete class="pautocomp-cstm" [(ngModel)]="sourcereceving.customerReference"  name="customerReference" [suggestions]="customerReferenceNames" (completeMethod)="filterReferenceNames($event)" [size]="30"\r\n                                                                [minLength]="1" [dropdown]="true" required>\r\n                                                    <ng-template let-name pTemplate="item">\r\n                                                        <div class="ui-helper-clearfix">{{name}}</div>\r\n                                                    </ng-template>\r\n                                                </p-autoComplete>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-group col-sm-12">\r\n                                        <label class="control-label col-sm-4">Contact<strong class="clr-red">*</strong></label>\r\n                                        <div class="col-sm-7">\r\n                                           \r\n                                            <select style="border-radius:5px;" sstyle="font-size: 1px" [(ngModel)]="sourcereceving.customerContactId"  name="customerContactId" (change)="customerContactChange(sourcereceving.customerContactId)" required>\r\n                                                    <option value="">--Select</option>\r\n                                                    <option *ngFor="let contact of customerContactList" [ngValue]="contact.contactId">{{contact.firstName}}</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-group col-sm-12">\r\n                                        <label class="control-label col-sm-4">Contact Phone<strong class="clr-red">*</strong></label>\r\n                                        <div class="col-sm-7">\r\n                                            <input sstyle="font-size: 1px" class="form-control" type="text" name="workPhone" [(ngModel)]="sourcereceving.workPhone" required (keypress)="patternMobilevalidationWithSpl($event)">\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-group col-sm-12 input-icon1">\r\n                                        <label class="control-label col-sm-4">PN<strong class="clr-red">*</strong> </label>\r\n                                        <div class="col-sm-7 add-icon-inline-right">\r\n                                            \x3c!--<div class="inner-addon right-addon inline-block">--\x3e\r\n\r\n                                                <p-autoComplete class="pautocomp-cstm" sstyle="font-size: 1px" name="partNumber" [(ngModel)]="sourcereceving.partNumber" (onSelect)="partnmId($event)"  [suggestions]="partCollection" (completeMethod)="filterpartItems($event)" [size]="30"\r\n                                                                [minLength]="1" [dropdown]="true" required>\r\n                                                    <ng-template let-partName pTemplate="part">\r\n                                                        <div class="ui-helper-clearfix">{{partName}}</div>\r\n                                                    </ng-template>\r\n                                                </p-autoComplete>\r\n                                                \x3c!--<a matTooltip="Create Item master" style="position: absolute;right: -20px;top: 0;"\r\n                                                   class=""\r\n                                                   [routerLink]="[\r\n      \'/itemmastersmodule/itemmasterpages/app-item-master-stock\'\r\n    ]">\r\n                                                    <i class="fa fa-plus-circle fa-lg"></i>\r\n                                                </a>--\x3e\r\n                                            \x3c!--</div>--\x3e\r\n                                            </div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">PN Description</label>\r\n                                                <div class="col-sm-7">\r\n                                                    <input class="form-control" [disabled]="true" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.partDescription">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Manufacturer</label>\r\n                                                <div class="col-sm-7">\r\n                                                    <input class="form-control" [disabled]="true" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.manufacturer">\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class="form-group col-sm-12">\r\n                                                <label class="control-label col-sm-4">Revised PN </label>\r\n                                                <div class="col-sm-7 add-icon-inline-right">\r\n                                                    \x3c!--<div class="inner-addon right-addon inline-block">--\x3e\r\n\r\n                                                        <p-autoComplete class="pautocomp-cstm" sstyle="font-size: 1px" [(ngModel)]="sourcereceving.changePartNumber" [ngModelOptions]="{standalone: true}" [suggestions]="partCollection" (completeMethod)="filterpartItems($event)" [size]="30"\r\n                                                                        [minLength]="1" [dropdown]="true">\r\n                                                            <ng-template let-partName1 pTemplate="part">\r\n                                                                <div class="ui-helper-clearfix">{{partName1}}</div>\r\n                                                            </ng-template>\r\n                                                        </p-autoComplete>\r\n                                                        \x3c!--<a matTooltip="Create Item master" style="position: absolute;right: -20px;top: 0;"\r\n                                                           class=""\r\n                                                           [routerLink]="[\r\n      \'/itemmastersmodule/itemmasterpages/app-item-master-stock\'\r\n    ]">\r\n                                                            <i class="fa fa-plus-circle fa-lg"></i>\r\n                                                        </a>--\x3e\r\n                                                    \x3c!--</div>--\x3e\r\n                                                    </div>\r\n                                                    </div>\r\n                                                    <div class="form-group col-sm-12">\r\n                                                        <label class="control-label col-sm-4">Serialized</label>\r\n                                                        <div class="col-sm-7">\r\n                                                            <input class="form-control serialized-checkbox" [disabled]="true" type="checkbox" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.isSerialized">\r\n                                                        </div>\r\n\r\n                                                        <div *ngIf="sourcereceving.isSerialized" class="serialized-block">\r\n                                                            \r\n                                                            <div class="form-group col-sm-12">\r\n                                                                <label class="control-label col-sm-4">Serial Number </label>\r\n                                                                <div class="col-sm-7">\r\n                                                                    <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.serialNumber">\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class="form-group col-sm-12">\r\n                                                                <label class="control-label col-sm-4">Cert By</label>\r\n                                                                <div class="col-sm-7">\r\n                                                                    <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.certifiedBy">\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class="form-group col-sm-12">\r\n                                                                <label class="control-label col-sm-4">Tag Date</label>\r\n                                                                <div class="col-sm-7">\r\n                                                                    <p-calendar [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.tagDate"></p-calendar>\r\n                                                                    \x3c!--<input class="form-control datepicker hasDatepicker" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.tagDate">--\x3e\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class="form-group col-sm-12">\r\n                                                                <label class="control-label col-sm-4">Tag Type</label>\r\n                                                                <div class="col-sm-7">\r\n                                                                    <input type="text" class="form-control numberids ui-autocomplete-input" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.tagType">\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class="form-group col-sm-12">\r\n                                                                <label class="control-label col-sm-4">Parts Cert Num</label>\r\n                                                                <div class="col-sm-7">\r\n                                                                    <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.partCertificationNumber">\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class="clear"></div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="col-sm-4 blocks3">\r\n\r\n\r\n                                                    <div class="clear"></div>\r\n                                                    <div class="form-group col-sm-12">\r\n                                                        <label class="control-label col-sm-4" *ngIf="showNormalQuantity||showRestrictQuantity||showFreeQuantity">QTY</label>\r\n                                                        <div class="col-sm-7">\r\n                                                            <input class="form-control qty-input" *ngIf="showNormalQuantity" type="number" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.quantity">\r\n                                                            <input class="form-control qty-input" *ngIf="showRestrictQuantity" type="number" min="0" max="1" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.quantity">\r\n                                                            <input class="form-control qty-input" *ngIf="showFreeQuantity" type="number" min="0" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.quantity">\r\n\r\n                                                            \x3c!--<input class="form-control" type="number" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.quantity">--\x3e\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="form-group col-sm-12">\r\n                                                        <label class="control-label col-sm-4">Condition<strong class="clr-red">*</strong></label>\r\n                                                        <div class="col-sm-7">\r\n                                                            <select style="border-radius:5px;" class="form-control" name="conditionId" [(ngModel)]="sourcereceving.conditionId" required>\r\n                                                                <option *ngFor="let condition of allConditionInfo" [ngValue]="condition.conditionId">{{condition.description}}</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="form-group col-sm-12">\r\n                                                        <label class="control-label col-sm-4">Site <strong class="clr-red">*</strong></label>\r\n                                                        <div class="col-sm-7">\r\n\r\n                                                            <select required style="border-radius:5px;" [(ngModel)]="sourcereceving.siteId" name="siteId"  (change)="siteValueChange($event.target.value)">\r\n                                                                <option>--Select</option>\r\n                                                                <option *ngFor="let site of allSites" [ngValue]="site.siteId">{{site.name}}</option>\x3c!--(onchange)="siteValueChange(site.siteName)"--\x3e\r\n                                                            </select>\r\n                                                            <a matTooltip="Create Site" style="position: absolute;right: -20px;top: 0;"\r\n                                                               class=""\r\n                                                               [routerLink]="[\r\n                                                 \'/singlepages/singlepages/app-site\'\r\n                                                         ]">\r\n                                                                <i class="fa fa-plus-circle fa-lg"></i>\r\n                                                            </a>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n\r\n                                                    <div class="form-group col-sm-12">\r\n                                                        <label class="control-label col-sm-4">Warehouse <strong class="clr-red">*</strong></label>\r\n                                                        <div class="col-sm-7">\r\n                                                            <select  style="border-radius:5px;" [(ngModel)]="sourcereceving.warehouseId" name="warehouseId" (change)="wareHouseValueChange(sourcereceving.warehouseId)" required>\r\n                                                                <option value="">--Select</option>\r\n                                                                <option *ngFor="let site of allWareHouses" [ngValue]="site.warehouseId">{{site.warehouseName}}</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="form-group col-sm-12">\r\n                                                        <label class="control-label col-sm-4">Location</label>\r\n                                                        <div class="col-sm-7">\r\n                                                            <select  style="border-radius:5px;" [(ngModel)]="sourcereceving.locationId" [ngModelOptions]="{standalone: true}" (change)="locationValueChange(sourcereceving.locationId)">\r\n                                                                <option>--Select</option>\r\n                                                                <option *ngFor="let site of allLocations" [ngValue]="site.locationId">{{site.name}}</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="form-group col-sm-12">\r\n                                                        <label class="control-label col-sm-4">Shelf</label>\r\n                                                        <div class="col-sm-7">\r\n                                                            <select style="border-radius:5px;" [(ngModel)]="sourcereceving.shelfId" [ngModelOptions]="{standalone: true}" (change)="shelfValueChange(sourcereceving.shelfId)">\r\n                                                                <option>--Select</option>\r\n                                                                <option *ngFor="let site of allShelfs" [ngValue]="site.shelfId">{{site.name}}</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="form-group col-sm-12">\r\n                                                        <label class="control-label col-sm-4">Bin</label>\r\n                                                        <div class="col-sm-7">\r\n                                                            <select style="border-radius:5px;" [(ngModel)]="sourcereceving.binId" [ngModelOptions]="{standalone: true}" (change)="binValueSelect(sourcereceving.binId)">\r\n                                                                <option>--Select</option>\r\n                                                                <option *ngFor="let site of allBins" [ngValue]="site.binId">{{site.name}}</option>\r\n                                                            </select>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class="form-group col-sm-12">\r\n                                                        <label class="control-label col-sm-4">Owner</label>\r\n\r\n                                                        <div class="col-sm-7 add-icon-inline-right">\r\n                                                            \x3c!--<div class="inner-addon right-addon inline-block add-icon-inline-right">--\x3e\r\n\r\n                                                                <p-autoComplete class="pautocomp-cstm" sstyle="font-size: 1px" [(ngModel)]="sourcereceving.owner" [ngModelOptions]="{standalone: true}" [suggestions]="customerNames" (completeMethod)="filterNames($event)" [size]="30"\r\n                                                                                [minLength]="1" [dropdown]="true">\r\n                                                                    <ng-template let-name pTemplate="item">\r\n                                                                        <div class="ui-helper-clearfix">{{name}}</div>\r\n                                                                    </ng-template>\r\n                                                                </p-autoComplete>\r\n                                                                \x3c!--<a matTooltip="Create Customer" style="position: absolute;right: -20px;top: 0;"\r\n                                                                   class=""\r\n                                                                   [routerLink]="[\r\n      \'/customersmodule/customerpages/app-customer-create\'\r\n    ]">\r\n                                                                    <i class="fa fa-plus-circle fa-lg"></i>\r\n                                                                </a>--\x3e\r\n                                                            \x3c!--</div>--\x3e\r\n                                                            </div>\r\n                                                        </div>\r\n                                                            <div class="form-group col-sm-12">\r\n                                                                <label class="control-label col-sm-4">Customer Stock</label>\r\n                                                                <div class="col-sm-7">\r\n                                                                    <input class="" type="checkbox" id="" checked="checked" [disabled]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.isCustomerStock">\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div class="form-group col-sm-12">\r\n                                                                <label class="control-label col-sm-4" for="obtainFrom">Tracable to</label>\r\n                                                                <div class="col-sm-7">\r\n                                                                    <select style="border-radius:5px;" id="obtainFrom" [(ngModel)]="sourcereceving.traceableToType" [ngModelOptions]="{standalone: true}" class="form-control">\r\n\r\n                                                                        <option [value]="1">Customer</option>\r\n                                                                        <option [value]="2">Other </option>\r\n                                                                        <option [value]="3">Vendor</option>\r\n                                                                        <option [value]="4">Company</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                                <div class="form-group col-sm-12">\r\n                                                                    <label class="control-label col-sm-4"></label>\r\n                                                                    <div class="inner-addon col-sm-7" *ngIf="sourcereceving.traceableToType == 1">\r\n                                                                        <select style="border-radius:5px;" [(ngModel)]="sourcereceving.traceableToCustomerId" [ngModelOptions]="{standalone: true}">\r\n                                                                            <option *ngFor="let customer of allCustomer" [ngValue]="customer.customerId">{{customer.name}}</option>\r\n                                                                        </select>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class="form-group col-sm-12">\r\n                                                                    <label class="control-label col-sm-4"></label>\r\n                                                                    <div class="inner-addon col-sm-7" *ngIf="sourcereceving.traceableToType == 2">\r\n                                                                        <input style="border-radius:5px;" class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.traceableToOther">\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class="form-group col-sm-12">\r\n                                                                    <label class="control-label col-sm-4"></label>\r\n                                                                    <div class="inner-addon col-sm-7" *ngIf="sourcereceving.traceableToType == 3">\r\n                                                                        <select style="border-radius:5px;" [(ngModel)]="sourcereceving.traceableToVendorId" [ngModelOptions]="{standalone: true}">\r\n                                                                            <option *ngFor="let vendor of allVendorList" [ngValue]="vendor.vendorId">{{vendor.vendorName}}</option>\x3c!--(onchange)="siteValueChange(site.siteName)"--\x3e\r\n                                                                        </select>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class="form-group col-sm-12">\r\n                                                                    <label class="control-label col-sm-4"></label>\r\n                                                                    <div class="inner-addon col-sm-7" *ngIf="sourcereceving.traceableToType == 4">\r\n                                                                        <select style="border-radius:5px;" [(ngModel)]="sourcereceving.traceableToCompanyId" [ngModelOptions]="{standalone: true}">\r\n                                                                            <option *ngFor="let ataName of maincompanylist" [ngValue]="ataName.managementStructureId">{{ataName.code}}</option>\r\n                                                                        </select>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class="col-sm-4 blocks3">\r\n\r\n\r\n\r\n                                                            <div class="form-group col-sm-12">\r\n                                                                <label class="control-label col-sm-4">Obtain From</label>\r\n                                                                <div class="col-sm-7">\r\n                                                                    <select style="border-radius:5px;" [(ngModel)]="sourcereceving.obtainFromType" [ngModelOptions]="{standalone: true}" class="form-control">\r\n                                                                        <option>--Select--</option>\r\n                                                                        <option value="1">Customer</option>\r\n                                                                        <option value="2">Other </option>\r\n                                                                        <option value="3">Vendor</option>\r\n                                                                        <option value="4">Company</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                                <div class="form-group col-sm-12">\r\n                                                                    <label class="control-label col-sm-4"></label>\r\n                                                                    <div class="inner-addon col-sm-7" *ngIf="sourcereceving.obtainFromType == 1">\r\n\r\n                                                                        <select style="border-radius:5px;" [(ngModel)]="sourcereceving.obtainFromCustomerId" [ngModelOptions]="{standalone: true}">\r\n                                                                            <option *ngFor="let customer of allCustomer" [ngValue]="customer.name">{{customer.name}}</option>\r\n                                                                        </select>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class="form-group col-sm-12">\r\n                                                                    <label class="control-label col-sm-4"></label>\r\n\r\n                                                                    <div class="col-sm-7" *ngIf="sourcereceving.obtainFromType == 2">\r\n                                                                        <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.obtainFromOther">\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class="form-group col-sm-12">\r\n                                                                    <label class="control-label col-sm-4"></label>\r\n\r\n                                                                    <div class="inner-addon col-sm-7" *ngIf="sourcereceving.obtainFromType == 3">\r\n                                                                        <select style="border-radius:5px;" [(ngModel)]="sourcereceving.obtainFromVendorId" [ngModelOptions]="{standalone: true}">\r\n                                                                            <option *ngFor="let vendor of allVendorList" [ngValue]="vendor.vendorName">{{vendor.vendorName}}</option>\r\n                                                                        </select>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class="form-group col-sm-12">\r\n                                                                    <label class="control-label col-sm-4"></label>\r\n\r\n                                                                    <div class="inner-addon col-sm-7 " *ngIf="sourcereceving.obtainFromType == 4">\r\n                                                                        <select style="border-radius:5px;" [(ngModel)]="sourcereceving.obtainFromCompanyId" [ngModelOptions]="{standalone: true}">\r\n                                                                            <option *ngFor="let ataName of maincompanylist" [ngValue]="ataName.managementStructureId">{{ataName.code}}</option>\r\n                                                                        </select>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                </div>\r\n                                                                <div class="form-group col-sm-12">\r\n                                                                    <label class="control-label col-sm-4">MFG Date</label>\r\n                                                                    <div class="col-sm-7">\r\n                                                                        <input [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.isMFGDate" type="checkbox">\r\n                                                                        <div *ngIf="sourcereceving.isMFGDate">\r\n                                                                            <p-calendar [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.manufacturingDate"></p-calendar>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class="form-group col-sm-12">\r\n                                                                    <label class="control-label col-sm-4">MFG Trace </label>\r\n                                                                    <div class="col-sm-7">\r\n                                                                        <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.manufacturingTrace">\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class="form-group col-sm-12">\r\n                                                                    <label class="control-label col-sm-4">MFG Lot </label>\r\n                                                                    <div class="col-sm-7">\r\n                                                                        <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.manufacturingLotNumber">\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class="form-group col-sm-12">\r\n                                                                    <label class="control-label col-sm-4">Exp Date</label>\r\n                                                                    <div class="col-sm-7">\r\n                                                                        <input class="" type="checkbox" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.isExpirationDate" id="expdate-input">\r\n\r\n                                                                        <div *ngIf="sourcereceving.isExpirationDate">\r\n                                                                            <p-calendar [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.expirationDate"></p-calendar>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div class="form-group col-sm-12">\r\n                                                                    <label class="control-label col-sm-4">Time Life</label>\r\n                                                                    <div class="col-sm-7">\r\n                                                                        <input class="" type="checkbox" [disabled]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.isTimeLife">\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div *ngIf="this.sourcereceving.isTimeLife" class="timelife-block">\r\n\r\n                                                                    <div class="form-group col-sm-12">\r\n                                                                        <label class="control-label col-sm-4">Date</label>\r\n                                                                        <div class="col-sm-7">\r\n                                                                            <p-calendar [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.timeLifeDate"></p-calendar>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class="form-group col-sm-12">\r\n                                                                        <label class="control-label col-sm-4">Origin</label>\r\n                                                                        <div class="col-sm-7">\r\n                                                                            <input class="" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.timeLifeOrigin ">\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                    <div class="clear"></div>\r\n                                                                </div>\r\n\r\n                                                                <div class="form-group col-sm-12">\r\n                                                                    <div class="col-sm-3">\r\n                                                                    </div>\r\n                                                                    <div class="col-sm-8">\r\n                                                                        <div class="card" style="margin-top: 20px;">\r\n                                                                            <div class="card-header" style="padding: 10px 12px;">\r\n                                                                                <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure <span class="clr-red">*</span></h5>\r\n                                                                            </div>\r\n                                                                            <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                                                                <div class="form-group">\r\n                                                                                    <select style="border-radius:5px;" class="form-control" name="primaryCompany" [(ngModel)]="sourcereceving.companyId"\r\n                                                                                            (change)="getBUList(sourcereceving.companyId)" #mCompanyName required>\r\n                                                                                        <option value="">Select Company</option>\r\n                                                                                        <option *ngFor="let name of maincompanylist" [ngValue]="name.managementStructureId">{{name.code}}</option>\r\n                                                                                    </select>\r\n                                                                                    <div *ngIf="mCompanyName.invalid && (mCompanyName.dirty || mCompanyName.touched)" class="alert alert-danger alert-danger-cstm">\r\n                                                                                        <div *ngIf="mCompanyName.errors.required">\r\n                                                                                            <small> Company Name is required </small>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n\r\n                                                                                </div>\r\n                                                                                <div class="form-group">\r\n                                                                                    <select style="border-radius:5px;" [(ngModel)]="sourcereceving.buId" name="primaryBU" (change)="getDivisionlist(sourcereceving.buId)" class="form-control">\r\n                                                                                        <option value="0">Select BU</option>\r\n                                                                                        <option *ngFor="let name of bulist" [ngValue]="name.managementStructureId">{{name.code}}</option>\r\n                                                                                    </select>\r\n                                                                                </div>\r\n                                                                                <div class="form-group">\r\n                                                                                    <select style="border-radius:5px;" class="form-control" [(ngModel)]="sourcereceving.divisionId" name="primaryDivision" (change)="getDepartmentlist(sourcereceving.divisionId)">\r\n                                                                                        <option value="0">Select Division</option>\r\n                                                                                        <option *ngFor="let name of divisionlist" [ngValue]="name.managementStructureId">{{name.code}}</option>\r\n                                                                                    </select>\r\n                                                                                </div>\r\n                                                                                <div class="form-group">\r\n                                                                                    <select style="border-radius:5px;" class="form-control" [(ngModel)]="sourcereceving.departmentId" name="primaryDept" (change)="getDepartmentId(sourcereceving.departmentId)">\r\n                                                                                        <option value="0">Select Dept</option>\r\n                                                                                        <option *ngFor="let name of departmentList" [ngValue]="name.managementStructureId">{{name.code}}</option>\r\n                                                                                    </select>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n                                                    </div>\r\n\r\n                             \r\n                                        <div class="clear"></div>\r\n                                        <div class="table-responsive form-group col-sm-12" *ngIf="this.sourcereceving.isTimeLife">\r\n                                            <table class="table table-bordered table-striped">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th colspan="15" class="text-center"><strong>TIME LIFE ADJUSTMENTS</strong></th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                                <th></th>\r\n                                                                <th  class="text-center">Cycles</th>\r\n                                                                <th  class="text-center">Time</th>\r\n                                                                <th  class="text-center">Last</th>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Remaining</td>\r\n                                                        <td class="clr2 text-center"><input type="number" class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.cyclesRemaining"></td>\r\n                                                        <td class="clr2 text-center"><input type="number" class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.timeRemaining"></td>\r\n                                                        <td></td>\r\n                                                       \r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Since New</td>\r\n                                                        <td class="clr2 text-center"><input type="number" class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.cyclesSinceNew"></td>\r\n                                                        <td class="clr2 text-center"><input type="number" class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.timeSinceNew"></td>\r\n                                                        <td class="clr2 text-center"><input type="number" class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.lastSinceNew"></td>\r\n                                                        \r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Since Ovh</td>\r\n                                                        <td class="clr2 text-center"><input type="number" class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.cyclesSinceOVH"></td>\r\n                                                        <td class="clr2 text-center"><input type="number" class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.timeSinceOVH"></td>\r\n                                                        <td class="clr2 text-center"><input type="number" class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.lastSinceOVH"></td>\r\n                                                        \r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Since Insp</td>\r\n                                                        <td class="clr2 text-center"><input type="number" class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.cyclesSinceInspection"></td>\r\n                                                        <td class="clr2 text-center"><input type="number" class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.timeSinceInspection"></td>\r\n                                                         <td class="clr2 text-center"><input type="number" class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.lastSinceInspection"></td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Since Repair</td>\r\n                                                        <td class="clr2 text-center"><input type="number" class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.cyclesSinceRepair"></td>                 \r\n                                                        <td class="clr2 text-center"><input type="number" class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.timeSinceRepair"></td>\r\n                                                         <td></td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                       \r\n\r\n\r\n\r\n                                    \x3c!--<div class="form-group col-sm-12">\r\n                                        <label class="control-label col-sm-4">Manufacturer</label>\r\n                                        <div class="inner-addon right-addon autosuggesions-add inline-block">\r\n                                            <i class="fa fa-search"></i>\r\n                                            <input type="text" class="form-control names ui-autocomplete-input" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourcereceving.manufacturer">\r\n                                        </div>\r\n                                        <a routerLink="/app-manufacturer" target="_blank" class="add-icon"><i class="fa fa-plus"></i></a>\r\n                                    </div>--\x3e\r\n\r\n\r\n\r\n                                \r\n                                </div>\r\n                                <div class="clear"></div>\r\n                               \r\n                                <div class="col-sm-12 mt8">\r\n                                    <div class="col-sm-6">\r\n                                    </div>\r\n                                    <div class="pull-right">\r\n                                        <button class="btn btn-primary submit-btn" type="submit" (click)="editItemAndCloseModel(content)" [disabled]="!addcustomerworkForm.valid">Save</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                               \r\n                            \r\n\r\n                   \r\n                </form>\r\n            </div>\r\n            </div>\r\n              </div>\r\n\r\n\r\n        </div>\r\n    \r\n\r\n</div>\r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title" *ngIf="isEditMode">Edit Employee Expertise</h4>\r\n        <h4 class="modal-title" *ngIf="!isEditMode">Add Employee Expertise</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <form #userForm="ngForm" class="form-horizontal" (ngSubmit)="editItemExpertiesCloseModel()">\r\n            <div class="form-group">\r\n                <label for="name" class="control-label">Employee Expertise<span class="clr-red">*</span></label>\r\n\r\n                <p-autoComplete [(ngModel)]="employeeName" [ngModelOptions]="{standalone: true}" [suggestions]="localCollection" (completeMethod)="filterEmployeeNames($event)" [size]="30"\r\n                                [minLength]="1" [dropdown]="true">\r\n                    <ng-template let-employeeName pTemplate="item">\r\n                        <div class="ui-helper-clearfix">{{employeeName}}</div>\r\n                    </ng-template>\r\n                </p-autoComplete>\r\n\r\n                <div class="clear"></div>\r\n            </div>\r\n\r\n            <div class="form-group">\r\n                <div class="col-sm-6">\r\n                    <label class="form-check-label" for="isActive">\r\n                        <input type="checkbox" name="isActive" #isActive="ngModel" class="form-check-input" checked id="isActive" [(ngModel)]="sourcereceving.isActive"> Active\r\n                    </label>\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n\r\n\r\n            <div class="modal-footer">\r\n\r\n                <button class="btn btn-success" [disabled]="!userForm.valid">Submit</button>\r\n                <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n</ng-template>\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Customer Work is saved. Would you like to create Work Order ?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    \r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="CreateWorkOrderModel()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="GotoList()">No</button>\r\n    </div>\r\n</ng-template>'},bcpz:function(e,t,n){"use strict";n.r(t),t.default=".x_panel {\n  border: none;\n}\n\nlabel {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.child-data td, .parent-data td {\n  background: #fff !important;\n  padding: 3px;\n}\n\n.child-header {\n  background: #fafafa !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.head-notes {\n  height: 28px !important;\n}\n\n.pas-table-cstm select, .pas-table-cstm input {\n  min-width: 90px;\n}\n\n.parent-data {\n  background: #fff !important;\n}\n\n.pas-table-cstm tr th {\n  min-width: 110px;\n  text-align: center;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}"},bcrJ:function(e,t,n){"use strict";n.r(t),t.default='<p-breadcrumb [model]="breadcrumbs"></p-breadcrumb>\r\n<div class="card new-card">\r\n    <div class="card-header bg-primary new-card-header">\r\n        <div class="row">\r\n            <div class="col">\r\n                <h4 class="new-card-heading" style="font-size:19px;"> {{isEditMode? \'Edit\' : \'\'}} Receive Customer Work</h4>\r\n            </div>\r\n            <div>\r\n                <button type="button" class="btn-sm new-btn-primary"\r\n                    [routerLink]="[\'/receivingmodule/receivingpages/app-customer-works-list\']">\r\n                    Receive Customer List\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="card-body new-card-body">\r\n        <form #customerWorkForm="ngForm">\r\n            <div class="form-row">\r\n                <div class="col-md-7">\r\n                    <div class="form-row">\r\n                        <div class="col-md-3">\r\n                            <div class="form-group">\r\n                                <label>Receiving Num</label>\r\n                                <input class="form-control" type="text" name="receivingCusNum"\r\n                                    [(ngModel)]="receivingForm.receivingNumber" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Received Date <span class="text-danger">*</span></label>\r\n                                <p-calendar class="workflow-clder" [maxDate]="currentDate" [showIcon]="true"\r\n                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                    name="receivedDate" [(ngModel)]="receivingForm.receivedDate"></p-calendar>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Work Scope <span class="text-danger">*</span></label>\r\n                                <p-dropdown [showClear]="true" class="p-dropdown-100" required\r\n                                    (ngModelChange)="getActive()" (input)="onFilterWorkScope($event.target.value)"\r\n                                    [options]="workScopeList" filter="true" [(ngModel)]="receivingForm.workScopeId"\r\n                                    name="workScopeId" [resetFilterOnHide]="true" placeholder="--Select--"></p-dropdown>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Customer Request Date <span class="text-danger">*</span></label>\r\n                                <p-calendar class="workflow-clder" [minDate]="receivingForm.receivedDate"\r\n                                    (ngModelChange)="getActive()" [yearNavigator]="true" [monthNavigator]="true"\r\n                                    yearRange="1900:2100" [showIcon]="true" name="custReqDate"\r\n                                    [(ngModel)]="receivingForm.custReqDate" required></p-calendar>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Customer Ref <span class="text-danger">*</span></label>\r\n                                <input class="form-control" type="text" name="referenceId" (ngModelChange)="getActive()"\r\n                                    [(ngModel)]="receivingForm.reference" #custRef="ngModel" required>\r\n                                <div *ngIf="custRef.invalid && (custRef.dirty || custRef.touched)"\r\n                                    class="alert alert-danger alert-danger-cstm">\r\n                                    <div *ngIf="custRef.errors.required">\r\n                                        <small> Please enter Customer Ref </small>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Employee Name <span class="text-danger">*</span></label>\r\n                                <p-autoComplete field="label" class="pautocomp-cstm"\r\n                                    [(ngModel)]="receivingForm.employeeId" name="employeeId"\r\n                                    (ngModelChange)="getActive()" [suggestions]="allEmployeeList"\r\n                                    (completeMethod)="filterEmployees($event)" [size]="30" [minLength]="1"\r\n                                    [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"\r\n                                    #empName="ngModel" required></p-autoComplete>\r\n                                <div *ngIf="empName.invalid && (empName.dirty || empName.touched)"\r\n                                    class="alert alert-danger alert-danger-cstm">\r\n                                    <div *ngIf="empName.errors.required">\r\n                                        <small> Employee Name is required </small>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <div class="form-group" style="float: right;">\r\n                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                    <label class="radio-inline">\r\n                                        <input type="radio" value="1" name="assetRadio" class="form-check-inline"\r\n                                            [checked]="receivingForm.isCustomerStock == true"\r\n                                            (change)="getStockStatus(0)">\r\n                                        Rotable Customer Stock\r\n                                    </label>\r\n                                </div>\r\n                                <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                    <label class="radio-inline">\r\n                                        <input type="radio" value="2" name="assetRadio" (change)="getStockStatus(1)"\r\n                                            [checked]="receivingForm.isCustomerStock == false">\r\n                                        Piece Parts\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Customer Name <span class="text-danger">*</span></label>\r\n                                <p-autoComplete field="name" class="pautocomp-cstm" [disabled]="isEditCustomerWork"\r\n                                    (ngModelChange)="getActive()" [(ngModel)]="receivingForm.customerId"\r\n                                    name="customerId" (keyup)="getCustomers($event.target.value, 1)"\r\n                                    [suggestions]="customerNamesInfo" (completeMethod)="filterCustNames($event)"\r\n                                    [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found"\r\n                                    [forceSelection]="true" (onSelect)="onSelectCustomer(receivingForm.customerId)"\r\n                                    #custName="ngModel" required></p-autoComplete>\r\n                                <div *ngIf="custName.invalid && (custName.dirty || custName.touched)"\r\n                                    class="alert alert-danger alert-danger-cstm">\r\n                                    <div *ngIf="custName.errors.required">\r\n                                        <small> Customer Name is required </small>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Customer Code <span class="text-danger">*</span></label>\r\n                                <input type="text" class="form-control" disabled name="customerCode"\r\n                                    (ngModelChange)="getActive()" [(ngModel)]="receivingForm.customerCode"\r\n                                    [value]="receivingForm.customerCode">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Contact <span class="text-danger">*</span></label>\r\n                                <p-autoComplete (onSelect)="onSelectCustomerContact(receivingForm.customerContactId)"\r\n                                    field="customerContact" class="pautocomp-cstm" (ngModelChange)="getActive()"\r\n                                    [(ngModel)]="receivingForm.customerContactId" name="customerContactId"\r\n                                    [suggestions]="customerContactInfo" (completeMethod)="filterCustContacts($event)"\r\n                                    [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found"\r\n                                    [forceSelection]="true" [disabled]="custName.invalid" #cusContact="ngModel"\r\n                                    required></p-autoComplete>\r\n                                <div *ngIf="cusContact.invalid && (cusContact.dirty || cusContact.touched)"\r\n                                    class="alert alert-danger alert-danger-cstm">\r\n                                    <div *ngIf="cusContact.errors.required">\r\n                                        <small> Contact is required </small>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Contact Phone <span class="text-danger">*</span></label>\r\n                                <p-autoComplete field="workPhone" class="pautocomp-cstm"\r\n                                    (onSelect)="onSelectCustomerContactPhone(receivingForm.customerPhone)"\r\n                                    [(ngModel)]="receivingForm.customerPhone" name="customerPhone"\r\n                                    (ngModelChange)="getActive()" [suggestions]="customerPhoneInfo"\r\n                                    (completeMethod)="filterCustContactPhone($event)" [size]="30" [minLength]="1"\r\n                                    [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"\r\n                                    [disabled]="custName.invalid" #cusPhone="ngModel" required>\r\n                                </p-autoComplete>\r\n                                <div *ngIf="cusPhone.invalid && (cusPhone.dirty || cusPhone.touched)"\r\n                                    class="alert alert-danger alert-danger-cstm">\r\n                                    <div *ngIf="cusPhone.errors.required">\r\n                                        <small> Contact Phone is required </small>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <div class="form-group">\r\n                                <label>PN <span class="text-danger">*</span></label>\r\n                                <p-autoComplete field="label" class="pautocomp-cstm"\r\n                                    [(ngModel)]="receivingForm.itemMasterId" name="partNumber"\r\n                                    (ngModelChange)="getActive()" [suggestions]="partNumbersInfo"\r\n                                    (completeMethod)="filterPartNumbers($event)" [size]="30" [minLength]="1"\r\n                                    [dropdown]="true" (keyup)="loadPartNumData($event.target.value)"\r\n                                    (onSelect)="onPartNumberSelected(receivingForm.itemMasterId,\'html\'); resetSerialNoTimeLife();"\r\n                                    #partNum="ngModel" errorMessage="Records not found" [forceSelection]="true"\r\n                                    required></p-autoComplete>\r\n                                <div *ngIf="partNum.invalid && (partNum.dirty || partNum.touched)"\r\n                                    class="alert alert-danger alert-danger-cstm">\r\n                                    <div *ngIf="partNum.errors.required">\r\n                                        <small> Part Number is required </small>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>PN Description</label>\r\n                                <input class="form-control" type="text" name="partDescription"\r\n                                    [(ngModel)]="receivingForm.partDescription" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Revised PN</label>\r\n                                <input class="form-control" type="text" name="revisedPart"\r\n                                    [(ngModel)]="receivingForm.revisedPart" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Item Group</label>\r\n                                <input class="form-control" disabled type="text" name="itemGroup"\r\n                                    [(ngModel)]="receivingForm.itemGroup">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Manufacturer</label>\r\n                                <input class="form-control" type="text" name="manufacturer"\r\n                                    [(ngModel)]="receivingForm.manufacturer" disabled>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>QTY</label>\r\n                                <input class="form-control" type="number" name="quantity"\r\n                                    [(ngModel)]="receivingForm.quantity" disabled>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-3">\r\n                            <div class="form-group">\r\n                                <label>Condition <span class="text-danger">*</span></label>\r\n                                <select class="form-control" name="conditionId" [(ngModel)]="receivingForm.conditionId"\r\n                                    (ngModelChange)="getActive()" (change)="onSelectCondition()" required>\r\n                                    <option value="0">-- Select --</option>\r\n                                    <option *ngFor="let condition of allConditionInfo"\r\n                                        [ngValue]="condition.conditionId">\r\n                                        {{condition.description}}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>\r\n                                    Site <span class="text-danger">*</span>\r\n                                </label>\r\n                                <select [(ngModel)]="receivingForm.siteId" name="siteId" (ngModelChange)="getActive()"\r\n                                    (change)="siteValueChange(receivingForm.siteId)" required>\r\n                                    <option value="0">-- Select --</option>\r\n                                    <option *ngFor="let site of allSites" [ngValue]="site.siteId">{{site.name}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Warehouse</label>\r\n                                <select [(ngModel)]="receivingForm.warehouseId" name="warehouseId"\r\n                                    (ngModelChange)="getActive()"\r\n                                    (change)="wareHouseValueChange(receivingForm.warehouseId)">\r\n                                    <option value="0">-- Select --</option>\r\n                                    <option *ngFor="let site of allWareHouses" [ngValue]="site.warehouseId">\r\n                                        {{site.name}}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Location</label>\r\n                                <select [(ngModel)]="receivingForm.locationId" name="locationId"\r\n                                    (ngModelChange)="getActive()"\r\n                                    (change)="locationValueChange(receivingForm.locationId)">\r\n                                    <option value="0">-- Select --</option>\r\n                                    <option *ngFor="let site of allLocations" [ngValue]="site.locationId">\r\n                                        {{site.name}}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Shelf</label>\r\n                                <select [(ngModel)]="receivingForm.shelfId" name="shelfId" (ngModelChange)="getActive()"\r\n                                    (change)="shelfValueChange(receivingForm.shelfId)">\r\n                                    <option value="0">-- Select --</option>\r\n                                    <option *ngFor="let site of allShelfs" [ngValue]="site.shelfId">\r\n                                        {{site.name}}\r\n                                    </option>\r\n                                </select>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Bin</label>\r\n                                <select [(ngModel)]="receivingForm.binId" name="binId" (ngModelChange)="getActive()">\r\n                                    <option value="0">-- Select --</option>\r\n                                    <option *ngFor="let site of allBins" [ngValue]="site.binId">{{site.name}}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-12">\r\n                        <div [ngClass]="receivingForm.isTimeLife ? \'card card-timelife\' : \'\'">\r\n                            <div [ngClass]="receivingForm.isTimeLife ? \'card-body\' : \'\'">\r\n                                <div class="form-row">\r\n                                    <div class="col-md-3">\r\n                                        <div class="form-group">\r\n                                            <div class="checkbox-cstm m-t-15">\r\n                                                <label>\r\n                                                    <input type="checkbox" name="isSerialized"\r\n                                                        (ngModelChange)="getActive()"\r\n                                                        [(ngModel)]="receivingForm.isSerialized" disabled>\r\n                                                    <span class="cr disabled_color">\r\n                                                        <i class="cr-icon pi pi-check"></i>\r\n                                                    </span>\r\n                                                    Is Serialized\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-6" *ngIf="receivingForm.isSerialized">\r\n                                        <div class="form-group">\r\n                                            <div class="checkbox-cstm m-t-15">\r\n                                                <label>\r\n                                                    <input type="checkbox" name="isSkipSerialNo"\r\n                                                        (ngModelChange)="getActive()"\r\n                                                        [(ngModel)]="receivingForm.isSkipSerialNo"\r\n                                                        (change)="resetSerialNo()">\r\n                                                    <span class="cr">\r\n                                                        <i class="cr-icon pi pi-check">\r\n                                                        </i>\r\n                                                    </span>\r\n                                                    Serial Number info not provided\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-3" *ngIf="receivingForm.isSerialized">\r\n                                        <div class="form-group" *ngIf="!receivingForm.isSkipSerialNo">\r\n                                            <label>\r\n                                                Serial Number <span *ngIf="receivingForm.isSerialized"\r\n                                                    class="text-danger">*</span>\r\n                                            </label>\r\n                                            <input class="form-control" type="text" name="serialNumber"\r\n                                                [(ngModel)]="receivingForm.serialNumber" (ngModelChange)="getActive()"\r\n                                                [required]="receivingForm.isSerialized">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-12">\r\n                        <div [ngClass]="receivingForm.isTimeLife ? \'card card-timelife\' : \'\'">\r\n                            <div [ngClass]="receivingForm.isTimeLife ? \'card-body\' : \'\'">\r\n                                <div class="form-row">\r\n                                    <div class="col-md-2">\r\n                                        <div class="form-group">\r\n                                            <div class="checkbox-cstm m-t-15">\r\n                                                <label>\r\n                                                    <input type="checkbox" name="isTimeLife"\r\n                                                        [(ngModel)]="receivingForm.isTimeLife" disabled>\r\n                                                    <span class="cr disabled_color">\r\n                                                        <i class="cr-icon pi pi-check"></i>\r\n                                                    </span>\r\n                                                    Time Life\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-4" *ngIf="receivingForm.isTimeLife">\r\n                                        <div class="form-group">\r\n                                            <div class="checkbox-cstm m-t-15">\r\n                                                <label>\r\n                                                    <input type="checkbox" name="isSkipTimeLife"\r\n                                                        (ngModelChange)="getActive()"\r\n                                                        [(ngModel)]="receivingForm.isSkipTimeLife"\r\n                                                        (change)="resetTimelife()">\r\n                                                    <span class="cr">\r\n                                                        <i class="cr-icon pi pi-check">\r\n                                                        </i>\r\n                                                    </span>\r\n                                                    Time Life info not provided\r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-3" *ngIf="receivingForm.isTimeLife">\r\n                                        <div class="form-group" *ngIf="!receivingForm.isSkipTimeLife">\r\n                                            <label>\r\n                                                Date <span *ngIf="receivingForm.isTimeLife" class="text-danger">*</span>\r\n                                            </label>\r\n                                            <p-calendar class="workflow-clder" [showIcon]="true" name="timeLifeDate"\r\n                                                [(ngModel)]="receivingForm.timeLifeDate" (ngModelChange)="getActive()"\r\n                                                [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                                [required]="receivingForm.isTimeLife"></p-calendar>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-3" *ngIf="receivingForm.isTimeLife">\r\n                                        <div class="form-group" *ngIf="!receivingForm.isSkipTimeLife">\r\n                                            <label>\r\n                                                Origin <span *ngIf="receivingForm.isTimeLife"\r\n                                                    class="text-danger">*</span>\r\n                                            </label>\r\n                                            <input class="form-control" type="text" name="timeLifeOrigin"\r\n                                                [(ngModel)]="receivingForm.timeLifeOrigin" (ngModelChange)="getActive()"\r\n                                                [required]="receivingForm.isTimeLife">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-row" *ngIf="receivingForm.isTimeLife">\r\n                                    <div class="table-responsive form-group" style="padding: 0 5px;"\r\n                                        *ngIf="!receivingForm.isSkipTimeLife">\r\n                                        <table class="table table-bordered">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th colspan="15" class="text-center">\r\n                                                        <strong>Time Life Info</strong>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <th></th>\r\n                                                    <th class="text-center">Cycles (Hrs)</th>\r\n                                                    <th class="text-center">Time (Hrs)</th>\r\n                                                    <th class="text-center">Last (Hrs)</th>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>Remaining</td>\r\n                                                    <td class="clr2 text-center">\r\n                                                        <input type="number" (keypress)="restrictMinus($event)"\r\n                                                            class="w60 form-control" placeholder="hours"\r\n                                                            name="cyclesRemaining" (ngModelChange)="getActive()"\r\n                                                            [(ngModel)]="sourceTimeLife.cyclesRemaining">\r\n                                                    </td>\r\n                                                    <td class="clr2 text-center">\r\n                                                        <input type="number" (keypress)="restrictMinus($event)"\r\n                                                            class="w60 form-control" placeholder="hours"\r\n                                                            name="timeRemaining" (ngModelChange)="getActive()"\r\n                                                            [(ngModel)]="sourceTimeLife.timeRemaining">\r\n                                                    </td>\r\n                                                    <td></td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>Since New</td>\r\n                                                    <td class="clr2 text-center">\r\n                                                        <input type="number" (keypress)="restrictMinus($event)"\r\n                                                            class="w60 form-control" placeholder="hours"\r\n                                                            name="cyclesSinceNew" (ngModelChange)="getActive()"\r\n                                                            [(ngModel)]="sourceTimeLife.cyclesSinceNew">\r\n                                                    </td>\r\n                                                    <td class="clr2 text-center">\r\n                                                        <input type="number" (keypress)="restrictMinus($event)"\r\n                                                            class="w60 form-control" placeholder="hours"\r\n                                                            name="timeSinceNew" (ngModelChange)="getActive()"\r\n                                                            [(ngModel)]="sourceTimeLife.timeSinceNew">\r\n                                                    </td>\r\n                                                    <td class="clr2 text-center">\r\n                                                        <input type="number" (keypress)="restrictMinus($event)"\r\n                                                            class="w60 form-control" placeholder="hours"\r\n                                                            name="lastSinceNew" (ngModelChange)="getActive()"\r\n                                                            [(ngModel)]="sourceTimeLife.lastSinceNew">\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>Since Ovh</td>\r\n                                                    <td class="clr2 text-center">\r\n                                                        <input type="number" (keypress)="restrictMinus($event)"\r\n                                                            class="w60 form-control" placeholder="hours"\r\n                                                            name="cyclesSinceOVH" (ngModelChange)="getActive()"\r\n                                                            [(ngModel)]="sourceTimeLife.cyclesSinceOVH">\r\n                                                    </td>\r\n                                                    <td class="clr2 text-center">\r\n                                                        <input type="number" (keypress)="restrictMinus($event)"\r\n                                                            class="w60 form-control" placeholder="hours"\r\n                                                            name="timeSinceOVH" (ngModelChange)="getActive()"\r\n                                                            [(ngModel)]="sourceTimeLife.timeSinceOVH">\r\n                                                    </td>\r\n                                                    <td class="clr2 text-center">\r\n                                                        <input type="number" (keypress)="restrictMinus($event)"\r\n                                                            class="w60 form-control" placeholder="hours"\r\n                                                            name="lastSinceOVH" (ngModelChange)="getActive()"\r\n                                                            [(ngModel)]="sourceTimeLife.lastSinceOVH">\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>Since Insp</td>\r\n                                                    <td class="clr2 text-center">\r\n                                                        <input type="number" (keypress)="restrictMinus($event)"\r\n                                                            class="w60 form-control" placeholder="hours"\r\n                                                            name="cyclesSinceInspection" (ngModelChange)="getActive()"\r\n                                                            [(ngModel)]="sourceTimeLife.cyclesSinceInspection">\r\n                                                    </td>\r\n                                                    <td class="clr2 text-center">\r\n                                                        <input type="number" (keypress)="restrictMinus($event)"\r\n                                                            class="w60 form-control" placeholder="hours"\r\n                                                            name="timeSinceInspection" (ngModelChange)="getActive()"\r\n                                                            [(ngModel)]="sourceTimeLife.timeSinceInspection">\r\n                                                    </td>\r\n                                                    <td class="clr2 text-center">\r\n                                                        <input type="number" (keypress)="restrictMinus($event)"\r\n                                                            class="w60 form-control" placeholder="hours"\r\n                                                            name="lastSinceInspection" (ngModelChange)="getActive()"\r\n                                                            [(ngModel)]="sourceTimeLife.lastSinceInspection">\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>Since Repair</td>\r\n                                                    <td class="clr2 text-center">\r\n                                                        <input type="number" (keypress)="restrictMinus($event)"\r\n                                                            class="w60 form-control" placeholder="hours"\r\n                                                            name="cyclesSinceRepair" (ngModelChange)="getActive()"\r\n                                                            [(ngModel)]="sourceTimeLife.cyclesSinceRepair">\r\n                                                    </td>\r\n                                                    <td class="clr2 text-center">\r\n                                                        <input type="number" (keypress)="restrictMinus($event)"\r\n                                                            class="w60 form-control" placeholder="hours"\r\n                                                            name="timeSinceRepair" (ngModelChange)="getActive()"\r\n                                                            [(ngModel)]="sourceTimeLife.timeSinceRepair">\r\n                                                    </td>\r\n                                                    <td></td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-5">\r\n                    <div class="form-row">\r\n                        <div class="col-md-4">\r\n                            <div class="form-group">\r\n                                <label>\r\n                                    Certify By\r\n                                </label>\r\n                                <input class="form-control" type="text" name="certifiedBy" (ngModelChange)="getActive()"\r\n                                    [(ngModel)]="receivingForm.certifiedBy">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Parts Cert Num</label>\r\n                                <input class="form-control" type="text" name="partCertificationNumber"\r\n                                    (ngModelChange)="getActive()" [(ngModel)]="receivingForm.partCertificationNumber">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Tag Date</label>\r\n                                <p-calendar class="workflow-clder" [showIcon]="true" name="tagDate"\r\n                                    (ngModelChange)="getActive()" [yearNavigator]="true" [monthNavigator]="true"\r\n                                    yearRange="1900:2100" [(ngModel)]="receivingForm.tagDate"></p-calendar>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Tag Type</label>\r\n                                <p-multiSelect [options]="allTagTypes" (input)="onFilterTangible($event)"\r\n                                    (ngModelChange)="getActive()" [(ngModel)]="receivingForm.tagType" name="tagType">\r\n                                </p-multiSelect>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-4">\r\n                            <div class="form-group" style="margin-bottom: 8px;">\r\n                                <label>Obtain From <span class="text-danger">*</span> </label>\r\n                                <select [(ngModel)]="receivingForm.obtainFromTypeId" (ngModelChange)="getActive()"\r\n                                    name="obtainFromTypeId"\r\n                                    (change)="onSelectObrainFrom(receivingForm.obtainFromTypeId)" required>\r\n                                    <option value="0">-- Select --</option>\r\n                                    <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">\r\n                                        {{item.moduleName}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class="form-group" style="margin-bottom: 8px !important;">\r\n                                <div class="form-row" *ngIf="receivingForm.obtainFromTypeId == 1">\r\n                                    <div class="col-sm-12">\r\n                                        <label>\r\n                                            Customer <span class="text-danger">*</span>\r\n                                        </label>\r\n                                        <p-autoComplete field="name" class="pautocomp-cstm"\r\n                                            (ngModelChange)="getActive()"\r\n                                            [required]="receivingForm.obtainFromTypeId == 1"\r\n                                            (keyup)="getCustomers($event.target.value, 2)"\r\n                                            [(ngModel)]="receivingForm.obtainFrom" name="obtainFromCustomer"\r\n                                            [suggestions]="customersList" (completeMethod)="filterCustomerNames($event)"\r\n                                            [size]="30" [minLength]="1" [dropdown]="true"\r\n                                            errorMessage="Records not found" [forceSelection]="true"></p-autoComplete>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-row" *ngIf="receivingForm.obtainFromTypeId == 2">\r\n                                    <div class="col-sm-12">\r\n                                        <label>\r\n                                            Vendor <span class="text-danger">*</span>\r\n                                        </label>\r\n                                        <p-autoComplete field="label" class="pautocomp-cstm"\r\n                                            (ngModelChange)="getActive()"\r\n                                            [required]="receivingForm.obtainFromTypeId == 2"\r\n                                            [(ngModel)]="receivingForm.obtainFrom" name="obtainFromVendor"\r\n                                            [suggestions]="vendorsList" (completeMethod)="filterVendorNames($event)"\r\n                                            [size]="30" [minLength]="1" [dropdown]="true"\r\n                                            errorMessage="Records not found" [forceSelection]="true">\r\n                                        </p-autoComplete>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-row" *ngIf="receivingForm.obtainFromTypeId == 9">\r\n                                    <div class="col-sm-12">\r\n                                        <label>Company <span class="text-danger">*</span> </label>\r\n                                        <p-autoComplete field="label" class="pautocomp-cstm"\r\n                                            (ngModelChange)="getActive()" [(ngModel)]="receivingForm.obtainFrom"\r\n                                            name="obtainFromCompany" [suggestions]="companyList"\r\n                                            (completeMethod)="filterCompanyNames($event)" [size]="30" [minLength]="1"\r\n                                            [dropdown]="true" errorMessage="Records not found"\r\n                                            [required]="receivingForm.obtainFromTypeId == 9" [forceSelection]="true">\r\n                                        </p-autoComplete>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-row" *ngIf="receivingForm.obtainFromTypeId == 4">\r\n                                    <div class="col-sm-12">\r\n                                        <label>Other <span class="text-danger">*</span></label>\r\n                                        <input class="form-control" type="text" name="obtainFromOther"\r\n                                            (ngModelChange)="getActive()"\r\n                                            [required]="receivingForm.obtainFromTypeId == 4"\r\n                                            [(ngModel)]="receivingForm.obtainFrom">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group" style="margin-bottom: 8px !important;">\r\n                                <label>Owner <span class="text-danger">*</span></label>\r\n                                <select [(ngModel)]="receivingForm.ownerTypeId" name="ownerType"\r\n                                    (ngModelChange)="getActive()" (change)="onSelectOwner(receivingForm.ownerTypeId)"\r\n                                    required>\r\n                                    <option value="0">-- Select --</option>\r\n                                    <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">\r\n                                        {{item.moduleName}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <div class="form-row" *ngIf="receivingForm.ownerTypeId == 1">\r\n                                    <div class="col-sm-12">\r\n                                        <label>\r\n                                            Customer <span class="text-danger">*</span>\r\n                                        </label>\r\n                                        <p-autoComplete field="name" class="pautocomp-cstm"\r\n                                            [required]="receivingForm.ownerTypeId == 1" (ngModelChange)="getActive()"\r\n                                            [(ngModel)]="receivingForm.owner" name="ownerCustomer"\r\n                                            (keyup)="getCustomers($event.target.value, 2)" [suggestions]="customersList"\r\n                                            (completeMethod)="filterCustomerNames($event)" [size]="30" [minLength]="1"\r\n                                            [dropdown]="true" errorMessage="Records not found" [forceSelection]="true">\r\n                                        </p-autoComplete>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-row" *ngIf="receivingForm.ownerTypeId == 2">\r\n                                    <div class="col-sm-12">\r\n                                        <label>\r\n                                            Vendor <span class="text-danger">*</span>\r\n                                        </label>\r\n                                        <p-autoComplete field="label" class="pautocomp-cstm"\r\n                                            (ngModelChange)="getActive()" [required]="receivingForm.ownerTypeId == 2"\r\n                                            [(ngModel)]="receivingForm.owner" name="ownerVendor"\r\n                                            [suggestions]="vendorsList" (completeMethod)="filterVendorNames($event)"\r\n                                            [size]="30" [minLength]="1" [dropdown]="true"\r\n                                            errorMessage="Records not found" [forceSelection]="true">\r\n                                        </p-autoComplete>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-row" *ngIf="receivingForm.ownerTypeId == 9">\r\n                                    <div class="col-sm-12">\r\n                                        <label>Company <span class="text-danger">*</span> </label>\r\n                                        <p-autoComplete field="label" class="pautocomp-cstm"\r\n                                            (ngModelChange)="getActive()" [(ngModel)]="receivingForm.owner"\r\n                                            name="ownerCompany" [suggestions]="companyList"\r\n                                            (completeMethod)="filterCompanyNames($event)" [size]="30" [minLength]="1"\r\n                                            [dropdown]="true" errorMessage="Records not found"\r\n                                            [required]="receivingForm.ownerTypeId == 9" [forceSelection]="true">\r\n                                        </p-autoComplete>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-row" *ngIf="receivingForm.ownerTypeId == 4">\r\n                                    <div class="col-sm-12">\r\n                                        <label>Other <span class="text-danger">*</span> </label>\r\n                                        <input class="form-control" type="text" name="ownerOther"\r\n                                            (ngModelChange)="getActive()" [required]="receivingForm.ownerTypeId == 4"\r\n                                            [(ngModel)]="receivingForm.owner">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Traceble To <span class="text-danger">*</span></label>\r\n                                <select [(ngModel)]="receivingForm.traceableToTypeId" name="traceableToType"\r\n                                    (ngModelChange)="getActive()"\r\n                                    (change)="onSelectTraceableTo(receivingForm.traceableToTypeId)" required>\r\n                                    <option value="0">-- Select --</option>\r\n                                    <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">\r\n                                        {{item.moduleName}}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <div class="form-row" *ngIf="receivingForm.traceableToTypeId == 1">\r\n                                    <div class="col-sm-12">\r\n                                        <label>\r\n                                            Add Customer <span class="text-danger">*</span>\r\n                                        </label>\r\n                                        <p-autoComplete field="name" class="pautocomp-cstm"\r\n                                            (ngModelChange)="getActive()"\r\n                                            [required]="receivingForm.traceableToTypeId == 1"\r\n                                            (keyup)="getCustomers($event.target.value, 2)"\r\n                                            [(ngModel)]="receivingForm.traceableTo" name="traceableToCustomer"\r\n                                            [suggestions]="customersList" (completeMethod)="filterCustomerNames($event)"\r\n                                            [size]="30" [minLength]="1" [dropdown]="true"\r\n                                            errorMessage="Records not found" [forceSelection]="true"></p-autoComplete>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-row" *ngIf="receivingForm.traceableToTypeId == 2">\r\n                                    <div class="col-sm-12">\r\n                                        <label>\r\n                                            Add Vendor <span class="text-danger">*</span>\r\n                                        </label>\r\n                                        <p-autoComplete field="label" class="pautocomp-cstm"\r\n                                            (ngModelChange)="getActive()"\r\n                                            [required]="receivingForm.traceableToTypeId == 2"\r\n                                            [(ngModel)]="receivingForm.traceableTo" name="traceableToVendor"\r\n                                            [suggestions]="vendorsList" (completeMethod)="filterVendorNames($event)"\r\n                                            [size]="30" [minLength]="1" [dropdown]="true"\r\n                                            errorMessage="Records not found" [forceSelection]="true">\r\n                                        </p-autoComplete>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-row" *ngIf="receivingForm.traceableToTypeId == 9">\r\n                                    <div class="col-sm-12">\r\n                                        <label> Add Company <span class="text-danger">*</span></label>\r\n                                        <p-autoComplete field="label" class="pautocomp-cstm"\r\n                                            (ngModelChange)="getActive()" [(ngModel)]="receivingForm.traceableTo"\r\n                                            name="traceableToCompany" [suggestions]="companyList"\r\n                                            (completeMethod)="filterCompanyNames($event)" [size]="30" [minLength]="1"\r\n                                            [dropdown]="true" errorMessage="Records not found" [forceSelection]="true"\r\n                                            [required]="receivingForm.traceableToTypeId == 9">\r\n                                        </p-autoComplete>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-row" *ngIf="receivingForm.traceableToTypeId == 4">\r\n                                    <div class="col-sm-12">\r\n                                        <label> Add Other <span class="text-danger">*</span></label>\r\n                                        <input class="form-control" type="text" name="traceableToOther"\r\n                                            (ngModelChange)="getActive()"\r\n                                            [required]="receivingForm.traceableToTypeId == 4"\r\n                                            [(ngModel)]="receivingForm.traceableTo">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>MFG Trace</label>\r\n                                <input class="form-control" type="text" name="MFGTrace" (ngModelChange)="getActive()"\r\n                                    [(ngModel)]="receivingForm.mfgTrace">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>MFG Lot</label>\r\n                                <input class="form-control" type="text" name="MFGLotNo" (ngModelChange)="getActive()"\r\n                                    [(ngModel)]="receivingForm.mfgLotNo">\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <div class="checkbox-cstm " style="margin-top: 20px;">\r\n                                    <label>\r\n                                        <input type="checkbox" name="isMFGDate" [(ngModel)]="receivingForm.isMFGDate"\r\n                                            (ngModelChange)="getActive()">\r\n                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                        MFG Date <span class="text-danger" *ngIf="receivingForm.isMFGDate">*</span>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group" *ngIf="receivingForm.isMFGDate">\r\n                                <p-calendar class="workflow-clder" [showIcon]="true" [yearNavigator]="true"\r\n                                    [monthNavigator]="true" yearRange="1900:2100" (ngModelChange)="getActive()"\r\n                                    [required]="receivingForm.isMFGDate" [maxDate]="currentDate"\r\n                                    name="manufacturingDate" [(ngModel)]="receivingForm.mfgDate"></p-calendar>\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <div class="checkbox-cstm m-t-10">\r\n                                    <label>\r\n                                        <input type="checkbox" name="isExpDate" [(ngModel)]="receivingForm.isExpDate"\r\n                                            (ngModelChange)="getActive()">\r\n                                        <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                        Exp Date <span class="text-danger" *ngIf="receivingForm.isExpDate">*</span>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div class="form-group" *ngIf="receivingForm.isExpDate">\r\n                                <p-calendar class="workflow-clder" [showIcon]="true" (ngModelChange)="getActive()"\r\n                                    [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100"\r\n                                    [required]="receivingForm.isExpDate" [minDate]="currentDate" name="expDate"\r\n                                    [(ngModel)]="receivingForm.expDate"></p-calendar>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-4 main_facture">\r\n                            <div class="card" style="margin-top: 8px;margin-bottom: 8px;">\r\n                                <div class="card-header" style="padding: 10px 4px;">\r\n                                    <h5 style="margin-bottom: 0; font-size: 12px;">\r\n                                        Management Structure <span class="text-danger">*</span>\r\n                                    </h5>\r\n                                </div>\r\n                                <div class="card-body" style="padding: 10px 4px 0px 4px !important;">\r\n                                    <div class="col-md-12">\r\n                                        <div class="form-group">\r\n                                            <p-dropdown [showClear]="true" class="p-dropdown-100"\r\n                                                (onChange)="selectedLegalEntity(managementStructure.companyId,\'html\');"\r\n                                                required (ngModelChange)="getActive()" [options]="legalEntityList"\r\n                                                filter="true" [(ngModel)]="managementStructure.companyId"\r\n                                                name="companyId" [resetFilterOnHide]="true" placeholder="Select">\r\n                                            </p-dropdown>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <p-dropdown [showClear]="true" class="p-dropdown-100"\r\n                                                (onChange)="selectedBusinessUnit(managementStructure.buId,\'html\')"\r\n                                                (ngModelChange)="getActive()" [options]="businessUnitList" filter="true"\r\n                                                [(ngModel)]="managementStructure.buId" name="buId"\r\n                                                [resetFilterOnHide]="true" placeholder="Select"></p-dropdown>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <p-dropdown [showClear]="true" class="p-dropdown-100"\r\n                                                (onChange)="selectedDivision(managementStructure.divisionId,\'html\')"\r\n                                                (ngModelChange)="getActive()" [options]="divisionList" filter="true"\r\n                                                [(ngModel)]="managementStructure.divisionId" name="divisionId"\r\n                                                [resetFilterOnHide]="true" placeholder="Select"></p-dropdown>\r\n                                        </div>\r\n                                        <div class="form-group">\r\n                                            <p-dropdown [showClear]="true" class="p-dropdown-100"\r\n                                                (onChange)="selectedDepartment(managementStructure.departmentId,\'html\' )"\r\n                                                (ngModelChange)="getActive()" [options]="departmentList" filter="true"\r\n                                                [(ngModel)]="managementStructure.departmentId" name="departmentId"\r\n                                                [resetFilterOnHide]="true" placeholder="Select"></p-dropdown>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div>\r\n                               <span class="label" style="width: 100%;">Memo\r\n                                    <span>\r\n                                        <a style="margin-left: 5px;" class="nobg"  (click)="onClickMemo()" matTooltip="Add Memo"\r\n                                            matTooltipPosition="above"><i class="fa fa-pencil" style="color: #2275ce;\r\n                                        font-size: 12px;"></i>\r\n                                        </a>\r\n                                    </span>\r\n                                </span>\r\n                                <div class="col-sm-12">\r\n                                    <span>\r\n                                        <div class="memo-popup-cstm mat_emo">\r\n                                            <div [innerHTML]=" receivingForm.memo"\r\n                                                [matTooltip]="parsedText(receivingForm.memo)" style="width: 100%;padding-top: 4px;height: 76px;white-space: initial;\r\n                                        padding: 10px;" class="text_editor_box"></div>\r\n                                        </div>\r\n                                    </span>\r\n                                </div>\r\n              \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-12">\r\n                    <div class="col-md-12">\r\n                        <div class="form-group">\r\n                            <div class="checkbox-cstm m-t-15">\r\n                                <label>\r\n                                    <input type="checkbox" name="isTimeLife1" [(ngModel)]="isDocumentsToShow"\r\n                                        [value]="isDocumentsToShow==true">\r\n                                    <span class="cr disabled_color1">\r\n                                        <i class="cr-icon pi pi-check"></i>\r\n                                    </span>\r\n                                    Attachments\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-12" *ngIf="isDocumentsToShow">\r\n                        <app-common-documents [moduleName]="moduleName" (parentTrigger)="changeOfStatus($event)"  [uploadDocsToser]="uploadDocs" [referenceId]="receivingCustomerWorkId"\r\n                            [isViewMode]="false" [offLineUpload]="true"></app-common-documents>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="form-row pull-right m-t-10">\r\n                <button *ngIf="!isEditMode" type="submit" class="btn btn-primary" (click)="onSaveCustomerReceiving()"\r\n                    [disabled]="!customerWorkForm.valid || disableMagmtStruct ||  disableCondition || disableSite">\r\n                    Save \r\n                </button>\r\n                <button *ngIf="isEditMode" type="submit" class="btn btn-primary" (click)="onSaveCustomerReceiving()"\r\n                    [disabled]="!customerWorkForm.valid  || disableUpdateButton">\r\n                    Update \r\n                </button>\r\n            </div>\r\n        </form> \r\n        <div class="modal fade" id="textareapopup"  role="dialog" data-backdrop="static"\r\n       >\r\n        <div class="modal-dialog modal-sm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" (click)="closeMemoModel()">\r\n                        &times;\r\n                    </button>\r\n                    <h4 class="modal-title">Edit Memo</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <table class="table table-bordered table-fixed workflow-table-material">\r\n                        <thead>\r\n                            <th style="color: #fff;">Memo</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td style="white-space: inherit">\r\n                                    <p-editor spellcheck="true" [(ngModel)]="memoPopupContent"\r\n                                        (ngModelChange)="enableSaveMemo()" [style]="{ height: \'320px\' }"\r\n                                        name="memoPopupContent" required></p-editor>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div style="float: right;">\r\n                        <button type="button" class="btn btn-primary" [disabled]="disabledMemo"\r\n                            style="padding: 6px 12px !important; margin-top: 10px;" (click)="onClickPopupSave()">\r\n                            Save\r\n                        </button>\r\n                        <button type="button" class="btn btn-danger" style="padding: 6px 12px !important; margin-top: 10px;"\r\n                            (click)="closeMemoModel()">\r\n                            Close\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n</div>\r\n\r\n<div class="modal fade" id="workorderpopup" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-sm" style="max-width: 530px !important;">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <h4 class="modal-title">Customer Work is saved. Would you like to create Work Order ?</h4>\r\n            </div>\r\n           <div class="modal-footer" style="border-top: transparent;">\r\n                <button type="button" class="btn btn-primary" data-dismiss="modal" (click)="goToWorkOrder()">\r\n                    Yes\r\n                </button>\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal" (click)="goToCustomerWorkList()">\r\n                    No\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id="warnRestrictMesg" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-xsm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title warning_color" *ngIf="restrictID == 0">Warning</h4>\r\n                <h4 class="modal-title restrict_color" *ngIf="restrictID != 0">Restriction</h4>\r\n            </div>\r\n            <div class="pad_msf">\r\n                <p *ngIf="warningID != 0 && restrictID == 0" class="mar_o warning_color">\r\n                    {{warningMessage}}\r\n                </p>\r\n                <p *ngIf="restrictID != 0" class="mar_o restrict_color">\r\n                    {{restrictMessage}}\r\n                </p>\r\n            </div>\r\n            <div class="modal-footer" style="padding:10px;">\r\n                <button class="btn btn-primary btn-primary" data-dismiss="modal" (click)="WarnRescticModel()"\r\n                    style="padding: 6px 12px !important;">\r\n                    Ok\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},fl7f:function(e,t,n){"use strict";n.r(t),t.default='<p-breadcrumb [model]="breadcrumbs"></p-breadcrumb>\r\n        <div class="card new-card">\r\n            <div class="card-header bg-primary new-card-header">\r\n              <div class="row">\r\n                <div class="col">\r\n                  <h4 class="new-card-heading" style="font-size:19px">Receiving - Customer Work List</h4>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    type="button"\r\n                    class="btn-sm new-btn-primary"\r\n                    [routerLink]="[\'/receivingmodule/receivingpages/app-customer-work-setup\']">\r\n                    Create Customer Work\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class="card-body new-card-body">\r\n            <p-table #dt class="rpo-table-cstm rro-table-cstm lastcol-fix" \r\n                [value]="allRecevinginfo" \r\n                [lazy]="true"\r\n                (onLazyLoad)="loadData($event)" \r\n                [metaKeySelection]="true" \r\n                [first]="0" [rows]="pageSize" \r\n                [paginator]="true"\r\n                [pageLinks]="3" \r\n                [rowsPerPageOptions]="[10,20,50,100]" \r\n                [columns]="selectedColumns" \r\n                selectionMode="multiple"\r\n                [(selection)]="selectedColumn" \r\n                [resizableColumns]="true" \r\n                [reorderableColumns]="true" \r\n                [scrollable]="true"\r\n                scrollHeight="450px" \r\n                [totalRecords]="totalRecords">\r\n            <ng-template pTemplate="caption">\r\n                <div class="row">\r\n                    <div class="col">\r\n                        <p-multiSelect [maxSelectedLabels]="2" [options]="cols" [(ngModel)]="selectedColumns"\r\n                        optionLabel="header" selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}"\r\n                        defaultLabel="Choose Columns" style="float:left">\r\n                    </p-multiSelect>\r\n                    </div>\r\n                    <div class="col">\r\n                            <div\r\n                            style="width: auto !important; float: right;"\r\n                            class="inner-addon right-addon w50 inline-block g-filter-search-cstm">\r\n                            <i class="fa fa-search"></i>\r\n                            <input type="text" pInputText size="50" class="form-control"\r\n                            (input)="globalSearch($event.target.value)" placeholder=" Filter">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="row">\r\n                    <div class="col">\r\n                        <button class="btn btn-primary new-table-button" type="button" pButton icon="fa-download" iconPos="left"\r\n                            label="Export  Data" matTooltip="Download Data" matTooltipPosition="above"\r\n                            data-toggle="modal"\r\n                            (click)="selectedOnly = false; targetData = dt;" \r\n                            data-target="#downloadConfirmation"\r\n                            style="padding: 5px 10px !important;"></button>\r\n                        <button class="btn btn-primary new-table-button" type="button" pButton icon="fa-download" iconPos="left"\r\n                            label="Export Selected Data" matTooltip="Download Selected Data" matTooltipPosition="above"\r\n                            (click)="dt.exportCSV({selectionOnly:true})" style="padding: 5px 10px !important;">\r\n                        </button>\r\n                    </div>\r\n                    <div class="col">\r\n                        <div class="">\r\n                            <div class="col" style="padding:3px 0 0;">\r\n                                <div class="form-group" style="float: right;">\r\n                                    <div\r\n                                    class="pull-left"\r\n                                    style="margin-top: 4px; margin-right: 15px;">\r\n                                    <label class="radio-cstm wauto">\r\n                                        <input type="radio" name="custworkstatus" class="form-control" value="1"\r\n                                            (click)="getCustWorkStatus(\'1\')" [ngModel]="currentStatusCW" checked>\r\n                                        <span class="checkmark"></span>Pending WO Creation\r\n                                    </label>\r\n                                    </div>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="custworkstatus" class="form-control" value="2"\r\n                                                (click)="getCustWorkStatus(\'2\')" [ngModel]="currentStatusCW">\r\n                                            <span class="checkmark"></span>Returned to Customers\r\n                                        </label>\r\n                                    </div>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="custworkstatus" class="form-control" value="3"\r\n                                                (click)="getCustWorkStatus(\'3\')" [ngModel]="currentStatusCW">\r\n                                            <span class="checkmark"></span>All\r\n                                        </label>\r\n                                    </div>\r\n                                    <div class="checkbox-cstm" style="margin-left: 0; display: none;">\r\n                                        <label style="width: auto !important;margin-top: 3px;">                   \r\n                                            <input type="checkbox" [(ngModel)]="currentDeletedstatus" name="cparent" id="cparent" (click)="getDeleteListByStatus($event.target.checked)" />\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Show  Deleted List\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col *ngFor="let col of columns" style="width:140px">\r\n                </colgroup>\r\n            </ng-template>\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n                    <ng-container *ngFor="let col of columns">\r\n                        <th class="text-center" style="width:auto;"\r\n                            *ngIf="col.field!=\'levelCode1\' && col.field!=\'levelCode2\' && col.field!=\'levelCode3\' && col.field!=\'levelCode4\'"\r\n                            pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                            {{col.header}}\r\n                            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                        </th>\r\n                        <th class="text-center" style="width:auto;." *ngIf="col.field==\'levelCode1\'" colspan="4" pResizableColumn\r\n                            pReorderableColumn [pSortableColumn]="col.field">\r\n                            Management Structure\r\n                        </th>\r\n                    </ng-container>\r\n                    <th style="width: 130px; position:sticky">Actions</th>\r\n                </tr>\r\n                <tr>\r\n                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                        <input type="text" *ngIf="col.field !== \'receivedDate\' && col.field != \'createdDate\' && col.field != \'updatedDate\'" style="width:100%;" pInputText\r\n                               (keyup)="dt.filter($event.target.value, col.field, \'contains\')">\r\n                        <input type="date" class="hidePlaceHolder" *ngIf="col.field == \'receivedDate\'" name="receivedDate" style="width:100%;" (change)="dt.filter($event.target.value, col.field, \'contains\'); enableDateFilter($event.target);">\r\n                        <input type="date"   style="width:100%" class="hidePlaceHolder" *ngIf="col.field == \'createdDate\'" name="createdDate"  (change)="dateFilterForReceivingCustomerList($event.target.value, col.field)" />\r\n                        <input type="date"   style="width:100%" class="hidePlaceHolder" *ngIf="col.field == \'updatedDate\'" name="updatedDate"  (change)="dateFilterForReceivingCustomerList($event.target.value, col.field)" />\r\n                    </th>\r\n                    <th style="width:130px;position:sticky"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                <tr [pSelectableRow]="rowData" [pSelectableRowDblClick]="rowData" pReorderableRowHandle\r\n                    (dblclick)="viewSelectedRowdbl(rowData)">\r\n\r\n                    <td *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>\r\n                        {{col.field == \'receivedDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field] && col.field == \'woOpenDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy\'):rowData[col.field]}}\r\n                    </td>\r\n                    <td style="width:130px;">\r\n                        <div *ngIf="currentDeletedstatus==false">\r\n                            <span data-toggle="modal" data-target="#cusView">\r\n                                <a class="btn nobg" (click)="openView(rowData)"\r\n                                   matTooltip="View" matTooltipPosition="above"><i class="fa fa-eye"></i></a>\r\n                            </span>\r\n                            <span>\r\n                                <a class="btn nobg" *ngIf="rowData[\'woNumber\'] == \'\' || rowData[\'woNumber\'] == null"\r\n                                   (click)="openEdits(rowData)" matTooltip="Edit" matTooltipPosition="above"><i class="fa fa-pencil"></i></a>\r\n                            </span>\r\n                            <span>\r\n                                <a class="btn nobg" (click)="openHistory(contentAuditHist,rowData)"\r\n                                   matTooltip="History" matTooltipPosition="above"><i class="fa fa-history"></i></a>\r\n                            </span>\r\n                            <span>\r\n                                <a class="btn nobg btn-pluspo-cstm"\r\n                                   *ngIf="rowData[\'woNumber\'] == \'\' || rowData[\'woNumber\'] == null"\r\n                                   (click)="gotoWorkOrder(rowData)" matTooltip="Create WO" matTooltipPosition="above"><i class="fa fa-plus"></i></a>\r\n                            </span>\r\n                            <span>\r\n                                <a class="btn nobg btn-ro-cstm" (click)="gotoCustomer(rowData)" matTooltip="Return to Customer" matTooltipPosition="above">\r\n                                    <i class="fa fa-list"></i>\r\n                                </a>\r\n                            </span>\r\n                        </div>\r\n                        <div *ngIf="currentDeletedstatus==true">\r\n                            <span data-toggle="modal" data-target="#cusView">\r\n                                <a class="btn nobg" (click)="openView(rowData)"\r\n                                   matTooltip="View" matTooltipPosition="above"><i class="fa fa-eye"></i></a>\r\n                            </span>\r\n                            <span><a class="btn nobg" (click)="restore(restoreIdCW,rowData);" matTooltip="Restore Record" matTooltipPosition="above"><i class="fa fa-undo" aria-hidden="true"></i></a> </span>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" *ngIf="totalRecords == 0">\r\n                <tr>\r\n                  <td [attr.colspan]="21" class="no-records-cstm">\r\n                          No records found\r\n                  </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer" class="footer">Total:</label>\r\n                <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer" class="footer1">Pages Count:</label>\r\n                <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText type="text" />\r\n            </ng-template>\r\n        </p-table>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #restoreIdCW let-c="close" let-d="dismiss" data-backdrop="static">\r\n\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Restore?</h4>\r\n\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="restoreRecord()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-body">\r\n        <strong>\r\n            Receiving Num:\r\n            <span class="new-label">{{selectedRowForDelete.receivingNumber}}</span>\r\n        </strong>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-success" (click)="deleteItemAndCloseModel()">Yes</button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #contentAuditHist let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">History of Receive Customer Work</h4>\r\n        <button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="table-responsive history_hg">\r\n            <table class="table table-bordered">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Rec.No.</th>\r\n                        <th>Part Number</th>\r\n                        <th>Revised PN</th>\r\n                        <th>Employee Name</th>\r\n                        <th>Customer Name</th>\r\n                        <th>Customer Reference</th>\r\n                        <th>Contact</th>\r\n                        <th>Contact Phone</th>\r\n                        <th>Manufacturer</th>\r\n                        <th>Quantity</th>\r\n                        <th>Condition</th>\r\n                        <th>Site</th>\r\n                        <th>Ware House</th>\r\n                        <th>Location</th>\r\n                        <th>Shelf</th>\r\n                        <th>Bin</th>\r\n                        <th>Created Date</th>\r\n                        <th>Created By</th>\r\n                        <th>Updated date</th>\r\n                        <th>Updated By</th>\r\n                    </tr>\r\n                </thead>\r\n                <tr *ngFor="let audit of customerWorkHisory; let i = index;">\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'receivingCustomerNumber\', audit.receivingCustomerNumber)  ? \'black\' : \'red\'  }">\r\n                        {{audit.receivingCustomerNumber}}\r\n                    </td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'partNumber\', audit.partNumber)  ? \'black\' : \'red\'  }">\r\n                        {{audit.partNumber}}\r\n                    </td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'revisedPart\', audit.revisedPart)  ? \'black\' : \'red\'  }">\r\n                        {{audit.revisedPart}}\r\n                    </td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'employeeName\', audit.employeeName)  ? \'black\' : \'red\'  }">\r\n                        {{audit.employeeName}}\r\n                    </td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'customerName\', audit.customerName)  ? \'black\' : \'red\'  }">\r\n                        {{audit.customerName}}\r\n                    </td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'customerReference\', audit.customerReference)  ? \'black\' : \'red\'  }">\r\n                        {{audit.customerReference}}\r\n                    </td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'contactFirstName\', audit.contactFirstName)  ? \'black\' : \'red\'  }">\r\n                        {{audit.contactFirstName}}\r\n                    </td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'workPhone\', audit.workPhone)  ? \'black\' : \'red\'  }">\r\n                        {{audit.workPhone}}\r\n                    </td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'manufacturerName\', audit.manufacturerName)  ? \'black\' : \'red\'  }">\r\n                        {{audit.manufacturerName}}\r\n                    </td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'quantity\', audit.quantity)  ? \'black\' : \'red\'  }">\r\n                        {{audit.quantity}}\r\n                    </td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'condition\', audit.condition)  ? \'black\' : \'red\'  }">\r\n                        {{audit.condition}}\r\n                    </td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'siteName\', audit.siteName)  ? \'black\' : \'red\'  }">\r\n                        {{audit.siteName}}\r\n                    </td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'warehouse\', audit.warehouse)  ? \'black\' : \'red\'  }">\r\n                        {{audit.warehouse}}\r\n                    </td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'location\', audit.location)  ? \'black\' : \'red\'  }">\r\n                        {{audit.location}}\r\n                    </td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'shelfName\', audit.shelfName)  ? \'black\' : \'red\'  }">\r\n                        {{audit.shelfName}}\r\n                    </td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'binName\', audit.binName)  ? \'black\' : \'red\'  }">\r\n                        {{audit.binName}}\r\n                    </td>                    \r\n                    <td>{{audit.createdDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'createdBy\', audit.createdBy)  ? \'black\' : \'red\'  }">\r\n                        {{audit.createdBy}}\r\n                    </td>    \r\n                    <td>{{audit.updatedDate | date: \'MM/dd/yyyy h:mm a \'}}</td>\r\n                    <td [ngStyle]="{\'color\':  getColorCodeForHistory(i, \'updatedBy\', audit.updatedBy)  ? \'black\' : \'red\'  }">\r\n                        {{audit.updatedBy}}\r\n                    </td>    \r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n    </div>\r\n</ng-template>\r\n<div class="modal fade" id="downloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t<div class="modal-dialog modal-sm">\r\n\t\t<div class="modal-content">\r\n\t\t\t<div class="modal-header">\r\n\t\t\t\t<button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n\t\t\t\t<h4 class="modal-title">Are You Sure Want to Download?</h4>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-body" *ngIf="targetData">\r\n\t\t\t\t<strong>\r\n\t\t\t\t\t<span *ngIf="!selectedOnly">\r\n\t\t\t\t\t\tYou are attempting to export {{targetData.totalRecords}} of records. \r\n\t\t\t\t\t</span> \r\n\t\t\t\t</strong>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button type="button" class="btn btn-primary" (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):exportCSV(targetData); closeDeleteModal();">Confirm</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="closeDeleteModal()">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<div id="cusView" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="false">\r\n    <div class="modal-dialog modal-xlg">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <div class="col-sm-3">\r\n                    <h4 class="modal-title">Details of Receiving - Customer</h4>\r\n                </div>\r\n                <div class="col-sm-3" style="padding-top: 5px;">\r\n                    Customer Name<span class="text-danger"> : {{viewCustWorkInfo.customerName}}</span>\r\n                </div>\r\n                <div class="col-sm-3" style="padding-top: 5px;">\r\n                    Customer Code<span class="text-danger"> : {{viewCustWorkInfo.customerCode}}</span>\r\n                </div>\r\n            </div>\r\n            <div class="modal-body" *ngIf="viewCustWorkInfo">\r\n                <div class="form-row">\r\n                    <div class="col-md-4">\r\n                        <p>\r\n                            <span class="label"><b>Receiving Num: </b></span><span class="value">{{ viewCustWorkInfo.receivingNumber }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Received Date: <span class="text-danger">*</span> </b></span><span class="value">{{ viewCustWorkInfo.receivedDate | date: \'MM/dd/yyyy\'}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Work Scope: <span class="text-danger">*</span> </b></span><span class="value">{{ viewCustWorkInfo.workScopeName}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Customer Request Date: <span class="text-danger">*</span> </b></span><span class="value">{{ viewCustWorkInfo.custReqDate | date: \'MM/dd/yyyy\'}}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Customer Ref: <span class="text-danger">*</span></b></span><span class="value">{{ viewCustWorkInfo.reference }}</span>\r\n                        </p>\r\n                        <p >\r\n                            <span class="label"><b>Employee Name: <span class="text-danger">*</span></b></span><span class="value">{{ viewCustWorkInfo.employeeName }}</span>\r\n                        </p>\r\n                        <div class="form-group" >\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-inline" style="pointer-events: none;">\r\n                                    <input type="radio" value="1" name="assetRadio" class="form-check-inline"\r\n                                        [checked]="viewCustWorkInfo.isCustomerStock == true"\r\n                                        >\r\n                                    Rotable Customer Stock\r\n                                </label>\r\n                            </div>\r\n                            <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                                <label class="radio-inline" style="pointer-events: none;">\r\n                                    <input type="radio" value="2" name="assetRadio" \r\n                                        [checked]="viewCustWorkInfo.isCustomerStock == false">\r\n                                    Piece Parts\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <p class="mantstr">\r\n                            <span class="label"><b>Customer Name: <span class="text-danger">*</span></b></span><span class="value">{{ viewCustWorkInfo.customerName }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Customer Code: <span class="text-danger">*</span></b></span><span class="value">{{ viewCustWorkInfo.customerCode }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Contact: <span class="text-danger">*</span></b></span><span class="value">{{ viewCustWorkInfo.customerContact }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Contact Phone: <span class="text-danger">*</span></b></span><span class="value">{{ viewCustWorkInfo.contactPhone }}</span>\r\n                        </p>\r\n                        \r\n                        <p>\r\n                            <span class="label"><b>WO Num: </b></span><span class="value">{{ viewCustWorkInfo.woNum ? viewCustWorkInfo.woNum : \'-\' }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>WO CreatedBy: </b></span><span class="value">{{ viewCustWorkInfo.woCreatedBy ? viewCustWorkInfo.woCreatedBy : \'-\' }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>WO CreatedDate: </b></span><span class="value">{{ viewCustWorkInfo.woCreatedDate ? (viewCustWorkInfo.woCreatedDate  | date: \'MM/dd/yyyy\') : \'-\' }}</span>\r\n                        </p>\r\n                    </div>\r\n                    <div class="col-md-4">\r\n                        <p>\r\n                            <span class="label"><b>PN: <span class="text-danger">*</span></b></span><span class="value">{{ viewCustWorkInfo.partNumber }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>PN Description:</b></span><span class="value">{{ viewCustWorkInfo.partDescription ? viewCustWorkInfo.partDescription : \'-\' }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Revised PN: </b></span><span class="value">{{ viewCustWorkInfo.revisedPart ? viewCustWorkInfo.revisedPart : \'-\' }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Item Group: <span class="text-danger">*</span></b></span><span class="value">{{ viewCustWorkInfo.itemGroup }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Manufacturer: </b></span><span class="value">{{ viewCustWorkInfo.manufacturer ? viewCustWorkInfo.manufacturer : \'-\' }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>QTY: </b></span><span class="value">{{ viewCustWorkInfo.quantity ? viewCustWorkInfo.quantity : \'-\' }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Condition: <span class="text-danger">*</span></b></span><span class="value">{{ viewCustWorkInfo.condition }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Site: <span class="text-danger">*</span></b></span><span class="value">{{ viewCustWorkInfo.site }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Warehouse: </b></span><span class="value">{{ viewCustWorkInfo.warehouse ? viewCustWorkInfo.warehouse : \'-\' }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Location: </b></span><span class="value">{{ viewCustWorkInfo.location ? viewCustWorkInfo.location : \'-\' }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Shelf: </b></span><span class="value">{{ viewCustWorkInfo.shelf ? viewCustWorkInfo.shelf : \'-\' }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Bin: </b></span><span class="value">{{ viewCustWorkInfo.bin ? viewCustWorkInfo.bin : \'-\' }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Certify By: </b></span><span class="value">{{ viewCustWorkInfo.certifiedBy ? viewCustWorkInfo.certifiedBy : \'-\' }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Parts Cert Num: </b></span><span class="value">{{ viewCustWorkInfo.partCertificationNumber ? viewCustWorkInfo.partCertificationNumber : \'-\' }}</span>\r\n                        </p>\r\n                       \r\n                    </div>\r\n                    <div class="col-md-4">\r\n                        <p>\r\n                            <span class="label"><b>Tag Date: </b></span><span class="value">{{ viewCustWorkInfo.tagDate | date: \'MM/dd/yyyy\' }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Tag Type: </b></span><span class="value">{{ viewCustWorkInfo.tagType ? viewCustWorkInfo.tagType : \'-\' }}</span>\r\n                        </p>\r\n                    \r\n                     \r\n                       \r\n                        <p class="full-width">\r\n                            <span class="label"><b>Obtain From:  <span class="text-danger">*</span> </b></span><span class="value">{{ viewCustWorkInfo.obtainFromType ? viewCustWorkInfo.obtainFromType : \'-\' }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Obtain From Name:  <span class="text-danger">*</span>  </b></span><span class="value">{{ viewCustWorkInfo.obtainFromName ? viewCustWorkInfo.obtainFromName : \'-\' }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Owner:  <span class="text-danger">*</span> </b></span><span class="value">{{ viewCustWorkInfo.ownerType ? viewCustWorkInfo.ownerType : \'-\' }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Owner Name:  <span class="text-danger">*</span> </b></span><span class="value">{{ viewCustWorkInfo.ownerName ? viewCustWorkInfo.ownerName : \'-\' }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Traceble To:  <span class="text-danger">*</span> </b></span><span class="value">{{ viewCustWorkInfo.tracableToType ? viewCustWorkInfo.tracableToType : \'-\' }}</span>\r\n                        </p>\r\n                        <p>\r\n                            <span class="label"><b>Traceble Name:   <span class="text-danger">*</span></b></span><span class="value">{{ viewCustWorkInfo.tracableToName ? viewCustWorkInfo.tracableToName : \'-\' }}</span>\r\n                        </p>\r\n                        <p >\r\n                            <span class="label"><b>MFG Trace:  <span class="text-danger">*</span> </b></span><span class="value">{{ viewCustWorkInfo.mfgTrace ? viewCustWorkInfo.mfgTrace : \'-\' }}</span>\r\n                        </p>\r\n                        <p >\r\n                            <span class="label"><b>MFG Lot: </b></span><span class="value">{{ viewCustWorkInfo.mfgLotNo ? viewCustWorkInfo.mfgLotNo : \'-\' }}</span>\r\n                        </p>\r\n                        <div class="form-group p-t-10">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isMFGDate" [(ngModel)]="viewCustWorkInfo.isMFGDate"\r\n                                           disabled>\r\n                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                    Is MFG Date\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <p *ngIf="viewCustWorkInfo.isMFGDate" class="full-width">\r\n                            <span class="label"><b>MFG Date:  <span class="text-danger">*</span></b></span><span class="value">{{ viewCustWorkInfo.mfgDate | date: \'MM/dd/yyyy\' }}</span>\r\n                        </p>\r\n                    \r\n                        <div class="form-group p-t-10">\r\n                            <div class="checkbox-cstm">\r\n                                <label>\r\n                                    <input type="checkbox" name="isExpDate" [(ngModel)]="viewCustWorkInfo.isExpDate"\r\n                                           disabled>\r\n                                    <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                    Is Exp Date\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <p *ngIf="viewCustWorkInfo.isExpDate" class="full-width">\r\n                            <span class="label"><b>Exp Date:  <span class="text-danger">*</span></b></span><span class="value">{{ viewCustWorkInfo.expDate | date: \'MM/dd/yyyy\' }}</span>\r\n                        </p>\r\n                        <div class="form-row managementstr stR_wdt">\r\n                            <div class="col-md-8">\r\n                                <div class="card" style="margin-top: 20px;">\r\n                                    <div class="card-header" style="padding: 0 10px;">\r\n                                        <h5 style="margin-bottom: 0; font-size: 12px;">\r\n                                            Management Structure <span class="text-danger">*</span>\r\n                                        </h5>\r\n                                    </div>\r\n                                    <div class="card-body" style="padding: 4px 12px 6px;">\r\n                                        <div class="form-group" style="margin-bottom: 4px;">\r\n                                            <input class="form-control" type="text" name="companyName"\r\n                                                   [(ngModel)]="viewCustWorkInfo.level1" disabled>\r\n                                        </div>\r\n                                        <div class="form-group" style="margin-bottom: 4px;">\r\n                                            <input class="form-control" type="text" name="BUName"\r\n                                                   [(ngModel)]="viewCustWorkInfo.level2" disabled>\r\n                                        </div>\r\n                                        <div class="form-group" style="margin-bottom: 4px;">\r\n                                            <input class="form-control" type="text" name="divisionName"\r\n                                                   [(ngModel)]="viewCustWorkInfo.level3" disabled>\r\n                                        </div>\r\n                                        <div class="form-group" style="margin-bottom: 4px;">\r\n                                            <input class="form-control" type="text" name="deptName"\r\n                                                   [(ngModel)]="viewCustWorkInfo.level4" disabled>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \x3c!-- <p >\r\n                            <span class="label"><b>Memo: </b></span><span class="value">{{ viewCustWorkInfo.memo ? viewCustWorkInfo.memo : \'-\' }}</span>\r\n                        </p> --\x3e\r\n                        <p >\r\n                            <span class="label"><b> Memo: </b></span><span class="value textareaMemos" [innerHTML]="viewCustWorkInfo.memo" matTooltipPosition="above"  [matTooltip]="parsedText(viewCustWorkInfo.memo)"></span>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div class="card">\r\n                    <div class="card-body" style="padding: 2px 10px;">\r\n                        <div class="form-row">\r\n                            <div class="col-md-3">\r\n                                <div class="form-group p-t-10">\r\n                                    <div class="checkbox-cstm">\r\n                                        <label>\r\n                                            <input type="checkbox" name="isSerialized"\r\n                                                   [(ngModel)]="viewCustWorkInfo.isSerialized" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Is Serialized\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <div class="form-group p-t-10">\r\n                                    <div class="checkbox-cstm">\r\n                                        <label style="width: 100%;">\r\n                                            <input type="checkbox" name="isSkipSerialized"\r\n                                                   [(ngModel)]="viewCustWorkInfo.isSkipSerialNo" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Serial Number info not provided\r\n\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-4" *ngIf="viewCustWorkInfo.serialNumber">\r\n                                <p>\r\n                                    <span class="label"><b>Serial Number: </b></span><span class="value">{{ viewCustWorkInfo.serialNumber ? viewCustWorkInfo.serialNumber : \'-\' }}</span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="card" style="margin-top: 5px;">\r\n                    <div class="card-body" style="padding: 2px 10px;">\r\n                        <div class="form-row">\r\n                            <div class="col-md-3">\r\n                                <div class="form-group p-t-10">\r\n                                    <div class="checkbox-cstm">\r\n                                        <label>\r\n                                            <input type="checkbox" name="isTimeLife"\r\n                                                   [(ngModel)]="viewCustWorkInfo.isTimeLife" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Time Life\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <div class="form-group p-t-10">\r\n                                    <div class="checkbox-cstm">\r\n                                        <label style="width: 100%;">\r\n                                            <input type="checkbox" name="isSkipTimeLife"\r\n                                                   [(ngModel)]="viewCustWorkInfo.isSkipTimeLife" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Time Life info not provided\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <p>\r\n                                    <span class="label"><b>Date: </b></span><span class="value">{{ viewCustWorkInfo.timeLifeDate | date: \'MM/dd/yyyy\' }}</span>\r\n                                </p>\r\n                            </div>\r\n                            <div class="col-md-3">\r\n                                <p>\r\n                                    <span class="label"><b>Origin: </b></span><span class="value">{{ viewCustWorkInfo.timeLifeOrigin ? viewCustWorkInfo.timeLifeOrigin : \'-\' }}</span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                        <div *ngIf="viewCustWorkInfo.isTimeLife" class="table-responsive form-group col-sm-12">\r\n                            <table class="table table-bordered">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th colspan="15" class="text-center"><strong>Time Life Info</strong></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th class="text-center">Cycles</th>\r\n                                        <th class="text-center">Time</th>\r\n                                        <th class="text-center">Last</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><b>Remaining</b></td>\r\n                                        <td class="clr2 text-center">\r\n                                            <span>{{timeLifeInfo.cyclesRemaining ? timeLifeInfo.cyclesRemaining : \'-\'}}</span>\r\n                                        </td>\r\n                                        <td class="clr2 text-center">\r\n                                            <span>{{timeLifeInfo.timeRemaining ? timeLifeInfo.timeRemaining : \'-\'}}</span>\r\n                                        </td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><b>Since New</b></td>\r\n                                        <td class="clr2 text-center">\r\n                                            <span>{{timeLifeInfo.cyclesSinceNew ? timeLifeInfo.cyclesSinceNew : \'-\'}}</span>\r\n                                        </td>\r\n                                        <td class="clr2 text-center">\r\n                                            <span>{{timeLifeInfo.timeSinceNew ? timeLifeInfo.timeSinceNew : \'-\'}}</span>\r\n                                        </td>\r\n                                        <td class="clr2 text-center">\r\n                                            <span>{{timeLifeInfo.lastSinceNew ? timeLifeInfo.lastSinceNew : \'-\'}}</span>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><b>Since Ovh</b></td>\r\n                                        <td class="clr2 text-center">\r\n                                            <span>{{timeLifeInfo.cyclesSinceOVH ? timeLifeInfo.cyclesSinceOVH : \'-\'}}</span>\r\n                                        </td>\r\n                                        <td class="clr2 text-center">\r\n                                            <span>{{timeLifeInfo.timeSinceOVH ? timeLifeInfo.timeSinceOVH : \'-\'}}</span>\r\n                                        </td>\r\n                                        <td class="clr2 text-center">\r\n                                            <span>{{timeLifeInfo.lastSinceOVH ? timeLifeInfo.lastSinceOVH : \'-\'}}</span>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><b>Since Insp</b></td>\r\n                                        <td class="clr2 text-center">\r\n                                            <span>{{timeLifeInfo.cyclesSinceInspection ? timeLifeInfo.cyclesSinceInspection : \'-\'}}</span>\r\n                                        </td>\r\n                                        <td class="clr2 text-center">\r\n                                            <span>{{timeLifeInfo.timeSinceInspection ? timeLifeInfo.timeSinceInspection : \'-\'}}</span>\r\n                                        </td>\r\n                                        <td class="clr2 text-center">\r\n                                            <span>{{timeLifeInfo.lastSinceInspection ? timeLifeInfo.lastSinceInspection : \'-\'}}</span>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td><b>Since Repair</b></td>\r\n                                        <td class="clr2 text-center">\r\n                                            <span>{{timeLifeInfo.cyclesSinceRepair ? timeLifeInfo.cyclesSinceRepair : \'-\'}}</span>\r\n                                        </td>\r\n                                        <td class="clr2 text-center">\r\n                                            <span>{{timeLifeInfo.timeSinceRepair ? timeLifeInfo.timeSinceRepair : \'-\'}}</span>\r\n                                        </td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="col-md-12 tableview">\r\n                    <app-common-documents [moduleName]="moduleName" [referenceId]="rcId" [isViewMode]="true"\r\n                    [offLineUpload]="true"></app-common-documents>\r\n                </div>\r\n            </div>\r\n            <div class="modal-footer">\r\n                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div id="warnRestrictMesg" class="modal fade" role="dialog" data-backdrop="static">\r\n    <div class="modal-dialog modal-xsm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                <h4 class="modal-title restrict_color" *ngIf="restrictID != 0">Restriction</h4>\r\n            </div>\r\n            <div class="pad_msf">\r\n                <p *ngIf="restrictID != 0" class="mar_o restrict_color">\r\n                    {{restrictMessage}}\r\n                </p>\r\n            </div>\r\n            <div class="modal-footer" style="padding:10px;">\r\n                <button class="btn btn-primary btn-primary" data-dismiss="modal" (click)="WarnRescticModel()"\r\n                        style="padding: 6px 12px !important;">\r\n                    Ok\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    </div>\r\n</div>'},j7B6:function(e,t,n){"use strict";n.r(t),t.default='<div class="ro-view-receiving">\r\n        <div class="x_panel">\r\n            <div>\r\n                <div>\r\n                    <div id="adminsearchlocationajax">\r\n                        <div class="table-responsive pas-table-cstm header-table-width poro-table-cstm parts-list-table-align parts-zindex" >\r\n                            <div class="tableFixHead"> \r\n                            <table class="table table-bordered table-wrap">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Line no</th>\r\n                                        <th>PN</th>\r\n                                        <th>Qty Ord</th>\r\n                                        <th>Qty Received</th>\r\n                                        <th>Back Ord</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngIf="purchaseOrderData != undefined && purchaseOrderData.purchaseOderPart != undefined">\r\n                                    <ng-container *ngFor="let part of purchaseOrderData.purchaseOderPart;let row_index=index">\r\n                                        <tr class="basic-info" *ngIf="part.stockLine != null && part.stockLine.length > 0">\r\n                                            <td class="text-right">{{row_index + 1}}</td>\r\n                                            <td>{{part.itemMaster?.partNumber}}</td>\r\n                                            <td class="text-right">{{part.quantityOrdered}}</td>\r\n                                            <td class="text-right">{{part.stockLine.length}}</td>\r\n                                            <td class="text-right">{{part.quantityOrdered - part.stockLine.length}}</td>\r\n                                            <td class="details-control eachcol" style="padding: 4px 6px;">\r\n                                                <i class="fa fa-{{ part.showStockLineGrid ? \'minus\':\'plus\'}} btn btn-success btn-cstm btn-xs margin0 btn-receiving-toggle" (click)="toggleExpandIcon(part)"></i>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                        <tr class="more-info" *ngIf="part.showStockLineGrid">\r\n                                            <td colspan="6">\r\n                                                <div class="label-value-row">\r\n                                                    <div class="col-sm-3">\r\n                                                        <p><span class="label"><b>PN: </b></span><span class="value"> {{part.itemMaster?.partNumber}}</span></p>\r\n                                                        <p><span class="label"><b>Qty Actually Received: </b></span><span class="value">{{part.stockLine?.length}}</span></p>\r\n                                                    </div>\r\n                                                    <div class="col-sm-3">\r\n                                                        <p><span class="label"><b>PN Description: </b></span><span class="value">{{part.itemMaster?.partDescription}}</span></p>\r\n                                                        <p><span class="label"><b>Qty Rejected: </b></span><span class="value">{{part.itemMaster.quantityRejected}}</span></p>\r\n                                                    </div>\r\n                                                    <div class="col-sm-3">\r\n                                                        <p><span class="label"><b>Cond: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].conditionText}}</span></p>\r\n                                                        <p><span class="label"><b>GL Account: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].glAccountText}}</span></p>\r\n                                                    </div>                                                   \r\n                                                </div>\r\n\r\n                                                <div class="stockGridpanel2"> \x3c!--style="margin-left: 6px;clear: both !important;"--\x3e\r\n                                                    <h3 class="add-details-heading" style="padding-top: 10px;"> {{ part.itemMaster?.partNumber }} receiving Qty  {{ (part.currentSLIndex + 1) }} of {{ part.stockLine.length }}</h3>\r\n                                                   \r\n                                                    <div class="pull-right" style="margin-top: -37px;margin-right: 85px;"> \x3c!--*ngIf="part.itemMaster?.isSerialized"--\x3e\r\n                                                        <i class="fa fa-chevron-left btn btn-primary btn-ad-icons" (click)="moveStockLinePage(\'stockline\', part.currentSLIndex - 1, part)"></i>\r\n                                                        <input [value]="part.currentSLIndex + 1" type="text" pInputText pKeyFilter="pnum" (keyup)="gotoStockLinePage($event, part)" (focusout)="paginatorFocusOut($event, part)" class="form-control" style="width: 50px;border-radius: 0 !important;" />\r\n                                                        <i class="fa fa-chevron-right btn btn-primary btn-ad-icons" (click)="moveStockLinePage(\'stockline\', part.currentSLIndex + 1, part)"></i>\r\n                                                        <p>Page {{part.currentSLIndex + 1}} of {{part.stockLine.length}} Pages</p>\r\n                                                    </div>\r\n                                                \r\n\r\n                                                    <section class="receiving-stockline-view">\r\n                                                        <div class="label-value-row">\r\n                                                            <div class="col-sm-3" style="margin-right: 20px;width: 210px !important;">\r\n                                                                <div class="card" style="margin-top: 13px;">\r\n                                                                    <div class="card-header" style="padding: 0 10px;">\r\n                                                                        <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure</h5>\r\n                                                                    </div>\r\n                                                                    <div class="card-body" style="padding: 0 12px 12px;">\r\n                                                                        <p><span class="label"><b>Company: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].companyText}}</span></p>\r\n                                                                        <p><span class="label"><b>BU: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].businessUnitText}}</span></p>\r\n                                                                        <p><span class="label"><b>Division: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].divisionText}}</span></p>\r\n                                                                        <p><span class="label"><b>Dept: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].departmentText}}</span></p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                               \r\n                                                                <p><span class="label"><b>Site: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].siteText}}</span></p>\r\n                                                                <p><span class="label"><b>Warehouse: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].warehouseText}}</span></p>\r\n                                                                <p><span class="label"><b>Location: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].locationText}}</span></p>\r\n                                                                <p><span class="label"><b>Shelf: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].shelfText}}</span></p>\r\n                                                            </div>\r\n                                                            <div class="col-sm-3">\r\n                                                                <p><span class="label"><b>Bin: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].binText}}</span></p>\r\n                                                                <p><span class="label"><b>Obtain From: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].obtainFrom}}</span></p>\r\n                                                                <p><span class="label"><b>Owner: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].owner}}</span></p>\r\n                                                                <p><span class="label"><b>Traceable To: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].traceableTo}}</span></p>\r\n                                                                <p><span class="label"><b>MFG: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].manufacturerName}}</span></p>\r\n                                                                <p><span class="label"><b>MFG Lot Num: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].manufacturerLotNumber}}</span></p>\r\n                                                                <p><span class="label"><b>MFG Date: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].manufacturingDate}}</span></p>\r\n                                                                <p><span class="label"><b>MFG Trace: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].manufacturingTrace}}</span></p>\r\n                                                            </div>\r\n                                                            <div class="col-sm-3">\r\n                                                                <p><span class="label"><b>MFG Batch Num: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].manufacturingBatchNumber}}</span></p>\r\n                                                                <p><span class="label"><b>Expiration Date: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].expirationDate}}</span></p>\r\n                                                                <p><span class="label"><b>Unit Cost: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].purchaseOrderUnitCost}}</span></p>\r\n                                                                <p><span class="label"><b>Extended Cost: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].purchaseOrderExtendedCost}}</span></p>\r\n                                                                <p><span class="label"><b>Parts Cert Num: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].partCertificationNumber}}</span></p>\r\n                                                                <p><span class="label"><b>Cert By: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].certifiedByName}}</span></p>\r\n                                                                <p><span class="label"><b>Certified Date: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].certifiedDate}}</span></p>\r\n                                                                <p><span class="label"><b>Certified Due Date: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].certifiedDueDate}}</span></p>\r\n                                                            </div>\r\n                                                            <div class="col-sm-3">\r\n                                                                <p><span class="label"><b>Tag Type: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].tageTypeName}}</span></p>\r\n                                                                <p><span class="label"><b>Tag Date: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].tagDate}}</span></p>\r\n                                                                <p><span class="label"><b>ESN: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].engineSerialNumber}}</span></p>\r\n                                                                <p><span class="label"><b>Aircraft Tail Num: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].aircraftTailNumber}}</span></p>\r\n                                                                <p><span class="label"><b>Ship Via: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].shippingViaText}}</span></p>\r\n                                                                <p><span class="label"><b>Shipping Ref#/AWB: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].shippingReference}}</span></p>\r\n                                                                <p><span class="label"><b>Shipping Account: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].shippingAccount}}</span></p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </section>\r\n\r\n                                                    <section style="clear: both;" *ngIf="part.stockLine">\r\n                                                        <h3 class="add-details-heading" style="text-align: left;padding-top: 30px;">Serialized</h3>\r\n                                                        <div class="form-row">\r\n                                                            <div class="col-md-3">\r\n                                                                <p><span class="label"><b>Serial Num: </b></span><span class="value">{{part.stockLine[part.currentSLIndex].serialNumber ? part.stockLine[part.currentSLIndex].serialNumber : \'-\'}}</span></p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </section>\r\n\r\n                                                    <section *ngIf="part.timeLife">\r\n                                                        <h3 class="add-details-heading" style="text-align: left;">Time Life</h3>\r\n                                                        <div class="time-remaining">\r\n                                                            <table class="table table-bordered timelife-table">\r\n                                                                <thead>\r\n                                                                    <tr class="po-table-tr">\r\n                                                                        <th colspan="2" class="text-center">Cycles</th>\r\n                                                                        <th colspan="2" class="text-center">Time (in hours)</th>\r\n                                                                        <th colspan="2" class="text-center">Last (in hours)</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody *ngIf="part.timeLife[part.currentSLIndex]">\r\n                                                                    <tr>\r\n                                                                        <td>Remaining</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].cyclesRemaining}}</td>\r\n                                                                        <td>Remaining</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].timeRemaining}}</td>\r\n                                                                        <td>Since New</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].lastSinceNew}}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since New</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].cyclesSinceNew}}</td>\r\n                                                                        <td>Since New</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].timeSinceNew}}</td>\r\n                                                                        <td>Since Ovh</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].lastSinceOVH}}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since Ovh</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].cyclesSinceOVH}}</td>\r\n                                                                        <td>Since Ovh</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].timeSinceOVH}}</td>\r\n                                                                        <td>Since Insp</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].lastSinceInspection}}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since Insp</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].cyclesSinceInspection}}</td>\r\n                                                                        <td>Since Insp</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].timeSinceInspection}}</td>\r\n                                                                        <td></td>\r\n                                                                        <td></td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since Repair</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].cyclesSinceRepair}}</td>\r\n                                                                        <td>Since Repair</td>\r\n                                                                        <td>{{part.timeLife[part.currentSLIndex].timeSinceRepair}}</td>\r\n                                                                        <td></td>\r\n                                                                        <td></td>\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </section>\r\n\r\n                                                    \x3c!--<section>\r\n                                                        <h3 class="add-details-heading" style="text-align: left;">Calibrated Equipment</h3>\r\n                                                        <div class="form-row">\r\n                                                            <div class="col-md-3">\r\n                                                                <p><span class="label"><b>Inspection Date: </b></span><span class="value">-</span></p>\r\n                                                            </div>\r\n                                                            <div class="col-md-3">\r\n                                                                <p><span class="label"><b>Frequency: </b></span><span class="value">-</span></p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </section>--\x3e\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </ng-container>\r\n                                </tbody>\r\n                            </table>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>'},kbtz:function(e,t,n){"use strict";n.r(t),t.default='<div class="ro-view-receiving">\r\n        <div class="x_panel">\r\n            <div>\r\n                <div>\r\n                    <div id="adminsearchlocationajax">\r\n                        <div class="table-responsive pas-table-cstm header-table-width poro-table-cstm parts-list-table-align parts-zindex" >\r\n                            <div class="tableFixHead"> \r\n                            <table class="table table-bordered table-wrap">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Line no</th>\r\n                                        <th>PN</th>\r\n                                        <th>Qty Ord</th>\r\n                                        <th>Qty Received</th>\r\n                                        <th>Back Ord</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody *ngIf="purchaseOrderData != undefined && purchaseOrderPart != undefined">\r\n                                    <ng-container *ngFor="let part of purchaseOrderPart;let row_index=index">\r\n                                        <tr class="basic-info" *ngIf="part.stockLine != null && part.stockLine.length > 0">\r\n                                            <td class="text-right">{{row_index + 1}}</td>\r\n                                            <td>{{part.itemMaster?.partNumber}}</td>\r\n                                            <td class="text-right">{{part.quantityOrdered}}</td>\r\n                                            <td class="text-right">{{part.stockLine.length}}</td>\r\n                                            <td class="text-right">{{part.quantityOrdered - part.stockLine.length}}</td>\r\n                                            <td class="details-control eachcol" style="padding: 4px 6px;">\r\n                                                <i class="fa fa-{{ part.showStockLineGridDraft ? \'minus\':\'plus\'}} btn btn-success btn-cstm btn-xs margin0 btn-receiving-toggle" (click)="toggleExpandIcon(part)"></i>\r\n                                            </td>\r\n                                        </tr>\r\n\r\n                                        <tr class="more-info" *ngIf="part.showStockLineGridDraft">\r\n\r\n                                            <td colspan="6">\r\n                                                <div class="label-value-row">\r\n                                                    <div class="col-sm-3">\r\n                                                        <p><span class="label"><b>PN: </b></span><span class="value"> {{part.itemMaster?.partNumber}}</span></p>\r\n                                                        <p><span class="label"><b>Qty Actually Received: </b></span><span class="value">{{part.stockLine?.length}}</span></p>\r\n                                                    </div>\r\n                                                    <div class="col-sm-3">\r\n                                                        <p><span class="label"><b>PN Description: </b></span><span class="value">{{part.itemMaster?.partDescription}}</span></p>\r\n                                                        <p><span class="label"><b>Qty Rejected: </b></span><span class="value">{{part.itemMaster?.quantityRejected}}</span></p>\r\n                                                    </div>\r\n                                                    <div class="col-sm-3">\r\n                                                        <p><span class="label"><b>Cond: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].conditionText}}</span></p>\r\n                                                        <p><span class="label"><b>GL Account: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].glAccountText}}</span></p>\r\n                                                    </div>                                                   \r\n                                                </div>\r\n\r\n                                                <div class="stockGridpanel2"> \x3c!-- style="margin-left: 6px;clear: both !important;"--\x3e\r\n                                                    <h3 class="add-details-heading" style="padding-top: 10px;"> {{ part.itemMaster?.partNumber }} receiving Qty  {{ (part.stockLine[currentStockLineShowIndex].currentSLIndexDraft + 1) }} of {{ part.stockLine.length }}</h3>\r\n                                                   \r\n                                                    <div class="pull-right" style="margin-top: -37px;margin-right: 85px;"> \x3c!--*ngIf="part.itemMaster?.isSerialized"--\x3e\r\n                                                        <i class="fa fa-chevron-left btn btn-primary btn-ad-icons" \r\n      (click)="moveStockLinePage(\'stockline\', part.stockLine[currentStockLineShowIndex].currentSLIndexDraft - 1, part, part.stockLine[currentSLIndexDraft])"></i>\r\n                                                        <input [value]="part.stockLine[currentStockLineShowIndex].currentSLIndexDraft + 1" type="text" pInputText pKeyFilter="pnum" (keyup)="gotoStockLinePage($event, part, part.stockLine[currentSLIndexDraft])" class="form-control" style="width: 50px;border-radius: 0 !important;" /> \x3c!--(focusout)="paginatorFocusOut($event, part)"--\x3e\r\n                                                        <i class="fa fa-chevron-right btn btn-primary btn-ad-icons" \r\n    (click)="moveStockLinePage(\'stockline\', part.stockLine[currentStockLineShowIndex].currentSLIndexDraft + 1, part, part.stockLine[currentSLIndexDraft])"></i>\r\n                                                        <p>Page {{part.stockLine[currentStockLineShowIndex].currentSLIndexDraft + 1}} of {{part.stockLine.length}} Pages</p>\r\n                                                    </div>\r\n                                                \r\n\r\n                                                    <section class="receiving-stockline-view" *ngIf="part.stockLine">\r\n                                                        <div class="label-value-row">\r\n                                                            <div class="col-sm-3" style="margin-right: 20px;width: 210px !important;">\r\n                                                                <div class="card" style="margin-top: 13px;">\r\n                                                                    <div class="card-header" style="padding: 0 10px;">\r\n                                                                        <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure</h5>\r\n                                                                    </div>\r\n                                                                    <div class="card-body" style="padding: 0 12px 12px;">\r\n                                                                        <p><span class="label"><b>Company: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].companyText}}</span></p>\r\n                                                                        <p><span class="label"><b>BU: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].businessUnitText}}</span></p>\r\n                                                                        <p><span class="label"><b>Division: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].divisionText}}</span></p>\r\n                                                                        <p><span class="label"><b>Dept: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].departmentText}}</span></p>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                               \r\n                                                                <p><span class="label"><b>Site: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].siteText}}</span></p>\r\n                                                                <p><span class="label"><b>Warehouse: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].warehouseText}}</span></p>\r\n                                                                <p><span class="label"><b>Location: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].locationText}}</span></p>\r\n                                                                <p><span class="label"><b>Shelf: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].shelfText}}</span></p>\r\n                                                            </div>\r\n                                                            <div class="col-sm-3">\r\n\r\n                                                                <p><span class="label"><b>Bin: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].binText}}</span></p>\r\n                                                                <p><span class="label"><b>Obtain From: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].obtainFrom}}</span></p>\r\n                                                                <p><span class="label"><b>Owner: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].owner}}</span></p>\r\n                                                                <p><span class="label"><b>Traceable To: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].traceableTo}}</span></p>\r\n                                                                <p><span class="label"><b>MFG: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].manufacturerName}}</span></p>\r\n                                                                <p><span class="label"><b>MFG Lot Num: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].manufacturerLotNumber}}</span></p>\r\n                                                                <p><span class="label"><b>MFG Date: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].manufacturingDate}}</span></p>\r\n                                                                <p><span class="label"><b>MFG Trace: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].manufacturingTrace}}</span></p>\r\n                                                            </div>\r\n                                                           \r\n                                                            <div class="col-sm-3">\r\n\r\n                                                                <p><span class="label"><b>MFG Batch Num: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].manufacturingBatchNumber}}</span></p>\r\n                                                                <p><span class="label"><b>Expiration Date: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].expirationDate}}</span></p>\r\n                                                                <p><span class="label"><b>Unit Cost: </b></span><span class="value">\r\n                                                                    {{part.stockLine[currentStockLineShowIndex].purchaseOrderUnitCost}}</span></p>\r\n                                                                <p><span class="label"><b>Extended Cost: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].purchaseOrderExtendedCost}}</span></p>\r\n                                                                <p><span class="label"><b>Parts Cert Num: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].partCertificationNumber}}</span></p>\r\n                                                                <p><span class="label"><b>Cert By: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].certifiedByName}}</span></p>\r\n                                                                <p><span class="label"><b>Certified Date: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].certifiedDate}}</span></p>\r\n                                                                <p><span class="label"><b>Certified Due Date: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].certifiedDueDate}}</span></p>\r\n                                                            </div>\r\n                                                            <div class="col-sm-3">\r\n                                                                <p><span class="label"><b>Tag Type: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].tageTypeName}}</span></p>\r\n                                                                <p><span class="label"><b>Tag Date: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].tagDate}}</span></p>\r\n                                                                <p><span class="label"><b>ESN: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].engineSerialNumber}}</span></p>\r\n                                                                <p><span class="label"><b>Aircraft Tail Num: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].aircraftTailNumber}}</span></p>\r\n                                                                <p><span class="label"><b>Ship Via: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].shippingViaText}}</span></p>\r\n                                                                <p><span class="label"><b>Shipping Ref#/AWB: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].shippingReference}}</span></p>\r\n                                                                <p><span class="label"><b>Shipping Account: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].shippingAccount}}</span></p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </section>\r\n\r\n                                                    <section style="clear: both;" *ngIf="part.stockLine">\r\n                                                        <h3 class="add-details-heading" style="text-align: left;padding-top: 30px;">Serialized</h3>\r\n                                                        <div class="form-row">\r\n                                                            <div class="col-md-3">\r\n                                                                <p><span class="label"><b>Serial Num: </b></span><span class="value">{{part.stockLine[currentStockLineShowIndex].serialNumber ? part.stockLine[currentStockLineShowIndex].serialNumber : \'-\'}}</span></p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </section>\r\n\r\n                                                    <section *ngIf="part.timeLife">\r\n                                                        <h3 class="add-details-heading" style="text-align: left;">Time Life</h3>\r\n                                                        <div class="time-remaining">\r\n                                                            <table class="table table-bordered timelife-table">\r\n                                                                <thead>\r\n                                                                    <tr class="po-table-tr">\r\n                                                                        <th colspan="2" class="text-center">Cycles</th>\r\n                                                                        <th colspan="2" class="text-center">Time (in hours)</th>\r\n                                                                        <th colspan="2" class="text-center">Last (in hours)</th>\r\n                                                                    </tr>\r\n                                                                </thead>\r\n                                                                <tbody *ngIf="part.timeLife[currentStockLineShowIndex]">\r\n                                                                    <tr>\r\n                                                                        <td>Remaining</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].cyclesRemaining}}</td>\r\n                                                                        <td>Remaining</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].timeRemaining}}</td>\r\n                                                                        <td>Since New</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].lastSinceNew}}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since New</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].cyclesSinceNew}}</td>\r\n                                                                        <td>Since New</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].timeSinceNew}}</td>\r\n                                                                        <td>Since Ovh</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].lastSinceOVH}}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since Ovh</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].cyclesSinceOVH}}</td>\r\n                                                                        <td>Since Ovh</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].timeSinceOVH}}</td>\r\n                                                                        <td>Since Insp</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].lastSinceInspection}}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since Insp</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].cyclesSinceInspection}}</td>\r\n                                                                        <td>Since Insp</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].timeSinceInspection}}</td>\r\n                                                                        <td></td>\r\n                                                                        <td></td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Since Repair</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].cyclesSinceRepair}}</td>\r\n                                                                        <td>Since Repair</td>\r\n                                                                        <td>{{part.timeLife[currentStockLineShowIndex].timeSinceRepair}}</td>\r\n                                                                        <td></td>\r\n                                                                        <td></td>\r\n                                                                    </tr>\r\n                                                                </tbody>\r\n                                                            </table>\r\n                                                        </div>\r\n                                                    </section>\r\n\r\n                                                    \x3c!--<section>\r\n                                                        <h3 class="add-details-heading" style="text-align: left;">Calibrated Equipment</h3>\r\n                                                        <div class="form-row">\r\n                                                            <div class="col-md-3">\r\n                                                                <p><span class="label"><b>Inspection Date: </b></span><span class="value">-</span></p>\r\n                                                            </div>\r\n                                                            <div class="col-md-3">\r\n                                                                <p><span class="label"><b>Frequency: </b></span><span class="value">-</span></p>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </section>--\x3e\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </ng-container>\r\n                                </tbody>\r\n                            </table>\r\n                            </div>\r\n                        </div>\r\n                        \x3c!-- </div> --\x3e\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>'},mzUF:function(e,t,n){"use strict";n.r(t),t.default='<div class="x_panel">\r\n    <div class="x_content">\r\n        <div class="card" *ngIf="repairOrderHeaderData">\r\n            <div class="card-header">\r\n                <nav class="pull-left" aria-label="breadcrumb">\r\n                    <ol class="breadcrumb rpo-bcrumb" style="background-color: transparent;">\r\n                        <li class="breadcrumb-item active" aria-current="page">Receiving</li>\r\n                        \x3c!-- <li class="breadcrumb-item " aria-current="page">PO-RO</li> --\x3e\r\n                        <li class="breadcrumb-item " aria-current="page">Receiving RO Grid</li>\r\n                    </ol>\r\n                </nav>\r\n                <button class="btn btn-primary" (click)="toggle_epo_header=!toggle_epo_header">\r\n                    {{toggle_epo_header ? \'Collapse\' : \'Expand\'}}\r\n                </button>\r\n            </div>\r\n            <div class="card-body">\r\n                <h4 class="po-head">Receiving - RO Grid (Single RO)</h4>\r\n                <form id="" class="ro-grid-form" name="">\r\n                    <div class="form-row">\r\n                        <div class="col-md-8">\r\n                            <div class="form-group">\r\n                                <label style="float:left; width:auto; margin-right:20px; padding-top:3px;">Status:</label>\r\n                                <div>\r\n                                    <div class="pull-left" style="margin-top: 4px; margin-right: 15px;" *ngFor="let status of roStatus">\r\n                                        <label class="radio-cstm radio-cstm-d wauto">\r\n                                            <input type="radio" [checked]="status.value == repairOrderHeaderData.statusId" name="roStatus" class="form-control" value="{{status.value}}" disabled>\r\n                                            <span class="checkmark"></span>\r\n                                            {{status.label}}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-9">\r\n                        <div class="form-row">\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>RO Num</label>\r\n                                    <input class="form-control" type="text" name="repairOrderNumber" [(ngModel)]="repairOrderHeaderData.repairOrderNumber" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>Vendor Name</label>\r\n                                    <input class="form-control" type="text" name="vendorName" [(ngModel)]="repairOrderHeaderData.vendorName" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>Requisitioner</label>\r\n                                    <input class="form-control" type="text" name="requestedBy" [(ngModel)]="repairOrderHeaderData.requestedBy" disabled>\r\n                                </div>\r\n                            </div>\r\n                            \x3c!-- <div class="col-md-3">\r\n                                <div class="form-group">\r\n                                    <label>Approver</label>\r\n                                    <input class="form-control" type="text" name="approver" [(ngModel)]="repairOrderHeaderData.approver" disabled>\r\n                                </div>\r\n                            </div> --\x3e\r\n                        </div>\r\n                     </div>\r\n                    </div>\r\n                    <hr *ngIf="toggle_epo_header"/>\r\n                    \r\n                    <div class="form-row" *ngIf="toggle_epo_header">\r\n                        <div class="col-md-9">\r\n                        <div class="form-row">\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>Open Date</label>\r\n                                    <p-calendar class="pas-clder" [showIcon]="true" name="openDate" [(ngModel)]="repairOrderHeaderData.openDate" [disabled]="true"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Closed/Cancelled Date</label>\r\n                                    <p-calendar class="pas-clder" [showIcon]="true" name="closedDate" [(ngModel)]="repairOrderHeaderData.closedDate" [disabled]="true"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Need By</label>\r\n                                    <p-calendar class="pas-clder" [showIcon]="true" name="needByDate" [(ngModel)]="repairOrderHeaderData.needByDate" [disabled]="true"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Priority</label>\r\n                                    <input class="form-control" type="text" name="priority" [(ngModel)]="repairOrderHeaderData.priority" disabled>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-4">\r\n                                <div class="form-group">\r\n                                    <label>Vendor Code</label>\r\n                                    <input class="form-control" type="text" name="vendorCode" [(ngModel)]="repairOrderHeaderData.vendorCode" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Vendor Contact</label>\r\n                                    <input class="form-control" type="text" name="vendorContact" [(ngModel)]="repairOrderHeaderData.vendorContact" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Contact Phone</label>\r\n                                    <input class="form-control" type="text" name="contactPhone" [(ngModel)]="repairOrderHeaderData.vendorPhone" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Credit Limit &amp; Terms</label>\r\n                                    <div class="form-row">\r\n                                        <div class="col-sm-5">\r\n                                            <input class="form-control" type="text" name="creditLimit" [(ngModel)]="repairOrderHeaderData.creditLimit" disabled>\r\n                                        </div>\r\n                                        <div class="col-sm-7">\r\n                                            <input class="form-control" type="text" name="creditTerms" [(ngModel)]="repairOrderHeaderData.terms" disabled>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div class="col-md-4">                                \r\n                                \x3c!-- <div class="form-group">\r\n                                    <label>Approved Date</label>\r\n                                    <p-calendar class="pas-clder" [showIcon]="true" name="approvedDate" [(ngModel)]="repairOrderHeaderData.dateApproved" [disabled]="true"></p-calendar>\r\n                                </div> --\x3e\r\n                                <div class="form-group memo-popup-cstm" style="margin-top: 12px;">\r\n                                    <label>Memo  <i class="fa fa-info-circle fa-lg"   matTooltipPosition="above" matTooltip="{{repairOrderHeaderData.memo}}"></i></label>\r\n                                    <span   matTooltipPosition="above" matTooltip="{{repairOrderHeaderData.memo}}">\r\n                                        <input type="text" name="memo" pInputText class="form-control" value="{{repairOrderHeaderData.memo}}" disabled />\r\n                                    </span>\r\n                                   \r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm" style="margin-top: 15px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="resale" class="form-control" [(ngModel)]="repairOrderHeaderData.resale" disabled>\r\n                                            <span class="cr" style="opacity: 0.6;"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Resale\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="deferredReceiver" [(ngModel)]="repairOrderHeaderData.deferredReceiver" disabled>\r\n                                            <span class="cr" style="opacity: 0.6;"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Deferred Receiver\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-row">\r\n                            <div class="col-md-12" style="max-width: 100%;">\r\n                                <div class="form-group">\r\n                                    <label>Notes</label>\r\n                                    <textarea name="ponotes" class="form-control head-notes" rows="2" \r\n                                    [(ngModel)]="repairOrderHeaderData.notes" disabled></textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                     </div>\r\n                            <div class="col-md-3">\r\n                                <div class="card" style="margin-top: 20px;">\r\n                                    <div class="card-header" style="padding: 10px 12px;">\r\n                                        <h5 style="margin-bottom: 0; font-size: 12px;">Management Structure</h5>\r\n                                    </div>\r\n                                    <div class="card-body" style="padding: 4px 12px 6px;">\r\n                                        <div class="form-group" style="margin-bottom: 2px;">\r\n                                            \x3c!-- <label>Company</label> --\x3e\r\n                                            <input class="form-control" type="text" name="companyName" [(ngModel)]="headerManagementStructure.level1" disabled>\r\n                                        </div>\r\n                                        <div class="form-group" style="margin-bottom: 2px;">\r\n                                            \x3c!-- <label>BU</label> --\x3e\r\n                                            <input class="form-control" type="text" name="BUName" [(ngModel)]="headerManagementStructure.level2" disabled>\r\n                                        </div>\r\n                                        <div class="form-group" style="margin-bottom: 2px;">\r\n                                            \x3c!-- <label>Division</label> --\x3e\r\n                                            <input class="form-control" type="text" name="divisionName" [(ngModel)]="headerManagementStructure.level3" disabled>\r\n                                        </div>\r\n                                        <div class="form-group" style="margin-bottom: 2px;">\r\n                                            \x3c!-- <label>Dept</label> --\x3e\r\n                                            <input class="form-control" type="text" name="deptName" [(ngModel)]="headerManagementStructure.level4" disabled>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    \r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="table-responsive pas-table-cstm ero-table-cstm">\r\n            <table class="table table-bordered " id="po-table">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Item Num</th>\r\n                        <th>PN</th>\r\n                        <th>Alt PN</th>\r\n                        <th>PN Description</th>\r\n                        <th>Manufacturer</th>\r\n                        <th>Stock Type</th>\r\n                        <th>Discount</th>\r\n                        <th>Qty to Repair</th>\r\n                        <th>Unit Cost</th>\r\n                        <th>Extended Cost</th>\r\n                        <th>WO</th>\r\n                        <th>SO</th>\r\n                        <th>Sub-WO</th>\r\n                        <th colspan="4" style="text-align: center;">Management Structure</th>\r\n                        <th colspan="43"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody *ngIf="repairOrderData != undefined">\r\n                    <ng-container *ngFor="let part of repairOrderData;let row_index=index">\r\n                        <tr *ngIf="part.stockLine != null && part.stockLine.length > 0" class="parent-data">\r\n                            <td class="text-right">{{row_index + 1}}</td>\r\n                            <td>{{part.itemMaster.partNumber}}</td>\r\n                            <td>{{part.altEquiPartNumber}}</td>\r\n                            <td>{{part.itemMaster.partDescription}}</td>\r\n                            <td>{{part.itemMaster.manufacturer?.name}}</td>\r\n                            <td>{{part.itemMaster.isPma ? "PMA," : \'\' + part.itemMaster.isDer ? "DER" : \'\'}}</td>\r\n                            <td class="text-right">{{part.discountPerUnit}}</td>\r\n                            <td class="text-right">{{part.quantityToRepair}}</td>\r\n                            <td class="text-right">{{part.unitCost}}</td>\r\n                            <td class="text-right">{{part.extendedCost}}</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td style="min-width: 130px;">\r\n                                \x3c!-- <label style="width:90px;">Company:</label> --\x3e\r\n                                {{part.companyText}}\r\n                            </td>\r\n                            <td style="min-width: 130px;">\r\n                                \x3c!-- <label style="width:90px;">BU:</label> --\x3e\r\n                                {{part.businessUnitText}}\r\n                           </td>\r\n                            <td style="min-width: 130px;">\r\n                                \x3c!-- <label style="width:90px;">Division:</label> --\x3e\r\n                                {{part.divisionText}}\r\n                            </td>\r\n                            <td style="min-width: 130px;">\r\n                                \x3c!-- <label style="width:90px;">Dept:</label> --\x3e\r\n                                {{part.departmentText}}\r\n                            <th colspan="43"></th>\r\n                        </tr>\r\n\r\n                        <ng-container>\r\n                            <tr *ngIf="part.stockLine.length > 0">\r\n                                \x3c!--<th>Stock Line</th>--\x3e\r\n                                <td></td>\r\n                                <th>PN</th>\r\n                                <th>PN Description</th>\r\n                                <th>Ctrl Num</th>\r\n                                <th>Ctrl Id</th>\r\n                                <th>Cond</th>\r\n                                <th>Serial Num</th>\r\n                                <th>Receiver No.</th>\r\n\r\n                                <th>Qty Receieved</th>\r\n                                <th>Back Ord</th>\r\n                                <th>Unit Cost</th>\r\n                                <th>Extended Cost</th>\r\n                                <th>WO </th>\r\n                                <th>SO </th>\r\n                                <th>Sub-WO </th>\r\n                                <th colspan="4" style="text-align: center;">Management Structure</th>\r\n                                <th>Site</th>\r\n                                <th>Warehouse</th>\r\n                                <th>Location</th>\r\n                                <th>Shelf</th>\r\n                                <th>Bin</th>\r\n                                <th>Owner</th>\r\n                                <th>Name</th>\r\n                                <th>Obtain From</th>\r\n                                <th>Name</th>\r\n                                <th>Traceable to</th>\r\n                                <th>Name</th>\r\n                                <th>Trace</th>\r\n                                <th>Mfg</th>\r\n                                <th>Mfg Lot Num</th>\r\n                                <th>Mfg Date</th>\r\n                                <th>Mfg Batch Num</th>\r\n                                <th>Part Cert Num </th>\r\n                                <th>Certified Date</th>\r\n                                <th class="date">Certified Due Date</th>\r\n                                <th>Tagged By </th>\r\n                                <th class="date">Date Tagged </th>\r\n                                <th class="date">Tag Exp Date </th>\r\n                                <th>Shipping Ref#/AWB</th>\r\n                                <th>Ship Via</th>\r\n                                <th>Shipping Account</th>\r\n                                <th>ESN</th>\r\n                                <th>GL Account</th>\r\n                                <th>Time Life</th>\r\n                                <ng-container *ngIf="part.timeLife != null && part.timeLife.length > 0">\r\n                                    <th colspan="5">Cycles</th>\r\n                                    <th colspan="5">Time</th>\r\n                                    <th colspan="5">Last</th>\r\n                                </ng-container>\r\n\r\n                            </tr>\r\n                            <ng-container *ngFor="let SL of part.stockLine;let stockline_row_index=index">\r\n                                <tr *ngIf="!SL.isDeleted">\r\n                                    \x3c!--<td>{{SL.stockLineNumber}}</td>--\x3e\r\n                                    <td><a class="btn nobg btn-delete-cstm"\r\n                                        (click)="deleteStockLine(SL)" matTooltip="Delete" matTooltipPosition="above"><i class="fa fa-trash"></i></a></td>\r\n                                    <td>{{part.itemMaster.partNumber}}</td>\r\n                                    <td>{{part.itemMaster.partDescription}}</td>\r\n                                    <td>{{SL.controlNumber}}</td>\r\n                                    <td>{{SL.idNumber}}</td>\r\n                                    <td>{{SL.conditionText}}</td>\r\n                                    <td>{{SL.serialNumber}}</td>\r\n                                    <td>{{SL.receiverNumber}}</td>\r\n                                    <td class="text-right">{{SL.quantity}}</td>\r\n                                    <td class="text-right">{{part.quantityBackOrdered}}</td>\r\n    \r\n                                    <td class="text-right">{{SL.repairOrderUnitCost}}</td>\r\n                                    <td class="text-right">{{SL.repairOrderExtendedCost}}</td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                    <td style="min-width: 120px;">\r\n                                        \x3c!-- <label style="width:90px;">Company:</label> --\x3e\r\n                                        {{part.stockLine[stockline_row_index].companyText}}\r\n    \r\n                                    </td>\r\n                                    <td style="min-width: 120px;">\r\n                                        \x3c!-- <label style="width:90px;">BU:</label> --\x3e\r\n                                        {{part.stockLine[stockline_row_index].businessUnitText}}\r\n    \r\n                                    </td>\r\n                                    <td style="min-width: 120px;">\r\n                                        \x3c!-- <label style="width:90px;">Division:</label> --\x3e\r\n                                        {{part.stockLine[stockline_row_index].divisionText}}\r\n    \r\n                                    </td>\r\n                                    <td style="min-width: 120px;">\r\n                                        \x3c!-- <label style="width:90px;">Dept:</label> --\x3e\r\n                                        {{part.stockLine[stockline_row_index].departmentText}}\r\n    \r\n                                    </td>\r\n                                    <td>\r\n                                        {{part.stockLine[stockline_row_index].siteText}}\r\n    \r\n                                    </td>\r\n                                    <td>\r\n                                        {{part.stockLine[stockline_row_index].warehouseText}}\r\n    \r\n                                    </td>\r\n                                    <td>\r\n                                        {{part.stockLine[stockline_row_index].locationText}}\r\n    \r\n                                    </td>\r\n                                    <td>\r\n                                        {{part.stockLine[stockline_row_index].shelfText}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{part.stockLine[stockline_row_index].binText}}\r\n                                    </td>\r\n                                    <td>{{SL.ownerType == 1 ? \'Customer\' : SL.ownerType == 2 ? \'Vendor\' : SL.ownerType == 3 ? \'Company\' : \'Other\' }}</td>\r\n                                    <td>{{SL.ownerText}}</td>\r\n                                    <td>{{SL.obtainFromType == 1 ? \'Customer\' : SL.obtainFromType == 2 ? \'Vendor\' : SL.obtainFromType == 3 ? \'Company\' : \'Other\' }}</td>\r\n                                    \x3c!-- <td>{{SL.obtainFromType == 3 ? \'Vendor\' : SL.obtainFromType == 1 ? \'Customer\' : \'Other\' }}</td> --\x3e\r\n                                    <td>{{SL.obtainFromText}}</td>\r\n                                    \x3c!-- <td>{{SL.traceableToType == 3 ? \'Vendor\' : SL.traceableToType == 1 ? \'Customer\' : \'Other\' }}</td> --\x3e\r\n                                    <td>{{SL.traceableToType == 1 ? \'Customer\' : SL.traceableToType == 2 ? \'Vendor\' : SL.traceableToType == 3 ? \'Company\' : \'Other\' }}</td>\r\n                                    <td>{{SL.traceableToText}}</td>\r\n                                    <td>{{SL.manufacturingTrace}}</td>\r\n                                    <td>{{SL.manufacturerText}}</td>\r\n                                    <td>{{SL.manufacturerLotNumber}}</td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [maxDate]="currentDate"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [showIcon]="true"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.manufacturingDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>{{SL.manufacturingBatchNumber}}</td>\r\n                                    <td>{{SL.partCertificationNumber}}</td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [maxDate]="currentDate"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [showIcon]="true"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.certifiedDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [maxDate]="currentDate"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [showIcon]="true"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.certifiedDueDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>{{SL.certifiedBy}}</td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [maxDate]="currentDate"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [showIcon]="true"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.tagDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>\r\n                                        <p-calendar class="pas-clder pas-clder-po-table"\r\n                                                    [showIcon]="true"\r\n                                                    [disabled]="!SL.isEnabled"\r\n                                                    [ngModelOptions]="{standalone: true}"\r\n                                                    [(ngModel)]="SL.expirationDate"></p-calendar>\r\n                                    </td>\r\n                                    <td>{{SL.shippingReference}}</td>\r\n                                    <td>{{SL.shippingViaText}}</td>\r\n                                    <td>{{SL.shippingAccount}}</td>\r\n                                    <td>{{SL.engineSerialNumber}}</td>\r\n                                    <td>{{SL.glAccountText}}</td>\r\n                                    <td>\r\n                                        <input type="checkbox" disabled [checked]="part.itemMaster.isTimeLife == true" />\r\n                                    </td>\r\n                                    <ng-container *ngIf="part.timeLife != null && part.timeLife.length > 0 && part.timeLife[stockline_row_index] != null">\r\n                                        <td style="min-width: 106px;">Remaining {{part.timeLife[stockline_row_index].cyclesRemaining}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since New {{part.timeLife[stockline_row_index].cyclesSinceNew}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since OVH {{part.timeLife[stockline_row_index].cyclesSinceOVH}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since Insp {{part.timeLife[stockline_row_index].cyclesSinceInspection}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since Repair {{part.timeLife[stockline_row_index].cyclesSinceRepair}} hrs</td>\r\n    \r\n                                        <td style="min-width: 106px;">Remaining {{part.timeLife[stockline_row_index].timeRemaining}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since New {{part.timeLife[stockline_row_index].timeSinceNew}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since OVH {{part.timeLife[stockline_row_index].timeSinceOVH}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since Insp {{part.timeLife[stockline_row_index].timeSinceInspection}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since Repair {{part.timeLife[stockline_row_index].timeSinceRepair}} hrs</td>\r\n    \r\n                                        <td style="min-width: 106px;">Since New {{part.timeLife[stockline_row_index].lastSinceNew}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since OVH {{part.timeLife[stockline_row_index].lastSinceOVH}} hrs</td>\r\n                                        <td style="min-width: 106px;">Since Insp {{part.timeLife[stockline_row_index].lastSinceInspection}} hrs</td>\r\n                                    </ng-container>\r\n                                </tr>\r\n                            </ng-container>\r\n                            \r\n                        </ng-container>\r\n                    </ng-container>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <button class="btn btn-primary pull-right" (click)="CreateRepairOrderStockline()">Create Stock Line</button>\r\n    </div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},oGWj:function(e,t,n){"use strict";n.r(t),t.default=".x_panel {\n  border: none;\n}\n\nlabel {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.child-data td, .parent-data td {\n  background: #fff !important;\n  padding: 3px;\n}\n\n.child-header {\n  background: #fafafa !important;\n}\n\n.pas-table-cstm select, .pas-table-cstm input {\n  min-width: 90px;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.head-notes {\n  height: 28px !important;\n}\n\n.parent-data {\n  background: #fff !important;\n}\n\n.pas-table-cstm tr th {\n  min-width: 110px;\n  text-align: center;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}"},pQFC:function(e,t,n){"use strict";n.r(t),t.default=""},t8lN:function(e,t,n){"use strict";n.r(t),t.default='.x_panel {\n  border: none;\n}\n\n.rpo-bcrumb {\n  background-color: transparent;\n  color: #295d92;\n}\n\n.rpo-bcrumb li {\n  font-family: "Roboto";\n  font-weight: bold;\n}\n\n.right-addon .fa-search {\n  right: 14px;\n}\n\n.rro-btn {\n  margin-top: -60px;\n  float: right;\n  position: absolute;\n  right: 15px;\n}\n\n.ro-popupview-form label {\n  width: 93px;\n  text-align: right;\n}\n\n.roview-table-cstm {\n  min-height: 300px;\n  text-align: center;\n}\n\n.roview-table-cstm .child-data td, .roview-table-cstm .parent-data td {\n  background: #fff !important;\n  padding: 3px;\n}\n\n.roview-table-cstm .child-header {\n  background: #fafafa !important;\n}\n\n.ro-view-address label, .ro-view-receiving label {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\n.ro-view-address input[type=text], .ro-view-address input[type=number],\n.ro-view-receiving input[type=text], .ro-view-receiving input[type=number] {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.po-table-tr th {\n  padding: 8px 4px;\n  font-size: 8px;\n}\n\n.po-sub-tr {\n  background-color: #fafafa;\n}\n\n.po-sub-tr th {\n  padding: 8px 4px;\n  font-size: 8px;\n}\n\n.btn-po-details {\n  width: 85px !important;\n  padding: 6px 2px 6px !important;\n  color: #fff;\n  border-radius: 4px !important;\n}\n\n.btn-po-details:hover {\n  color: #fff;\n  background-color: #286090 !important;\n  border-color: #204d74;\n}\n\n.add-details-heading {\n  font-size: 20px;\n  margin-top: 20px;\n  text-align: center;\n  color: #337ab7;\n}\n\n.btn-ad-icons {\n  padding: 6px !important;\n  width: 24px !important;\n  height: 24px !important;\n  margin: -3px 2px 0 1px !important;\n  border-radius: 0 !important;\n}\n\n.time-remaining input {\n  width: 140px;\n  margin: 5px;\n  float: left;\n}\n\np .label {\n  width: 40%;\n  padding: 0;\n  display: inline-block;\n}\n\np .value {\n  width: 60%;\n  display: inline-block;\n}\n\n.label-value-row {\n  margin-top: 10px;\n}\n\n.receiving-stockline-view p {\n  margin-top: 10px;\n}\n\n.timelife-table tr td {\n  padding: 5px;\n}\n\n@media (min-width: 768px) {\n  .ro-view-address .col-md-3 {\n    max-width: 22%;\n    margin-right: 80px;\n  }\n\n  .ro-view-receiving .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}'},xS9c:function(e,t,n){"use strict";n.r(t),t.default='label {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ntable {\n  background: #fff;\n}\n\n.rpo-bcrumb {\n  background-color: transparent;\n  color: #295d92;\n}\n\n.rpo-bcrumb li {\n  font-family: "Roboto";\n  font-weight: bold;\n}\n\ninput[type=text], input[type=number], select, textarea {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\n.btn-cstm {\n  padding: 3px 8px !important;\n}\n\n.ro-status-radios {\n  margin-bottom: 15px;\n}\n\n.btn-cstm:before {\n  font-size: 11px;\n}\n\n.po-table-tr th {\n  padding: 8px 4px;\n  text-align: center;\n}\n\n.btn-po-details {\n  width: 75px !important;\n  padding: 6px 2px 19px !important;\n  color: #fff;\n  border-radius: 4px !important;\n}\n\n.btn-po-details-child {\n  width: 75px !important;\n  font-size: 12px !important;\n  color: #fff;\n  border-radius: 4px !important;\n}\n\n.btn-po-details:hover, .btn-po-details-child:hover {\n  color: #fff;\n  background-color: #286090 !important;\n  border-color: #204d74;\n}\n\n.add-details-heading {\n  font-size: 20px;\n  margin-top: 20px;\n  text-align: center;\n  color: #337ab7;\n}\n\n.btn-ad-icons {\n  padding: 6px !important;\n  width: 24px !important;\n  height: 24px !important;\n  margin: -3px 2px 0 1px !important;\n  border-radius: 0 !important;\n}\n\n.time-remaining input {\n  width: 40px;\n  margin: 5px;\n  float: left;\n}\n\n.time-remaining tr td input:first-child {\n  width: 50px;\n}\n\n.time-remaining span {\n  float: left;\n  margin-top: 10px;\n}\n\n.time-remaining table td {\n  padding: 4px;\n}\n\n.po-sub-tr {\n  background-color: #fafafa;\n}\n\n.po-sub-tr th {\n  padding: 8px 4px;\n}\n\n#adminsearchlocationajax .clr-red {\n  font-size: 17px;\n  line-height: 14px;\n}\n\n.stockGridpanel {\n  margin-left: 6px;\n  border: 1px solid #b0aeae;\n  padding: 0px 6px 20px;\n  margin-bottom: 5px;\n}\n\n.btn-po-details {\n  font-size: 10.5px !important;\n  font-weight: normal !important;\n}\n\n.more-info {\n  background-color: #e8e8e8;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n}\n\n.status-radios {\n  float: left;\n  width: auto;\n  margin-right: 20px;\n  padding-top: 3px;\n}\n\n.status-radios-alignment {\n  margin-top: 4px;\n  margin-right: 15px;\n}\n\n.expand-div-alignment {\n  margin-top: 10px;\n}\n\n.resale-align {\n  margin-top: 15px;\n}\n\n.receiver-align {\n  margin-top: 10px;\n}\n\n.staructure-body-input {\n  margin-bottom: 2px;\n  margin-top: 7px;\n}\n\n.plus-icon-align {\n  padding: 4px 6px !important;\n}'}}]);