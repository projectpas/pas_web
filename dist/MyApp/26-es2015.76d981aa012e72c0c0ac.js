(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{"/gHY":function(t,e,n){"use strict";n.r(e),e.default=".bg-white {\n  background-color: #fff;\n}\n\nlabel {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\ntable th {\n  padding: 4px;\n  text-align: center;\n}\n\ntable td {\n  padding: 4px;\n}\n\n.display-tble {\n  display: table;\n}\n\nselect {\n  max-width: 200px;\n  min-width: 150px;\n}\n\n.pull-right {\n  float: right !important;\n}"},"3Ofl":function(t,e,n){"use strict";n.r(e),e.default=".table-overflow {\n  overflow: auto !important;\n}\n\n.table > thead > tr > th {\n  font-size: 10px !important;\n  padding: 5px !important;\n}\n\n.dropbtn {\n  background-color: #3498db;\n  color: white;\n  padding: 16px;\n  font-size: 16px;\n  border: none;\n  cursor: pointer;\n}\n\n/* Dropdown button on hover & focus */\n\n.dropbtn:hover,\n.dropbtn:focus {\n  background-color: #2980b9;\n}\n\n/* The container <div> - needed to position the dropdown content */\n\n.dropdown {\n  position: relative;\n  display: inline-block;\n}\n\n/* Dropdown Content (Hidden by Default) */\n\n.dropdown-content {\n  display: none;\n  position: absolute;\n  background-color: #f1f1f1;\n  min-width: 160px;\n  box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n  z-index: 1;\n}\n\n/* Links inside the dropdown */\n\n.dropdown-content a {\n  color: black;\n  padding: 12px 16px;\n  text-decoration: none;\n  display: block;\n}\n\n/* Change color of dropdown links on hover */\n\n.dropdown-content a:hover {\n  background-color: #ddd;\n}\n\n/* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */\n\n.show {\n  display: block;\n}\n\n.vertical-menu-wolist {\n  width: 130px;\n}\n\n.vertical-menu-wolist a {\n  background-color: #eee;\n  display: block !important;\n  text-decoration: none;\n}\n\n.h-300 {\n  height: 300px;\n}\n\n.status-radio label {\n  text-align: left;\n  width: 140px;\n  margin-right: 0;\n  font-weight: normal;\n}"},"77XZ":function(t,e,n){"use strict";n.r(e),e.default=".managementstr input {\n  padding: 4px !important;\n}\n\ntable th {\n  padding: 4px;\n  text-align: center;\n}\n\n.stockline-audit table th {\n  min-width: 80px;\n}\n\ntable td {\n  padding: 4px;\n}\n\n.checkbx-stock {\n  padding-bottom: 15px;\n  padding-top: 5px;\n}\n\ninput.hidePlaceHolder {\n  color: transparent !important;\n}\n\ninput.hidePlaceHolder:focus,\ninput.hidePlaceHolder:hover,\ninput.hidePlaceHolder:active {\n  color: #000 !important;\n}\n\n.btn-adjhist-cstm i.fa-history {\n  color: #333333;\n}\n\n.min-w-100 {\n  min-width: 100px;\n}"},Ceth:function(t,e,n){"use strict";n.r(e),e.default=""},DW0Y:function(t,e,n){"use strict";n.r(e),e.default='\ufeff\ufeff\r\n        <div class="card new-card">\r\n            <div class="card-header bg-primary">\r\n              <div class="row">\r\n                <div class="col">\r\n                  <h4 class="new-card-heading">{{isEditMode ? \'Edit\' : \'Create\'}} Stock Line</h4>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    type="button"\r\n                    class="btn-sm new-btn-primary"\r\n                    [routerLink]="[\r\n                    \'/stocklinemodule/stocklinepages/app-stock-line-list\']">\r\n                    Stock Line List\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n                <div class="card-body new-card-body">\r\n            <form #stockLineSetupForm="ngForm">\r\n                <div class="form-row">                            \r\n                    <div class="col-md-3">\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5>General</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group" *ngIf="isEditMode">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="isCustomerStock" [(ngModel)]="stockLineForm.isCustomerStock" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Is Customer Stock\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>PN <span class="clr-red">*</span>\r\n                                    </label>\r\n                                    <div class="inner-addon right-addon inline-block">\r\n                                        <p-autoComplete field="partnumber" class="pautocomp-cstm" [(ngModel)]="stockLineForm.itemMasterId" name="partNumber" [suggestions]="partNumbersCollection" (completeMethod)="filterPartNumbers($event)" [size]="30" [minLength]="1" [dropdown]="true" (onSelect)="onPartNumberSelected($event.itemMasterId);" #partNum="ngModel" errorMessage="Records not found" [forceSelection]="true" (ngModelChange)="enableSave()" required></p-autoComplete>\r\n                                        <div *ngIf="partNum.invalid && (partNum.dirty || partNum.touched)" class="alert alert-danger alert-danger-cstm">\r\n                                                <div *ngIf="partNum.errors.required">\r\n                                                    <small> Part Number is required </small>\r\n                                                </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>PN Description</label>\r\n                                    <input class="form-control" type="text" name="pnDescription" [(ngModel)]="stockLineForm.partDescription" (ngModelChange)="enableSave()" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Revised PN</label>\r\n                                    <input class="form-control" type="text" name="revisedPart" [(ngModel)]="stockLineForm.revisedPart" (ngModelChange)="enableSave()" disabled>\r\n                                </div>\r\n                                <div class="form-group" style="margin-top: 10px;">\r\n                                    <div>\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="oemPma" class="form-control" value="true" (change)="onCheckOem();"  [(ngModel)]="stockLineForm.oem" (ngModelChange)="enableSave()">\r\n                                            <span class="checkmark"></span> OEM\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class="form-group" style="margin-top: 10px;">\r\n                                    <div>\r\n                                        <label class="radio-cstm wauto">\r\n                                            <input type="radio" name="oemPma" class="form-control" value="false" (change)="onCheckPMA();" [(ngModel)]="stockLineForm.oem" (ngModelChange)="enableSave()">\r\n                                            <span class="checkmark"></span> PMA\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div *ngIf="stockLineForm.oem == \'false\'">\r\n                                    <div>\r\n                                        <label class="control-label">\r\n                                            OEM PN <strong class="clr-red">*</strong>\r\n                                        </label>\r\n                                    </div>\r\n                                    <div>\r\n                                        <p-autoComplete [(ngModel)]="stockLineForm.isOemPNId"\r\n                                                        name="partnumber"  (ngModelChange)="enableSave()"\r\n                                                        (onSelect)="selectedOEM($event)"\r\n                                                        field="partnumber"\r\n                                                        (completeMethod)="filterpn($event)"\r\n                                                        [suggestions]="oempnList" [forceSelection]="true"\r\n                                                        [size]="30" [minLength]="1"\r\n                                                        errorMessage="Records not found"\r\n                                                        [dropdown]="true" class="p-autoComplete-ctsm" required>\r\n                                        </p-autoComplete>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="isDER" [(ngModel)]="stockLineForm.isDER" (ngModelChange)="enableSave()">\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            DER\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Item Group</label>\r\n                                    <input class="form-control" type="text" name="itemGroup" [(ngModel)]="stockLineForm.itemGroup" (ngModelChange)="enableSave()" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Condition <span class="clr-red">*</span></label>\r\n                                    <select name="conditionId" [(ngModel)]="stockLineForm.conditionId" (change)="onSelectConditionType(stockLineForm.conditionId); getUnitCostSalePrice()" (ngModelChange)="enableSave()" required>\r\n                                        <option value="0">-- Select --</option>\r\n                                        <option *ngFor="let condition of allConditionInfo" [ngValue]="condition.value">{{condition.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="isSerialized" [(ngModel)]="stockLineForm.isSerialized" (ngModelChange)="enableSave()" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Is Serialized\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group" *ngIf="!hideSerialNumber">\r\n                                    <label>Serial Num <span class="clr-red">*</span></label>\r\n                                    <input class="form-control" type="text" name="serialNumber" #serialNumber="ngModel" [(ngModel)]="stockLineForm.serialNumber" (ngModelChange)="enableSave()" required>\r\n                                    <div *ngIf="serialNumber.invalid && (serialNumber.dirty || serialNumber.touched)" class="alert alert-danger alert-danger-cstm">\r\n                                        <div *ngIf="serialNumber.errors.required">\r\n                                            <small> Serial Num is required </small>\r\n                                        </div>\r\n                                    </div> \r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Stockline Num</label>\r\n                                    <input class="form-control" type="text" name="stockLineNumber" [(ngModel)]="stockLineForm.stockLineNumber" (ngModelChange)="enableSave()" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Cntrl Num</label>\r\n                                    <input class="form-control" type="text" name="controlNumber" [(ngModel)]="stockLineForm.controlNumber" (ngModelChange)="enableSave()" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Cntrl ID Num</label>\r\n                                    <input class="form-control" type="text" name="idNumber" [(ngModel)]="stockLineForm.idNumber" (ngModelChange)="enableSave()" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label matTooltip="National Stock Number" matTooltipPosition="right">NSN</label>\r\n                                    <input class="form-control" type="text" name="nationalStockNumber" [(ngModel)]="stockLineForm.nationalStockNumber" (ngModelChange)="enableSave()">\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label matTooltip="Engine Serial Number" matTooltipPosition="right">ESN</label>\r\n                                    <input class="form-control" type="text" name="engineSerialNumber" [(ngModel)]="stockLineForm.engineSerialNumber" (ngModelChange)="enableSave()">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5>Expiration</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group">\r\n                                    <label>Days Since Received</label>\r\n                                    <input class="form-control text-right" type="text" name="daysReceived" [(ngModel)]="stockLineForm.daysReceived" (ngModelChange)="enableSave()" disabled>\r\n                                </div> \r\n                                <div class="form-group">\r\n                                    <label>Days Since Mfg</label>\r\n                                    <input class="form-control text-right" type="text" name="manufacturingDays" [(ngModel)]="stockLineForm.manufacturingDays" (ngModelChange)="enableSave()" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Days Since Tagged</label>\r\n                                    <input class="form-control text-right" type="text" name="tagDays" [(ngModel)]="stockLineForm.tagDays" (ngModelChange)="enableSave()" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Days Opened</label>\r\n                                    <input class="form-control text-right" type="text" name="openDays" [(ngModel)]="stockLineForm.openDays" (ngModelChange)="enableSave()" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm checkbox-cstm-d" style="margin-top: 10px;">\r\n                                        <label>\r\n                                            <input type="checkbox" name="shelfLife" [(ngModel)]="stockLineForm.shelfLife" (ngModelChange)="enableSave()" disabled>\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Shelf Life\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group" *ngIf="stockLineForm.shelfLife">\r\n                                    <label>Shelf Life Exp Date</label>\r\n                                    <p-calendar class="workflow-clder" name="shelfLifeExpirationDate" [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [showIcon]="true" [minDate]="minDateValue" [(ngModel)]="stockLineForm.shelfLifeExpirationDate" (ngModelChange)="enableSave()"></p-calendar>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5>Application</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group">\r\n                                    <label matTooltip="Next Higher Assembly" matTooltipPosition="right">NHA <span *ngIf="allNHAInfo.length > 0" class="clr-red">*</span></label>\r\n                                    <select [(ngModel)]="stockLineForm.nhaItemMasterId" name="nha" [required]="allNHAInfo.length > 0" (ngModelChange)="enableSave()">\r\n                                        <option value="0">-- Select --</option>\r\n                                        <option *ngFor="let item of allNHAInfo" [ngValue]="item.nhaItemMasterId">{{item.partNumber}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label matTooltip="Top Level Assembly" matTooltipPosition="right">TLA <span *ngIf="allTLAInfo.length > 0" class="clr-red">*</span></label>\r\n                                    <select [(ngModel)]="stockLineForm.tlaItemMasterId" name="tla" [required]="allTLAInfo.length > 0" (ngModelChange)="enableSave()">\r\n                                        <option value="0">-- Select --</option>\r\n                                        <option *ngFor="let item of allTLAInfo" [ngValue]="item.tlaItemMasterId">{{item.partNumber}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Aircraft Tail Num</label>\r\n                                    <input class="form-control" type="text" name="aircraftTailNumber" [(ngModel)]="stockLineForm.aircraftTailNumber" (ngModelChange)="enableSave()">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-3">\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5>Manufacturer</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group">\r\n                                    <label>Manufacturer <span class="clr-red">*</span></label>\r\n                                    <select [(ngModel)]="stockLineForm.manufacturerId" name="manufacturerId" (change)="onSelectManufacturer(stockLineForm.manufacturerId)" (ngModelChange)="enableSave()" required>\r\n                                        <option value="0">-- Select --</option>\r\n                                        <option *ngFor="let manufacturer of allManufacturerInfo" [ngValue]="manufacturer.value">{{manufacturer.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Mfg. Lot Num</label>\r\n                                    <input class="form-control" type="text" name="manufacturerLotNumber" [(ngModel)]="stockLineForm.manufacturerLotNumber" (ngModelChange)="enableSave()">\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Mfg. Batch Num</label>\r\n                                    <input class="form-control" type="text" name="manufacturingBatchNumber" [(ngModel)]="stockLineForm.manufacturingBatchNumber" (ngModelChange)="enableSave()">\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Mfg. Date</label>\r\n                                    <p-calendar class="workflow-clder" [showIcon]="true" [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [maxDate]="minDateValue" name="manufacturingDate" [(ngModel)]="stockLineForm.manufacturingDate" (ngModelChange)="enableSave()"></p-calendar>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5>Acquisition</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group">\r\n                                    <label>Acquisition Type</label>\r\n                                    <select name="acquistionTypeId" [(ngModel)]="stockLineForm.acquistionTypeId" (ngModelChange)="enableSave()">\r\n                                        <option value="0">-- Select --</option>\r\n                                        <option *ngFor="let item of assetAcquisitionTypeList" [ngValue]="item.value">{{item.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Order Date</label>\r\n                                    <p-calendar class="workflow-clder" [showIcon]="true" [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [maxDate]="minDateValue" name="orderDate" [(ngModel)]="stockLineForm.orderDate" (ngModelChange)="enableSave()"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Entry Date</label>\r\n                                    <p-calendar class="workflow-clder" [showIcon]="true" [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" name="entryDate" [maxDate]="minDateValue" [(ngModel)]="stockLineForm.entryDate" (ngModelChange)="enableSave()"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Expiration Date</label>\r\n                                    <p-calendar class="workflow-clder" [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [showIcon]="true" name="expirationDate" [minDate]="minDateValue" [(ngModel)]="stockLineForm.expirationDate" (ngModelChange)="enableSave()"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Vendor</label>\r\n                                    <p-autoComplete field="label" class="pautocomp-cstm" [(ngModel)]="stockLineForm.vendorId" name="vendorId" [suggestions]="vendorNames" (completeMethod)="filterVendorNames($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true" (ngModelChange)="enableSave()" [disabled]="disableVendor">\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>PO Num</label>\r\n                                    <select [(ngModel)]="stockLineForm.purchaseOrderId" name="purchaseOrderId" (change)="onChangePONum(stockLineForm.purchaseOrderId)" (ngModelChange)="enableSave()">\r\n                                        <option value="0">-- Select --</option>\r\n                                        <option *ngFor="let po of allPolistInfo" [ngValue]="po.purchaseOrderId">{{po.purchaseOrderNumber}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>RO Num</label>\r\n                                    <select [(ngModel)]="stockLineForm.repairOrderId" name="repairOrderId" (change)="onChangeRONum(stockLineForm.repairOrderId)" (ngModelChange)="enableSave()">\r\n                                        <option value="0">-- Select --</option>\r\n                                        <option *ngFor="let manufacturer of allRolistInfo" [ngValue]="manufacturer.repairOrderId">{{manufacturer.repairOrderNumber}}\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Requestor</label>\r\n                                    <p-autoComplete field="label" class="pautocomp-cstm" [(ngModel)]="stockLineForm.requestorId" name="requestorId" [suggestions]="certifyByNames" (completeMethod)="filterEmployees($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" (ngModelChange)="enableSave()" [forceSelection]="true">\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Received Date <span class="clr-red">*</span></label>\r\n                                    <p-calendar class="workflow-clder" [showIcon]="true" name="receivedDate" [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [(ngModel)]="stockLineForm.receivedDate" #receivedDate="ngModel" (ngModelChange)="enableSave()" required></p-calendar>\r\n                                    <div *ngIf="receivedDate.invalid && (receivedDate.dirty || receivedDate.touched)" class="alert alert-danger alert-danger-cstm">\r\n                                        <div *ngIf="receivedDate.errors.required">\r\n                                            <small> Received Date is required </small>\r\n                                        </div>\r\n                                    </div> \r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Receiver Num <span class="clr-red">*</span></label>\r\n                                    <input class="form-control" type="text" name="receiverNumber" [(ngModel)]="stockLineForm.receiverNumber" #receiverNumber="ngModel" (ngModelChange)="enableSave()" required>\r\n                                    <div *ngIf="receiverNumber.invalid && (receiverNumber.dirty || receiverNumber.touched)" class="alert alert-danger alert-danger-cstm">\r\n                                        <div *ngIf="receiverNumber.errors.required">\r\n                                            <small> Received Num is required </small>\r\n                                        </div>\r\n                                    </div> \r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Reconciliation Num</label>\r\n                                    <input class="form-control" type="text" name="reconciliationNumber" [(ngModel)]="stockLineForm.reconciliationNumber" (ngModelChange)="enableSave()">\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>WO Num</label>\r\n                                    <p-autoComplete field="label" class="pautocomp-cstm" [(ngModel)]="stockLineForm.workOrderId" name="workOrderId" [suggestions]="allWorkOrderDetails" (completeMethod)="filterWorkOrderList($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" (ngModelChange)="enableSave()" [forceSelection]="true">\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5>Traceability</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group">\r\n                                    <label>Obtain From</label>\r\n                                    <select [(ngModel)]="stockLineForm.obtainFromType" name="obtainFromType" (change)="onSelectObrainFrom()" (ngModelChange)="enableSave()">\r\n                                        <option value="0">-- Select --</option>\r\n                                        <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">{{item.moduleName}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <div class="form-row" *ngIf="stockLineForm.obtainFromType == 1">\r\n                                        <div class="col-sm-12">\r\n                                            <p-autoComplete field="label" class="pautocomp-cstm" [(ngModel)]="stockLineForm.obtainFrom" name="obtainFromCustomer" [suggestions]="customerNames" (completeMethod)="filterCustomerNames($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" (ngModelChange)="enableSave()" [forceSelection]="true"></p-autoComplete>                                    \r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-row" *ngIf="stockLineForm.obtainFromType == 2">\r\n                                        <div class="col-sm-12">\r\n                                            <p-autoComplete field="label" class="pautocomp-cstm" [(ngModel)]="stockLineForm.obtainFrom" name="obtainFromVendor" [suggestions]="vendorNames" (completeMethod)="filterVendorNames($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" (ngModelChange)="enableSave()" [forceSelection]="true">\r\n                                            </p-autoComplete>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-row" *ngIf="stockLineForm.obtainFromType == 9">\r\n                                        <div class="col-sm-12">\r\n                                            <p-autoComplete field="label" class="pautocomp-cstm"\r\n                                                [(ngModel)]="stockLineForm.obtainFrom" name="obtainFromCompany" \r\n                                                [suggestions]="companyNames" \r\n                                                (completeMethod)="filterCompanyNames($event)" \r\n                                                [size]="30" \r\n                                                [minLength]="1"\r\n                                                [dropdown]="true"\r\n                                                errorMessage="Records not found" \r\n                                                (ngModelChange)="enableSave()"\r\n                                                [forceSelection]="true">\r\n                                            </p-autoComplete>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-row" *ngIf="stockLineForm.obtainFromType == 4">\r\n                                        <div class="col-sm-12">\r\n                                            <input class="form-control" type="text" name="obtainFromOther" [(ngModel)]="stockLineForm.obtainFrom" (ngModelChange)="enableSave()">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Owner</label>\r\n                                    <select [(ngModel)]="stockLineForm.ownerType" name="ownerType" (change)="onSelectOwner()" (ngModelChange)="enableSave()">\r\n                                        <option value="0">-- Select --</option>\r\n                                        <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">{{item.moduleName}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <div class="form-row" *ngIf="stockLineForm.ownerType == 1">\r\n                                        <div class="col-sm-12">\r\n                                            <p-autoComplete field="label" class="pautocomp-cstm" [(ngModel)]="stockLineForm.owner" name="ownerCustomer" [suggestions]="customerNames" (completeMethod)="filterCustomerNames($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" (ngModelChange)="enableSave()" [forceSelection]="true"></p-autoComplete>                                    \r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-row" *ngIf="stockLineForm.ownerType == 2">\r\n                                        <div class="col-sm-12">\r\n                                            <p-autoComplete field="label" class="pautocomp-cstm" [(ngModel)]="stockLineForm.owner" name="ownerVendor" [suggestions]="vendorNames" (completeMethod)="filterVendorNames($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" (ngModelChange)="enableSave()" [forceSelection]="true">\r\n                                            </p-autoComplete>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-row" *ngIf="stockLineForm.ownerType == 9">\r\n                                        <div class="col-sm-12">\r\n                                            <p-autoComplete field="label" class="pautocomp-cstm"\r\n                                                [(ngModel)]="stockLineForm.owner" name="ownerCompany" \r\n                                                [suggestions]="companyNames" \r\n                                                (completeMethod)="filterCompanyNames($event)" \r\n                                                [size]="30" \r\n                                                [minLength]="1"\r\n                                                [dropdown]="true"\r\n                                                errorMessage="Records not found" \r\n                                                (ngModelChange)="enableSave()"\r\n                                                [forceSelection]="true">\r\n                                            </p-autoComplete>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-row" *ngIf="stockLineForm.ownerType == 4">\r\n                                        <div class="col-sm-12">\r\n                                            <input class="form-control" type="text" name="ownerOther" [(ngModel)]="stockLineForm.owner" (ngModelChange)="enableSave()">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Traceable To</label>\r\n                                    <select [(ngModel)]="stockLineForm.traceableToType" name="traceableToType" (change)="onSelectTraceableTo()" (ngModelChange)="enableSave()">\r\n                                        <option value="0">-- Select --</option>\r\n                                        <option *ngFor="let item of moduleListDropdown" [ngValue]="item.moduleId">{{item.moduleName}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <div class="form-row" *ngIf="stockLineForm.traceableToType == 1">\r\n                                        <div class="col-sm-12">\r\n                                            <p-autoComplete field="label" class="pautocomp-cstm" [(ngModel)]="stockLineForm.traceableTo" name="traceableToCustomer" [suggestions]="customerNames" (completeMethod)="filterCustomerNames($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" (ngModelChange)="enableSave()" [forceSelection]="true"></p-autoComplete>                                    \r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-row" *ngIf="stockLineForm.traceableToType == 2">\r\n                                        <div class="col-sm-12">\r\n                                            <p-autoComplete field="label" class="pautocomp-cstm" [(ngModel)]="stockLineForm.traceableTo" name="traceableToVendor" [suggestions]="vendorNames" (completeMethod)="filterVendorNames($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" (ngModelChange)="enableSave()" [forceSelection]="true">\r\n                                            </p-autoComplete>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-row" *ngIf="stockLineForm.traceableToType == 9">\r\n                                        <div class="col-sm-12">\r\n                                            <p-autoComplete field="label" class="pautocomp-cstm"\r\n                                                [(ngModel)]="stockLineForm.traceableTo" name="traceableToCompany" \r\n                                                [suggestions]="companyNames" \r\n                                                (completeMethod)="filterCompanyNames($event)" \r\n                                                [size]="30" \r\n                                                [minLength]="1"\r\n                                                [dropdown]="true"\r\n                                                errorMessage="Records not found" \r\n                                                (ngModelChange)="enableSave()"\r\n                                                [forceSelection]="true">\r\n                                            </p-autoComplete>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="form-row" *ngIf="stockLineForm.traceableToType == 4">\r\n                                        <div class="col-sm-12">\r\n                                            <input class="form-control" type="text" name="traceableToOther" [(ngModel)]="stockLineForm.traceableTo" (ngModelChange)="enableSave()">\r\n                                        </div>\r\n                                    </div>\r\n                                </div>   \r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5>Export/International</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group">\r\n                                    <label matTooltip="Export Control Classification Number" matTooltipPosition="above">ECCN</label>\r\n                                    <input class="form-control" type="text" name="ExportECCN" [(ngModel)]="stockLineForm.exportECCN" (ngModelChange)="enableSave()">\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label matTooltip="International Traffic in Arms Regulations Number" matTooltipPosition="above">ITAR</label>\r\n                                    <input class="form-control" type="text" name="ITARNumber" [(ngModel)]="stockLineForm.itarNumber" (ngModelChange)="enableSave()">\r\n                                </div> \r\n                            </div>\r\n                        </div>                                 \r\n                    </div>\r\n\r\n                    <div class="col-md-3">\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5>Inventory</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group">\r\n                                    <label>Qty On Hand <span class="clr-red">*</span></label>\r\n                                    <input class="form-control text-right" type="text" pKeyFilter="pint" name="QuantityOnHand" (change)="resetQtyFields(); calculateQtyAvailable()" [(ngModel)]="stockLineForm.quantityOnHand" #quantityOnHand="ngModel" [disabled]="disableQtyOnHand" (ngModelChange)="enableSave()" required>\r\n                                    <div *ngIf="quantityOnHand.invalid && (quantityOnHand.dirty || quantityOnHand.touched)" class="alert alert-danger alert-danger-cstm">\r\n                                        <div *ngIf="quantityOnHand.errors.required">\r\n                                            <small> Qty On Hand is required </small>\r\n                                        </div>\r\n                                    </div>   \r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Qty Reserved</label>\r\n                                    <input class="form-control  text-right" type="text" pKeyFilter="pint" name="QuantityReserved" (change)="resetQtyIssued(); onChangeQtyReserved()" [(ngModel)]="stockLineForm.quantityReserved" [disabled]="stockLineForm.quantityOnHand == null" (ngModelChange)="enableSave()">\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Qty Issued</label>\r\n                                    <input class="form-control text-right" type="text" pKeyFilter="pint" name="QuantityIssued" (change)="calcQtyReservedByQtyIssued()" [(ngModel)]="stockLineForm.quantityIssued" [disabled]="stockLineForm.quantityOnHand == null" (ngModelChange)="enableSave()">\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Qty Avail</label>\r\n                                    <input class="form-control text-right" type="text" name="quantityAvailable" [(ngModel)]="stockLineForm.quantityAvailable" (ngModelChange)="enableSave()" disabled>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>PO Unit Cost</label>                                   \r\n                                    <input class="form-control text-right" type="text" pInputText pKeyFilter="money" name="purchaseOrderUnitCost" (change)="onChangePOUnitCost()" [(ngModel)]="stockLineForm.purchaseOrderUnitCost" (ngModelChange)="enableSave()">\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>RO Unit Cost</label>\r\n                                    <input class="form-control text-right" type="text" pInputText pKeyFilter="money" name="repairOrderUnitCost" (change)="onChangeROUnitCost()" [(ngModel)]="stockLineForm.repairOrderUnitCost" (ngModelChange)="enableSave()">\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Unit Sale Price</label>\r\n                                    <input class="form-control text-right" type="text" pInputText pKeyFilter="money" name="unitSalesPrice" (change)="onChangeUnitSalesPrice()" [(ngModel)]="stockLineForm.unitSalesPrice" (ngModelChange)="enableSave()">\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Core Cost/Unit</label>\r\n                                    <input class="form-control text-right" type="text" pInputText pKeyFilter="money" name="coreUnitCost" (change)="onChangeCoreCost()" [(ngModel)]="stockLineForm.coreUnitCost" (ngModelChange)="enableSave()">\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>GL Account</label>\r\n                                    <input class="form-control" type="text" name="glAccountName" [(ngModel)]="stockLineForm.glAccountName" (ngModelChange)="enableSave()" disabled>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5>Location</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group">\r\n                                    <label>Site <span class="clr-red">*</span></label>\r\n                                    <select [(ngModel)]="stockLineForm.siteId" name="siteId" (change)="getWareHouseList(stockLineForm.siteId)" (ngModelChange)="enableSave()" required>\r\n                                        <option value="0">-- Select --</option>\r\n                                        <option *ngFor="let site of allSites" [ngValue]="site.value">{{site.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Warehouse</label>\r\n                                    <select [(ngModel)]="stockLineForm.warehouseId" name="warehouseId" (change)="getLocationList(stockLineForm.warehouseId)" (ngModelChange)="enableSave()">\r\n                                        <option value="0">-- Select --</option>\r\n                                        <option *ngFor="let site of allWareHouses" [ngValue]="site.value">{{site.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Location</label>\r\n                                    <select [(ngModel)]="stockLineForm.locationId" name="locationId" (change)="getShelfList(stockLineForm.locationId)" (ngModelChange)="enableSave()">\r\n                                        <option value="0">-- Select --</option>\r\n                                        <option *ngFor="let site of allLocations" [ngValue]="site.value">{{site.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Shelf</label>\r\n                                    <select [(ngModel)]="stockLineForm.shelfId" name="shelfId" (change)="getBinList(stockLineForm.shelfId)" (ngModelChange)="enableSave()">\r\n                                        <option value="0">-- Select --</option>\r\n                                        <option *ngFor="let site of allShelfs" [ngValue]="site.value">{{site.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Bin</label>\r\n                                    <select [(ngModel)]="stockLineForm.binId" name="binId" (ngModelChange)="enableSave()">\r\n                                        <option value="0">-- Select --</option>\r\n                                        <option *ngFor="let site of allBins" [ngValue]="site.value">{{site.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div> \r\n\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5>Lot & Consignment</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group">\r\n                                    <label>Lot Num</label>\r\n                                    <input class="form-control" type="text" name="lotNumber" [(ngModel)]="stockLineForm.lotNumber" (ngModelChange)="enableSave()" />\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Lot Description</label>\r\n                                    <input class="form-control" type="text" name="lotDescription" [(ngModel)]="stockLineForm.lotDescription" (ngModelChange)="enableSave()" />\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Lot Cost</label>\r\n                                    <input class="form-control text-right" type="text" pInputText pKeyFilter="money" name="lotCost" (change)="onChangelotCost()" [(ngModel)]="stockLineForm.lotCost" (ngModelChange)="enableSave()">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5>Warnings</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm">\r\n                                        <label style="margin-top:10px">\r\n                                            <input type="checkbox" name="blackListed" [(ngModel)]="stockLineForm.blackListed" (ngModelChange)="enableSave()">\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Black List\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group memo-popup-cstm col-sm-12"  *ngIf="stockLineForm.blackListed == true" (ngModelChange)="enableSave()">\r\n                                    <div class="col-sm-11" style="margin-top:-8px">\r\n                                    <span>\r\n                                      <div [innerHTML]="stockLineForm.blackListedReason"\r\n                                      [matTooltip]="parsedText(stockLineForm.blackListedReason)" class="form-control"\r\n                                style="width:100%;" class="text_editor_box"></div> \r\n                                    </span>\r\n                                    </div>\r\n                                    <div class="col-sm-1" style="margin-top:-4px">\r\n                                    <i class="fa fa-pencil" style="margin-top:-3px" data-toggle="modal"\r\n                                     data-target="#textarea-popup"  (ngModelChange)="enableSave()"\r\n                                     matTooltip="Add Black List Reason"\r\n                                      matTooltipPosition="above" (click)="onAddTextAreaInfo(\'blackListedReason\')"></i>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm">\r\n                                        <label style="margin-top:10px"> \r\n                                            <input type="checkbox" name="accident" [(ngModel)]="stockLineForm.accident" (ngModelChange)="enableSave()">\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Accident\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group memo-popup-cstm col-sm-12"\r\n                                 *ngIf="stockLineForm.accident == true">\r\n                                   <div class="col-sm-11" style="margin-top:-8px">\r\n                                    <span >\r\n                                      <div [innerHTML]="stockLineForm.accidentReason"\r\n                                      [matTooltip]="parsedText(stockLineForm.accidentReason)"\r\n                                      class="form-control"\r\n                                      style="width:100%;" class="text_editor_box"></div>\r\n                                    </span>\r\n                                    </div>\r\n                                    <div class="col-sm-1" style="margin-top:-4px">\r\n                                    <i class="fa fa-pencil" data-toggle="modal" (ngModelChange)="enableSave()"\r\n                                     data-target="#textarea-popup" matTooltip="Add Accident Reason"\r\n                                      matTooltipPosition="above"\r\n                                       (click)="onAddTextAreaInfo(\'accidentReason\')"></i>\r\n                                   </div>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm">\r\n                                        <label style="margin-top:10px">\r\n                                            <input type="checkbox" name="incident" [(ngModel)]="stockLineForm.incident" (ngModelChange)="enableSave()">\r\n                                            <span class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                            Incident\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group memo-popup-cstm col-sm-12" \r\n                                 *ngIf="stockLineForm.incident == true">\r\n                                    <div class="col-sm-11" style="margin-top:-8px">\r\n                                    <span>\r\n                                         <div [innerHTML]="stockLineForm.incidentReason" \r\n                                         class="form-control" (ngModelChange)="enableSave()"\r\n                                         [matTooltip]="parsedText(stockLineForm.incidentReason)"\r\n                                         matTooltipPosition="above"\r\n                                      style="width:100%;" class="text_editor_box"></div>\r\n                                        </span>\r\n                                        </div>\r\n                                        <div class="col-sm-1" style="margin-top:-4px">\r\n                                    <i class="fa fa-pencil" data-toggle="modal" data-target="#textarea-popup" matTooltip="Add Incident Reason" matTooltipPosition="above" (ngModelChange)="enableSave()" (click)="onAddTextAreaInfo(\'incidentReason\')"></i>\r\n                                </div>\r\n                                </div>                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="col-md-3">\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5>Management Structure <span class="clr-red">*</span></h5>\r\n                            </div>\r\n                            <div class="card-body" style="padding: 12px 12px 4px;">\r\n                                \x3c!-- [ngClass]="managementValidCheck ? \'select-validate-cstm\' : \'\'" --\x3e\r\n                                <div class="form-group">\r\n                                    <select class="form-control" name="primaryCompany" [(ngModel)]="headerInfo.companyId" \r\n                                    (change)="getBUList(headerInfo.companyId);" #mCompanyName (ngModelChange)="enableSave()" required>\r\n                                        <option value="0">Select</option>\r\n                                        <option *ngFor="let name of maincompanylist" [ngValue]="name.value">{{name.label}}</option>\r\n                                    </select>\r\n                                    <div *ngIf="mCompanyName.invalid && (mCompanyName.dirty || mCompanyName.touched)" class="alert alert-danger alert-danger-cstm">\r\n                                        <div *ngIf="mCompanyName.errors.required">\r\n                                            <small> Company Name is required </small>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <select [(ngModel)]="headerInfo.buId" name="primaryBU" (change)="getDivisionlist(headerInfo.buId)" class="form-control" (ngModelChange)="enableSave()">\r\n                                        <option value="0">Select</option>\r\n                                        <option *ngFor="let name of bulist" [ngValue]="name.value">{{name.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <select class="form-control" [(ngModel)]="headerInfo.divisionId" name="primaryDivision" (change)="getDepartmentlist(headerInfo.divisionId)" (ngModelChange)="enableSave()">\r\n                                        <option value="0">Select</option>\r\n                                        <option *ngFor="let name of divisionlist" [ngValue]="name.value">{{name.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <select class="form-control" [(ngModel)]="headerInfo.departmentId" name="primaryDept" (change)="getDepartmentId(headerInfo.departmentId)" (ngModelChange)="enableSave()">\r\n                                        <option value="0">Select</option>\r\n                                        <option *ngFor="let name of departmentList" [ngValue]="name.value">{{name.label}}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5>Certification, Tag and Inspection</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group">\r\n                                    <label>Part Cert Num</label>\r\n                                    <input class="form-control" type="text" name="partCertificationNumber" [(ngModel)]="stockLineForm.partCertificationNumber" (ngModelChange)="enableSave()">\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Certify By\r\n                                    </label>\r\n                                    <input class="form-control" type="text" name="certifiedBy" [(ngModel)]="stockLineForm.certifiedBy" (ngModelChange)="enableSave()"/>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Certified Date</label>\r\n                                    <p-calendar class="workflow-clder" [showIcon]="true" [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" name="certifiedDate" [maxDate]="minDateValue"  [(ngModel)]="stockLineForm.certifiedDate" (ngModelChange)="enableSave()"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Certify Due Date</label>\r\n                                    <p-calendar class="workflow-clder" [showIcon]="true" [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" [minDate]="minDateValue" name="certifiedDueDate" [(ngModel)]="stockLineForm.certifiedDueDate" (ngModelChange)="enableSave()"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Tag Type</label>\r\n                                    <p-multiSelect [options]="allTagTypes" [(ngModel)]="stockLineForm.tagType" name="tagType" (ngModelChange)="enableSave()"> \r\n                                    </p-multiSelect>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Tag Num</label>\r\n                                    <input class="form-control" type="text" name="tagNumber" [(ngModel)]="stockLineForm.tagNumber" (ngModelChange)="enableSave()" />\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Tag Date</label>\r\n                                    <p-calendar class="workflow-clder" [showIcon]="true" [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" name="tagDate" [maxDate]="minDateValue" [(ngModel)]="stockLineForm.tagDate" (ngModelChange)="enableSave()"></p-calendar>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Inspected By</label>\r\n                                    <p-autoComplete field="label" class="pautocomp-cstm" [(ngModel)]="stockLineForm.inspectionBy" name="inspectionBy" [suggestions]="certifyByNames" (completeMethod)="filterEmployees($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" (ngModelChange)="enableSave()" [forceSelection]="true">\r\n                                    </p-autoComplete>\r\n                                </div>\r\n                                <div class="form-group">\r\n                                    <label>Inspected Date</label>\r\n                                    <p-calendar class="workflow-clder" [showIcon]="true" [yearNavigator]="true" [monthNavigator]="true" yearRange="1900:2100" name="inspectionDate" [(ngModel)]="stockLineForm.inspectionDate" (ngModelChange)="enableSave()"></p-calendar>\r\n                                </div>                                \r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5>Other</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group">\r\n                                    <label>Integration With</label>\r\n                                    <input class="form-control" type="text" name="integrationPortal" [(ngModel)]="stockLineForm.integrationPortal" (ngModelChange)="enableSave()" disabled />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5>Memo</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group">\r\n                                    <div class="checkbox-cstm">\r\n                                        <label style="margin-left:5px">                                            \r\n                                            Memo\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="form-group memo-popup-cstm col-sm-12" style="margin-bottom:10px">\r\n                                    <div class="col-sm-11" style="margin-top:-8px">\r\n                                    <span>\r\n                                      <div [innerHTML]="stockLineForm.memo"\r\n                                      [matTooltip]="parsedText(stockLineForm.memo)" class="form-control"\r\n                                        style="width:100%;" class="text_editor_box"></div> \r\n                                    </span>\r\n                                    </div>\r\n                                    <div class="col-sm-1" style="margin-top:-4px">\r\n                                    <i class="fa fa-pencil" style="margin-top:-3px" data-toggle="modal"\r\n                                     data-target="#textarea-popup" \r\n                                     matTooltip="Add Memo" (ngModelChange)="enableSave()"\r\n                                      matTooltipPosition="above" (click)="onAddTextAreaInfo(\'memo\')"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-row">\r\n                    <div class="col-md-6">\r\n                        <div class="card card-stock">\r\n                            <div class="card-header">\r\n                                <h5>Attachments</h5>\r\n                            </div>\r\n                            <div class="card-body">\r\n                                <div class="form-group">\r\n                                    <label>Attachments\r\n                                        <a class="plusicon-cstm" data-toggle="modal" data-target="#addDocumentDetailsNew" (click)="addDocumentDetails()"><i class="fa fa-plus-circle fa-lg" matTooltip="Create Documents" matTooltipPosition="above"></i></a>\r\n                                    </label>                                \r\n                                </div>\r\n                                <div>\r\n                                    <div class="form-row">\r\n                                        <div class="col-md-8">\r\n                                            <h6 class="panel-title" style="padding-left: 10px; margin-top: 20px;">Attachment Details</h6>\r\n                                        </div>\r\n                                        <div class="col-md-4">                              \r\n                                            <div class="checkbox-cstm" style="margin-left: 0; margin-bottom: -20px; margin-top: 10px; margin-right: 0px !important; text-align: right;">\r\n                                                <label style="width: 120px;">\r\n                                                  <input type="checkbox" [(ngModel)]="isShowDeletedList" name="cparent"  />\r\n                                                  <span style="margin-top: 5px;" class="cr"><i class="cr-icon pi pi-check"></i></span>\r\n                                                  <p style="font-weight: bold;"> Show Deleted List </p>  \r\n                                                </label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="col-md-12" style="text-align: center;" *ngIf="(isShowDeletedList)?deletedDocumentList.length == 0:sourceViewforDocumentList.length == 0">\r\n                                        No Record Found\r\n                                    </div>\r\n                                    <div *ngIf="(isShowDeletedList)?deletedDocumentList.length > 0:sourceViewforDocumentList.length > 0">\r\n                                        <p-table #dt class="rpo-table-cstm rro-table-cstm" [value]="(isShowDeletedList)?deletedDocumentList:sourceViewforDocumentList" [first]="0" [(rows)]="pageSize"\r\n                [paginator]="true" [pageLinks]="3" [rowsPerPageOptions]="[5, 10, 15, 20]" [columns]="selectedColumnsCertified"\r\n                selectionMode="multiple" (onLazyLoad)="loadData($event)" [resizableColumns]="true"\r\n                [reorderableColumns]="true" [totalRecords]="(isShowDeletedList)?deletedDocumentList.length:sourceViewforDocumentList.length" [metaKeySelection]="true" [scrollable]="true"\r\n                scrollHeight="450px">\r\n                                            <ng-template pTemplate="colgroup" let-columns>\r\n                                                <colgroup>\r\n                                                    <ng-container *ngFor="let col of columns">\r\n                                                        <col *ngIf="col.field == \'createdDate\' || col.field == \'updatedDate\'"  style="width:125px" />\r\n                                                        <col *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'"  style="width:100px" />\r\n                                                    </ng-container>\r\n                                                </colgroup>\r\n                                            </ng-template>\r\n                                            <ng-template pTemplate="header" let-columns>\r\n                                                <tr>\r\n                                                    <th *ngFor="let col of columns" style="width: 100px;">\r\n                                                        {{ col.header }}\r\n                                                    </th>\r\n                                                    <th style="width: 100px;">Action</th>\r\n                                                </tr>\r\n        \r\n                                            </ng-template>\r\n                                            <ng-template pTemplate="header" let-columns>\r\n                                                <tr>\r\n                                                    <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                                                        [pSortableColumn]="col.field">\r\n                                                        {{ col.header }}\r\n                                                        <p-sortIcon [field]="col.field">\r\n                                                        </p-sortIcon>\r\n                                                    </th>\r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                                                        <input type="text"\r\n                                                            (input)="dt.filter($event.target.value, col.field,\'contains\') "\r\n                                                            *ngIf="col.field != \'createdDate\' && col.field != \'updatedDate\'"\r\n                                                            style="width:100%;" pInputText>\r\n                                                        <input type="date" class="hidePlaceHolder"\r\n                                                            *ngIf="col.field == \'createdDate\'" name="createdDate"\r\n                                                            style="width:100%;"\r\n                                                            (change)="dateFilterForTableNew($event.target.value, col.field )">\r\n                                                        <input type="date" class="hidePlaceHolder"\r\n                                                            *ngIf="col.field == \'updatedDate\'" name="updatedDate"\r\n                                                            style="width:100%;"\r\n                                                            (change)="dateFilterForTableNew($event.target.value, col.field )">\r\n                                                    </th>\r\n                                                    <th style="width:140px;position:sticky"></th>\r\n        \r\n                                                </tr>\r\n                                            </ng-template>\r\n                                            <ng-template pTemplate="body"\r\n                                                        let-rowData\r\n                                                        let-columns="columns"\r\n                                                        let-rowIndex="rowIndex">\r\n                                                <tr [pSelectableRow]="rowData" pReorderableRowHandle>\r\n                                                    <ng-container *ngFor="let col of columns">\r\n                                                        <td *ngIf="col.field != \'fileName\' && col.field !=\'docMemo\'"\r\n                                                            class="ui-resizable-column"\r\n                                                            pReorderableRowHandle>\r\n                                                            {{\r\n                                                            col.field == \'createdDate\'\r\n                                                                ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                                                : rowData[col.field] && col.field == \'updatedDate\'\r\n                                                                ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                                                : rowData[col.field]\r\n                                                            }}\r\n                                                        </td>\r\n                                                        <td *ngIf="col.field == \'fileName\'">\r\n                                                            <a class="filelink" *ngIf="rowData.isFileFromServer == true" (click)="downloadFileUpload(rowData)">\r\n                                                                {{ rowData[col.field] }}\r\n                                                            </a>\r\n                                                            <a *ngIf="rowData.isFileFromServer == false"\r\n                                                            [href]="rowData.link"\r\n                                                            download="{{rowData.fileName}}"\r\n                                                            matTooltip="Download" matTooltipPosition="above"\r\n                                                            class="filelink">\r\n                                                                {{ rowData[col.field] }}\r\n        \r\n                                                            </a>\r\n                                                        </td>\r\n                                                        <td *ngIf="col.field == \'docMemo\'"><p class="p_textEditor" [innerHTML]=rowData[col.field]></p></td>\r\n                                                    </ng-container>\r\n                                                    <td style="width: 110px;" *ngIf="!isShowDeletedList">\r\n                                                        <span data-toggle="modal"\r\n                                                            data-target="#addDocumentDetailsNew">\r\n                                                            <a class="btn nobg"\r\n                                                            (click)="editStockLineDocument(rowData,rowIndex)" matTooltip="Edit"\r\n                                                            matTooltipPosition="above"><i class="fa fa-pencil"></i></a>\r\n                                                        </span>\r\n        \r\n                                                        <a class="btn btn-danger nobg" (click)="deleteAttachmentRow(rowData, rowIndex,deleteContent)"\r\n                                                        matTooltip="Delete" matTooltipPosition="above" data-target="#delete" data-toggle="modal">\r\n                                                            <i class="fa fa-trash"></i>\r\n                                                        </a>\r\n                                                        <span *ngIf="rowData.attachmentId">\r\n                                                            <a class="btn nobg"\r\n                                                            (click)="openHistory(contentAuditHist, rowData)"\r\n                                                            matTooltip="History" matTooltipPosition="above"><i class="fa fa-history"></i></a>\r\n                                                        </span>\r\n                                                    </td>\r\n                                                    <td style="width: 110px;" *ngIf="isShowDeletedList">\r\n                                                        <span\r\n                                                            ><a\r\n                                                            class="btn nobg"\r\n                                                            (click)="restoreRecord(rowData);"\r\n                                                            matTooltip="Restore Record"\r\n                                                            matTooltipPosition="above"\r\n                                                            ><i class="fa fa-undo" aria-hidden="true"></i\r\n                                                            ></a>\r\n                                                        </span>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </ng-template>\r\n                                            <ng-template pTemplate="summary" id="footer">\r\n                                                <label id="footer" class="footer">Total:</label>\r\n                                                <input style="width: 5%;" [(ngModel)]="dt._totalRecords" name="no\'of records" disabled\r\n                                                    pInputText type="text" />\r\n                                                &nbsp;&nbsp;\r\n                                                <label id="footer" class="footer1">Pages Count:</label>\r\n        \r\n                                                <input style="width: 5%;" [ngModel]="getPageCount(dt._totalRecords, dt.rows)"\r\n                                                    name="page count" disabled pInputText type="text" />\r\n                                            </ng-template>\r\n        \r\n                                        </p-table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-row" *ngIf="sourceTimeLife.timeLife"> \r\n                    <div class="col-md-6">\r\n                        <div class="table-responsive form-group" style="padding: 0 5px;">                            \r\n                            <table class="table table-bordered">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th colspan="15" class="text-center"><strong>Time Life Info (Hours)</strong></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <th></th>\r\n                                        <th class="text-center">Cycles</th>\r\n                                        <th class="text-center">Time</th>\r\n                                        <th class="text-center">Last</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Remaining</td>\r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #cyclesRemaining="ngModel" mask="000:00" (ngModelChange)="enableSave()" name="cyclesRemaining" [(ngModel)]="sourceTimeLife.cyclesRemaining"/>\r\n                                            <div *ngIf="cyclesRemaining.errors">\r\n                                                <div *ngIf="cyclesRemaining.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="cyclesRemaining.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format (hhh:mm)</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #timeRemaining="ngModel" mask="000:00" (ngModelChange)="enableSave()" name="timeRemaining" [(ngModel)]="sourceTimeLife.timeRemaining"/>\r\n                                            <div *ngIf="timeRemaining.errors">\r\n                                                <div *ngIf="timeRemaining.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="timeRemaining.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format (hhh:mm)</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>                                        \r\n                                        <td></td>        \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Since New</td>\r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #cyclesSinceNew="ngModel" mask="000:00" (ngModelChange)="enableSave()" name="cyclesSinceNew" [(ngModel)]="sourceTimeLife.cyclesSinceNew"/>\r\n                                            <div *ngIf="cyclesSinceNew.errors">\r\n                                                <div *ngIf="cyclesSinceNew.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="cyclesSinceNew.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format (hhh:mm)</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>                  \r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #timeSinceNew="ngModel" mask="000:00" (ngModelChange)="enableSave()" name="timeSinceNew" [(ngModel)]="sourceTimeLife.timeSinceNew"/>\r\n                                            <div *ngIf="timeSinceNew.errors">\r\n                                                <div *ngIf="timeSinceNew.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="timeSinceNew.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format (hhh:mm)</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>                  \r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #lastSinceNew="ngModel" mask="000:00" (ngModelChange)="enableSave()" name="lastSinceNew" [(ngModel)]="sourceTimeLife.lastSinceNew"/>\r\n                                            <div *ngIf="lastSinceNew.errors">\r\n                                                <div *ngIf="lastSinceNew.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="lastSinceNew.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format (hhh:mm)</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>                  \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Since Ovh</td>\r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #cyclesSinceOVH="ngModel" mask="000:00" (ngModelChange)="enableSave()" name="cyclesSinceOVH" [(ngModel)]="sourceTimeLife.cyclesSinceOVH"/>\r\n                                            <div *ngIf="cyclesSinceOVH.errors">\r\n                                                <div *ngIf="cyclesSinceOVH.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="cyclesSinceOVH.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format (hhh:mm)</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>            \r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #timeSinceOVH="ngModel" mask="000:00" (ngModelChange)="enableSave()" name="timeSinceOVH" [(ngModel)]="sourceTimeLife.timeSinceOVH"/>\r\n                                            <div *ngIf="timeSinceOVH.errors">\r\n                                                <div *ngIf="timeSinceOVH.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="timeSinceOVH.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format (hhh:mm)</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>            \r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #lastSinceOVH="ngModel" mask="000:00" (ngModelChange)="enableSave()" name="lastSinceOVH" [(ngModel)]="sourceTimeLife.lastSinceOVH"/>\r\n                                            <div *ngIf="lastSinceOVH.errors">\r\n                                                <div *ngIf="lastSinceOVH.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="lastSinceOVH.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format (hhh:mm)</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>            \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Since Insp</td>\r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #cyclesSinceInspection="ngModel" mask="000:00" (ngModelChange)="enableSave()" name="cyclesSinceInspection" [(ngModel)]="sourceTimeLife.cyclesSinceInspection"/>\r\n                                            <div *ngIf="cyclesSinceInspection.errors">\r\n                                                <div *ngIf="cyclesSinceInspection.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="cyclesSinceInspection.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format (hhh:mm)</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>            \r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #timeSinceInspection="ngModel" mask="000:00" (ngModelChange)="enableSave()" name="timeSinceInspection" [(ngModel)]="sourceTimeLife.timeSinceInspection"/>\r\n                                            <div *ngIf="timeSinceInspection.errors">\r\n                                                <div *ngIf="timeSinceInspection.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="timeSinceInspection.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format (hhh:mm)</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>            \r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #lastSinceInspection="ngModel" mask="000:00" (ngModelChange)="enableSave()" name="lastSinceInspection" [(ngModel)]="sourceTimeLife.lastSinceInspection"/>\r\n                                            <div *ngIf="lastSinceInspection.errors">\r\n                                                <div *ngIf="lastSinceInspection.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="lastSinceInspection.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format (hhh:mm)</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>            \r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>Since Repair</td>\r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #cyclesSinceRepair="ngModel" mask="000:00" (ngModelChange)="enableSave()" name="cyclesSinceRepair" [(ngModel)]="sourceTimeLife.cyclesSinceRepair"/>\r\n                                            <div *ngIf="cyclesSinceRepair.errors">\r\n                                                <div *ngIf="cyclesSinceRepair.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="cyclesSinceRepair.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format (hhh:mm)</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>            \r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #timeSinceRepair="ngModel" mask="000:00" (ngModelChange)="enableSave()" name="timeSinceRepair" [(ngModel)]="sourceTimeLife.timeSinceRepair"/>\r\n                                            <div *ngIf="timeSinceRepair.errors">\r\n                                                <div *ngIf="timeSinceRepair.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="timeSinceRepair.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format (hhh:mm)</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>            \r\n                                        <td></td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class="form-row pull-right">\r\n                    <button type="submit" class="btn btn-primary" (click)="onSaveStockLine()" [disabled]="!stockLineSetupForm.valid || disableMagmtStruct || disableManufacturer || disableCondition || disableSiteName || disableSaveForEdit">{{isEditMode ? \'Update\' : \'Save\'}}</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n  \r\n    <div class="modal fade" id="textarea-popup" role="dialog" data-backdrop="static">\r\n        <div class="modal-dialog modal-sm">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">Edit {{textAreaLabel}}</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <table class="table table-bordered table-fixed workflow-table-material">\r\n                        <thead>\r\n                            <th style="color: #fff;">{{textAreaLabel}}</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <p-editor [(ngModel)]="textAreaInfo"  (ngModelChange)="enableSaveMemo()"\r\n                                     [style]="{\'height\':\'320px\'}" name="textAreaInfo" required></p-editor>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div style="float:right">\r\n                        <button type="button" class="btn btn-primary" style="padding: 6px 12px !important;margin-top: 10px;"\r\n                        data-dismiss="modal" (click)="onSaveTextAreaInfo()"[disabled]="disableSaveMemo" >Save</button>\r\n                        <button type="button" class="btn btn-danger" style="padding: 6px 12px !important;margin-top: 10px;"\r\n                         data-dismiss="modal">Close</button>\r\n                    </div>\r\n                  </div> \r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="modal fade popup-blur" id="addDocumentDetailsNew" data-backdrop="static">\r\n    <div class="modal-dialog modal-sm">\r\n        <div class="modal-content">\r\n            <div class="modal-header">\r\n                <button type="button"\r\n                        class="close"\r\n                        (click)="closeMyModel(\'#addDocumentDetailsNew\')">\r\n                    &times;\r\n                </button>\r\n                <h4 class="modal-title">{{isEditButton ? \'Edit\' : \'Add\' }} Document Details</h4>\r\n            </div>\r\n            <form #addDocumentForm="ngForm" class="form-horizontal">\r\n                <div class="modal-body">\r\n                    <div class="form-row">\r\n                        <div class="col-md-6">\r\n                            <div class="form-group">\r\n                                <label>Name <span class="clr-red">*</span></label>\r\n                                <input class="form-control"\r\n                                       type="text"\r\n                                       name="name"\r\n                                       [(ngModel)]="documentInformation.docName"\r\n                                       (ngModelChange)="enableSaveDocument()"\r\n                                       required />\r\n                            </div>\r\n                            <div class="form-group">\r\n                                <label>Description</label>\r\n                                <textarea class="form-control"\r\n                                          name="description"\r\n                                          [(ngModel)]="documentInformation.docDescription"\r\n                                          (ngModelChange)="enableSaveDocument()">\r\n                                </textarea>\r\n                            </div>\r\n                            <div class="form-group" class="memo-popup-cstm">\r\n                                <label>Memo</label>\r\n                                        <span>\r\n                                            <div [innerHTML]="documentInformation.docMemo" class="form-control"\r\n                                            style="width:90%;" class="text_editor_box"></div> \r\n                                            <i class="fa fa-pencil" data-toggle="modal" \r\n                                        data-target="#memo-popup" matTooltip="Add Memo" (ngModelChange)="enableSaveDocument()"\r\n                                        matTooltipPosition="above" (click)="onAddTextAreaInfo(\'memo\')" style="float: right;margin-top: -18px;"></i>\r\n                                        </span>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-md-12" style="margin-top: 10px;">\r\n                            <div class="form-group">\r\n                                <label style="float: none;">Attachments <span class="clr-red">*</span></label>\r\n                                <p-fileUpload #fileUploadInput\r\n                                              name="fileupload[]"\r\n                                              multiple="multiple"\r\n                                              [showCancelButton]="false"\r\n                                              [showUploadButton]="false"\r\n                                              customUpload="true"\r\n                                              (onRemove)="fileUploadCertifiedDeSelect($event)"\r\n                                              (onSelect)="fileUploadCertified($event);enableSaveDocument();"  required></p-fileUpload>\r\n                            </div>\r\n                        </div>\r\n                        <div class="table-responsive table-overflow"\r\n                             *ngIf="isEditButton">\r\n                            <h6 class="panel-title" style="padding-left: 10px;">\r\n                                Attachment Details:\r\n                            </h6>\r\n\r\n                            <table class="table-responsive ptable-cus-pma">\r\n                                <tr>\r\n                                    <th>File Name</th>\r\n                                    <th>Memo</th>\r\n                                    <th>Download</th>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{{sourceViewforDocument.fileName}}</td>\r\n                                    <td><p class="p-0 m-0 p_textEditor" [innerHTML]="sourceViewforDocument.docMemo"></p></td>\r\n                                    <td>\r\n                                        <a *ngIf="sourceViewforDocument.attachmentDetailId > 0" (click)="downloadFileUpload(sourceViewforDocument)"\r\n                                           matTooltip="Download" matTooltipPosition="above"\r\n                                           class="btn nobg btn-cstm">\r\n                                            <span><i class="fa fa-download"></i></span>\r\n                                        </a>\r\n                                        <a *ngIf="sourceViewforDocument.attachmentDetailId==0"\r\n                                           [href]="sourceViewforDocument.link"\r\n                                           download="{{sourceViewforDocument.fileName}}"\r\n                                           matTooltip="Download" matTooltipPosition="above"\r\n                                           class="filelink">\r\n                                            <span><i class="fa fa-download"></i></span>\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="modal-footer">\r\n                    <button type="button"\r\n                            *ngIf="!isEditButton"\r\n                            class="btn btn-primary pull-right submit-btn"\r\n                            style="text-align:center"\r\n                            (click)="addDocumentInformation(\'#addDocumentDetailsNew\',documentInformation)"\r\n                            [disabled]="!addDocumentForm.valid ||disableFileAttachmentSubmit==false || selectedFileAttachment.length == 0">\r\n                        Add\r\n                    </button>\r\n                    <button type="button"\r\n                            *ngIf="isEditButton"\r\n                            class="btn btn-primary pull-right submit-btn"\r\n                            style="text-align:center"\r\n                            (click)="addDocumentInformation(\'#addDocumentDetailsNew\',documentInformation)"\r\n                            [disabled]="!addDocumentForm.valid || disableSaveForEditDocument">\r\n                        Update\r\n                    </button>\r\n                    <button type="button"\r\n                            class="btn btn-danger"\r\n                            (click)="dismissDocumentPopupModel(\'#addDocumentDetailsNew\'); closeMyModel(\'#addDocumentDetailsNew\')">\r\n                        Close\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    </div>\r\n\r\n    <div class="modal" id="memo-popup" data-backdrop="static">\r\n        \r\n        <div class="modal-dialog">\r\n            <div class="modal-content">\r\n                <div class="modal-header">\r\n                    <button type="button" class="close" data-dismiss="modal">&times;</button>\r\n                    <h4 class="modal-title">Edit Memo</h4>\r\n                </div>\r\n                <div class="modal-body">\r\n                    <table class="table table-bordered table-fixed workflow-table-material">\r\n                        <thead>\r\n                            <th style="color: #fff;">Memo</th>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <p-editor [(ngModel)]="documentInformation.docMemo"\r\n                                     [style]="{\'height\':\'320px\'}"  (ngModelChange)="enableSaveMemo()" name="textAreaInfo" required></p-editor>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    <div style="float:right">\r\n                        <button type="button" class="btn btn-primary" style="padding: 6px 12px !important;margin-top: 10px;"\r\n                        data-dismiss="modal" (click)="onSaveTextAreaInfo()" [disabled]="disableSaveMemo">Save</button>\r\n                        <button type="button" class="btn btn-danger" style="padding: 6px 12px !important;margin-top: 10px;"\r\n                         data-dismiss="modal">Close</button>\r\n                    </div>\r\n                  </div> \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #deleteContent\r\n             let-c="close"\r\n             let-d="dismiss"\r\n             data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">Are You Sure Want to Delete?</h4>\r\n        <button type="button"\r\n                class="close"\r\n                aria-label="Close"\r\n                (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <div class="modal-body">\r\n        <strong>\r\n            Document Name:\r\n            <span class="new-label">{{ selectedRowForDelete.docName }}</span>\r\n        </strong>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button"\r\n                class="btn btn-primary"\r\n                (click)="deleteItemAndCloseModel()">\r\n            Yes\r\n        </button>\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">\r\n            No\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #contentAuditHist\r\n             let-c="close"\r\n             let-d="dismiss"\r\n             style="width:auto"\r\n             data-backdrop="static">\r\n    <div class="modal-header">\r\n        <h4 class="modal-title">History of Documents</h4>\r\n        <button type="button"\r\n                class="close"\r\n                aria-label="Close"\r\n                (click)="dismissModel()">\r\n            <span aria-hidden="true">&times;</span>\r\n        </button>\r\n    </div>\r\n    <div class="modal-body">\r\n        <div class="table-responsive">\r\n            <table class="table table-bordered">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Document Name</th>\r\n                        <th>Description</th>\r\n                        <th>Memo</th>\r\n                        <th>File Name</th>\r\n                        <th>Created Date</th>\r\n                        <th>Created By</th>\r\n                        <th>Updated Date</th>\r\n                        <th>Updated By</th>                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor="let audit of sourceViewforDocumentAudit"></tr>\r\n                    <tr *ngFor="let audit of sourceViewforDocumentAudit; let i = index">\r\n                        <td [ngStyle]="{\r\n                                color: getColorCodeForHistory(i, \'docName\', audit.docName)\r\n                                ? \'black\'\r\n                                : \'red\'\r\n                            }">\r\n                            {{ audit.docName }}\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                                color: getColorCodeForHistory(\r\n                                i,\r\n                                \'docDescription\',\r\n                                audit.docDescription\r\n                                )\r\n                                ? \'black\'\r\n                                : \'red\'\r\n                            }">\r\n                            {{ audit.docDescription }}\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                                color: getColorCodeForHistory(i, \'docMemo\', audit.docMemo)\r\n                                ? \'black\'\r\n                                : \'red\'\r\n                            }">\r\n                            <p class="p-0 m-0 p_textEditor" [innerHTML]="audit.docMemo">\t\t\t\t\t\t\t\t\t\t\t\t\r\n                            </p>\r\n                        </td>\r\n                        <td [ngStyle]="{\r\n                                color: getColorCodeForHistory(i, \'fileName\', audit.fileName)\r\n                                ? \'black\'\r\n                                : \'red\'\r\n                            }">\r\n                            {{ audit.fileName }}                            \r\n                        </td>\r\n                        <td>{{ audit.createdDate | date: \'dd-MM-yyyy h:mm a \' }}</td>\r\n                        <td [ngStyle]="{\r\n                                color: getColorCodeForHistory(i, \'createdBy\', audit.createdBy)\r\n                                ? \'black\'\r\n                                : \'red\'\r\n                            }">\r\n                            {{ audit.createdBy }}                            \r\n                        </td>\r\n                        <td>{{ audit.updatedDate | date: \'dd-MM-yyyy h:mm a \' }}</td>\r\n                        <td [ngStyle]="{\r\n                                color: getColorCodeForHistory(i, \'updatedBy\', audit.updatedBy)\r\n                                ? \'black\'\r\n                                : \'red\'\r\n                            }">\r\n                            {{ audit.updatedBy }}                            \r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissModel()">\r\n            Close\r\n        </button>\r\n    </div>\r\n</ng-template>\r\n\r\n    <div class="preloader" *ngIf="isSpinnerVisible">\r\n        <div class="loading">\r\n            <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    </div>\r\n</div> '},J6e9:function(t,e,n){"use strict";n.r(e);var i=n("mrSG"),r=n("8Y7J"),o=n("1bHX"),s=n("u9T3"),a=n("s7LF"),l=n("TSSN"),c=n("1+r1"),d=n("SVse"),u=n("8YFm"),m=n("MCl+"),h=n("CYTX"),p=n("bv+N"),g=n("Jfay"),b=n("I0ai"),S=n("3/N/"),v=n("sa3O"),f=n("ByPc"),y=n("NGzr"),L=n("FfGd"),k=n("AkAD"),I=n("a4ce"),D=n("1zQ3"),M=n("wB/n"),C=n("ldMm"),w=n("DgWh"),F=n("8rEH"),N=n("s6ns"),T=n("G0yt"),O=n("3LUQ"),x=n("iInd"),A=n("435O"),j=n("sYxu"),H=n("lGQG"),V=n("d8Wx"),R=n("Hocb"),P=n("OlR4"),E=n("00MY"),q=n("h+eU"),B=n("EVdn"),U=n("wd/R");let z=class{constructor(t,e,n,i,r,o,s,a,l,c,d,u){this.workFlowtService=t,this.datePipe=e,this._route=n,this.authService=i,this.commonService=r,this.modalService=o,this.activeModal=s,this._fb=a,this.alertService=l,this.dialog=c,this.masterComapnyService=d,this.stocklineReferenceStorage=u,this.currentDeletedstatus=!1,this.currentstatus="Active",this.sourceViewOptions={},this.sourceStockLine={},this.createdBy="",this.quantityOnHand="",this.quantityReserved="",this.quantityIssued="",this.quantityAvailable="",this.engineSerialNumber="",this.aircraftTailNumber="",this.blackListed=!1,this.blackListedReason="",this.incident=!1,this.incidentReason="",this.accident=!1,this.accicentReason="",this.memo="",this.stockLineNumber="",this.stocklineMatchKey="",this.partNumber="",this.purchaseOrderUnitCost="",this.repairOrderUnitCost="",this.receiverNumber="",this.reconciliationNumber="",this.unitSalesPrice="",this.coreUnitCost="",this.glAccountId="",this.glAccountName="",this.assetId="",this.updatedBy="",this.updatedDate="",this.createdDate="",this.oem="",this.enableExternal=!1,this.totalRecords=0,this.totalPages=0,this.pageSize=10,this.allCustomersList=[],this.allVendorsList=[],this.allCompanyList=[],this.auditHistory=[],this.adjAuditHistoryList=[],this.adjAuditHistoryData=[],this.dateObject={},this.headers=[{field:"partNumber",header:"PN"},{field:"partDescription",header:"PN Description"},{field:"manufacturer",header:"Manufacturer"},{field:"revisedPN",header:"Revised PN"},{field:"itemGroup",header:"Item Group"},{field:"quantityOnHand",header:"Qty On Hand"},{field:"quantityAvailable",header:"Qty Avail"},{field:"serialNumber",header:"Serial Num"},{field:"stocklineNumber",header:"SL Num"},{field:"controlNumber",header:"Control Number"},{field:"idNumber",header:"Control Id Num"},{field:"condition",header:"Condition"},{field:"receivedDate",header:"Received Date"},{field:"awb",header:"AWB"},{field:"expirationDate",header:"Exp Date"},{field:"tagDate",header:"Tagged Date"},{field:"createdBy",header:"Created By"},{field:"createdDate",header:"Created Date"},{field:"updatedBy",header:"Updated By"},{field:"updatedDate",header:"Updated Date"},{field:"companyName",header:"Level 01"},{field:"buName",header:"Level 02"},{field:"divName",header:"Level 03"},{field:"deptName",header:"Level 04"}],this.selectedGridColumns=this.headers,this.pageIndex=0,this.data=[],this.viewSLInfo={},this.timeLifeInfo={},this.managementStructure={},this.filterText="",this.allStockInfo=[],this.allWorkFlows=[],this.isSpinnerVisible=!0,this.currentStock="stock",this.selectedOnly=!1,this.dataSource=new F.a}ngOnInit(){this.activeIndex=0,this.workFlowtService.currentUrl="/stocklinemodule/stocklinepages/app-stock-line-list",this.workFlowtService.bredcrumbObj.next(this.workFlowtService.currentUrl)}closeDeleteModal(){B("#downloadConfirmation").modal("hide")}getFormatedDate(t){if(t){let e=new Date(t);return`${e.getMonth()}/${e.getDate()}/${e.getFullYear()} ${e.getHours()}:${e.getMinutes()}`}return t}loadData(t){this.isSpinnerVisible=!0,this.lazyLoadFilterData=t;const e=parseInt(t.first)/t.rows;this.pageIndex=e,this.pageSize=t.rows,t.first=e,this.lazyLoadFilterData=Object.assign({},t,{filters:Object(R.j)(t.filters),globalFilter:this.filterText}),this.lazyLoadFilterData.filters=Object.assign({},this.lazyLoadFilterData.filters,{stocktype:this.currentStock}),this.getList(this.lazyLoadFilterData)}getList(t){this.isSpinnerVisible=!0,this.workFlowtService.getStockLineListing(t).subscribe(t=>{this.data=t.results.map(t=>Object.assign({},t,{createdDate:t.createdDate?this.datePipe.transform(t.createdDate,"MM/dd/yyyy hh:mm a"):"",updatedDate:t.updatedDate?this.datePipe.transform(t.updatedDate,"MM/dd/yyyy hh:mm a"):"",receivedDate:t.receivedDate?this.datePipe.transform(t.receivedDate,"MM/dd/yyyy"):"",expirationDate:t.expirationDate?this.datePipe.transform(t.expirationDate,"MM/dd/yyyy"):"",tagDate:t.tagDate?this.datePipe.transform(t.tagDate,"MM/dd/yyyy"):""})),t.results.length>0?(this.totalRecords=t.totalRecordsCount,this.totalPages=Math.ceil(this.totalRecords/this.pageSize)):(this.totalRecords=0,this.totalPages=0),this.isSpinnerVisible=!1},t=>{const e=t;this.saveFailedHelper(e)})}globalSearch(t){this.isSpinnerVisible=!0,this.filterText=t,this.lazyLoadFilterData.filters=Object.assign({},this.lazyLoadFilterData.filters,{stocktype:this.currentStock});const e=Object.assign({},this.lazyLoadFilterData,{globalFilter:t});this.getList(e)}geStocklineByStock(t){this.isSpinnerVisible=!0,this.currentStock=t,this.lazyLoadFilterData.filters.stocktype=t;const e=Object.assign({},this.lazyLoadFilterData,{globalFilter:""});this.data.forEach(t=>{t.createdDate=this.getFormatedDate(t.createdDate),t.updatedDate=this.getFormatedDate(t.updatedDate)}),this.getList(e)}columnsChanges(){this.refreshList()}refreshList(){this.table.reset()}ngAfterViewInit(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}routeToPORO(t,e){this.workFlowtService.getDataForPOROByStocklineId(t.stockLineId).subscribe(t=>{t&&(this.stocklineReferenceData=t,this.stocklineReferenceStorage.stocklineReferenceData=this.stocklineReferenceData,"RO"==e&&this._route.navigateByUrl("vendorsmodule/vendorpages/app-create-ro"),"PO"==e&&this._route.navigateByUrl("vendorsmodule/vendorpages/app-create-po"))},t=>this.saveFailedHelper(t))}changeStatus(t){this.workFlowtService.updateActionforActive(t,this.userName).subscribe(t=>{this.alertService.showMessage("Success","Successfully Updated Status",O.d.success)})}applyFilter(t){this.dataSource.filter=t}dismissModel(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close()}openView(t){this.modal=this.modalService.open(E.a,{size:"lg",backdrop:"static",keyboard:!1}),this.modal.componentInstance.stockLineId=t.stockLineId,this.modal.result.then(()=>{},()=>{})}openHelpText(t){this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}exportCSV(t){this.isSpinnerVisible=!0;const e=!!this.currentDeletedstatus;let n={first:0,rows:t.totalRecords,sortOrder:1,filters:{status:this.currentstatus,isDeleted:e},globalFilter:""};this.workFlowtService.downloadAllStockLineList(n).subscribe(e=>{this.loadingIndicator=!1,e.results.forEach(t=>{t.receivedDate=t.receivedDate?this.datePipe.transform(t.receivedDate,"MMM-dd-yyyy"):"",t.expirationDate=t.expirationDate?this.datePipe.transform(t.expirationDate,"MMM-dd-yyyy"):"",t.tagDate=t.tagDate?this.datePipe.transform(t.tagDate,"MMM-dd-yyyy"):"",t.createdDate=t.createdDate?this.datePipe.transform(t.createdDate,"MMM-dd-yyyy hh:mm a"):"",t.updatedDate=t.updatedDate?this.datePipe.transform(t.updatedDate,"MMM-dd-yyyy hh:mm a"):""}),t._value=e.results,t.exportCSV(),t.value=this.data,this.isSpinnerVisible=!1},t=>{const e=t;this.saveFailedHelper(e)})}errorMessageHandler(t){this.isSpinnerVisible=!1;var e="";if("string"==typeof t.error)this.alertService.showMessage("Error",t.error,O.d.error);else{if(t.error&&t.error.errors.length>0)for(let n=0;n<t.error.errors.length;n++)e=e+t.error.errors[n].message+"<br/>";this.alertService.showMessage(t.error.message,e,O.d.error)}}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}openDelete(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceAction=e,this.modal=this.modalService.open(t,{size:"sm",backdrop:"static",keyboard:!1})}openEdits(t){this.workFlowtService.isEditMode=!0,this.isSaving=!0,this.workFlowtService.listCollection=t;const{stockLineId:e}=t;this._route.navigateByUrl("/stocklinemodule/stocklinepages/app-stock-line-setup/edit/"+e)}openStocklineAudit(t){this.isSpinnerVisible=!0,this.workFlowtService.getStocklineAudit(t.stockLineId).subscribe(t=>{this.auditHistory=t.map(t=>Object.assign({},t,{quantityOnHand:t.quantityOnHand||0==t.quantityOnHand?Object(R.b)(t.quantityOnHand,0):"",quantityReserved:t.quantityReserved||0==t.quantityReserved?Object(R.b)(t.quantityReserved,0):"",quantityIssued:t.quantityIssued||0==t.quantityIssued?Object(R.b)(t.quantityIssued,0):"",quantityAvailable:t.quantityAvailable||0==t.quantityAvailable?Object(R.b)(t.quantityAvailable,0):"",purchaseOrderUnitCost:t.purchaseOrderUnitCost?Object(R.b)(t.purchaseOrderUnitCost,2):"",repairOrderUnitCost:t.repairOrderUnitCost?Object(R.b)(t.repairOrderUnitCost,2):"",unitSalesPrice:t.unitSalesPrice?Object(R.b)(t.unitSalesPrice,2):"",coreUnitCost:t.coreUnitCost?Object(R.b)(t.coreUnitCost,2):"",lotCost:t.lotCost?Object(R.b)(t.lotCost,2):""})),this.isSpinnerVisible=!1},t=>this.saveFailedHelper(t))}getColorCodeForHistory(t,e,n){const i=this.auditHistory,r=i.length;if(t>=0&&t<=r)return t+1===r||i[t+1][e]===n}getColorCodeForAdjAudit(t,e,n){const i=this.adjAuditHistoryData,r=i.length;if(t>=0&&t<=r)return t+1===r||i[t+1][e]===n}openAdjustment(t){this.workFlowtService.isAdjustment=!0,this.isAdjustSaving=!0,this.workFlowtService.adjustmentCollection=t,this._route.navigateByUrl("/stocklinemodule/stocklinepages/app-stock-adjustment/"+t.stockLineId)}openStocklineAdj(t){this.workFlowtService.getStocklineAdjList(t.stockLineId).subscribe(t=>{this.adjAuditHistoryList=t.map(t=>11==t.stocklineAdjustmentDataTypeId||12==t.stocklineAdjustmentDataTypeId||13==t.stocklineAdjustmentDataTypeId?Object.assign({},t,{changedFrom:Object(R.b)(t.changedFrom,2),changedTo:Object(R.b)(t.changedTo,2),auditRightAlign:!0}):10==t.stocklineAdjustmentDataTypeId?Object.assign({},t,{changedFrom:Object(R.b)(t.changedFrom,0),changedTo:Object(R.b)(t.changedTo,0),auditRightAlign:!0}):Object.assign({},t))},t=>this.saveFailedHelper(t))}openStocklineAdjData(t){this.workFlowtService.getStocklineAdjData(t.stockLineId,t.stocklineAdjustmentDataTypeId).subscribe(t=>{this.adjAuditHistoryData=t.map(t=>11==t.stocklineAdjustmentDataTypeId||12==t.stocklineAdjustmentDataTypeId||13==t.stocklineAdjustmentDataTypeId?Object.assign({},t,{changedFrom:Object(R.b)(t.changedFrom,2),changedTo:Object(R.b)(t.changedTo,2),auditRightAlign:!0}):10==t.stocklineAdjustmentDataTypeId?Object.assign({},t,{changedFrom:Object(R.b)(t.changedFrom,0),changedTo:Object(R.b)(t.changedTo,0),auditRightAlign:!0}):Object.assign({},t))},t=>this.saveFailedHelper(t))}dismissStockAdjAudit(){B("#stockAdjAudit").modal("hide")}saveCompleted(t){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",O.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",O.d.success)}saveFailedHelper(t){this.isSaving=!1,this.isSpinnerVisible=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",O.d.error,t),this.alertService.showStickyMessage(t,null,O.d.error)}navigateTogeneralInfo(){this.workFlowtService.isEditMode=!1,this.workFlowtService.enableExternal=!1,this._route.navigateByUrl("stocklinemodule/stocklinepages/app-stock-line-setup")}enableDateFilter(t){""===t.value?t.classList.add("hidePlaceHolder"):t.classList.remove("hidePlaceHolder")}getColorCodeForStockLineAdjHistory(t,e,n){const i=this.adjAuditHistoryList,r=i.length;if(t>=0&&t<=r)return t+1===r||i[t+1][e]===n}dateFilterForTable(t,e){if(this.dateObject={},t=U(t).format("MM/DD/YYYY"),U(t).format("MM/DD/YY"),""!=t&&U(t,"MM/DD/YYYY",!0).isValid()){"createdDate"==e?this.dateObject={createdDate:t}:"updatedDate"==e&&(this.dateObject={updatedDate:t}),this.lazyLoadFilterData.filters=Object.assign({},this.lazyLoadFilterData.filters,this.dateObject);const n=Object.assign({},this.lazyLoadFilterData,{filters:Object(R.j)(this.lazyLoadFilterData.filters)});this.getList(n)}else{this.lazyLoadFilterData.filters=Object.assign({},this.lazyLoadFilterData.filters,this.dateObject),this.lazyLoadFilterData.filters&&this.lazyLoadFilterData.filters.createdDate&&delete this.lazyLoadFilterData.filters.createdDate,this.lazyLoadFilterData.filters&&this.lazyLoadFilterData.filters.updatedDate&&delete this.lazyLoadFilterData.filters.updatedDate,this.lazyLoadFilterData.filters=Object.assign({},this.lazyLoadFilterData.filters,this.dateObject);const t=Object.assign({},this.lazyLoadFilterData,{filters:Object(R.j)(this.lazyLoadFilterData.filters)});this.getList(t)}}};z.ctorParameters=()=>[{type:A.a},{type:d.DatePipe},{type:x.Router},{type:H.a},{type:P.a},{type:T.c},{type:T.b},{type:a.FormBuilder},{type:O.b},{type:N.b},{type:V.a},{type:q.a}],z=i.b([Object(r.Component)({selector:"app-stock-line-list",template:i.c(n("TkOv")).default,animations:[j.a],providers:[d.DatePipe],styles:[i.c(n("77XZ")).default]})],z);var W=n("TeDh"),$=n("IGPk"),Q=n("+yGV"),Y=n("NRZ7"),G=n("Skqz"),_=n("Ph3x"),K=n("++Ae"),J=n("XNiG"),X=n("1G5W"),Z=n("yKWY"),tt=n("JPLv"),et=n("v6zA");let nt=class{constructor(t,e,n,i,r,o,s,a,l,c,d,u,m,h,p,g,b){this.alertService=t,this.stocklineser=e,this.commonService=n,this.conditionService=i,this.binService=r,this.siteService=o,this.vendorService=s,this.manufacturerService=a,this.integrationService=l,this.itemMasterService=c,this.glAccountService=d,this.router=u,this._actRoute=m,this.datePipe=h,this.authService=p,this.configurations=g,this.modalService=b,this.isEditMode=!1,this.disableSaveMemo=!0,this.timePattern=Object(et.f)(),this.stockLineForm={},this.saveStockLineForm={},this.tempOEMpartNumberId=null,this.allCustomersList=[],this.allVendorsList=[],this.allCompanyList=[],this.allPartnumbersList=[],this.allEmployeeList=[],this.partNumbersCollection=[],this.allConditionInfo=[],this.minDateValue=new Date,this.currentDate=new Date,this.onDestroy$=new J.a,this.managementStructure={companyId:0,buId:0,divisionId:0,departmentId:0},this.allManufacturerInfo=[],this.allTagTypes=[],this.allPolistInfo=[],this.allRolistInfo=[],this.integrationInfoList=[],this.sourceTimeLife={},this.hideSerialNumber=!0,this.disableMagmtStruct=!0,this.disableCondition=!0,this.disableManufacturer=!0,this.disableSiteName=!0,this.allNHAInfo=[],this.allTLAInfo=[],this.assetAcquisitionTypeList=[],this.allWorkOrderInfo=[],this.allWorkOrderDetails=[],this.disableQtyOnHand=!1,this.defaultDate=new Date("Fri Sep 1 2009 00:00:00"),this.moduleListDropdown=[],this.isSpinnerVisible=!0,this.documentInformation={docName:"",docMemo:"",docDescription:"",attachmentDetailId:0},this.disableFileAttachmentSubmit=!0,this.selectedFileAttachment=[],this.sourceViewforDocument=[],this.formData=new FormData,this.sourceViewforDocumentList=[],this.sourceViewforDocumentAudit=[],this.pageSize=5,this.isEditButton=!1,this.deletedDocumentList=[],this.isShowDeletedList=!1,this.attachDocumentsColumns=[{field:"docName",header:"Name"},{field:"docDescription",header:"Description"},{field:"docMemo",header:"Memo"},{field:"fileName",header:"File Name"},{field:"fileSize",header:"File Size"},{field:"createdBy",header:"Created By"},{field:"createdDate",header:"Created Date"},{field:"updatedBy",header:"Updated By"},{field:"updatedDate",header:"Updated Date"}],this.selectedColumnsCertified=this.attachDocumentsColumns,this.allDocumentListOriginal=[],this.userTypes=[],this.disableVendor=!1,this.disableSaveForEdit=!0,this.disableSaveForEditDocument=!0,this.arrayCustlist=[],this.arrayVendorlist=[],this.arrayCompanylist=[],this.arrayItemMasterlist=[],this.arrayWOlist=[],this.arrayEmployeelist=[],this.arrayModulelist=[],this.arrayConditionlist=[],this.headerInfo={},this.maincompanylist=[],this.bulist=[],this.departmentList=[],this.divisionlist=[],this.stockLineForm.siteId=0,this.stockLineForm.acquistionTypeId=0,this.stockLineForm.nhaItemMasterId=0,this.stockLineForm.tlaItemMasterId=0,this.stockLineForm.warehouseId=0,this.stockLineForm.locationId=0,this.stockLineForm.shelfId=0,this.stockLineForm.binId=0,this.stockLineForm.obtainFromType=0,this.stockLineForm.ownerType=0,this.stockLineForm.traceableToType=0,this.stockLineForm.manufacturerId=0,this.stockLineForm.purchaseOrderId=0,this.stockLineForm.repairOrderId=0,this.stockLineForm.conditionId=0,this.stockLineForm.nha=0,this.stockLineForm.tla=0,this.stockLineForm.quantityOnHand=null,this.stockLineForm.oem="true",this.stockLineForm.isCustomerStock=!1,this.stockLineForm.tagType=[],this.stockLineForm.stockLineNumber="Creating",this.stockLineForm.controlNumber="Creating",this.stockLineForm.idNumber="Creating",this.stockLineForm.entryDate=new Date,this.stockLineForm.purchaseOrderUnitCost="0.00",this.stockLineForm.repairOrderUnitCost="0.00",this.stockLineForm.unitSalesPrice="0.00",this.stockLineForm.coreUnitCost="0.00",this.stockLineForm.lotCost="0.00"}ngOnInit(){this.stocklineser.currentUrl="/stocklinemodule/stocklinepages/app-stock-line-setup",this.stocklineser.bredcrumbObj.next(this.stocklineser.currentUrl),this.getLegalEntity(),this.loadConditionData(),this.loadSiteData(),this.loadTagTypes(),this.loadModuleTypes(),this.loadModulesNamesForObtainOwnerTraceable(),this.loadManufacturerData(),this.loadAssetAcquisitionTypeList(),this.stockLineId=this._actRoute.snapshot.params.id,this.stockLineId?(this.isEditMode=!0,this.getStockLineDetailsById(this.stockLineId)):(this.getManagementStructureDetails(this.currentUserManagementStructureId,this.employeeId),this.loadCustomerData(),this.loadVendorData(),this.loadCompanyData(),this.loadPartNumData(),this.loadEmployeeData(),this.loadWorkOrderList())}loadData(t){this.pageSize=t.rows}get currentUserManagementStructureId(){return this.authService.currentUser?this.authService.currentUser.managementStructureId:null}get currentUserMasterCompanyId(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:null}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}get employeeId(){return this.authService.currentUser?this.authService.currentUser.employeeId:0}restoreRecord(t){this.commonService.restoreDocumentByAttachmentId(t.attachmentDetailId,this.authService.currentUser.userName).subscribe(t=>{this.toGetDocumentsListNew(this.stockLineId),this.getDeletedList(this.stockLineId)})}deleteFormList(t){let e=[];for(let n=0;n<this.deletedDocumentList.length;n++)this.deletedDocumentList[n].attachmentId!=t.attachmentId&&e.push(this.deletedDocumentList[n]);this.deletedDocumentList=e}loadCustomerData(t=""){0==this.arrayCustlist.length&&this.arrayCustlist.push(0),this.commonService.autoSuggestionSmartDropDownList("Customer","CustomerId","Name",t,!0,20,this.arrayCustlist.join()).subscribe(t=>{this.allCustomersList=t,this.customerNames=this.allCustomersList},t=>this.saveFailedHelper(t))}loadVendorData(t=""){0==this.arrayVendorlist.length&&this.arrayVendorlist.push(0),this.commonService.autoSuggestionSmartDropDownList("Vendor","VendorId","VendorName",t,!0,20,this.arrayVendorlist.join()).subscribe(t=>{this.allVendorsList=t,this.vendorNames=this.allVendorsList},t=>this.saveFailedHelper(t))}loadCompanyData(t=""){0==this.arrayCompanylist.length&&this.arrayCompanylist.push(0),this.commonService.autoSuggestionSmartDropDownList("LegalEntity","LegalEntityId","Name",t,!0,20,this.arrayCompanylist.join()).subscribe(t=>{this.allCompanyList=t,this.companyNames=this.allCompanyList},t=>this.saveFailedHelper(t))}loadPartNumData(t=""){0==this.arrayItemMasterlist.length&&this.arrayItemMasterlist.push(0),this.commonService.autoSuggestionSmartDropDownList("ItemMaster","ItemMasterId","partnumber",t,!0,20,this.arrayItemMasterlist.join()).subscribe(t=>{this.allPartnumbersList=t.map(t=>({partnumber:t.label,itemMasterId:t.value})),this.partNumbersCollection=this.allPartnumbersList},t=>this.saveFailedHelper(t))}loadOemPnPartNumData(t=""){0==this.arrayItemMasterlist.length&&this.arrayItemMasterlist.push(0),this.commonService.autoSuggestionSmartDropDownList("ItemMaster","ItemMasterId","partnumber",t,!0,20,this.arrayItemMasterlist.join()).subscribe(e=>{this.allPartnumbersList=e.map(t=>({partnumber:t.label,itemMasterId:t.value}));const n=this.stockLineForm.revisedPartId?Object(R.a)("itemMasterId",this.stockLineForm.revisedPartId):0;this.oempnList=[];const i=[...this.allPartnumbersList.filter(e=>e.partnumber.toLowerCase().includes(t.toLowerCase()))];for(let t=0;t<i.length;t++)i[t].partnumber!=this.selectedPartNumber&&i[t].itemMasterId!=n&&this.oempnList.push(i[t])},t=>this.saveFailedHelper(t))}loadConditionData(){0==this.arrayConditionlist.length&&this.arrayConditionlist.push(0),this.commonService.autoSuggestionSmartDropDownList("Condition","ConditionId","Description","",!0,20,this.arrayConditionlist.join()).subscribe(t=>{this.allConditionInfo=t},t=>this.saveFailedHelper(t))}loadSiteData(){this.commonService.smartDropDownList("Site","SiteId","Name").pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.allSites=t})}loadManufacturerData(){this.commonService.smartDropDownList("Manufacturer","ManufacturerId","Name").pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.allManufacturerInfo=t})}loadAssetAcquisitionTypeList(){this.commonService.smartDropDownList("AssetAcquisitionType","AssetAcquisitionTypeId","Name").subscribe(t=>{this.assetAcquisitionTypeList=t})}loadEmployeeData(t=""){0==this.arrayEmployeelist.length&&this.arrayEmployeelist.push(0),this.commonService.autoSuggestionSmartDropDownList("Employee","employeeId","firstName",t,!0,20,this.arrayEmployeelist.join()).subscribe(t=>{this.allEmployeeList=t,this.certifyByNames=this.allEmployeeList},t=>this.saveFailedHelper(t))}loadWorkOrderList(t=""){0==this.arrayWOlist.length&&this.arrayWOlist.push(0),this.commonService.autoSuggestionSmartDropDownList("WorkOrder","WorkOrderId","WorkOrderNum",t,!0,20,this.arrayWOlist.join()).subscribe(t=>{this.allWorkOrderDetails=[{value:0,label:"Select"}],this.allWorkOrderInfo=[...this.allWorkOrderInfo,...t],this.allWorkOrderDetails=[...this.allWorkOrderDetails,...t]},t=>this.saveFailedHelper(t))}loadModuleTypes(){0==this.arrayModulelist.length&&this.arrayModulelist.push(0),this.commonService.autoSuggestionSmartDropDownList("Module","ModuleId","ModuleName","",!0,200,this.arrayModulelist.join()).subscribe(t=>{this.userTypes=t,this.userTypes.map(t=>{"COMPANY"==t.label.toUpperCase()?this.companyModuleId=t.value:"VENDOR"==t.label.toUpperCase()?this.vendorModuleId=t.value:"CUSTOMER"==t.label.toUpperCase()?this.customerModuleId=t.value:"OTHERS"==t.label.toUpperCase()&&(this.otherModuleId=t.value)})})}loadTagTypes(){this.commonService.smartDropDownList("TagType","TagTypeId","Name").subscribe(t=>{this.allTagTypes=t})}loadModulesNamesForObtainOwnerTraceable(){this.commonService.getModuleListForObtainOwnerTraceable().subscribe(t=>{this.moduleListDropdown=t})}loadPOData(t){this.vendorService.getPurchaseOrderByItemId(t).subscribe(t=>{this.allPolistInfo=t[0]})}loadROData(t){this.vendorService.getRepairOrderByItemId(t).subscribe(t=>{this.allRolistInfo=t[0]})}loadNHAData(t){this.itemMasterService.getItemMasterNhaMappingParts(t).subscribe(t=>{this.allNHAInfo=t,1==this.allNHAInfo.length&&this.allNHAInfo.map(t=>{this.stockLineForm.nhaItemMasterId=t.nhaItemMasterId})})}loadTLAData(t){this.itemMasterService.getItemMasterTlaMappingParts(t).subscribe(t=>{this.allTLAInfo=t,1==this.allTLAInfo.length&&this.allTLAInfo.map(t=>{this.stockLineForm.tlaItemMasterId=t.tlaItemMasterId})})}getManagementStructureDetails(t,e=0,n=0){e=0==e?this.employeeId:e,n=this.isEditMode?n=t:0,this.commonService.getManagmentStrctureData(t,e,n).subscribe(t=>{if(t){const e=t;e[0]&&"Level1"==e[0].level?(this.maincompanylist=e[0].lstManagmentStrcture,this.headerInfo.companyId=e[0].managementStructureId,this.headerInfo.managementStructureId=e[0].managementStructureId,this.headerInfo.buId=0,this.headerInfo.divisionId=0,this.headerInfo.departmentId=0,this.bulist=[],this.divisionlist=[],this.departmentList=[]):(this.headerInfo.companyId=0,this.headerInfo.buId=0,this.headerInfo.divisionId=0,this.headerInfo.departmentId=0,this.maincompanylist=[],this.bulist=[],this.divisionlist=[],this.departmentList=[]),e[1]&&"Level2"==e[1].level?(this.bulist=e[1].lstManagmentStrcture,this.headerInfo.buId=e[1].managementStructureId,this.headerInfo.managementStructureId=e[1].managementStructureId,this.headerInfo.divisionId=0,this.headerInfo.departmentId=0,this.divisionlist=[],this.departmentList=[]):(e[1]&&"NEXT"==e[1].level&&(this.bulist=e[1].lstManagmentStrcture),this.headerInfo.buId=0,this.headerInfo.divisionId=0,this.headerInfo.departmentId=0,this.divisionlist=[],this.departmentList=[]),e[2]&&"Level3"==e[2].level?(this.divisionlist=e[2].lstManagmentStrcture,this.headerInfo.divisionId=e[2].managementStructureId,this.headerInfo.managementStructureId=e[2].managementStructureId,this.headerInfo.departmentId=0,this.departmentList=[]):(e[2]&&"NEXT"==e[2].level&&(this.divisionlist=e[2].lstManagmentStrcture),this.headerInfo.divisionId=0,this.headerInfo.departmentId=0,this.departmentList=[]),e[3]&&"Level4"==e[3].level?(this.departmentList=e[3].lstManagmentStrcture,this.headerInfo.departmentId=e[3].managementStructureId,this.headerInfo.managementStructureId=e[3].managementStructureId):(this.headerInfo.departmentId=0,e[3]&&"NEXT"==e[3].level&&(this.departmentList=e[3].lstManagmentStrcture)),this.onSelectManagementStruc(),this.isSpinnerVisible=!1}else this.isSpinnerVisible=!1},t=>{this.isSpinnerVisible=!1;const e=t;this.errorMessageHandler(e)})}getBUList(t){this.headerInfo.buId=0,this.headerInfo.divisionId=0,this.headerInfo.departmentId=0,this.bulist=[],this.divisionlist=[],this.departmentList=[],0!=t&&null!=t&&null!=t?(this.headerInfo.managementStructureId=t,this.headerInfo.companyId=t,this.commonService.getManagementStructurelevelWithEmployee(t,this.employeeId).subscribe(t=>{this.bulist=t})):(this.headerInfo.managementStructureId=0,this.headerInfo.companyId=0)}getDivisionlist(t){this.divisionlist=[],this.departmentList=[],this.headerInfo.divisionId=0,this.headerInfo.departmentId=0,0!=t&&null!=t&&null!=t?(this.headerInfo.managementStructureId=t,this.headerInfo.buId=t,this.commonService.getManagementStructurelevelWithEmployee(t,this.employeeId).subscribe(t=>{this.divisionlist=t})):this.headerInfo.managementStructureId=this.headerInfo.companyId}getDepartmentlist(t){this.headerInfo.departmentId=0,this.departmentList=[],0!=t&&null!=t&&null!=t?(this.headerInfo.divisionId=t,this.headerInfo.managementStructureId=t,this.commonService.getManagementStructurelevelWithEmployee(t,this.employeeId).subscribe(t=>{this.departmentList=t})):(this.headerInfo.managementStructureId=this.headerInfo.buId,this.headerInfo.divisionId=0)}getDepartmentId(t){0!=t&&null!=t&&null!=t?(this.headerInfo.managementStructureId=t,this.headerInfo.departmentId=t):(this.headerInfo.managementStructureId=this.headerInfo.divisionId,this.headerInfo.departmentId=0)}getStockLineDetailsById(t){this.stocklineser.getStockLineDetailsById(t).subscribe(t=>{this.loadPOData(t.itemMasterId),this.loadROData(t.itemMasterId),this.loadNHAData(t.itemMasterId),this.loadTLAData(t.itemMasterId),this.arrayItemMasterlist.push(t.itemMasterId),t.revisedPartId>0&&this.arrayItemMasterlist.push(t.revisedPartId),t.isOemPNId>0&&this.arrayItemMasterlist.push(t.isOemPNId),this.arrayVendorlist.push(t.vendorId),this.arrayModulelist.push(t.obtainFromType),this.arrayModulelist.push(t.ownerType),this.arrayModulelist.push(t.traceableToType),this.commonService.autoSuggestionSmartDropDownList("ItemMaster","ItemMasterId","partnumber","",!0,20,this.arrayItemMasterlist.join()).subscribe(e=>{if(this.allPartnumbersList=e.map(t=>({partnumber:t.label,itemMasterId:t.value})),this.selectedPartNumber=t.partNumber,this.stockLineForm=Object.assign({},t,{itemMasterId:Object(R.d)("itemMasterId",t.itemMasterId,this.allPartnumbersList),isOemPNId:Object(R.d)("itemMasterId",t.isOemPNId,this.allPartnumbersList),oem:t.oem.toString(),certifiedDate:t.certifiedDate?new Date(t.certifiedDate):"",certifiedDueDate:t.certifiedDueDate?new Date(t.certifiedDueDate):"",manufacturingDate:t.manufacturingDate?new Date(t.manufacturingDate):"",orderDate:t.orderDate?new Date(t.orderDate):"",receivedDate:t.receivedDate?new Date(t.receivedDate):"",inspectionDate:t.inspectionDate?new Date(t.inspectionDate):"",entryDate:t.entryDate?new Date(t.entryDate):"",expirationDate:t.expirationDate?new Date(t.expirationDate):"",tagDate:t.tagDate?new Date(t.tagDate):"",shelfLifeExpirationDate:t.shelfLifeExpirationDate?new Date(t.shelfLifeExpirationDate):"",receiverNumber:t.receiver,quantityOnHand:t.quantityOnHand||0==t.quantityOnHand?Object(R.b)(t.quantityOnHand,0):"0",quantityReserved:t.quantityReserved||0==t.quantityReserved?Object(R.b)(t.quantityReserved,0):"0",quantityIssued:t.quantityIssued||0==t.quantityIssued?Object(R.b)(t.quantityIssued,0):"0",quantityAvailable:t.quantityAvailable||0==t.quantityAvailable?Object(R.b)(t.quantityAvailable,0):"0",purchaseOrderUnitCost:t.purchaseOrderUnitCost?Object(R.b)(t.purchaseOrderUnitCost,2):"0.00",repairOrderUnitCost:t.repairOrderUnitCost?Object(R.b)(t.repairOrderUnitCost,2):"0.00",unitSalesPrice:t.unitSalesPrice?Object(R.b)(t.unitSalesPrice,2):"0.00",coreUnitCost:t.coreUnitCost?Object(R.b)(t.coreUnitCost,2):"0.00",lotCost:t.lotCost?Object(R.b)(t.lotCost,2):"0.00",conditionId:this.getInactiveObjectOnEdit("value",t.conditionId,this.allConditionInfo,"Condition","ConditionId","Description"),manufacturerId:this.getInactiveObjectOnEdit("value",t.manufacturerId,this.allManufacturerInfo,"Manufacturer","ManufacturerId","Name"),acquistionTypeId:this.getInactiveObjectOnEdit("value",t.acquistionTypeId,this.assetAcquisitionTypeList,"AssetAcquisitionType","AssetAcquisitionTypeId","Name"),purchaseOrderId:this.getInactiveObjectOnEdit("value",t.purchaseOrderId,this.allPolistInfo,"PurchaseOrder","PurchaseOrderId","PurchaseOrderNumber"),repairOrderId:this.getInactiveObjectOnEdit("value",t.repairOrderId,this.allRolistInfo,"RepairOrder","RepairOrderId","RepairOrderNumber"),nhaItemMasterId:this.getInactiveObjectNHATLAOnEdit("nhaItemMasterId",t.nhaItemMasterId,this.allNHAInfo),tlaItemMasterId:this.getInactiveObjectNHATLAOnEdit("tlaItemMasterId",t.tlaItemMasterId,this.allTLAInfo)}),this.loadModuleTypes(),this.getSiteDetailsOnEdit(t),this.onPartNumberSelectedOnEdit(t.itemMasterId),this.headerInfo={companyId:this.getManagementStructureDetails(t.managementStructureId,this.employeeId,t.managementStructureId)},this.getObtainOwnerTraceOnEdit(t),this.onSelectConditionType(t.conditionId),this.toGetDocumentsListNew(this.stockLineId),this.getDeletedList(this.stockLineId),this.getVendorSelecionOnEdit(t.vendorId),this.getWOSelecionOnEdit(t.workOrderId),this.getEmployeeSelecionOnEdit(t.requestorId,t.inspectionBy),1==t.isSerialized?this.hideSerialNumber=!1:this.hideSerialNumber=!0,null!=t.timelIfeData&&null!=t.timelIfeData&&0!=t.timelIfeData&&(this.timeLifeCyclesId=t.timelIfeData.timeLifeCyclesId,this.sourceTimeLife=t.timelIfeData),this.stockLineForm.tagType&&"0"!=this.stockLineForm.tagType){this.stockLineForm.tagType=this.stockLineForm.tagType.split(",");for(let t=0;t<this.stockLineForm.tagType.length;t++)this.stockLineForm.tagType[t]=this.getIdFromArrayOfObjectByValue("value","label",this.stockLineForm.tagType[t],this.allTagTypes)}else this.stockLineForm.tagType=[];this.stockLineForm.purchaseOrderId&&(this.disableVendor=!0),this.getSiteDetailsInactive(t)})})}parsedText(t){if(t){return(new DOMParser).parseFromString("<!doctype html><body>"+t,"text/html").body.textContent}}getIdFromArrayOfObjectByValue(t,e,n,i){if(""!==t&&void 0!==t&&""!==e&&void 0!==e&&""!==n&&void 0!==n&&void 0!==i&&i.length>0){return i.filter(t=>{if(t[e].toLowerCase()===n.toLowerCase())return t})[0][t]}}getInactiveObjectOnEdit(t,e,n,i,r,o){if(e){for(let i=0;i<n.length;i++)if(n[i][t]==e)return e;let s={};return this.commonService.smartDropDownGetObjectById(i,r,o,r,e).subscribe(t=>{s=t[0],"Condition"==i?this.allConditionInfo=[...n,s]:"Manufacturer"==i?this.allManufacturerInfo=[...n,s]:"AssetAcquisitionType"==i?this.assetAcquisitionTypeList=[...n,s]:"PurchaseOrder"==i?this.allPolistInfo=[...n,{purchaseOrderId:s.value,purchaseOrderNumber:s.label}]:"RepairOrder"==i?this.allRolistInfo=[...n,{repairOrderId:s.value,repairOrderNumber:s.label}]:"Site"==i?this.allSites=[...n,s]:"Warehouse"==i?this.allWareHouses=[...n,s]:"Location"==i?this.allLocations=[...n,s]:"Shelf"==i?this.allShelfs=[...n,s]:"Bin"==i&&(this.allBins=[...n,s])}),e}return null}getInactiveObjectNHATLAOnEdit(t,e,n){if(e){for(let r=0;r<n.length;r++)if(n[r][t]==e)return e;let i={};return this.itemMasterService.getItemMasterMappingPart(e).subscribe(e=>{i=e,"nhaItemMasterId"==t?this.allNHAInfo=[...n,{nhaItemMasterId:e.value,partNumber:e.label}]:"tlaItemMasterId"==t&&(this.allTLAInfo=[...n,{tlaItemMasterId:e.value,partNumber:e.label}])}),e}return null}getSiteDetailsOnEdit(t){this.onSelectSiteName(t.siteId),this.getWareHouseList(t.siteId),this.getLocationList(t.warehouseId),this.getShelfList(t.locationId),this.getBinList(t.shelfId)}getSiteDetailsInactive(t){this.stockLineForm.siteId=this.getInactiveObjectOnEdit("value",t.siteId,this.allSites,"Site","SiteId","Name"),this.stockLineForm.warehouseId=this.getInactiveObjectOnEdit("value",t.warehouseId,this.allWareHouses,"Warehouse","WarehouseId","Name"),this.stockLineForm.locationId=this.getInactiveObjectOnEdit("value",t.locationId,this.allLocations,"Location","LocationId","Name"),this.stockLineForm.shelfId=this.getInactiveObjectOnEdit("value",t.shelfId,this.allShelfs,"Shelf","ShelfId","Name"),this.stockLineForm.binId=this.getInactiveObjectOnEdit("value",t.binId,this.allBins,"Bin","BinId","Name")}getVendorSelecionOnEdit(t){this.arrayVendorlist.push(t),t>0&&this.commonService.autoSuggestionSmartDropDownList("Vendor","VendorId","VendorName","",!0,20,this.arrayVendorlist.join()).subscribe(e=>{this.allVendorsList=e,this.vendorNames=this.allVendorsList,this.stockLineForm.vendorId=Object(R.d)("value",t,this.allVendorsList)},t=>this.saveFailedHelper(t))}getWOSelecionOnEdit(t){this.arrayWOlist.push(t),t>0&&this.commonService.autoSuggestionSmartDropDownList("WorkOrder","WorkOrderId","WorkOrderNum","",!0,20,this.arrayWOlist.join()).subscribe(e=>{this.allWorkOrderDetails=[{value:0,label:"Select"}],this.allWorkOrderInfo=[...this.allWorkOrderInfo,...e],this.allWorkOrderDetails=[...this.allWorkOrderDetails,...e],this.stockLineForm.workOrderId=Object(R.d)("value",null==t?0:t,this.allWorkOrderInfo)},t=>this.saveFailedHelper(t))}getEmployeeSelecionOnEdit(t,e){this.arrayWOlist.push(t),this.arrayWOlist.push(e),this.commonService.autoSuggestionSmartDropDownList("Employee","employeeId","firstName","",!0,20,this.arrayEmployeelist.join()).subscribe(n=>{this.allEmployeeList=n,this.certifyByNames=this.allEmployeeList,this.stockLineForm.requestorId=Object(R.d)("value",t,this.allEmployeeList),this.stockLineForm.inspectionBy=Object(R.d)("value",e,this.allEmployeeList)},t=>this.saveFailedHelper(t))}getObtainOwnerTraceOnEdit(t){null!=t.obtainFrom&&this.arrayCustlist.push(t.obtainFrom),null!=t.owner&&this.arrayCustlist.push(t.owner),null!=t.traceableTo&&this.arrayCustlist.push(t.traceableTo),null!=t.obtainFrom&&this.arrayVendorlist.push(t.obtainFrom),null!=t.owner&&this.arrayVendorlist.push(t.owner),null!=t.traceableTo&&this.arrayVendorlist.push(t.traceableTo),null!=t.obtainFrom&&this.arrayCompanylist.push(t.obtainFrom),null!=t.owner&&this.arrayCompanylist.push(t.owner),null!=t.traceableTo&&this.arrayCompanylist.push(t.traceableTo),t.obtainFromType==this.customerModuleId?this.commonService.autoSuggestionSmartDropDownList("Customer","CustomerId","Name","",!0,20,this.arrayCustlist.join()).subscribe(e=>{this.allCustomersList=e,this.customerNames=this.allCustomersList,this.stockLineForm.obtainFrom=Object(R.d)("value",t.obtainFrom,this.allCustomersList)},t=>this.saveFailedHelper(t)):t.obtainFromType==this.vendorModuleId?this.commonService.autoSuggestionSmartDropDownList("Vendor","VendorId","VendorName","",!0,20,this.arrayVendorlist.join()).subscribe(e=>{this.allVendorsList=e,this.vendorNames=this.allVendorsList,this.stockLineForm.obtainFrom=Object(R.d)("value",t.obtainFrom,this.allVendorsList)},t=>this.saveFailedHelper(t)):t.obtainFromType==this.companyModuleId?this.commonService.autoSuggestionSmartDropDownList("LegalEntity","LegalEntityId","Name","",!0,20,this.arrayCompanylist.join()).subscribe(e=>{this.allCompanyList=e,this.companyNames=this.allCompanyList,this.stockLineForm.obtainFrom=Object(R.d)("value",t.obtainFrom,this.allCompanyList)},t=>this.saveFailedHelper(t)):t.obtainFromType==this.otherModuleId&&(this.stockLineForm.obtainFrom=t.obtainFrom),t.ownerType==this.customerModuleId?this.commonService.autoSuggestionSmartDropDownList("Customer","CustomerId","Name","",!0,20,this.arrayCustlist.join()).subscribe(e=>{this.allCustomersList=e,this.customerNames=this.allCustomersList,this.stockLineForm.owner=Object(R.d)("value",t.owner,this.allCustomersList)},t=>this.saveFailedHelper(t)):t.ownerType==this.vendorModuleId?this.commonService.autoSuggestionSmartDropDownList("Vendor","VendorId","VendorName","",!0,20,this.arrayVendorlist.join()).subscribe(e=>{this.allVendorsList=e,this.vendorNames=this.allVendorsList,this.stockLineForm.owner=Object(R.d)("value",t.owner,this.allVendorsList)},t=>this.saveFailedHelper(t)):t.ownerType==this.companyModuleId?this.commonService.autoSuggestionSmartDropDownList("LegalEntity","LegalEntityId","Name","",!0,20,this.arrayCompanylist.join()).subscribe(e=>{this.allCompanyList=e,this.companyNames=this.allCompanyList,this.stockLineForm.owner=Object(R.d)("value",t.owner,this.allCompanyList)},t=>this.saveFailedHelper(t)):t.ownerType==this.otherModuleId&&(this.stockLineForm.owner=t.owner),t.traceableToType==this.customerModuleId?this.commonService.autoSuggestionSmartDropDownList("Customer","CustomerId","Name","",!0,20,this.arrayCustlist.join()).subscribe(e=>{this.allCustomersList=e,this.customerNames=this.allCustomersList,this.stockLineForm.traceableTo=Object(R.d)("value",t.traceableTo,this.allCustomersList)},t=>this.saveFailedHelper(t)):t.traceableToType==this.vendorModuleId?this.commonService.autoSuggestionSmartDropDownList("Vendor","VendorId","VendorName","",!0,20,this.arrayVendorlist.join()).subscribe(e=>{this.allVendorsList=e,this.vendorNames=this.allVendorsList,this.stockLineForm.traceableTo=Object(R.d)("value",t.traceableTo,this.allVendorsList)},t=>this.saveFailedHelper(t)):t.traceableToType==this.companyModuleId?this.commonService.autoSuggestionSmartDropDownList("LegalEntity","LegalEntityId","Name","",!0,20,this.arrayCompanylist.join()).subscribe(e=>{this.allCompanyList=e,this.companyNames=this.allCompanyList,this.stockLineForm.traceableTo=Object(R.d)("value",t.traceableTo,this.allCompanyList)},t=>this.saveFailedHelper(t)):t.traceableToType==this.otherModuleId&&(this.stockLineForm.traceableTo=t.traceableTo)}filterPartNumbers(t){this.partNumbersCollection=this.allPartnumbersList,void 0!==t.query&&null!==t.query&&this.loadPartNumData(t.query)}filterpn(t){void 0!==t.query&&null!==t.query&&this.loadOemPnPartNumData(t.query)}filterCustomerNames(t){void 0!==t.query&&null!==t.query&&this.loadCustomerData(t.query)}filterVendorNames(t){void 0!==t.query&&null!==t.query&&this.loadVendorData(t.query)}filterCompanyNames(t){void 0!==t.query&&null!==t.query&&this.loadCompanyData(t.query)}filterEmployees(t){void 0!==t.query&&null!==t.query&&this.loadEmployeeData(t.query)}filterWorkOrderList(t){void 0!==t.query&&null!==t.query&&this.loadWorkOrderList(t.query)}onPartNumberSelected(t){this.loadPOData(t),this.loadROData(t),this.loadNHAData(t),this.loadTLAData(t),this.getUnitCostSalePrice(),this.sourceTimeLife={},this.itemMasterService.getDataForStocklineByItemMasterId(t).subscribe(t=>{const e=t;this.stockLineForm.oem=e.isOEM.toString(),t.isOemPNId>0&&(this.arrayItemMasterlist.push(t.isOemPNId),this.commonService.autoSuggestionSmartDropDownList("ItemMaster","ItemMasterId","partnumber","",!0,20,this.arrayItemMasterlist.join()).subscribe(e=>{this.allPartnumbersList=e.map(t=>({partnumber:t.label,itemMasterId:t.value})),this.stockLineForm.isOemPNId=Object(R.d)("itemMasterId",t.isOemPNId,this.allPartnumbersList)},t=>this.saveFailedHelper(t))),this.stockLineForm.partDescription=e.partDescription,this.stockLineForm.revisedPart=e.revisedPart,this.stockLineForm.itemGroup=e.itemGroup,this.stockLineForm.glAccountName=e.glAccount,this.stockLineForm.acquistionTypeId=this.getInactiveObjectOnEdit("value",e.assetAcquistionTypeId,this.assetAcquisitionTypeList,"AssetAcquisitionType","AssetAcquisitionTypeId","Name"),this.stockLineForm.manufacturerId=this.getInactiveObjectOnEdit("value",e.manufacturerId,this.allManufacturerInfo,"Manufacturer","ManufacturerId","Name"),this.stockLineForm.integrationPortal=e.integrationPortal,this.stockLineForm.shelfLife=e.shelfLife,this.stockLineForm.shelfLifeExpirationDate=this.datePipe.transform(e.expirationDate,"MM/dd/yyyy"),this.stockLineForm.isSerialized=e.isSerialized,this.stockLineForm.itarNumber=e.itarNumber,this.stockLineForm.nationalStockNumber=e.nationalStockNumber,this.stockLineForm.exportECCN=e.exportECCN,this.stockLineForm.tagDays=e.tagDays,this.stockLineForm.manufacturingDays=e.manufacturingDays,this.stockLineForm.daysReceived=e.daysReceived,this.stockLineForm.openDays=e.openDays,this.stockLineForm.siteId=this.getInactiveObjectOnEdit("value",e.siteId,this.allSites,"Site","SiteId","Name"),this.getWareHouseList(e.siteId),this.getLocationList(e.warehouseId),this.getShelfList(e.locationId),this.getBinList(e.shelfId),this.stockLineForm.IsManufacturingDateAvailable=e.IsManufacturingDateAvailable,1==this.stockLineForm.isSerialized?(this.hideSerialNumber=!1,this.stockLineForm.quantityOnHand=1,this.stockLineForm.quantityAvailable=1,this.stockLineForm.quantityReserved=null,this.stockLineForm.quantityIssued=null,this.disableQtyOnHand=!0):(this.hideSerialNumber=!0,this.stockLineForm.quantityOnHand=null,this.stockLineForm.quantityReserved=null,this.stockLineForm.quantityIssued=null,this.stockLineForm.quantityAvailable=null,this.disableQtyOnHand=!1),this.stockLineForm.isDER=e.der,this.stockLineForm.oem=e.isOEM.toString(),this.sourceTimeLife.timeLife=e.isTimeLife,this.disableManufacturer=!1,this.stockLineForm.locationId=this.getInactiveObjectOnEdit("value",e.locationId,this.allLocations,"Location","LocationId","Name"),this.stockLineForm.shelfId=this.getInactiveObjectOnEdit("value",e.shelfId,this.allShelfs,"Shelf","ShelfId","Name"),this.stockLineForm.warehouseId=this.getInactiveObjectOnEdit("value",e.warehouseId,this.allWareHouses,"Warehouse","WarehouseId","Name"),this.stockLineForm.binId=this.getInactiveObjectOnEdit("value",e.binId,this.allBins,"Bin","BinId","Name")}),this.stockLineForm.requestorId=null}onPartNumberSelectedOnEdit(t){this.sourceTimeLife={},this.disableManufacturer=!1,this.itemMasterService.getDataForStocklineByItemMasterId(t).subscribe(t=>{const e=t;this.stockLineForm.tagDays=e.tagDays,this.stockLineForm.manufacturingDays=e.manufacturingDays,this.stockLineForm.daysReceived=e.daysReceived,this.stockLineForm.openDays=e.openDays,this.sourceTimeLife.timeLife=e.isTimeLife,this.stockLineForm.revisedPart=e.revisedPart,this.stockLineForm.itemGroup=e.itemGroup,this.stockLineForm.glAccountName=e.glAccount,this.stockLineForm.isSerialized=e.isSerialized,1==this.stockLineForm.isSerialized?this.disableQtyOnHand=!0:this.disableQtyOnHand=!1})}getUnitCostSalePrice(){if(this.stockLineForm.itemMasterId&&"0"!=this.stockLineForm.conditionId){const t=Object(R.h)("value",this.stockLineForm.itemMasterId),e=this.stockLineForm.conditionId;this.commonService.getPriceDetailsByCondId(t,e).subscribe(t=>{t&&(this.stockLineForm.purchaseOrderUnitCost=t.unitCost?Object(R.b)(t.unitCost,2):"0.00",this.stockLineForm.unitSalesPrice=t.salePrice?Object(R.b)(t.salePrice,2):"0.00")})}}getLegalEntity(){this.commonService.getLegalEntityList().pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.legalEntityList=t})}onSelectManagementStruc(){0!=this.headerInfo.companyId?this.disableMagmtStruct=!1:this.disableMagmtStruct=!0}resetQtyFields(){this.stockLineForm.quantityReserved=null,this.stockLineForm.quantityIssued=null,this.stockLineForm.quantityAvailable=null}resetQtyIssued(){this.stockLineForm.quantityIssued=null}calculateQtyAvailable(){if(this.stockLineForm.quantityOnHand=this.stockLineForm.quantityOnHand?Object(R.b)(this.stockLineForm.quantityOnHand,0):"0",null!=this.stockLineForm.quantityOnHand&&(this.stockLineForm.quantityAvailable=this.stockLineForm.quantityOnHand),null!=this.stockLineForm.quantityOnHand&&null!=this.stockLineForm.quantityReserved){const t=parseFloat(this.stockLineForm.quantityOnHand.toString().replace(/\,/g,""))-parseFloat(this.stockLineForm.quantityReserved.toString().replace(/\,/g,""));this.stockLineForm.quantityAvailable=Object(R.b)(t,0)}}calcQtyReservedByQtyIssued(){this.stockLineForm.quantityIssued=this.stockLineForm.quantityIssued?Object(R.b)(this.stockLineForm.quantityIssued,0):"0";const t=parseFloat(this.stockLineForm.quantityIssued.toString().replace(/\,/g,"")),e=parseFloat(this.stockLineForm.quantityReserved.toString().replace(/\,/g,"")),n=parseFloat(this.stockLineForm.quantityOnHand.toString().replace(/\,/g,"")),i=parseFloat(this.stockLineForm.quantityAvailable.toString().replace(/\,/g,""));if(t>e){this.stockLineForm.quantityIssued=null;const t=n-i;this.stockLineForm.quantityReserved=Object(R.b)(t,0),this.alertService.showMessage("Error","Qty Issued cannot be greater than Qty Reserved",O.d.error)}else if(null!=n&&null!=e&&null!=t){const i=e-t;this.stockLineForm.quantityReserved=Object(R.b)(i,0);const r=n-i-t;this.stockLineForm.quantityAvailable=Object(R.b)(r,0)}}onChangeQtyReserved(){this.stockLineForm.quantityReserved=this.stockLineForm.quantityReserved?Object(R.b)(this.stockLineForm.quantityReserved,0):"0";parseFloat(this.stockLineForm.quantityReserved.toString().replace(/\,/g,""))>parseFloat(this.stockLineForm.quantityOnHand.toString().replace(/\,/g,""))?(this.stockLineForm.quantityReserved=null,this.stockLineForm.quantityAvailable=this.stockLineForm.quantityOnHand,this.alertService.showMessage("Error","Qty Reserved cannot be greater than Qty On Hand",O.d.error)):this.calculateQtyAvailable()}getWareHouseList(t){return i.a(this,void 0,void 0,(function*(){this.allWareHouses=[],this.allLocations=[],this.allShelfs=[],this.allBins=[],this.stockLineForm.warehouseId=0,this.stockLineForm.locationId=0,this.stockLineForm.shelfId=0,this.stockLineForm.binId=0,0!=t&&(yield this.commonService.smartDropDownList("Warehouse","WarehouseId","Name","SiteId",t).pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.allWareHouses=t})),this.onSelectSiteName(t)}))}onSelectSiteName(t){this.disableSiteName=0==t}getLocationList(t){return i.a(this,void 0,void 0,(function*(){this.allLocations=[],this.allShelfs=[],this.allBins=[],this.stockLineForm.locationId=0,this.stockLineForm.shelfId=0,this.stockLineForm.binId=0,0!=t&&(yield this.commonService.smartDropDownList("Location","LocationId","Name","WarehouseId",t).pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.allLocations=t}))}))}getShelfList(t){return i.a(this,void 0,void 0,(function*(){this.allShelfs=[],this.allBins=[],this.stockLineForm.shelfId=0,this.stockLineForm.binId=0,0!=t&&(yield this.commonService.smartDropDownList("Shelf","ShelfId","Name","LocationId",t).pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.allShelfs=t}))}))}getBinList(t){return i.a(this,void 0,void 0,(function*(){this.allBins=[],this.stockLineForm.binId=0,0!=t&&(yield this.commonService.smartDropDownList("Bin","BinId","Name","ShelfId",t).pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.allBins=t}))}))}onSelectObrainFrom(){this.stockLineForm.obtainFrom=void 0}onSelectOwner(){this.stockLineForm.owner=void 0}onSelectTraceableTo(){this.stockLineForm.traceableTo=void 0}onChangePONum(t){this.stocklineser.getPurchaseOrderUnitCost(t).subscribe(t=>{const e=t;e.length>0?(this.stockLineForm.purchaseOrderUnitCost=e[0].unitCost?Object(R.b)(e[0].unitCost,2):"0.00",this.arrayVendorlist.push(e[0].vendorId),this.commonService.autoSuggestionSmartDropDownList("Vendor","VendorId","VendorName","",!0,20,this.arrayVendorlist.join()).subscribe(t=>{this.allVendorsList=t,this.vendorNames=this.allVendorsList,this.stockLineForm.vendorId=Object(R.d)("value",e[0].vendorId,this.allVendorsList),this.disableVendor=!0},t=>this.saveFailedHelper(t))):this.disableVendor=!1}),this.commonService.smartDropDownList("PurchaseOrder","PurchaseOrderId","RequestedBy","PurchaseOrderId",t).pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{if(t.length>0){const e=t[0].label;this.stockLineForm.requestorId=Object(R.d)("value",e,this.allEmployeeList)}})}onChangeRONum(t){this.stocklineser.getRepairOrderUnitCost(t).subscribe(t=>{this.stockLineForm.repairOrderUnitCost=t[0].unitCost?Object(R.b)(t[0].unitCost,2):"0.00"})}enableSaveMemo(){this.disableSaveMemo=!1}onAddTextAreaInfo(t){"blackListedReason"==t?(this.textAreaLabel="BlackListed Reason",this.textAreaInfo=this.stockLineForm.blackListedReason,this.disableSaveMemo=!0):"incidentReason"==t?(this.textAreaLabel="Incident Reason",this.textAreaInfo=this.stockLineForm.incidentReason,this.disableSaveMemo=!0):"accidentReason"==t?(this.textAreaLabel="Accident Reason",this.textAreaInfo=this.stockLineForm.accidentReason,this.disableSaveMemo=!0):"memo"==t&&(this.textAreaLabel="Memo",this.textAreaInfo=this.stockLineForm.memo,this.disableSaveMemo=!0)}onSaveTextAreaInfo(){"BlackListed Reason"==this.textAreaLabel?this.stockLineForm.blackListedReason=this.textAreaInfo:"Incident Reason"==this.textAreaLabel?this.stockLineForm.incidentReason=this.textAreaInfo:"Accident Reason"==this.textAreaLabel?this.stockLineForm.accidentReason=this.textAreaInfo:"Memo"==this.textAreaLabel&&(this.enableSaveDocument(),this.stockLineForm.memo=this.textAreaInfo)}onSelectConditionType(t){this.disableCondition=0==t}onSelectManufacturer(t){this.disableManufacturer=0==t}onSaveStockLine(){this.isSpinnerVisible=!0;const t={timeLifeCyclesId:this.timeLifeCyclesId>0?this.timeLifeCyclesId:null,cyclesRemaining:"string"==typeof this.sourceTimeLife.cyclesRemaining?this.sourceTimeLife.cyclesRemaining:this.sourceTimeLife.cyclesRemaining?this.datePipe.transform(this.sourceTimeLife.cyclesRemaining,"HH:mm"):null,timeRemaining:"string"==typeof this.sourceTimeLife.timeRemaining?this.sourceTimeLife.timeRemaining:this.sourceTimeLife.timeRemaining?this.datePipe.transform(this.sourceTimeLife.timeRemaining,"HH:mm"):null,cyclesSinceNew:"string"==typeof this.sourceTimeLife.cyclesSinceNew?this.sourceTimeLife.cyclesSinceNew:this.sourceTimeLife.cyclesSinceNew?this.datePipe.transform(this.sourceTimeLife.cyclesSinceNew,"HH:mm"):null,timeSinceNew:"string"==typeof this.sourceTimeLife.timeSinceNew?this.sourceTimeLife.timeSinceNew:this.sourceTimeLife.timeSinceNew?this.datePipe.transform(this.sourceTimeLife.timeSinceNew,"HH:mm"):null,lastSinceNew:"string"==typeof this.sourceTimeLife.lastSinceNew?this.sourceTimeLife.lastSinceNew:this.sourceTimeLife.lastSinceNew?this.datePipe.transform(this.sourceTimeLife.lastSinceNew,"HH:mm"):null,cyclesSinceOVH:"string"==typeof this.sourceTimeLife.cyclesSinceOVH?this.sourceTimeLife.cyclesSinceOVH:this.sourceTimeLife.cyclesSinceOVH?this.datePipe.transform(this.sourceTimeLife.cyclesSinceOVH,"HH:mm"):null,timeSinceOVH:"string"==typeof this.sourceTimeLife.timeSinceOVH?this.sourceTimeLife.timeSinceOVH:this.sourceTimeLife.timeSinceOVH?this.datePipe.transform(this.sourceTimeLife.timeSinceOVH,"HH:mm"):null,lastSinceOVH:"string"==typeof this.sourceTimeLife.lastSinceOVH?this.sourceTimeLife.lastSinceOVH:this.sourceTimeLife.lastSinceOVH?this.datePipe.transform(this.sourceTimeLife.lastSinceOVH,"HH:mm"):null,cyclesSinceInspection:"string"==typeof this.sourceTimeLife.cyclesSinceInspection?this.sourceTimeLife.cyclesSinceInspection:this.sourceTimeLife.cyclesSinceInspection?this.datePipe.transform(this.sourceTimeLife.cyclesSinceInspection,"HH:mm"):null,timeSinceInspection:"string"==typeof this.sourceTimeLife.timeSinceInspection?this.sourceTimeLife.timeSinceInspection:this.sourceTimeLife.timeSinceInspection?this.datePipe.transform(this.sourceTimeLife.timeSinceInspection,"HH:mm"):null,lastSinceInspection:"string"==typeof this.sourceTimeLife.lastSinceInspection?this.sourceTimeLife.lastSinceInspection:this.sourceTimeLife.lastSinceInspection?this.datePipe.transform(this.sourceTimeLife.lastSinceInspection,"HH:mm"):null,cyclesSinceRepair:"string"==typeof this.sourceTimeLife.cyclesSinceRepair?this.sourceTimeLife.cyclesSinceRepair:this.sourceTimeLife.cyclesSinceRepair?this.datePipe.transform(this.sourceTimeLife.cyclesSinceRepair,"HH:mm"):null,timeSinceRepair:"string"==typeof this.sourceTimeLife.timeSinceRepair?this.sourceTimeLife.timeSinceRepair:this.sourceTimeLife.timeSinceRepair?this.datePipe.transform(this.sourceTimeLife.timeSinceRepair,"HH:mm"):null};if(this.saveStockLineForm=Object.assign({},this.stockLineForm,{isOemPNId:Object(R.h)("itemMasterId",this.stockLineForm.isOemPNId),isPMA:"true"==this.stockLineForm.oem?"false":"true",certifiedDate:this.datePipe.transform(this.stockLineForm.certifiedDate,"MM/dd/yyyy"),tagDate:this.datePipe.transform(this.stockLineForm.tagDate,"MM/dd/yyyy"),certifiedDueDate:this.datePipe.transform(this.stockLineForm.certifiedDueDate,"MM/dd/yyyy"),shelfLifeExpirationDate:this.datePipe.transform(this.stockLineForm.shelfLifeExpirationDate,"MM/dd/yyyy"),receivedDate:this.datePipe.transform(this.stockLineForm.receivedDate,"MM/dd/yyyy"),inspectionDate:this.stockLineForm.inspectionDate?this.datePipe.transform(this.stockLineForm.inspectionDate,"MM/dd/yyyy"):"",entryDate:this.datePipe.transform(this.stockLineForm.entryDate,"MM/dd/yyyy"),expirationDate:this.datePipe.transform(this.stockLineForm.expirationDate,"MM/dd/yyyy"),manufacturingDate:this.datePipe.transform(this.stockLineForm.manufacturingDate,"MM/dd/yyyy"),partNumber:null!=this.stockLineForm.itemMasterId?this.stockLineForm.itemMasterId.partnumber:"",itemMasterId:Object(R.h)("itemMasterId",this.stockLineForm.itemMasterId),vendorId:this.stockLineForm.vendorId?Object(R.a)("value",this.stockLineForm.vendorId):"",obtainFrom:this.stockLineForm.obtainFrom?Object(R.a)("value",this.stockLineForm.obtainFrom):"",obtainFromType:this.stockLineForm.obtainFromType>0?this.stockLineForm.obtainFromType:null,ownerType:this.stockLineForm.ownerType>0?this.stockLineForm.ownerType:null,traceableToType:this.stockLineForm.traceableToType>0?this.stockLineForm.traceableToType:null,manufacturerId:this.stockLineForm.manufacturerId>0?this.stockLineForm.manufacturerId:null,purchaseOrderId:this.stockLineForm.purchaseOrderId>0?this.stockLineForm.purchaseOrderId:null,repairOrderId:this.stockLineForm.repairOrderId>0?this.stockLineForm.repairOrderId:null,owneconditionIdrType:this.stockLineForm.conditionId>0?this.stockLineForm.conditionId:null,nha:this.stockLineForm.nha>0?this.stockLineForm.nha:null,tla:this.stockLineForm.tla>0?this.stockLineForm.tla:null,warehouseId:this.stockLineForm.warehouseId>0?this.stockLineForm.warehouseId:null,locationId:this.stockLineForm.locationId>0?this.stockLineForm.locationId:null,shelfId:this.stockLineForm.shelfId>0?this.stockLineForm.shelfId:null,binId:this.stockLineForm.binId>0?this.stockLineForm.binId:null,owner:this.stockLineForm.owner?Object(R.a)("value",this.stockLineForm.owner):"",traceableTo:this.stockLineForm.traceableTo?Object(R.a)("value",this.stockLineForm.traceableTo):"",requestorId:this.stockLineForm.requestorId?Object(R.h)("value",this.stockLineForm.requestorId):"",inspectionBy:this.stockLineForm.inspectionBy?Object(R.h)("value",this.stockLineForm.inspectionBy):"",workOrderId:this.stockLineForm.workOrderId&&0!=this.getValueFromObj(this.stockLineForm.workOrderId)?this.getValueFromObj(this.stockLineForm.workOrderId):null,quantityOnHand:this.stockLineForm.quantityOnHand?parseFloat(this.stockLineForm.quantityOnHand.toString().replace(/\,/g,"")):0,quantityReserved:this.stockLineForm.quantityReserved?parseFloat(this.stockLineForm.quantityReserved.toString().replace(/\,/g,"")):0,quantityIssued:this.stockLineForm.quantityIssued?parseFloat(this.stockLineForm.quantityIssued.toString().replace(/\,/g,"")):0,quantityAvailable:this.stockLineForm.quantityAvailable?parseFloat(this.stockLineForm.quantityAvailable.toString().replace(/\,/g,"")):0,purchaseOrderUnitCost:this.stockLineForm.purchaseOrderUnitCost?parseFloat(this.stockLineForm.purchaseOrderUnitCost.toString().replace(/\,/g,"")):"0.00",repairOrderUnitCost:this.stockLineForm.repairOrderUnitCost?parseFloat(this.stockLineForm.repairOrderUnitCost.toString().replace(/\,/g,"")):"0.00",unitSalesPrice:this.stockLineForm.unitSalesPrice?parseFloat(this.stockLineForm.unitSalesPrice.toString().replace(/\,/g,"")):"0.00",coreUnitCost:this.stockLineForm.coreUnitCost?parseFloat(this.stockLineForm.coreUnitCost.toString().replace(/\,/g,"")):"0.00",lotCost:this.stockLineForm.lotCost?parseFloat(this.stockLineForm.lotCost.toString().replace(/\,/g,"")):"0.00",timeLifes:Object.assign({},t,{timeLifeCyclesId:this.timeLifeCyclesId,updatedDate:new Date}),masterCompanyId:this.authService.currentUser?this.authService.currentUser.masterCompanyId:null,createdby:this.authService.currentUser?this.authService.currentUser.userName:"",updatedby:this.authService.currentUser?this.authService.currentUser.userName:"",timeLifeCyclesId:this.timeLifeCyclesId>0?this.timeLifeCyclesId:null,managementStructureId:this.headerInfo.managementStructureId}),this.stockLineForm.tagType.length>0){for(let t=0;t<this.stockLineForm.tagType.length;t++)this.saveStockLineForm.tagType[t]=Object(R.g)("label","value",this.stockLineForm.tagType[t],this.allTagTypes);this.saveStockLineForm.tagType=this.saveStockLineForm.tagType.join()}else this.saveStockLineForm.tagType="";var e="";if(this.alertService.resetStickyMessage(),""!=this.saveStockLineForm.manufacturingDate&&U(this.saveStockLineForm.manufacturingDate,"MM/DD/YYYY",!0).isValid()&&(""!=this.saveStockLineForm.tagDate&&U(this.saveStockLineForm.tagDate,"MM/DD/YYYY",!0).isValid()&&this.saveStockLineForm.tagDate<=this.saveStockLineForm.manufacturingDate&&(this.isSpinnerVisible=!1,e+="Tag Date must be greater than Manufacturing Date."),""!=this.saveStockLineForm.inspectionDate&&U(this.saveStockLineForm.inspectionDate,"MM/DD/YYYY",!0).isValid()&&this.saveStockLineForm.inspectionDate<=this.saveStockLineForm.manufacturingDate&&(this.isSpinnerVisible=!1,e+=""!=e?"<br />Inspection Date must be greater than Manufacturing Date.":"Inspection Date must be greater than Manufacturing Date."),""!=this.saveStockLineForm.certifiedDate&&U(this.saveStockLineForm.certifiedDate,"MM/DD/YYYY",!0).isValid()&&this.saveStockLineForm.certifiedDate<=this.saveStockLineForm.manufacturingDate&&(this.isSpinnerVisible=!1,e+=""!=e?"<br />Certified Date must be greater than Manufacturing Date.":"Certified Date must be greater than Manufacturing Date."),""!=this.saveStockLineForm.receivedDate&&U(this.saveStockLineForm.receivedDate,"MM/DD/YYYY",!0).isValid()&&this.saveStockLineForm.receivedDate<=this.saveStockLineForm.manufacturingDate&&(this.isSpinnerVisible=!1,e+=""!=e?"<br />Received Date must be greater than Manufacturing Date.":"Received Date must be greater than Manufacturing Date."),""!=this.saveStockLineForm.entryDate&&U(this.saveStockLineForm.entryDate,"MM/DD/YYYY",!0).isValid()&&this.saveStockLineForm.entryDate<=this.saveStockLineForm.manufacturingDate&&(this.isSpinnerVisible=!1,e+=""!=e?"<br />Entry Date must be greater than Manufacturing Date.":"Entry Date must be greater than Manufacturing Date.")),""!=e)return this.isSpinnerVisible=!1,this.stockLineForm=Object.assign({},this.stockLineForm,{itemMasterId:Object(R.d)("itemMasterId",this.saveStockLineForm.itemMasterId,this.allPartnumbersList)}),void this.alertService.showStickyMessage("Validation failed",e,O.d.error,e);this.stocklineser.newStockLine(this.saveStockLineForm).subscribe(t=>{this.isSpinnerVisible=!1,this.stockLineId=t.stockLineId,this.onUploadDocumentListNew(),this.alertService.showMessage("Success",(this.isEditMode?"Updated":"Saved")+" Stockline data Sucessfully ",O.d.success),this.router.navigateByUrl("/stocklinemodule/stocklinepages/app-stock-line-list")},t=>this.saveFailedHelper(t))}getValueFromObj(t){return t.value?t.value:null}onChangePOUnitCost(){this.stockLineForm.purchaseOrderUnitCost=this.stockLineForm.purchaseOrderUnitCost?Object(R.b)(this.stockLineForm.purchaseOrderUnitCost,2):"0.00"}onChangeROUnitCost(){this.stockLineForm.repairOrderUnitCost=this.stockLineForm.repairOrderUnitCost?Object(R.b)(this.stockLineForm.repairOrderUnitCost,2):"0.00"}onChangeUnitSalesPrice(){this.stockLineForm.unitSalesPrice=this.stockLineForm.unitSalesPrice?Object(R.b)(this.stockLineForm.unitSalesPrice,2):"0.00"}onChangeCoreCost(){this.stockLineForm.coreUnitCost=this.stockLineForm.coreUnitCost?Object(R.b)(this.stockLineForm.coreUnitCost,2):"0.00"}onChangelotCost(){this.stockLineForm.lotCost=this.stockLineForm.lotCost?Object(R.b)(this.stockLineForm.lotCost,2):"0.00"}onUploadDocumentListNew(){const t={referenceId:this.stockLineId,masterCompanyId:this.currentUserMasterCompanyId,createdBy:this.userName,updatedBy:this.userName,moduleId:53};let e=[];for(var n in t)this.formData.append(n,t[n]);if(this.sourceViewforDocumentList.length>0){for(var i=0;i<this.sourceViewforDocumentList.length;i++)e.push({docName:this.sourceViewforDocumentList[i].docName,docMemo:this.sourceViewforDocumentList[i].docMemo,docDescription:this.sourceViewforDocumentList[i].docDescription,link:this.sourceViewforDocumentList[i].link,fileName:this.sourceViewforDocumentList[i].fileName,isFileFromServer:!1,attachmentDetailId:this.sourceViewforDocumentList[i].attachmentDetailId,createdBy:this.sourceViewforDocumentList[i].createdBy,updatedBy:this.sourceViewforDocumentList[i].updatedBy,createdDate:this.sourceViewforDocumentList[i].createdDate,updatedDate:this.sourceViewforDocumentList[i].updatedDate,fileSize:this.sourceViewforDocumentList[i].fileSize,moduleId:this.sourceViewforDocumentList[i].moduleId});this.formData.append("attachmentdetais",JSON.stringify(e)),this.commonService.uploadDocumentsEndpoint(this.formData).subscribe(t=>{this.toGetDocumentsListNew(this.stockLineId)})}}fileUploadCertifiedDeSelect(t){let e=[];for(let n of this.selectedFileAttachment)t.file.name!=n.fileName&&e.push(n);this.selectedFileAttachment=e}fileUploadCertified(t){0===t.files.length?this.disableFileAttachmentSubmit=!1:this.disableFileAttachmentSubmit=!0;const e=[];this.selectedFileAttachment=[];for(let i of t.files)e.push({link:i.objectURL,fileName:i.name,isFileFromServer:!1,fileSize:i.size}),this.formData.append(i.name,i);for(var n=0;n<e.length;n++)this.selectedFileAttachment.push({docName:this.documentInformation.docName,docMemo:this.documentInformation.docMemo,docDescription:this.documentInformation.docDescription,createdBy:this.userName,updatedBy:this.userName,link:e[n].link,fileName:e[n].fileName,fileSize:e[n].fileSize,isFileFromServer:!1,attachmentDetailId:0,moduleId:53})}addDocumentInformation(t,e){if(this.selectedFileAttachment!=[])for(var n=0;n<this.selectedFileAttachment.length;n++)this.sourceViewforDocumentList.push({docName:e.docName,docMemo:e.docMemo,docDescription:e.docDescription,link:this.selectedFileAttachment[n].link,fileName:this.selectedFileAttachment[n].fileName,isFileFromServer:!1,attachmentDetailId:0,createdBy:this.userName,updatedBy:this.userName,createdDate:Date.now(),updatedDate:Date.now(),fileSize:(this.selectedFileAttachment[n].fileSize/1e3).toFixed(2)+" KB",moduleId:53});if(e.attachmentDetailId>0||this.index>0){for(n=0;n<=this.sourceViewforDocumentList.length;n++)if(this.sourceViewforDocumentList[n].attachmentDetailId>0){if(this.sourceViewforDocumentList[n].attachmentDetailId==e.attachmentDetailId){this.sourceViewforDocumentList[n].docName=e.docName,this.sourceViewforDocumentList[n].docMemo=e.docMemo,this.sourceViewforDocumentList[n].docDescription=e.docDescription;break}}else if(n==this.index){this.sourceViewforDocumentList[n].docName=e.docName,this.sourceViewforDocumentList[n].docMemo=e.docMemo,this.sourceViewforDocumentList[n].docDescription=e.docDescription;break}this.dismissDocumentPopupModel(t)}this.sourceViewforDocumentList=[...this.sourceViewforDocumentList],this.sourceViewforDocumentList.length,this.index=0,this.isEditButton=!1,this.disableFileAttachmentSubmit,this.dismissDocumentPopupModel(t),this.fileUploadInput&&this.fileUploadInput.clear()}downloadFileUpload(t){const e=`${this.configurations.baseUrl}/api/FileUpload/downloadattachedfile?filePath=${t.link}`;window.location.assign(e)}addDocumentDetails(){this.selectedFileAttachment=[],this.disableFileAttachmentSubmit=!1,this.index=0,this.isEditButton=!1,this.documentInformation={docName:"",docMemo:"",docDescription:"",attachmentDetailId:0}}dismissDocumentPopupModel(t){this.fileUploadInput.clear(),this.closeMyModel(t)}closeMyModel(t){B(t).modal("hide")}dateFilterForTableNew(t,e){if(""!==t&&U(t).format("MMMM DD YYYY")){this.sourceViewforDocumentList=this.allDocumentListOriginal;const n=[...this.sourceViewforDocumentList.filter(n=>U(n.createdDate).format("MMMM DD YYYY")===U(t).format("MMMM DD YYYY")&&"createdDate"===e||U(n.updatedDate).format("MMMM DD YYYY")===U(t).format("MMMM DD YYYY")&&"updatedDate"===e?n:void 0)];this.sourceViewforDocumentList=n}else this.sourceViewforDocumentList=this.allDocumentListOriginal}editStockLineDocument(t,e=0){this.disableSaveForEditDocument=!0,this.selectedFileAttachment=[],this.isEditButton=!0,this.documentInformation=t,this.index=e,t.attachmentDetailId>0?this.toGetDocumentView(t.attachmentDetailId):this.sourceViewforDocument=t}toGetDocumentView(t){this.commonService.GetAttachment(t).subscribe(t=>{this.sourceViewforDocument=t||[]})}deleteAttachmentRow(t,e,n){this.selectedRowForDelete=t,this.rowIndex=e,this.modal=this.modalService.open(n,{size:"sm"})}openHistory(t,e){this.alertService.startLoadingMessage(),this.commonService.GetAttachmentAudit(e.attachmentDetailId).subscribe(e=>this.onAuditHistoryLoadSuccessful(e,t),t=>this.saveFailedHelper(t))}onAuditHistoryLoadSuccessful(t,e){this.alertService.stopLoadingMessage(),this.sourceViewforDocumentAudit=t,this.modal=this.modalService.open(e,{size:"lg",backdrop:"static",keyboard:!1})}saveFailedHelper(t){this.isSpinnerVisible=!1}getColorCodeForHistory(t,e,n){const i=this.sourceViewforDocumentAudit,r=i.length;if(t>=0&&t<=r)return t+1===r||i[t+1][e]===n}deleteItemAndCloseModel(){let t=this.selectedRowForDelete.attachmentDetailId;t>0?this.commonService.GetAttachmentDeleteById(t,this.userName).subscribe(t=>{this.toGetDocumentsListNew(this.stockLineId),this.alertService.showMessage("Success","Deleted Attachment  Successfully",O.d.success)}):this.sourceViewforDocumentList.splice(this.rowIndex,1),this.modal.close()}toGetDocumentsListNew(t){this.commonService.GetDocumentsListNew(t,53).subscribe(t=>{this.sourceViewforDocumentList=t||[],this.allDocumentListOriginal=t,this.sourceViewforDocumentList.length>0&&this.sourceViewforDocumentList.forEach(t=>{t.isFileFromServer=!0,t.moduleId=53})})}getDeletedList(t){this.commonService.GetDocumentsListNew(t,53,!0).subscribe(t=>{this.deletedDocumentList=t||[],this.deletedDocumentList.length>0&&this.deletedDocumentList.forEach(t=>{t.isFileFromServer=!0,t.moduleId=53})})}dismissModel(){this.modal.close()}getPageCount(t,e){return Math.ceil(t/e)}enableSave(){this.disableSaveForEdit=!1}enableSaveDocument(){this.disableSaveForEditDocument=!1,this.disableSaveForEdit=!1}onCheckOem(){"true"==this.stockLineForm.oem&&(this.stockLineForm.isOemPNId=void 0)}onCheckPMA(){this.stockLineForm.isOemPNId=void 0}selectedOEM(t){this.tempOEMpartNumberId=t.value}errorMessageHandler(t){const e=t;var n="";if(e.message){if(e.error&&e.error.errors.length>0)for(let t=0;t<e.error.errors.length;t++)n=n+e.error.errors[t].message+"<br/>";this.alertService.showMessage(e.error.message,n,O.d.error)}else this.alertService.showMessage("Error",t.error,O.d.error)}};nt.ctorParameters=()=>[{type:O.b},{type:A.a},{type:P.a},{type:W.a},{type:Y.a},{type:Q.a},{type:G.a},{type:K.a},{type:$.a},{type:_.a},{type:Z.a},{type:x.Router},{type:x.ActivatedRoute},{type:d.DatePipe},{type:H.a},{type:tt.a},{type:T.c}],i.b([Object(r.ViewChild)("fileUploadInput",{static:!1})],nt.prototype,"fileUploadInput",void 0),nt=i.b([Object(r.Component)({selector:"app-stock-line-setup",template:i.c(n("DW0Y")).default,animations:[j.a],providers:[d.DatePipe],styles:[i.c(n("n/tF")).default]})],nt);let it=class{constructor(t,e,n,i,r,o,s){this._actRoute=t,this.stockLineService=e,this.commonService=n,this.authService=i,this.router=r,this.alertService=o,this.datePipe=s,this.sourceStockLineSetup={},this.onDestroy$=new J.a,this.timePattern=Object(et.f)(),this.existingMgmentStuc={level1:"",level2:"",level3:"",level4:""},this.managementStructure={companyId:0,buId:0,divisionId:0,departmentId:0},this.managementStructureOnLoad={companyId:0,buId:0,divisionId:0,departmentId:0},this.defaultDate=new Date("Fri Sep 1 2009 00:00:00"),this.companyAllow=!1,this.businessAllow=!1,this.divisionAllow=!1,this.deptAllow=!1,this.showCompany=!1,this.showBusiness=!1,this.showDivision=!1,this.showDepartment=!1,this.siteAllow=!1,this.warehouseAllow=!1,this.locationAllow=!1,this.shelfAllow=!1,this.binAllow=!1,this.showSite=!1,this.showWarehouse=!1,this.showLocation=!1,this.showShelf=!1,this.showBin=!1,this.itemTypesList=[],this.stocklineAdjustmentData=[],this.allPartnumbersList=[],this.arrayItemMasterlist=[],this.partNumbersCollection=[],this.allCurrencyInfo=[],this.allAdjReasonInfo=[],this.categoryAllow=!1,this.partNumberAllow=!1,this.serialNumAllow=!1,this.quantityOnHandAllow=!1,this.unitCostAllow=!1,this.unitSalesPriceAllow=!1,this.lotCostAllow=!1,this.timeLifeAllow=!1,this.sourceTimeLife={},this.tempStockData=[],this.isSpinnerVisible=!0,this.disableLevel1=!1,this.disableLevel2=!1,this.disableLevel3=!1,this.disableLevel4=!1,this.disableSite=!1,this.disableWarehouse=!1,this.disableLocation=!1,this.disableShelf=!1,this.disableBin=!1,this.disableCategory=!1,this.disableQtyOnHandAdj=!1,this.disableUnitCostAdj=!1,this.disableSalesPriceAdj=!1,this.disablelotCostAdj=!1,this.headerInfo={},this.maincompanylist=[],this.bulist=[],this.departmentListOriginal=[],this.divisionListOriginal=[],this.divisionList=[],this.stockLineService.currentUrl="/stocklinemodule/stocklinepages/app-stock-adjustment",this.stockLineService.bredcrumbObj.next(this.stockLineService.currentUrl)}ngOnInit(){this.getDefaultCurrency(),this.getCurrencyData(),this.getAdjReasonData(),this.getStocklineAdjustmentDataType(),this.stockLineId=this._actRoute.snapshot.params.id,this.stockLineId&&this.getStockLineAdjDetailsById(this.stockLineId)}getDefaultCurrency(){this.legalEntityId=19,this.commonService.getDefaultCurrency(this.legalEntityId).subscribe(t=>{this.defaultCurrencyId=t.currencyId})}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}get currentUserMasterCompanyId(){return this.authService.currentUser?this.authService.currentUser.masterCompanyId:null}getLegalEntity(){this.commonService.getLegalEntityList().pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.legalEntityList=t})}loadSiteData(){this.commonService.smartDropDownList("Site","SiteId","Name").pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.allSites=t})}getItemTypes(){this.commonService.smartDropDownList("ItemType","ItemTypeId","Description").pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.itemTypesList=t})}onClickMemo(t,e,n){this.memoPopupContent=n,this.addrawNo=e}onClickMemoOld(){this.memoPopupContent=this.stocklineAdjustmentData.adjustmentMemo}onClickPopupSave(){this.stocklineAdjustmentData.adjustmentMemo=this.memoPopupContent,this.memoPopupContent="",B("#memo-popup-Doc").modal("hide")}closeMemoModel(){B("#memo-popup-Doc").modal("hide")}parsedText(t){if(t){return(new DOMParser).parseFromString("<!doctype html><body>"+t,"text/html").body.textContent}}saveFailedHelper(t){this.isSpinnerVisible=!1}loadPartNumData(t=""){0==this.arrayItemMasterlist.length&&this.arrayItemMasterlist.push(0),this.commonService.autoSuggestionSmartDropDownList("ItemMaster","ItemMasterId","partnumber",t,!0,20,this.arrayItemMasterlist.join()).subscribe(t=>{this.allPartnumbersList=t,this.partNumbersCollection=this.allPartnumbersList},t=>this.saveFailedHelper(t))}getCurrencyData(){this.commonService.smartDropDownList("Currency","CurrencyId","Code").subscribe(t=>{this.allCurrencyInfo=t})}get employeeId(){return this.authService.currentUser?this.authService.currentUser.employeeId:0}getAdjReasonData(){this.commonService.smartDropDownList("StocklineAdjustmentReason","AdjustmentReasonId","Description").subscribe(t=>{this.allAdjReasonInfo=t})}getStocklineAdjustmentDataType(){this.commonService.smartDropDownList("StocklineAdjustmentDataType","StocklineAdjustmentDataTypeId","Description").pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.stocklineAdjustmentData=t.map(t=>({adjustmentDataTypeId:t.value,stocklineAdjustmentDataType:t.label})),this.stocklineAdjustmentData=this.stocklineAdjustmentData.sort((t,e)=>t.adjustmentDataTypeId>e.adjustmentDataTypeId?1:e.adjustmentDataTypeId>t.adjustmentDataTypeId?-1:0),this.stocklineAdjustmentData.map(t=>{2!=t.adjustmentDataTypeId&&3!=t.adjustmentDataTypeId&&4!=t.adjustmentDataTypeId&&5!=t.adjustmentDataTypeId&&6!=t.adjustmentDataTypeId&&7!=t.adjustmentDataTypeId||(t.afterValue=0),10!=t.adjustmentDataTypeId&&11!=t.adjustmentDataTypeId&&12!=t.adjustmentDataTypeId&&13!=t.adjustmentDataTypeId||(t.adjustmentReasonId=0),11!=t.adjustmentDataTypeId&&12!=t.adjustmentDataTypeId&&13!=t.adjustmentDataTypeId||(t.currencyId=this.defaultCurrencyId),this.isSpinnerVisible=!1})})}getStockLineAdjDetailsById(t){this.stockLineService.getStockLineAdjustmentList(t).subscribe(t=>{this.sourceStockLineSetup=t,this.sourceStockLineSetup.isTimeLife=!!this.sourceStockLineSetup.isTimeLife&&this.sourceStockLineSetup.isTimeLife,this.stocklineAdjustmentData.map(t=>{1==t.adjustmentDataTypeId&&(t.beforeValue=this.sourceStockLineSetup.managementStructureId),2==t.adjustmentDataTypeId&&(t.beforeValue=this.sourceStockLineSetup.siteId?this.sourceStockLineSetup.siteId:null),3==t.adjustmentDataTypeId&&(t.beforeValue=this.sourceStockLineSetup.warehouseId?this.sourceStockLineSetup.warehouseId:null),4==t.adjustmentDataTypeId&&(t.beforeValue=this.sourceStockLineSetup.locationId?this.sourceStockLineSetup.locationId:null),5==t.adjustmentDataTypeId&&(t.beforeValue=this.sourceStockLineSetup.shelfId?this.sourceStockLineSetup.shelfId:null),6==t.adjustmentDataTypeId&&(t.beforeValue=this.sourceStockLineSetup.binId?this.sourceStockLineSetup.binId:null),7==t.adjustmentDataTypeId&&(t.beforeValue=this.sourceStockLineSetup.itemCategory?this.sourceStockLineSetup.itemCategory:null),8==t.adjustmentDataTypeId&&(t.beforeValue=this.sourceStockLineSetup.itemMasterId?this.sourceStockLineSetup.itemMasterId:null),9==t.adjustmentDataTypeId&&(t.beforeValue=this.sourceStockLineSetup.serialNumber?this.sourceStockLineSetup.serialNumber:null),10==t.adjustmentDataTypeId&&(t.beforeValue=this.sourceStockLineSetup.quantityOnHand?this.sourceStockLineSetup.quantityOnHand:0,this.sourceStockLineSetup.quantityOnHand=this.sourceStockLineSetup.quantityOnHand?Object(R.b)(this.sourceStockLineSetup.quantityOnHand,0):"0"),11==t.adjustmentDataTypeId&&(t.beforeValue=this.sourceStockLineSetup.coreUnitCost?this.sourceStockLineSetup.coreUnitCost:0,this.sourceStockLineSetup.coreUnitCost=this.sourceStockLineSetup.coreUnitCost?Object(R.b)(this.sourceStockLineSetup.coreUnitCost,2):"0.00"),12==t.adjustmentDataTypeId&&(t.beforeValue=this.sourceStockLineSetup.unitSalesPrice?this.sourceStockLineSetup.unitSalesPrice:0,this.sourceStockLineSetup.unitSalesPrice=this.sourceStockLineSetup.unitSalesPrice?Object(R.b)(this.sourceStockLineSetup.unitSalesPrice,2):"0.00"),13==t.adjustmentDataTypeId&&(t.beforeValue=this.sourceStockLineSetup.lotCost?this.sourceStockLineSetup.lotCost:0,this.sourceStockLineSetup.lotCost=this.sourceStockLineSetup.lotCost?Object(R.b)(this.sourceStockLineSetup.lotCost,2):"0.00")}),this.getManagementStructureCodes(this.sourceStockLineSetup.managementStructureId),null!=this.sourceStockLineSetup.timelIfeData&&null!=this.sourceStockLineSetup.timelIfeData&&(this.timeLifeCyclesId=this.sourceStockLineSetup.timelIfeData.timeLifeCyclesId,this.sourceTimeLife=this.sourceStockLineSetup.timelIfeData)})}getManagementStructureCodes(t,e=0,n=0){e=0==e?this.employeeId:e,this.commonService.getManagmentStrctureData(t,e,n).subscribe(t=>{if(t){const e=t;if(e[0]&&"Level1"==e[0].level){for(let t=0;t<e[0].lstManagmentStrcture.length;t++)e[0].lstManagmentStrcture[t].value==e[0].managementStructureId&&(this.existingMgmentStuc.level1=e[0].lstManagmentStrcture[t].label);this.maincompanylist=e[0].lstManagmentStrcture,this.headerInfo.companyId=e[0].managementStructureId,this.headerInfo.managementStructureId=e[0].managementStructureId,this.headerInfo.buId=0,this.headerInfo.divisionId=0,this.headerInfo.departmentId=0,this.bulist=[],this.divisionListOriginal=[],this.departmentListOriginal=[]}else this.existingMgmentStuc.level1="",this.headerInfo.companyId=0,this.headerInfo.buId=0,this.headerInfo.divisionId=0,this.headerInfo.departmentId=0,this.maincompanylist=[],this.bulist=[],this.divisionListOriginal=[],this.departmentListOriginal=[];if(e[1]&&"Level2"==e[1].level){for(let t=0;t<e[1].lstManagmentStrcture.length;t++)e[1].lstManagmentStrcture[t].value==e[1].managementStructureId&&(this.existingMgmentStuc.level2=e[1].lstManagmentStrcture[t].label);this.bulist=e[1].lstManagmentStrcture,this.headerInfo.buId=e[1].managementStructureId,this.headerInfo.managementStructureId=e[1].managementStructureId,this.headerInfo.divisionId=0,this.headerInfo.departmentId=0,this.divisionListOriginal=[],this.departmentListOriginal=[]}else e[1]&&"NEXT"==e[1].level&&(this.bulist=e[1].lstManagmentStrcture),this.existingMgmentStuc.level2="",this.headerInfo.buId=0,this.headerInfo.divisionId=0,this.headerInfo.departmentId=0,this.divisionListOriginal=[],this.departmentListOriginal=[];if(e[2]&&"Level3"==e[2].level){for(let t=0;t<e[2].lstManagmentStrcture.length;t++)e[2].lstManagmentStrcture[t].value==e[2].managementStructureId&&(this.existingMgmentStuc.level3=e[2].lstManagmentStrcture[t].label);this.divisionListOriginal=e[2].lstManagmentStrcture,this.headerInfo.divisionId=e[2].managementStructureId,this.headerInfo.managementStructureId=e[2].managementStructureId,this.headerInfo.departmentId=0,this.departmentListOriginal=[]}else e[2]&&"NEXT"==e[2].level&&(this.divisionListOriginal=e[2].lstManagmentStrcture),this.existingMgmentStuc.level3="",this.headerInfo.divisionId=0,this.headerInfo.departmentId=0,this.departmentListOriginal=[];if(e[3]&&"Level4"==e[3].level){for(let t=0;t<e[3].lstManagmentStrcture.length;t++)e[3].lstManagmentStrcture[t].value==e[3].managementStructureId&&(this.existingMgmentStuc.level4=e[3].lstManagmentStrcture[t].label);this.departmentListOriginal=e[3].lstManagmentStrcture,this.headerInfo.departmentId=e[3].managementStructureId,this.headerInfo.managementStructureId=e[3].managementStructureId}else this.existingMgmentStuc.level4="",this.headerInfo.departmentId=0,e[3]&&"NEXT"==e[3].level&&(this.departmentListOriginal=e[3].lstManagmentStrcture);this.managementStructureOnLoad={companyId:void 0!==e[1].managementStructureId?e[1].managementStructureId:0,buId:void 0!==e[2].managementStructureId?e[2].managementStructureId:0,divisionId:void 0!==e[3].managementStructureId?e[3].managementStructureId:0,departmentId:void 0!==e[4].managementStructureId?e[4].managementStructureId:0},this.isSpinnerVisible=!1}else this.isSpinnerVisible=!1},t=>{this.isSpinnerVisible=!1;const e=t;this.errorMessageHandler(e)})}isCompanyEnable(t){this.companyAllow?(this.legalEntityList=this.maincompanylist,this.showCompany=!0,this.showBusiness=!0,this.showDivision=!0,this.showDepartment=!0,this.businessAllow=!0,this.divisionAllow=!0,this.deptAllow=!0,t.checkedItem=!0,this.disableLevel1=!0):(this.showCompany=!1,this.showBusiness=!1,this.showDivision=!1,this.showDepartment=!1,this.businessAllow=!1,this.divisionAllow=!1,this.deptAllow=!1,t.checkedItem=!1,this.disableLevel1=!1),this.managementStructure.companyId=0,this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,this.businessUnitList=[],this.divisionList=[],this.departmentList=[]}isBusinessEnable(t){this.businessAllow?(this.showBusiness=!0,this.showDivision=!0,this.showDepartment=!0,this.divisionAllow=!0,this.deptAllow=!0,t.checkedItem=!0,this.disableLevel2=!0):(this.showBusiness=!1,this.showDivision=!1,this.showDepartment=!1,this.divisionAllow=!1,this.deptAllow=!1,t.checkedItem=!1,this.disableLevel2=!1),this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,this.divisionList=[],this.departmentList=[],this.businessUnitList=this.bulist,this.companyAllow||this.businessAllow||this.divisionAllow||this.deptAllow?t.checkedItem=!0:t.checkedItem=!1}isDivisionEnable(t){this.divisionAllow?(this.showDivision=!0,this.showDepartment=!0,this.deptAllow=!0,t.checkedItem=!0,this.disableLevel3=!0):(this.showDivision=!1,this.showDepartment=!1,this.deptAllow=!1,t.checkedItem=!1,this.disableLevel3=!1),this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,this.departmentList=[],this.divisionList=this.divisionListOriginal,this.companyAllow||this.businessAllow||this.divisionAllow||this.deptAllow?t.checkedItem=!0:t.checkedItem=!1}isDeptEnable(t){this.deptAllow?(this.showDepartment=!0,t.checkedItem=!0,this.disableLevel4=!0):(this.showDepartment=!1,t.checkedItem=!1,this.disableLevel4=!1),this.managementStructure.departmentId=0,this.departmentList=this.departmentListOriginal,this.companyAllow||this.businessAllow||this.divisionAllow||this.deptAllow?t.checkedItem=!0:t.checkedItem=!1}isSiteEnable(t){this.siteAllow?(this.loadSiteData(),this.showSite=!0,this.showWarehouse=!0,this.showLocation=!0,this.showShelf=!0,this.showBin=!0,this.warehouseAllow=!0,this.locationAllow=!0,this.shelfAllow=!0,this.binAllow=!0,t.checkedItem=!0,this.disableSite=!0):(this.showSite=!1,this.showWarehouse=!1,this.showLocation=!1,this.showShelf=!1,this.showBin=!1,this.warehouseAllow=!1,this.locationAllow=!1,this.shelfAllow=!1,this.binAllow=!1,t.checkedItem=!1,this.disableSite=!1),t.afterValue=0,this.stocklineAdjustmentData.map(t=>{3!=t.adjustmentDataTypeId&&4!=t.adjustmentDataTypeId&&5!=t.adjustmentDataTypeId&&6!=t.adjustmentDataTypeId||(t.afterValue=0,this.siteAllow?t.checkedItem=!0:t.checkedItem=!1)}),this.allWareHouses=[],this.allLocations=[],this.allShelfs=[],this.allBins=[]}iswarehouseEnable(t){this.warehouseAllow?(this.showWarehouse=!0,this.showLocation=!0,this.showShelf=!0,this.showBin=!0,this.locationAllow=!0,this.shelfAllow=!0,this.binAllow=!0,t.checkedItem=!0,this.disableWarehouse=!0):(this.showWarehouse=!1,this.showLocation=!1,this.showShelf=!1,this.showBin=!1,this.locationAllow=!1,this.shelfAllow=!1,this.binAllow=!1,t.checkedItem=!1,this.disableWarehouse=!1),t.afterValue=0,this.stocklineAdjustmentData.map(t=>{4!=t.adjustmentDataTypeId&&5!=t.adjustmentDataTypeId&&6!=t.adjustmentDataTypeId||(t.afterValue=0,this.warehouseAllow?t.checkedItem=!0:t.checkedItem=!1)}),this.allLocations=[],this.allShelfs=[],this.allBins=[],0!=this.sourceStockLineSetup.siteId&&this.commonService.smartDropDownList("Warehouse","WarehouseId","Name","SiteId",this.sourceStockLineSetup.siteId).pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.allWareHouses=t})}isLocationEnable(t){this.locationAllow?(this.showLocation=!0,this.showShelf=!0,this.showBin=!0,this.shelfAllow=!0,this.binAllow=!0,t.checkedItem=!0,this.disableLocation=!0):(this.showLocation=!1,this.showShelf=!1,this.showBin=!1,this.shelfAllow=!1,this.binAllow=!1,t.checkedItem=!1,this.disableLocation=!1),t.afterValue=0,this.stocklineAdjustmentData.map(t=>{5!=t.adjustmentDataTypeId&&6!=t.adjustmentDataTypeId||(t.afterValue=0,this.locationAllow?t.checkedItem=!0:t.checkedItem=!1)}),this.allShelfs=[],this.allBins=[],0!=this.sourceStockLineSetup.warehouseId&&this.commonService.smartDropDownList("Location","LocationId","Name","WarehouseId",this.sourceStockLineSetup.warehouseId).pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.allLocations=t})}isShelfEnable(t){this.shelfAllow?(this.showShelf=!0,this.showBin=!0,this.binAllow=!0,t.checkedItem=!0,this.disableShelf=!0):(this.showShelf=!1,this.showBin=!1,this.binAllow=!1,t.checkedItem=!1,this.disableShelf=!1),t.afterValue=0,this.stocklineAdjustmentData.map(t=>{6==t.adjustmentDataTypeId&&(t.afterValue=0,this.shelfAllow?t.checkedItem=!0:t.checkedItem=!1)}),this.allBins=[],0!=this.sourceStockLineSetup.locationId&&this.commonService.smartDropDownList("Shelf","ShelfId","Name","LocationId",this.sourceStockLineSetup.locationId).pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.allShelfs=t})}isBinEnable(t){this.binAllow?(this.showBin=!0,t.checkedItem=!0,this.disableBin=!0):(this.showBin=!1,t.checkedItem=!1,this.disableBin=!1),t.binId=0,0!=this.sourceStockLineSetup.shelfId&&this.commonService.smartDropDownList("Bin","BinId","Name","ShelfId",this.sourceStockLineSetup.shelfId).pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.allBins=t})}selectedLegalEntity(t,e){this.businessUnitList=[],this.divisionList=[],this.departmentList=[],this.managementStructure.buId=0,this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=t&&null!=t&&null!=t&&(e.afterValue=t,this.commonService.getBusinessUnitListByLegalEntityId(t).pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.businessUnitList=t})),this.disableLevel1="0"==t||0==t}selectedBusinessUnit(t,e){this.divisionList=[],this.departmentList=[],this.managementStructure.divisionId=0,this.managementStructure.departmentId=0,0!=t&&null!=t&&null!=t&&(e.afterValue=t,this.commonService.getDivisionListByBU(t).pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.divisionList=t})),this.disableLevel2="0"==t||0==t}selectedDivision(t,e){this.departmentList=[],this.managementStructure.departmentId=0,0!=t&&null!=t&&null!=t&&(e.afterValue=t,this.commonService.getDepartmentListByDivisionId(t).pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.departmentList=t})),this.disableLevel3="0"==t||0==t}selectedDepartment(t,e){0!=t&&null!=t&&null!=t&&(e.afterValue=t),this.disableLevel4="0"==t||0==t}getWareHouseList(t){this.allWareHouses=[],this.allLocations=[],this.allShelfs=[],this.allBins=[],this.stocklineAdjustmentData.map(t=>{3!=t.adjustmentDataTypeId&&4!=t.adjustmentDataTypeId&&5!=t.adjustmentDataTypeId&&6!=t.adjustmentDataTypeId||(t.afterValue=0)}),0!=t&&this.commonService.smartDropDownList("Warehouse","WarehouseId","Name","SiteId",t).pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.allWareHouses=t}),this.disableSite="0"==t||0==t}getLocationList(t){this.allLocations=[],this.allShelfs=[],this.allBins=[],this.stocklineAdjustmentData.map(t=>{4!=t.adjustmentDataTypeId&&5!=t.adjustmentDataTypeId&&6!=t.adjustmentDataTypeId||(t.afterValue=0)}),0!=t&&this.commonService.smartDropDownList("Location","LocationId","Name","WarehouseId",t).pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.allLocations=t}),this.disableWarehouse="0"==t||0==t}getShelfList(t){this.allShelfs=[],this.allBins=[],this.stocklineAdjustmentData.map(t=>{5!=t.adjustmentDataTypeId&&6!=t.adjustmentDataTypeId||(t.afterValue=0)}),0!=t&&this.commonService.smartDropDownList("Shelf","ShelfId","Name","LocationId",t).pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.allShelfs=t}),this.disableLocation="0"==t||0==t}getBinList(t){this.allBins=[],this.stocklineAdjustmentData.map(t=>{6==t.adjustmentDataTypeId&&(t.afterValue=0)}),0!=t&&this.commonService.smartDropDownList("Bin","BinId","Name","ShelfId",t).pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.allBins=t}),this.disableShelf="0"==t||0==t}onChangeBin(t){this.disableBin="0"==t||0==t}onChangeCategory(t){t.afterValue=0,this.categoryAllow?(this.getItemTypes(),t.checkedItem=!0,this.disableCategory=!0,this.partNumberAllow=!0,this.stocklineAdjustmentData.map(t=>{8==t.adjustmentDataTypeId&&this.onChangePartNum(t)})):(t.checkedItem=!1,this.disableCategory=!1,this.partNumberAllow=!1,this.stocklineAdjustmentData.map(t=>{8==t.adjustmentDataTypeId&&this.onChangePartNum(t)}))}onChangeCategorySelect(t){this.disableCategory="0"==t||0==t}onChangeQtyOnHandAdjReason(t){this.disableQtyOnHandAdj="0"==t||0==t}onChangeUnitCostAdjReason(t){this.disableUnitCostAdj="0"==t||0==t}onChangeSalesPriceAdjReason(t){this.disableSalesPriceAdj="0"==t||0==t}onChangelotCostAdjReason(t){this.disablelotCostAdj="0"==t||0==t}filterPartNumbers(t){this.partNumbersCollection=this.allPartnumbersList,void 0!==t.query&&null!==t.query&&this.loadPartNumData(t.query)}onChangePartNum(t){t.afterValue=void 0,this.partNumberAllow?(this.loadPartNumData(),t.checkedItem=!0):t.checkedItem=!1}onChangeSerialNum(t){t.afterValue="",this.serialNumAllow?t.checkedItem=!0:t.checkedItem=!1}onChangePrices(t){t.afterValue="",t.adjustmentValue=""}onChangeQtyOnHand(t){this.quantityOnHandAllow?(t.checkedItem=!0,this.disableQtyOnHandAdj=!0):(t.checkedItem=!1,this.disableQtyOnHandAdj=!1)}onChangeUnitCost(t){this.unitCostAllow?(t.checkedItem=!0,this.disableUnitCostAdj=!0):(t.checkedItem=!1,this.disableUnitCostAdj=!1)}onChangeSalesPrice(t){this.unitSalesPriceAllow?(t.checkedItem=!0,this.disableSalesPriceAdj=!0):(t.checkedItem=!1,this.disableSalesPriceAdj=!1)}onChangelotCost(t){this.lotCostAllow?(t.checkedItem=!0,this.disablelotCostAdj=!0):(t.checkedItem=!1,this.disablelotCostAdj=!1)}onCheckTimeLife(t){this.timeLifeAllow?t.checkedItem=!0:t.checkedItem=!1}onChangeQtyOnHandAdj(t){t.adjustmentValue=t.adjustmentValue?Object(R.b)(t.adjustmentValue,0):"0";const e=(this.sourceStockLineSetup.quantityOnHand?parseFloat(this.sourceStockLineSetup.quantityOnHand.toString().replace(/\,/g,"")):0)+(t.adjustmentValue?parseFloat(t.adjustmentValue.toString().replace(/\,/g,"")):0);e<0?(t.adjustmentValue=0,t.afterValue=0,this.alertService.showMessage("Error","New value can't be in negative",O.d.error)):t.afterValue=Object(R.b)(e,0)}onChangeUnitCostAdj(t){t.adjustmentValue=t.adjustmentValue?Object(R.b)(t.adjustmentValue,2):"0.00";const e=(this.sourceStockLineSetup.coreUnitCost?parseFloat(this.sourceStockLineSetup.coreUnitCost.toString().replace(/\,/g,"")):0)+(t.adjustmentValue?parseFloat(t.adjustmentValue.toString().replace(/\,/g,"")):0);e<0?(t.adjustmentValue="0.00",t.afterValue="0.00",this.alertService.showMessage("Error","New value can't be in negative",O.d.error)):t.afterValue=Object(R.b)(e,2)}onChangeUnitSalesPriceAdj(t){t.afterValue=t.afterValue?Object(R.b)(t.afterValue,2):"0.00"}onChangeLotCostAdj(t){t.adjustmentValue=t.adjustmentValue?Object(R.b)(t.adjustmentValue,2):"0.00";const e=(this.sourceStockLineSetup.lotCost?parseFloat(this.sourceStockLineSetup.lotCost.toString().replace(/\,/g,"")):0)+(t.adjustmentValue?parseFloat(t.adjustmentValue.toString().replace(/\,/g,"")):0);e<0?(t.adjustmentValue="0.00",t.afterValue="0.00",this.alertService.showMessage("Error","New value can't be in negative",O.d.error)):t.afterValue=Object(R.b)(e,2)}onSaveStockLineAdj(){const t={timeLifeCyclesId:this.timeLifeCyclesId>0?this.timeLifeCyclesId:null,cyclesRemaining:"string"==typeof this.sourceTimeLife.cyclesRemaining?this.sourceTimeLife.cyclesRemaining:this.sourceTimeLife.cyclesRemaining?this.datePipe.transform(this.sourceTimeLife.cyclesRemaining,"HH:mm"):null,timeRemaining:"string"==typeof this.sourceTimeLife.timeRemaining?this.sourceTimeLife.timeRemaining:this.sourceTimeLife.timeRemaining?this.datePipe.transform(this.sourceTimeLife.timeRemaining,"HH:mm"):null,cyclesSinceNew:"string"==typeof this.sourceTimeLife.cyclesSinceNew?this.sourceTimeLife.cyclesSinceNew:this.sourceTimeLife.cyclesSinceNew?this.datePipe.transform(this.sourceTimeLife.cyclesSinceNew,"HH:mm"):null,timeSinceNew:"string"==typeof this.sourceTimeLife.timeSinceNew?this.sourceTimeLife.timeSinceNew:this.sourceTimeLife.timeSinceNew?this.datePipe.transform(this.sourceTimeLife.timeSinceNew,"HH:mm"):null,lastSinceNew:"string"==typeof this.sourceTimeLife.lastSinceNew?this.sourceTimeLife.lastSinceNew:this.sourceTimeLife.lastSinceNew?this.datePipe.transform(this.sourceTimeLife.lastSinceNew,"HH:mm"):null,cyclesSinceOVH:"string"==typeof this.sourceTimeLife.cyclesSinceOVH?this.sourceTimeLife.cyclesSinceOVH:this.sourceTimeLife.cyclesSinceOVH?this.datePipe.transform(this.sourceTimeLife.cyclesSinceOVH,"HH:mm"):null,timeSinceOVH:"string"==typeof this.sourceTimeLife.timeSinceOVH?this.sourceTimeLife.timeSinceOVH:this.sourceTimeLife.timeSinceOVH?this.datePipe.transform(this.sourceTimeLife.timeSinceOVH,"HH:mm"):null,lastSinceOVH:"string"==typeof this.sourceTimeLife.lastSinceOVH?this.sourceTimeLife.lastSinceOVH:this.sourceTimeLife.lastSinceOVH?this.datePipe.transform(this.sourceTimeLife.lastSinceOVH,"HH:mm"):null,cyclesSinceInspection:"string"==typeof this.sourceTimeLife.cyclesSinceInspection?this.sourceTimeLife.cyclesSinceInspection:this.sourceTimeLife.cyclesSinceInspection?this.datePipe.transform(this.sourceTimeLife.cyclesSinceInspection,"HH:mm"):null,timeSinceInspection:"string"==typeof this.sourceTimeLife.timeSinceInspection?this.sourceTimeLife.timeSinceInspection:this.sourceTimeLife.timeSinceInspection?this.datePipe.transform(this.sourceTimeLife.timeSinceInspection,"HH:mm"):null,lastSinceInspection:"string"==typeof this.sourceTimeLife.lastSinceInspection?this.sourceTimeLife.lastSinceInspection:this.sourceTimeLife.lastSinceInspection?this.datePipe.transform(this.sourceTimeLife.lastSinceInspection,"HH:mm"):null,cyclesSinceRepair:"string"==typeof this.sourceTimeLife.cyclesSinceRepair?this.sourceTimeLife.cyclesSinceRepair:this.sourceTimeLife.cyclesSinceRepair?this.datePipe.transform(this.sourceTimeLife.cyclesSinceRepair,"HH:mm"):null,timeSinceRepair:"string"==typeof this.sourceTimeLife.timeSinceRepair?this.sourceTimeLife.timeSinceRepair:this.sourceTimeLife.timeSinceRepair?this.datePipe.transform(this.sourceTimeLife.timeSinceRepair,"HH:mm"):null};this.tempStockData=[],this.stocklineAdjustmentData.map(e=>{if(8==e.adjustmentDataTypeId&&(e.afterValue=e.afterValue?Object(R.h)("value",e.afterValue):null),10!=e.adjustmentDataTypeId&&11!=e.adjustmentDataTypeId&&12!=e.adjustmentDataTypeId&&13!=e.adjustmentDataTypeId||(e.afterValue=e.afterValue?parseFloat(e.afterValue.toString().replace(/\,/g,"")):0,e.adjustmentReason=e.adjustmentReasonId?Object(R.g)("label","value",e.adjustmentReasonId,this.allAdjReasonInfo):""),14==e.adjustmentDataTypeId&&(e.afterValue=this.timeLifeCyclesId?this.timeLifeCyclesId:null,e.beforeValue=this.timeLifeCyclesId?this.timeLifeCyclesId:null,e.timeLifes=Object.assign({},t,{timeLifeCyclesId:this.timeLifeCyclesId,updatedDate:new Date})),e.checkedItem){const t=Object.assign({},e,{stockLineId:this.stockLineId,masterCompanyId:this.currentUserMasterCompanyId,createdBy:this.userName});this.tempStockData.push(t)}}),this.stockLineService.newStockLineAdjustment(this.tempStockData).subscribe(t=>{this.alertService.showMessage("Success","Saved Stockline Adjustment Sucessfully ",O.d.success),this.router.navigateByUrl("/stocklinemodule/stocklinepages/app-stock-line-list")})}errorMessageHandler(t){const e=t;var n="";if(e.message){if(e.error&&e.error.errors.length>0)for(let t=0;t<e.error.errors.length;t++)n=n+e.error.errors[t].message+"<br/>";this.alertService.showMessage(e.error.message,n,O.d.error)}else this.alertService.showMessage("Error",t.error,O.d.error)}};it.ctorParameters=()=>[{type:x.ActivatedRoute},{type:A.a},{type:P.a},{type:H.a},{type:x.Router},{type:O.b},{type:d.DatePipe}],it=i.b([Object(r.Component)({selector:"app-stock-adjustment",template:i.c(n("e9yY")).default,providers:[d.DatePipe],styles:[i.c(n("/gHY")).default]})],it);var rt=n("MKys"),ot=n("Sy1n"),st=n("8gm/");let at=class{constructor(t,e,n,i,r){this.router=t,this.route=e,this.stockLineService=n,this.appComponent=i,this.appTranslationService=r,this.stockLineService.bredcrumbObjChangeObject$.subscribe(t=>{this.otherurl=t,this.loadmethod(this.otherurl)})}ngOnInit(){this.currentUrl=this.route.url,this.loadmethod(this.currentUrl)}loadmethod(t){this.currentUrl=t,this.currentUrl&&("/stocklinemodule/stocklinepages/app-stock-line-list"==this.currentUrl?this.items=[{label:"Stock Line"},{label:"Stock Line-List"}]:"/stocklinemodule/stocklinepages/app-stock-line-setup"==this.currentUrl?this.items=[{label:"StockLine"},{label:"StockLine-Create "}]:"/stocklinemodule/stocklinepages/app-stock-line-setup"==this.currentUrl?this.items=[{label:"Stock Line"},{label:"StockLine-Create "}]:"/stocklinemodule/stocklinepages/app-stock-line-edit"==this.currentUrl?this.items=[{label:"Stock Line"},{label:"StockLine-Edit "}]:"/stocklinemodule/stocklinepages/app-stock-adjustment"==this.currentUrl&&(this.items=[{label:"Stock Line"},{label:"Stock Line Adjustment"}])),this.otherurl&&("/stocklinemodule/stocklinepages/app-stock-line-list"==this.currentUrl?this.items=[{label:"Stock Line"},{label:"Stock Line-List"}]:"/stocklinemodule/stocklinepages/app-stock-line-setup"==this.otherurl?this.items=[{label:"Stock Line"},{label:window.location.href.includes("edit")?"Edit Stock Line":"Create Stock Line"}]:"/stocklinemodule/stocklinepages/app-stock-line-edit"==this.otherurl?this.items=[{label:"Stock Line"},{label:"Stock Line-Edit"}]:"/stocklinemodule/stocklinepages/app-stock-adjustment"==this.currentUrl&&(this.items=[{label:"Stock Line"},{label:"Stock Line Adjustment"}]))}};at.ctorParameters=()=>[{type:x.ActivatedRoute},{type:x.Router},{type:A.a},{type:ot.a},{type:st.a}],at=i.b([Object(r.Component)({selector:"app-stocklinepages",template:i.c(n("U9RA")).default,styles:[i.c(n("Ceth")).default]})],at);let lt=class{constructor(t,e){this.router=t,this.stocklineService=e,this.pageSize=10,this.pageIndex=0,this.onDestroy$=new J.a,this.headers=[{field:"partNumber",header:"Part Number"},{field:"partDescription",header:"PN Description"},{field:"serialNumber",header:"S.No"},{field:"stocklineNumber",header:"Stock Line Number"},{field:"condition",header:"Condition"},{field:"vendorName",header:"Vendor Name"},{field:"vendorCode",header:"Vendor Code"},{field:"quantity",header:"Quantity"},{field:"qtyAdjusted",header:"Qty Adjusted"},{field:"poUnitCost",header:"PO Unit Cost"},{field:"unitPrice",header:"Unit Price"},{field:"extendedPrice",header:"Extended Price"},{field:"wareHouse",header:"Ware House"},{field:"shelf",header:"Shelf"},{field:"bin",header:"Bin"},{field:"accountCode",header:"Account Code"},{field:"purchaseOrderNumber",header:"PO No"},{field:"repairOrderNumber",header:"RO No"},{field:"repairOrderUnitCost",header:"RO Unit Cost"},{field:"receivedDate",header:"Received Date"},{field:"receiverNumber",header:"Receiver No"},{field:"reconciliationNumber",header:"Reconciliation No"}]}ngOnInit(){}loadData(t){const e=parseInt(t.first)/t.rows;this.pageIndex=e,this.pageSize=t.rows,t.first=e,this.getStockLineReportViewList(t)}getStockLineReportViewList(t){console.log(t);const e=Object.assign({},t,{filters:Object(R.j)(t.filters)});this.stocklineService.getStockLineReportViewList(e).pipe(Object(X.a)(this.onDestroy$)).subscribe(t=>{this.stockLineReportList=t,t.length>0&&(this.totalRecords=t[0].totalRecords,this.totalPages=Math.ceil(this.totalRecords/this.pageSize))})}downloadStockLineReport(){this.stocklineService.downloadStockLineReport()}};lt.ctorParameters=()=>[{type:x.ActivatedRoute},{type:A.a}],lt=i.b([Object(r.Component)({selector:"app-stock-line-report-view",template:i.c(n("sZVF")).default,styles:[i.c(n("3Ofl")).default]})],lt);const ct=[{path:"stocklinepages",component:at,children:[{path:"app-stock-line-list",component:z,data:{title:"StockLine List"}},{path:"app-stock-line-setup",component:nt,data:{title:"StockLine setup"}},{path:"app-stock-line-setup/edit/:id",component:nt,data:{title:"StockLine Edit"}},{path:"app-stock-adjustment/:id",component:it,data:{title:"Stock Line Adjustment"}},{path:"app-stock-line-report-view",component:lt}]}];let dt=class{};dt=i.b([Object(r.NgModule)({imports:[x.RouterModule.forChild(ct)],exports:[x.RouterModule],providers:[H.a,rt.a]})],dt);var ut=n("IheW"),mt=n("90vJ"),ht=n("h55p"),pt=n("0zL+"),gt=n("STMh"),bt=n("pjuo");let St=class{constructor(t,e,n,i,r,o,s,l,c,d,u,m,h,p,g,b,S,v,f,y,L,k,I,D,M,C){this.fb=t,this.empService=e,this.integrationService=n,this.vendorservice=i,this.manufacturerService=r,this.itemser=o,this.glAccountService=s,this.vendorService=l,this.customerService=c,this.inteService=d,this.workFlowtService1=u,this.workFlowtService=m,this.siteService=h,this.integration=p,this.stocklineser=g,this.http=b,this.ataservice=S,this.changeDetectorRef=v,this.router=f,this.authService=y,this.modalService=L,this.activeModal=k,this._fb=I,this.alertService=D,this.conditionService=M,this.dialog=C,this.showNormalQuantity=!0,this.sourceBin={},this.allManagemtninfo=[],this.alllegalEntityInfo=[],this.copyOfAllManagemtninfo=[],this.maincompanylist=[],this.managementStructureList=[],this.integrationvalues=[],this.selectedOwnerFromValue="",this.allPolistInfo=[],this.allRolistInfo=[],this.allEmployeeList=[],this.testManagementStructure=[],this.selectedModels=[],this.attempToDelete=!1,this.stocklineEditForm=new a.FormGroup({companyId:new a.FormControl("companyId",a.Validators.minLength(1))}),this.selectedObtainFromValue="",this.selectedTracableToValue="",this.sourceStockLine={},this.sourceStockLineSetup={},this.sourceTimeLife={},this.sourceItemMaster={},this.isDeleteMode=!1,this.isDisabled=!0,this.allConditionInfo=[],this.allManufacturerInfo=[],this.allIntegrationInfo=[],this.dataSource=new F.a,this.stocklineser.listCollection&&1==this.stocklineser.isEditMode&&(this.stocklineEditForm=t.group({companyId:[0,a.Validators.compose([a.Validators.required,a.Validators.minLength(1)])],BusinessUnitId:[0],divisionId:[0],departmentId:[0]}),this.showLable=!0,this.sourceStockLine=this.stocklineser.listCollection,this.sourceStockLineSetup.managementStructureId=this.sourceStockLine.managementStructureId,this.sourceStockLineSetup.itemMasterId=this.sourceStockLine.im.itemMasterId,this.sourceStockLineSetup.stockLineId=this.sourceStockLine.stl.stockLineId,this.sourceStockLineSetup.PartNumber=this.sourceStockLine.partNumber,this.sourceStockLineSetup.partId=this.sourceStockLine.partId,this.selectedPartId=this.sourceStockLineSetup.partId,this.sourceStockLineSetup.partNumber=this.sourceStockLine.partNumber,this.sourceStockLineSetup.partDescription=this.sourceStockLine.partDescription,this.sourceStockLineSetup.stockLineNumber=this.sourceStockLine.stockLineNumber,this.sourceStockLineSetup.controlNumber=this.sourceStockLine.controlNumber,this.sourceStockLineSetup.isSerialized=this.sourceStockLine.isSerialized,this.sourceStockLineSetup.condition=this.sourceStockLine.condition,this.sourceStockLineSetup.conditionId=this.sourceStockLine.conditionId,this.sourceStockLineSetup.serialNumber=this.sourceStockLine.serialNumber,this.sourceStockLineSetup.serialNumber&&(this.sourceStockLineSetup.isSerialized=!0),null==this.sourceStockLineSetup.serialNumber&&(this.sourceStockLineSetup.isSerialized=!1),0==this.sourceStockLineSetup.isSerialized?this.hideSerialNumber=!1:this.hideSerialNumber=!0,this.sourceStockLineSetup.shelfLife=this.sourceStockLine.shelfLife,this.sourceStockLineSetup.shelfLifeExpirationDate=this.sourceStockLine.shelfLifeExpirationDate,this.sourceStockLineSetup.siteId=this.sourceStockLine.siteId,this.sourceStockLineSetup.warehouseId=this.sourceStockLine.warehouseId,this.sourceStockLineSetup.locationId=this.sourceStockLine.locationId,this.sourceStockLineSetup.obtainFrom=this.sourceStockLine.obtainFrom,this.sourceStockLineSetup.obtainFromType=this.sourceStockLine.obtainFromType,this.sourceStockLineSetup.ownerType=this.sourceStockLine.ownerType,this.sourceStockLineSetup.traceableToType=this.sourceStockLine.traceableToType,this.sourceStockLineSetup.unitCostAdjustmentReasonTypeId=this.sourceStockLine.unitCostAdjustmentReasonTypeId,this.sourceStockLineSetup.unitSalePriceAdjustmentReasonTypeId=this.sourceStockLine.unitSalePriceAdjustmentReasonTypeId,this.sourceStockLineSetup.idNumber=this.sourceStockLine.idNumber,this.sourceStockLineSetup.owner=this.sourceStockLine.owner,this.sourceStockLineSetup.traceableTo=this.sourceStockLine.traceableTo,this.sourceStockLineSetup.manufacturer=this.sourceStockLine.manufacturer,this.sourceStockLineSetup.manufacturerLotNumber=this.sourceStockLine.manufacturerLotNumber,this.sourceStockLineSetup.manufacturingDate=this.sourceStockLine.manufacturingDate,this.sourceStockLineSetup.manufacturingBatchNumber=this.sourceStockLine.manufacturingBatchNumber,this.sourceStockLineSetup.partCertificationNumber=this.sourceStockLine.partCertificationNumber,this.sourceStockLineSetup.certifiedBy=this.sourceStockLine.certifiedBy,this.sourceStockLineSetup.certifiedDate=this.sourceStockLine.certifiedDate,this.sourceStockLineSetup.tagDate=this.sourceStockLine.tagDate,this.sourceStockLineSetup.tagType=this.sourceStockLine.tagType,this.sourceStockLineSetup.certifiedDueDate=this.sourceStockLine.certifiedDueDate,this.sourceStockLineSetup.calibrationMemo=this.sourceStockLine.calibrationMemo,this.sourceStockLineSetup.orderDate=this.sourceStockLine.orderDate,this.sourceStockLineSetup.purchaseOrderNumber=this.sourceStockLine.purchaseOrderNumber,this.sourceStockLineSetup.purchaseOrderUnitCost=this.sourceStockLine.purchaseOrderUnitCost,this.sourceStockLineSetup.repairOrderNumber=this.sourceStockLine.repairOrderNumber,this.sourceStockLineSetup.repairOrderUnitCost=this.sourceStockLine.repairOrderUnitCost,this.sourceStockLineSetup.receivedDate=this.sourceStockLine.receivedDate,this.sourceStockLineSetup.receiverNumber=this.sourceStockLine.receiver,this.sourceStockLineSetup.reconciliationNumber=this.sourceStockLine.reconciliationNumber,this.sourceStockLineSetup.unitSalesPrice=this.sourceStockLine.unitSalesPrice,this.sourceStockLineSetup.coreUnitCost=this.sourceStockLine.coreUnitCost,this.sourceStockLineSetup.glAccountId=this.sourceStockLine.glAccountId,this.sourceStockLineSetup.glAccountName=this.sourceStockLine.glAccountName,this.sourceStockLineSetup.assetId=this.sourceStockLine.assetId,this.sourceStockLineSetup.isHazardousMaterial=this.sourceStockLine.isHazardousMaterial,this.sourceStockLineSetup.isPMA=this.sourceStockLine.isPMA,this.sourceStockLineSetup.isDER=this.sourceStockLine.isDER,this.sourceStockLineSetup.oem=this.sourceStockLine.oem,this.sourceStockLineSetup.memo=this.sourceStockLine.memo,this.sourceStockLineSetup.siteId=this.sourceStockLine.siteId,this.sourceStockLineSetup.shelfId=this.sourceStockLine.shelfId,this.sourceStockLineSetup.binId=this.sourceStockLine.binId,this.sourceStockLineSetup.controlNumber=this.sourceStockLine.controlNumber,this.sourceStockLineSetup.inventoryUnitCost=this.sourceStockLine.inventoryUnitCost,this.sourceStockLineSetup.timeLife=this.sourceStockLine.timeLife,this.sourceTimeLife.timeLife=this.sourceStockLine.timeLife,this.sourceStockLineSetup.timeLifeCyclesId=this.sourceStockLine.timeLifeCyclesId,this.sourceStockLineSetup.managementCode=this.sourceStockLine.code,this.sourceStockLineSetup.itemTypeId=this.sourceStockLine.itemTypeId,null!=this.sourceStockLine.po&&(this.sourceStockLineSetup.PurchaseOrderId=this.sourceStockLine.po.purchaseOrderId),null!=this.sourceStockLine.ro&&(this.sourceStockLineSetup.RepairOrderId=this.sourceStockLine.ro.repairOrderId),this.sourceStockLineSetup.manufacturerId=this.sourceStockLine.manufacturerId,this.sourceStockLineSetup.blackListed=this.sourceStockLine.blackListed,this.sourceStockLineSetup.blackListedReason=this.sourceStockLine.blackListedReason,this.sourceStockLineSetup.incident=this.sourceStockLine.incident,this.sourceStockLineSetup.incidentReason=this.sourceStockLine.incidentReason,this.sourceStockLineSetup.accident=this.sourceStockLine.accident,this.sourceStockLineSetup.accidentReason=this.sourceStockLine.accidentReason,this.sourceStockLineSetup.engineSerialNumber=this.sourceStockLine.engineSerialNumber,this.sourceStockLineSetup.aircraftTailNumber=this.sourceStockLine.aircraftTailNumber,this.sourceStockLineSetup.quantityOnHand=this.sourceStockLine.quantityOnHand,this.sourceStockLineSetup.quantityReserved=this.sourceStockLine.quantityReserved,this.sourceStockLineSetup.quantityIssued=this.sourceStockLine.quantityIssued,this.sourceStockLineSetup.quantityAvailable=this.sourceStockLine.quantityAvailable,this.sourceTimeLife.timeLifeCyclesId=this.sourceStockLine.timeLifeCyclesId,this.sourceTimeLife.cyclesSinceNew=this.sourceStockLine.cyclesSinceNew,this.sourceTimeLife.cyclesSinceOVH=this.sourceStockLine.cyclesSinceOVH,this.sourceTimeLife.cyclesSinceRepair=this.sourceStockLine.cyclesSinceRepair,this.sourceTimeLife.cyclesSinceInspection=this.sourceStockLine.cyclesSinceInspection,this.sourceTimeLife.timeSinceNew=this.sourceStockLine.timeSinceNew,this.sourceTimeLife.timeSinceOVH=this.sourceStockLine.timeSinceOVH,this.sourceTimeLife.timeSinceRepair=this.sourceStockLine.timeSinceRepair,this.sourceTimeLife.timeSinceInspection=this.sourceStockLine.timeSinceInspection,this.sourceTimeLife.lastSinceNew=this.sourceStockLine.lastSinceNew,this.sourceTimeLife.lastSinceOVH=this.sourceStockLine.lastSinceOVH,this.sourceTimeLife.lastSinceInspection=this.sourceStockLine.lastSinceInspection,this.sourceStockLineSetup.siteId&&this.workFlowtService.getWareHouseDate(this.sourceStockLineSetup.siteId).subscribe(t=>this.onDataLoadWareHouse(t),t=>this.onDataLoadFailed(t)),this.sourceStockLineSetup.warehouseId&&this.workFlowtService.getLocationDate(this.sourceStockLineSetup.warehouseId).subscribe(t=>this.onDataLoadLocation(t),t=>this.onDataLoadFailed(t)),this.sourceStockLineSetup.locationId&&this.workFlowtService.getShelfDate(this.sourceStockLineSetup.locationId).subscribe(t=>this.onDataLoadShelf(t),t=>this.onDataLoadFailed(t)),this.sourceStockLineSetup.shelfId&&this.workFlowtService.getBinDataById(this.sourceStockLineSetup.shelfId).subscribe(t=>this.onDataLoadBin(t),t=>this.onDataLoadFailed(t)),"0001-01-01T00:00:00"==this.sourceStockLine.certifiedDate||null==this.sourceStockLine.certifiedDate||"undefined"==this.sourceStockLine.certifiedDate?this.sourceStockLineSetup.certifiedDate=new Date:this.sourceStockLineSetup.certifiedDate=new Date(this.sourceStockLine.certifiedDate),"0001-01-01T00:00:00"==this.sourceStockLine.certifiedDueDate||null==this.sourceStockLine.certifiedDueDate||"undefined"==this.sourceStockLine.certifiedDueDate?this.sourceStockLineSetup.certifiedDueDate=new Date:this.sourceStockLineSetup.certifiedDueDate=new Date(this.sourceStockLine.certifiedDueDate),"0001-01-01T00:00:00"==this.sourceStockLine.shelfLifeExpirationDate||null==this.sourceStockLine.shelfLifeExpirationDate||"undefined"==this.sourceStockLine.shelfLifeExpirationDate?this.sourceStockLineSetup.shelfLifeExpirationDate=new Date:this.sourceStockLineSetup.shelfLifeExpirationDate=new Date(this.sourceStockLine.shelfLifeExpirationDate),"0001-01-01T00:00:00"==this.sourceStockLine.manufacturingDate||null==this.sourceStockLine.manufacturingDate||"undefined"==this.sourceStockLine.manufacturingDate?this.sourceStockLineSetup.manufacturingDate=new Date:this.sourceStockLineSetup.manufacturingDate=new Date(this.sourceStockLine.manufacturingDate),"0001-01-01T00:00:00"==this.sourceStockLine.tagDate||null==this.sourceStockLine.tagDate||"undefined"==this.sourceStockLine.tagDate?this.sourceStockLineSetup.tagDate=new Date:this.sourceStockLineSetup.tagDate=new Date(this.sourceStockLine.tagDate),"0001-01-01T00:00:00"==this.sourceStockLine.orderDate||null==this.sourceStockLine.orderDate||"undefined"==this.sourceStockLine.orderDate?this.sourceStockLineSetup.orderDate=new Date:this.sourceStockLineSetup.orderDate=new Date(this.sourceStockLine.orderDate),"0001-01-01T00:00:00"==this.sourceStockLine.receivedDate||null==this.sourceStockLine.receivedDate||"undefined"==this.sourceStockLine.receivedDate?this.sourceStockLineSetup.receivedDate=new Date:this.sourceStockLineSetup.receivedDate=new Date(this.sourceStockLine.receivedDate))}ngOnInit(){this.stocklineser.currentUrl="/stocklinemodule/stocklinepages/app-stock-line-edit",this.stocklineser.bredcrumbObj.next(this.stocklineser.currentUrl),this.loadData(),this.loadCompanyData(),this.loadManagementdata(),this.loadSiteData(),this.Integration(),this.loadManufacturerData(),this.loadPoData(),this.loadRoData(),this.loadIntegrationPortal(),this.loadLegalEntityData(),this.loadEmployeeData(),this.glAccountlistdata(),this.customerList(),this.vendorList(),this.loadGlAccountData(),this.ptnumberlistdata(),this.filterpartItems(this.sourceStockLineSetup.PartNumber),this.partnmId(this.sourceStockLineSetup.PartNumber),this.loadTagTypes()}loadLegalEntityData(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.workFlowtService1.getManagemtentLengalEntityData().subscribe(t=>this.onManagemtntlegaldataLoad(t[0]),t=>this.onDataLoadFailed(t))}onManagemtntlegaldataLoad(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.alllegalEntityInfo=t;for(let e=0;e<this.alllegalEntityInfo.length;e++)null==this.alllegalEntityInfo[e].parentId&&this.maincompanylist.push(this.alllegalEntityInfo[e])}ptnumberlistdata(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.itemser.getPrtnumberslistList().subscribe(t=>this.onptnmbersSuccessful(t[0]),t=>this.onDataLoadFailed(t))}glAccountlistdata(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0;this.itemser.getItemStockList("Stock").subscribe(t=>this.onglAccountSuccessful(t[0]),t=>this.onDataLoadFailed(t))}onglAccountSuccessful(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allglAccountInfo=t}onptnmbersSuccessful(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allPartnumbersInfo=t}glAccountHandler(t){if(""!=t.target.value){let e=t.target.value.toLowerCase();this.selectedActionName&&(e==this.selectedActionName.toLowerCase()?this.disableSaveglAccount=!0:this.disableSaveglAccount=!1)}}glAccountId(t){if(this.glAccountcla)for(let e=0;e<this.glAccountcla.length;e++)t==this.glAccountcla[e][0].glAccountId&&(this.sourceStockLineSetup.itemMasterId=this.itemclaColl[e][0].ItemMasterId)}filterglAccount(t){if(this.glAccountCollection=[],this.glAccountcla=[],this.allglAccountInfo)for(let e=0;e<this.allglAccountInfo.length;e++){let t=this.allglAccountInfo[e].glAccountId;t&&this.glAccountCollection.push(t)}}loadEmployeeData(){this.empService.getEmployeeList().subscribe(t=>this.onDataLoadEmployeeSuccessful(t[0]),t=>this.onDataLoadFailed(t))}onDataLoadEmployeeSuccessful(t){this.dataSource.data=t,this.allEmployeeList=t}ChnageValue(t){this.sourceStockLineSetup.obtainFrom="",this.sourceStockLineSetup.obtainFrom=null,this.sourceStockLineSetup.obtainFrom=""}ChnageOwnerValue(t){this.sourceStockLineSetup.owner=""}ChnageTracebleValue(t){this.sourceStockLineSetup.traceableTo=""}loadPoData(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.vendorservice.getPurchaseOrderlist().subscribe(t=>this.onPoListDataLoadSuccessful(t[0]),t=>this.onDataLoadFailed(t))}onPoListDataLoadSuccessful(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allPolistInfo=t}loadRoData(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.vendorservice.getRepaireOrderlist().subscribe(t=>this.onDataLoadRepairOrderDataSuccessful(t[0]),t=>this.onDataLoadFailed(t))}onDataLoadRepairOrderDataSuccessful(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allRolistInfo=t}Integration(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.inteService.getWorkFlows().subscribe(t=>this.onIntegrationData(t[0]),t=>this.onDataLoadFailed(t))}loadManufacturerData(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.manufacturerService.getWorkFlows().subscribe(t=>this.onmanufacturerSuccessful(t[0]),t=>this.onDataLoadFailed(t))}onmanufacturerSuccessful(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allManufacturerInfo=t}onIntegrationData(t){if(this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allintegrationdetails=t,this.allintegrationdetails.length>0)for(let e=0;e<this.allintegrationdetails.length;e++)this.integrationvalues.push({value:this.allintegrationdetails[e].integrationPortalId,label:this.allintegrationdetails[e].description})}loadTagTypes(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.stocklineser.getAllTagTypes().subscribe(t=>this.onLoadloadTagTypesSuccessful(t),t=>this.onDataLoadFailed(t))}onLoadloadTagTypesSuccessful(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allTagTypes=t}filterpartItems(t){if(this.partCollection=[],this.itemclaColl=[],this.allPartnumbersInfo&&this.allPartnumbersInfo.length>0)for(let e=0;e<this.allPartnumbersInfo.length;e++){let n=this.allPartnumbersInfo[e].partNumber;0==n.toLowerCase().indexOf(t.query.toLowerCase())&&(this.itemclaColl.push([{partId:this.allPartnumbersInfo[e].partId,partName:n}]),this.partCollection.push(n))}}partnmId(t){if(this.itemclaColl){for(let e=0;e<this.itemclaColl.length;e++)t==this.itemclaColl[e][0].partName&&(this.selectedPartId=this.itemclaColl[e][0].partId,console.log(this.selectedPartId),this.selectedActionName=t);this.itemser.getDescriptionbypart(t).subscribe(t=>this.onpartnumberloadsuccessfull(t[0]),t=>this.onDataLoadFailed(t))}}onpartnumberloadsuccessfull(t){this.descriptionbyPart=t[0],this.sourcePartAction=this.descriptionbyPart,this.sourceStockLineSetup.partDescription=t[0].partDescription,this.sourceStockLineSetup.isSerialized=t[0].isSerialized,this.sourceStockLineSetup.ITARNumber=t[0].t.itarNumber,this.sourceStockLineSetup.nationalStockNumber=t[0].t.nationalStockNumber,this.sourceStockLineSetup.ExportECCN=t[0].t.exportECCN,this.sourceStockLineSetup.NHA=t[0].t.nha,this.sourceStockLineSetup.tagDate=t[0].t.TagDate,this.sourceStockLineSetup.openDate=t[0].t.openDate,this.sourceStockLineSetup.tagDays=t[0].t.tagDays,this.sourceStockLineSetup.manufacturingDays=t[0].t.manufacturingDays,this.sourceStockLineSetup.daysReceived=t[0].t.daysReceived,this.sourceStockLineSetup.openDays=t[0].t.openDays,1==this.sourceStockLineSetup.isSerialized?(this.hideSerialNumber=!0,this.showRestrictQuantity=!0,this.showNormalQuantity=!1):(this.hideSerialNumber=!1,this.showRestrictQuantity=!1,this.showNormalQuantity=!0),null==this.sourceStockLineSetup.isSerialized&&this.sourceStockLineSetup.isSerialized}customerList(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.customerService.getWorkFlows().subscribe(t=>this.onCustomerDataLoadSuccessful(t[0]),t=>this.onDataLoadFailed(t))}onCustomerDataLoadSuccessful(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allCustomer=t}vendorList(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.vendorService.getVendorList().subscribe(t=>this.onVendorDataLoadSuccessful(t[0]),t=>this.onDataLoadFailed(t))}onVendorDataLoadSuccessful(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allVendorList=t}loadIntegrationPortal(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.integrationService.getWorkFlows().subscribe(t=>this.onDataLoadIntegrationSuccessful(t[0]),t=>this.onDataLoadFailed(t))}calculateQtyAvailable(t){this.sourceStockLineSetup.quantityOnHand&&(this.availableQty=this.sourceStockLineSetup.quantityOnHand),this.sourceStockLineSetup.quantityOnHand&&this.sourceStockLineSetup.quantityReserved&&(this.availableQty=this.sourceStockLineSetup.quantityOnHand-this.sourceStockLineSetup.quantityReserved),this.sourceStockLineSetup.quantityOnHand&&this.sourceStockLineSetup.quantityReserved&&this.sourceStockLineSetup.quantityIssued&&(this.availableQty=this.sourceStockLineSetup.quantityOnHand-this.sourceStockLineSetup.quantityReserved-this.sourceStockLineSetup.quantityIssued),this.sourceStockLineSetup.quantityAvailable=this.availableQty}onDataLoadIntegrationSuccessful(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allIntegrationInfo=t,this.loadIntegrationPortalDataIfIdExist()}loadIntegrationPortalDataIfIdExist(){this.stocklineser.getStockLineIntegrationList(this.sourceStockLineSetup.stockLineId).subscribe(t=>this.onDataIntegrationPortalForStockId(t),t=>this.onDataLoadFailed(t))}onDataIntegrationPortalForStockId(t){if(this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.currentStocklineIntegrationPortalData=t,t)for(let e=0;e<t.length;e++)t[e].attempToDelete=!1,this.selectedModels.push(JSON.parse(JSON.stringify(t[e])));if(this.allIntegrationInfo&&this.currentStocklineIntegrationPortalData)for(let e=0;e<this.currentStocklineIntegrationPortalData.length;e++)for(let t=0;t<this.allIntegrationInfo.length;t++)this.allIntegrationInfo[t].integrationPortalId==this.currentStocklineIntegrationPortalData[e].integrationPortalId&&(this.allIntegrationInfo[t].integratedCheckbox=!0,1==this.currentStocklineIntegrationPortalData[e].isListed&&(this.allIntegrationInfo[t].listedCheckbox=!0))}loadGlAccountData(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.glAccountService.getGlAccountClassList().subscribe(t=>this.onDataLoadGlAccountSuccessful(t[0]),t=>this.onDataLoadFailed(t))}onDataLoadGlAccountSuccessful(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allGLAccountClassData=t}loadSiteData(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.siteService.getSiteList().subscribe(t=>this.onSaiteDataLoadSuccessful(t[0]),t=>this.onDataLoadFailed(t))}onDataLoadWareHouse(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allWareHouses=t}onDataLoadLocation(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allLocations=t}onDataLoadShelf(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allShelfs=t}onDataLoadBin(t){this.loadingIndicator=!1,this.allBins=t}onSaiteDataLoadSuccessful(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allSites=t}siteValueChange(t){this.allWareHouses=[],this.allLocations=[],this.allShelfs=[],this.allBins=[],this.sourceStockLineSetup.warehouseId=0,this.sourceStockLineSetup.locationId=0,this.sourceStockLineSetup.shelfId=0,this.sourceStockLineSetup.binId=0,this.workFlowtService.getWareHouseDate(this.sourceStockLineSetup.siteId).subscribe(t=>this.onDataLoadWareHouse(t),t=>this.onDataLoadFailed(t))}wareHouseValueChange(t){this.allLocations=[],this.allShelfs=[],this.allBins=[],this.sourceStockLineSetup.locationId=0,this.sourceStockLineSetup.shelfId=0,this.sourceStockLineSetup.binId=0,this.workFlowtService.getLocationDate(t).subscribe(t=>this.onDataLoadLocation(t),t=>this.onDataLoadFailed(t))}eventHandler(t){if(""!=t.target.value){t.target.value.toLowerCase();this.selectedActionName&&this.selectedActionName.toLowerCase()}}locationValueChange(t){this.allShelfs=[],this.allBins=[],this.sourceStockLineSetup.shelfId=0,this.sourceStockLineSetup.binId=0,this.workFlowtService.getShelfDate(t).subscribe(t=>this.onDataLoadShelf(t),t=>this.onDataLoadFailed(t))}shelfValueChange(t){this.allBins=[],this.sourceStockLineSetup.binId=0,this.workFlowtService.getBinDataById(t).subscribe(t=>this.onDataLoadBin(t),t=>this.onDataLoadFailed(t))}binValueSelect(t){}loadManagementdata(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.workFlowtService1.getManagemententity().subscribe(t=>this.onManagemtntdataLoad(t[0]),t=>this.onDataLoadFailed(t))}onManagemtntdataLoad(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allManagemtninfo=t;for(let e=0;e<this.allManagemtninfo.length;e++)null==this.allManagemtninfo[e].parentId&&this.maincompanylist.push(this.allManagemtninfo[e]);null!=this.sourceStockLine.managmentLegalEntity&&null!=this.sourceStockLine.divmanagmentLegalEntity&&null!=this.sourceStockLine.biumanagmentLegalEntity&&null!=this.sourceStockLine.compmanagmentLegalEntity?(this.stocklineEditForm.controls.companyId.setValue(this.sourceStockLine.compmanagmentLegalEntity.managementStructureId),this.stocklineEditForm.controls.BusinessUnitId.setValue(this.sourceStockLine.biumanagmentLegalEntity.managementStructureId),this.stocklineEditForm.controls.divisionId.setValue(this.sourceStockLine.divmanagmentLegalEntity.managementStructureId),this.stocklineEditForm.controls.departmentId.setValue(this.sourceStockLine.mana.managementStructureId)):null!=this.sourceStockLine.biumanagmentLegalEntity&&null!=this.sourceStockLine.divmanagmentLegalEntity&&null!=this.sourceStockLine.managmentLegalEntity?(this.stocklineEditForm.controls.companyId.setValue(this.sourceStockLine.biumanagmentLegalEntity.managementStructureId),this.stocklineEditForm.controls.BusinessUnitId.setValue(this.sourceStockLine.divmanagmentLegalEntity.managementStructureId),this.stocklineEditForm.controls.divisionId.setValue(this.sourceStockLine.managmentLegalEntity.managementStructureId)):null!=this.sourceStockLine.divmanagmentLegalEntity&&null!=this.sourceStockLine.managmentLegalEntity?(this.stocklineEditForm.controls.companyId.setValue(this.sourceStockLine.divmanagmentLegalEntity.managementStructureId),this.stocklineEditForm.controls.BusinessUnitId.setValue(this.sourceStockLine.managmentLegalEntity.managementStructureId)):null!=this.sourceStockLine.mana&&this.stocklineEditForm.controls.companyId.setValue(this.sourceStockLine.managmentLegalEntity.managementStructureId),this.setManagementStrucureData(this.sourceStockLine)}setManagementStrucureData(t){this.managementStructureData=[],this.checkMSParents(this.sourceStockLineSetup.managementStructureId),4==this.managementStructureData.length&&(this.sourceStockLineSetup.companyId=this.managementStructureData[3],this.sourceStockLineSetup.buisinessUnitId=this.managementStructureData[2],this.sourceStockLineSetup.departmentId=this.managementStructureData[1],this.sourceStockLineSetup.divisionId=this.managementStructureData[0],this.getBUList2(this.sourceStockLineSetup.companyId),this.getDepartmentlist2(this.sourceStockLineSetup.buisinessUnitId),this.getDivisionlist(this.sourceStockLineSetup.departmentId)),3==this.managementStructureData.length&&(this.sourceStockLineSetup.companyId=this.managementStructureData[2],this.sourceStockLineSetup.buisinessUnitId=this.managementStructureData[1],this.sourceStockLineSetup.departmentId=this.managementStructureData[0],this.getBUList2(this.sourceStockLineSetup.companyId),this.getDepartmentlist2(this.sourceStockLineSetup.buisinessUnitId)),2==this.managementStructureData.length&&(this.sourceStockLineSetup.companyId=this.managementStructureData[1],this.sourceStockLineSetup.buisinessUnitId=this.managementStructureData[0],this.getBUList2(this.sourceStockLineSetup.companyId)),1==this.managementStructureData.length&&(this.sourceStockLineSetup.companyId=this.managementStructureData[0])}checkMSParents(t){this.managementStructureData.push(t);for(let e=0;e<this.allManagemtninfo.length;e++)if(this.allManagemtninfo[e].managementStructureId==t&&this.allManagemtninfo[e].parentId){this.checkMSParents(this.allManagemtninfo[e].parentId);break}}getBUList2(t){var e=t;this.bulist=[],this.departmentList=[],this.divisionlist=[];for(let n=0;n<this.allManagemtninfo.length;n++)this.allManagemtninfo[n].parentId==e&&this.bulist.push(this.allManagemtninfo[n])}getBUList(t){var e=this.stocklineEditForm.controls.companyId.value;this.sourceStockLineSetup.buisinessUnitId=null,this.stocklineEditForm.controls.BusinessUnitId.setValue(null),this.stocklineEditForm.controls.divisionId.setValue(null),this.stocklineEditForm.controls.departmentId.setValue(null),this.sourceStockLineSetup.departmentId="",this.sourceStockLineSetup.divisionId="",this.sourceStockLineSetup.buisinessUnitId="",this.bulist=[],this.departmentList=[],this.divisionlist=[];for(let n=0;n<this.allManagemtninfo.length;n++)this.allManagemtninfo[n].parentId==e&&this.bulist.push(this.allManagemtninfo[n])}getDepartmentlist(t){t.split(": ");var e=this.stocklineEditForm.controls.BusinessUnitId.value;this.stocklineEditForm.controls.divisionId.setValue(null),this.stocklineEditForm.controls.departmentId.setValue(null),this.sourceStockLineSetup.departmentId="",this.sourceStockLineSetup.divisionId="",this.departmentList=[],this.divisionlist=[];for(let n=0;n<this.allManagemtninfo.length;n++)this.allManagemtninfo[n].parentId==e&&this.departmentList.push(this.allManagemtninfo[n])}getDepartmentlist2(t){this.departmentList=[],this.divisionlist=[];for(let e=0;e<this.allManagemtninfo.length;e++)this.allManagemtninfo[e].parentId==t&&this.departmentList.push(this.allManagemtninfo[e])}getDivisionlist(t){var e=this.stocklineEditForm.controls.divisionId.value;this.divisionlist=[];for(let n=0;n<this.allManagemtninfo.length;n++)this.allManagemtninfo[n].parentId==e&&this.divisionlist.push(this.allManagemtninfo[n])}divisionChange(t){this.sourceStockLineSetup.managementStructureId=t}POValueChange(t){}ROValueChange(t){}onDataLoadFailed(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}saveCompleted(t){1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",O.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",O.d.success)}saveFailedHelper(t){this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",O.d.error,t),this.alertService.showStickyMessage(t,null,O.d.error)}savestockLineclose(){this.sourceStockLineSetup.partNumber?this.showPartNumberError=!1:(this.showPartNumberError=!0,this.displayError=!0),this.stocklineEditForm.get("companyId").value||this.sourceStockLineSetup.legalEntityId?this.showCompanyError=!1:(this.showCompanyError=!0,this.displayError=!0),this.sourceStockLineSetup.conditionId?this.showConditionError=!1:(this.showConditionError=!0,this.displayError=!0),this.sourceStockLineSetup.siteId?this.showSiteError=!1:(this.showSiteError=!0,this.displayError=!0),this.sourceStockLineSetup.receivedDate?this.showReceiveDateError=!1:(this.showReceiveDateError=!0,this.displayError=!0),this.sourceStockLineSetup.receiverNumber?this.showReceiverNumberError=!1:(this.showReceiverNumberError=!0,this.displayError=!0),this.sourceStockLineSetup.quantityOnHand?this.QuantityOnHandError=!1:(this.QuantityOnHandError=!0,this.displayError=!0),null!=this.sourceStockLineSetup.isSerialized&&(1==this.sourceStockLineSetup.isSerialized&&this.sourceStockLineSetup.serialNumber?this.showSerialNumberError=!1:0!=this.sourceStockLineSetup.isSerialized||this.sourceStockLineSetup.serialNumber?(this.showSerialNumberError=!0,this.displayError=!0):this.showSerialNumberError=!1),this.availableQty>0||this.sourceStockLineSetup.quantityAvailable>0?this.invalidQtyError=!1:(this.invalidQtyError=!0,this.displayError=!0),this.displayError||(1==this.sourceStockLineSetup.isSerialized&&this.sourceStockLineSetup.serialNumber?this.sourceStockLine.stockLineId?(this.sourceStockLineSetup.updatedBy=this.userName,this.sourceStockLineSetup.masterCompanyId=1,this.sourceItemMaster.itemMasterId=this.sourceStockLineSetup.itemMasterId,this.sourceItemMaster.partId=this.selectedPartId,null!=this.stocklineEditForm.get("departmentId").value&&this.stocklineEditForm.get("departmentId").value>0?this.sourceStockLineSetup.managementStructureId=this.stocklineEditForm.get("departmentId").value:null!=this.stocklineEditForm.get("divisionId").value&&""==this.sourceStockLineSetup.departmentId&&this.sourceStockLineSetup.departmentId>0?this.sourceStockLineSetup.managementStructureId=this.stocklineEditForm.get("divisionId").value:null!=this.stocklineEditForm.get("BusinessUnitId").value&&""==this.sourceStockLineSetup.departmentId&&""==this.sourceStockLineSetup.divisionId&&this.sourceStockLineSetup.divisionId>0?this.sourceStockLineSetup.managementStructureId=this.stocklineEditForm.get("BusinessUnitId").value:this.sourceStockLineSetup.managementStructureId=this.stocklineEditForm.get("companyId").value,this.stocklineser.updateStockSetupLine(this.sourceStockLineSetup).subscribe(t=>{if(t&&(this.saveCompleted(this.sourceStockLineSetup),this.sourceStockLineSetup.timeLifeCyclesId?(console.log("Update Timelife"),this.stocklineser.updateStockLineTimelife(this.sourceTimeLife).subscribe(t=>{this.collectionofstockLine=t,this.router.navigateByUrl("/stocklinemodule/stocklinepages/app-stock-line-list")})):this.stocklineser.newStockLineTimeLife(this.sourceTimeLife).subscribe(t=>{this.collectionofstockLine=t,this.value=1,this.router.navigateByUrl("/stocklinemodule/stocklinepages/app-stock-line-list")}),this.selectedModels.length>0)){this.selectedModels.length>0&&this.stocklineser.deleteIntegrationById(this.sourceStockLineSetup.stockLineId).subscribe();for(let t=0;t<this.currentStocklineIntegrationPortalData.length;t++)for(let e=0;e<this.selectedModels.length;e++)this.currentStocklineIntegrationPortalData[t].integrationPortalId==this.selectedModels[e].integrationPortalId&&1==this.attempToDelete&&1==this.selectedModels[e].attempToDelete&&this.selectedModels.splice(e,1);this.saveStocklineIntegrationPortalData(this.sourceStockLineSetup.stockLineId,this.selectedModels)}})):(this.sourceStockLine.createdBy=this.userName,this.sourceStockLine.updatedBy=this.userName,this.sourceStockLine.masterCompanyId=1,this.sourceStockLine.itemTypeId=1,this.stocklineser.newStockLine(this.sourceStockLine).subscribe(t=>{this.collectionofstockLine=t,this.router.navigateByUrl("/stocklinemodule/stocklinepages/app-stock-line-list"),this.value=1})):0!=this.sourceStockLineSetup.isSerialized&&null!=this.sourceStockLineSetup.isSerialized&&"undefined"!=this.sourceStockLineSetup.isSerialized&&null!=this.sourceStockLineSetup.isSerialized||this.sourceStockLineSetup.serialNumber||(this.sourceStockLine.updatedBy=this.userName,this.sourceStockLine.masterCompanyId=1,this.sourceItemMaster.itemMasterId=this.sourceStockLineSetup.itemMasterId,this.sourceItemMaster.partId=this.selectedPartId,this.stocklineser.updateStockSetupLine(this.sourceStockLineSetup).subscribe(t=>{if(this.saveCompleted(this.sourceStockLineSetup),this.sourceStockLineSetup.timeLifeCyclesId?(console.log("Update Timelife"),this.stocklineser.updateStockLineTimelife(this.sourceTimeLife).subscribe(t=>{this.collectionofstockLine=t,this.router.navigateByUrl("/stocklinemodule/stocklinepages/app-stock-line-list")})):this.stocklineser.newStockLineTimeLife(this.sourceTimeLife).subscribe(t=>{this.collectionofstockLine=t,this.value=1,this.router.navigateByUrl("/stocklinemodule/stocklinepages/app-stock-line-list")}),this.selectedModels.length>0){this.selectedModels.length>0&&this.stocklineser.deleteIntegrationById(this.sourceStockLineSetup.stockLineId).subscribe();for(let t=0;t<this.currentStocklineIntegrationPortalData.length;t++)for(let e=0;e<this.selectedModels.length;e++)this.currentStocklineIntegrationPortalData[t].integrationPortalId==this.selectedModels[e].integrationPortalId&&1==this.attempToDelete&&1==this.selectedModels[e].attempToDelete&&this.selectedModels.splice(e,1);this.saveStocklineIntegrationPortalData(this.sourceStockLineSetup.stockLineId,this.selectedModels)}})))}ngAfterViewInit(){}loadData(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.conditionService.getConditionList().subscribe(t=>this.onDataLoadSuccessful(t[0]),t=>this.onDataLoadFailed(t))}loadCompanyData(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.stocklineser.getStockCompanyList().subscribe(t=>this.onDataLoadCompanySuccessful(t[0]),t=>this.onDataLoadFailed(t))}onDataLoadCompanySuccessful(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allCompanys=t}onDataLoadSuccessful(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allConditionInfo=t}getSelectedItem(t,e){let n=!1;t.isListed=!0,this.selectedModels.length>0&&this.selectedModels.map(e=>{t.integrationPortalId==e.integrationPortalId&&(t.integratedCheckbox&&(e.isListed=!1,n=!0),0==e.isListed&&1==t.listedCheckbox&&(t.isListed=!0,e.isListed=!0,n=!1))}),n||this.selectedModels.push(t)}saveSelectedModel(t,e){t.isBoolean=e,t.isListed||(t.isListed=!1);let n=!1;this.selectedModels.length>0&&this.selectedModels.map(e=>{t.integrationPortalId==e.integrationPortalId&&0==t.isListed&&(this.attempToDelete=!0,t.attempToDelete=!0,n=!1)}),n||this.selectedModels.push(t)}triggerSomeEvent(){this.isDisabled=!this.isDisabled}saveStocklineIntegrationPortalData(t,e){for(let n=0;n<e.length;n++)e[n].StocklineId=t,this.stocklineser.saveStocklineIntegrationPortalData(e[n]).subscribe(t=>{this.collectionofstocklineIntegrationPortalData=t})}};St.ctorParameters=()=>[{type:a.FormBuilder},{type:bt.a},{type:$.a},{type:G.a},{type:K.a},{type:_.a},{type:gt.a},{type:G.a},{type:pt.a},{type:$.a},{type:ht.a},{type:Y.a},{type:Q.a},{type:$.a},{type:A.a},{type:ut.HttpClient},{type:mt.a},{type:r.ChangeDetectorRef},{type:x.Router},{type:H.a},{type:T.c},{type:T.b},{type:a.FormBuilder},{type:O.b},{type:W.a},{type:N.b}],St=i.b([Object(r.Component)({selector:"app-stock-line-edit",template:i.c(n("lviK")).default,animations:[j.a],styles:[i.c(n("dBoG")).default]})],St);var vt=n("eNCC"),ft=n("dLo5"),yt=n("agHx");n.d(e,"StocklinePagesModule",(function(){return Lt}));let Lt=class{};Lt=i.b([Object(r.NgModule)({imports:[s.a,a.FormsModule,a.ReactiveFormsModule,c.a,l.b,d.CommonModule,u.TableModule,m.ButtonModule,h.SelectButtonModule,p.InputTextModule,g.MultiSelectModule,b.InputSwitchModule,S.CheckboxModule,v.AutoCompleteModule,f.GMapModule,L.RadioButtonModule,y.FileUploadModule,D.StepsModule,k.BreadcrumbModule,I.DialogModule,o.CalendarModule,dt,M.TreeModule,C.TreeTableModule,vt.a,ft.DropdownModule,yt.KeyFilterModule,w.EditorModule],declarations:[z,nt,it,at,St,lt],providers:[],entryComponents:[]})],Lt)},TkOv:function(t,e,n){"use strict";n.r(e),e.default='\ufeff<div class="card new-card">\r\n  <div class="card-header bg-primary new-card-header">\r\n\t\t<div class="row">\r\n\t\t  <div class="col">\r\n\t\t\t<h4 class="new-card-heading">Stock Line List</h4>\r\n\t\t  </div>\r\n\t\t  <div>\r\n\t\t\t<button\r\n\t\t\ttype="button"\r\n\t\t\tclass="btn-sm new-btn-primary"\r\n\t\t\t[routerLink]="[\'/stocklinemodule/stocklinepages/app-stock-line-setup\']">\r\n\t\t\tAdd New Stock Line\r\n\t\t\t</button>\r\n\t\t  </div>\r\n\t\t</div>\r\n  </div>\r\n  <div class="card-body new-card-body">\r\n    <p-table #dt \r\n            class="rpo-table-cstm rro-table-cstm" \r\n            [value]="data" \r\n            [first]="0" \r\n            [rows]="pageSize"\r\n            [paginator]="true" \r\n            [pageLinks]="3" \r\n            [rowsPerPageOptions]="[10, 20, 50, 100]" \r\n            [columns]="selectedGridColumns"\r\n            selectionMode="multiple"             \r\n            [lazy]="true" \r\n            (onLazyLoad)="loadData($event)" \r\n            [resizableColumns]="true"\r\n            [reorderableColumns]="true" \r\n            [totalRecords]="totalRecords" \r\n            [metaKeySelection]="true" \r\n            [scrollable]="true"\r\n            scrollHeight="450px">\r\n            <ng-template pTemplate="caption">\r\n              <div class="row">\r\n                <div class="col">\r\n                  <p-multiSelect\r\n                  [maxSelectedLabels]="2"\r\n                  [options]="headers"\r\n                  optionLabel="header"\r\n                  [(ngModel)]="selectedGridColumns"\r\n                  [style]="{ minWidth: \'200px\' }"\r\n                  style="float: left;"\r\n                  (onChange)="columnsChanges()"\r\n                  ></p-multiSelect>\r\n                </div>\r\n                <div class="col">\r\n                  <div\r\n                  style="width: auto !important; float: right;"\r\n                  class="inner-addon right-addon w50 inline-block g-filter-search-cstm"\r\n                  >\r\n                  <i class="fa fa-search"></i>\r\n                  <input\r\n                    type="text"\r\n                    pInputText\r\n                    size="50"\r\n                    class="form-control"\r\n                    (input)="globalSearch($event.target.value)"\r\n                    placeholder="Filter" [(ngModel)]="globalSearchText"\r\n                  />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n                <div class="row">\r\n                  <div class="col">\r\n                    <button type="button"\r\n                                    class="btn btn-primary new-table-button"\r\n                                    matTooltip="Download Data"\r\n                                    matTooltipPosition="above"\r\n                                    pButton\r\n                                    icon="fa-download"\r\n                                    iconPos="left"\r\n                                    label="Export All Data"\r\n                                    data-toggle="modal" \r\n                                    (click)="selectedOnly = false; targetData = dt;"\r\n                                     data-target="#downloadConfirmation">\r\n                            </button> \r\n                            <button type="button"\r\n                                    class="btn btn-primary new-table-button"\r\n                                    matTooltip="Download Selected Data"\r\n                                    matTooltipPosition="above"\r\n                                    pButton\r\n                                    icon="fa-download"\r\n                                    iconPos="left"\r\n                                    label="Export Selected Data"\r\n                                    (click)="dt.exportCSV({selectionOnly:true})">\r\n                            </button>\r\n                  </div>\r\n                  <div class="col">\r\n                    <div class="">\r\n                    <div\r\n                      class="col"\r\n                      style="float: right; padding: 3px 0 0; width: 250px;"\r\n                    >\r\n                      <div class="form-group">\r\n                        <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                          <label class="radio-cstm wauto">\r\n                              <input type="radio" name="stockType" class="form-control" value="stock" (click)="geStocklineByStock(\'stock\')" [(ngModel)]="currentStock">\r\n                              <span class="checkmark"></span>Stock\r\n                          </label>\r\n                      </div>\r\n                      <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                          <label class="radio-cstm wauto">\r\n                              <input type="radio" name="stockType" class="form-control" value="nonstock" (click)="geStocklineByStock(\'nonstock\')" [(ngModel)]="currentStock">\r\n                              <span class="checkmark"></span>Non-Stock\r\n                          </label>\r\n                      </div>\r\n                      <div class="pull-left" style="margin-top: 4px; margin-right: 15px;">\r\n                        <label class="radio-cstm wauto">\r\n                            <input type="radio" name="stockType" class="form-control" value="all" (click)="geStocklineByStock(\'all\')" [(ngModel)]="currentStock">\r\n                            <span class="checkmark"></span>All\r\n                        </label>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  </div>\r\n            </ng-template>\r\n            <ng-template pTemplate="colgroup" let-columns>\r\n                <colgroup>\r\n                    <col *ngFor="let col of columns" style="width:130px">\r\n                </colgroup>\r\n            </ng-template>\r\n\r\n            <ng-template pTemplate="header" let-columns>\r\n                <tr>\r\n                    <ng-container *ngFor="let col of columns">\r\n                        <th class="text-center"\r\n                            *ngIf="col.field!=\'companyName\' && col.field!=\'buName\' && col.field!=\'divName\' && col.field!=\'deptName\'"\r\n                            pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n                            {{col.header}}\r\n                            <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                        </th>\r\n                        <th class="text-center" *ngIf="col.field==\'companyName\'" colspan="4" pResizableColumn\r\n                            pReorderableColumn [pSortableColumn]="col.field">\r\n                            Management Structure\r\n                        </th>\r\n                    </ng-container>\r\n                    <th style="width:150px;position:sticky" *ngIf="selectedGridColumns.length > 0">\r\n                        Actions\r\n                    </th>\r\n                </tr>\r\n                <tr>\r\n                    <th style="width:150px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                        <input [type]="(col.field == \'quantityOnHand\' || col.field == \'quantityAvailable\')?\'number\':\'text\'" *ngIf="col.field !== \'receivedDate\' && col.field !== \'expirationDate\' && col.field !== \'tagDate\' && col.field !== \'createdDate\' && col.field !== \'updatedDate\'" style="width:100%;" pInputText [ngModel]="dt.filters[col.field] ? dt.filters[col.field].value : \'\'"\r\n                            (input)="dt.filter($event.target.value, col.field, \'contains\')" >\r\n                        <input type="date" class="hidePlaceHolder" *ngIf="col.field == \'receivedDate\' || col.field == \'expirationDate\' || col.field == \'tagDate\'"\r\n                            name="receivedDate" style="width:100%;" [ngModel]="dt.filters[col.field] ? dt.filters[col.field].value : \'\'"\r\n                            (input)="dt.filter($event.target.value, col.field, \'contains\'); enableDateFilter($event.target);">\r\n                        <input type="date"   style="width:100%" class="hidePlaceHolder" *ngIf="col.field == \'createdDate\'"\r\n                            name="createdDate"  (change)="dateFilterForTable($event.target.value, col.field)" />\r\n                        <input type="date"   style="width:100%" class="hidePlaceHolder" *ngIf="col.field == \'updatedDate\'"\r\n                            name="updatedDate"  (change)="dateFilterForTable($event.target.value, col.field)" />\r\n                    </th>\r\n                    <th style="width:150px;position:sticky"></th>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="body" let-rowData let-columns="columns">\r\n                <tr [pSelectableRow]="rowData" pReorderableRowHandle (dblclick)="openView(rowData)">\r\n                    <td *ngFor="let col of columns" class="ui-resizable-column" pReorderableRowHandle>    \r\n                        {{\r\n                                          col.field == \'receivedDate\'\r\n                                            ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                            : rowData[col.field] && col.field == \'expirationDate\'\r\n                                            ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                            : rowData[col.field] && col.field == \'tagDate\'\r\n                                            ? (rowData[col.field] | date: \'MM/dd/yyyy\')\r\n                                            : rowData[col.field] && col.field == \'createdDate\'\r\n                                            ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                            : rowData[col.field] && col.field == \'updatedDate\'\r\n                                            ? (rowData[col.field] | date: \'MM/dd/yyyy h:mm a\')\r\n                                            : rowData[col.field]\r\n                        }}\r\n                    </td>\r\n                    <td style="width:150px" *ngIf="selectedGridColumns.length > 0">\r\n                        <span data-toggle="modal"><a class="btn nobg btn-view-cstm" (click)="openView(rowData)"\r\n                                matTooltip="View" matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span>\r\n                        <span><a class="btn nobg btn-edit-cstm" (click)="openEdits(rowData)" matTooltip="Edit"\r\n                                matTooltipPosition="above"><i class="fa fa-pencil"></i></a> </span>\r\n                        <span><a class="btn nobg btn-stock-cstm" (click)="openAdjustment(rowData)"\r\n                                matTooltip="Stock Adjustment" matTooltipPosition="above"><i class="fa fa-cubes"></i></a> </span>\r\n                        <span data-toggle="modal" data-target="#stockAdjAudit"><a class="btn nobg btn-adjhist-cstm" (click)="openStocklineAdj(rowData)" matTooltip="Stock Adjustment History" matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n                        <span><a class="btn nobg btn-pluspo-cstm" (click)="routeToPORO(rowData, \'PO\')" matTooltip="Create PO"\r\n                                matTooltipPosition="above"><i class="fa fa-plus"></i></a> </span>\r\n                        <span><a class="btn nobg btn-plusro-cstm" (click)="routeToPORO(rowData, \'RO\')" matTooltip="Create RO"\r\n                                matTooltipPosition="above"><i class="fa fa-plus" style="color: #259e08;"></i></a>\r\n                        </span>\r\n                        <span data-toggle="modal" data-target="#stockAudit"><a class="btn nobg btn-hist-cstm" (click)="openStocklineAudit(rowData)" matTooltip="History" matTooltipPosition="above"><i class="fa fa-history"></i></a></span>\r\n                    </td>\r\n                </tr>\r\n            </ng-template>\r\n            <ng-template pTemplate="emptymessage" let-columns *ngIf="data.length == 0">\r\n                <tr>\r\n                  <td colspan="25" style="color: red; font-weight: bold; text-align: center">\r\n                    No records found\r\n                  </td>\r\n                </tr>\r\n              </ng-template>\r\n\r\n            <ng-template pTemplate="summary" id="footer">\r\n                <label id="footer" class="footer">Total:</label>\r\n                <input style="width: 5%;" [(ngModel)]="totalRecords" [disabled]="true" pInputText type="text" />\r\n                &nbsp;&nbsp;\r\n                <label id="footer" class="footer1">Pages Count:</label>\r\n                <input style="width: 5%;" [(ngModel)]="totalPages" [disabled]="true" pInputText type="text" />\r\n            </ng-template>\r\n        </p-table>\r\n  </div>\r\n</div>\r\n<div class="modal fade" id="downloadConfirmation" role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t<div class="modal-dialog modal-sm">\r\n\t\t<div class="modal-content">\r\n\t\t\t<div class="modal-header">\r\n\t\t\t\t<button type="button" class="close" (click)="closeDeleteModal()">&times;</button>\r\n\t\t\t\t<h4 class="modal-title">Are You Sure Want to Download?</h4> \r\n\t\t\t</div>\r\n\t\t\t<div class="modal-body" *ngIf="targetData">\r\n\t\t\t\t<strong>\r\n\t\t\t\t\t<span *ngIf="selectedOnly">\r\n\t\t\t\t\t\tYou are attempting to export {{targetData.totalRecords}} of records. \r\n\t\t\t\t\t</span> \r\n\t\t\t\t</strong>\r\n\t\t\t</div>\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button type="button" class="btn btn-primary" (click)="(selectedOnly)?targetData.exportCSV({ selectionOnly: true }):exportCSV(targetData); closeDeleteModal();">Confirm</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="closeDeleteModal()">Cancel</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<div id="stockAudit" class="modal fade" role="dialog" data-backdrop="static"\r\n  data-keyboard="false">\r\n  <div class="modal-dialog modal-xl">\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title">History of Stockline</h4>\r\n      </div>\r\n      <div class="modal-body">\r\n        <div class="table-responsive stockline-audit">\r\n          <table class="table table-bordered" *ngIf="auditHistory.length > 0; else noDatavailable">\r\n            <thead>\r\n                <tr>\r\n                    <th colspan="16">General</th>\r\n                    <th colspan="6">Expiration</th>\r\n                    <th colspan="3">Application</th>\r\n                    <th colspan="4">Application</th>\r\n                    <th colspan="12">Acquisition</th>\r\n                    <th colspan="6">Traceability</th>\r\n                    <th colspan="2">Export/International</th>\r\n                    <th colspan="9">Inventory</th>\r\n                    <th colspan="5">Location</th>\r\n                    <th colspan="3">Lot & Consignment</th>\r\n                    <th colspan="6">Warnings</th>\r\n                    <th colspan="4">Management Structure</th>\r\n                    <th colspan="9">Certification, Tag and Inspection</th>\r\n                    <th colspan="1">Other</th>\r\n                    <th colspan="1">Memo</th>\r\n                    <th colspan="13">Time Life</th>\r\n                    <th colspan="5"></th>\r\n                </tr>\r\n              <tr>\r\n                <th>Is Customer Stock</th>\r\n                <th>PN</th>\r\n                <th>PN Description</th>\r\n                <th>Revised PN</th>\r\n                <th>OEM</th>\r\n                <th>PMA</th>\r\n                <th>DER</th>\r\n                <th>Item Group</th>\r\n                <th>Cond</th>\r\n                <th>Is Serialized</th>\r\n                <th>Serial Num</th>\r\n                <th>Stockline Num</th>\r\n                <th>NSN</th>\r\n                <th>ESN</th>\r\n                <th>Control Num</th>\r\n                <th>Control ID Num</th>\r\n                <th>Days Since Received</th>\r\n                <th>Days Since Mfg</th>\r\n                <th>Days Since Tagged</th>\r\n                <th>Days Opened</th>\r\n                <th>Shelf Life</th>\r\n                <th>Shelf Life Exp Date</th>\r\n                <th>NHA</th>\r\n                <th>TLA</th>\r\n                <th>Aircraft Tail Num</th>\r\n                <th>Manufacturer</th>\r\n                <th>Mfg. Lot Num</th>\r\n                <th>Mfg. Batch Num</th>\r\n                <th>Mfg. Date</th>\r\n                <th>Acquisition Type</th>\r\n                <th>Order Date</th>\r\n                <th>Entry Date</th>\r\n                <th>Expiration Date</th>\r\n                <th>Vendor</th>\r\n                <th>PO Num</th>\r\n                <th>RO Num</th>\r\n                <th>Requestor</th>\r\n                <th>Received Date</th>\r\n                <th>Receiver Num</th>\r\n                <th>Reconciliation Num</th>\r\n                <th>WO Num</th>\r\n                <th>Obtain From Type</th>\r\n                <th>Obtain From</th>\r\n                <th>Owner Type</th>\r\n                <th>Owner</th>\r\n                <th>Traceable To Type</th>\r\n                <th>Traceable To</th>\r\n                <th>ECCN</th>\r\n                <th>ITAR</th>\r\n                <th>Qty On Hand</th>\r\n                <th>Qty Reserved</th>\r\n                <th>Qty Issued</th>\r\n                <th>Qty Avail</th>\r\n                <th>PO Unit Cost</th>\r\n                <th>RO Unit Cost</th>\r\n                <th>Unit Sale Price</th>\r\n                <th>Core Cost/Unit</th>\r\n                <th>GL Account</th>\r\n                <th>Site</th>\r\n                <th>Warehouse</th>\r\n                <th>Location</th>\r\n                <th>Shelf</th>\r\n                <th>Bin</th>\r\n                <th>Lot Num</th>\r\n                <th>Lot Description</th>\r\n                <th>Lot Cost</th>\r\n                <th>Black List</th>\r\n                <th>Black List Reason</th>\r\n                <th>Accident</th>\r\n                <th>Accident Reason</th>\r\n                <th>Incident</th>\r\n                <th>Incident Reason</th>\r\n                <th colspan="4"></th>\r\n                <th>Part Cert Num</th>\r\n                <th>Certify By</th>\r\n                <th>Certified Date</th>\r\n                <th>Certify Due Date</th>\r\n                <th>Tag Type</th>\r\n                <th>Tag Num</th>\r\n                <th>Tag Date</th>\r\n                <th>Inspection By</th>\r\n                <th>Inspection Date</th>\r\n                <th>Integration With</th>\r\n                <th>Memo</th>\r\n                <th>Cycles Remaining</th>\r\n                <th>Cycles Since New</th>\r\n                <th>Cycles Since Ovh</th>\r\n                <th>Cycles Since Insp</th>\r\n                <th>Cycles Since Repair</th>\r\n                <th>Time Remaining</th>\r\n                <th>Time Since New</th>\r\n                <th>Time Since Ovh</th>\r\n                <th>Time Since Insp</th>\r\n                <th>Time Since Repair</th>\r\n                <th>Last Since New</th>\r\n                <th>Last Since Ovh</th>\r\n                <th>Last Since Insp</th>\r\n                <th>Is Active</th>\r\n                <th>Created Date</th>\r\n                <th>Created By</th>\r\n                <th>Updated Date</th>\r\n                <th>Updated By</th>                \r\n              </tr>\r\n            </thead>\r\n            <tbody *ngIf="auditHistory.length > 0">\r\n              <tr *ngFor="let audit of auditHistory; let i = index">\r\n                <td style="text-align: center;"><p> <input type="checkbox" name="isCustomerStock" [(ngModel)]="audit.isCustomerStock" disabled></p></td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'partNumber\', audit.partNumber) ? \'black\' : \'red\'}">{{ audit.partNumber }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'partDescription\', audit.partDescription) ? \'black\' : \'red\'}">{{ audit.partDescription }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'revisedPart\', audit.revisedPart) ? \'black\' : \'red\'}">{{ audit.revisedPart }}</td>\r\n                <td style="text-align: center;"><p> <input type="checkbox" name="oem" [(ngModel)]="audit.oem" disabled></p></td>\r\n                <td style="text-align: center;"><p> <input type="checkbox" name="isPMA" [(ngModel)]="audit.isPMA" disabled></p></td>\r\n                <td style="text-align: center;"><p> <input type="checkbox" name="isDER" [(ngModel)]="audit.isDER" disabled></p></td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'itemGroup\', audit.itemGroup) ? \'black\' : \'red\'}">{{ audit.itemGroup }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'condition\', audit.condition) ? \'black\' : \'red\'}">{{ audit.condition }}</td>\r\n                <td style="text-align: center;"><p> <input type="checkbox" name="isSerialized" [(ngModel)]="audit.isSerialized" disabled></p></td>\r\n                <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'serialNumber\', audit.serialNumber) ? \'black\' : \'red\'}">{{ audit.serialNumber }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'stockLineNumber\', audit.stockLineNumber) ? \'black\' : \'red\'}">{{ audit.stockLineNumber }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'nationalStockNumber\', audit.nationalStockNumber) ? \'black\' : \'red\'}">{{ audit.nationalStockNumber }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'engineSerialNumber\', audit.engineSerialNumber) ? \'black\' : \'red\'}">{{ audit.engineSerialNumber }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'controlNumber\', audit.controlNumber) ? \'black\' : \'red\'}">{{ audit.controlNumber }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'idNumber\', audit.idNumber) ? \'black\' : \'red\'}">{{ audit.idNumber }}</td>\r\n                <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'daysReceived\', audit.daysReceived) ? \'black\' : \'red\'}">{{ audit.daysReceived }}</td>\r\n                <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'manufacturingDays\', audit.manufacturingDays) ? \'black\' : \'red\'}">{{ audit.manufacturingDays }}</td>\r\n                <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'tagDays\', audit.tagDays) ? \'black\' : \'red\'}">{{ audit.tagDays }}</td>\r\n                <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'openDays\', audit.openDays) ? \'black\' : \'red\'}">{{ audit.openDays }}</td>\r\n                <td style="text-align: center;"><p> <input type="checkbox" name="shelfLife" [(ngModel)]="audit.shelfLife" disabled></p></td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'shelfLifeExpirationDate\', audit.shelfLifeExpirationDate) ? \'black\' : \'red\'}">{{ audit.shelfLifeExpirationDate | date: \'MM/dd/yyyy\' }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'nha\', audit.nha) ? \'black\' : \'red\'}">{{ audit.nha }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'tla\', audit.tla) ? \'black\' : \'red\'}">{{ audit.tla }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'aircraftTailNumber\', audit.aircraftTailNumber) ? \'black\' : \'red\'}">{{ audit.aircraftTailNumber }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'manufacturer\', audit.manufacturer) ? \'black\' : \'red\'}">{{ audit.manufacturer }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'manufacturerLotNumber\', audit.manufacturerLotNumber) ? \'black\' : \'red\'}">{{ audit.manufacturerLotNumber }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'manufacturingBatchNumber\', audit.manufacturingBatchNumber) ? \'black\' : \'red\'}">{{ audit.manufacturingBatchNumber }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'manufacturingDate\', audit.manufacturingDate) ? \'black\' : \'red\'}">{{ audit.manufacturingDate | date: \'MM/dd/yyyy\' }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'acquistionTypeName\', audit.acquistionTypeName) ? \'black\' : \'red\'}">{{ audit.acquistionTypeName }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'orderDate\', audit.orderDate) ? \'black\' : \'red\'}">{{ audit.orderDate | date: \'MM/dd/yyyy\' }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'entryDate\', audit.entryDate) ? \'black\' : \'red\'}">{{ audit.entryDate | date: \'MM/dd/yyyy\' }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'expirationDate\', audit.expirationDate) ? \'black\' : \'red\'}">{{ audit.expirationDate | date: \'MM/dd/yyyy\' }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'vendorName\', audit.vendorName) ? \'black\' : \'red\'}">{{ audit.vendorName }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'purchaseOrderNumber\', audit.purchaseOrderNumber) ? \'black\' : \'red\'}">{{ audit.purchaseOrderNumber }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'repairOrderNumber\', audit.repairOrderNumber) ? \'black\' : \'red\'}">{{ audit.repairOrderNumber }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'requestedByName\', audit.requestedByName) ? \'black\' : \'red\'}">{{ audit.requestedByName }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'receivedDate\', audit.receivedDate) ? \'black\' : \'red\'}">{{ audit.receivedDate | date: \'MM/dd/yyyy\' }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'receiver\', audit.receiver) ? \'black\' : \'red\'}">{{ audit.receiver }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'reconciliationNumber\', audit.reconciliationNumber) ? \'black\' : \'red\'}">{{ audit.reconciliationNumber }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'workOrderNumber\', audit.workOrderNumber) ? \'black\' : \'red\'}">{{ audit.workOrderNumber }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'obtainFromTypeName\', audit.obtainFromTypeName) ? \'black\' : \'red\'}">{{ audit.obtainFromTypeName }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'obtainFromName\', audit.obtainFromName) ? \'black\' : \'red\'}">{{ audit.obtainFromName }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'ownerTypeName\', audit.ownerTypeName) ? \'black\' : \'red\'}">{{ audit.ownerTypeName }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'ownerName\', audit.ownerName) ? \'black\' : \'red\'}">{{ audit.ownerName }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'traceableToTypeName\', audit.traceableToTypeName) ? \'black\' : \'red\'}">{{ audit.traceableToTypeName }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'tracableToName\', audit.tracableToName) ? \'black\' : \'red\'}">{{ audit.tracableToName }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'exportECCN\', audit.exportECCN) ? \'black\' : \'red\'}">{{ audit.exportECCN }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'itarNumber\', audit.itarNumber) ? \'black\' : \'red\'}">{{ audit.itarNumber }}</td>\r\n                <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'quantityOnHand\', audit.quantityOnHand) ? \'black\' : \'red\'}">{{ audit.quantityOnHand }}</td>\r\n                <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'quantityReserved\', audit.quantityReserved) ? \'black\' : \'red\'}">{{ audit.quantityReserved }}</td>\r\n                <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'quantityIssued\', audit.quantityIssued) ? \'black\' : \'red\'}">{{ audit.quantityIssued }}</td>\r\n                <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'quantityAvailable\', audit.quantityAvailable) ? \'black\' : \'red\'}">{{ audit.quantityAvailable }}</td>\r\n                <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'purchaseOrderUnitCost\', audit.purchaseOrderUnitCost) ? \'black\' : \'red\'}">{{ audit.purchaseOrderUnitCost }}</td>\r\n                <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'repairOrderUnitCost\', audit.repairOrderUnitCost) ? \'black\' : \'red\'}">{{ audit.repairOrderUnitCost }}</td>\r\n                <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'unitSalesPrice\', audit.unitSalesPrice) ? \'black\' : \'red\'}">{{ audit.unitSalesPrice }}</td>\r\n                <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'coreUnitCost\', audit.coreUnitCost) ? \'black\' : \'red\'}">{{ audit.coreUnitCost }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'glAccountName\', audit.glAccountName) ? \'black\' : \'red\'}">{{ audit.glAccountName }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'siteName\', audit.siteName) ? \'black\' : \'red\'}">{{ audit.siteName }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'warehouse\', audit.warehouse) ? \'black\' : \'red\'}">{{ audit.warehouse }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'location\', audit.location) ? \'black\' : \'red\'}">{{ audit.location }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'shelfName\', audit.shelfName) ? \'black\' : \'red\'}">{{ audit.shelfName }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'binName\', audit.binName) ? \'black\' : \'red\'}">{{ audit.binName }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'lotNum\', audit.lotNum) ? \'black\' : \'red\'}">{{ audit.lotNum }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'lotDescription\', audit.lotDescription) ? \'black\' : \'red\'}">{{ audit.lotDescription }}</td>\r\n                <td class="text-right" [ngStyle]="{color: getColorCodeForHistory(i, \'lotCost\', audit.lotCost) ? \'black\' : \'red\'}">{{ audit.lotCost }}</td>\r\n                <td style="text-align: center;"><p> <input type="checkbox" name="blackListed" [(ngModel)]="audit.blackListed" disabled></p></td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'blackListedReason\', audit.blackListedReason) ? \'black\' : \'red\'}">\r\n                    <p class="p_editor" [innerHTML]="audit.blackListedReason"></p>    \r\n                </td>\r\n                <td style="text-align: center;"><p> <input type="checkbox" name="accident" [(ngModel)]="audit.accident" disabled></p></td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'accidentReason\', audit.accidentReason) ? \'black\' : \'red\'}">\r\n                    <p class="p_editor" [innerHTML]="audit.accidentReason"></p>    \r\n                </td>\r\n                <td style="text-align: center;"><p> <input type="checkbox" name="incident" [(ngModel)]="audit.incident" disabled></p></td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'incidentReason\', audit.incidentReason) ? \'black\' : \'red\'}">\r\n                    <p class="p_editor" [innerHTML]="audit.incidentReason"></p>    \r\n                </td>\r\n                <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'companyName\', audit.companyName) ? \'black\' : \'red\'}">{{ audit.companyName }}</td>\r\n                <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'buName\', audit.buName) ? \'black\' : \'red\'}">{{ audit.buName }}</td>\r\n                <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'divName\', audit.divName) ? \'black\' : \'red\'}">{{ audit.divName }}</td>\r\n                <td class="min-w-100" [ngStyle]="{color: getColorCodeForHistory(i, \'deptName\', audit.deptName) ? \'black\' : \'red\'}">{{ audit.deptName }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'partCertificationNumber\', audit.partCertificationNumber) ? \'black\' : \'red\'}">{{ audit.partCertificationNumber }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'certifiedByName\', audit.certifiedByName) ? \'black\' : \'red\'}">{{ audit.certifiedByName }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'certifiedDate\', audit.certifiedDate) ? \'black\' : \'red\'}">{{ audit.certifiedDate | date: \'MM/dd/yyyy\' }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'certifiedDueDate\', audit.certifiedDueDate) ? \'black\' : \'red\'}">{{ audit.certifiedDueDate | date: \'MM/dd/yyyy\' }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'tagTypeName\', audit.tagTypeName) ? \'black\' : \'red\'}">{{ audit.tagTypeName }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'tagNum\', audit.tagNum) ? \'black\' : \'red\'}">{{ audit.tagNum }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'tagDate\', audit.tagDate) ? \'black\' : \'red\'}">{{ audit.tagDate | date: \'MM/dd/yyyy\' }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionByName\', audit.inspectionByName) ? \'black\' : \'red\'}">{{ audit.inspectionByName }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'inspectionDate\', audit.inspectionDate) ? \'black\' : \'red\'}">{{ audit.inspectionDate | date: \'MM/dd/yyyy\' }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'integrationPortal\', audit.integrationPortal) ? \'black\' : \'red\'}">{{ audit.integrationPortal }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'memo\', audit.memo) ? \'black\' : \'red\'}">\r\n                    <p class="p_editor" [innerHTML]="audit.memo"></p>\r\n                </td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'cyclesRemaining\', audit.cyclesRemaining) ? \'black\' : \'red\'}">{{ audit.cyclesRemaining }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'cyclesSinceNew\', audit.cyclesSinceNew) ? \'black\' : \'red\'}">{{ audit.cyclesSinceNew }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'cyclesSinceOVH\', audit.cyclesSinceOVH) ? \'black\' : \'red\'}">{{ audit.cyclesSinceOVH }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'cyclesSinceInspection\', audit.cyclesSinceInspection) ? \'black\' : \'red\'}">{{ audit.cyclesSinceInspection }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'cyclesSinceRepair\', audit.cyclesSinceRepair) ? \'black\' : \'red\'}">{{ audit.cyclesSinceRepair }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'timeRemaining\', audit.timeRemaining) ? \'black\' : \'red\'}">{{ audit.timeRemaining }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'timeSinceNew\', audit.timeSinceNew) ? \'black\' : \'red\'}">{{ audit.timeSinceNew }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'timeSinceOVH\', audit.timeSinceOVH) ? \'black\' : \'red\'}">{{ audit.timeSinceOVH }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'timeSinceInspection\', audit.timeSinceInspection) ? \'black\' : \'red\'}">{{ audit.timeSinceInspection }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'timeSinceRepair\', audit.timeSinceRepair) ? \'black\' : \'red\'}">{{ audit.timeSinceRepair }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'lastSinceNew\', audit.lastSinceNew) ? \'black\' : \'red\'}">{{ audit.lastSinceNew }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'lastSinceOVH\', audit.lastSinceOVH) ? \'black\' : \'red\'}">{{ audit.lastSinceOVH }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForHistory(i, \'lastSinceInspection\', audit.lastSinceInspection) ? \'black\' : \'red\'}">{{ audit.lastSinceInspection }}</td>\r\n                <td style="background-color: #fff !important; text-align: center;"><p > <input type="checkbox" name="isActive" [(ngModel)]="audit.isActive" disabled></p></td>\r\n                \r\n                <td>{{ audit.createdDate | date: \'MM/dd/yyyy h:mm a\' }}</td>\r\n                <td>{{ audit.createdBy }}</td>                \r\n                <td>{{ audit.updatedDate | date: \'MM/dd/yyyy h:mm a\' }}</td>\r\n                <td>{{ audit.updatedBy }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <ng-template #noDatavailable>\r\n            <div class="text-center">\r\n              <h4 style="color: #ff5663;">No History Found</h4>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal">\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div id="stockAdjAudit" class="modal fade" role="dialog" data-backdrop="static"\r\n  data-keyboard="false">\r\n  <div class="modal-dialog modal-xl">\r\n    \x3c!-- Modal content--\x3e\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close"  (click)="dismissStockAdjAudit()">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title">History of Stockline Adjustment History</h4>\r\n      </div>\r\n      <div class="modal-body">\r\n        <div class="table-responsive">\r\n          <table class="table table-bordered" *ngIf="adjAuditHistoryList.length > 0; else noDatavailable">\r\n            <thead>\r\n              <tr>\r\n                <th>Adjustment Data Type</th>\r\n                <th>Changed From</th>\r\n                <th>Changed To</th>\r\n                <th>Adjustment Reason</th>\r\n                <th>Adjustment Memo</th>\r\n                <th>Currency</th>   \r\n                <th>Created Date</th>             \r\n                <th>Created By</th>\r\n                <th>Updated Date</th>\r\n                <th>Updated By</th>               \r\n                \x3c!-- <th>Action</th> --\x3e\r\n              </tr>\r\n            </thead>\r\n            <tbody *ngIf="adjAuditHistoryList.length > 0">\r\n              <tr *ngFor="let audit of adjAuditHistoryList; let i = index">\r\n                <td [ngStyle]="{color: getColorCodeForStockLineAdjHistory(i, \'adjustmentDataType\', audit.adjustmentDataType) ? \'black\' : \'red\'}">{{ audit.adjustmentDataType }}</td>\r\n                <td [ngClass]="audit.auditRightAlign ? \'text-right\' : \'\'" [ngStyle]="{color: getColorCodeForStockLineAdjHistory(i, \'changedFrom\', audit.changedFrom) ? \'black\' : \'red\'}">{{ audit.changedFrom }}</td>\r\n                <td [ngClass]="audit.auditRightAlign ? \'text-right\' : \'\'" [ngStyle]="{color: getColorCodeForStockLineAdjHistory(i, \'changedTo\', audit.changedTo) ? \'black\' : \'red\'}">{{ audit.changedTo }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForStockLineAdjHistory(i, \'adjustmentReason\', audit.adjustmentReason) ? \'black\' : \'red\'}">{{ audit.adjustmentReason }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForStockLineAdjHistory(i, \'adjustmentMemo\', audit.adjustmentMemo) ? \'black\' : \'red\'}">{{ audit.adjustmentMemo }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForStockLineAdjHistory(i, \'currencyName\', audit.currencyName) ? \'black\' : \'red\'}">{{ audit.currencyName }}</td>\r\n                <td>{{ audit.createdDate | date: \'MM/dd/yyyy h:mm a\' }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForStockLineAdjHistory(i, \'createdBy\', audit.createdBy) ? \'black\' : \'red\'}">{{ audit.createdBy }}</td>\r\n                <td>{{ audit.updatedDate | date: \'MM/dd/yyyy h:mm a\' }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForStockLineAdjHistory(i, \'updatedBy\', audit.updatedBy) ? \'black\' : \'red\'}">{{ audit.updatedBy }}</td>\r\n                \r\n                \x3c!-- <td style="text-align: center;"><span data-toggle="modal" data-target="#stockAdjAuditData"><a class="btn nobg btn-view-cstm" (click)="openStocklineAdjData(audit)" matTooltip="View" matTooltipPosition="above"><i class="fa fa-eye"></i></a> </span></td> --\x3e\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <ng-template #noDatavailable>\r\n            <div class="text-center">\r\n              <h4 style="color: #ff5663;">No History Found</h4>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" (click)="dismissStockAdjAudit()">\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div id="stockAdjAuditData" class="modal fade" role="dialog" data-backdrop="static"\r\n  data-keyboard="false">\r\n  <div class="modal-dialog modal-xl">\r\n    <div class="modal-content">\r\n      <div class="modal-header">\r\n        <button type="button" class="close" data-dismiss="modal">\r\n          &times;\r\n        </button>\r\n        <h4 class="modal-title">History of Stockline Adjustment Data Type</h4>\r\n      </div>\r\n      <div class="modal-body">\r\n        <div class="table-responsive">\r\n          <table class="table table-bordered" *ngIf="adjAuditHistoryData.length > 0; else noDatavailable">\r\n            <thead>\r\n              <tr>\r\n                <th>Adjustment Data Type</th>\r\n                <th>Changed From</th>\r\n                <th>Changed To</th>\r\n                <th>Adjustment Reason</th>\r\n                <th>Adjustment Memo</th>\r\n                <th>Currency</th>\r\n                <th>Created Date</th>\r\n                <th>Created By</th>                \r\n              </tr>\r\n            </thead>\r\n            <tbody *ngIf="adjAuditHistoryData.length > 0">\r\n              <tr *ngFor="let audit of adjAuditHistoryData; let i = index">\r\n                <td [ngStyle]="{color: getColorCodeForAdjAudit(i, \'adjustmentDataType\', audit.adjustmentDataType) ? \'black\' : \'red\'}">{{ audit.adjustmentDataType }}</td>\r\n                <td [ngClass]="audit.auditRightAlign ? \'text-right\' : \'\'" [ngStyle]="{color: getColorCodeForAdjAudit(i, \'changedFrom\', audit.changedFrom) ? \'black\' : \'red\'}">{{ audit.changedFrom }}</td>\r\n                <td [ngClass]="audit.auditRightAlign ? \'text-right\' : \'\'" [ngStyle]="{color: getColorCodeForAdjAudit(i, \'changedTo\', audit.changedTo) ? \'black\' : \'red\'}">{{ audit.changedTo }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForAdjAudit(i, \'adjustmentReason\', audit.adjustmentReason) ? \'black\' : \'red\'}">{{ audit.adjustmentReason }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForAdjAudit(i, \'adjustmentMemo\', audit.adjustmentMemo) ? \'black\' : \'red\'}">{{ audit.adjustmentMemo }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForAdjAudit(i, \'currencyName\', audit.currencyName) ? \'black\' : \'red\'}">{{ audit.currencyName }}</td>\r\n                <td>{{ audit.createdDate | date: \'MM-dd-yyyy h:mm a\' }}</td>\r\n                <td [ngStyle]="{color: getColorCodeForAdjAudit(i, \'createdBy\', audit.createdBy) ? \'black\' : \'red\'}">{{ audit.createdBy }}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <ng-template #noDatavailable>\r\n            <div class="text-center">\r\n              <h4 style="color: #ff5663;">No History Found</h4>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n      <div class="modal-footer">\r\n        <button type="button" class="btn btn-danger" data-dismiss="modal">\r\n          Close\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n  <div class="loading">\r\n      <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n  </div>\r\n</div>'},U9RA:function(t,e,n){"use strict";n.r(e),e.default='<p-breadcrumb [model]="items" [home]="home"></p-breadcrumb>\r\n<router-outlet></router-outlet>'},dBoG:function(t,e,n){"use strict";n.r(e),e.default=""},e9yY:function(t,e,n){"use strict";n.r(e),e.default='<div class="bg-white">\r\n\t\t<div class="card new-card">\r\n            <div class="card-header bg-primary">\r\n              <div class="row">\r\n                <div class="col">\r\n                  <h4 class="new-card-heading">Stock Line Adjustment</h4>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    type="button"\r\n                    class="btn-sm new-btn-primary"\r\n                    [routerLink]="[\r\n                    \'/stocklinemodule/stocklinepages/app-stock-line-list\'\r\n                    ]"\r\n                  >\r\n                    Stock List\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\t\t<div class="card-body new-card-body">\r\n\t\t\t<form #stockLineAdjForm="ngForm"> \x3c!--*ngIf="disableLoading; else loader"--\x3e\r\n\t\t\t\t<div class="form-row">\r\n\t\t\t\t\t<div class="col-md-3">\r\n\t\t\t\t\t\t<span><b class="clr-red">PN:</b> {{sourceStockLineSetup.partNumber}}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="col-md-3">\r\n\t\t\t\t\t\t<span><b class="clr-red">PN Description:</b> {{sourceStockLineSetup.partDescription}}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="col-md-3">\r\n\t\t\t\t\t\t<span><b class="clr-red">SL#:</b> {{sourceStockLineSetup.stockLineNumber}}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="col-md-3">\r\n\t\t\t\t\t\t<span><b class="clr-red">Is Serialized:</b> {{sourceStockLineSetup.isSerialized ? sourceStockLineSetup.isSerialized : false}}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="table-responsive mtop10" id="smovement">\r\n\t\t\t\t\t<table class="table table-bordered">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t\t<th>Field Name</th>\r\n\t\t\t\t\t\t\t\t<th>Existing Value</th>\r\n\t\t\t\t\t\t\t\t<th>New Value</th>\r\n\t\t\t\t\t\t\t\t<th>Adjustment Reason</th>\r\n\t\t\t\t\t\t\t\t<th>Memo</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<ng-container *ngFor="let item of stocklineAdjustmentData; let i = index" >\r\n\t\t\t\t\t\t\t\t<ng-container *ngIf="item.adjustmentDataTypeId == 1">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td colspan="6" class="text-center bg-blue" style="color: #fff;"><strong>Organization</strong></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="isCompanyEnable" [(ngModel)]="companyAllow" (change)="isCompanyEnable(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t\x3c!-- <td>Management Structure</td> --\x3e\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.stocklineAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t{{existingMgmentStuc.level1 ? existingMgmentStuc.level1 : \'\'}}\t\t\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="showCompany" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" name="companyId" [(ngModel)]="managementStructure.companyId" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t(change)="selectedLegalEntity(managementStructure.companyId, item);" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">--Select--</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of legalEntityList" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td rowspan="4" style="vertical-align: top;">\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="companyAllow || businessAllow || divisionAllow || deptAllow" class="form-control" [(ngModel)]="item.adjustmentReason" name="MgmtStructureReason" required></textarea>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td rowspan="4" style="vertical-align: top;">\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="companyAllow || businessAllow || \r\n\t\t\t\t\t\t\t\t\t\t\tdivisionAllow || deptAllow" class="form-control"\r\n\t\t\t\t\t\t\t\t\t\t\t [(ngModel)]="item.adjustmentMemo"\r\n\t\t\t\t\t\t\t\t\t\t\t  name="ManagementStructureMemo"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="isBusinessEnable" [(ngModel)]="businessAllow" [disabled]="!existingMgmentStuc.level2 || companyAllow" (change)="isBusinessEnable(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t{{existingMgmentStuc.level2 ? existingMgmentStuc.level2 : \'\'}}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="showBusiness" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" [(ngModel)]="managementStructure.buId" name="buId" (change)="selectedBusinessUnit(managementStructure.buId, item)">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of businessUnitList" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="isDivisionEnable" [(ngModel)]="divisionAllow" [disabled]="!existingMgmentStuc.level3 || businessAllow" (change)="isDivisionEnable(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t{{existingMgmentStuc.level3 ? existingMgmentStuc.level3 : \'\'}}\t\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="showDivision" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" [(ngModel)]="managementStructure.divisionId" name="divisionId" (change)="selectedDivision(managementStructure.divisionId, item)">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of divisionList" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="isDeptEnable" [(ngModel)]="deptAllow" [disabled]="!existingMgmentStuc.level4 || divisionAllow" (change)="isDeptEnable(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t{{existingMgmentStuc.level4 ? existingMgmentStuc.level4 : \'\'}}\t\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="showDepartment" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" [(ngModel)]="managementStructure.departmentId" name="departmentId" (change)="selectedDepartment(managementStructure.departmentId, item)">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of departmentList" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t<ng-container *ngIf="item.adjustmentDataTypeId == 2">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td colspan="6">&nbsp;</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td colspan="6" class="text-center bg-blue" style="color: #fff;"><strong>Inventory</strong></td>\r\n\t\t\t\t\t\t\t\t</tr>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="isSiteEnable" [(ngModel)]="siteAllow" (change)="isSiteEnable(item)"></td>\r\n\t\t\t\t\t\t\t\t\t<td>{{item.stocklineAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{{sourceStockLineSetup.siteName ? sourceStockLineSetup.siteName : \'\'}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf="showSite" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t<select [(ngModel)]="item.afterValue" name="siteId" (change)="getWareHouseList(item.afterValue)" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let site of allSites" [ngValue]="site.value">{{site.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td rowspan="5" style="vertical-align: top;">\r\n\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="siteAllow || warehouseAllow || locationAllow || shelfAllow || binAllow" class="form-control" [(ngModel)]="item.adjustmentReason" name="siteAdjustmentReason" required></textarea>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td rowspan="5" style="vertical-align: top;">\r\n\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="siteAllow || warehouseAllow || locationAllow || shelfAllow || binAllow"\r\n\t\t\t\t\t\t\t\t\t\t class="form-control" [(ngModel)]="item.adjustmentMemo"\r\n\t\t\t\t\t\t\t\t\t\t  name="siteAdjustmentMemo"></textarea>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t\t\t\x3c!-- WareHouse Start --\x3e\r\n\t\t\t\t\t\t\t\t<ng-container *ngIf="item.adjustmentDataTypeId == 3">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="iswarehouseEnable" [(ngModel)]="warehouseAllow" [disabled]="!sourceStockLineSetup.warehouse || siteAllow" (change)="iswarehouseEnable(item)"></td>\r\n\t\t\t\t\t\t\t\t\t<td>{{item.stocklineAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{{sourceStockLineSetup.warehouse ? sourceStockLineSetup.warehouse : \'\'}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf="showWarehouse" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t<select [(ngModel)]="item.afterValue" name="warehouseId" (change)="getLocationList(item.afterValue)">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let site of allWareHouses" [ngValue]="site.value">{{site.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t\t\t\x3c!-- LOcation Start --\x3e\r\n\t\t\t\t\t\t\t\t<ng-container *ngIf="item.adjustmentDataTypeId == 4">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="isLocationEnable" [(ngModel)]="locationAllow" [disabled]="!sourceStockLineSetup.location || warehouseAllow" (change)="isLocationEnable(item)"></td>\r\n\t\t\t\t\t\t\t\t\t<td>{{item.stocklineAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{{sourceStockLineSetup.location ? sourceStockLineSetup.location : \'\'}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf="showLocation" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t<select [(ngModel)]="item.afterValue" name="locationId" (change)="getShelfList(item.afterValue)">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let site of allLocations" [ngValue]="site.value">{{site.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t\t\t\x3c!-- Shelf Start --\x3e\r\n\t\t\t\t\t\t\t\t<ng-container *ngIf="item.adjustmentDataTypeId == 5">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="isShelfEnable" [(ngModel)]="shelfAllow" [disabled]="!sourceStockLineSetup.shelfName || locationAllow" (change)="isShelfEnable(item)"></td>\r\n\t\t\t\t\t\t\t\t\t<td>{{item.stocklineAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{{sourceStockLineSetup.shelfName ? sourceStockLineSetup.shelfName : \'\'}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf="showShelf" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t<select [(ngModel)]="item.afterValue" name="shelfId" (change)="getBinList(item.afterValue)">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let site of allShelfs" [ngValue]="site.value">{{site.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t\t\t\x3c!-- Bin Start --\x3e\r\n\t\t\t\t\t\t\t\t<ng-container *ngIf="item.adjustmentDataTypeId == 6">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="isBinEnable" [(ngModel)]="binAllow" [disabled]="!sourceStockLineSetup.binName || shelfAllow" (change)="isBinEnable(item)"></td>\r\n\t\t\t\t\t\t\t\t\t<td>{{item.stocklineAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{{sourceStockLineSetup.binName ? sourceStockLineSetup.binName : \'\'}}</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div *ngIf="showBin" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t<select [(ngModel)]="item.afterValue" name="binId" (change)="onChangeBin(item.afterValue)">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let site of allBins" [ngValue]="site.value">{{site.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t\t\t\t<ng-container *ngIf="item.adjustmentDataTypeId == 7">\r\n\t\t\t\t\t\t\t\t\t\x3c!-- Category Start --\x3e\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td colspan="6">&nbsp;</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="isCategoryEnable" [(ngModel)]="categoryAllow" (change)="onChangeCategory(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.stocklineAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{sourceStockLineSetup.itemCategory ? sourceStockLineSetup.itemCategory : \'\'}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="categoryAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select [(ngModel)]="item.afterValue" name="itemCategory" (change)="onChangeCategorySelect(item.afterValue)" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let itemType of itemTypesList" [ngValue]="itemType.value">{{itemType.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="categoryAllow" class="form-control" [(ngModel)]="item.adjustmentReason" name="categoryAdjustmentReason" required></textarea>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="categoryAllow" class="form-control"\r\n\t\t\t\t\t\t\t\t\t\t\t [(ngModel)]="item.adjustmentMemo"\r\n\t\t\t\t\t\t\t\t\t\t\t  name="categoryAdjustmentMemo"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</ng-container>\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<ng-container *ngIf="item.adjustmentDataTypeId == 8">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="partNumberAllow" [(ngModel)]="partNumberAllow" (change)="onChangePartNum(item)" [disabled]="categoryAllow"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.stocklineAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{sourceStockLineSetup.partNumber ? sourceStockLineSetup.partNumber : \'\'}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="partNumberAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p-autoComplete field="label" class="pautocomp-cstm" [(ngModel)]="item.afterValue" name="partNumber" [suggestions]="partNumbersCollection" (completeMethod)="filterPartNumbers($event)" [size]="30" [minLength]="1" [dropdown]="true" errorMessage="Records not found" [forceSelection]="true" required></p-autoComplete>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="partNumberAllow" class="form-control" [(ngModel)]="item.adjustmentReason" name="partNumAdjustmentReason" required></textarea>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="partNumberAllow"\r\n\t\t\t\t\t\t\t\t\t\t\t class="form-control" [(ngModel)]="item.adjustmentMemo" \r\n\t\t\t\t\t\t\t\t\t\t\t name="partNumAdjustmentMemo"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</ng-container>\t\t\t\t\t\t\t\r\n\t\r\n\t\t\t\t\t\t\t\t<ng-container *ngIf="item.adjustmentDataTypeId == 9">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="serialNumAllow" [(ngModel)]="serialNumAllow" (change)="onChangeSerialNum(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.stocklineAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{sourceStockLineSetup.serialNumber ? sourceStockLineSetup.serialNumber : \'\'}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="serialNumAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type="text" class="form-control" name="serialnumber" [(ngModel)]="item.afterValue" required />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="serialNumAllow" class="form-control" [(ngModel)]="item.adjustmentReason" name="serialNumAdjustmentReason" required></textarea>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="serialNumAllow" class="form-control" \r\n\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]="item.adjustmentMemo" \r\n\t\t\t\t\t\t\t\t\t\t\tname="serialNumAdjustmentMemo"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</ng-container>\t\r\n\t\t\t\t\t\t\t</ng-container>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\r\n\t\t\t\t\t<table class="table table-bordered">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t\t<th>Field Name</th>\r\n\t\t\t\t\t\t\t\t<th>Existing Value</th>\r\n\t\t\t\t\t\t\t\t<th>Adjustment</th>\r\n\t\t\t\t\t\t\t\t<th>New Value</th>\r\n\t\t\t\t\t\t\t\t<th>CURR</th>\r\n\t\t\t\t\t\t\t\t<th>Adjustment Reason</th>\r\n\t\t\t\t\t\t\t\t<th>Memo</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<ng-container *ngFor="let item of stocklineAdjustmentData">\r\n\t\t\t\t\t\t\t\t<ng-container *ngIf="item.adjustmentDataTypeId == 10">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="quantityOnHandAllow" [(ngModel)]="quantityOnHandAllow" (change)="onChangePrices(item); onChangeQtyOnHand(item)"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.stocklineAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td class="text-right">{{sourceStockLineSetup.quantityOnHand}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="quantityOnHandAllow" class="col-md-8 pull-right">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type="text" pKeyFilter="num" class="form-control text-right" name="onHandAdjustmentValue" [(ngModel)]="item.adjustmentValue" (change)="onChangeQtyOnHandAdj(item)" required />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td class="text-right">{{item.afterValue}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="quantityOnHandAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" name="onHandNumAdjustmentReason" [(ngModel)]="item.adjustmentReasonId" (change)="onChangeQtyOnHandAdjReason(item.adjustmentReasonId)" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of allAdjReasonInfo" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="quantityOnHandAllow"\r\n\t\t\t\t\t\t\t\t\t\t\t class="form-control" [(ngModel)]="item.adjustmentMemo" \r\n\t\t\t\t\t\t\t\t\t\t\t name="onHandAdjustmentMemo"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t\t\t\t<ng-container *ngIf="item.adjustmentDataTypeId == 11">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="unitCostAllow" [(ngModel)]="unitCostAllow" (change)="onChangePrices(item); onChangeUnitCost(item);"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.stocklineAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td class="text-right">{{sourceStockLineSetup.coreUnitCost}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="unitCostAllow" class="col-md-8 pull-right">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type="text" pKeyFilter="num" class="form-control text-right" name="unitCostAdjustmentValue" [(ngModel)]="item.adjustmentValue" (change)="onChangeUnitCostAdj(item)" required />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td class="text-right">{{item.afterValue}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="unitCostAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select [(ngModel)]="item.currencyId" name="unitCostCurrencyId" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="">Select Currency</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option class="form-control" *ngFor="let currencyName of allCurrencyInfo"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[ngValue]="currencyName.value">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{currencyName.label}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="unitCostAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" name="unitCostNumAdjustmentReason" [(ngModel)]="item.adjustmentReasonId" (change)="onChangeUnitCostAdjReason(item.adjustmentReasonId)" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of allAdjReasonInfo" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="unitCostAllow" \r\n\t\t\t\t\t\t\t\t\t\t\tclass="form-control" [(ngModel)]="item.adjustmentMemo"\r\n\t\t\t\t\t\t\t\t\t\t\t name="unitCostAdjustmentMemo"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t\t\t\t<ng-container *ngIf="item.adjustmentDataTypeId == 12">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="unitSalesPriceAllow" [(ngModel)]="unitSalesPriceAllow" (change)="onChangePrices(item); onChangeSalesPrice(item);"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.stocklineAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td class="text-right">{{sourceStockLineSetup.unitSalesPrice}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="unitSalesPriceAllow" class="col-md-8 pull-right">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type="text" pKeyFilter="pint" class="form-control text-right" name="unitSalesPrice" [(ngModel)]="item.afterValue" (change)="onChangeUnitSalesPriceAdj(item)" required />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="unitSalesPriceAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select [(ngModel)]="item.currencyId" name="unitSalesPriceCurrencyId" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="">Select Currency</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option class="form-control" *ngFor="let currencyName of allCurrencyInfo"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[ngValue]="currencyName.value">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{currencyName.label}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="unitSalesPriceAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" name="unitSalesPriceAdjustmentReason" [(ngModel)]="item.adjustmentReasonId" (change)="onChangeSalesPriceAdjReason(item.adjustmentReasonId)" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of allAdjReasonInfo" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="unitSalesPriceAllow"\r\n\t\t\t\t\t\t\t\t\t\t\t class="form-control" [(ngModel)]="item.adjustmentMemo"\r\n\t\t\t\t\t\t\t\t\t\t\t name="unitSalesPriceAdjustmentMemo"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t\t\t\t<ng-container *ngIf="item.adjustmentDataTypeId == 13">\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td><input type="checkbox" name="lotCostAllow" [(ngModel)]="lotCostAllow" (change)="onChangePrices(item); onChangelotCost(item);"></td>\r\n\t\t\t\t\t\t\t\t\t\t<td>{{item.stocklineAdjustmentDataType}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td class="text-right">{{sourceStockLineSetup.lotCost ? sourceStockLineSetup.lotCost : \'\'}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="lotCostAllow" class="col-md-8 pull-right">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type="text" pKeyFilter="num" class="form-control text-right" name="lotCostAdjustmentValue" [(ngModel)]="item.adjustmentValue" (change)="onChangeLotCostAdj(item)" required />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td class="text-right">{{item.afterValue}}</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="lotCostAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select [(ngModel)]="item.currencyId" name="lotCostCurrencyId" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="">Select Currency</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option class="form-control" *ngFor="let currencyName of allCurrencyInfo"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[ngValue]="currencyName.value">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{currencyName.label}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<div *ngIf="lotCostAllow" class="col-md-8">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<select class="form-control" name="lotCostAdjustmentReason" [(ngModel)]="item.adjustmentReasonId" (change)="onChangelotCostAdjReason(item.adjustmentReasonId)" required>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option value="0">-- Select --</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option *ngFor="let name of allAdjReasonInfo" [ngValue]="name.value">{{name.label}}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="lotCostAllow"\r\n\t\t\t\t\t\t\t\t\t\t\t class="form-control" [(ngModel)]="item.adjustmentMemo" \r\n\t\t\t\t\t\t\t\t\t\t\tname="lotCostAdjustmentMemo"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</ng-container>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ng-container>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t<br>\r\n\t\t\t\t<ng-container *ngFor="let item of stocklineAdjustmentData">\r\n\t\t\t\t\t<ng-container *ngIf="item.adjustmentDataTypeId == 14">\r\n\t\t\t\t\t\t\t<table class="table table-bordered" *ngIf="sourceStockLineSetup.isTimeLife">\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th colspan="15" class="text-center" style="position: relative;">\r\n\t\t\t\t\t\t\t\t\t\t\t<input type="checkbox" style="top: 6px !important; position: absolute;" name="isTimeLifeEnable" [(ngModel)]="timeLifeAllow" (change)="onCheckTimeLife(item)">\r\n\t\t\t\t\t\t\t\t\t\t\t<strong style="margin-left: 20px;"> {{item.stocklineAdjustmentDataType}} (Hours Per Minute)</strong></th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t\t\t\t<th class="text-center">Cycles</th>\r\n\t\t\t\t\t\t\t\t\t\t<th class="text-center">Time</th>\r\n\t\t\t\t\t\t\t\t\t\t<th class="text-center">Last</th>\r\n\t\t\t\t\t\t\t\t\t\t<th class="text-center">Adjustment Reason</th>\r\n\t\t\t\t\t\t\t\t\t\t<th class="text-center">Memo</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td>Remaining</td>\r\n\t\t\t\t\t\t\t\t\t\t<td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #cyclesRemaining="ngModel" mask="000:00" name="cyclesRemaining" [(ngModel)]="sourceTimeLife.cyclesRemaining" [disabled]="!timeLifeAllow"/>\r\n                                            <div *ngIf="cyclesRemaining.errors">\r\n                                                <div *ngIf="cyclesRemaining.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="cyclesRemaining.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format.</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>\r\n\t\t\t\t\t\t\t\t\t\t<td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 150px;" placeholder="hhh:mm" [pattern]="timePattern" #timeRemaining="ngModel" mask="000:00" name="timeRemaining" [(ngModel)]="sourceTimeLife.timeRemaining" [disabled]="!timeLifeAllow"/>\r\n                                            <div *ngIf="timeRemaining.errors">\r\n                                                <div *ngIf="timeRemaining.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="timeRemaining.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format.</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>        \r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t\t<td rowspan="5" style="vertical-align: top;">\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="timeLifeAllow" class="form-control" [(ngModel)]="item.adjustmentReason" name="timeLifeReason" required></textarea>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t<td rowspan="5" style="vertical-align: top;">\r\n\t\t\t\t\t\t\t\t\t\t\t<textarea *ngIf="timeLifeAllow" \r\n\t\t\t\t\t\t\t\t\t\t\t\tclass="form-control"\r\n\t\t\t\t\t\t\t\t\t\t\t [(ngModel)]="item.adjustmentMemo"\r\n\t\t\t\t\t\t\t\t\t\t\t  name="timeLifeMemo"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td>Since New</td>\r\n\t\t\t\t\t\t\t\t\t\t<td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #cyclesSinceNew="ngModel" mask="000:00" name="cyclesSinceNew" [(ngModel)]="sourceTimeLife.cyclesSinceNew" [disabled]="!timeLifeAllow"/>\r\n                                            <div *ngIf="cyclesSinceNew.errors">\r\n                                                <div *ngIf="cyclesSinceNew.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="cyclesSinceNew.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format.</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>                  \r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #timeSinceNew="ngModel" mask="000:00" name="timeSinceNew" [(ngModel)]="sourceTimeLife.timeSinceNew" [disabled]="!timeLifeAllow"/>\r\n                                            <div *ngIf="timeSinceNew.errors">\r\n                                                <div *ngIf="timeSinceNew.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="timeSinceNew.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format.</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>                  \r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #lastSinceNew="ngModel" mask="000:00" name="lastSinceNew" [(ngModel)]="sourceTimeLife.lastSinceNew" [disabled]="!timeLifeAllow"/>\r\n                                            <div *ngIf="lastSinceNew.errors">\r\n                                                <div *ngIf="lastSinceNew.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="lastSinceNew.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format.</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>  \r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td>Since Ovh</td>\r\n\t\t\t\t\t\t\t\t\t\t<td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #cyclesSinceOVH="ngModel" mask="000:00" name="cyclesSinceOVH" [(ngModel)]="sourceTimeLife.cyclesSinceOVH" [disabled]="!timeLifeAllow"/>\r\n                                            <div *ngIf="cyclesSinceOVH.errors">\r\n                                                <div *ngIf="cyclesSinceOVH.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="cyclesSinceOVH.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format.</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>            \r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #timeSinceOVH="ngModel" mask="000:00" name="timeSinceOVH" [(ngModel)]="sourceTimeLife.timeSinceOVH" [disabled]="!timeLifeAllow"/>\r\n                                            <div *ngIf="timeSinceOVH.errors">\r\n                                                <div *ngIf="timeSinceOVH.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="timeSinceOVH.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format.</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>            \r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #lastSinceOVH="ngModel" mask="000:00" name="lastSinceOVH" [(ngModel)]="sourceTimeLife.lastSinceOVH" [disabled]="!timeLifeAllow"/>\r\n                                            <div *ngIf="lastSinceOVH.errors">\r\n                                                <div *ngIf="lastSinceOVH.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="lastSinceOVH.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format.</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>   \r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td>Since Insp</td>\r\n\t\t\t\t\t\t\t\t\t\t<td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #cyclesSinceInspection="ngModel" mask="000:00" name="cyclesSinceInspection" [(ngModel)]="sourceTimeLife.cyclesSinceInspection" [disabled]="!timeLifeAllow"/>\r\n                                            <div *ngIf="cyclesSinceInspection.errors">\r\n                                                <div *ngIf="cyclesSinceInspection.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="cyclesSinceInspection.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format.</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>            \r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #timeSinceInspection="ngModel" mask="000:00" name="timeSinceInspection" [(ngModel)]="sourceTimeLife.timeSinceInspection" [disabled]="!timeLifeAllow"/>\r\n                                            <div *ngIf="timeSinceInspection.errors">\r\n                                                <div *ngIf="timeSinceInspection.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="timeSinceInspection.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format.</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>            \r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #lastSinceInspection="ngModel" mask="000:00" name="lastSinceInspection" [(ngModel)]="sourceTimeLife.lastSinceInspection" [disabled]="!timeLifeAllow"/>\r\n                                            <div *ngIf="lastSinceInspection.errors">\r\n                                                <div *ngIf="lastSinceInspection.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="lastSinceInspection.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format.</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>  \r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t<td>Since Repair</td>\r\n\t\t\t\t\t\t\t\t\t\t<td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #cyclesSinceRepair="ngModel" mask="000:00" name="cyclesSinceRepair" [(ngModel)]="sourceTimeLife.cyclesSinceRepair" [disabled]="!timeLifeAllow"/>\r\n                                            <div *ngIf="cyclesSinceRepair.errors">\r\n                                                <div *ngIf="cyclesSinceRepair.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="cyclesSinceRepair.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format.</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td>            \r\n                                        <td class="clr2">\r\n                                            <input class="form-control" matInput type="text" style="width: 55%;" placeholder="hhh:mm" [pattern]="timePattern" #timeSinceRepair="ngModel" mask="000:00" name="timeSinceRepair" [(ngModel)]="sourceTimeLife.timeSinceRepair" [disabled]="!timeLifeAllow"/>\r\n                                            <div *ngIf="timeSinceRepair.errors">\r\n                                                <div *ngIf="timeSinceRepair.errors" [ngClass]="\'error\'">\r\n                                                    <div *ngIf="timeSinceRepair.errors.pattern">\r\n                                                        <span style="color: red;">Please enter valid time format.</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </td> \r\n\t\t\t\t\t\t\t\t\t\t<td></td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</ng-container>\r\n\t\t\t\t</ng-container>\r\n\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t<br>\r\n\t\t\t\t<button class="btn btn-primary pull-right" (click)="onSaveStockLineAdj()" [disabled]="!stockLineAdjForm.valid || disableLevel1 || disableLevel2 || disableLevel3 || disableLevel4 || disableSite || disableWarehouse || disableLocation || disableShelf || disableBin || disableCategory || disableQtyOnHandAdj || disableUnitCostAdj || disableSalesPriceAdj || disablelotCostAdj">Save</button>\r\n\t\t\t</form>\r\n\r\n\t\t\t<ng-template #loader>\r\n\t\t\t\t<div class="loader-css">\r\n\t\t\t\t  <img src="../../../assets/images/loader.gif">\r\n\t\t\t\t</div>\r\n\t\t\t  </ng-template>\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n<div class="modal fade" id="memo-popup-Doc" style="z-index: 15000 !important;"  role="dialog" data-backdrop="static" data-keyboard="false">\r\n\t<div class="modal-dialog modal-sm">\r\n\t  <div class="modal-content">\r\n\t\t<div class="modal-header">\r\n\t\t  <button type="button" class="close">\r\n\t\t\t&times;\r\n\t\t  </button>\r\n\t\t  <h4 class="modal-title">Edit Memo</h4>\r\n\t\t</div>\r\n\t\t<div class="modal-body">\r\n\t\t  <table class="table table-bordered table-fixed workflow-table-material">\r\n\t\t\t<thead>\r\n\t\t\t  <th style="color: #fff;">Memo</th>\r\n\t\t\t</thead>\r\n\t\t\t<tbody>\r\n\t\t\t  <tr>\r\n\t\t\t\t<td style="white-space: inherit">\r\n\t\t\t\t  <p-editor\r\n\t\t\t\t   spellcheck="true"\r\n\t\t\t\t\t[(ngModel)]="memoPopupContent"\r\n\t\t\t\t\t[style]="{ height: \'320px\' }"\r\n\t\t\t\t\tname="memoPopupContent"\r\n\t\t\t\t\trequired\r\n\t\t\t\t  ></p-editor>\r\n\t\t\t\t</td>\r\n\t\t\t  </tr>\r\n\t\t\t</tbody>\r\n\t\t  </table>\r\n\t\t  <div style="float: right;">\r\n\t\t\t<button\r\n\t\t\t  type="button"\r\n\t\t\t  class="btn btn-primary"\r\n\t\t\t  style="padding: 6px 12px !important; margin-top: 10px;"\r\n\t\t\t  (click)="onClickPopupSave()">\r\n\t\t\t  Save\r\n\t\t\t</button>\r\n\t\t\t<button\r\n\t\t\t  type="button"\r\n\t\t\t  class="btn btn-danger"\r\n\t\t\t  style="padding: 6px 12px !important; margin-top: 10px;"\r\n\t\t\t  (click)="closeMemoModel()" >\r\n\t\t\t  Close\r\n\t\t\t</button>\r\n\t\t  </div>\r\n\t\t</div>\r\n\t  </div>\r\n\t</div>\r\n  </div>\r\n  \r\n\r\n<div class="preloader" *ngIf="isSpinnerVisible">\r\n    <div class="loading">\r\n        <div class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n    </div>\r\n</div>'},lviK:function(t,e,n){"use strict";n.r(e),e.default='\r\n<div class="x_content">\r\n\r\n\t<h4 class="page-heading clr-green">Edit Stock Line</h4>\r\n\t<div class="clear"></div>\r\n\r\n\t<form action="#" method="post" id="" name="" class="form-horizontal ro-grid-form mtop10">\r\n\t\t<div class="col-sm-6">\r\n            <div class="col-sm-9">\r\n                <div class="form-group col-sm-12">\r\n                    <label class="form-group control-label col-sm-4"></label>\r\n                    <div class="col-sm-7">\r\n                        <select [formControl]="stocklineEditForm.controls[\'companyId\']" (change)="getBUList($event.target.value)" required>\r\n                            <option value="0">Select Legal Entity</option>\r\n                            <option *ngFor="let managementStructure of maincompanylist" [ngValue]="managementStructure.managementStructureId">{{managementStructure.name}}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="form-group control-label col-sm-4"></label>\r\n                        <div class="col-sm-7">\r\n                            <select [formControl]="stocklineEditForm.controls[\'BusinessUnitId\']" (change)="getDepartmentlist($event.target.value)">\r\n                                <option value="0">Select BU</option>\r\n                                <option *ngFor="let managementStructure of bulist" [ngValue]="managementStructure.managementStructureId">{{managementStructure.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="form-group control-label col-sm-4"></label>\r\n                        <div class="col-sm-7">\r\n                            <select [formControl]="stocklineEditForm.controls[\'divisionId\']" (change)="getDivisionlist($event.target.value)">\r\n                                <option value="0">Select Div</option>\r\n                                <option *ngFor="let managementStructure of departmentList " [ngValue]="managementStructure.managementStructureId">{{managementStructure.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="form-group control-label col-sm-4"></label>\r\n                        <div class="col-sm-7">\r\n                            <select [formControl]="stocklineEditForm.controls[\'departmentId\']" (change)="divisionChange(sourceStockLineSetup.divisionId)">\r\n                                <option value="0">Select Dept</option>\r\n                                <option *ngFor="let managementStructure of divisionlist " [ngValue]="managementStructure.managementStructureId">{{managementStructure.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label for="customerName" class="control-label col-sm-4">PN <strong style="color:red">*</strong></label>\r\n                    <div class="inner-addon col-sm-7">\r\n                        <p-autoComplete [(ngModel)]="sourceStockLineSetup.partNumber" [disabled]=true (onKeyUp)=eventHandler($event) (onSelect)="partnmId($event)" [ngModelOptions]="{standalone: true}" [suggestions]="partCollection" (completeMethod)="filterpartItems($event)" [size]="30"\r\n                                        [minLength]="1" [dropdown]="true">\r\n                            <ng-template let-partName pTemplate="part">\r\n                                <div class="ui-helper-clearfix">{{partName}}</div>\r\n                            </ng-template>\r\n                        </p-autoComplete>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">PN Description<strong style="color:red">*</strong></label>\r\n\r\n                    <div class="col-sm-7">\r\n                        <input [disabled]="true" class="form-control" type="text" id="" id="" name="" autocomplete="off" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.partDescription">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Stock Line Num<strong class="clr-red">*</strong></label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control" [disabled]=true type="text" id="" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.stockLineNumber">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Control Num<strong class="clr-red">*</strong></label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control" [disabled]=true type="text" id="" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.controlNumber">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Id Number<strong class="clr-red">*</strong></label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control" [disabled]=true type="text" id="" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.idNumber">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Is Serialized</label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control is-serialized-checkbox" [disabled]="true" type="checkbox" [ngModelOptions]="{standalone: true}" (change)="triggerSomeEvent()" [(ngModel)]="sourceStockLineSetup.isSerialized">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Qty On Hand<strong style="color:red">*</strong></label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control qty-input" *ngIf="showRestrictQuantity" type="number" min="0" max="1" (change)="calculateQtyAvailable($event)"  [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.quantityOnHand">\r\n                        <input class="form-control qty-input" *ngIf="showNormalQuantity" type="number" min="0" (change)="calculateQtyAvailable($event)" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.quantityOnHand">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Qty Reserved</label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control qty-input" type="number" [ngModelOptions]="{standalone: true}" (change)="calculateQtyAvailable($event)" [(ngModel)]="sourceStockLineSetup.quantityReserved">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Qty Issued</label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control qty-input" type="number" [ngModelOptions]="{standalone: true}" (change)="calculateQtyAvailable($event)"showf [(ngModel)]="sourceStockLineSetup.quantityIssued">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Qty Available</label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control qty-input" type="number" [disabled]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.quantityAvailable">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Cond Type <strong style="color:red">*</strong> </label>\r\n                    <div class="col-sm-7">\r\n                        <select [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.conditionId">\r\n                            <option *ngFor="let condition of allConditionInfo" [ngValue]="condition.conditionId">{{condition.description}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12 is-serialized-content" *ngIf="hideSerialNumber">\r\n                    <label class="control-label col-sm-4">Serial Num</label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.serialNumber">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Shelf Life</label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control" type="checkbox" [disabled]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.shelfLife">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Shelf Life Exp Date</label>\r\n                    <div class="col-sm-7">\r\n                        <p-calendar [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.shelfLifeExpirationDate"></p-calendar>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Site <strong style="color:red">*</strong> </label>\r\n                    <div class="col-sm-7">\r\n                        <select [(ngModel)]="sourceStockLineSetup.siteId" [disabled]=true [ngModelOptions]="{standalone: true}" (change)="siteValueChange($event.target.value)">\r\n                            <option *ngFor="let site of allSites" [ngValue]="site.siteId">{{site.name}}</option>\x3c!--(onchange)="siteValueChange(site.siteName)"--\x3e\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Warehouse</label>\r\n                    <div class="col-sm-7">\r\n                        <select [(ngModel)]="sourceStockLineSetup.warehouseId" [disabled]=true [ngModelOptions]="{standalone: true}" (change)="wareHouseValueChange(sourceStockLineSetup.warehouseId)">\r\n                            <option *ngFor="let site of allWareHouses" [ngValue]="site.warehouseId">{{site.warehouseName}}</option>\x3c!--(onchange)="siteValueChange(site.siteName)"--\x3e\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Location</label>\r\n                    <div class="col-sm-7">\r\n                        <select [(ngModel)]="sourceStockLineSetup.locationId" [disabled]=true [ngModelOptions]="{standalone: true}" (change)="locationValueChange(sourceStockLineSetup.locationId)">\r\n                            <option *ngFor="let site of allLocations" [ngValue]="site.locationId">{{site.name}}</option>\x3c!--(onchange)="siteValueChange(site.siteName)"--\x3e\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Shelf</label>\r\n                    <div class="col-sm-7">\r\n                        <select [(ngModel)]="sourceStockLineSetup.shelfId" [disabled]=true [ngModelOptions]="{standalone: true}" (change)="shelfValueChange(sourceStockLineSetup.shelfId)">\r\n                            <option *ngFor="let site of allShelfs" [ngValue]="site.shelfId">{{site.name}}</option>\x3c!--(onchange)="siteValueChange(site.siteName)"--\x3e\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Bin</label>\r\n                    <div class="col-sm-7">\r\n                        <select [(ngModel)]="sourceStockLineSetup.binId" [disabled]=true [ngModelOptions]="{standalone: true}" (change)="binValueSelect(sourceStockLineSetup.binId)">\r\n                            <option *ngFor="let site of allBins" [ngValue]="site.binId">{{site.name}}</option>\x3c!--(onchange)="siteValueChange(site.siteName)"--\x3e\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Obtain From</label>\r\n                    <div class="col-sm-7">\r\n                        <select [(ngModel)]="sourceStockLineSetup.obtainFromType" [ngModelOptions]="{standalone: true}" (change)="ChnageValue(sourceStockLineSetup.obtainFromType)">\r\n                            <option value="1">Customer</option>\r\n                            <option value="2">Other </option>\r\n                            <option value="3">Vendor</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12" *ngIf="sourceStockLineSetup.obtainFromType == 1">\r\n                    <label class="control-label col-sm-4"></label>\r\n                    <div class="inner-addon col-sm-7 inline-block display-flex">\r\n                        <select [(ngModel)]="sourceStockLineSetup.obtainFrom" [ngModelOptions]="{standalone: true}">\r\n                            <option *ngFor="let customer of allCustomer" [ngValue]="customer.name">{{customer.name}}</option>\r\n                        </select>\r\n                        <a routerLink="/customersmodule/customerpages/app-customer-create" class="add-icon"><i class="fa fa-plus"></i></a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12" *ngIf="sourceStockLineSetup.obtainFromType== 2">\r\n                    <label class="control-label col-sm-4"></label>\r\n                    <div class="col-sm-7" *ngIf="sourceStockLineSetup.obtainFromType == 2">\r\n                        <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.obtainFrom">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12" *ngIf="sourceStockLineSetup.obtainFromType == 3">\r\n                    <label class="control-label col-sm-4"></label>\r\n                    <div class="inner-addon col-sm-7 inline-block display-flex">\r\n                        <select [(ngModel)]="sourceStockLineSetup.obtainFrom" [ngModelOptions]="{standalone: true}">\r\n                            <option *ngFor="let vendor of allVendorList" [ngValue]="vendor.vendorName">{{vendor.vendorName}}</option>\x3c!--(onchange)="siteValueChange(site.siteName)"--\x3e\r\n                        </select>\r\n                        <a routerLink="/vendorsmodule/vendorpages/app-vendor-setup" class="add-icon"><i class="fa fa-plus"></i></a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4" for="obtainFrom">Owner</label>\r\n                    <div class="col-sm-7">\r\n                        <select id="obtainFrom" [(ngModel)]="sourceStockLineSetup.ownerType" [ngModelOptions]="{standalone: true}" (change)="ChnageOwnerValue(sourceStockLineSetup.ownerType)">\r\n                            <option value="1">Customer</option>\r\n                            <option value="2">Other </option>\r\n                            <option value="3">Vendor</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12" *ngIf="sourceStockLineSetup.ownerType == 1">\r\n                    <label class="control-label col-sm-4"></label>\r\n                    <div class="inner-addon col-sm-7 inline-block display-flex">\r\n                        <select [(ngModel)]="sourceStockLineSetup.owner" [ngModelOptions]="{standalone: true}">\r\n                            <option *ngFor="let customer of allCustomer" [ngValue]="customer.name">{{customer.name}}</option>\r\n                        </select>\r\n                        <a routerLink="/customersmodule/customerpages/app-customer-create" class="add-icon"><i class="fa fa-plus"></i></a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12" *ngIf="sourceStockLineSetup.ownerType == 2">\r\n                    <label class="control-label col-sm-4"></label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.owner">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12" *ngIf="sourceStockLineSetup.ownerType == 3">\r\n                    <label class="control-label col-sm-4"></label>\r\n                    <div class="inner-addon col-sm-7 inline-block display-flex">\r\n                        <select [(ngModel)]="sourceStockLineSetup.owner" [ngModelOptions]="{standalone: true}">\r\n                            <option *ngFor="let vendor of allVendorList" [ngValue]="vendor.vendorName">{{vendor.vendorName}}</option>\x3c!--(onchange)="siteValueChange(site.siteName)"--\x3e\r\n                        </select>\r\n                        <a routerLink="/vendorsmodule/vendorpages/app-vendor-setup" class="add-icon"><i class="fa fa-plus"></i></a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4" for="obtainFrom">Tracable To</label>\r\n                    <div class="col-sm-7">\r\n                        <select id="obtainFrom" [(ngModel)]="sourceStockLineSetup.traceableToType" [ngModelOptions]="{standalone: true}" (click)="ChnageTracebleValue(sourceStockLineSetup.traceableToType)">\r\n                            <option [value]="1">Customer</option>\r\n                            <option [value]="2">Other </option>\r\n                            <option [value]="3">Vendor</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12" *ngIf="sourceStockLineSetup.traceableToType == 1">\r\n                    <label class="control-label col-sm-4"></label>\r\n                    <div class="inner-addon col-sm-7 inline-block display-flex">\r\n                        <select [(ngModel)]="sourceStockLineSetup.traceableTo" [ngModelOptions]="{standalone: true}">\r\n                            <option *ngFor="let customer of allCustomer" [ngValue]="customer.name">{{customer.name}}</option>\r\n                        </select>\r\n                        <a routerLink="/customersmodule/customerpages/app-customer-create" class="add-icon"><i class="fa fa-plus"></i></a>\r\n                    </div>\r\n                </div>\r\n\r\n                    <div class="form-group col-sm-12" *ngIf="sourceStockLineSetup.traceableToType == 2">\r\n                        <label class="control-label col-sm-4"></label>\r\n                        <div class="col-sm-7" >\r\n                            <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.traceableTo">\r\n                        </div>\r\n                    </div>\r\n\r\n                <div class="form-group col-sm-12" *ngIf="sourceStockLineSetup.traceableToType == 3">\r\n                    <label class="control-label col-sm-4"></label>\r\n                    <div class="inner-addon col-sm-7 inline-block display-flex" >\r\n                        <select [(ngModel)]="sourceStockLineSetup.traceableTo" [ngModelOptions]="{standalone: true}">\r\n                            <option *ngFor="let vendor of allVendorList" [ngValue]="vendor.vendorName">{{vendor.vendorName}}</option>\x3c!--(onchange)="siteValueChange(site.siteName)"--\x3e\r\n                        </select>\r\n                        <a routerLink="/vendorsmodule/vendorpages/app-vendor-setup" class="add-icon"><i class="fa fa-plus"></i></a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Mfg</label>\r\n                    <div class="col-sm-7">\r\n\r\n                        <select [(ngModel)]="sourceStockLineSetup.manufacturerId" [ngModelOptions]="{standalone: true}">\r\n                            <option *ngFor="let manufacturer of allManufacturerInfo" [ngValue]="manufacturer.manufacturerId">{{manufacturer.name}}</option>\x3c!--(onchange)="siteValueChange(site.siteName)"--\x3e\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Mfg Lot Num</label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.manufacturerLotNumber">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Mfg Date</label>\r\n                    <div class="col-sm-7">\r\n                        <p-calendar [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.manufacturingDate"></p-calendar>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Mfg Batch Num</label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.manufacturingBatchNumber">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4" matTooltip="Engine Serial Number" matTooltipPosition="above">ESN</label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.engineSerialNumber">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4" matTooltip="Export Control Classification Number" matTooltipPosition="above">ECCN</label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.ExportECCN">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4" matTooltip="International Traffic in Arms Regulations Number" matTooltipPosition="above">Itar Num</label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.ITARNumber">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4" matTooltip="Next Higher Assembly" matTooltipPosition="above">NHA</label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.NHA">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4" matTooltip="Top Level Assembly" matTooltipPosition="above">TLA</label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.tla">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4" matTooltip="National Stock Number" matTooltipPosition="above">NSN</label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.nationalStockNumber">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Aircraft Tail Num</label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.aircraftTailNumber">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\t\t<div class="col-sm-6">\r\n            <div class="col-sm-9">\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Part Cert Num</label>\r\n                    <div class="col-sm-7">\r\n                        <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.partCertificationNumber">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Certify By</label>\r\n                    <div class="inner-addon col-sm-7 display-flex">\r\n                        \x3c!--<input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.certifiedBy">--\x3e\r\n                        <select [(ngModel)]="sourceStockLineSetup.certifiedBy" [ngModelOptions]="{standalone: true}">\r\n                            <option *ngFor="let employee of allEmployeeList" [ngValue]="employee.firstName">{{employee.firstName}}{{ employee.lastName}}</option>\r\n                        </select>\r\n                        <a routerLink="/employeesmodule/employeepages/app-employee-general-information" class="add-icon"><i class="fa fa-plus"></i></a>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Certified Date</label>\r\n                    <div class="col-sm-7">\r\n\r\n                        <p-calendar [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.certifiedDate"></p-calendar>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Tag Date</label>\r\n                    <div class="col-sm-7">\r\n                        <p-calendar [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.tagDate"></p-calendar>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class="form-group col-sm-12">\r\n                    <label class="control-label col-sm-4">Tag Type</label>\r\n                    <div class="col-sm-7">\r\n                        <select [(ngModel)]="sourceStockLineSetup.tagType" [ngModelOptions]="{standalone: true}">\r\n                            <option *ngFor="let tag of allTagTypes" [ngValue]="tag.tagTypeId">{{tag.name}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">Certified Due Date</label>\r\n                        <div class="col-sm-7">\r\n                            <p-calendar [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.certifiedDueDate"></p-calendar>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">Order Date</label>\r\n                        <div class="col-sm-7">\r\n                            <p-calendar [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.orderDate"></p-calendar>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">Open Date</label>\r\n                        <div class="col-sm-7">\r\n                            <input [disabled]="true" class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.openDate">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">Days Since Received</label>\r\n                        <div class="col-sm-7">\r\n                            <input [disabled]="true" class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.daysReceived">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">Days Since Mfg</label>\r\n                        <div class="col-sm-7">\r\n                            <input [disabled]="true" class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.manufacturingDays">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">Days Since Tagged</label>\r\n                        <div class="col-sm-7">\r\n                            <input [disabled]="true" class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.tagDays">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">Days Since Open</label>\r\n                        <div class="col-sm-7">\r\n                            <input [disabled]="true" class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.openDays">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">Blacklisted</label>\r\n                        <div class="col-sm-7">\r\n                            <input class="form-control" type="checkbox" [disabled]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.blackListed">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <label class="control-label col-sm-4"></label>\r\n                    <div class="inner-addon col-sm-7 display-flex" *ngIf="sourceStockLineSetup.blackListed == 1">\r\n                        <div class="col-sm-7">\r\n                            <textarea style="height: 100px;" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.blackListedReason"></textarea>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">Incident</label>\r\n                        <div class="col-sm-7">\r\n                            <input class="form-control" type="checkbox" [disabled]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.incident">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <label class="control-label col-sm-4"></label>\r\n                    <div class="inner-addon col-sm-7 display-flex" *ngIf="sourceStockLineSetup.incident == 1">\r\n                        <div class="col-sm-7">\r\n                            <textarea style="height: 100px;" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.incidentReason"></textarea>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">Accident</label>\r\n                        <div class="col-sm-7">\r\n                            <input class="form-control" type="checkbox" [disabled]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.accident">\r\n                        </div>\r\n                    </div>\r\n                    <label class="control-label col-sm-4"></label>\r\n                    <div class="inner-addon col-sm-7 display-flex" *ngIf="sourceStockLineSetup.accident == 1">\r\n                        <div class="col-sm-7">\r\n                            <textarea style="height: 100px;" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.accidentReason"></textarea>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">PO Num </label>\r\n                        <div class="col-sm-7">\r\n                            <select [(ngModel)]="sourceStockLineSetup.PurchaseOrderId" [disabled]=true [ngModelOptions]="{standalone: true}" (onchange)="POValueChange(sourceStockLineSetup.PurchaseOrderId)">\r\n                                <option *ngFor="let po of allPolistInfo" [ngValue]="po.purchaseOrderId">{{po.purchaseOrderNumber}}</option>\x3c!--(onchange)="siteValueChange(site.siteName)"--\x3e\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">PO Unit Cost</label>\r\n                        <div class="col-sm-7">\r\n                            <input class="form-control" [disabled]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.purchaseOrderUnitCost">\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">RO Unit Cost</label>\r\n                        <div class="col-sm-7">\r\n                            <input class="form-control" type="text" [disabled]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.repairOrderUnitCost">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">Received Date<strong class="clr-red">*</strong></label>\r\n                        <div class="col-sm-7">\r\n                            <p-calendar [showIcon]="true" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.receivedDate"></p-calendar>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">Receiver Num<strong style="color:red">*</strong> </label>\r\n                        <div class="col-sm-7">\r\n                            <input class="form-control" type="text" [disabled]=true [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.receiverNumber">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">Reconciliation Num</label>\r\n                        <div class="col-sm-7">\r\n                            <input class="form-control" type="text" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.reconciliationNumber">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">Unit Sale Price</label>\r\n                        <div class="col-sm-7">\r\n                            <input class="form-control" type="text" [disabled]=true [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.unitSalesPrice">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">Core Unit Cost</label>\r\n                        <div class="col-sm-7">\r\n                            <input class="form-control" type="number" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.coreUnitCost">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">Lot Cost</label>\r\n                        <div class="col-sm-7">\r\n                            <input class="form-control" type="text" [disabled]="true">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">GL Account<strong style="color:red">*</strong> </label>\r\n                        <div class="col-sm-7">\r\n\r\n                            <p-autoComplete [(ngModel)]="sourceStockLineSetup.glAccountName" [disabled]="true" (onKeyUp)=glAccountHandler($event) (onSelect)="glAccountId($event)" [ngModelOptions]="{standalone: true}" [suggestions]="glAccountCollection" (completeMethod)="filterglAccount($event)" [size]="30"\r\n                                            [minLength]="1" [dropdown]="true">\r\n                                <ng-template let-glAccountId pTemplate="glAccount">\r\n                                    <div class="ui-helper-clearfix">{{glAccountName}}</div>\r\n                                </ng-template>\r\n                            </p-autoComplete>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">PMA</label>\r\n                        <div class="col-sm-7">\r\n                            <input class="form-control" type="checkbox" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.isPMA">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">DER</label>\r\n                        <div class="col-sm-7">\r\n                            <input class="form-control" type="checkbox" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.isDER">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">OEM</label>\r\n                        <div class="col-sm-7">\r\n                            <input class="form-control" type="checkbox" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.oem">\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <div class="form-group col-sm-12 input-icon1">\r\n                            <label class="control-label col-sm-4">Integration With <span class="clr-red"></span></label>\r\n                            <div class="inner-addon right-addon autosuggesions-add inline-block">\r\n                            </div>\r\n                            <div class="table-responsive">\r\n                                <table class="table table-bordered table-striped table-sorting">\r\n                                    <thead>\r\n                                        <tr align="center">\r\n                                            <th>Services</th>\r\n                                            <th>Listed</th>\r\n                                            <th>Integrate With</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr *ngFor="let col of allIntegrationInfo; let i = index;">\r\n                                            <td>{{col.description}}</td>\r\n                                            <td>\r\n                                                <input type="checkbox" class=" wauto" [(ngModel)]="col.listedCheckbox" [ngModelOptions]="{standalone: true}" (change)="getSelectedItem(col,i)">\r\n                                            </td>\r\n                                            <td>\r\n                                                <input type="checkbox" class=" wauto" [(ngModel)]="col.integratedCheckbox" [ngModelOptions]="{standalone: true}" (change)="saveSelectedModel(col,$event)">\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class="form-group col-sm-12">\r\n                        <label class="control-label col-sm-4">Memo</label>\r\n                        <div class="col-sm-7">\r\n                            <textarea style="height: 100px;" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceStockLineSetup.memo">Memo</textarea>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\t\t</div>\r\n\t\t<div class="clear"></div>\r\n\t\t<hr>\r\n\t\t<div class="col-sm-12">\r\n\t\t\t<div class="form-group col-sm-12" *ngIf="this.sourceStockLineSetup.timeLifeCyclesId">\r\n\t\t\t\t<div class="col-sm-12">\r\n\t\t\t\t\t<div class="table-responsive">\r\n\t\t\t\t\t\t<table class="table table-bordered table-striped timelife-table">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th colspan="15" class="text-center"><strong>Time Life Adjustments</strong></th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody class="text-center">\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>&nbsp;</td>\r\n\t\t\t\t\t\t\t\t\t<td colspan="4" class="text-center clr1"><strong>Cycles</strong></td>\r\n\t\t\t\t\t\t\t\t\t<td colspan="4" class="text-center clr2"><strong>Times</strong></td>\r\n\t\t\t\t\t\t\t\t\t<td colspan="4" class="text-center clr3"><strong>Last</strong></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<td>Control Num</td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr1">Since New</td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr1">Since OVH</td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr1">Since Insp</td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr1">Since Repair</td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr2">Since New</td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr2">Since OVH</td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr2">Since Insp</td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr2">Since Repair</td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr3">Since New</td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr3">Since OVH</td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr3">Since Insp</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>{{sourceStockLineSetup.controlNumber}}</td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr1"><input type="number"  class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.cyclesSinceNew"></td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr1"><input type="number"  class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.cyclesSinceOVH"></td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr1"><input type="number"  class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.cyclesSinceRepair"></td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr1"><input type="number"  class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.cyclesSinceInspection"></td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr2"><input type="number"  class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.timeSinceNew"></td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr2"><input type="number"  class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.timeSinceOVH"></td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr2"><input type="number"  class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.timeSinceRepair"></td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr2"><input type="number"  class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.timeSinceInspection"></td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr3"><input type="number"  class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.lastSinceNew"></td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr3"><input type="number"  class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.lastSinceOVH"></td>\r\n\t\t\t\t\t\t\t\t\t<td class="clr3"><input type="number"  class="w60 form-control" placeholder="hours" [ngModelOptions]="{standalone: true}" [(ngModel)]="sourceTimeLife.lastSinceInspection"></td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class="clear"></div>\r\n\t\t<hr>\r\n\t\t<button type="submit" class="btn btn-success pull-right submit-btn" (click)="savestockLineclose()">Save</button>\r\n\t\t<div class="clear"></div>\r\n\t\t<div class="clearfix"></div>\r\n\t</form>\r\n</div>\r\n\r\n\r\n\r\n<p-dialog header="Error" [(visible)]="displayError" [modal]="true" [dismissableMask]="true" maximizedLeft="140px" maximizedTop="1850px"\r\n          [width]="350" [minWidth]="200" [responsive]="true"\r\n          [minY]="1050" [baseZIndex]="1100000">\r\n    <p *ngIf="showCompanyError" [ngStyle]="{\'color\':\'red\'}"> Please Enter Company</p>\r\n    <p *ngIf="showPartNumberError" [ngStyle]="{\'color\':\'red\'}"> Please Enter Part Number</p>\r\n    <p *ngIf="showSerialNumberError" [ngStyle]="{\'color\':\'red\'}"> Please Enter Serial Number </p>\r\n    <p *ngIf="showConditionError" [ngStyle]="{\'color\':\'red\'}"> Please Enter Condition</p>\r\n    <p *ngIf="showSiteError" [ngStyle]="{\'color\':\'red\'}"> Please Select Site</p>\r\n    <p *ngIf="showReceiveDateError" [ngStyle]="{\'color\':\'red\'}"> Please Select Receive Date</p>\r\n    <p *ngIf="showReceiverNumberError" [ngStyle]="{\'color\':\'red\'}"> Please Enter receive Number</p>\r\n    <p *ngIf="QuantityOnHandError" [ngStyle]="{\'color\':\'red\'}"> Please Enter Quantity On Hand</p>\r\n    <p *ngIf="invalidQtyError" [ngStyle]="{\'color\':\'red\'}"> Available Quantity cannot be negative</p>\r\n\r\n</p-dialog>'},"n/tF":function(t,e,n){"use strict";n.r(e),e.default='label {\n  text-align: left;\n  width: auto;\n  margin-right: 0;\n  font-weight: normal;\n}\n\ninput[type=text], input[type=number], select {\n  height: 24px !important;\n  border-radius: 5px !important;\n}\n\ntextarea {\n  border-radius: 5px !important;\n}\n\n.inner-addon .ui-autocomplete-input {\n  width: 100% !important;\n}\n\n.po-head {\n  font-weight: bold;\n  font-size: 16px;\n  color: #295d92;\n}\n\n.partsList-table-tr th {\n  min-width: 80px;\n}\n\n.addpn-btn {\n  padding: 5px 10px !important;\n  font-size: 13px;\n}\n\na.fa.fa-plus-circle {\n  color: green !important;\n}\n\n.partsList-modal .form-group {\n  margin-bottom: 6px !important;\n}\n\n.rpo-table-cstm th {\n  padding: 8px 5px !important;\n}\n\n.child-add-icon {\n  cursor: pointer;\n  margin: 2px -12px;\n}\n\n.child-add-icon a:before, .child-add-icon i:before {\n  font-size: 16px;\n}\n\ntable th {\n  padding: 4px;\n}\n\ntable td {\n  padding: 4px;\n}\n\n.card-stock {\n  margin-top: 20px;\n  margin-bottom: 10px;\n}\n\n.card-stock .card-header {\n  padding: 10px 12px;\n}\n\n.card-stock .card-header h5 {\n  margin-bottom: 0;\n  font-size: 12px;\n}\n\n.card-stock .card-body {\n  padding: 12px 12px 4px;\n}\n\n@media (min-width: 768px) {\n  .col-md-3 {\n    max-width: 22%;\n    margin-right: 15px;\n  }\n\n  .col-md-6 .col-md-6 {\n    max-width: 44%;\n    margin-right: 15px;\n  }\n\n  .integrationWith {\n    max-width: 91%;\n    margin-right: 15px;\n  }\n}\n\n.tooltip {\n  position: relative;\n  display: inline-block;\n  border-bottom: 1px dotted black;\n}\n\n.tooltip .tooltiptext {\n  visibility: hidden;\n  width: 120px;\n  background-color: black;\n  color: #fff;\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n  position: absolute;\n  z-index: 1;\n  bottom: 150%;\n  left: 50%;\n  margin-left: -60px;\n}\n\n.tooltip .tooltiptext::after {\n  content: "";\n  position: absolute;\n  top: 100%;\n  left: 50%;\n  margin-left: -5px;\n  border-width: 5px;\n  border-style: solid;\n  border-color: black transparent transparent transparent;\n}'},sZVF:function(t,e,n){"use strict";n.r(e),e.default='<div>\r\n    <div class="inline-block display-flex">\r\n        <h3 class="po-head lead">Stock Line Report</h3>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;\r\n        \x3c!--<a matTooltip="Stock Line Report"\r\n           class="plusicon-cstm new-margin"\r\n           [routerLink]="[\r\n            \'/workordersmodule/workorderspages/app-work-order-add\'\r\n          ]">\r\n            <i class="fa fa-plus-circle fa-lg"></i>\r\n        </a>--\x3e\r\n    </div>\r\n    <p-table #dt\r\n             class="rpo-table-cstm rro-table-cstm"\r\n             [value]="stockLineReportList"\r\n             [first]="0"\r\n             [rows]="pageSize"\r\n             [paginator]="true"\r\n             [pageLinks]="3"\r\n             [rowsPerPageOptions]="[10, 20, 50, 100]"\r\n             [columns]="headers"\r\n             selectionMode="multiple"\r\n             expandableRows="true"\r\n             rowExpandMode="single"\r\n             [lazy]="true"\r\n             (onLazyLoad)="loadData($event)"\r\n             [resizableColumns]="true"\r\n             [reorderableColumns]="true"\r\n             [totalRecords]="totalRecords"\r\n             [scrollable]="true"\r\n             [metaKeySelection]="true"\r\n             scrollHeight="450px">\r\n        <ng-template pTemplate="caption">\r\n            <div style="text-align: right;margin-left:-6px !important;min-height: 30px;">\r\n\r\n                <button type="button"\r\n                        class="btn btn-primary "\r\n                        pButton\r\n                        icon="fa-download"\r\n                        iconPos="left"\r\n                        label="Download" matTooltip="Download" matTooltipPosition="above"\r\n                        (click)="downloadStockLineReport()"></button>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template pTemplate="colgroup" let-columns>\r\n            <colgroup>\r\n                <col *ngFor="let col of columns" style="width:130px">\r\n            </colgroup>\r\n        </ng-template>\r\n        <ng-template pTemplate="header" let-columns>\r\n            <tr>\r\n\r\n                <th *ngFor="let col of columns" pResizableColumn pReorderableColumn\r\n                    [pSortableColumn]="col.field" style="text-align:center;">\r\n                    {{ col.header }}\r\n                    <p-sortIcon [field]="col.field"></p-sortIcon>\r\n                </th>\r\n            </tr>\r\n            <tr>\r\n                <th style="width:120px" *ngFor="let col of columns" [ngSwitch]="col.field">\r\n                    \x3c!-- <input type="text" style="width:100%;" pInputText   (keyup)="filterData($event)"> --\x3e\r\n                    <input style="width:100%;" pInputText type="text" (input)="dt.filter($event.target.value, col.field, \'contains\');">\r\n            </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate="body"\r\n                     let-rowData\r\n                     let-rowIndex="rowIndex"\r\n                     let-expanded="expanded"\r\n                     let-columns="columns">\r\n            <tr class="ui-widget-header">\r\n                <td *ngFor="let col of columns" style="text-overflow: ellipsis; overflow: hidden;">\r\n                    {{rowData[col.field]}}\r\n                </td>\r\n\r\n\r\n\r\n\r\n            </tr>\r\n\r\n        </ng-template>\r\n        <ng-template pTemplate="summary" id="footer">\r\n            <label id="footer" class="footer">Total:</label>\r\n            <input style="width: 5%;"\r\n                   [(ngModel)]="totalRecords"\r\n                   [disabled]="true"\r\n                   pInputText\r\n                   type="text" />\r\n            &nbsp;&nbsp;\r\n            <label id="footer" class="footer1">Pages Count:</label>\r\n            <input style="width: 5%;"\r\n                   [(ngModel)]="totalPages"\r\n                   [disabled]="true"\r\n                   pInputText\r\n                   type="text" />\r\n        </ng-template>\r\n    </p-table>\r\n</div>\r\n'}}]);