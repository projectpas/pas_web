(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{"5cD9":function(t,e,s){"use strict";s.r(e),e.default="<router-outlet></router-outlet>"},B7lA:function(t,e,s){"use strict";s.r(e),e.default='<div>\r\n    <div class="col-md-12">\r\n        <div class="x_panel" style="">\r\n            <div class="x_content">\r\n                <nav aria-label="breadcrumb">\r\n                    <ol class="breadcrumb">\r\n                        <li class="breadcrumb-item" aria-current="page">Admin</li>\r\n                        <li class="breadcrumb-item" aria-current="page">Employee</li>\r\n                        <li class="breadcrumb-item active" aria-current="page">User Role Mapping</li>\r\n                    </ol>\r\n                </nav>\r\n                <div class="pheading">\r\n                    <h4 class="page-heading">Add New Role</h4>\r\n                    \x3c!--<form id="" class="lgrey-bg div8 filters" name="" action="#" method="post" onsubmit="return false;">--\x3e\r\n                    <div class="col-sm-2 emp-filter">\r\n                        <label>User Name</label>\r\n                        <br>\r\n                        <select class="form-control" (change)="onUserChange($event.target.value)" [(ngModel)]="selectedUserId">\r\n                            <option value="0">--All--</option>\r\n                            <option *ngFor="let user of Users" value={{user.id}}>\r\n                                {{user.userName}}\r\n                            </option>\r\n                        </select>\r\n                    </div>\r\n                    <div class="col-sm-2 emp-filter">\r\n                        <label>User Role</label>\r\n                        <br>\r\n                        <p-multiSelect [options]="UserRoles" \r\n                                       [(ngModel)]="selectedRoles" \r\n                                       optionLabel="name"\r\n                                       [style]="{minWidth: \'200px\'}" \r\n                                       defaultLabel="Roles" \r\n                                       style="float:left">\r\n\r\n                        </p-multiSelect>\r\n\r\n                    </div>\r\n                    <div class="col-sm-2 emp-filter">\r\n                        <br>\r\n                        <button (click)="assignRole()" class="btn btn-success">Assign Role</button>\r\n                    </div>\r\n                    \x3c!--</form>--\x3e\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    \r\n</div>'},CzrU:function(t,e,s){"use strict";s.r(e);var r=s("mrSG"),i=s("8Y7J"),l=s("u9T3"),n=s("s7LF"),a=s("TSSN"),o=s("1+r1"),d=s("iInd");let c=class{};c=r.b([Object(i.Component)({selector:"app-rolespages",template:r.c(s("5cD9")).default,styles:[r.c(s("nsGu")).default]})],c);let h=class{constructor(){}};h=r.b([Object(i.Component)({selector:"app-roles-list",template:r.c(s("JkqO")).default,styles:[r.c(s("bTWo")).default]})],h);let u=class{constructor(){}};u=r.b([Object(i.Component)({selector:"app-roles-list-by-module",template:r.c(s("rrPZ")).default,styles:[r.c(s("OjC9")).default]})],u);var p=s("8rEH"),m=s("s6ns"),g=s("OIZN"),v=s("7kcP"),b=s("sYxu"),f=s("d8Wx"),y=s("90vJ"),M=s("IheW"),R=s("lGQG"),S=s("G0yt"),w=s("3LUQ"),I=s("RSnv");class x{constructor(t,e,s,r,i,l,n,a,o){this.userRoleLevelId=e,this.description=s,this.masterCompanyId=r,this.createdBy=i,this.createdDate=l,this.updatedDate=n,this.updatedBy=a,this.masterCompany=t,this.isActive=o}}var C=s("JdNi"),k=s("h55p");let U=class{constructor(t,e,s,r,i,l,n,a,o,d,c,h,u,m){this.workFlowtService=t,this.breadCrumb=e,this.manageMentService=s,this.http=r,this.ataservice=i,this.changeDetectorRef=l,this.router=n,this.authService=a,this.modalService=o,this.activeModal=d,this._fb=c,this.alertService=h,this.dialog=u,this.masterComapnyService=m,this.createdBy="",this.updatedBy="",this.createdDate="",this.updatedDate="",this.isEditMode=!1,this.isDeleteMode=!1,this.closeCmpny=!0,this.action_name="",this.allComapnies=[],this.auditHisory=[],this.displayedColumns=["description","createdBy","updatedBy","updatedDate","createdDate"],this.selectedColumn={},this.localSelectedManagement=[],this.sourceUserRoleLevel={},this.allRoles=[],this.allWorkFlows=[],this.dataSource=new p.a,this.sourceUserRoleLevel=new x}ngAfterViewInit(){this.dataSource.paginator=this.paginator,this.dataSource.sort=this.sort}ngOnInit(){this.cols=[{field:"description",header:"Role Name"}],this.loadData(),this.loadManagementdata(),this.selectedColumns=this.cols,this.breadCrumb.currentUrl="/rolesmodule/rolespages/app-roles-management-structure",this.breadCrumb.bredcrumbObj.next(this.breadCrumb.currentUrl),this.selectedColumns=this.cols}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}closethis(){this.closeCmpny=!1}loadData(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.workFlowtService.getRolesList().subscribe(t=>this.onDataLoadSuccessful(t[0]),t=>this.onDataLoadFailed(t)),this.selectedColumns=this.cols}loadManagementdata(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.manageMentService.getManagemententity().subscribe(t=>this.onManagemtntdataLoad(t[0]),t=>this.onDataLoadFailed(t)),this.selectedColumns=this.cols}onManagemtntdataLoad(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allManagemtninfo=t,this.allManagemtninfo&&(this.gridData=this.makeNestedObj(this.allManagemtninfo,null)),this.cols1=[{field:"code",header:"Code"},{field:"description",header:"Description"},{field:"legalEntityId",header:"ID"}]}makeNestedObj(t,e){var s=[];for(var r in t)if(t[r].parentId==e){var i=this.makeNestedObj(t,t[r].managementStructureId);t[r]={data:t[r]},i.length&&(t[r].children=i),s.push(t[r])}return s}makeNestedObj1(t,e,s){var r=[];if(t)for(var i=0;i<t.length;i++)for(var l=0;l<e.length;l++)if(e[l].data){if(t[i].managementStructureId==e[l].data.managementStructureId){e[l].data.userRoleManagementStructureId=t[i].userRoleManagementStructureId,e[l].data.userRoleLevelId=t[i].userRoleLevelId,r.push(e[l]),console.log(e[l].data);break}}else if(t[i].managementStructureId==e[l].managementStructureId){e[l].data.userRoleManagementStructureId=t[i].userRoleManagementStructureId,e[l].data.managementStructureId=t[i].managementStructureId,r.push(e[l]),console.log(e[l].data);break}return r}saveManagement(t,e){for(let s=0;s<e.length;s++)null!=e[s].data.managementStructureId&&(e[s].data.UserRoleLevelId=t,this.workFlowtService.newRolesManagementStructure(e[s].data).subscribe(t=>{this.localManagementSiteCollection=t}))}applyFilter(t){this.dataSource.filter=t}refresh(){this.applyFilter(this.dataSource.filter)}onDataLoadSuccessful(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allRoles=t}onDataLoadFailed(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}onDataMasterCompaniesLoadSuccessful(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}loadMasterCompanies(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe(t=>this.onDataMasterCompaniesLoadSuccessful(t[0]),t=>this.onDataLoadFailed(t))}open(t){this.isEditMode=!1,this.isDeleteMode=!1,this.isSaving=!0,this.loadMasterCompanies(),this.loadManagementdata(),this.sourceUserRoleLevel=new x,this.description="",this.modal=this.modalService.open(t,{size:"lg"}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}openDelete(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceUserRoleLevel=e,this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}localManagementSiteCollectionEdit(t){console.log(t)}openEdit(t,e){this.isEditMode=!0,this.isSaving=!0,this.loadMasterCompanies(),this.sourceUserRoleLevel=e,this.description=this.sourceUserRoleLevel.description,this.workFlowtService.getRoleManagementStructureEditData(this.sourceUserRoleLevel.userRoleLevelId).subscribe(t=>{this.localManagementRoleEditCollection=t,this.localManagementRoleEditCollection&&(this.gridData?this.gridData1=this.makeNestedObj1(this.localManagementRoleEditCollection,this.allManagemtninfo,null):this.gridData=this.makeNestedObj(this.allManagemtninfo,null)),this.selectedNodeTest=this.gridData1}),this.modal=this.modalService.open(t,{size:"lg"}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}openHist(t,e){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.sourceUserRoleLevel=e,this.workFlowtService.historyRoles(this.sourceUserRoleLevel.UserRoleLevelId).subscribe(e=>this.onHistoryLoadSuccessful(e[0],t),t=>this.saveFailedHelper(t))}openView(t,e){this.sourceUserRoleLevel=e,this.description=e.description,this.createdBy=e.createdBy,this.updatedBy=e.updatedBy,this.createdDate=e.createdDate,this.updatedDate=e.updatedDate,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"lg"}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}openHelpText(t){this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}eventHandler(t){let e=t.target.value.toLowerCase();this.selectedActionName&&(e==this.selectedActionName.toLowerCase()?this.disableSave=!0:this.disableSave=!1)}deleteItemAndCloseModel(){this.isSaving=!0,this.sourceUserRoleLevel.updatedBy=this.userName,this.workFlowtService.deleteRole(this.sourceUserRoleLevel.userRoleLevelId).subscribe(t=>this.saveCompleted(this.sourceUserRoleLevel),t=>this.saveFailedHelper(t))}saveFailedHelper(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured while saving your changes:",w.d.error,t),this.alertService.showStickyMessage(t,null,w.d.error)}editItemAndCloseModel(){this.isSaving=!0,0==this.isEditMode?(this.sourceUserRoleLevel.createdBy=this.userName,this.sourceUserRoleLevel.updatedBy=this.userName,this.sourceUserRoleLevel.masterCompanyId=1,this.sourceUserRoleLevel.description=this.description,this.sourceUserRoleLevel.name=this.name,this.workFlowtService.newRole(this.sourceUserRoleLevel).subscribe(t=>{this.roleInfo=t,null!=t&&this.saveManagement(t.userRoleLevelId,this.selectedNodeTest)}),this.loadData()):(this.sourceUserRoleLevel.updatedBy=this.userName,this.sourceUserRoleLevel.description=this.description,this.sourceUserRoleLevel.name=this.name,this.sourceUserRoleLevel.masterCompanyId=1,this.workFlowtService.updateRole(this.sourceUserRoleLevel).subscribe(t=>this.saveCompleted(this.sourceUserRoleLevel),t=>this.saveFailedHelper(t)),this.workFlowtService.deleteManagementRole(this.selectedNodeTest).subscribe(t=>{}),this.saveManagement(this.selectedNodeTest[0].data.userRoleLevelId,this.selectedNodeTest),this.selectedNodeTest=[]),this.modal.close(),this.loadData()}saveCompleted(t){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",w.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",w.d.success),this.loadData()}dismissModel(){this.isDeleteMode=!1,this.isEditMode=!1,this.modal.close(),this.loadData()}onHistoryLoadSuccessful(t,e){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.auditHisory=t,this.modal=this.modalService.open(e,{size:"lg"}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}handleChange(t,e){}partnmId(t){}};U.ctorParameters=()=>[{type:I.a},{type:C.a},{type:k.a},{type:M.HttpClient},{type:y.a},{type:i.ChangeDetectorRef},{type:d.Router},{type:R.a},{type:S.c},{type:S.b},{type:n.FormBuilder},{type:w.b},{type:m.b},{type:f.a}],r.b([Object(i.ViewChild)(g.a,{static:!1})],U.prototype,"paginator",void 0),r.b([Object(i.ViewChild)(v.a,{static:!1})],U.prototype,"sort",void 0),U=r.b([Object(i.Component)({selector:"app-roles-management-structure",template:r.c(s("IsWz")).default,animations:[b.a],styles:[r.c(s("N6KH")).default]})],U);var D=s("MKys"),L=s("24Yq"),P=s("vaEg");class A{}class N{}class V{}let T=class{constructor(t,e,s,r){this.messageService=t,this.authService=e,this.alertService=s,this.userRoleService=r,this.sortedHierarchy=[],this.selectedHierarchy=[]}ngOnInit(){this.getAllModuleHierarchies(),this.currentUserRole=new A,this.currentUserRole.rolePermissions=[],this.pages=[]}getAllModuleHierarchies(){this.userRoleService.getAllModuleHierarchies().subscribe(t=>{this.moduleHierarchy=t[0],this.sortModules()})}sortModules(){var t=this.moduleHierarchy.filter((function(t){return null==t.parentId}));if(null!=t&&t.length>0)for(let e of t)e.level=0,e.visible=!0,e.rolePermission=new N,e.rolePermission.canAdd=!1,e.rolePermission.canView=!1,e.rolePermission.canDelete=!1,e.rolePermission.canUpdate=!1,this.sortedHierarchy.push(e),this.hasChild(e)}resetRolePermission(t){t.canAdd=!1,t.canView=!1,t.canDelete=!1,t.canUpdate=!1}hasChild(t){var e=this.moduleHierarchy.filter((function(e){return e.parentId==t.id}));if(null!=e&&e.length>0){t.hasChildren=!0;for(let s of e)s.level=t.level+1,s.visible=!1,s.parentId=t.id,s.rolePermission=new N,this.resetRolePermission(s.rolePermission),this.sortedHierarchy.push(s),this.hasChild(s)}}showChildModules(t,e){if(!t.isPage){var s=!1,r="td"==e.target.localName?e.target.children[0]:e.target;if(r.classList.contains("fa-caret-down")?(r.classList.remove("fa-caret-down"),r.classList.add("fa-caret-right"),s=!0):(r.classList.remove("fa-caret-right"),r.classList.add("fa-caret-down")),s)this.sortedHierarchy.filter((function(e){return e.parentId==t.id})).forEach((function(t){t.visible=s}));else this.pagesToHide=[],this.loadAllChildModule(t.id),this.pagesToHide.forEach((function(t){t.visible=s}))}}setPermissionByType(t,e,s){"canView"==e&&(t.rolePermission.canView=s),"canAdd"==e&&(t.rolePermission.canAdd=s),"canUpdate"==e&&(t.rolePermission.canUpdate=s),"canDelete"==e&&(t.rolePermission.canDelete=s)}uncheckAllParentModule(t,e){var s=this.sortedHierarchy.filter((function(e){return e.id==t&&0==e.isPage}))[0];this.setPermissionByType(s,e,!1),null!=s.parentId&&this.uncheckAllParentModule(s.parentId,e)}loadAllChildModule(t){var e=this.sortedHierarchy.filter((function(e){return e.parentId==t}));for(let s of e)this.pagesToHide.push(s),null==s.parentId||s.isPage||this.loadAllChildModule(s.id)}permissionChecked(t,e,s){var r=t.target.checked;if(0==r&&(this.setPermissionByType(e,s,r),null!=e.parentId&&this.uncheckAllParentModule(e.parentId,s)),e.isPage)this.setPermissionByType(e,s,r),this.setModuleHierarchyPermission(e);else{this.setPermissionByType(e,s,r),this.pages=[],this.hasPages(e,s,r);for(let t of this.pages)this.setModuleHierarchyPermission(t)}console.log(this.currentUserRole.rolePermissions)}setModuleHierarchyPermission(t){var e=this.currentUserRole.rolePermissions.filter((function(e){return e.moduleHierarchyMasterId==t.id}))[0];if(null!=e){(r=Object.assign({},t.rolePermission)).moduleHierarchyMasterId=t.id;var s=this.currentUserRole.rolePermissions.indexOf(e);this.updatePermission(this.currentUserRole.rolePermissions[s],t.rolePermission)}else{var r;(r=Object.assign({},t.rolePermission)).moduleHierarchyMasterId=t.id,this.currentUserRole.rolePermissions.push(r)}}updatePermission(t,e){t.canView=e.canView,t.canAdd=e.canAdd,t.canUpdate=e.canUpdate,t.canDelete=e.canDelete}hasPages(t,e,s){var r=this.sortedHierarchy.filter((function(e){return e.parentId==t.id}));if(null!=r&&r.length>0)for(let i of r)this.setPermissionByType(i,e,s),i.isPage&&this.pages.push(i),this.hasPages(i,e,s)}addUserRole(){this.userRoleService.add(this.currentUserRole).subscribe(t=>{this.alertService.showMessage("User Role",this.currentUserRole.name+" Role added successfully.",w.d.success);for(let e of this.sortedHierarchy)this.resetRolePermission(e.rolePermission);this.currentUserRole=new A,this.currentUserRole.rolePermissions=[],this.pages=[]},t=>{var e="";e=t.error.constructor==Array?t.error[0].errorMessage:t.error.Message,this.alertService.showMessage("User Role",e,w.d.error)})}};T.ctorParameters=()=>[{type:L.MessageService},{type:R.a},{type:w.b},{type:P.a}],T=r.b([Object(i.Component)({selector:"app-roles-setup",template:r.c(s("REh4")).default,animations:[b.a]})],T);let H=class{constructor(t,e,s,r){this.messageService=t,this.authService=e,this.alertService=s,this.userRoleService=r,this.pageTitle="User Role Mapping"}ngOnInit(){this.loadUserAndRoles(),this.selectedUserId="0"}loadUserAndRoles(){this.getAllUsers().subscribe(t=>{this.Users=t[0],this.getAllUserRoles().subscribe(t=>{this.UserRoles=t[0]})})}getAllUsers(){return this.userRoleService.getAllUsers()}getAllUserRoles(){return this.userRoleService.getAllUserRole()}onUserChange(t){this.selectedUserId=t,this.getUserRoleByUserId()}getUserRoleByUserId(){this.userRoleService.getUserRoleByUserId(this.selectedUserId).subscribe(t=>{this.selectedRoles=[];for(let s of t[0]){var e=this.UserRoles.filter((function(t){return t.id==s.id}))[0];this.selectedRoles.push(e)}},t=>{var e="";e=t.error.constructor==Array?t.error[0].errorMessage:t.error.Message,this.alertService.showMessage(this.pageTitle,e,w.d.error)})}assignRole(){if("0"!=this.selectedUserId)if(this.selectedRoles.length>0){let t=[];for(let e of this.selectedRoles){let s=new V;s.userId=this.selectedUserId,s.userRoleId=e.id,t.push(s)}this.userRoleService.assignRoleToUser(t).subscribe(t=>{this.alertService.showMessage(this.pageTitle,"Roles assigned successfully",w.d.success),this.selectedUserId="0",this.selectedRoles=[]},t=>{var e="";e=t.error.constructor==Array?t.error[0].errorMessage:t.error.Message,this.alertService.showMessage(this.pageTitle,e,w.d.error)})}else this.alertService.showMessage("User Role Mapping","Atleast one role needs to be assigned",w.d.error);else this.alertService.showMessage("User Role Mapping","Please select User Name",w.d.error)}};H.ctorParameters=()=>[{type:L.MessageService},{type:R.a},{type:w.b},{type:P.a}],H=r.b([Object(i.Component)({selector:"app-roles-mapping",template:r.c(s("B7lA")).default,animations:[b.a]})],H);let B=class{constructor(t,e,s,r){this.messageService=t,this.authService=e,this.alertService=s,this.userRoleService=r,this.sortedHierarchy=[],this.selectedHierarchy=[],this.userRoles=[]}ngOnInit(){this.getAllModuleHierarchies(),this.getAllUserRoles(),this.currentUserRole=new A,this.currentUserRole.rolePermissions=[],this.pages=[],this.currentUserRole.id=0}getAllModuleHierarchies(){this.userRoleService.getAllModuleHierarchies().subscribe(t=>{this.moduleHierarchy=t[0],this.sortModules()})}sortModules(){this.sortedHierarchy=[];var t=this.moduleHierarchy.filter((function(t){return null==t.parentId}));if(null!=t&&t.length>0)for(let e of t)e.level=0,e.visible=!0,e.rolePermission=new N,e.rolePermission.canAdd=!1,e.rolePermission.canView=!1,e.rolePermission.canDelete=!1,e.rolePermission.canUpdate=!1,this.sortedHierarchy.push(e),this.hasChild(e)}hasChild(t){var e=this.moduleHierarchy.filter((function(e){return e.parentId==t.id}));if(null!=e&&e.length>0){t.hasChildren=!0;for(let s of e)s.level=t.level+1,s.visible=!0,s.parentId=t.id,s.rolePermission=new N,this.resetRolePermission(s.rolePermission),this.sortedHierarchy.push(s),this.hasChild(s)}}resetRolePermission(t){t.canAdd=!1,t.canView=!1,t.canDelete=!1,t.canUpdate=!1}showChildModules(t,e){if(!t.isPage){var s=!1,r="td"==e.target.localName?e.target.children[0]:e.target;if(r.classList.contains("fa-caret-down")?(r.classList.remove("fa-caret-down"),r.classList.add("fa-caret-right"),s=!0):(r.classList.remove("fa-caret-right"),r.classList.add("fa-caret-down")),s)this.sortedHierarchy.filter((function(e){return e.parentId==t.id})).forEach((function(t){t.visible=s}));else this.pagesToHide=[],this.loadAllChildModule(t.id),this.pagesToHide.forEach((function(t){t.visible=s}))}}getAllUserRoles(){return this.userRoleService.getAllUserRole().subscribe(t=>{this.userRoles=t[0]})}userRoleChanged(t){if(this.sortModules(),this.currentUserRole.rolePermissions=[],0!=this.currentUserRole.id){let t=this.currentUserRole.id,e=this.userRoles.filter((function(e){return e.id==t}))[0];this.currentUserRole.name=e.name;for(let s of this.sortedHierarchy){let t=e.rolePermissions.filter((function(t){return t.moduleHierarchyMasterId==s.id}));null!=t&&t.length>0?(s.rolePermission.canAdd=t[0].canAdd,s.rolePermission.canUpdate=t[0].canUpdate,s.rolePermission.canDelete=t[0].canDelete,s.rolePermission.canView=t[0].canView,t[0].id=0,this.currentUserRole.rolePermissions.push(Object.assign({},t[0]))):(s.rolePermission.canAdd=!1,s.rolePermission.canUpdate=!1,s.rolePermission.canDelete=!1,s.rolePermission.canView=!1)}}}setPermissionByType(t,e,s){"canView"==e&&(t.rolePermission.canView=s),"canAdd"==e&&(t.rolePermission.canAdd=s),"canUpdate"==e&&(t.rolePermission.canUpdate=s),"canDelete"==e&&(t.rolePermission.canDelete=s)}uncheckAllParentModule(t,e){var s=this.sortedHierarchy.filter((function(e){return e.id==t&&0==e.isPage}))[0];this.setPermissionByType(s,e,!1),null!=s.parentId&&this.uncheckAllParentModule(s.parentId,e)}loadAllChildModule(t){var e=this.sortedHierarchy.filter((function(e){return e.parentId==t}));for(let s of e)this.pagesToHide.push(s),null==s.parentId||s.isPage||this.loadAllChildModule(s.id)}permissionChecked(t,e,s){var r=t.target.checked;if(0==r&&(this.setPermissionByType(e,s,r),null!=e.parentId&&this.uncheckAllParentModule(e.parentId,s)),e.isPage)this.setPermissionByType(e,s,r),this.setModuleHierarchyPermission(e);else{this.setPermissionByType(e,s,r),this.pages=[],this.hasPages(e,s,r);for(let t of this.pages)this.setModuleHierarchyPermission(t)}console.log(this.currentUserRole.rolePermissions)}setModuleHierarchyPermission(t){var e=this.currentUserRole.rolePermissions.filter((function(e){return e.moduleHierarchyMasterId==t.id}))[0];if(null!=e){(r=Object.assign({},t.rolePermission)).moduleHierarchyMasterId=t.id;var s=this.currentUserRole.rolePermissions.indexOf(e);this.updatePermission(this.currentUserRole.rolePermissions[s],t.rolePermission)}else{var r;(r=Object.assign({},t.rolePermission)).userRoleId=this.currentUserRole.id,r.moduleHierarchyMasterId=t.id,r.id=0,this.currentUserRole.rolePermissions.push(r)}}updatePermission(t,e){t.canView=e.canView,t.canAdd=e.canAdd,t.canUpdate=e.canUpdate,t.canDelete=e.canDelete}hasPages(t,e,s){var r=this.sortedHierarchy.filter((function(e){return e.parentId==t.id}));if(null!=r&&r.length>0)for(let i of r)this.setPermissionByType(i,e,s),i.isPage&&this.pages.push(i),this.hasPages(i,e,s)}UpdateUserRole(){this.userRoleService.update(this.currentUserRole).subscribe(t=>{this.alertService.showMessage("User Role",this.currentUserRole.name+" Role updated successfully.",w.d.success);for(let e of this.sortedHierarchy)this.resetRolePermission(e.rolePermission);this.currentUserRole=new A,this.currentUserRole.id=0,this.currentUserRole.rolePermissions=[],this.pages=[],this.userRoleService.getAllUserRole().subscribe(t=>{this.userRoles=t[0]})},t=>{var e="";e=t.error.constructor==Array?t.error[0].errorMessage:t.error.Message,this.alertService.showMessage("User Role",e,w.d.error)})}};B.ctorParameters=()=>[{type:L.MessageService},{type:R.a},{type:w.b},{type:P.a}],B=r.b([Object(i.Component)({selector:"edit-app-roles",template:r.c(s("K+Zu")).default,animations:[b.a]})],B);const E=[{path:"rolespages",component:c,children:[{path:"app-roles-list",component:h,data:{title:"Roles List"}},{path:"app-roles-list-by-module",component:u,data:{title:"Roles List By Module"}},{path:"app-roles-setup",component:T,data:{title:"Roles Setup"}},{path:"edit-app-roles",component:B,data:{title:"Edit Roles"}},{path:"app-roles-management-structure",component:U,data:{title:"Roles Management Structure"}},{path:"app-roles-mapping",component:H,data:{title:"User Role Management"}}]}];let F=class{};F=r.b([Object(i.NgModule)({imports:[d.RouterModule.forChild(E)],exports:[d.RouterModule],providers:[R.a,D.a]})],F);var O=s("pjuo"),W=s("Ph3x");let j=class{constructor(t,e,s,r,i,l,n,a,o,d){this.itemMasterService=t,this.employeeService=e,this.messageService=s,this.authService=r,this._fb=i,this.alertService=l,this.modalService=n,this.activeModal=a,this.dialog=o,this.masterComapnyService=d,this.allRolesInfoByRoleId=[],this.selectedRoles=[],this.tagNameCollection=[],this.modelValue=!1,this.display=!1,this.showicon=!1,this.treeindex=1,this.header=!0,this.headerofMS="",this.childCollection=[],this.sourceLegalEntity={},this.allComapnies=[],this.allATAMaininfo=[],this.isEditMode=!1,this.sourceAction=[],this.GeneralInformationValue=!0,this.LockboxValue=!1,this.domesticWireValue=!1,this.internationalValue=!1,this.GeneralInformationStyle=!0,this.LockboxStyle=!1,this.domesticWireStyle=!1,this.internationalStyle=!1,this.allWorkFlows=[],this.dataSource=new p.a}ngOnInit(){this.loadManagementdata()}SetViewValue(t,e){if(e.node){let s=this.updateChildValue([e.node],t,e.node.data[t]);for(let t=0;t<s.length;t++){let e=s[t],r=!1;for(let t=0;t<this.selectedRoles.length;t++)this.selectedRoles[t].uiRoleEntityId==e.uiRoleEntityId&&(this.selectedRoles[t]=e,r=!0);r||this.selectedRoles.push(e)}}else{let s=this.updateChildValue([e],t,e.data[t]);for(let t=0;t<s.length;t++){let e=s[t],r=!1;for(let t=0;t<this.selectedRoles.length;t++)this.selectedRoles[t].uiRoleEntityId==e.uiRoleEntityId&&(this.selectedRoles[t]=e,r=!0);r||this.selectedRoles.push(e)}}console.log(this.selectedRoles)}updateChildValue(t,e,s){let r=[];for(let i=0;i<t.length;i++)t[i].data&&(t[i].data[e]=s,r.push(t[i].data)),t[i].children&&(r=r.concat(this.updateChildValue(t[i].children,e,s)));return r}ngAfterViewInit(){}contextMenu(t,e){t&&e.hide()}loadMasterCompanies(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.masterComapnyService.getMasterCompanies().subscribe(t=>this.onDataMasterCompaniesLoadSuccessful(t[0]),t=>this.onDataLoadFailed(t))}expandAll(t){this.gridData.map(e=>{e.expanded=t})}loadManagementdata(){this.alertService.startLoadingMessage(),this.loadingIndicator=!0,this.employeeService.getRolesSetupData().subscribe(t=>this.onManagemtntdataLoad(t[0]),t=>this.onDataLoadFailed(t)),this.employeeService.getUserRolelevel().subscribe(t=>this.onUserLevelRolelist(t[0]),t=>this.onDataLoadFailed(t)),this.cols=[{field:"code",header:"Code"},{field:"description",header:"Description"},{field:"createdBy",header:"Created By"},{field:"updatedBy",header:"Updated By"},{field:"updatedDate",header:"Updated Date"},{field:"createdDate",header:"createdDate"}],this.selectedColumns=this.cols}nodeSelect(t){this.messageService.add({severity:"info",summary:"Node Selected",detail:t.node.data.name})}nodeUnselect(t){this.messageService.add({severity:"info",summary:"Node Unselected",detail:t.node.data.name})}onManagemtntdataLoad(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.dataSource.data=t,this.allManagemtninfo=t;for(let e=0;e<this.allManagemtninfo.length;e++)null!=this.allManagemtninfo[e].tagName&&this.tagNameCollection.push(this.allManagemtninfo[e]);this.allManagemtninfo&&(this.gridData=this.makeNestedObj(this.allManagemtninfo,null)),this.cols1=[{field:"entityName",header:"Entity Name"},{field:"moduleName",header:"Module Name"},{field:"screenName",header:"Screen Name"},{field:"fieldName",header:"Field Name"}]}onUserLevelRolelist(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allUserRoleLevelList=t}openDelete(t,e){this.isEditMode=!1,this.isDeleteMode=!0,this.sourceAction=e,this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}deleteItemAndCloseModel(){}makeNestedObj(t,e){var s=[];for(var r in t)if(t[r].parentId==e){var i=this.makeNestedObj(t,t[r].uiRoleEntityId);t[r]={data:t[r]},i.length&&(t[r].children=i),s.push(t[r])}return s}GeneralInformation(){this.GeneralInformationValue=!0,this.LockboxValue=!1,this.domesticWireValue=!1,this.internationalValue=!1,this.ACHValue=!1,this.GeneralInformationStyle=!0,this.LockboxStyle=!1,this.domesticWireStyle=!1,this.internationalStyle=!1,this.ACHStyle=!1}Lockbox(){this.GeneralInformationValue=!1,this.LockboxValue=!0,this.domesticWireValue=!1,this.internationalValue=!1,this.ACHValue=!1,this.GeneralInformationStyle=!1,this.LockboxStyle=!0,this.domesticWireStyle=!1,this.internationalStyle=!1,this.ACHStyle=!1}DomesticWire(){this.GeneralInformationValue=!1,this.LockboxValue=!1,this.domesticWireValue=!0,this.internationalValue=!1,this.ACHValue=!1,this.GeneralInformationStyle=!1,this.LockboxStyle=!1,this.domesticWireStyle=!0,this.internationalStyle=!1,this.ACHStyle=!1}InternationalWire(){this.GeneralInformationValue=!1,this.LockboxValue=!1,this.domesticWireValue=!1,this.internationalValue=!0,this.ACHValue=!1,this.GeneralInformationStyle=!1,this.LockboxStyle=!1,this.domesticWireStyle=!1,this.internationalStyle=!0,this.ACHStyle=!1}ACH(){this.GeneralInformationValue=!1,this.LockboxValue=!1,this.domesticWireValue=!1,this.internationalValue=!1,this.ACHValue=!0,this.GeneralInformationStyle=!1,this.LockboxStyle=!1,this.domesticWireStyle=!1,this.internationalStyle=!1,this.ACHStyle=!0}showDomesticWire(){this.DomesticWire()}openContentEdit(t,e){1==e.isLastChild&&(this.sourceLegalEntity.isAssignable=!0),this.sourceLegalEntity=e,this.modal1=this.modalService.open(t,{size:"sm"}),this.modal1.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}open(t){this.headerofMS="Add Root Entity",this.sourceLegalEntity={},this.isEditMode=!1,this.isDeleteMode=!1,this.isSaving=!0,this.loadMasterCompanies(),this.sourceLegalEntity.isActive=!0,this.entityName="",this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}onDataMasterCompaniesLoadSuccessful(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1,this.allComapnies=t}onDataLoadFailed(t){this.alertService.stopLoadingMessage(),this.loadingIndicator=!1}get userName(){return this.authService.currentUser?this.authService.currentUser.userName:""}getRolesyuserRolelevelId(t){this.itemMasterService.getRolesDataByUserId(t).subscribe(t=>this.onRolesLoadSuccessfull(t[0]),t=>this.onDataLoadFailed(t))}onRolesLoadSuccessfull(t){if(this.selectedRoles=[],this.allRolesInfoByRoleId=t,this.allRolesInfoByRoleId.length>0)for(let e=0;e<this.allManagemtninfo.length;e++)for(let t=0;t<this.allRolesInfoByRoleId.length;t++)if(this.allManagemtninfo[e].data.uiRoleEntityId==this.allRolesInfoByRoleId[t].uiRoleEntityId){if(console.log(this.allRolesInfoByRoleId[t]),"Add"==this.allRolesInfoByRoleId[t].permittedEditActionDescription){this.allManagemtninfo[e].data.isAdd=!0;let s="isAdd";this.allManagemtninfo[e].data.userRoleLevelId=this.allRolesInfoByRoleId[t].userRoleLevelId,this.SetViewValue(s,this.allManagemtninfo[e])}if("View"==this.allRolesInfoByRoleId[t].permittedEditActionDescription){this.allManagemtninfo[e].data.isViewed=!0;let s="isViewed";this.allManagemtninfo[e].data.userRoleLevelId=this.allRolesInfoByRoleId[t].userRoleLevelId,this.SetViewValue(s,this.allManagemtninfo[e])}if("Update"==this.allRolesInfoByRoleId[t].permittedEditActionDescription){this.allManagemtninfo[e].data.isUpdate=!0;let s="isUpdate";this.allManagemtninfo[e].data.userRoleLevelId=this.allRolesInfoByRoleId[t].userRoleLevelId,this.SetViewValue(s,this.allManagemtninfo[e])}if("Delete"==this.allRolesInfoByRoleId[t].permittedEditActionDescription){this.allManagemtninfo[e].data.isDelete=!0;let s="isDelete";this.allManagemtninfo[e].data.userRoleLevelId=this.allRolesInfoByRoleId[t].userRoleLevelId,this.SetViewValue(s,this.allManagemtninfo[e])}}}editItemAndCloseModel(){for(let t=0;t<this.selectedRoles.length;t++)this.selectedRoles[t].createdBy=this.userName,this.selectedRoles[t].updatedBy=this.userName,this.selectedRoles[t].userRoleLevelId=this.userRolelevelId,this.selectedRoles[t].masterCompanyId=1,this.employeeService.AddRolesData(this.selectedRoles[t]).subscribe(t=>{});this.saveSuccessHelper(this.selectedRoles[0])}saveSuccessHelper(t){this.isSaving=!1,this.alertService.showMessage("Success","Action was created successfully",w.d.success)}saveCompleted(t){this.isSaving=!1,1==this.isDeleteMode?(this.alertService.showMessage("Success","Action was deleted successfully",w.d.success),this.isDeleteMode=!1):this.alertService.showMessage("Success","Action was edited successfully",w.d.success)}saveFailedHelper(t){this.isSaving=!1,this.alertService.stopLoadingMessage(),this.alertService.showStickyMessage("Save Error","The below errors occured whilst saving your changes:",w.d.error,t),this.alertService.showStickyMessage(t,null,w.d.error)}dismissModel(){this.modal&&this.modal.close(),this.modal1&&this.modal1.close()}onNodeExpand(t){null==t.node.parent&&(this.treeindex,this.treeindex++,4==this.treeindex&&(this.showicon=!0,alert(this.showicon)))}openEdit(t,e){this.headerofMS=e.code,this.sourceLegalEntity={},this.isSaving=!0,this.loadMasterCompanies(),this.sourceLegalEntity.parentId=e.managementStructureId,this.loadMasterCompanies(),this.modal=this.modalService.open(t,{size:"sm"}),this.modal.result.then(()=>{console.log("When user closes")},()=>{console.log("Backdrop click")})}};j.ctorParameters=()=>[{type:W.a},{type:O.a},{type:L.MessageService},{type:R.a},{type:n.FormBuilder},{type:w.b},{type:S.c},{type:S.b},{type:m.b},{type:f.a}],j=r.b([Object(i.Component)({selector:"app-roles-setup",template:r.c(s("qxN5")).default,animations:[b.a],styles:[r.c(s("zgjS")).default]})],j);var G=s("SVse"),z=s("8YFm"),$=s("MCl+"),_=s("CYTX"),J=s("bv+N"),K=s("Jfay"),Y=s("I0ai"),q=s("3/N/"),Z=s("sa3O"),Q=s("ByPc"),X=s("NGzr"),tt=s("FfGd"),et=s("ldMm"),st=s("wB/n"),rt=s("gxFD");s.d(e,"RolesPagesModule",(function(){return it}));let it=class{};it=r.b([Object(i.NgModule)({imports:[l.a,n.FormsModule,n.ReactiveFormsModule,o.a,a.b,G.CommonModule,z.TableModule,$.ButtonModule,_.SelectButtonModule,J.InputTextModule,K.MultiSelectModule,F,Y.InputSwitchModule,q.CheckboxModule,Z.AutoCompleteModule,Q.GMapModule,tt.RadioButtonModule,X.FileUploadModule,et.TreeTableModule,st.TreeModule],declarations:[c,h,u,j,U,T,H,B],providers:[rt.a,P.a],entryComponents:[]})],it)},IsWz:function(t,e,s){"use strict";s.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n\t<div class="right_col" role="main">\r\n\t\t<div class="x_panel">\r\n\t\t\t<div class="x_content">\r\n\r\n\t\t\t\t<h4 class="page-heading clr-green">Role to Management Structure Linking</h4>\r\n\t\t\t\t<span class="help-icon" data-original-title="Help" data-toggle="tooltip"><i class="fa fa-info" data-toggle="modal" data-target="#help-popup"></i></span>\r\n\t\t\t\t<p-table #dt [value]="allRoles" [rows]="20" [paginator]="true" [metaKeySelection]="true" [pageLinks]="3" [rowsPerPageOptions]="[20,50,100]" [columns]="selectedColumns" selectionMode="multiple" [resizableColumns]="true" [reorderableColumns]="true">\r\n\t\t\t\t\t<ng-template pTemplate="caption">\r\n\t\t\t\t\t\t<div style="text-align: right">\r\n\t\t\t\t\t\t\t<p-multiSelect [options]="cols" [(ngModel)]="selectedColumns" optionLabel="header"\r\n\t\t\t\t\t\t\t\t\t\t   selectedItemsLabel="{0} columns selected" [style]="{minWidth: \'200px\'}" defaultLabel="Choose Columns" style="float:left"></p-multiSelect>\r\n\t\t\t\t\t\t\t\x3c!--Filter Global Search do--\x3e\r\n\t\t\t\t\t\t\t<div class="inner-addon right-addon w200 inline-block">\r\n\t\t\t\t\t\t\t\t<i class="fa fa-search"></i>\r\n\t\t\t\t\t\t\t\t<input type="text" pInputText size="50" class="form-control ui-autocomplete-input" (input)="dt.filterGlobal($event.target.value, \'contains\')" placeholder=" Filter">\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<a (click)="open(contentEdit)" matTooltip="Add Action" class="btn btn-success nobg"><span><i class="fa fa-plus"></i></span></a>\r\n\r\n\t\t\t\t\t\t\t\x3c!--<app-company></app-company>--\x3e\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ng-template>\r\n\r\n\t\t\t\t\t<ng-template pTemplate="header" let-columns>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th *ngFor="let col of columns" pResizableColumn pReorderableColumn [pSortableColumn]="col.field">\r\n\t\t\t\t\t\t\t\t{{col.header}}\r\n\t\t\t\t\t\t\t\t<p-sortIcon [field]="col.field"></p-sortIcon>\r\n\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t<th></th>\r\n\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</ng-template>\r\n\r\n\t\t\t\t\t<ng-template pTemplate="body" let-rowData let-columns="columns">\r\n\t\t\t\t\t\t<tr [pSelectableRow]="rowData">\r\n\r\n\t\t\t\t\t\t\t<td *ngFor="let col of columns" [ngSwitch]="col.field" class="ui-resizable-column" pReorderableRowHandle>\r\n\t\t\t\t\t\t\t\t{{col.field == \'createdDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\'):rowData[col.field] && col.field == \'updatedDate\'?  (rowData[col.field] | date: \'MM/dd/yyyy h:mm:ss a\'):rowData[col.field]}}\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==true" matTooltip="Active" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==false" matTooltip="In Active" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\t\t\t\t\t\t\t\t<p-inputSwitch *ngIf="rowData[\'isActive\']==null" matTooltip="In Active" onLabel="on" offLabel="off" (onChange)="handleChange(rowData,$event)" [(ngModel)]="rowData[\'isActive\']"></p-inputSwitch>\r\n\r\n\t\t\t\t\t\t\t\t<span data-toggle="modal" data-target="#view"> <a class="btn btn-info boxed-float-btn nobg" data-toggle="tooltip" (click)="openView(view,rowData)" title="View"><i class="fa fa-eye"></i></a> </span>\r\n\r\n\t\t\t\t\t\t\t\t<button class="btn-edit" mat-icon-button (click)="openEdit(contentEdit,rowData)" matTooltip="Edit">\r\n\t\t\t\t\t\t\t\t\t<mat-icon>edit</mat-icon>\r\n\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t<button class="btn-delete" mat-icon-button matTooltip="Delete" (click)="openDelete(content,rowData)">\r\n\t\t\t\t\t\t\t\t\t<mat-icon color="warn">delete</mat-icon>\r\n\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t\t<button class="btn-history" mat-icon-button matTooltip="History">\r\n\t\t\t\t\t\t\t\t\t<mat-icon color="green">history</mat-icon>\r\n\t\t\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t</tr>\r\n\r\n\t\t\t\t\t</ng-template>\r\n\t\t\t\t</p-table>\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</div>\r\n\t</div>\r\n</div>\r\n\r\n<ng-template #contentEdit let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n\t<div class="modal-header">\r\n\t\t<h4 class="modal-title" *ngIf="isEditMode">Edit Management Structure</h4>\r\n\t\t<h4 class="modal-title" *ngIf="!isEditMode">Add Management Structure</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\r\n\t<div class="modal-body">\r\n\t\t<form #userForm="ngForm" class="form-horizontal" (ngSubmit)="editItemAndCloseModel()">\r\n\t\t\t<div class="row">\r\n\r\n\t\t\t\t<div class="col-6">\r\n\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t<label for="actionname" class="control-label">Role Name<span class="clr-red">*</span></label>\r\n\t\t\t\t\t\t<p-autoComplete (onSelect)="partnmId($event)" [(ngModel)]="description" [ngModelOptions]="{standalone: true}" (onKeyUp)=eventHandler($event) [suggestions]="localCollection" [size]="30"\r\n\t\t\t\t\t\t\t\t\t\t[minLength]="2" [dropdown]="true">\r\n\t\t\t\t\t\t</p-autoComplete>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class="form-group">\r\n\t\t\t\t\t\t<label for="" class="control-label">Memo</label>\r\n\t\t\t\t\t\t<div class="control-data">\r\n\t\t\t\t\t\t\t<input placeholder="Memo" minlength="2" required>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class="clear"></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class="col-6">\r\n\t\t\t\t\t<p-treeTable [value]="gridData" [columns]="cols1" [(selection)]="selectedNodeTest" selectionMode="checkbox">\r\n\t\t\t\t\t\t<ng-template pTemplate="header" let-columns>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th *ngFor="let col of columns">\r\n\t\t\t\t\t\t\t\t\t{{col.header}}\r\n\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template pTemplate="body" let-rowNode let-rowData="rowData" let-columns="columns">\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td *ngFor="let col of columns; let i = index">\r\n\t\t\t\t\t\t\t\t\t<p-treeTableToggler [rowNode]="rowNode" *ngIf="i == 0"></p-treeTableToggler>\r\n\t\t\t\t\t\t\t\t\t<p-treeTableCheckbox [value]="rowNode" *ngIf="i == 0"></p-treeTableCheckbox>\r\n\t\t\t\t\t\t\t\t\t{{rowData[col.field]}}\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template pTemplate="summary">\r\n\t\t\t\t\t\t\t<div style="text-align: left">\r\n\t\t\t\t\t\t\t\tSelected Nodes: <span *ngIf="!selectedNodeTest || selectedNodeTest.length === 0" style="font-weight: normal">none</span>\r\n\t\t\t\t\t\t\t\t<ul *ngIf="selectedNodeTest && selectedNodeTest.length">\r\n\t\t\t\t\t\t\t\t\t<li *ngFor="let node of selectedNodeTest">\r\n\t\t\t\t\t\t\t\t\t\t<span style="font-weight: normal">{{\'Management Id:\'+node.managementStructureId }}</span>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</p-treeTable>\r\n\t\t\t\t\t\x3c!-- Check box Management Date End --\x3e\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\t\t\t<div class="modal-footer">\r\n\t\t\t\t<button class="btn btn-success" [disabled]="disableSave">Submit</button>\r\n\t\t\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n</ng-template>\r\n\x3c!-- Delete --\x3e\r\n<ng-template #content let-c="close" let-d="dismiss" data-backdrop="static">\r\n\t<div class="modal-header">\r\n\t\t<h4 class="modal-title">Are You Sure Want to Delete ?</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\t</div>\r\n\r\n\t<div class="modal-footer">\r\n\t\t<button type="button" class="btn btn-success" (click)="deleteItemAndCloseModel()">Yes</button>\r\n\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">No</button>\r\n\t</div>\r\n\r\n</ng-template>\r\n\x3c!-- History --\x3e\r\n<ng-template #contentHist let-c="close" let-d="dismiss" style="width:auto" data-backdrop="static">\r\n\t<div class="modal-header">\r\n\r\n\t\t<h4 class="modal-title">History of Role Management Structure</h4>\r\n\t\t<button type="button" class="close" aria-label="Close" (click)="dismissModel()">\r\n\t\t\t<span aria-hidden="true">&times;</span>\r\n\t\t</button>\r\n\r\n\r\n\t</div>\r\n\t<div class="modal-body">\r\n\r\n\t\t<table class="table table-bordered">\r\n\t\t\t<thead>\r\n\t\t\t\t<tr>\r\n\t\t\t\t\t<th>userRoleLevelId</th>\r\n\t\t\t\t\t<th>Description</th>\r\n\t\t\t\t\t<th>Previous Value</th>\r\n\t\t\t\t\t<th>New Value</th>\r\n\t\t\t\t\t<th>Last Updated By</th>\r\n\t\t\t\t\t<th>Last Updated Time</th>\r\n\t\t\t\t</tr>\r\n\t\t\t</thead>\r\n\t\t\t<tr *ngFor="let audit of auditHisory">\r\n\t\t\t\t<td>{{audit.auditHistoryId}}</td>\r\n\t\t\t\t<td>{{audit.columnName}}</td>\r\n\t\t\t\t<td>{{audit.previousValue}}</td>\r\n\t\t\t\t<td>{{audit.newValue}}</td>\r\n\t\t\t\t<td>{{audit.updatedBy}}</td>\r\n\t\t\t\t<td>{{audit.updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</td>\r\n\t\t\t</tr>\r\n\t\t</table>\r\n\t</div>\r\n\t<div class="modal-footer">\r\n\t\t<button type="button" class="btn btn-danger" (click)="dismissModel()">Close</button>\r\n\t</div>\r\n</ng-template>\r\n\x3c!-- View --\x3e\r\n<ng-template #view class="modal fade " id="view" role="dialog" data-backdrop="static">\r\n\r\n\t<div class="modal-content">\r\n\t\t<div class="modal-header">\r\n\t\t\t<button type="button" class="close" (click)="dismissModel()" data-dismiss="modal" id="" name="">\xd7</button>\r\n\t\t\t<h4 class="modal-title">Role Management Structure Details</h4>\r\n\t\t</div>\r\n\t\t<div class="modal-body viewform">\r\n\t\t\t<div class="col-sm-6">\r\n\t\t\t\t<p><span class="label"><b> Description : </b></span><span class="value">{{description}}</span></p>\r\n\t\t\t\t<p><span class="label"><b>Memo: </b></span><span class="value"></span></p>\r\n\t\t\t\t<p><span class="label"><b>Created By: </b></span><span class="value">{{createdBy}}</span></p>\r\n\t\t\t\t<p><span class="label"><b>Created Date: </b></span><span class="value">{{createdDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span></p>\r\n\t\t\t\t<p><span class="label"><b>Updated By: </b></span><span class="value">{{updatedBy}}</span></p>\r\n\t\t\t\t<p><span class="label"><b>Updated Date: </b></span><span class="value">{{updatedDate | date: \'MM/dd/yyyy h:mm:ss a\'}}</span></p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class="clear"></div>\r\n\t\t</div>\r\n\t\t<div class="modal-footer">\r\n\t\t\t<button type="button" class="btn btn-info" data-dismiss="modal" id="" name="" (click)="dismissModel()">Close</button>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</ng-template>\r\n'},JkqO:function(t,e,s){"use strict";s.r(e),e.default='<div style="border: 1px solid red">roles-list Component</div>\r\n\x3c!--<h1>Page will Done Soon</h1>--\x3e'},"K+Zu":function(t,e,s){"use strict";s.r(e),e.default='<style type="text/css">\r\n    .level1 td {\r\n        background-color: #7cb5d2;\r\n        padding-top: 3px !important;\r\n        padding-bottom: 3px !important;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .level2 td {\r\n        background-color: #bc94b7;\r\n        padding-top: 3px !important;\r\n        padding-bottom: 3px !important;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .level3 td {\r\n        background-color: #fde05e;\r\n        padding-top: 3px !important;\r\n        padding-bottom: 3px !important;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .level4 td {\r\n        background-color: #f68e51;\r\n        padding-top: 3px !important;\r\n        padding-bottom: 3px !important;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .level5 td {\r\n        background-color: #bcd74a;\r\n        padding-top: 3px !important;\r\n        padding-bottom: 3px !important;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .level6 td {\r\n        background-color: #f8e0c8;\r\n        padding-top: 3px !important;\r\n        padding-bottom: 3px !important;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .level1 {\r\n    }\r\n\r\n    .level2 td:first-child {\r\n        padding-left: 25px;\r\n    }\r\n\r\n    .level3 td:first-child {\r\n        padding-left: 50px;\r\n    }\r\n\r\n    .level4 td:first-child {\r\n        padding-left: 75px;\r\n    }\r\n\r\n    .level5 td:first-child {\r\n        padding-left: 100px;\r\n    }\r\n\r\n    .level6 td:first-child {\r\n        padding-left: 125px;\r\n    }\r\n\r\n    \r\n</style>\r\n<div>\r\n    <div class="col-md-12">\r\n        <div class="x_panel" style="">\r\n            <div class="x_content">\r\n                <nav aria-label="breadcrumb">\r\n                    <ol class="breadcrumb">\r\n                        <li class="breadcrumb-item" aria-current="page">Admin</li>\r\n                        <li class="breadcrumb-item" aria-current="page">Roles</li>\r\n                        <li class="breadcrumb-item active" aria-current="page">Edit Role</li>\r\n                    </ol>\r\n                </nav>\r\n                <div class="pheading">\r\n                    <h4 class="page-heading">Edit User Role</h4>\r\n                    \x3c!--<form id="" class="lgrey-bg div8 filters" name="" action="#" method="post" onsubmit="return false;">--\x3e\r\n                        <div class="col-sm-3 emp-filter">\r\n                            <label>Edit User Role</label>\r\n                            <br>\r\n                            <select [(ngModel)]="currentUserRole.id" (change)="userRoleChanged($event)">\r\n                                <option value="0">Select</option>\r\n                                <option *ngFor="let role of userRoles"  [value]="role.id">{{role.name}}</option>\r\n                            </select>\r\n                        </div>\r\n                        \r\n                    \x3c!--</form>--\x3e\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="col-md-12 col-sm-12 col-xs-12 po-ro-setup">\r\n        <div class="x_panel">\r\n            <div class="tab-content">\r\n                <div id="" class="table-responsive default-bg clear">\r\n                    <table class="table table-bordered table-striped role-setup-table">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Modules</th>\r\n                                <th>View</th>\r\n                                <th>Add</th>\r\n                                <th>Delete</th>\r\n                                <th>Update</th>\r\n                                <th>Reports</th>\r\n                                <th>Excell Upload</th>\r\n                                <th>Download</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <ng-container *ngFor="let module of sortedHierarchy;index as i">\r\n                                <tr class="level{{module.level}}" [hidden]="!module.visible">\r\n                                    <td (click)="showChildModules(module,$event)" style="cursor:pointer;">\r\n                                        {{module.name}}\r\n\r\n                                        <i  *ngIf="!module.isPage"  class="fa fa-caret-right"></i>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="checkbox" [checked]="module.rolePermission.canView == true" (change)="permissionChecked($event,module,\'canView\')"/>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="checkbox" [checked]="module.rolePermission.canAdd == true" (change)="permissionChecked($event,module,\'canAdd\')"  />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="checkbox" [checked]="module.rolePermission.canDelete == true" (change)="permissionChecked($event,module,\'canDelete\')"  />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="checkbox" [checked]="module.rolePermission.canUpdate == true" (change)="permissionChecked($event,module,\'canUpdate\')"  />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input *ngIf="!module.isPage" type="checkbox" />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input *ngIf="!module.isPage" type="checkbox" />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input *ngIf="!module.isPage" type="checkbox" />\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-container>\r\n                        </tbody>\r\n                    </table>\r\n                    <div class="clear"></div>\r\n                    <div style="margin-top: 10px;"></div>\r\n                    <button class="btn btn-success pull-right" (click)="UpdateUserRole()">Save Changes</button>\r\n                    <div class="clear"></div>\r\n                    <br>\r\n                    <div class="padding5">\r\n                        <div class="pull-right"> \xa9 <span class="currentyear">2019</span> <a href="#">PAS</a> </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="clear"></div>\r\n            <br>\r\n            <br>\r\n            <br>\r\n            <br>\r\n        </div>\r\n    </div>\r\n</div>'},N6KH:function(t,e,s){"use strict";s.r(e),e.default=""},OjC9:function(t,e,s){"use strict";s.r(e),e.default=""},REh4:function(t,e,s){"use strict";s.r(e),e.default='<style type="text/css">\r\n    .level1 td {\r\n        background-color: #7cb5d2;\r\n        padding-top: 3px !important;\r\n        padding-bottom: 3px !important;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .level2 td {\r\n        background-color: #bc94b7;\r\n        padding-top: 3px !important;\r\n        padding-bottom: 3px !important;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .level3 td {\r\n        background-color: #fde05e;\r\n        padding-top: 3px !important;\r\n        padding-bottom: 3px !important;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .level4 td {\r\n        background-color: #f68e51;\r\n        padding-top: 3px !important;\r\n        padding-bottom: 3px !important;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .level5 td {\r\n        background-color: #bcd74a;\r\n        padding-top: 3px !important;\r\n        padding-bottom: 3px !important;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .level6 td {\r\n        background-color: #f8e0c8;\r\n        padding-top: 3px !important;\r\n        padding-bottom: 3px !important;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .level1 {\r\n    }\r\n\r\n    .level2 td:first-child {\r\n        padding-left: 25px;\r\n    }\r\n\r\n    .level3 td:first-child {\r\n        padding-left: 50px;\r\n    }\r\n\r\n    .level4 td:first-child {\r\n        padding-left: 75px;\r\n    }\r\n\r\n    .level5 td:first-child {\r\n        padding-left: 100px;\r\n    }\r\n\r\n    .level6 td:first-child {\r\n        padding-left: 125px;\r\n    }\r\n\r\n    \r\n</style>\r\n<div>\r\n    <div class="col-md-12">\r\n        <div class="x_panel" style="">\r\n            <div class="x_content">\r\n                <nav aria-label="breadcrumb">\r\n                    <ol class="breadcrumb">\r\n                        <li class="breadcrumb-item" aria-current="page">Admin</li>\r\n                        <li class="breadcrumb-item" aria-current="page">Roles</li>\r\n                        <li class="breadcrumb-item active" aria-current="page">Create Role</li>\r\n                    </ol>\r\n                </nav>\r\n                <div class="pheading">\r\n                    <h4 class="page-heading">Add New Role</h4>\r\n                    \x3c!--<form id="" class="lgrey-bg div8 filters" name="" action="#" method="post" onsubmit="return false;">--\x3e\r\n                        <div class="col-sm-3 emp-filter">\r\n                            <label>Role Name</label>\r\n                            <br>\r\n                            <input type="text" [(ngModel)]="currentUserRole.name" class="form-control">\r\n                        </div>\r\n                        <div class="col-sm-3 emp-filter">\r\n                            <label>Memo</label>\r\n                            <br>\r\n                            <input type="text" [(ngModel)]="currentUserRole.memo" class="form-control">\r\n                        </div>\r\n                    \x3c!--</form>--\x3e\r\n                </div>\r\n                <div class="clear"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="col-md-12 col-sm-12 col-xs-12 po-ro-setup">\r\n        <div class="x_panel">\r\n            <div class="tab-content">\r\n                <div id="" class="table-responsive default-bg clear">\r\n                    <table class="table table-bordered table-striped role-setup-table">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Modules</th>\r\n                                <th>View</th>\r\n                                <th>Add</th>\r\n                                <th>Delete</th>\r\n                                <th>Update</th>\r\n                                <th>Reports</th>\r\n                                <th>Excell Upload</th>\r\n                                <th>Download</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <ng-container *ngFor="let module of sortedHierarchy;index as i">\r\n                                <tr class="level{{module.level}}" [hidden]="!module.visible">\r\n                                    <td (click)="showChildModules(module,$event)" style="cursor:pointer;">\r\n                                        {{module.name}}\r\n\r\n                                        <i  *ngIf="!module.isPage"  class="fa fa-caret-down"></i>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="checkbox" [checked]="module.rolePermission.canView == true" (change)="permissionChecked($event,module,\'canView\')"/>\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="checkbox" [checked]="module.rolePermission.canAdd == true" (change)="permissionChecked($event,module,\'canAdd\')"  />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="checkbox" [checked]="module.rolePermission.canDelete == true" (change)="permissionChecked($event,module,\'canDelete\')"  />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input type="checkbox" [checked]="module.rolePermission.canUpdate == true" (change)="permissionChecked($event,module,\'canUpdate\')"  />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input *ngIf="!module.isPage" type="checkbox" />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input *ngIf="!module.isPage" type="checkbox" />\r\n                                    </td>\r\n                                    <td>\r\n                                        <input *ngIf="!module.isPage" type="checkbox" />\r\n                                    </td>\r\n                                </tr>\r\n                            </ng-container>\r\n                        </tbody>\r\n                    </table>\r\n                    <div class="clear"></div>\r\n                    <div style="margin-top: 10px;"></div>\r\n                    <button class="btn btn-success pull-right" (click)="addUserRole()">Add Role Details</button>\r\n                    <div class="clear"></div>\r\n                    <br>\r\n                    <div class="padding5">\r\n                        <div class="pull-right"> \xa9 <span class="currentyear">2019</span> <a href="#">PAS</a> </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="clear"></div>\r\n            <br>\r\n            <br>\r\n            <br>\r\n            <br>\r\n        </div>\r\n    </div>\r\n</div>'},bTWo:function(t,e,s){"use strict";s.r(e),e.default=""},nsGu:function(t,e,s){"use strict";s.r(e),e.default=""},qxN5:function(t,e,s){"use strict";s.r(e),e.default='<div [@fadeInOut] class="page-content">\r\n\r\n\t<div class="right_col" role="main">\r\n\t\t<div class="x_panel">\r\n\t\t\t<div class="x_content">\r\n\t\t\t\t<div style="text-align:center">\r\n\t\t\t\t\t<h4 class="page-heading clr-green">Roles Structure</h4>\r\n\r\n\r\n\t\t\t\t\t\x3c!--<a (click)="open(contentEdit)" matTooltip="Add Root Entity" class="btn btn-success nobg"><span><i class="fa fa-plus"></i></span></a>--\x3e\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t\x3c!--<p-toast [style]="{marginTop: \'80px\'}"></p-toast>--\x3e\r\n\t\t\t\t\x3c!--<button (click)="expandAll($event)">Toggle</button>--\x3e\r\n\t\t\t\t<div>\r\n\t\t\t\t<select [(ngModel)]="userRolelevelId" (change)="getRolesyuserRolelevelId(userRolelevelId)">\r\n\t\t\t\t\t<option *ngFor="let pow of allUserRoleLevelList" [value]="pow.userRoleLevelId">{{pow.description}}</option>\r\n\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<p-treeTable [value]="gridData" [columns]="cols1" selectionMode="checkbox" [(selection)]="selectedNode">\r\n\r\n\t\t\t\t\t\t<ng-template pTemplate="header" let-columns>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Entity Name</th>\r\n\t\t\t\t\t\t\t\t<th>Screen Name</th>\r\n\t\t\t\t\t\t\t\t<th>Field Name</th>\r\n\t\t\t\t\t\t\t\t<th>View</th>\r\n\t\t\t\t\t\t\t\t<th>Add</th>\r\n\t\t\t\t\t\t\t\t<th>Delete</th>\r\n\t\t\t\t\t\t\t\t<th>Update</th>\r\n\t\t\t\t\t\t\t\t<th>No Access</th>\r\n\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t\t<ng-template pTemplate="body" let-rowNode let-rowNode1 let-rowData="rowData" let-columns="columns">\r\n\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<p-treeTableToggler [rowNode]="rowNode"></p-treeTableToggler>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf="rowData.screenName==null || !rowData.screenName ">\r\n\t\t\t\t\t\t\t\t\t\t{{rowData.entityName}}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf="rowData.fieldName==null || !rowData.fieldName ">\r\n\t\t\t\t\t\t\t\t\t\t{{rowData.screenName}}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>{{rowData.fieldName}}</td>\r\n\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type="checkbox" value="4" [(ngModel)]="rowData.isViewed" (change)="SetViewValue(\'isViewed\',rowNode)" />\r\n\t\t\t\t\t\t\t\t\t\x3c!--<p-treeTableCheckbox [value]="rowNode"  (click)="SetViewValue(selectedNode,rowData,\'View\')"></p-treeTableCheckbox>--\x3e\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type="checkbox" value="4" [(ngModel)]="rowData.isAdd" (change)="SetViewValue(\'isAdd\',rowNode)" />\r\n\t\t\t\t\t\t\t\t\t\x3c!--<p-treeTableCheckbox [value]="rowNode1" (click)="SetViewValue(selectedNode,rowData,\'Add\')"></p-treeTableCheckbox>--\x3e\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type="checkbox" value="4" [(ngModel)]="rowData.isDelete" (change)="SetViewValue(\'isDelete\',rowNode)" />\r\n\t\t\t\t\t\t\t\t\t\x3c!--<p-treeTableCheckbox [value]="rowNode" (click)="SetViewValue(selectedNode,rowData,\'Delete\')"></p-treeTableCheckbox>--\x3e\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type="checkbox" value="4" [(ngModel)]="rowData.isUpdate" (change)="SetViewValue(\'isUpdate\',rowNode)" />\r\n\r\n\t\t\t\t\t\t\t\t\t\x3c!--<p-treeTableCheckbox [value]="rowNode" (click)="SetViewValue(selectedNode,rowData,\'Update\')"></p-treeTableCheckbox>--\x3e\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<input type="checkbox" value="4" [(ngModel)]="rowData.isNoAccess" (change)="SetViewValue(\'isNoAccess\', rowNode)" />\r\n\r\n\t\t\t\t\t\t\t\t\t\x3c!--<p-treeTableCheckbox [value]="rowNode" (click)="SetViewValue(selectedNode,rowData,\'No Access\')"></p-treeTableCheckbox>--\x3e\r\n\t\t\t\t\t\t\t\t</td>\r\n\r\n\t\t\t\t\t\t\t</tr>\r\n\r\n\r\n\t\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t</p-treeTable>\r\n\t\t\t\t\t\x3c!--<p-tree [value]="gridData" selectionMode="single" [(selection)]="selectedFile"></p-tree>--\x3e\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<button (click)="editItemAndCloseModel()" >Save</button>\r\n\t\t</div>\r\n\t</div>\r\n</div>'},rrPZ:function(t,e,s){"use strict";s.r(e),e.default='<div style="border: 1px solid red">roles-list-by-module Component</div>'},zgjS:function(t,e,s){"use strict";s.r(e),e.default=""}}]);